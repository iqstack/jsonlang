// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = typeof window === 'object';
// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = function print(x) {
    process['stdout'].write(x + '\n');
  };
  if (!Module['printErr']) Module['printErr'] = function printErr(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');
  var nodePath = require('path');

  Module['read'] = function read(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) { return Module['read'](filename, true) };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.log(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}



// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret; return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module['Runtime'] = Runtime;



//========================================
// Runtime essentials
//========================================

var __THREW__ = 0; // Used in checking for thrown exceptions.

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD, tempDouble, tempFloat;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try {
      func = eval('_' + ident); // explicit lookup
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }
  var JSsource = {};
  for (var fun in JSfuncs) {
    if (JSfuncs.hasOwnProperty(fun)) {
      // Elements of toCsource are arrays of three items:
      // the code, and the return value
      JSsource[fun] = parseJSFunc(JSfuncs[fun]);
    }
  }

  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=' + convertCode.returnValue + ';';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["cwrap"] = cwrap;
Module["ccall"] = ccall;


function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module['allocate'] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module['getMemory'] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module['Pointer_stringify'] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module['AsciiToString'] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module['stringToAscii'] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module['UTF8ArrayToString'] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8, ptr);
}
Module['UTF8ToString'] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module['stringToUTF8Array'] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
}
Module['stringToUTF8'] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module['lengthBytesUTF8'] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}
Module['UTF16ToString'] = UTF16ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF16'] = stringToUTF16;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}
Module['lengthBytesUTF16'] = lengthBytesUTF16;

function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}
Module['UTF32ToString'] = UTF32ToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}
Module['stringToUTF32'] = stringToUTF32;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}
Module['lengthBytesUTF32'] = lengthBytesUTF32;

function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  var i = 3;
  // params, etc.
  var basicTypes = {
    'v': 'void',
    'b': 'bool',
    'c': 'char',
    's': 'short',
    'i': 'int',
    'l': 'long',
    'f': 'float',
    'd': 'double',
    'w': 'wchar_t',
    'a': 'signed char',
    'h': 'unsigned char',
    't': 'unsigned short',
    'j': 'unsigned int',
    'm': 'unsigned long',
    'x': 'long long',
    'y': 'unsigned long long',
    'z': '...'
  };
  var subs = [];
  var first = true;
  function dump(x) {
    //return;
    if (x) Module.print(x);
    Module.print(func);
    var pre = '';
    for (var a = 0; a < i; a++) pre += ' ';
    Module.print (pre + '^');
  }
  function parseNested() {
    i++;
    if (func[i] === 'K') i++; // ignore const
    var parts = [];
    while (func[i] !== 'E') {
      if (func[i] === 'S') { // substitution
        i++;
        var next = func.indexOf('_', i);
        var num = func.substring(i, next) || 0;
        parts.push(subs[num] || '?');
        i = next+1;
        continue;
      }
      if (func[i] === 'C') { // constructor
        parts.push(parts[parts.length-1]);
        i += 2;
        continue;
      }
      var size = parseInt(func.substr(i));
      var pre = size.toString().length;
      if (!size || !pre) { i--; break; } // counter i++ below us
      var curr = func.substr(i + pre, size);
      parts.push(curr);
      subs.push(curr);
      i += pre + size;
    }
    i++; // skip E
    return parts;
  }
  function parse(rawList, limit, allowVoid) { // main parser
    limit = limit || Infinity;
    var ret = '', list = [];
    function flushList() {
      return '(' + list.join(', ') + ')';
    }
    var name;
    if (func[i] === 'N') {
      // namespaced N-E
      name = parseNested().join('::');
      limit--;
      if (limit === 0) return rawList ? [name] : name;
    } else {
      // not namespaced
      if (func[i] === 'K' || (first && func[i] === 'L')) i++; // ignore const and first 'L'
      var size = parseInt(func.substr(i));
      if (size) {
        var pre = size.toString().length;
        name = func.substr(i + pre, size);
        i += pre + size;
      }
    }
    first = false;
    if (func[i] === 'I') {
      i++;
      var iList = parse(true);
      var iRet = parse(true, 1, true);
      ret += iRet[0] + ' ' + name + '<' + iList.join(', ') + '>';
    } else {
      ret = name;
    }
    paramLoop: while (i < func.length && limit-- > 0) {
      //dump('paramLoop');
      var c = func[i++];
      if (c in basicTypes) {
        list.push(basicTypes[c]);
      } else {
        switch (c) {
          case 'P': list.push(parse(true, 1, true)[0] + '*'); break; // pointer
          case 'R': list.push(parse(true, 1, true)[0] + '&'); break; // reference
          case 'L': { // literal
            i++; // skip basic type
            var end = func.indexOf('E', i);
            var size = end - i;
            list.push(func.substr(i, size));
            i += size + 2; // size + 'EE'
            break;
          }
          case 'A': { // array
            var size = parseInt(func.substr(i));
            i += size.toString().length;
            if (func[i] !== '_') throw '?';
            i++; // skip _
            list.push(parse(true, 1, true)[0] + ' [' + size + ']');
            break;
          }
          case 'E': break paramLoop;
          default: ret += '?' + c; break paramLoop;
        }
      }
    }
    if (!allowVoid && list.length === 1 && list[0] === 'void') list = []; // avoid (void)
    if (rawList) {
      if (ret) {
        list.push(ret + '?');
      }
      return list;
    } else {
      return ret + flushList();
    }
  }
  var parsed = func;
  try {
    // Special-case the entry point, since its name differs from other name mangling.
    if (func == 'Object._main' || func == '_main') {
      return 'main()';
    }
    if (typeof func === 'number') func = Pointer_stringify(func);
    if (func[0] !== '_') return func;
    if (func[1] !== '_') return func; // C function
    if (func[2] !== 'Z') return func;
    switch (func[3]) {
      case 'n': return 'operator new()';
      case 'd': return 'operator delete()';
    }
    parsed = parse();
  } catch(e) {
    parsed += '?';
  }
  if (parsed.indexOf('?') >= 0 && !hasLibcxxabi) {
    Runtime.warnOnce('warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  }
  return parsed;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module['stackTrace'] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function enlargeMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with ALLOW_MEMORY_GROWTH which adjusts the size at runtime but prevents some optimizations, or (3) set Module.TOTAL_MEMORY before the program runs.');
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  Module.printErr('increasing TOTAL_MEMORY to ' + totalMemory + ' to be compliant with the asm.js spec (and given that TOTAL_STACK=' + TOTAL_STACK + ')');
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');

var buffer;
buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);

// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module['writeAsciiToMemory'] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module['removeRunDependency'] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 63792;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_parser_cpp() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });
  

/* memory initializer */ allocate([108,15,0,0,31,63,0,0,148,15,0,0,152,62,0,0,120,3,0,0,0,0,0,0,148,15,0,0,218,62,0,0,232,3,0,0,0,0,0,0,108,15,0,0,39,198,0,0,148,15,0,0,32,198,0,0,48,0,0,0,0,0,0,0,148,15,0,0,25,198,0,0,48,0,0,0,0,0,0,0,148,15,0,0,18,198,0,0,48,0,0,0,0,0,0,0,148,15,0,0,10,198,0,0,48,0,0,0,0,0,0,0,148,15,0,0,248,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,234,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,227,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,217,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,209,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,198,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,191,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,174,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,158,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,142,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,128,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,120,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,100,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,94,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,87,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,80,197,0,0,48,0,0,0,0,0,0,0,148,15,0,0,75,197,0,0,48,0,0,0,0,0,0,0,108,15,0,0,119,204,0,0,148,15,0,0,171,203,0,0,176,1,0,0,0,0,0,0,148,15,0,0,136,203,0,0,144,1,0,0,0,0,0,0,148,15,0,0,204,203,0,0,192,1,0,0,0,0,0,0,108,15,0,0,233,203,0,0,148,15,0,0,82,204,0,0,176,1,0,0,0,0,0,0,148,15,0,0,48,204,0,0,176,1,0,0,0,0,0,0,148,15,0,0,6,204,0,0,144,1,0,0,0,0,0,0,148,15,0,0,193,204,0,0,192,1,0,0,0,0,0,0,108,15,0,0,59,205,0,0,148,15,0,0,232,211,0,0,192,1,0,0,0,0,0,0,148,15,0,0,153,212,0,0,192,1,0,0,0,0,0,0,148,15,0,0,240,212,0,0,192,1,0,0,0,0,0,0,148,15,0,0,15,214,0,0,120,3,0,0,0,0,0,0,148,15,0,0,62,214,0,0,136,3,0,0,0,0,0,0,148,15,0,0,183,214,0,0,112,2,0,0,0,0,0,0,108,15,0,0,196,214,0,0,148,15,0,0,209,214,0,0,112,2,0,0,0,0,0,0,108,15,0,0,227,214,0,0,148,15,0,0,240,214,0,0,112,2,0,0,0,0,0,0,148,15,0,0,252,214,0,0,136,2,0,0,0,0,0,0,148,15,0,0,29,215,0,0,160,2,0,0,0,0,0,0,148,15,0,0,99,215,0,0,160,2,0,0,0,0,0,0,148,15,0,0,63,215,0,0,192,2,0,0,0,0,0,0,148,15,0,0,133,215,0,0,176,2,0,0,0,0,0,0,148,15,0,0,170,215,0,0,176,2,0,0,0,0,0,0,148,15,0,0,87,237,0,0,128,3,0,0,0,0,0,0,148,15,0,0,150,237,0,0,128,3,0,0,0,0,0,0,148,15,0,0,174,237,0,0,120,3,0,0,0,0,0,0,148,15,0,0,199,237,0,0,120,3,0,0,0,0,0,0,148,15,0,0,223,237,0,0,24,11,0,0,0,0,0,0,108,15,0,0,249,237,0,0,148,15,0,0,11,238,0,0,80,3,0,0,0,0,0,0,148,15,0,0,53,238,0,0,80,3,0,0,0,0,0,0,108,15,0,0,95,238,0,0,108,15,0,0,144,238,0,0,188,15,0,0,193,238,0,0,0,0,0,0,1,0,0,0,88,3,0,0,3,244,255,255,188,15,0,0,240,238,0,0,0,0,0,0,1,0,0,0,104,3,0,0,3,244,255,255,188,15,0,0,31,239,0,0,0,0,0,0,1,0,0,0,88,3,0,0,3,244,255,255,188,15,0,0,78,239,0,0,0,0,0,0,1,0,0,0,104,3,0,0,3,244,255,255,188,15,0,0,125,239,0,0,3,0,0,0,2,0,0,0,136,3,0,0,2,0,0,0,184,3,0,0,2,8,0,0,148,15,0,0,173,239,0,0,48,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,15,0,0,41,240,0,0,16,11,0,0,0,0,0,0,188,15,0,0,63,240,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,64,10,0,0,2,0,0,0,188,15,0,0,81,240,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,72,10,0,0,2,0,0,0,188,15,0,0,115,240,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,72,10,0,0,2,0,0,0,188,15,0,0,150,240,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,72,10,0,0,2,0,0,0,148,15,0,0,185,240,0,0,144,4,0,0,0,0,0,0,148,15,0,0,219,240,0,0,144,4,0,0,0,0,0,0,188,15,0,0,254,240,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,72,10,0,0,2,0,0,0,148,15,0,0,32,241,0,0,32,4,0,0,0,0,0,0,148,15,0,0,54,241,0,0,32,4,0,0,0,0,0,0,148,15,0,0,74,241,0,0,32,4,0,0,0,0,0,0,188,15,0,0,94,241,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,64,10,0,0,2,0,0,0,148,15,0,0,112,241,0,0,32,4,0,0,0,0,0,0,148,15,0,0,133,241,0,0,32,4,0,0,0,0,0,0,188,15,0,0,154,241,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,80,10,0,0,0,0,0,0,188,15,0,0,222,241,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,104,10,0,0,0,0,0,0,188,15,0,0,34,242,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,128,10,0,0,0,0,0,0,188,15,0,0,102,242,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,152,10,0,0,0,0,0,0,188,15,0,0,170,242,0,0,0,0,0,0,3,0,0,0,32,4,0,0,2,0,0,0,176,10,0,0,2,0,0,0,184,10,0,0,0,8,0,0,188,15,0,0,239,242,0,0,0,0,0,0,3,0,0,0,32,4,0,0,2,0,0,0,176,10,0,0,2,0,0,0,192,10,0,0,0,8,0,0,188,15,0,0,52,243,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,200,10,0,0,0,8,0,0,188,15,0,0,121,243,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,200,10,0,0,0,8,0,0,188,15,0,0,190,243,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,208,10,0,0,2,0,0,0,188,15,0,0,218,243,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,208,10,0,0,2,0,0,0,188,15,0,0,246,243,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,208,10,0,0,2,0,0,0,188,15,0,0,18,244,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,208,10,0,0,2,0,0,0,188,15,0,0,46,244,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,216,10,0,0,0,0,0,0,188,15,0,0,116,244,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,224,10,0,0,0,0,0,0,188,15,0,0,186,244,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,232,10,0,0,0,0,0,0,188,15,0,0,0,245,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,240,10,0,0,0,0,0,0,188,15,0,0,70,245,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,248,10,0,0,2,0,0,0,188,15,0,0,91,245,0,0,0,0,0,0,2,0,0,0,32,4,0,0,2,0,0,0,248,10,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,15,0,0,183,248,0,0,108,15,0,0,160,248,0,0,188,15,0,0,138,248,0,0,0,0,0,0,1,0,0,0,8,11,0,0,0,0,0,0,188,15,0,0,91,248,0,0,0,0,0,0,1,0,0,0,8,11,0,0,0,0,0,0,188,15,0,0,69,248,0,0,0,0,0,0,1,0,0,0,0,11,0,0,0,0,0,0,188,15,0,0,22,248,0,0,0,0,0,0,1,0,0,0,0,11,0,0,0,0,0,0,108,15,0,0,3,248,0,0,108,15,0,0,225,247,0,0,108,15,0,0,191,247,0,0,108,15,0,0,170,247,0,0,108,15,0,0,149,247,0,0,108,15,0,0,124,247,0,0,108,15,0,0,99,247,0,0,108,15,0,0,74,247,0,0,108,15,0,0,49,247,0,0,108,15,0,0,25,247,0,0,108,15,0,0,44,248,0,0,108,15,0,0,113,248,0,0,108,15,0,0,204,248,0,0,148,15,0,0,229,248,0,0,120,2,0,0,0,0,0,0,108,15,0,0,252,248,0,0,148,15,0,0,21,249,0,0,40,11,0,0,0,0,0,0,64,0,0,0,0,0,0,0,32,0,0,0,1,0,0,0,2,0,0,0,56,0,0,0,248,255,255,255,32,0,0,0,3,0,0,0,4,0,0,0,192,255,255,255,192,255,255,255,32,0,0,0,5,0,0,0,6,0,0,0,64,0,0,0,0,0,0,0,136,3,0,0,7,0,0,0,8,0,0,0,192,255,255,255,192,255,255,255,136,3,0,0,9,0,0,0,10,0,0,0,0,0,0,0,16,0,0,0,11,0,0,0,12,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,76,11,0,0,24,12,0,0,136,11,0,0,156,11,0,0,84,12,0,0,104,12,0,0,64,12,0,0,44,12,0,0,116,11,0,0,96,11,0,0,64,0,0,0,0,0,0,0,232,3,0,0,13,0,0,0,14,0,0,0,56,0,0,0,248,255,255,255,232,3,0,0,15,0,0,0,16,0,0,0,192,255,255,255,192,255,255,255,232,3,0,0,17,0,0,0,18,0,0,0,56,0,0,0,0,0,0,0,184,3,0,0,19,0,0,0,20,0,0,0,200,255,255,255,200,255,255,255,184,3,0,0,21,0,0,0,22,0,0,0,0,0,0,0,48,0,0,0,23,0,0,0,24,0,0,0,0,0,0,0,120,0,0,0,25,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,0,27,0,0,0,28,0,0,0,0,0,0,0,8,1,0,0,29,0,0,0,30,0,0,0,0,0,0,0,152,0,0,0,23,0,0,0,31,0,0,0,0,0,0,0,24,1,0,0,23,0,0,0,32,0,0,0,0,0,0,0,136,0,0,0,23,0,0,0,33,0,0,0,0,0,0,0,104,1,0,0,23,0,0,0,34,0,0,0,0,0,0,0,216,0,0,0,23,0,0,0,35,0,0,0,0,0,0,0,104,0,0,0,23,0,0,0,36,0,0,0,0,0,0,0,120,1,0,0,23,0,0,0,37,0,0,0,0,0,0,0,72,1,0,0,23,0,0,0,38,0,0,0,0,0,0,0,56,1,0,0,23,0,0,0,39,0,0,0,0,0,0,0,88,1,0,0,23,0,0,0,40,0,0,0,0,0,0,0,40,1,0,0,41,0,0,0,42,0,0,0,0,0,0,0,72,0,0,0,43,0,0,0,44,0,0,0,0,0,0,0,248,0,0,0,23,0,0,0,45,0,0,0,0,0,0,0,232,0,0,0,23,0,0,0,46,0,0,0,0,0,0,0,184,0,0,0,47,0,0,0,48,0,0,0,0,0,0,0,200,0,0,0,49,0,0,0,50,0,0,0,0,0,0,0,88,0,0,0,51,0,0,0,52,0,0,0,0,0,0,0,168,0,0,0,53,0,0,0,54,0,0,0,0,0,0,0,8,2,0,0,55,0,0,0,0,0,0,0,248,1,0,0,56,0,0,0,57,0,0,0,0,0,0,0,216,1,0,0,58,0,0,0,59,0,0,0,0,0,0,0,200,1,0,0,58,0,0,0,60,0,0,0,0,0,0,0,232,1,0,0,61,0,0,0,62,0,0,0,0,0,0,0,160,1,0,0,63,0,0,0,64,0,0,0,0,0,0,0,32,2,0,0,65,0,0,0,66,0,0,0,0,0,0,0,16,2,0,0,67,0,0,0,68,0,0,0,0,0,0,0,48,2,0,0,69,0,0,0,70,0,0,0,108,0,0,0,0,0,0,0,136,3,0,0,7,0,0,0,8,0,0,0,148,255,255,255,148,255,255,255,136,3,0,0,9,0,0,0,10,0,0,0,108,0,0,0,0,0,0,0,80,2,0,0,71,0,0,0,72,0,0,0,148,255,255,255,148,255,255,255,80,2,0,0,73,0,0,0,74,0,0,0,180,14,0,0,140,14,0,0,160,14,0,0,200,14,0,0,0,0,0,0,64,2,0,0,75,0,0,0,76,0,0,0,2,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,6,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,96,2,0,0,77,0,0,0,78,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,120,2,0,0,79,0,0,0,80,0,0,0,8,0,0,0,0,0,0,0,144,2,0,0,81,0,0,0,82,0,0,0,9,0,0,0,0,0,0,0,176,2,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,5,0,0,0,3,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,224,2,0,0,83,0,0,0,87,0,0,0,85,0,0,0,86,0,0,0,5,0,0,0,4,0,0,0,2,0,0,0,4,0,0,0,0,0,0,0,240,2,0,0,83,0,0,0,88,0,0,0,85,0,0,0,86,0,0,0,5,0,0,0,5,0,0,0,3,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,158,218,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,136,19,0,0,248,19,0,0,104,20,0,0,104,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,58,0,0,216,28,0,0,216,22,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,64,235,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,8,0,0,0,56,231,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,8,0,0,0,48,227,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,89,0,0,0,90,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,59,0,0,0,60,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,91,0,0,0,92,0,0,0,93,0,0,0,94,0,0,0,95,0,0,0,96,0,0,0,97,0,0,0,98,0,0,0,99,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,103,0,0,0,104,0,0,0,105,0,0,0,106,0,0,0,107,0,0,0,108,0,0,0,109,0,0,0,110,0,0,0,111,0,0,0,112,0,0,0,113,0,0,0,114,0,0,0,115,0,0,0,116,0,0,0,117,0,0,0,118,0,0,0,119,0,0,0,120,0,0,0,121,0,0,0,122,0,0,0,123,0,0,0,124,0,0,0,125,0,0,0,126,0,0,0,127], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+7380);
/* memory initializer */ allocate([3,0,0,89,0,0,0,90,0,0,0,3,0,0,0,11,0,0,0,6,0,0,0,6,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,5,0,0,0,13,0,0,0,6,0,0,0,0,0,0,0,16,3,0,0,89,0,0,0,91,0,0,0,4,0,0,0,11,0,0,0,6,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,12,0,0,0,16,0,0,0,17,0,0,0,7,0,0,0,14,0,0,0,8,0,0,0,0,0,0,0,32,3,0,0,92,0,0,0,93,0,0,0,5,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,18,0,0,0,2,0,0,0,2,0,0,0,19,0,0,0,4,0,0,0,9,0,0,0,15,0,0,0,10,0,0,0,0,0,0,0,48,3,0,0,92,0,0,0,94,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,20,0,0,0,21,0,0,0,11,0,0,0,3,0,0,0,12,0,0,0,0,0,0,0,120,3,0,0,92,0,0,0,95,0,0,0,1,0,0,0,1,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,19,0,0,0,4,0,0,0,9,0,0,0,3,0,0,0,12,0,0,0,0,0,0,0,128,3,0,0,89,0,0,0,96,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,6,0,0,0,15,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,5,0,0,0,14,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,136,3,0,0,7,0,0,0,8,0,0,0,248,255,255,255,248,255,255,255,136,3,0,0,9,0,0,0,10,0,0,0,8,0,0,0,0,0,0,0,160,3,0,0,97,0,0,0,98,0,0,0,248,255,255,255,248,255,255,255,160,3,0,0,99,0,0,0,100,0,0,0,4,0,0,0,0,0,0,0,184,3,0,0,19,0,0,0,20,0,0,0,252,255,255,255,252,255,255,255,184,3,0,0,21,0,0,0,22,0,0,0,4,0,0,0,0,0,0,0,208,3,0,0,101,0,0,0,102,0,0,0,252,255,255,255,252,255,255,255,208,3,0,0,103,0,0,0,104,0,0,0,0,0,0,0,64,3,0,0,105,0,0,0,106,0,0,0,8,0,0,0,0,0,0,0,80,3,0,0,107,0,0,0,108,0,0,0,0,0,0,0,8,4,0,0,109,0,0,0,110,0,0,0,22,0,0,0,1,0,0,0,16,0,0,0,17,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,111,0,0,0,112,0,0,0,113,0,0,0,1,0,0,0,8,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,5,0,0,114,0,0,0,115,0,0,0,113,0,0,0,2,0,0,0,9,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,5,0,0,116,0,0,0,117,0,0,0,113,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,5,0,0,118,0,0,0,119,0,0,0,113,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,5,0,0,120,0,0,0,121,0,0,0,113,0,0,0,3,0,0,0,4,0,0,0,23,0,0,0,5,0,0,0,24,0,0,0,1,0,0,0,2,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,5,0,0,122,0,0,0,123,0,0,0,113,0,0,0,7,0,0,0,8,0,0,0,25,0,0,0,9,0,0,0,26,0,0,0,3,0,0,0,4,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,5,0,0,124,0,0,0,125,0,0,0,113,0,0,0,23,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,1,0,0,0,248,255,255,255,224,5,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,6,0,0,126,0,0,0,127,0,0,0,113,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,2,0,0,0,248,255,255,255,8,6,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,6,0,0,128,0,0,0,129,0,0,0,113,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,6,0,0,130,0,0,0,131,0,0,0,113,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,6,0,0,132,0,0,0,133,0,0,0,113,0,0,0,39,0,0,0,40,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,41,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,6,0,0,134,0,0,0,135,0,0,0,113,0,0,0,42,0,0,0,43,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,44,0,0,0,18,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,6,0,0,136,0,0,0,137,0,0,0,113,0,0,0,45,0,0,0,46,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,47,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,6,0,0,138,0,0,0,139,0,0,0,113,0,0,0,48,0,0,0,49,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,50,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,6,0,0,140,0,0,0,141,0,0,0,113,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,7,0,0,142,0,0,0,143,0,0,0,113,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,7,0,0,144,0,0,0,145,0,0,0,113,0,0,0,1,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,7,0,0,146,0,0,0,147,0,0,0,113,0,0,0,2,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,7,0,0,148,0,0,0,149,0,0,0,113,0,0,0,20,0,0,0,8,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,7,0,0,150,0,0,0,151,0,0,0,113,0,0,0,21,0,0,0,9,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,4,0,0,152,0,0,0,153,0,0,0,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,5,0,0,154,0,0,0,155,0,0,0,113,0,0,0,13,0,0,0,22,0,0,0,14,0,0,0,23,0,0,0,15,0,0,0,1,0,0,0,24,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,4,0,0,156,0,0,0,157,0,0,0,113,0,0,0,3,0,0,0,4,0,0,0,12,0,0,0,51,0,0,0,52,0,0,0,13,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,5,0,0,158,0,0,0,159,0,0,0,113,0,0,0,54,0,0,0,55,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,0,0,0,0,80,5,0,0,160,0,0,0,161,0,0,0,113,0,0,0,56,0,0,0,57,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,32,4,0,0,162,0,0,0,163,0,0,0,113,0,0,0,0,0,0,0,48,4,0,0,162,0,0,0,164,0,0,0,113,0,0,0,25,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,16,0,0,0,26,0,0,0,17,0,0,0,27,0,0,0,18,0,0,0,5,0,0,0,28,0,0,0,14,0,0,0,0,0,0,0,80,4,0,0,162,0,0,0,165,0,0,0,113,0,0,0,5,0,0,0,6,0,0,0,15,0,0,0,58,0,0,0,59,0,0,0,16,0,0,0,60,0,0,0,0,0,0,0,112,4,0,0,162,0,0,0,166,0,0,0,113,0,0,0,7,0,0,0,8,0,0,0,17,0,0,0,61,0,0,0,62,0,0,0,18,0,0,0,63,0,0,0,0,0,0,0,144,4,0,0,162,0,0,0,167,0,0,0,113,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,64,0,0,0,65,0,0,0,20,0,0,0,66,0,0,0,0,0,0,0,176,4,0,0,162,0,0,0,168,0,0,0,113,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,64,0,0,0,65,0,0,0,20,0,0,0,66,0,0,0,0,0,0,0,192,4,0,0,162,0,0,0,169,0,0,0,113,0,0,0,9,0,0,0,10,0,0,0,19,0,0,0,64,0,0,0,65,0,0,0,20,0,0,0,66,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,37,0,0,0,89,0,0,0,45,0,0,0,37,0,0,0,109,0,0,0,45,0,0,0,37,0,0,0,100,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,114,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,102,0,0,0,97,0,0,0,108,0,0,0,115,0,0,0,101,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,110,0,0,0,101,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,114,0,0,0,115,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,117,0,0,0,114,0,0,0,100,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,83,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,77,0,0,0,111,0,0,0,110,0,0,0,0,0,0,0,84,0,0,0,117,0,0,0,101,0,0,0,0,0,0,0,87,0,0,0,101,0,0,0,100,0,0,0,0,0,0,0,84,0,0,0,104,0,0,0,117,0,0,0,0,0,0,0,70,0,0,0,114,0,0,0,105,0,0,0,0,0,0,0,83,0,0,0,97,0,0,0,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,114,0,0,0,117,0,0,0,97,0,0,0,114,0,0,0,121,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,99,0,0,0,104,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,105,0,0,0,108,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,121,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,101,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,121,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,117,0,0,0,115,0,0,0,116,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,116,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,111,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,101,0,0,0,109,0,0,0,98,0,0,0,101,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,97,0,0,0,110,0,0,0,0,0,0,0,70,0,0,0,101,0,0,0,98,0,0,0,0,0,0,0,77,0,0,0,97,0,0,0,114,0,0,0,0,0,0,0,65,0,0,0,112,0,0,0,114,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,110,0,0,0,0,0,0,0,74,0,0,0,117,0,0,0,108,0,0,0,0,0,0,0,65,0,0,0,117,0,0,0,103,0,0,0,0,0,0,0,83,0,0,0,101,0,0,0,112,0,0,0,0,0,0,0,79,0,0,0,99,0,0,0,116,0,0,0,0,0,0,0,78,0,0,0,111,0,0,0,118,0,0,0,0,0,0,0,68,0,0,0,101,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,77,0,0,0,0,0,0,0,80,0,0,0,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,109,0,0,0,47,0,0,0,37,0,0,0,100,0,0,0,47,0,0,0,37,0,0,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,97,0,0,0,32,0,0,0,37,0,0,0,98,0,0,0,32,0,0,0,37,0,0,0,100,0,0,0,32,0,0,0,37,0,0,0,72,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,73,0,0,0,58,0,0,0,37,0,0,0,77,0,0,0,58,0,0,0,37,0,0,0,83,0,0,0,32,0,0,0,37,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,11,0,0,170,0,0,0,171,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,3,32,2,32,2,32,2,32,2,32,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,0,1,96,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,8,216,4,192,4,192,4,192,4,192,4,192,4,192,4,192,8,213,8,213,8,213,8,213,8,213,8,213,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,8,197,4,192,4,192,4,192,4,192,4,192,4,192,8,214,8,214,8,214,8,214,8,214,8,214,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,8,198,4,192,4,192,4,192,4,192,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,100,101,99,105,109,97,108,32,112,111,105,110,116,58,32,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,39,69,39,58,32,0,67,111,117,108,100,110,39,116,32,108,101,120,32,110,117,109,98,101,114,44,32,106,117,110,107,32,97,102,116,101,114,32,101,120,112,111,110,101,110,116,32,115,105,103,110,58,32,0,85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103,0,84,114,117,110,99,97,116,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,77,97,108,102,111,114,109,101,100,32,117,110,105,99,111,100,101,32,101,115,99,97,112,101,32,99,104,97,114,97,99,116,101,114,44,32,0,115,104,111,117,108,100,32,98,101,32,104,101,120,58,32,39,0,39,0,67,111,100,101,112,111,105,110,116,32,111,117,116,32,111,102,32,97,115,99,105,105,32,114,97,110,103,101,46,0,84,114,117,110,99,97,116,101,100,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,46,0,85,110,107,110,111,119,110,32,101,115,99,97,112,101,32,115,101,113,117,101,110,99,101,32,105,110,32,115,116,114,105,110,103,32,108,105,116,101,114,97,108,58,32,39,0,77,117,108,116,105,45,108,105,110,101,32,99,111,109,109,101,110,116,32,104,97,115,32,110,111,32,116,101,114,109,105,110,97,116,105,110,103,32,42,47,46,0,67,111,117,108,100,32,110,111,116,32,108,101,120,32,116,104,101,32,99,104,97,114,97,99,116,101,114,32,0,99,111,100,101,32,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,105,110,103,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,56,98,97,115,105,99,95,115,116,114,105,110,103,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,78,83,95,57,97,108,108,111,99,97,116,111,114,73,99,69,69,69,69,0,49,49,83,116,97,116,105,99,69,114,114,111,114,0,109,97,107,101,65,114,114,97,121,0,115,122,0,102,117,110,99,0,112,111,119,0,120,0,110,0,102,108,111,111,114,0,99,101,105,108,0,115,113,114,116,0,115,105,110,0,99,111,115,0,116,97,110,0,97,115,105,110,0,97,99,111,115,0,97,116,97,110,0,116,121,112,101,0,102,105,108,116,101,114,0,97,114,114,0,111,98,106,101,99,116,72,97,115,0,111,98,106,0,102,0,108,101,110,103,116,104,0,111,98,106,101,99,116,70,105,101,108,100,115,0,99,111,100,101,112,111,105,110,116,0,115,116,114,0,99,104,97,114,0,108,111,103,0,101,120,112,0,109,97,110,116,105,115,115,97,0,101,120,112,111,110,101,110,116,0,109,111,100,117,108,111,0,97,0,98,0,101,120,116,86,97,114,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,58,32,0,115,116,100,46,106,115,111,110,108,97,110,103,0,47,42,10,67,111,112,121,114,105,103,104,116,32,50,48,49,53,32,67,108,111,117,100,32,77,50,32,73,110,99,46,32,65,108,108,32,114,105,103,104,116,115,32,114,101,115,101,114,118,101,100,46,10,10,40,112,111,114,116,105,111,110,115,32,98,101,108,111,110,103,32,116,111,32,71,111,111,103,108,101,32,115,101,101,32,74,115,111,110,110,101,116,41,10,67,111,112,121,114,105,103,104,116,32,50,48,49,53,32,71,111,111,103,108,101,32,73,110,99,46,32,65,108,108,32,114,105,103,104,116,115,32,114,101,115,101,114,118,101,100,46,10,10,76,105,99,101,110,115,101,100,32,117,110,100,101,114,32,116,104,101,32,65,112,97,99,104,101,32,76,105,99,101,110,115,101,44,32,86,101,114,115,105,111,110,32,50,46,48,32,40,116,104,101,32,34,76,105,99,101,110,115,101,34,41,59,10,121,111,117,32,109,97,121,32,110,111,116,32,117,115,101,32,116,104,105,115,32,102,105,108,101,32,101,120,99,101,112,116,32,105,110,32,99,111,109,112,108,105,97,110,99,101,32,119,105,116,104,32,116,104,101,32,76,105,99,101,110,115,101,46,10,89,111,117,32,109,97,121,32,111,98,116,97,105,110,32,97,32,99,111,112,121,32,111,102,32,116,104,101,32,76,105,99,101,110,115,101,32,97,116,10,10,32,32,32,32,104,116,116,112,58,47,47,119,119,119,46,97,112,97,99,104,101,46,111,114,103,47,108,105,99,101,110,115,101,115,47,76,73,67,69,78,83,69,45,50,46,48,10,10,85,110,108,101,115,115,32,114,101,113,117,105,114,101,100,32,98,121,32,97,112,112,108,105,99,97,98,108,101,32,108,97,119,32,111,114,32,97,103,114,101,101,100,32,116,111,32,105,110,32,119,114,105,116,105,110,103,44,32,115,111,102,116,119,97,114,101,10,100,105,115,116,114,105,98,117,116,101,100,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,32,105,115,32,100,105,115,116,114,105,98,117,116,101,100,32,111,110,32,97,110,32,34,65,83,32,73,83,34,32,66,65,83,73,83,44,10,87,73,84,72,79,85,84,32,87,65,82,82,65,78,84,73,69,83,32,79,82,32,67,79,78,68,73,84,73,79,78,83,32,79,70,32,65,78,89,32,75,73,78,68,44,32,101,105,116,104,101,114,32,101,120,112,114,101,115,115,32,111,114,32,105,109,112,108,105,101,100,46,10,83,101,101,32,116,104,101,32,76,105,99,101,110,115,101,32,102,111,114,32,116,104,101,32,115,112,101,99,105,102,105,99,32,108,97,110,103,117,97,103,101,32,103,111,118,101,114,110,105,110,103,32,112,101,114,109,105,115,115,105,111,110,115,32,97,110,100,10,108,105,109,105,116,97,116,105,111,110,115,32,117,110,100,101,114,32,116,104,101,32,76,105,99,101,110,115,101,46,10,42,47,10,10,47,42,32,84,104,105,115,32,105,115,32,116,104,101,32,74,115,111,110,108,97,110,103,32,115,116,97,110,100,97,114,100,32,108,105,98,114,97,114,121,44,32,97,116,32,108,101,97,115,116,32,116,104,101,32,112,97,114,116,115,32,111,102,32,105,116,32,116,104,97,116,32,97,114,101,32,119,114,105,116,116,101,110,32,105,110,32,74,115,111,110,108,97,110,103,46,10,32,42,10,32,42,32,84,104,101,114,101,32,97,114,101,32,115,111,109,101,32,110,97,116,105,118,101,32,109,101,116,104,111,100,115,32,97,115,32,119,101,108,108,44,32,119,104,105,99,104,32,97,114,101,32,100,101,102,105,110,101,100,32,105,110,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,110,100,32,97,100,100,101,100,32,116,111,32,116,104,105,115,10,32,42,32,102,105,108,101,46,32,32,73,116,32,105,115,32,110,101,118,101,114,32,110,101,99,101,115,115,97,114,121,32,116,111,32,105,109,112,111,114,116,32,115,116,100,46,106,115,111,110,108,97,110,103,44,32,105,116,32,105,115,32,101,109,98,101,100,100,101,100,32,105,110,116,111,32,116,104,101,32,105,110,116,101,114,112,114,101,116,101,114,32,97,116,10,32,42,32,99,111,109,112,105,108,101,45,116,105,109,101,32,97,110,100,32,97,117,116,111,109,97,116,105,99,97,108,108,121,32,105,109,112,111,114,116,101,100,32,105,110,116,111,32,97,108,108,32,111,116,104,101,114,32,74,115,111,110,108,97,110,103,32,112,114,111,103,114,97,109,115,46,10,32,42,47,10,123,10,10,32,32,32,32,108,111,99,97,108,32,115,116,100,32,61,32,115,101,108,102,44,10,10,32,32,32,32,116,111,83,116,114,105,110,103,40,97,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,32,97,32,101,108,115,101,32,34,34,32,43,32,97,44,10,10,32,32,32,32,115,117,98,115,116,114,40,115,116,114,44,32,102,114,111,109,44,32,108,101,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,114,111,109,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,108,101,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,108,101,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,108,101,110,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,117,98,115,116,114,32,116,104,105,114,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,122,101,114,111,44,32,103,111,116,32,34,32,43,32,108,101,110,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,108,101,110,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,32,43,32,102,114,111,109,93,41,41,44,10,10,32,32,32,32,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,115,116,114,91,105,93,41,44,10,10,32,32,32,32,115,112,108,105,116,40,115,116,114,44,32,99,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,115,116,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,116,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,99,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,99,41,32,33,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,115,112,108,105,116,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,104,97,118,101,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,99,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,44,32,97,114,114,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,50,32,61,32,105,32,43,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,32,43,32,91,118,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,100,101,108,105,109,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,32,43,32,91,118,93,44,32,34,34,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,100,101,108,105,109,44,32,105,50,44,32,97,114,114,44,32,118,32,43,32,99,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,99,44,32,48,44,32,91,93,44,32,34,34,41,44,10,10,32,32,32,32,114,97,110,103,101,40,102,114,111,109,44,32,116,111,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,116,111,32,45,32,102,114,111,109,32,43,32,49,44,32,102,117,110,99,116,105,111,110,40,105,41,32,105,32,43,32,102,114,111,109,41,44,10,10,32,32,32,32,109,111,100,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,110,117,109,98,101,114,34,32,38,38,32,115,116,100,46,116,121,112,101,40,98,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,111,100,117,108,111,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,102,111,114,109,97,116,40,97,44,32,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,79,112,101,114,97,116,111,114,32,37,32,99,97,110,110,111,116,32,98,101,32,117,115,101,100,32,111,110,32,116,121,112,101,115,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,32,43,32,34,32,97,110,100,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,32,43,32,34,46,34,44,10,10,32,32,32,32,109,97,112,40,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,38,38,32,115,116,100,46], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+9437);
/* memory initializer */ allocate([116,121,112,101,40,97,114,114,41,32,33,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,109,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,44,32,102,117,110,99,116,105,111,110,40,105,41,32,102,117,110,99,40,97,114,114,91,105,93,41,41,44,10,10,32,32,32,32,106,111,105,110,40,115,101,112,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,114,114,91,105,93,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,49,44,32,102,105,114,115,116,44,32,114,117,110,110,105,110,103,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,102,105,114,115,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,97,114,114,91,105,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,49,44,32,102,97,108,115,101,44,32,114,117,110,110,105,110,103,32,43,32,115,101,112,32,43,32,97,114,114,91,105,93,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,115,101,112,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,48,44,32,116,114,117,101,44,32,91,93,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,106,111,105,110,32,102,105,114,115,116,32,112,97,114,97,109,101,116,101,114,32,115,104,111,117,108,100,32,98,101,32,115,116,114,105,110,103,32,111,114,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,115,101,112,41,44,10,10,32,32,32,32,108,105,110,101,115,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,97,114,114,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,102,111,114,109,97,116,40,115,116,114,44,32,118,97,108,115,41,58,58,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,116,104,101,32,109,105,110,105,45,108,97,110,103,117,97,103,101,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,40,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,33,61,32,34,41,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,32,43,32,49,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,32,43,32,49,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,35,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,97,108,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,122,101,114,111,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,45,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,108,101,102,116,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,32,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,98,108,97,110,107,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,43,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,43,32,123,32,115,105,103,110,58,32,116,114,117,101,32,125,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,123,32,97,108,116,58,32,102,97,108,115,101,44,32,122,101,114,111,58,32,102,97,108,115,101,44,32,108,101,102,116,58,32,102,97,108,115,101,44,32,98,108,97,110,107,58,32,102,97,108,115,101,44,32,115,105,103,110,58,32,102,97,108,115,101,125,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,38,38,32,115,116,114,91,105,93,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,43,49,44,32,118,58,32,34,42,34,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,106,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,49,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,50,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,50,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,51,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,51,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,52,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,52,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,53,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,53,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,54,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,54,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,55,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,55,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,56,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,56,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,57,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,106,32,43,32,49,44,32,118,32,42,32,49,48,32,43,32,57,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,106,44,32,118,58,32,118,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,110,115,117,109,101,40,115,116,114,44,32,105,44,32,48,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,46,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,105,32,43,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,44,32,118,58,32,110,117,108,108,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,73,103,110,111,114,101,100,44,32,105,102,32,105,116,32,101,120,105,115,116,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,104,34,32,124,124,32,99,32,61,61,32,34,108,34,32,124,124,32,99,32,61,61,32,34,76,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,32,43,32,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,100,34,32,124,124,32,99,32,61,61,32,34,105,34,32,124,124,32,99,32,61,61,32,34,117,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,100,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,111,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,88,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,120,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,69,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,101,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,70,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,102,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,71,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,103,34,44,32,99,97,112,115,58,32,116,114,117,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,99,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,115,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,32,105,58,32,105,32,43,32,49,44,32,118,58,32,34,37,34,44,32,99,97,112,115,58,32,102,97,108,115,101,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,114,101,99,111,103,110,105,115,101,100,32,99,111,110,118,101,114,115,105,111,110,32,116,121,112,101,58,32,34,32,43,32,99,59,10,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,100,32,105,110,105,116,105,97,108,32,37,44,32,110,111,119,32,116,104,101,32,114,101,115,116,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,84,114,117,110,99,97,116,101,100,32,102,111,114,109,97,116,32,99,111,100,101,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,107,101,121,32,61,32,116,114,121,95,112,97,114,115,101,95,109,97,112,112,105,110,103,95,107,101,121,40,115,116,114,44,32,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,116,114,121,95,112,97,114,115,101,95,99,102,108,97,103,115,40,115,116,114,44,32,109,107,101,121,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,32,116,114,121,95,112,97,114,115,101,95,102,105,101,108,100,95,119,105,100,116,104,40,115,116,114,44,32,99,102,108,97,103,115,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,32,116,114,121,95,112,97,114,115,101,95,112,114,101,99,105,115,105,111,110,40,115,116,114,44,32,102,119,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,101,110,95,109,111,100,32,61,32,116,114,121,95,112,97,114,115,101,95,108,101,110,103,116,104,95,109,111,100,105,102,105,101,114,40,115,116,114,44,32,112,114,101,99,46,105,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,116,121,112,101,32,61,32,112,97,114,115,101,95,99,111,110,118,95,116,121,112,101,40,115,116,114,44,32,108,101,110,95,109,111,100,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,58,32,99,116,121,112,101,46,105,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,107,101,121,58,32,109,107,101,121,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,58,32,99,102,108,97,103,115,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,102,119,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,112,114,101,99,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,116,121,112,101,58,32,99,116,121,112,101,46,118,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,112,115,58,32,99,116,121,112,101,46,99,97,112,115,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,10,32,32,32,32,32,32,32,32,47,47,32,80,97,114,115,101,32,97,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,40,99,111,110,116,97,105,110,105,110,103,32,110,111,110,101,32,111,114,32,109,111,114,101,32,37,32,102,111,114,109,97,116,32,116,97,103,115,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,44,32,111,117,116,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,117,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,32,61,32,115,116,114,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,32,61,32,112,97,114,115,101,95,99,111,100,101,40,115,116,114,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,114,46,105,44,32,111,117,116,43,91,114,46,99,111,100,101,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,97,115,116,32,61,32,111,117,116,91,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,112,112,101,110,100,32,61,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,62,32,48,32,38,38,32,115,116,100,46,116,121,112,101,40,108,97,115,116,41,32,61,61,32,34,115,116,114,105,110,103,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,105,32,43,32,49,44,32,105,102,32,97,112,112,101,110,100,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,45,49,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,108,97,115,116,32,43,32,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,117,110,99,116,105,111,110,40,105,41,32,105,102,32,105,32,60,32,115,116,100,46,108,101,110,103,116,104,40,111,117,116,41,32,116,104,101,110,32,111,117,116,91,105,93,32,101,108,115,101,32,99,41,41,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,115,32,61,32,112,97,114,115,101,95,99,111,100,101,115,40,115,116,114,44,32,48,44,32,91,93,41,59,10,10,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,32,32,32,32,32,32,32,32,47,47,32,70,111,114,109,97,116,32,116,104,101,32,118,97,108,117,101,115,32,47,47,10,32,32,32,32,32,32,32,32,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,10,10,32,32,32,32,32,32,32,32,47,47,32,85,115,101,102,117,108,32,117,116,105,108,105,116,105,101,115,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,100,105,110,103,40,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,119,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,119,32,60,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,32,45,32,49,44,32,118,32,43,32,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,119,44,32,34,34,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,108,101,102,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,108,101,102,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,32,43,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,65,100,100,32,115,32,116,111,32,116,104,101,32,114,105,103,104,116,32,111,102,32,115,116,114,32,115,111,32,116,104,97,116,32,105,116,115,32,108,101,110,103,116,104,32,105,115,32,97,116,32,108,101,97,115,116,32,119,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,97,100,95,114,105,103,104,116,40,115,116,114,44,32,119,44,32,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,112,97,100,100,105,110,103,40,119,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,44,32,115,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,40,101,46,103,46,44,32,100,101,99,105,109,97,108,32,111,114,32,111,99,116,97,108,41,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,114,97,100,105,120,44,32,122,101,114,111,95,112,114,101,102,105,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,122,101,114,111,95,112,114,101,102,105,120,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,114,97,100,105,120,41,41,32,43,32,40,110,32,37,32,114,97,100,105,120,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,101,99,50,32,61,32,112,97,100,95,108,101,102,116,40,100,101,99,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,100,101,99,50,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,110,32,105,110,116,101,103,101,114,32,105,110,32,104,101,120,97,100,101,99,105,109,97,108,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,104,101,120,40,110,95,95,44,32,109,105,110,95,99,104,97,114,115,44,32,109,105,110,95,100,105,103,105,116,115,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,97,100,100,95,122,101,114,111,120,44,32,99,97,112,105,116,97,108,115,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,117,109,101,114,97,108,115,32,61,32,91,48,44,32,49,44,32,50,44,32,51,44,32,52,44,32,53,44,32,54,44,32,55,44,32,56,44,32,57,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,91,34,65,34,44,32,34,66,34,44,32,34,67,34,44,32,34,68,34,44,32,34,69,34,44,32,34,70,34,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,34,97,34,44,32,34,98,34,44,32,34,99,34,44,32,34,100,34,44,32,34,101,34,44,32,34,102,34,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,110,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+19677);
/* memory initializer */ allocate([32,32,32,105,102,32,110,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,32,47,32,49,54,41,41,32,43,32,110,117,109,101,114,97,108,115,91,110,32,37,32,49,54,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,32,61,32,105,102,32,115,116,100,46,102,108,111,111,114,40,110,95,41,32,61,61,32,48,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,97,117,120,40,115,116,100,46,102,108,111,111,114,40,110,95,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,101,103,32,61,32,110,95,95,32,60,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,109,105,110,95,99,104,97,114,115,32,45,32,40,105,102,32,110,101,103,32,124,124,32,98,108,97,110,107,32,124,124,32,115,105,103,110,32,116,104,101,110,32,49,32,101,108,115,101,32,48,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,45,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,50,32,101,108,115,101,32,48,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,115,116,100,46,109,97,120,40,122,112,44,32,109,105,110,95,100,105,103,105,116,115,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,104,101,120,50,32,61,32,40,105,102,32,97,100,100,95,122,101,114,111,120,32,116,104,101,110,32,40,105,102,32,99,97,112,105,116,97,108,115,32,116,104,101,110,32,34,48,88,34,32,101,108,115,101,32,34,48,120,34,41,32,101,108,115,101,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,112,97,100,95,108,101,102,116,40,104,101,120,44,32,122,112,50,44,32,34,48,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,40,105,102,32,110,101,103,32,116,104,101,110,32,34,45,34,32,101,108,115,101,32,105,102,32,115,105,103,110,32,116,104,101,110,32,34,43,34,32,101,108,115,101,32,105,102,32,98,108,97,110,107,32,116,104,101,110,32,34,32,34,32,101,108,115,101,32,34,34,41,32,43,32,104,101,120,50,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,115,116,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,93,32,61,61,32,34,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,115,117,98,115,116,114,40,115,116,114,44,32,48,44,32,105,32,43,32,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,45,32,49,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,100,101,99,105,109,97,108,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,95,32,61,32,115,116,100,46,97,98,115,40,110,95,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,119,104,111,108,101,32,61,32,115,116,100,46,102,108,111,111,114,40,110,95,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,111,116,95,115,105,122,101,32,61,32,105,102,32,112,114,101,99,32,61,61,32,48,32,38,38,32,33,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,48,32,101,108,115,101,32,49,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,122,101,114,111,95,112,97,100,32,45,32,112,114,101,99,32,45,32,100,111,116,95,115,105,122,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,110,95,95,32,47,32,110,95,32,42,32,119,104,111,108,101,44,32,122,112,44,32,48,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,112,114,101,99,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,105,102,32,101,110,115,117,114,101,95,112,116,32,116,104,101,110,32,34,46,34,32,101,108,115,101,32,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,32,61,32,115,116,100,46,102,108,111,111,114,40,40,110,95,32,45,32,119,104,111,108,101,41,32,42,32,115,116,100,46,112,111,119,40,49,48,44,32,112,114,101,99,41,32,43,32,48,46,53,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,116,114,97,105,108,105,110,103,32,124,124,32,102,114,97,99,32,62,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,114,97,99,95,115,116,114,32,61,32,114,101,110,100,101,114,95,105,110,116,40,102,114,97,99,44,32,112,114,101,99,44,32,48,44,32,102,97,108,115,101,44,32,102,97,108,115,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,32,43,32,34,46,34,32,43,32,105,102,32,33,116,114,97,105,108,105,110,103,32,116,104,101,110,32,115,116,114,105,112,95,116,114,97,105,108,105,110,103,95,122,101,114,111,40,102,114,97,99,95,115,116,114,41,32,101,108,115,101,32,102,114,97,99,95,115,116,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,114,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,105,110,32,115,99,105,101,110,116,105,102,105,99,32,102,111,114,109,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,110,95,95,44,32,122,101,114,111,95,112,97,100,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,99,97,112,115,44,32,112,114,101,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,110,95,95,41,41,32,47,32,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,117,102,102,32,61,32,40,105,102,32,99,97,112,115,32,116,104,101,110,32,34,69,34,32,101,108,115,101,32,34,101,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,114,101,110,100,101,114,95,105,110,116,40,101,120,112,111,110,101,110,116,44,32,51,44,32,48,44,32,102,97,108,115,101,44,32,116,114,117,101,44,32,49,48,44,32,34,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,109,97,110,116,105,115,115,97,32,61,32,110,95,95,32,47,32,115,116,100,46,112,111,119,40,49,48,44,32,101,120,112,111,110,101,110,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,50,32,61,32,122,101,114,111,95,112,97,100,32,45,32,115,116,100,46,108,101,110,103,116,104,40,115,117,102,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,109,97,110,116,105,115,115,97,44,32,122,112,50,44,32,98,108,97,110,107,44,32,115,105,103,110,44,32,101,110,115,117,114,101,95,112,116,44,32,116,114,97,105,108,105,110,103,44,32,112,114,101,99,41,32,43,32,115,117,102,102,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,118,97,108,117,101,32,119,105,116,104,32,97,110,32,97,114,98,105,116,114,97,114,121,32,102,111,114,109,97,116,32,99,111,100,101,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,95,111,114,95,110,117,108,108,44,32,105,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,102,108,97,103,115,32,61,32,99,111,100,101,46,99,102,108,97,103,115,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,112,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,54,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,105,112,114,101,99,32,61,32,105,102,32,112,114,101,99,95,111,114,95,110,117,108,108,32,33,61,32,110,117,108,108,32,116,104,101,110,32,112,114,101,99,95,111,114,95,110,117,108,108,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,112,32,61,32,105,102,32,99,102,108,97,103,115,46,122,101,114,111,32,38,38,32,33,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,32,102,119,32,101,108,115,101,32,48,59,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,115,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,100,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,49,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,111,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,122,101,114,111,95,112,114,101,102,105,120,32,61,32,105,102,32,99,102,108,97,103,115,46,97,108,116,32,116,104,101,110,32,34,48,34,32,101,108,115,101,32,34,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,105,110,116,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,56,44,32,122,101,114,111,95,112,114,101,102,105,120,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,120,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,104,101,120,40,118,97,108,44,32,122,112,44,32,105,112,114,101,99,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,99,97,112,115,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,101,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,32,116,114,117,101,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,70,111,114,109,97,116,32,114,101,113,117,105,114,101,100,32,110,117,109,98,101,114,32,97,116,32,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,32,105,32,43,32,34,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,101,120,112,111,110,101,110,116,32,61,32,115,116,100,46,102,108,111,111,114,40,115,116,100,46,108,111,103,40,115,116,100,46,97,98,115,40,118,97,108,41,41,47,115,116,100,46,108,111,103,40,49,48,41,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,101,120,112,111,110,101,110,116,32,60,32,45,52,32,124,124,32,101,120,112,111,110,101,110,116,32,62,61,32,102,112,112,114,101,99,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,115,99,105,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,99,111,100,101,46,99,97,112,115,44,32,102,112,112,114,101,99,32,45,32,49,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,32,61,32,115,116,100,46,109,97,120,40,49,44,32,101,120,112,111,110,101,110,116,43,49,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,110,100,101,114,95,102,108,111,97,116,95,100,101,99,40,118,97,108,44,32,122,112,44,32,99,102,108,97,103,115,46,98,108,97,110,107,44,32,99,102,108,97,103,115,46,115,105,103,110,44,32,99,102,108,97,103,115,46,97,108,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,102,108,97,103,115,46,97,108,116,44,32,102,112,112,114,101,99,32,45,32,100,105,103,105,116,115,95,98,101,102,111,114,101,95,112,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,99,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,99,104,97,114,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,32,61,61,32,49,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,49,45,115,105,122,101,100,32,115,116,114,105,110,103,32,103,111,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,37,99,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,32,47,32,115,116,114,105,110,103,44,32,103,111,116,58,32,34,32,43,32,115,116,100,46,116,121,112,101,40,118,97,108,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,85,110,107,110,111,119,110,32,99,111,100,101,58,32,34,32,43,32,99,111,100,101,46,99,116,121,112,101,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,97,114,114,97,121,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,44,32,106,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,84,111,111,32,109,97,110,121,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,43,32,34,44,32,101,120,112,101,99,116,101,100,32,34,32,43,32,106,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,44,32,118,32,43,32,99,111,100,101,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,32,61,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,119,58,32,99,111,100,101,46,102,119,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,109,112,50,32,61,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,32,43,32,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,105,102,32,116,109,112,46,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,116,109,112,46,106,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,106,58,32,116,109,112,46,106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,101,99,58,32,99,111,100,101,46,112,114,101,99,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,125,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,106,50,32,61,32,116,109,112,50,46,106,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,106,50,32,60,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,114,114,91,106,50,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,101,110,111,117,103,104,32,118,97,108,117,101,115,32,116,111,32,102,111,114,109,97,116,44,32,103,111,116,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,116,109,112,46,102,119,44,32,116,109,112,50,46,112,114,101,99,44,32,106,50,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,116,109,112,46,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,97,114,114,44,32,105,32,43,32,49,44,32,106,50,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,59,10,10,32,32,32,32,32,32,32,32,47,47,32,82,101,110,100,101,114,32,97,32,112,97,114,115,101,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,119,105,116,104,32,97,110,32,111,98,106,101,99,116,32,111,102,32,118,97,108,117,101,115,46,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,44,32,118,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,99,111,100,101,115,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,111,100,101,32,61,32,99,111,100,101,115,91,105,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,99,111,100,101,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,99,111,100,101,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,109,107,101,121,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,77,97,112,112,105,110,103,32,107,101,121,115,32,114,101,113,117,105,114,101,100,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,109,107,101,121,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,119,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,102,119,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,102,105,101,108,100,32,119,105,100,116,104,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,102,119,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,114,101,99,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,112,114,101,99,32,61,61,32,34,42,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,110,111,116,32,117,115,101,32,42,32,112,114,101,99,105,115,105,111,110,32,119,105,116,104,32,111,98,106,101,99,116,46,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,111,100,101,46,112,114,101,99,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,108,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,111,98,106,44,32,102,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,98,106,91,102,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,32,115,117,99,104,32,102,105,101,108,100,58,32,34,32,43,32,115,116,100,46,108,101,110,103,116,104,40,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,116,121,112,101,32,61,61,32,34,37,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,37,34,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,40,118,97,108,44,32,99,111,100,101,44,32,102,119,44,32,112,114,101,99,44,32,102,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,95,112,97,100,100,101,100,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,111,100,101,46,99,102,108,97,103,115,46,108,101,102,116,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,114,105,103,104,116,40,115,44,32,102,119,44,32,34,32,34,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,97,100,95,108,101,102,116,40,115,44,32,102,119,44,32,34,32,34,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,111,98,106,44,32,105,32,43,32,49,44,32,118,32,43,32,115,95,112,97,100,100,101,100,41,59,10,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,118,97,108,115,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,111,98,106,40,99,111,100,101,115,44,32,118,97,108,115,44,32,48,44,32,34,34,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,109,97,116,95,99,111,100,101,115,95,97,114,114,40,99,111,100,101,115,44,32,91,118,97,108,115,93,44,32,48,44,32,48,44,32,34,34,41,44,10,10,32,32,32,32,102,111,108,100,114,40,102,117,110,99,44,32,97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+29917);
/* memory initializer */ allocate([114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,60,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,102,117,110,99,40,97,114,114,91,105,100,120,93,44,32,114,117,110,110,105,110,103,41,44,32,105,100,120,32,45,32,49,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,45,32,49,41,44,10,10,32,32,32,32,102,111,108,100,108,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,114,117,110,110,105,110,103,44,32,105,100,120,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,100,120,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,102,117,110,99,40,114,117,110,110,105,110,103,44,32,97,114,114,91,105,100,120,93,41,44,32,105,100,120,32,43,32,49,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,102,117,110,99,44,32,97,114,114,44,32,105,110,105,116,44,32,48,41,44,10,10,10,32,32,32,32,102,105,108,116,101,114,77,97,112,40,102,105,108,116,101,114,95,102,117,110,99,44,32,109,97,112,95,102,117,110,99,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,102,105,114,115,116,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,102,105,108,116,101,114,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,32,33,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,115,101,99,111,110,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,102,117,110,99,116,105,111,110,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,109,97,112,95,102,117,110,99,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,97,114,114,41,32,33,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,40,34,115,116,100,46,102,105,108,116,101,114,77,97,112,32,116,104,105,114,100,32,112,97,114,97,109,32,109,117,115,116,32,98,101,32,97,114,114,97,121,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,114,114,41,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,109,97,112,95,102,117,110,99,44,32,115,116,100,46,102,105,108,116,101,114,40,102,105,108,116,101,114,95,102,117,110,99,44,32,97,114,114,41,41,44,10,10,32,32,32,32,97,115,115,101,114,116,69,113,117,97,108,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,97,32,61,61,32,98,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,116,114,117,101,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,65,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,46,32,34,32,43,32,97,32,43,32,34,32,33,61,32,34,32,43,32,98,44,10,10,32,32,32,32,97,98,115,40,110,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,110,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,97,98,115,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,110,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,110,32,62,32,48,32,116,104,101,110,32,110,32,101,108,115,101,32,45,110,44,10,10,32,32,32,32,109,97,120,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,62,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,109,105,110,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,97,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,102,105,114,115,116,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,97,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,98,41,32,33,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,115,116,100,46,109,97,120,32,115,101,99,111,110,100,32,112,97,114,97,109,32,101,120,112,101,99,116,101,100,32,110,117,109,98,101,114,44,32,103,111,116,32,34,32,43,32,115,116,100,46,116,121,112,101,40,98,41,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,32,60,32,98,32,116,104,101,110,32,97,32,101,108,115,101,32,98,44,10,10,32,32,32,32,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,114,114,115,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,98,41,32,97,32,43,32,98,44,32,97,114,114,115,44,32,91,93,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,73,110,105,40,105,110,105,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,111,100,121,95,108,105,110,101,115,40,98,111,100,121,41,32,61,32,91,32,34,37,115,32,61,32,37,115,34,32,37,32,91,107,44,32,98,111,100,121,91,107,93,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,98,111,100,121,41,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,101,99,116,105,111,110,95,108,105,110,101,115,40,115,110,97,109,101,44,32,115,98,111,100,121,41,32,61,32,91,32,34,91,37,115,93,34,32,37,32,91,115,110,97,109,101,93,32,93,32,43,32,98,111,100,121,95,108,105,110,101,115,40,115,98,111,100,121,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,97,105,110,95,98,111,100,121,32,61,32,105,102,32,115,116,100,46,111,98,106,101,99,116,72,97,115,40,105,110,105,44,32,34,109,97,105,110,34,41,32,116,104,101,110,32,98,111,100,121,95,108,105,110,101,115,40,105,110,105,46,109,97,105,110,41,32,101,108,115,101,32,91,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,108,108,95,115,101,99,116,105,111,110,115,32,61,32,91,115,101,99,116,105,111,110,95,108,105,110,101,115,40,107,44,32,105,110,105,46,115,101,99,116,105,111,110,115,91,107,93,41,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,105,110,105,46,115,101,99,116,105,111,110,115,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,109,97,105,110,95,98,111,100,121,32,43,32,115,116,100,46,102,108,97,116,116,101,110,65,114,114,97,121,115,40,97,108,108,95,115,101,99,116,105,111,110,115,41,32,43,32,91,34,34,93,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,92,34,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,34,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,92,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,92,92,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,98,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,98,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,102,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,102,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,110,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,114,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,116,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,99,104,32,61,61,32,34,92,117,48,48,48,48,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,48,48,48,48,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,99,112,32,61,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,104,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,112,32,60,32,51,50,32,124,124,32,99,112,32,62,32,49,50,54,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,92,92,117,37,48,52,120,34,32,37,32,91,99,112,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,92,34,37,115,92,34,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,74,115,111,110,40,115,116,114,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,66,97,115,104,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,39,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,39,92,34,39,92,34,39,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,34,39,37,115,39,34,32,37,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,101,115,99,97,112,101,83,116,114,105,110,103,68,111,108,108,97,114,115,40,115,116,114,95,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,32,115,116,100,46,116,111,83,116,114,105,110,103,40,115,116,114,95,41,59,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,116,114,97,110,115,40,99,104,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,99,104,32,61,61,32,34,36,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,36,36,34,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,59,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,97,44,32,98,41,32,97,32,43,32,116,114,97,110,115,40,98,41,44,32,115,116,100,46,115,116,114,105,110,103,67,104,97,114,115,40,115,116,114,41,44,32,34,34,41,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,111,98,106,101,99,116,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,105,101,108,100,115,32,61,32,91,34,37,115,58,32,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,107,41,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,91,107,93,41,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,111,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,34,123,37,115,125,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,102,105,101,108,100,115,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,97,114,114,97,121,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,91,37,115,93,34,32,37,32,91,115,116,100,46,106,111,105,110,40,34,44,32,34,44,32,91,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,111,50,41,32,102,111,114,32,111,50,32,105,110,32,111,93,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,37,115,34,32,37,32,91,115,116,100,46,101,115,99,97,112,101,83,116,114,105,110,103,80,121,116,104,111,110,40,111,41,93,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,102,117,110,99,116,105,111,110,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,99,97,110,110,111,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,115,116,100,46,116,121,112,101,40,111,41,32,61,61,32,34,110,117,109,98,101,114,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,116,111,83,116,114,105,110,103,40,111,41,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,116,114,117,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,114,117,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,102,97,108,115,101,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,97,108,115,101,34,10,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,111,32,61,61,32,110,117,108,108,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,111,110,101,34,44,10,10,32,32,32,32,109,97,110,105,102,101,115,116,80,121,116,104,111,110,86,97,114,115,40,99,111,110,102,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,118,97,114,115,32,61,32,91,34,37,115,32,61,32,37,115,34,32,37,32,91,107,44,32,115,116,100,46,109,97,110,105,102,101,115,116,80,121,116,104,111,110,40,99,111,110,102,91,107,93,41,93,32,102,111,114,32,107,32,105,110,32,115,116,100,46,111,98,106,101,99,116,70,105,101,108,100,115,40,99,111,110,102,41,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,92,110,34,44,32,118,97,114,115,32,43,32,91,34,34,93,41,44,10,10,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,116,97,98,108,101,32,61,32,34,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47,34,44,10,32,32,32,32,108,111,99,97,108,32,98,97,115,101,54,52,95,105,110,118,32,61,32,123,91,98,97,115,101,54,52,95,116,97,98,108,101,91,105,93,93,58,32,105,32,102,111,114,32,105,32,105,110,32,115,116,100,46,114,97,110,103,101,40,48,44,32,54,51,41,125,44,10,10,32,32,32,32,98,97,115,101,54,52,40,105,110,112,117,116,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,116,121,112,101,40,105,110,112,117,116,41,32,61,61,32,34,115,116,114,105,110,103,34,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,99,41,32,115,116,100,46,99,111,100,101,112,111,105,110,116,40,99,41,44,32,105,110,112,117,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,112,117,116,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,114,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,49,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,61,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,105,32,43,32,50,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,61,34,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,116,114,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,77,83,66,32,111,102,32,105,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,50,53,50,41,32,62,62,32,50,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,44,32,52,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,93,32,38,32,51,41,32,60,60,32,52,32,124,32,40,97,114,114,91,105,43,49,93,32,38,32,50,52,48,41,32,62,62,32,52,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,50,32,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,49,93,32,38,32,49,53,41,32,60,60,32,50,32,124,32,40,97,114,114,91,105,43,50,93,32,38,32,49,57,50,41,32,62,62,32,54,93,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,54,32,76,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,98,97,115,101,54,52,95,116,97,98,108,101,91,40,97,114,114,91,105,43,50,93,32,38,32,54,51,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,114,114,44,32,105,32,43,32,51,44,32,114,32,43,32,115,116,114,41,32,116,97,105,108,115,116,114,105,99,116,59,10,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,115,97,110,105,116,121,32,61,32,115,116,100,46,102,111,108,100,108,40,102,117,110,99,116,105,111,110,40,114,44,32,97,41,32,114,32,38,38,32,40,97,32,60,32,50,53,54,41,44,32,98,121,116,101,115,44,32,116,114,117,101,41,59,10,32,32,32,32,32,32,32,32,105,102,32,33,115,97,110,105,116,121,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,67,97,110,32,111,110,108,121,32,98,97,115,101,54,52,32,101,110,99,111,100,101,32,115,116,114,105,110,103,115,32,47,32,97,114,114,97,121,115,32,111,102,32,115,105,110,103,108,101,32,98,121,116,101,115,46,34,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,98,121,116,101,115,44,32,48,44,32,34,34,41,44,10,10,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,37,32,52,32,33,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,111,114,32,34,78,111,116,32,97,32,98,97,115,101,54,52,32,101,110,99,111,100,101,100,32,115,116,114,105,110,103,32,92,34,37,115,92,34,34,32,37,32,115,116,114,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,115,116,114,44,32,105,44,32,114,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,115,116,114,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,44,32,50,32,77,83,66,32,111,102,32,105,43,49,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,49,32,61,32,91,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,93,93,32,60,60,32,50,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,62,62,32,52,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,52,32,76,83,66,32,111,102,32,105,43,49,44,32,52,77,83,66,32,111,102,32,105,43,50,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,50,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,50,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,49,93,93,32,38,32,49,53,41,32,60,60,32,52,32,124,32,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,62,62,32,50,41,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,47,32,50,32,76,83,66,32,111,102,32,105,43,50,44,32,97,108,108,32,54,32,98,105,116,115,32,111,102,32,105,43,51,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,110,51,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,114,91,105,43,51,93,32,61,61,32,34,61,34,32,116,104,101,110,32,91,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,91,40,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,50,93,93,32,38,32,51,41,32,60,60,32,54,32,124,32,98,97,115,101,54,52,95,105,110,118,91,115,116,114,91,105,43,51,93,93,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,105,43,52,44,32,114,32,43,32,110,49,32,43,32,110,50,32,43,32,110,51,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,115,116,114,44,32,48,44,32,91,93,41,44,10,10,32,32,32,32,98,97,115,101,54,52,68,101,99,111,100,101,40,115,116,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,98,121,116,101,115,32,61,32,115,116,100,46,98,97,115,101,54,52,68,101,99,111,100,101,66,121,116,101,115,40,115,116,114,41,59,10,32,32,32,32,32,32,32,32,115,116,100,46,106,111,105,110,40,34,34,44,32,115,116,100,46,109,97,112,40,102,117,110,99,116,105,111,110,40,98,41,32,115,116,100,46,99,104,97,114,40,98,41,44,32,98,121,116,101,115,41,41,44,10,10,32,32,32,32,47,47,32,81,117,105,99,107,115,111,114,116,10,32,32,32,32,115,111,114,116,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,32,61,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,59,10,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,97,114,114,41,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,91,93,10,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,112,105,118,111,116,32,61,32,97,114,114,91,48,93,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,101,115,116,32,61,32,115,116,100,46,109,97,107,101,65,114,114,97,121,40,108,32,45,32,49,44,32,102,117,110,99,116,105,111,110,40,105,41,32,97,114,114,91,105,32,43,32,49,93,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,108,101,102,116,32,61,32,115,116,100,46,102,105,108,116,101,114,40,102,117,110,99,116,105,111,110,40,120,41,32,120,32,60,61,32,112,105,118,111,116,44,32,114,101,115,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,108,32,114,105,103,104,116,32,61,32,115,116,100,46,102,105,108,116,101,114,40,102,117,110,99,116,105,111,110,40,120,41,32,120,32,62,32,112,105,118,111,116,44,32,114,101,115,116,41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,115,116,100,46,115,111,114,116,40,108,101,102,116,41,32,43,32,91,112,105,118,111,116,93,32,43,32,115,116,100,46,115,111,114,116,40,114,105,103,104,116,41,44,10,10,32,32,32,32,117,110,105,113,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,102,40,97,44,32,98,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,115,116,100,46,108,101,110,103,116,104,40,97,41,32,61,61,32,48,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,98,93,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,91,115,116,100,46,108,101,110,103,116,104,40,97,41,32,45,32,49,93,32,61,61,32,98,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,32,43,32,91,98,93,59,10,32,32,32,32,32,32,32,32,115,116,100,46,102,111,108,100,108,40,102,32,44,32,97,114,114,44,32,91,93,41,44,10,10,32,32,32,32,115,101,116,40,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,117,110,105,113,40,115,116,100,46,115,111,114,116,40,97,114,114,41,41,44,10,10,32,32,32,32,115,101,116,77,101,109,98,101,114,40,120,44,32,97,114,114,41,58,58,10,32,32,32,32,32,32,32,32,47,47,32,84,79,68,79,40,100,99,117,110,110,105,110,41,58,32,66,105,110,97,114,121,32,99,104,111,112,32,102,111,114,32,79,40,108,111,103,32,110,41,32,99,111,109,112,108,101,120,105,116,121,10,32,32,32,32,32,32,32,32,115,116,100,46,108,101,110,103,116,104,40,115,116,100,46,115,101,116,73,110,116,101,114,40,91,120,93,44,32,97,114,114,41,41,32,62,32,48,44,10,10,32,32,32,32,115,101,116,85,110,105,111,110,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,115,116,100,46,115,101,116,40,97,32,43,32,98,41,44,10,10,32,32,32,32,115,101,116,73,110,116,101,114,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,44,32,97,99,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,41,32,124,124,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,98,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,99,99,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,91,105,93,32,61,61,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,32,43,32,49,44,32,97,99,99,32,43,32,91,97,91,105,93,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,91,105,93,32,60,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,32,43,32,49,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,48,44,32,48,44,32,91,93,41,32,116,97,105,108,115,116,114,105,99,116,44,10,10,32,32,32,32,115,101,116,68,105,102,102,40,97,44,32,98,41,58,58,10,32,32,32,32,32,32,32,32,108,111,99,97,108,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,44,32,97,99,99,41,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,105,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,97,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,99,99,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,106,32,62,61,32,115,116,100,46,108,101,110,103,116,104,40,98,41,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,44,32,97,99,99,32,43,32,91,97,91,105,93,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,97,91,105,93,32,61,61,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,32,43,32,49,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,32,105,102,32,97,91,105,93,32,60,32,98,91,106,93,32,116,104,101,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,32,43,32,49,44,32,106,44,32,97,99,99,32,43,32,91,97,91,105,93,93,41,32,116,97,105,108,115,116,114,105,99,116,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,108,115,101,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,105,44,32,106,32,43,32,49,44,32,97,99,99,41,32,116,97,105,108,115,116,114,105,99,116,59,10,32,32,32,32,32,32,32,32,97,117,120,40,97,44,32,98,44,32,48,44,32,48,44,32,91,93,41,32,116,97,105,108,115,116,114,105,99,116,44,10,10,32,32,32,32,112,105,112,40,112,107,103,41,58,58,10,32,32,32,32,32,32,32,32,34,112,105,112,32,105,110,115,116,97,108,108,32,37,115,34,32,37,32,112,107,103,44,10,125,10,0,115,116,100,0,92,34,0,92,92,0,92,98,0,92,102,0,92,110,0,92,114,0,92,116,0,92,117,48,48,48,48,0,92,117,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,97,110,32,65,83,84,32,116,104,97,116,32,119,97,115,110,39,116,32,119,114,97,112,112,101,100,32,105,110,32,97,32,115,116,100,32,108,111,99,97,108,46,0,40,41,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,112,97,114,115,105,110,103,32,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,46,0,105,102,32,0,32,116,104,101,110,32,0,32,101,108,115,101,32,0,101,114,114,111,114,32,0,102,117,110,99,116,105,111,110,32,0,41,32,0,105,109,112], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+40157);
/* memory initializer */ allocate([111,114,116,32,0,105,109,112,111,114,116,115,116,114,32,0,108,111,99,97,108,32,0,32,61,32,0,59,32,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,105,101,108,100,72,105,100,101,58,32,0,58,58,58,0,58,58,0,123,91,0,93,58,32,0,32,102,111,114,32,0,32,105,110,32,0,115,101,108,102,0,115,117,112,101,114,0,51,86,97,114,0,53,85,110,97,114,121,0,53,83,117,112,101,114,0,52,83,101,108,102,0,49,55,79,98,106,101,99,116,67,111,109,112,111,115,105,116,105,111,110,0,54,79,98,106,101,99,116,0,49,49,76,105,116,101,114,97,108,78,117,108,108,0,49,51,76,105,116,101,114,97,108,83,116,114,105,110,103,0,49,51,76,105,116,101,114,97,108,78,117,109,98,101,114,0,49,52,76,105,116,101,114,97,108,66,111,111,108,101,97,110,0,53,73,110,100,101,120,0,57,73,109,112,111,114,116,115,116,114,0,54,73,109,112,111,114,116,0,56,70,117,110,99,116,105,111,110,0,53,69,114,114,111,114,0,49,49,67,111,110,100,105,116,105,111,110,97,108,0,49,53,66,117,105,108,116,105,110,70,117,110,99,116,105,111,110,0,54,66,105,110,97,114,121,0,53,65,114,114,97,121,0,53,65,112,112,108,121,0,53,76,111,99,97,108,0,51,65,83,84,0,68,105,100,32,110,111,116,32,101,120,112,101,99,116,58,32,0,44,32,34,0,34,41,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,101,110,32,107,105,110,100,58,32,0,101,110,100,32,111,102,32,102,105,108,101,0,116,104,101,110,0,116,97,105,108,115,116,114,105,99,116,0,108,111,99,97,108,0,105,110,0,105,109,112,111,114,116,115,116,114,0,105,109,112,111,114,116,0,105,102,0,102,111,114,0,101,114,114,111,114,0,101,108,115,101,0,83,84,82,73,78,71,0,79,80,69,82,65,84,79,82,0,78,85,77,66,69,82,0,73,68,69,78,84,73,70,73,69,82,0,34,59,34,0,34,41,34,0,34,40,34,0,34,46,34,0,34,36,34,0,34,44,34,0,34,58,34,0,34,93,34,0,34,91,34,0,34,125,34,0,34,123,34,0,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,0,78,111,116,32,97,110,32,105,100,101,110,116,105,102,105,101,114,58,32,0,69,120,112,101,99,116,101,100,32,40,32,98,117,116,32,103,111,116,32,0,69,120,112,101,99,116,101,100,32,44,32,111,114,32,59,32,98,117,116,32,103,111,116,32,0,78,111,116,32,97,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,37,0,78,111,116,32,97,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,102,117,110,99,116,105,111,110,32,97,114,103,117,109,101,110,116,0,109,111,100,0,36,0,79,98,106,101,99,116,32,99,111,109,112,111,115,105,116,105,111,110,32,99,97,110,32,111,110,108,121,32,104,97,118,101,32,111,110,101,32,102,105,101,108,100,47,118,97,108,117,101,32,112,97,105,114,46,0,76,111,99,97,108,115,32,109,117,115,116,32,97,112,112,101,97,114,32,102,105,114,115,116,32,105,110,32,97,110,32,111,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,46,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,115,32,99,97,110,110,111,116,32,104,97,118,101,32,104,105,100,100,101,110,32,102,105,101,108,100,115,46,0,85,110,101,120,112,101,99,116,101,100,32,99,111,109,109,97,32,98,101,102,111,114,101,32,102,111,114,46,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,102,105,101,108,100,46,0,109,101,116,104,111,100,32,112,97,114,97,109,101,116,101,114,0,67,97,110,110,111,116,32,117,115,101,32,43,58,32,115,121,110,116,97,120,32,115,117,103,97,114,32,105,110,32,97,32,109,101,116,104,111,100,58,32,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,58,32,0,112,97,114,115,105,110,103,32,102,105,101,108,100,32,100,101,102,105,110,105,116,105,111,110,0,85,110,101,120,112,101,99,116,101,100,58,32,0,32,119,104,105,108,101,32,0,112,97,114,115,105,110,103,32,116,101,114,109,105,110,97,108,0,85,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,102,105,108,101,46,0,109,97,112,0,102,105,108,116,101,114,77,97,112,0,69,120,112,101,99,116,101,100,32,105,102,32,111,114,32,93,32,97,102,116,101,114,32,102,111,114,32,99,108,97,117,115,101,44,32,103,111,116,58,32,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,97,114,114,97,121,32,101,108,101,109,101,110,116,46,0,78,111,32,116,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,102,111,117,110,100,46,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,111,107,32,107,105,110,100,58,32,0,68,117,112,108,105,99,97,116,101,32,108,111,99,97,108,32,118,97,114,58,32,0,61,0,69,120,112,101,99,116,101,100,32,97,32,99,111,109,109,97,32,98,101,102,111,114,101,32,110,101,120,116,32,0,69,120,112,101,99,116,101,100,32,116,111,107,101,110,32,0,32,98,117,116,32,103,111,116,32,0,69,120,112,101,99,116,101,100,32,111,112,101,114,97,116,111,114,32,0,68,117,112,108,105,99,97,116,101,32,102,117,110,99,116,105,111,110,32,112,97,114,97,109,101,116,101,114,58,32,0,67,97,110,39,116,32,117,115,101,32,115,101,108,102,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,67,97,110,39,116,32,117,115,101,32,115,117,112,101,114,32,111,117,116,115,105,100,101,32,111,102,32,97,110,32,111,98,106,101,99,116,46,0,85,110,107,110,111,119,110,32,118,97,114,105,97,98,108,101,58,32,0,68,117,114,105,110,103,32,109,97,110,105,102,101,115,116,97,116,105,111,110,0,77,117,108,116,105,32,109,111,100,101,58,32,84,111,112,45,108,101,118,101,108,32,111,98,106,101,99,116,32,119,97,115,32,97,32,0,44,32,0,115,104,111,117,108,100,32,98,101,32,97,110,32,111,98,106,101,99,116,32,119,104,111,115,101,32,107,101,121,115,32,97,114,101,32,102,105,108,101,110,97,109,101,115,32,97,110,100,32,118,97,108,117,101,115,32,104,111,108,100,32,0,116,104,101,32,74,83,79,78,32,102,111,114,32,116,104,97,116,32,102,105,108,101,46,0,70,105,101,108,100,32,100,111,101,115,32,110,111,116,32,101,120,105,115,116,58,32,0,77,97,120,32,115,116,97,99,107,32,102,114,97,109,101,115,32,101,120,99,101,101,100,101,100,46,0,98,105,110,100,46,115,101,99,111,110,100,32,33,61,32,110,117,108,108,112,116,114,0,118,109,46,99,112,112,0,110,101,119,67,97,108,108,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,54,72,101,97,112,83,105,109,112,108,101,79,98,106,101,99,116,69,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,52,72,101,97,112,76,101,97,102,79,98,106,101,99,116,69,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,79,98,106,101,99,116,69,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,69,110,116,105,116,121,69,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,50,51,72,101,97,112,67,111,109,112,114,101,104,101,110,115,105,111,110,79,98,106,101,99,116,69,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,53,72,101,97,112,83,117,112,101,114,79,98,106,101,99,116,69,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,56,72,101,97,112,69,120,116,101,110,100,101,100,79,98,106,101,99,116,69,0,49,50,82,117,110,116,105,109,101,69,114,114,111,114,0,97,110,111,110,121,109,111,117,115,0,111,98,106,101,99,116,32,60,0,62,0,116,104,117,110,107,32,60,0,98,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,60,0,102,117,110,99,116,105,111,110,32,60,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,84,104,117,110,107,69,0,110,117,108,108,0,98,111,111,108,101,97,110,0,100,111,117,98,108,101,0,97,114,114,97,121,0,102,117,110,99,116,105,111,110,0,111,98,106,101,99,116,0,115,116,114,105,110,103,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,116,121,112,101,58,32,0,115,116,97,99,107,91,0,93,32,61,32,0,32,40,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,53,83,116,97,99,107,69,0,91,32,93,0,91,10,0,91,0,32,32,32,0,44,10,0,93,0,67,111,117,108,100,110,39,116,32,109,97,110,105,102,101,115,116,32,102,117,110,99,116,105,111,110,32,105,110,32,74,83,79,78,32,111,117,116,112,117,116,46,0,123,32,125,0,123,10,0,123,0,34,0,34,58,32,0,125,0,69,120,112,101,99,116,101,100,32,115,116,114,105,110,103,32,114,101,115,117,108,116,44,32,103,111,116,58,32,0,65,116,116,101,109,112,116,32,116,111,32,117,115,101,32,115,117,112,101,114,32,119,104,101,110,32,116,104,101,114,101,32,105,115,32,110,111,32,115,117,112,101,114,32,99,108,97,115,115,46,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,67,111,117,108,100,32,110,111,116,32,98,105,110,100,32,118,97,114,105,97,98,108,101,58,32,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,65,83,84,58,32,0,79,110,108,121,32,102,117,110,99,116,105,111,110,115,32,99,97,110,32,98,101,32,99,97,108,108,101,100,44,32,103,111,116,32,0,69,120,112,101,99,116,101,100,32,0,32,97,114,103,117,109,101,110,116,115,44,32,103,111,116,32,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,73,110,101,113,117,97,108,105,116,105,101,115,32,110,111,116,32,100,101,115,117,103,97,114,101,100,0,66,105,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,32,114,101,113,117,105,114,101,115,32,109,97,116,99,104,105,110,103,32,116,121,112,101,115,44,32,103,111,116,32,0,32,97,110,100,32,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,97,114,114,97,121,115,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,98,111,111,108,101,97,110,115,46,0,68,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,109,98,101,114,115,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,102,117,110,99,116,105,111,110,115,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,110,117,108,108,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,111,98,106,101,99,116,115,46,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,115,116,114,105,110,103,115,46,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,114,101,116,117,114,110,32,98,111,111,108,101,97,110,44,32,103,111,116,58,32,0,109,97,107,101,65,114,114,97,121,32,114,101,113,117,105,114,101,115,32,115,105,122,101,32,62,61,32,48,44,32,103,111,116,32,0,109,97,107,101,65,114,114,97,121,32,102,117,110,99,116,105,111,110,32,109,117,115,116,32,116,97,107,101,32,49,32,112,97,114,97,109,44,32,103,111,116,58,32,0,110,117,109,98,101,114,0,102,105,108,116,101,114,32,102,117,110,99,116,105,111,110,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,108,101,110,103,116,104,32,116,97,107,101,115,32,49,32,112,97,114,97,109,101,116,101,114,46,0,108,101,110,103,116,104,32,111,112,101,114,97,116,101,115,32,111,110,32,115,116,114,105,110,103,115,44,32,111,98,106,101,99,116,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,99,111,100,101,112,111,105,110,116,32,116,97,107,101,115,32,97,32,115,116,114,105,110,103,32,111,102,32,108,101,110,103,116,104,32,49,44,32,103,111,116,32,108,101,110,103,116,104,32,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,62,61,32,48,44,32,103,111,116,32,0,83,111,114,114,121,44,32,111,110,108,121,32,65,83,67,73,73,32,115,117,112,112,111,114,116,101,100,32,114,105,103,104,116,32,110,111,119,46,32,32,0,67,111,100,101,112,111,105,110,116,115,32,109,117,115,116,32,98,101,32,60,32,49,50,56,44,32,103,111,116,32,0,85,110,100,101,102,105,110,101,100,32,101,120,116,101,114,110,97,108,32,118,97,114,105,97,98,108,101,58,32,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,122,101,100,32,98,117,105,108,116,105,110,58,32,0,69,114,114,111,114,32,109,101,115,115,97,103,101,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,73,102,32,99,111,110,100,105,116,105,111,110,32,109,117,115,116,32,98,101,32,98,111,111,108,101,97,110,44,32,103,111,116,32,0,65,114,114,97,121,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,110,117,109,98,101,114,44,32,103,111,116,32,0,65,114,114,97,121,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,32,110,111,116,32,119,105,116,104,105,110,32,91,48,44,32,0,111,98,106,32,33,61,32,110,117,108,108,112,116,114,0,101,118,97,108,117,97,116,101,0,79,98,106,101,99,116,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,32,0,83,116,114,105,110,103,32,105,110,100,101,120,32,109,117,115,116,32,98,101,32,97,32,110,117,109,98,101,114,44,32,103,111,116,32,0,83,116,114,105,110,103,32,98,111,117,110,100,115,32,101,114,114,111,114,58,32,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,78,111,116,32,111,98,106,101,99,116,32,47,32,97,114,114,97,121,32,47,32,115,116,114,105,110,103,46,0,67,97,110,32,111,110,108,121,32,105,110,100,101,120,32,111,98,106,101,99,116,115,44,32,115,116,114,105,110,103,115,44,32,97,110,100,32,97,114,114,97,121,115,44,32,103,111,116,32,0,70,105,101,108,100,32,110,97,109,101,32,119,97,115,32,110,111,116,32,97,32,115,116,114,105,110,103,46,0,68,117,112,108,105,99,97,116,101,32,102,105,101,108,100,32,110,97,109,101,58,32,34,0,79,98,106,101,99,116,32,99,111,109,112,114,101,104,101,110,115,105,111,110,32,110,101,101,100,115,32,97,114,114,97,121,44,32,103,111,116,32,0,102,105,101,108,100,32,109,117,115,116,32,98,101,32,115,116,114,105,110,103,44,32,103,111,116,58,32,0,85,110,97,114,121,32,111,112,101,114,97,116,111,114,32,0,32,100,111,101,115,32,110,111,116,32,111,112,101,114,97,116,101,32,111,110,32,116,121,112,101,32,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,107,110,111,119,110,32,70,114,97,109,101,75,105,110,100,58,32,32,0,43,0,126,0,33,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,117,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,49,72,101,97,112,67,108,111,115,117,114,101,69,0,66,117,105,108,116,105,110,32,102,117,110,99,116,105,111,110,32,0,32,101,120,112,101,99,116,101,100,32,40,0,41,32,98,117,116,32,103,111,116,32,40,0,42,0,47,0,60,60,0,62,62,0,62,61,0,60,0,60,61,0,61,61,0,33,61,0,38,0,94,0,124,0,38,38,0,124,124,0,73,78,84,69,82,78,65,76,32,69,82,82,79,82,58,32,85,110,114,101,99,111,103,110,105,115,101,100,32,98,105,110,97,114,121,32,111,112,101,114,97,116,111,114,58,32,0,78,111,116,32,97,32,110,117,109,98,101,114,0,79,118,101,114,102,108,111,119,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,49,48,72,101,97,112,83,116,114,105,110,103,69,0,67,111,117,108,100,110,39,116,32,111,112,101,110,32,105,109,112,111,114,116,32,34,0,102,114,111,109,32,33,61,32,110,117,108,108,112,116,114,0,46,47,115,116,97,116,101,46,104,0,109,97,114,107,70,114,111,109,0,78,49,50,95,71,76,79,66,65,76,95,95,78,95,49,57,72,101,97,112,65,114,114,97,121,69,0,97,114,114,97,121,95,101,108,101,109,101,110,116,0,70,65,84,65,76,32,69,82,82,79,82,58,32,65,32,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,46,10,0,83,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,32,100,117,114,105,110,103,32,106,115,111,110,108,97,110,103,95,109,97,107,101,44,32,112,108,101,97,115,101,32,114,101,112,111,114,116,32,116,104,105,115,58,32,0,83,111,109,101,116,104,105,110,103,32,119,101,110,116,32,119,114,111,110,103,32,100,117,114,105,110,103,32,106,115,111,110,108,97,110,103,95,101,118,97,108,117,97,116,101,95,115,110,105,112,112,101,116,44,32,112,108,101,97,115,101,32,114,101,112,111,114,116,32,116,104,105,115,58,32,0,10,0,83,84,65,84,73,67,32,69,82,82,79,82,58,32,0,58,0,32,0,82,85,78,84,73,77,69,32,69,82,82,79,82,58,32,0,9,46,46,46,0,9,0,45,0,40,0,41,45,40,0,41,0,114,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,102,105,108,101,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,102,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,84,104,101,32,101,109,112,116,121,32,115,116,114,105,110,103,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,102,105,108,101,110,97,109,101,0,65,116,116,101,109,112,116,101,100,32,116,111,32,105,109,112,111,114,116,32,97,32,100,105,114,101,99,116,111,114,121,0,83,116,57,98,97,100,95,97,108,108,111,99,0,83,116,57,101,120,99,101,112,116,105,111,110,0,83,116,49,51,114,117,110,116,105,109,101,95,101,114,114,111,114,0,83,116,57,116,121,112,101,95,105,110,102,111,0,83,116,56,98,97,100,95,99,97,115,116,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,57,95,95,112,111,105,110,116,101,114,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,112,98,97,115,101,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,49,95,95,118,109,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,85,115,101,114,115,47,99,104,114,105,115,106,111,110,101,115,47,68,111,119,110,108,111,97,100,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,51,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,115,116,114,105,110,103,0,95,95,116,104,114,111,119,95,108,101,110,103,116,104,95,101,114,114,111,114,0,33,34,118,101,99,116,111,114,32,108,101,110,103,116,104,95,101,114,114,111,114,34,0,47,85,115,101,114,115,47,99,104,114,105,115,106,111,110,101,115,47,68,111,119,110,108,111,97,100,115,47,101,109,115,100,107,95,112,111,114,116,97,98,108,101,47,101,109,115,99,114,105,112,116,101,110,47,116,97,103,45,49,46,51,52,46,51,47,115,121,115,116,101,109,47,105,110,99,108,117,100,101,47,108,105,98,99,120,120,47,118,101,99,116,111,114,0,112,116,104,114,101,97,100,95,111,110,99,101,32,102,97,105,108,117,114,101,32,105,110,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,95,102,97,115,116,40,41,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,114,101,116,117,114,110,101,100,0,116,101,114,109,105,110,97,116,101,95,104,97,110,100,108,101,114,32,117,110,101,120,112,101,99,116,101,100,108,121,32,116,104,114,101,119,32,97,110,32,101,120,99,101,112,116,105,111,110,0,115,116,100,58,58,98,97,100,95,99,97,115,116,0,99,97,110,110,111,116,32,99,114,101,97,116,101,32,112,116,104,114,101,97,100,32,107,101,121,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,99,97,110,110,111,116,32,122,101,114,111,32,111,117,116,32,116,104,114,101,97,100,32,118,97,108,117,101,32,102,111,114,32,95,95,99,120,97,95,103,101,116,95,103,108,111,98,97,108,115,40,41,0,33,34,98,97,115,105,99,95,115,116,114,105,110,103,32,111,117,116,95,111,102,95,114,97,110,103,101,34,0,95,95,116,104,114,111,119,95,111,117,116,95,111,102,95,114,97,110,103,101,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,101,120,99,101,112,116,105,111,110,32,111,102,32,116,121,112,101,32,37,115,0,116,101,114,109,105,110,97,116,105,110,103,32,119,105,116,104,32,37,115,32,102,111,114,101,105,103,110,32,101,120,99,101,112,116,105,111,110,0,116,101,114,109,105,110,97,116,105,110,103,0,117,110,99,97,117,103,104,116,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,105,110,102,105,110,105,116,121,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,80,79,83,73,88,0,114,119,97], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+50397);
/* memory initializer */ allocate([17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,119,69,69,0,117,110,115,117,112,112,111,114,116,101,100,32,108,111,99,97,108,101,32,102,111,114,32,115,116,97,110,100,97,114,100,32,105,110,112,117,116,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,115,116,100,111,117,116,98,117,102,73,99,69,69,0,78,83,116,51,95,95,49,49,48,95,95,115,116,100,105,110,98,117,102,73,99,69,69,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,55,102,97,105,108,117,114,101,69,0,78,83,116,51,95,95,49,56,105,111,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,57,98,97,115,105,99,95,105,111,115,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,53,98,97,115,105,99,95,115,116,114,101,97,109,98,117,102,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,105,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,51,98,97,115,105,99,95,111,115,116,114,101,97,109,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,0,78,83,116,51,95,95,49,49,52,98,97,115,105,99,95,105,111,115,116,114,101,97,109,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,0,78,83,116,51,95,95,49,49,57,95,95,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,69,0,105,111,115,95,98,97,115,101,58,58,99,108,101,97,114,0,105,111,115,116,114,101,97,109,0,117,110,115,112,101,99,105,102,105,101,100,32,105,111,115,116,114,101,97,109,95,99,97,116,101,103,111,114,121,32,101,114,114,111,114,0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,65,66,67,68,69,70,120,88,43,45,112,80,105,73,110,78,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,102,97,99,101,116,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,119,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,99,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,115,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,68,105,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,49,54,95,95,110,97,114,114,111,119,95,116,111,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,49,55,95,95,119,105,100,101,110,95,102,114,111,109,95,117,116,102,56,73,76,106,51,50,69,69,69,0,78,83,116,51,95,95,49,55,99,111,100,101,99,118,116,73,119,99,49,49,95,95,109,98,115,116,97,116,101,95,116,69,69,0,78,83,116,51,95,95,49,54,108,111,99,97,108,101,53,95,95,105,109,112,69,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,99,69,69,0,78,83,116,51,95,95,49,55,99,111,108,108,97,116,101,73,119,69,69,0,78,83,116,51,95,95,49,53,99,116,121,112,101,73,99,69,69,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,99,69,69,0,78,83,116,51,95,95,49,56,110,117,109,112,117,110,99,116,73,119,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,55,110,117,109,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,116,105,109,101,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,99,76,98,49,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,48,69,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,112,117,110,99,116,73,119,76,98,49,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,99,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,103,101,116,73,119,78,83,95,49,57,105,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,99,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,99,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,99,69,69,69,69,69,69,0,78,83,116,51,95,95,49,57,109,111,110,101,121,95,112,117,116,73,119,78,83,95,49,57,111,115,116,114,101,97,109,98,117,102,95,105,116,101,114,97,116,111,114,73,119,78,83,95,49,49,99,104,97,114,95,116,114,97,105,116,115,73,119,69,69,69,69,69,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,99,69,69,0,78,83,116,51,95,95,49,56,109,101,115,115,97,103,101,115,73,119,69,69,0,37,112,0,67,0,37,0,0,0,0,0,108,0,108,108,0,0,76,0,37,112,0,0,0,0,37,72,58,37,77,58,37,83,37,109,47,37,100,47,37,121,37,89,45,37,109,45,37,100,37,73,58,37,77,58,37,83,32,37,112,37,72,58,37,77,37,72,58,37,77,58,37,83,108,111,99,97,108,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,48,49,50,51,52,53,54,55,56,57,0,37,76,102,0,109,111,110,101,121,95,103,101,116,32,101,114,114,111,114,0,48,49,50,51,52,53,54,55,56,57,0,37,46,48,76,102,0,116,114,117,101,0,102,97,108,115,101,0,83,117,110,100,97,121,0,77,111,110,100,97,121,0,84,117,101,115,100,97,121,0,87,101,100,110,101,115,100,97,121,0,84,104,117,114,115,100,97,121,0,70,114,105,100,97,121,0,83,97,116,117,114,100,97,121,0,83,117,110,0,77,111,110,0,84,117,101,0,87,101,100,0,84,104,117,0,70,114,105,0,83,97,116,0,74,97,110,117,97,114,121,0,70,101,98,114,117,97,114,121,0,77,97,114,99,104,0,65,112,114,105,108,0,77,97,121,0,74,117,110,101,0,74,117,108,121,0,65,117,103,117,115,116,0,83,101,112,116,101,109,98,101,114,0,79,99,116,111,98,101,114,0,78,111,118,101,109,98,101,114,0,68,101,99,101,109,98,101,114,0,74,97,110,0,70,101,98,0,77,97,114,0,65,112,114,0,74,117,110,0,74,117,108,0,65,117,103,0,83,101,112,0,79,99,116,0,78,111,118,0,68,101,99,0,65,77,0,80,77,0,37,109,47,37,100,47,37,121,0,37,72,58,37,77,58,37,83,0,37,97,32,37,98,32,37,100,32,37,72,58,37,77,58,37,83,32,37,89,0,37,73,58,37,77,58,37,83,32,37,112,0,78,83,116,51,95,95,49,49,51,109,101,115,115,97,103,101,115,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,119,69,69,0,78,83,116,51,95,95,49,49,49,95,95,109,111,110,101,121,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,49,49,48,109,111,110,101,121,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,48,95,95,116,105,109,101,95,112,117,116,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,119,69,69,0,78,83,116,51,95,95,49,50,48,95,95,116,105,109,101,95,103,101,116,95,99,95,115,116,111,114,97,103,101,73,99,69,69,0,78,83,116,51,95,95,49,57,116,105,109,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,119,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,112,117,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,112,117,116,73,99,69,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,119,69,69,0,78,83,116,51,95,95,49,49,52,95,95,110,117,109,95,103,101,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,57,95,95,110,117,109,95,103,101,116,73,99,69,69,0,78,83,116,51,95,95,49,49,50,99,111,100,101,99,118,116,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,48,99,116,121,112,101,95,98,97,115,101,69,0,78,83,116,51,95,95,49,49,52,95,95,115,104,97,114,101,100,95,99,111,117,110,116,69,0,78,83,116,51,95,95,49,49,50,115,121,115,116,101,109,95,101,114,114,111,114,69,0,78,83,116,51,95,95,49,49,52,101,114,114,111,114,95,99,97,116,101,103,111,114,121,69,0,78,83,116,51,95,95,49,49,50,95,95,100,111,95,109,101,115,115,97,103,101,69,0,58,32,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+60216);





/* no memory initializer */
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

   
  Module["_i64Add"] = _i64Add;

   
  Module["_i64Subtract"] = _i64Subtract;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr;
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  var _emscripten_resume=true;

  var _emscripten_landingpad=true;

  
  
  function _free() {
  }
  Module["_free"] = _free;function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
      }
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      asm['setThrew'](0);
      // Call destructor if one is registered then clear it.
      var ptr = EXCEPTIONS.caught.pop();
      if (ptr) {
        EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(ptr));
        EXCEPTIONS.last = 0; // XXX in decRef?
      }
    }

  var _log=Math_log;

  var _emscripten_postinvoke=true;

  
  var PTHREAD_SPECIFIC={};
  
  var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key, destructor) {
      if (key == 0) {
        return ERRNO_CODES.EINVAL;
      }
      HEAP32[((key)>>2)]=PTHREAD_SPECIFIC_NEXT_KEY;
      // values start at 0
      PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
      PTHREAD_SPECIFIC_NEXT_KEY++;
      return 0;
    }

  
  
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/kripken/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var fd = process.stdin.fd;
              // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
              var usingDevice = false;
              try {
                fd = fs.openSync('/dev/stdin', 'r');
                usingDevice = true;
              } catch (e) {}
  
              bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
  
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['print'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            Module['printErr'](UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.buffer.byteLength which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        // If we are asked to expand the size of a file that already exists, revert to using a standard JS array to store the file
        // instead of a typed array. This makes resizing the array more flexible because we can just .push() elements at the back to
        // increase the size.
        if (node.contents && node.contents.subarray && newCapacity > node.contents.length) {
          node.contents = MEMFS.getFileDataAsRegularArray(node);
          node.usedBytes = node.contents.length; // We might be writing to a lazy-loaded file which had overridden this property, so force-reset it.
        }
  
        if (!node.contents || node.contents.subarray) { // Keep using a typed array if creating a new storage, or if old one was a typed array as well.
          var prevCapacity = node.contents ? node.contents.buffer.byteLength : 0;
          if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
          // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
          // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
          // avoid overshooting the allocation cap by a very large margin.
          var CAPACITY_DOUBLING_MAX = 1024 * 1024;
          newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
          if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
          var oldContents = node.contents;
          node.contents = new Uint8Array(newCapacity); // Allocate new storage.
          if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
          return;
        }
        // Not using a typed array to back the file storage. Use a standard JS array instead.
        if (!node.contents && newCapacity > 0) node.contents = [];
        while (node.contents.length < newCapacity) node.contents.push(0);
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[ERRNO_CODES.ENOENT];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) { // Can we just reuse the buffer we are given?
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
          transaction.onerror = function(e) {
            callback(this.error);
            e.preventDefault();
          };
  
          var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
          var index = store.index('timestamp');
  
          index.openKeyCursor().onsuccess = function(event) {
            var cursor = event.target.result;
  
            if (!cursor) {
              return callback(null, { type: 'remote', db: db, entries: entries });
            }
  
            entries[cursor.primaryKey] = { timestamp: cursor.key };
  
            cursor.continue();
          };
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { encoding: 'binary', canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // On Windows, directories return permission bits 'rw-rw-rw-', even though they have 'rwxrwxrwx', so
            // propagate write bits to execute bits.
            stat.mode = stat.mode | ((stat.mode & 146) >> 1);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(ERRNO_CODES[e.code]);
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsToPermissionStringMap:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",4096:"rs",4098:"rs+"},flagsToPermissionString:function (flags) {
        if (flags in NODEFS.flagsToPermissionStringMap) {
          return NODEFS.flagsToPermissionStringMap[flags];
        } else {
          return flags;
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsToPermissionString(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
        },read:function (stream, buffer, offset, length, position) {
          if (length === 0) return 0; // node errors on 0 length reads
          // FIXME this is terrible.
          var nbuffer = new Buffer(length);
          var res;
          try {
            res = fs.readSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          if (res > 0) {
            for (var i = 0; i < res; i++) {
              buffer[offset + i] = nbuffer[i];
            }
          }
          return res;
        },write:function (stream, buffer, offset, length, position) {
          // FIXME this is terrible.
          var nbuffer = new Buffer(buffer.subarray(offset, offset + length));
          var res;
          try {
            res = fs.writeSync(stream.nfd, nbuffer, 0, length, position);
          } catch (e) {
            throw new FS.ErrnoError(ERRNO_CODES[e.code]);
          }
          return res;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES[e.code]);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
  
          return position;
        }}};
  
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
  
      /*
      // Disabled, see https://github.com/kripken/emscripten/issues/2770
      stream = FS.getStreamFromPtr(stream);
      if (stream.stream_ops.flush) {
        stream.stream_ops.flush(stream);
      }
      */
    }
  Module["_fflush"] = _fflush;var FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 2097155;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return ERRNO_CODES.EACCES;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 2097155) !== 0 ||  // opening for write
              (flags & 512)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            callback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            Module['printErr']('read file: ' + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        opts.encoding = opts.encoding || 'utf8';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var stream = FS.open(path, opts.flags, opts.mode);
        if (opts.encoding === 'utf8') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, 0, opts.canOwn);
        } else if (opts.encoding === 'binary') {
          FS.write(stream, data, 0, data.length, 0, opts.canOwn);
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto !== 'undefined') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else if (ENVIRONMENT_IS_NODE) {
          // for nodejs
          random_device = function() { return require('crypto').randomBytes(1)[0]; };
        } else {
          // default for ES5 platforms
          random_device = function() { return (Math.random()*256)|0; };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 0777, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
  
        var stdout = FS.open('/dev/stdout', 'w');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
  
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          //Module.printErr(stackTrace()); // useful for debugging
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [ERRNO_CODES.ENOENT].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperty(node, "usedBytes", {
            get: function() { return this.contents.length; }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(ERRNO_CODES.EIO);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init();
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        HEAP32[(((buf)+(36))>>2)]=stat.size;
        HEAP32[(((buf)+(40))>>2)]=4096;
        HEAP32[(((buf)+(44))>>2)]=stat.blocks;
        HEAP32[(((buf)+(48))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(52))>>2)]=0;
        HEAP32[(((buf)+(56))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=stat.ino;
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.buffer, addr, len);
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
        ret = ret.slice(0, Math.max(0, bufsize));
        writeStringToMemory(ret, buf, true);
        return ret.length;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8, ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8, ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21506: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  var _BDtoIHigh=true;

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _pthread_cond_broadcast() {
      return 0;
    }

  var _ceil=Math_ceil;

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _pthread_mutex_unlock() {}

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _pthread_mutex_lock() {}

  var _llvm_pow_f64=Math_pow;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function ___cxa_guard_abort() {}

   
  Module["_memmove"] = _memmove;

  var _emscripten_preinvoke=true;

  var _BItoD=true;

  function _pthread_cond_wait() {
      return 0;
    }

  function ___cxa_rethrow() {
      ___cxa_end_catch.rethrown = true;
      var ptr = EXCEPTIONS.caught.pop();
      EXCEPTIONS.last = ptr;
      throw ptr;
    }

  function ___cxa_guard_release() {}

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

   
  Module["_memset"] = _memset;

  var _BDtoILow=true;

  function ___gxx_personality_v0() {
    }

  
  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month 
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? Pointer_stringify(tm_zone) : ''
      };
  
      var pattern = Pointer_stringify(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else { 
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year. 
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes 
          // January 4th, which is also the week that includes the first Thursday of the year, and 
          // is also the first week that contains at least four days in the year. 
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of 
          // the last week of the preceding year; thus, for Saturday 2nd January 1999, 
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th, 
          // or 31st is a Monday, it and any following days are part of week 1 of the following year. 
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
          
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          return leadingNulls(date.tm_hour < 13 ? date.tm_hour : date.tm_hour-12, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour > 0 && date.tm_hour < 13) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Sunday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
          
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week) 
          // as a decimal number [01,53]. If the week containing 1 January has four 
          // or more days in the new year, then it is considered week 1. 
          // Otherwise, it is the last week of the previous year, and the next week is week 1. 
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          } 
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53]. 
          // The first Monday of January is the first day of week 1; 
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      } 
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }

  function _abort() {
      Module['abort']();
    }


  function _pthread_once(ptr, func) {
      if (!_pthread_once.seen) _pthread_once.seen = {};
      if (ptr in _pthread_once.seen) return;
      Runtime.dynCall('v', func);
      _pthread_once.seen[ptr] = 1;
    }

  var _tan=Math_tan;

  function ___lock() {}

  function ___unlock() {}

  var _asin=Math_asin;

  function _pthread_getspecific(key) {
      return PTHREAD_SPECIFIC[key] || 0;
    }

  var _fabs=Math_abs;

  var _floor=Math_floor;

  var _sqrt=Math_sqrt;

  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          setTimeout(Browser.mainLoop.runner, value); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(function() {
          if (typeof arg !== 'undefined') {
            Runtime.dynCall('vi', func, [arg]);
          } else {
            Runtime.dynCall('v', func);
          }
        });
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};

  function _pthread_setspecific(key, value) {
      if (!(key in PTHREAD_SPECIFIC)) {
        return ERRNO_CODES.EINVAL;
      }
      PTHREAD_SPECIFIC[key] = value;
      return 0;
    }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  var _sin=Math_sin;

  var _atan=Math_atan;

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  function _llvm_eh_typeid_for(type) {
      return type;
    }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var _acos=Math_acos;

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }


  var _cos=Math_cos;

  var _exp=Math_exp;

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var ___dso_handle=allocate(1, "i32*", ALLOC_STATIC);
FS.staticInit();__ATINIT__.unshift(function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() });__ATMAIN__.push(function() { FS.ignorePermissions = false });__ATEXIT__.push(function() { FS.quit() });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;Module["FS_unlink"] = FS.unlink;
__ATINIT__.unshift(function() { TTY.init() });__ATEXIT__.push(function() { TTY.shutdown() });
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); }
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");

 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);


function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11) {
  try {
    return Module["dynCall_iiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {
  try {
    Module["dynCall_viiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iid(index,a1,a2) {
  try {
    return Module["dynCall_iid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10) {
  try {
    Module["dynCall_viiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  try {
    return Module["dynCall_diii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiid(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiid"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiiid(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_iiiiiid": invoke_iiiiiid, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_ii": invoke_ii, "invoke_iiiiiiiiiiii": invoke_iiiiiiiiiiii, "invoke_iiii": invoke_iiii, "invoke_viiiiiiiiiiiiiii": invoke_viiiiiiiiiiiiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iid": invoke_iid, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_diii": invoke_diii, "invoke_i": invoke_i, "invoke_iiiii": invoke_iiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiiid": invoke_iiiiid, "invoke_viiii": invoke_viiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_strftime": _strftime, "_pthread_cond_wait": _pthread_cond_wait, "_sin": _sin, "_exp": _exp, "_llvm_pow_f64": _llvm_pow_f64, "_acos": _acos, "___syscall54": ___syscall54, "_pthread_cleanup_push": _pthread_cleanup_push, "_abort": _abort, "___cxa_guard_acquire": ___cxa_guard_acquire, "___setErrNo": ___setErrNo, "___gxx_personality_v0": ___gxx_personality_v0, "___assert_fail": ___assert_fail, "___cxa_free_exception": ___cxa_free_exception, "___cxa_allocate_exception": ___cxa_allocate_exception, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_floor": _floor, "___cxa_guard_abort": ___cxa_guard_abort, "_pthread_cond_broadcast": _pthread_cond_broadcast, "___cxa_guard_release": ___cxa_guard_release, "__addDays": __addDays, "_strftime_l": _strftime_l, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_llvm_eh_typeid_for": _llvm_eh_typeid_for, "_sbrk": _sbrk, "_atan": _atan, "___cxa_begin_catch": ___cxa_begin_catch, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___cxa_end_catch": ___cxa_end_catch, "___resumeException": ___resumeException, "_asin": _asin, "_sysconf": _sysconf, "_pthread_getspecific": _pthread_getspecific, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "__arraySum": __arraySum, "_fabs": _fabs, "_cos": _cos, "_pthread_self": _pthread_self, "_pthread_mutex_unlock": _pthread_mutex_unlock, "_pthread_once": _pthread_once, "_sqrt": _sqrt, "___cxa_rethrow": ___cxa_rethrow, "_pthread_key_create": _pthread_key_create, "___unlock": ___unlock, "_pthread_setspecific": _pthread_setspecific, "__isLeapYear": __isLeapYear, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_log": _log, "_tan": _tan, "___cxa_atexit": ___cxa_atexit, "___cxa_throw": ___cxa_throw, "___lock": ___lock, "___syscall6": ___syscall6, "___syscall5": ___syscall5, "_time": _time, "_pthread_mutex_lock": _pthread_mutex_lock, "___syscall221": ___syscall221, "_ceil": _ceil, "_atexit": _atexit, "___syscall140": ___syscall140, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "___dso_handle": ___dso_handle };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vid=env.invoke_vid;
  var invoke_iiiiiid=env.invoke_iiiiiid;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiiiiiiiiiii=env.invoke_iiiiiiiiiiii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiiiiiiiiiiii=env.invoke_viiiiiiiiiiiiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iid=env.invoke_iid;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiiiiiiii=env.invoke_viiiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_diii=env.invoke_diii;
  var invoke_i=env.invoke_i;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiid=env.invoke_viiid;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiiid=env.invoke_iiiiid;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _strftime=env._strftime;
  var _pthread_cond_wait=env._pthread_cond_wait;
  var _sin=env._sin;
  var _exp=env._exp;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _acos=env._acos;
  var ___syscall54=env.___syscall54;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _abort=env._abort;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var ___setErrNo=env.___setErrNo;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_free_exception=env.___cxa_free_exception;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var _floor=env._floor;
  var ___cxa_guard_abort=env.___cxa_guard_abort;
  var _pthread_cond_broadcast=env._pthread_cond_broadcast;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var __addDays=env.__addDays;
  var _strftime_l=env._strftime_l;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _llvm_eh_typeid_for=env._llvm_eh_typeid_for;
  var _sbrk=env._sbrk;
  var _atan=env._atan;
  var ___cxa_begin_catch=env.___cxa_begin_catch;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___cxa_end_catch=env.___cxa_end_catch;
  var ___resumeException=env.___resumeException;
  var _asin=env._asin;
  var _sysconf=env._sysconf;
  var _pthread_getspecific=env._pthread_getspecific;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var __arraySum=env.__arraySum;
  var _fabs=env._fabs;
  var _cos=env._cos;
  var _pthread_self=env._pthread_self;
  var _pthread_mutex_unlock=env._pthread_mutex_unlock;
  var _pthread_once=env._pthread_once;
  var _sqrt=env._sqrt;
  var ___cxa_rethrow=env.___cxa_rethrow;
  var _pthread_key_create=env._pthread_key_create;
  var ___unlock=env.___unlock;
  var _pthread_setspecific=env._pthread_setspecific;
  var __isLeapYear=env.__isLeapYear;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _log=env._log;
  var _tan=env._tan;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_throw=env.___cxa_throw;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var ___syscall5=env.___syscall5;
  var _time=env._time;
  var _pthread_mutex_lock=env._pthread_mutex_lock;
  var ___syscall221=env.___syscall221;
  var _ceil=env._ceil;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, $ast_) {
 $this = $this | 0;
 $ast_ = $ast_ | 0;
 var $$$i$i$i$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i432 = 0, $$0$i$i$i$i$i$i$i$i$i$i422 = 0, $$0$i$i$i$i$i$i$i$i$i1050 = 0, $$0$i$i$i$i$i$i$i$i$i1502 = 0, $$0$i$i$i$i$i$i$i$i$i2$i = 0, $$0$i$i$i$i$i$i$i$i$i2053 = 0, $$0$i$i$i$i$i$i$i$i$i2092 = 0, $$0$i$i$i$i$i$i$i$i$i2213 = 0, $$0$i$i$i$i$i$i$i$i$i2252 = 0, $$0$i$i$i$i$i$i$i$i$i760 = 0, $$0$i$i$i$i$i$i$i$i1052 = 0, $$0$i$i$i$i$i$i$i$i1504 = 0, $$0$i$i$i$i$i$i$i$i2055 = 0, $$0$i$i$i$i$i$i$i$i2094 = 0, $$0$i$i$i$i$i$i$i$i2215 = 0, $$0$i$i$i$i$i$i$i$i2254 = 0, $$0$i$i$i$i$i$i$i$i451 = 0, $$0$i$i$i$i$i$i$i$i762 = 0, $$0$i$i$i$i$i$i$i423 = 0, $$0$i$i$i$i$i$i1070 = 0, $$0$i$i$i$i$i$i1184 = 0, $$0$i$i$i$i$i$i1522 = 0, $$0$i$i$i$i$i$i2073 = 0, $$0$i$i$i$i$i$i2114 = 0, $$0$i$i$i$i$i$i2233 = 0, $$0$i$i$i$i$i$i2272 = 0, $$0$i$i$i$i$i$i3$i = 0, $$0$i$i$i$i$i$i780 = 0, $$0$i$i$i$i$i1072 = 0, $$0$i$i$i$i$i1186 = 0, $$0$i$i$i$i$i1524 = 0, $$0$i$i$i$i$i2075 = 0, $$0$i$i$i$i$i2116 = 0, $$0$i$i$i$i$i2235 = 0, $$0$i$i$i$i$i2274 = 0, $$0$i$i$i$i$i782 = 0, $$0$i$i$i$i1$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i445 = 0, $$0$i$i$i$i1$i$i1064 = 0, $$0$i$i$i$i1$i$i1516 = 0, $$0$i$i$i$i1$i$i2067 = 0, $$0$i$i$i$i1$i$i2108 = 0, $$0$i$i$i$i1$i$i2227 = 0, $$0$i$i$i$i1$i$i2266 = 0, $$0$i$i$i$i1$i$i774 = 0, $$0$i$i$i$i1182 = 0, $$0$i$i$i$i564 = 0, $$0$i$i$i11$i$i$i = 0, $$0$i$i$i1572 = 0, $$0$i$i$i1572$us = 0, $$0$i$i$i1609 = 0, $$0$i$i$i1637 = 0, $$0$i$i$i566 = 0, $$0$i$i13$i$i$i = 0, $$0$i$i1573 = 0, $$0$i$i1573$us = 0, $$0$i$i1611 = 0, $$0$i$i1639 = 0, $$0$i$i27$i$i$i = 0, $$0$i$i517 = 0, $$0$i$i8$i$i$i = 0, $$0$i$i9$i$i$i = 0, $$0$i$i9$i$i$i$lcssa = 0, $$0$i1$i$i$i$i = 0, $$0$i1$i$i$i$i$lcssa = 0, $$0$i1122 = 0, $$0$i1141 = 0, $$0$i1670 = 0, $$0$i1708 = 0, $$0$i1727 = 0, $$0$i1935 = 0, $$0$i1955 = 0, $$0$i1969 = 0, $$0$i1996 = 0, $$0$i2150 = 0, $$0$i2163 = 0, $$0$i2306 = 0, $$0$i5$i$i = 0, $$0$i526 = 0, $$0$i530 = 0, $$0$i610$i$i = 0, $$0$i611$i$i = 0, $$0$i697 = 0, $$0$i7$i = 0, $$0$i7$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i7$i$i$i$i$i = 0, $$0$i7$i$i$i$i$i472 = 0, $$0$i7$i$i$i$i$i644 = 0, $$0$i7$i$i$i$i$i981 = 0, $$0$i7$i$i1036 = 0, $$0$i7$i$i1102 = 0, $$0$i7$i$i1175 = 0, $$0$i7$i$i1630 = 0, $$0$i7$i$i721 = 0, $$0$i7$i$i898 = 0, $$0$i7$i$i919 = 0, $$0$i7$i1088 = 0, $$0$i7$i1201 = 0, $$0$i7$i1542 = 0, $$0$i7$i2025 = 0, $$0$i7$i2038 = 0, $$0$i7$i2140 = 0, $$0$i7$i2198 = 0, $$0$i7$i2292 = 0, $$0$i7$i557 = 0, $$0$i7$i800 = 0, $$0$i8$i$i = 0, $$0$i8$i$i$i$i = 0, $$0$i8$i$i$i$i$i = 0, $$0$i8$i$i$i$i$i474 = 0, $$0$i8$i$i$i$i$i645 = 0, $$0$i8$i$i$i$i$i982 = 0, $$0$i8$i$i1037 = 0, $$0$i8$i$i1103 = 0, $$0$i8$i$i1176 = 0, $$0$i8$i$i1631 = 0, $$0$i8$i$i722 = 0, $$0$i8$i$i899 = 0, $$0$i8$i$i920 = 0, $$0$i9$i$i = 0, $$0$i9$i$i835 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i$lcssa = 0, $$0$ph$lcssa$i$i$i2172 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i2165 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i436 = 0, $$01$i$i$i$i$i$i$i$i1055 = 0, $$01$i$i$i$i$i$i$i$i1507 = 0, $$01$i$i$i$i$i$i$i$i2058 = 0, $$01$i$i$i$i$i$i$i$i2097 = 0, $$01$i$i$i$i$i$i$i$i2218 = 0, $$01$i$i$i$i$i$i$i$i2257 = 0, $$01$i$i$i$i$i$i$i$i765 = 0, $$01$i$i$i$i$i$i$i455 = 0, $$01$i$i$i$i$i1075 = 0, $$01$i$i$i$i$i1189 = 0, $$01$i$i$i$i$i1527 = 0, $$01$i$i$i$i$i2078 = 0, $$01$i$i$i$i$i2119 = 0, $$01$i$i$i$i$i2238 = 0, $$01$i$i$i$i$i2277 = 0, $$01$i$i$i$i$i785 = 0, $$01$i$i$i459 = 0, $$01$i$i$i546 = 0, $$01$i$i$i569 = 0, $$01$i$i$i746 = 0, $$01$i$i$i838 = 0, $$01$i$i1575 = 0, $$01$i$i1575$us = 0, $$01$i$i16$i$i$i = 0, $$01$i$i1614 = 0, $$01$i$i1642 = 0, $$01$i$i516 = 0, $$01$i$i728 = 0, $$01$i1121 = 0, $$01$i1140 = 0, $$01$i1669 = 0, $$01$i1707 = 0, $$01$i1726 = 0, $$01$i1934 = 0, $$01$i1968 = 0, $$01$i2149 = 0, $$01$i2305 = 0, $$01$i525 = 0, $$01$i529 = 0, $$01$i6$i$i = 0, $$01$i6$i$i818 = 0, $$01$i696 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i$i = 0, $$01$ph5$i$i$i2166 = 0, $$010 = 0, $$010$lcssa8847 = 0, $$013$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i2168 = 0, $$013$i$i$i2168$lcssa = 0, $$0136 = 0, $$0139 = 0, $$0142 = 0, $$0144 = 0, $$0146 = 0, $$0149 = 0, $$0151 = 0, $$0154 = 0, $$0164 = 0, $$0168 = 0, $$0171 = 0, $$0175 = 0, $$0177 = 0, $$0179 = 0, $$0183 = 0, $$0187 = 0, $$0189 = 0, $$0193 = 0, $$0197 = 0, $$02 = 0, $$0201 = 0, $$0205 = 0, $$0209 = 0, $$0212 = 0, $$0216 = 0, $$0218 = 0, $$0220 = 0, $$0222 = 0, $$0224 = 0, $$0228 = 0, $$0230 = 0, $$0233 = 0, $$0237 = 0, $$0239 = 0, $$0244 = 0, $$0246 = 0, $$0248 = 0, $$0250 = 0, $$06 = 0, $$1 = 0, $$10 = 0, $$1011292657 = 0, $$1012658 = 0, $$102 = 0, $$102130 = 0, $$103 = 0, $$103131 = 0, $$1038 = 0, $$104 = 0, $$104132 = 0, $$1061342661 = 0, $$1062662 = 0, $$107 = 0, $$107135 = 0, $$11 = 0, $$111$ph$be = 0, $$111$ph4097 = 0, $$1137 = 0, $$1139 = 0, $$1155 = 0, $$1165 = 0, $$1172 = 0, $$1180 = 0, $$1184 = 0, $$1190 = 0, $$1194 = 0, $$1198 = 0, $$12 = 0, $$1202 = 0, $$1206 = 0, $$1213 = 0, $$1225 = 0, $$1234 = 0, $$1240 = 0, $$1241 = 0, $$13 = 0, $$1322 = 0, $$1341 = 0, $$14 = 0, $$1442 = 0, $$162532 = 0, $$16442531 = 0, $$17 = 0, $$1723 = 0, $$1745 = 0, $$192536 = 0, $$19472535 = 0, $$2 = 0, $$20 = 0, $$2048 = 0, $$212 = 0, $$2138 = 0, $$2138$ph = 0, $$2156 = 0, $$2182522 = 0, $$222540 = 0, $$22502539 = 0, $$2302521 = 0, $$232544 = 0, $$23512543 = 0, $$2424 = 0, $$2452 = 0, $$262547 = 0, $$26542546 = 0, $$27 = 0, $$2755 = 0, $$292551 = 0, $$29572550 = 0, $$3 = 0, $$30 = 0, $$3058 = 0, $$313 = 0, $$3157 = 0, $$322555 = 0, $$32602554 = 0, $$33 = 0, $$3361 = 0, $$35262559 = 0, $$35632558 = 0, $$36 = 0, $$3664 = 0, $$382563 = 0, $$38662562 = 0, $$402567 = 0, $$40682566 = 0, $$412571 = 0, $$414 = 0, $$414$ph = 0, $$4158 = 0, $$41692570 = 0, $$42 = 0, $$4202525 = 0, $$4270 = 0, $$4322524 = 0, $$432574 = 0, $$43712573 = 0, $$44 = 0, $$4472 = 0, $$45 = 0, $$4573 = 0, $$462577 = 0, $$46742576 = 0, $$472582 = 0, $$47752581 = 0, $$492585 = 0, $$49772584 = 0, $$50 = 0, $$5078 = 0, $$512589 = 0, $$515 = 0, $$5159 = 0, $$51792588 = 0, $$52 = 0, $$5212529 = 0, $$5280 = 0, $$532592 = 0, $$5332528 = 0, $$53812591 = 0, $$54 = 0, $$5482 = 0, $$552595 = 0, $$55832594 = 0, $$56 = 0, $$5684 = 0, $$572598 = 0, $$57852597 = 0, $$582601 = 0, $$58862600 = 0, $$59 = 0, $$5987 = 0, $$6 = 0, $$60 = 0, $$6088 = 0, $$6160 = 0, $$622606 = 0, $$62902605 = 0, $$63 = 0, $$634 = 0, $$6391 = 0, $$652610 = 0, $$65932609 = 0, $$66 = 0, $$6694 = 0, $$682614 = 0, $$68962613 = 0, $$692618 = 0, $$69972617 = 0, $$7 = 0, $$70 = 0, $$7098 = 0, $$71 = 0, $$7161 = 0, $$7199 = 0, $$731012620 = 0, $$732621 = 0, $$735 = 0, $$74 = 0, $$74102 = 0, $$761042624 = 0, $$762625 = 0, $$771052628 = 0, $$772629 = 0, $$78 = 0, $$78106 = 0, $$79 = 0, $$79107 = 0, $$8 = 0, $$811092631 = 0, $$812632 = 0, $$821102635 = 0, $$822636 = 0, $$836 = 0, $$841122638 = 0, $$842639 = 0, $$85 = 0, $$85113 = 0, $$86 = 0, $$86114 = 0, $$881162642 = 0, $$882643 = 0, $$891172646 = 0, $$892647 = 0, $$9 = 0, $$90 = 0, $$90118 = 0, $$921202649 = 0, $$922650 = 0, $$93 = 0, $$93121 = 0, $$937 = 0, $$94 = 0, $$94122 = 0, $$95 = 0, $$95123 = 0, $$96 = 0, $$96124 = 0, $$981262653 = 0, $$982654 = 0, $$99 = 0, $$99127 = 0, $$__last$i$i = 0, $$__last$i$i815 = 0, $$cast = 0, $$cast$lcssa = 0, $$idx$i = 0, $$idx$val = 0, $$idx$val$i$i$i$i743 = 0, $$idx$val$i$i$i$i833 = 0, $$idx$val$i$i$i735 = 0, $$idx$val$i$i$i810 = 0, $$idx$val$i$i$pre$i$i = 0, $$idx$val$i$i$pre$i$i$i$i = 0, $$idx$val$i$i$pre$i$i$i$i$i = 0, $$idx$val$i$i$pre$i$i$i$i$i464 = 0, $$idx$val$i$i$pre$i$i$i$i$i637 = 0, $$idx$val$i$i$pre$i$i$i$i$i974 = 0, $$idx$val$i$i$pre$i$i1029 = 0, $$idx$val$i$i$pre$i$i1097 = 0, $$idx$val$i$i$pre$i$i1168 = 0, $$idx$val$i$i$pre$i$i1623 = 0, $$idx$val$i$i$pre$i$i714 = 0, $$idx$val$i$i$pre$i$i891 = 0, $$idx$val$i$i$pre$i$i912 = 0, $$idx$val$i400 = 0, $$idx$val$i410 = 0, $$idx$val$i532 = 0, $$idx$val$i534 = 0, $$idx$val$i614 = 0, $$idx$val$i624 = 0, $$idx$val$i676 = 0, $$idx$val$i68540624095 = 0, $$idx$val$i7025084 = 0, $$idx$val$i7025084$lcssa8228 = 0, $$idx$val$i7025085 = 0, $$idx$val$i733 = 0, $$idx$val$i808 = 0, $$idx$val$i860 = 0, $$idx$val$i860$lcssa8247 = 0, $$idx$val$i860$lcssa8248 = 0, $$idx$val$i860$lcssa8248$lcssa = 0, $$idx$val$i860$lcssa8249 = 0, $$idx$val$i860$lcssa8250 = 0, $$idx$val$i860$lcssa8251 = 0, $$idx$val$i860$lcssa8251$lcssa8266 = 0, $$idx$val$i860$lcssa8252 = 0, $$idx$val$i860$lcssa8253 = 0, $$idx$val$i860$lcssa8254 = 0, $$idx$val$i860$lcssa8255 = 0, $$idx$val$i860$lcssa8255$lcssa8267 = 0, $$idx$val$i860$lcssa8256 = 0, $$idx$val$i860$lcssa8258 = 0, $$idx$val$i860$lcssa8259 = 0, $$idx$val$i860$lcssa8259$lcssa8275 = 0, $$idx$val$i860$lcssa82598277 = 0, $$idx$val$i860$lcssa8260 = 0, $$idx$val$i860$lcssa8260$lcssa8280 = 0, $$idx$val$i860$lcssa8261 = 0, $$idx$val$i860$lcssa8262 = 0, $$idx$val$i860$lcssa8263 = 0, $$idx$val$lcssa = 0, $$idx$val2$i$i$i = 0, $$idx$val2$i$i$i$i = 0, $$idx$val2$i$i$i$i425 = 0, $$idx$val2$i$i1043 = 0, $$idx$val2$i$i1495 = 0, $$idx$val2$i$i2046 = 0, $$idx$val2$i$i2085 = 0, $$idx$val2$i$i2206 = 0, $$idx$val2$i$i2245 = 0, $$idx$val2$i$i753 = 0, $$idx1$i = 0, $$idx1$i$i$i = 0, $$idx1$i$i$i811 = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i = 0, $$idx1$val$i$i$i$i$i$i$i467 = 0, $$idx1$val$i$i$i$i$i$i$i639 = 0, $$idx1$val$i$i$i$i$i$i$i976 = 0, $$idx1$val$i$i$i$i1031 = 0, $$idx1$val$i$i$i$i1099 = 0, $$idx1$val$i$i$i$i1155 = 0, $$idx1$val$i$i$i$i1170 = 0, $$idx1$val$i$i$i$i1625 = 0, $$idx1$val$i$i$i$i716 = 0, $$idx1$val$i$i$i$i742 = 0, $$idx1$val$i$i$i$i832 = 0, $$idx1$val$i$i$i$i893 = 0, $$idx1$val$i$i$i$i914 = 0, $$idx1$val$i$i$i479 = 0, $$idx1$val$i$i$i650 = 0, $$idx1$val$i$i$i736 = 0, $$idx1$val$i$i$i812 = 0, $$idx1$val$i$i$i987 = 0, $$idx1$val$i$i14$i$i = 0, $$idx1$val$i$i14$i$i827 = 0, $$idx1$val$i68740634096 = 0, $$idx1$val$i68740634098 = 0, $$idx1$val$i704 = 0, $$idx2$val$i22$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i443 = 0, $$idx2$val$i22$i$i$i$i$i$i1062 = 0, $$idx2$val$i22$i$i$i$i$i$i1514 = 0, $$idx2$val$i22$i$i$i$i$i$i2065 = 0, $$idx2$val$i22$i$i$i$i$i$i2106 = 0, $$idx2$val$i22$i$i$i$i$i$i2225 = 0, $$idx2$val$i22$i$i$i$i$i$i2264 = 0, $$idx2$val$i22$i$i$i$i$i$i772 = 0, $$idx2$val$i709 = 0, $$idx254 = 0, $$idx254$lcssa = 0, $$idx256$val = 0, $$idx260$val = 0, $$idx260$val$lcssa = 0, $$idx261 = 0, $$idx261$lcssa = 0, $$idx261$val = 0, $$idx261$val$lcssa = 0, $$idx264 = 0, $$idx266$val = 0, $$idx267 = 0, $$idx267$val = 0, $$idx268$pre$phiZZ2D = 0, $$idx268$val = 0, $$idx268$val$lcssa = 0, $$idx270$val25184067 = 0, $$idx271$val = 0, $$idx271$val25194086 = 0, $$idx272$val = 0, $$idx272$val25204082 = 0, $$idx274$val = 0, $$idx275$val = 0, $$idx311 = 0, $$idx394 = 0, $$idx4$val$i$i = 0, $$idx4$val$i$i$i = 0, $$idx4$val$i$i$i1001 = 0, $$idx4$val$i$i$i498 = 0, $$idx4$val$i$i$i664 = 0, $$idx5$val$i$i = 0, $$idx5$val$i$i$i = 0, $$idx5$val$i$i$i1000 = 0, $$idx5$val$i$i$i497 = 0, $$idx5$val$i$i$i663 = 0, $$idx5$val19$i$i = 0, $$idx5$val19$i$i$i = 0, $$idx5$val19$i$i$i492 = 0, $$idx5$val19$i$i$i657 = 0, $$idx5$val19$i$i$i994 = 0, $$idx6$i$i$i990 = 0, $$idx6$val$i$i = 0, $$idx6$val$i$i$i = 0, $$idx6$val$i$i$i1007 = 0, $$idx6$val$i$i$i504 = 0, $$idx6$val$i$i$i670 = 0, $$idx6$val$pre$i$i = 0, $$idx6$val$pre$i$i$i = 0, $$idx6$val$pre$i$i$i1004 = 0, $$idx6$val$pre$i$i$i501 = 0, $$idx6$val$pre$i$i$i667 = 0, $$idx6$val11$i$i = 0, $$idx6$val11$i$i$i = 0, $$idx6$val11$i$i$i489 = 0, $$idx6$val11$i$i$i654 = 0, $$idx6$val11$i$i$i991 = 0, $$idx6$val14$i$i = 0, $$idx6$val14$i$i$i = 0, $$idx6$val14$i$i$i493 = 0, $$idx6$val14$i$i$i658 = 0, $$idx6$val14$i$i$i995 = 0, $$idx7$val$i$i = 0, $$idx7$val$i$i$i = 0, $$idx7$val$i$i$i1006 = 0, $$idx7$val$i$i$i503 = 0, $$idx7$val$i$i$i669 = 0, $$idx7$val12$i$i = 0, $$idx7$val12$i$i$i = 0, $$idx7$val12$i$i$i490 = 0, $$idx7$val12$i$i$i655 = 0, $$idx7$val12$i$i$i992 = 0, $$lcssa$i$i = 0, $$lcssa$i$i$i = 0, $$lcssa$i$i$i1011 = 0, $$lcssa$i$i$i508 = 0, $$lcssa$i$i$i673 = 0, $$lcssa8206 = 0, $$lcssa8207 = 0, $$lcssa8210 = 0, $$lcssa8211 = 0, $$lcssa8215 = 0, $$lcssa8216 = 0, $$lcssa8219 = 0, $$lcssa8220 = 0, $$lcssa8224 = 0, $$lcssa8225 = 0, $$lcssa8284 = 0, $$lcssa8286 = 0, $$lcssa8286$lcssa = 0, $$lcssa8288 = 0, $$lcssa8294 = 0, $$lcssa8297 = 0, $$lcssa8297$lcssa8304 = 0, $$lcssa8306 = 0, $$lcssa8306$lcssa = 0, $$lcssa8306$lcssa8309 = 0, $$lcssa8306$lcssa8310 = 0, $$lcssa8306$lcssa8311 = 0, $$lcssa8306$lcssa8314 = 0, $$lcssa8306$lcssa8315 = 0, $$lcssa8306$lcssa8316 = 0, $$lcssa8306$lcssa8317 = 0, $$lcssa8306$lcssa8318 = 0, $$lcssa8322 = 0, $$lcssa8322$lcssa = 0, $$lcssa8338 = 0, $$lcssa8355 = 0, $$lcssa8361 = 0, $$lcssa8362 = 0, $$lcssa8365 = 0, $$lcssa8366 = 0, $$lcssa8369 = 0, $$lcssa8370 = 0, $$lcssa8375 = 0, $$lcssa8376 = 0, $$lcssa8379 = 0, $$lcssa8380 = 0, $$lcssa8383 = 0, $$lcssa8384 = 0, $$lcssa8387 = 0, $$lcssa8388 = 0, $$lcssa8391 = 0, $$lcssa8392 = 0, $$lcssa8395 = 0, $$lcssa8396 = 0, $$lcssa8397 = 0, $$lcssa8399 = 0, $$lcssa8400 = 0, $$lcssa8403 = 0, $$lcssa8405 = 0, $$lcssa8406 = 0, $$lcssa8409 = 0, $$lcssa8410 = 0, $$lcssa8415 = 0, $$lcssa8416 = 0, $$lcssa8419 = 0, $$lcssa8420 = 0, $$lcssa8421 = 0, $$lcssa8423 = 0, $$lcssa8424 = 0, $$lcssa8425 = 0, $$lcssa8426 = 0, $$lcssa8427 = 0, $$lcssa8428 = 0, $$lcssa8430 = 0, $$lcssa8431 = 0, $$lcssa8436 = 0, $$lcssa8442 = 0, $$lcssa8447 = 0, $$lcssa8448 = 0, $$lcssa8455 = 0, $$lcssa8456 = 0, $$lcssa8459 = 0, $$lcssa8461 = 0, $$lcssa8467 = 0, $$lcssa8469 = 0, $$lcssa8470 = 0, $$lcssa8475 = 0, $$lcssa8475$lcssa8483 = 0, $$lcssa8477 = 0, $$lcssa8478 = 0, $$lcssa8480 = 0, $$lcssa8481 = 0, $$lcssa8482 = 0, $$lcssa8485 = 0, $$lcssa8487 = 0, $$lcssa8489 = 0, $$lcssa8491 = 0, $$lcssa8493 = 0, $$lcssa8494 = 0, $$lcssa8496 = 0, $$lcssa8501 = 0, $$lcssa8503 = 0, $$lcssa8504 = 0, $$lcssa8580 = 0, $$lcssa8585 = 0, $$lcssa8589 = 0, $$lcssa8600 = 0, $$lcssa8601 = 0, $$lcssa8605 = 0, $$lcssa8612 = 0, $$lcssa8613 = 0, $$lcssa8618 = 0, $$lcssa8651 = 0, $$lcssa8652 = 0, $$lcssa8657 = 0, $$lcssa8731 = 0, $$lcssa8733 = 0, $$lcssa8734 = 0, $$lcssa8735 = 0, $$lcssa8737 = 0, $$lcssa8738 = 0, $$lcssa8739 = 0, $$lcssa8740 = 0, $$lcssa8741 = 0, $$lcssa8745 = 0, $$lcssa8746 = 0, $$lcssa8748 = 0, $$lcssa8750 = 0, $$lcssa8751 = 0, $$lcssa8752 = 0, $$lcssa8757 = 0, $$lcssa8758 = 0, $$lcssa8763 = 0, $$lcssa8764 = 0, $$lcssa8765 = 0, $$lcssa8766 = 0, $$lcssa8767 = 0, $$lcssa8768 = 0, $$lcssa8769 = 0, $$lcssa8770 = 0, $$lcssa8771 = 0, $$lcssa8772 = 0, $$lcssa8773 = 0, $$lcssa8779 = 0, $$lcssa8784 = 0, $$lcssa8788 = 0, $$lcssa8792 = 0, $$lcssa8793 = 0, $$lcssa8795 = 0, $$lcssa8796 = 0, $$lcssa8797 = 0, $$lcssa8798 = 0, $$lcssa8799 = 0, $$lcssa8805 = 0, $$lcssa8811 = 0, $$lcssa8817 = 0, $$lcssa8823 = 0, $$lcssa8831 = 0, $$lcssa8832 = 0, $$lcssa8835 = 0, $$lcssa8836 = 0, $$lcssa8839 = 0, $$lcssa8840 = 0, $$lcssa8843 = 0, $$lcssa8844 = 0, $$lcssa9012 = 0, $$lcssa9182 = 0, $$lcssa9184 = 0, $$lcssa9186 = 0, $$lcssa9187 = 0, $$lcssa9188 = 0, $$phi$trans$insert5079 = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i430 = 0, $$pre$i$i$i$i$i$i1048 = 0, $$pre$i$i$i$i$i$i1500 = 0, $$pre$i$i$i$i$i$i2051 = 0, $$pre$i$i$i$i$i$i2090 = 0, $$pre$i$i$i$i$i$i2211 = 0, $$pre$i$i$i$i$i$i2250 = 0, $$pre$i$i$i$i$i$i758 = 0, $$pre$phi5096$lcssa$lcssa8342Z2D = 0, $$pre$phi5096$lcssa$lcssa8343Z2D = 0, $$pre$phi5096$lcssa$lcssa8344Z2D = 0, $$pre$phi5096$lcssa$lcssa8347Z2D = 0, $$pre$phi5096$lcssa$lcssa8348Z2D = 0, $$pre$phi5096$lcssa$lcssa8350Z2D = 0, $$pre$phi5096$lcssa$lcssa8351Z2D = 0, $$pre$phi5096$lcssa$lcssaZ2D = 0, $$pre$phi5096$lcssaZ2D = 0, $$pre$phi5096Z2D = 0, $$pre$phi5102Z2D = 0, $$pre5065 = 0, $$pre5067 = 0, $$pre5070 = 0, $$pre5074 = 0, $$pre5075 = 0, $$pre5076 = 0, $$sroa$22505 = 0, $$sroa$3 = 0, $$sroa$32363 = 0, $$sroa$32403 = 0, $$sroa$32436 = 0, $$sroa$32440 = 0, $$sroa$32444 = 0, $$sroa$32448 = 0, $$sroa$32456 = 0, $$sroa$32460 = 0, $$sroa$32464 = 0, $$sroa$32468 = 0, $$sroa$32487 = 0, $$sroa$32491 = 0, $$sroa$32495 = 0, $$sroa$32499 = 0, $$sroa$32509 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1003 = 0, $1005 = 0, $1007 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1013 = 0, $1014 = 0, $1017 = 0, $1018 = 0, $102 = 0, $1021 = 0, $1024 = 0, $1026 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1036 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1046 = 0, $105 = 0, $1055 = 0, $1057 = 0, $106 = 0, $1063 = 0, $1066 = 0, $1069 = 0, $107 = 0, $1073 = 0, $108 = 0, $1082 = 0, $1087 = 0, $1089 = 0, $109 = 0, $1093 = 0, $1095 = 0, $1097 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1107 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1116 = 0, $1118 = 0, $112 = 0, $1120 = 0, $1122 = 0, $1123 = 0, $113 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1141 = 0, $1143 = 0, $1145 = 0, $1149 = 0, $115 = 0, $1151 = 0, $1157 = 0, $116 = 0, $1161 = 0, $1168 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1176 = 0, $118 = 0, $1182 = 0, $119 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1195 = 0, $1197 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $121 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1233 = 0, $1234 = 0, $1238 = 0, $124 = 0, $1242 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1249 = 0, $125 = 0, $1251 = 0, $1254 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1264 = 0, $1266 = 0, $1268 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1276 = 0, $1277 = 0, $128 = 0, $1280 = 0, $1283 = 0, $1285 = 0, $129 = 0, $1292 = 0, $13 = 0, $130 = 0, $1306 = 0, $1309 = 0, $131 = 0, $1313 = 0, $132 = 0, $1322 = 0, $1327 = 0, $1329 = 0, $133 = 0, $1333 = 0, $1335 = 0, $1337 = 0, $1339 = 0, $134 = 0, $1341 = 0, $1345 = 0, $1346 = 0, $135 = 0, $1351 = 0, $1356 = 0, $1358 = 0, $136 = 0, $1362 = 0, $1367 = 0, $1369 = 0, $137 = 0, $1372 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1384 = 0, $1385 = 0, $1387 = 0, $1389 = 0, $139 = 0, $1391 = 0, $1395 = 0, $1396 = 0, $14 = 0, $140 = 0, $1401 = 0, $1406 = 0, $1408 = 0, $141 = 0, $1412 = 0, $1416 = 0, $1417 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1423 = 0, $1425 = 0, $1429 = 0, $143 = 0, $1431 = 0, $1433 = 0, $1436 = 0, $144 = 0, $1443 = 0, $145 = 0, $1451 = 0, $1457 = 0, $1458 = 0, $146 = 0, $1462 = 0, $1465 = 0, $1469 = 0, $147 = 0, $1471 = 0, $1472 = 0, $148 = 0, $1484 = 0, $149 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $15 = 0, $150 = 0, $1501 = 0, $1502 = 0, $1505 = 0, $1508 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $152 = 0, $1520 = 0, $1522 = 0, $1525 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1535 = 0, $1537 = 0, $1539 = 0, $154 = 0, $1541 = 0, $1542 = 0, $1547 = 0, $1548 = 0, $155 = 0, $1551 = 0, $1554 = 0, $1556 = 0, $156 = 0, $1563 = 0, $157 = 0, $1577 = 0, $158 = 0, $1580 = 0, $1584 = 0, $159 = 0, $1593 = 0, $1598 = 0, $16 = 0, $160 = 0, $1600 = 0, $1604 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1615 = 0, $1616 = 0, $162 = 0, $1628 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1635 = 0, $164 = 0, $1645 = 0, $165 = 0, $1651 = 0, $1652 = 0, $1657 = 0, $1658 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1665 = 0, $167 = 0, $1676 = 0, $168 = 0, $1682 = 0, $1683 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1695 = 0, $1696 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1703 = 0, $1704 = 0, $1706 = 0, $1709 = 0, $171 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1723 = 0, $1725 = 0, $173 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $174 = 0, $1740 = 0, $1745 = 0, $1747 = 0, $1749 = 0, $175 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1755 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1767 = 0, $1768 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1782 = 0, $1784 = 0, $1785 = 0, $1788 = 0, $179 = 0, $1791 = 0, $1793 = 0, $1795 = 0, $1796 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $181 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1822 = 0, $1824 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1835 = 0, $1838 = 0, $184 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1848 = 0, $185 = 0, $1850 = 0, $1852 = 0, $1854 = 0, $1855 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1867 = 0, $1869 = 0, $187 = 0, $1871 = 0, $1873 = 0, $188 = 0, $1881 = 0, $1882 = 0, $1885 = 0, $1887 = 0, $1888 = 0, $189 = 0, $1891 = 0, $1892 = 0, $1895 = 0, $19 = 0, $190 = 0, $1900 = 0, $1902 = 0, $1905 = 0, $191 = 0, $1911 = 0, $1915 = 0, $1917 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1922 = 0, $1924 = 0, $1926 = 0, $193 = 0, $1932 = 0, $1933 = 0, $1936 = 0, $1938 = 0, $194 = 0, $1941 = 0, $1946 = 0, $195 = 0, $1953 = 0, $1954 = 0, $196 = 0, $1961 = 0, $1964 = 0, $1967 = 0, $1969 = 0, $197 = 0, $1971 = 0, $1974 = 0, $1975 = 0, $1977 = 0, $198 = 0, $1981 = 0, $1986 = 0, $1987 = 0, $1989 = 0, $1991 = 0, $1992 = 0, $1995 = 0, $1997 = 0, $1999 = 0, $2 = 0, $20 = 0, $2002 = 0, $2003 = 0, $2007 = 0, $2009 = 0, $201 = 0, $2011 = 0, $2014 = 0, $202 = 0, $2022 = 0, $2025 = 0, $2027 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2037 = 0, $204 = 0, $2041 = 0, $2045 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2053 = 0, $2056 = 0, $206 = 0, $2061 = 0, $2063 = 0, $2064 = 0, $2067 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2072 = 0, $2074 = 0, $2076 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2086 = 0, $2087 = 0, $209 = 0, $2093 = 0, $2095 = 0, $2099 = 0, $21 = 0, $210 = 0, $211 = 0, $2113 = 0, $2115 = 0, $212 = 0, $2121 = 0, $2126 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2131 = 0, $2133 = 0, $2135 = 0, $214 = 0, $2141 = 0, $2142 = 0, $2145 = 0, $2147 = 0, $215 = 0, $2150 = 0, $2155 = 0, $216 = 0, $2162 = 0, $2163 = 0, $217 = 0, $2170 = 0, $2173 = 0, $2176 = 0, $2178 = 0, $218 = 0, $2180 = 0, $2183 = 0, $2184 = 0, $2186 = 0, $219 = 0, $2190 = 0, $2195 = 0, $2199 = 0, $22 = 0, $220 = 0, $2201 = 0, $2202 = 0, $2208 = 0, $221 = 0, $2211 = 0, $2218 = 0, $222 = 0, $2227 = 0, $223 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2237 = 0, $2238 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2247 = 0, $225 = 0, $2253 = 0, $2254 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2262 = 0, $2263 = 0, $2266 = 0, $2267 = 0, $2269 = 0, $227 = 0, $2271 = 0, $2272 = 0, $2274 = 0, $2275 = 0, $2277 = 0, $2279 = 0, $228 = 0, $2281 = 0, $229 = 0, $2291 = 0, $2292 = 0, $2294 = 0, $2295 = 0, $2297 = 0, $2299 = 0, $23 = 0, $230 = 0, $2301 = 0, $231 = 0, $2311 = 0, $2312 = 0, $2314 = 0, $2315 = 0, $2317 = 0, $232 = 0, $2320 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2326 = 0, $2328 = 0, $233 = 0, $2330 = 0, $2332 = 0, $2334 = 0, $2336 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2342 = 0, $2343 = 0, $2345 = 0, $2347 = 0, $2348 = 0, $235 = 0, $2352 = 0, $2355 = 0, $2357 = 0, $236 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2367 = 0, $2369 = 0, $237 = 0, $2371 = 0, $2373 = 0, $2374 = 0, $2377 = 0, $2378 = 0, $238 = 0, $2381 = 0, $2382 = 0, $2388 = 0, $239 = 0, $2390 = 0, $2392 = 0, $24 = 0, $240 = 0, $2400 = 0, $2403 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2417 = 0, $242 = 0, $2420 = 0, $2422 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $243 = 0, $2432 = 0, $2434 = 0, $2436 = 0, $2438 = 0, $2439 = 0, $244 = 0, $2442 = 0, $2443 = 0, $2446 = 0, $2447 = 0, $245 = 0, $2453 = 0, $2455 = 0, $2459 = 0, $246 = 0, $2461 = 0, $2464 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2473 = 0, $2475 = 0, $2476 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2481 = 0, $2484 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2498 = 0, $25 = 0, $250 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2509 = 0, $251 = 0, $2511 = 0, $2512 = 0, $2514 = 0, $2515 = 0, $2517 = 0, $252 = 0, $2520 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2526 = 0, $2527 = 0, $253 = 0, $254 = 0, $2543 = 0.0, $2545 = 0, $2546 = 0, $2549 = 0, $255 = 0, $2552 = 0, $2554 = 0, $2555 = 0, $256 = 0, $2566 = 0.0, $257 = 0, $2573 = 0.0, $258 = 0, $2580 = 0.0, $2587 = 0.0, $259 = 0, $2594 = 0.0, $2599 = 0, $26 = 0, $260 = 0, $2604 = 0, $2609 = 0, $261 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2618 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2623 = 0, $2624 = 0, $2626 = 0, $2629 = 0, $263 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $264 = 0, $2640 = 0, $2642 = 0, $2643 = 0, $2645 = 0, $2646 = 0, $2648 = 0, $265 = 0, $2651 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2662 = 0, $2664 = 0, $2665 = 0, $2667 = 0, $2668 = 0, $267 = 0, $2670 = 0, $2673 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2682 = 0, $2683 = 0, $2685 = 0, $2687 = 0, $2688 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2693 = 0, $2696 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2702 = 0, $2703 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2715 = 0, $2717 = 0, $272 = 0, $2720 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $273 = 0, $2730 = 0, $2732 = 0, $2734 = 0, $2736 = 0, $2737 = 0, $274 = 0, $2742 = 0, $2743 = 0, $2746 = 0, $2749 = 0, $275 = 0, $2751 = 0, $2758 = 0, $276 = 0, $277 = 0, $2772 = 0, $2775 = 0, $2779 = 0, $278 = 0, $2788 = 0, $279 = 0, $2793 = 0, $2795 = 0, $2799 = 0, $28 = 0, $280 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2808 = 0, $281 = 0, $2813 = 0, $2814 = 0, $282 = 0, $2821 = 0, $2827 = 0, $283 = 0, $2836 = 0, $2838 = 0, $284 = 0, $2840 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2846 = 0, $285 = 0, $2851 = 0, $2852 = 0, $2854 = 0, $2859 = 0, $286 = 0, $287 = 0, $2870 = 0, $2875 = 0, $2877 = 0, $288 = 0, $2882 = 0, $2883 = 0, $2885 = 0, $289 = 0, $2890 = 0, $29 = 0, $290 = 0, $2901 = 0, $2906 = 0, $2908 = 0, $291 = 0, $2913 = 0, $2914 = 0, $2916 = 0, $292 = 0, $2921 = 0, $293 = 0, $2932 = 0, $2937 = 0, $2939 = 0, $294 = 0, $2944 = 0, $2945 = 0, $2947 = 0, $295 = 0, $2952 = 0, $296 = 0, $2963 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2971 = 0, $2973 = 0, $2974 = 0, $2976 = 0, $2977 = 0, $2979 = 0, $298 = 0, $2982 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2991 = 0, $2993 = 0, $2995 = 0, $2998 = 0, $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3002 = 0, $3003 = 0, $3005 = 0, $3008 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3016 = 0, $3017 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3029 = 0, $303 = 0, $3032 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $304 = 0, $3042 = 0, $3044 = 0, $3046 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3054 = 0, $3055 = 0, $306 = 0, $3062 = 0, $3064 = 0, $3067 = 0, $307 = 0, $3075 = 0, $3076 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3082 = 0, $3084 = 0, $3086 = 0, $3089 = 0, $309 = 0, $3090 = 0, $3094 = 0, $3096 = 0, $3098 = 0, $31 = 0, $310 = 0, $3101 = 0, $3109 = 0, $311 = 0, $3112 = 0, $3114 = 0, $3116 = 0, $3117 = 0, $3119 = 0, $312 = 0, $3120 = 0, $3121 = 0, $3124 = 0, $3128 = 0, $313 = 0, $3132 = 0, $3137 = 0, $3138 = 0, $314 = 0, $3140 = 0, $3143 = 0, $3147 = 0, $315 = 0, $3153 = 0, $3154 = 0, $3156 = 0, $3158 = 0, $316 = 0, $3162 = 0, $3163 = 0, $3168 = 0, $3169 = 0, $317 = 0, $3175 = 0, $3177 = 0, $318 = 0, $3181 = 0, $319 = 0, $3190 = 0, $3193 = 0, $3195 = 0, $3196 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $321 = 0, $3211 = 0, $3213 = 0, $3216 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3222 = 0, $3225 = 0, $3227 = 0, $323 = 0, $3231 = 0, $3232 = 0, $3233 = 0, $3237 = 0, $3239 = 0, $324 = 0, $3241 = 0, $3243 = 0, $3244 = 0, $3247 = 0, $3248 = 0, $325 = 0, $3250 = 0, $3251 = 0, $3252 = 0, $3258 = 0, $326 = 0, $3260 = 0, $3262 = 0, $3264 = 0, $3266 = 0, $3268 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3276 = 0, $3278 = 0, $328 = 0, $3282 = 0, $3284 = 0, $3285 = 0, $3286 = 0, $3289 = 0, $329 = 0, $3294 = 0, $3296 = 0, $3298 = 0, $33 = 0, $330 = 0, $3300 = 0, $3301 = 0, $3302 = 0, $3304 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $331 = 0, $3310 = 0, $3312 = 0, $3313 = 0, $3315 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0, $3322 = 0, $3324 = 0, $3325 = 0, $3327 = 0, $3328 = 0, $333 = 0, $3330 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $334 = 0, $3341 = 0, $3346 = 0, $3348 = 0, $335 = 0, $3350 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3356 = 0, $3358 = 0, $3359 = 0, $336 = 0, $3360 = 0, $3368 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3373 = 0, $3376 = 0, $3378 = 0, $338 = 0, $3380 = 0, $3382 = 0, $3384 = 0, $3386 = 0, $3387 = 0, $339 = 0, $3390 = 0, $3393 = 0, $3394 = 0, $34 = 0, $340 = 0, $3400 = 0, $3402 = 0, $3405 = 0, $3408 = 0, $3409 = 0, $341 = 0, $3411 = 0, $3412 = 0, $3413 = 0, $3415 = 0, $3417 = 0, $3419 = 0, $342 = 0, $3424 = 0, $3428 = 0, $343 = 0, $3430 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3444 = 0, $3445 = 0, $3447 = 0, $3448 = 0, $345 = 0, $3454 = 0, $3457 = 0, $3459 = 0, $346 = 0, $3463 = 0, $3464 = 0, $3465 = 0, $3469 = 0, $347 = 0, $3471 = 0, $3473 = 0, $3475 = 0, $3476 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3483 = 0, $3484 = 0, $349 = 0, $3490 = 0, $3492 = 0, $3494 = 0, $3496 = 0, $3499 = 0, $35 = 0, $350 = 0, $3500 = 0, $3504 = 0, $3507 = 0, $351 = 0, $3510 = 0, $3518 = 0, $3519 = 0, $352 = 0, $3521 = 0, $3524 = 0, $3526 = 0, $3529 = 0, $353 = 0, $3533 = 0, $3536 = 0, $3538 = 0, $354 = 0, $3541 = 0, $3543 = 0, $3544 = 0, $3547 = 0, $3549 = 0, $355 = 0, $3553 = 0, $3557 = 0, $3559 = 0, $356 = 0, $3562 = 0, $3567 = 0, $3568 = 0, $357 = 0, $3571 = 0, $3572 = 0, $3573 = 0, $3574 = 0, $3577 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3582 = 0, $3583 = 0, $3586 = 0, $359 = 0, $3591 = 0, $3592 = 0, $3598 = 0, $36 = 0, $360 = 0, $3600 = 0, $3604 = 0, $3608 = 0, $361 = 0, $3610 = 0, $3613 = 0, $3619 = 0, $362 = 0, $3620 = 0, $3627 = 0, $3628 = 0, $363 = 0, $3632 = 0, $3633 = 0, $3635 = 0, $3637 = 0, $3639 = 0, $364 = 0, $3643 = 0, $3644 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3657 = 0, $3659 = 0, $366 = 0, $3664 = 0, $3665 = 0, $367 = 0, $3672 = 0, $3674 = 0, $3676 = 0, $3677 = 0, $368 = 0, $3683 = 0, $3685 = 0, $3686 = 0, $369 = 0, $3692 = 0, $3693 = 0, $3698 = 0, $37 = 0, $370 = 0, $3700 = 0, $3706 = 0.0, $3707 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3716 = 0, $3718 = 0, $372 = 0, $3722 = 0.0, $3723 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $373 = 0, $3732 = 0, $3734 = 0, $3738 = 0.0, $3739 = 0, $374 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3748 = 0, $375 = 0, $3750 = 0, $3754 = 0.0, $3755 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0, $3760 = 0, $3764 = 0, $3766 = 0, $377 = 0, $3770 = 0.0, $3771 = 0, $3773 = 0, $3774 = 0, $3775 = 0, $3776 = 0, $378 = 0, $3780 = 0, $3782 = 0, $3786 = 0.0, $3787 = 0, $3789 = 0, $379 = 0, $3790 = 0, $3791 = 0, $3792 = 0, $3796 = 0, $3798 = 0, $38 = 0, $380 = 0, $3802 = 0.0, $3803 = 0, $3805 = 0, $3806 = 0, $3807 = 0, $3808 = 0, $381 = 0, $3812 = 0, $3814 = 0, $3818 = 0.0, $3819 = 0, $382 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3828 = 0, $383 = 0, $3830 = 0, $3834 = 0.0, $3835 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0, $3840 = 0, $3844 = 0, $3846 = 0, $385 = 0, $3850 = 0.0, $3851 = 0, $3853 = 0, $3854 = 0, $3856 = 0, $3858 = 0, $386 = 0, $3860 = 0, $3861 = 0, $3862 = 0, $3864 = 0, $3866 = 0, $3867 = 0, $3868 = 0, $387 = 0, $3870 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3876 = 0, $3878 = 0, $3879 = 0, $388 = 0, $3880 = 0, $3882 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3888 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3894 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0, $390 = 0, $3904 = 0, $3906 = 0, $3909 = 0, $391 = 0, $3912 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3921 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3931 = 0, $3933 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3946 = 0, $3947 = 0, $395 = 0, $3951 = 0, $3952 = 0, $3955 = 0, $3957 = 0, $3959 = 0, $396 = 0, $3962 = 0, $3963 = 0, $3967 = 0, $3969 = 0, $397 = 0, $3971 = 0, $3974 = 0, $398 = 0, $3982 = 0, $3985 = 0, $3987 = 0, $3989 = 0, $399 = 0, $3990 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3997 = 0, $4 = 0, $40 = 0, $400 = 0, $4001 = 0, $4005 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4013 = 0, $4016 = 0, $402 = 0, $4020 = 0, $4021 = 0, $4025 = 0, $4027 = 0, $4029 = 0, $403 = 0, $4033 = 0, $4034 = 0, $4039 = 0, $404 = 0, $4040 = 0, $4043 = 0, $4047 = 0, $4049 = 0, $405 = 0, $4053 = 0, $406 = 0, $4061 = 0, $4064 = 0, $4066 = 0, $4067 = 0, $4069 = 0, $407 = 0, $4070 = 0, $4075 = 0, $4077 = 0, $408 = 0, $4082 = 0, $4083 = 0, $4085 = 0, $4087 = 0, $4088 = 0, $409 = 0, $4090 = 0, $4095 = 0, $4096 = 0, $4097 = 0, $4098 = 0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0, $4102 = 0, $4104 = 0, $411 = 0, $4114 = 0, $412 = 0, $4121 = 0, $4123 = 0, $4126 = 0, $413 = 0, $4134 = 0, $4135 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4141 = 0, $415 = 0, $4151 = 0, $4152 = 0, $416 = 0, $4163 = 0, $4165 = 0, $4168 = 0, $4177 = 0, $4178 = 0, $4180 = 0, $4183 = 0, $4185 = 0, $4186 = 0, $4188 = 0, $4190 = 0, $4193 = 0.0, $42 = 0, $4200 = 0.0, $4202 = 0, $4210 = 0, $4211 = 0, $4219 = 0.0, $4220 = 0, $4221 = 0, $4223 = 0, $4224 = 0, $4226 = 0, $4229 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4240 = 0, $4242 = 0, $4245 = 0, $4246 = 0, $4248 = 0, $4251 = 0, $4253 = 0, $4254 = 0, $4259 = 0, $4260 = 0, $4263 = 0, $4265 = 0, $4268 = 0, $4270 = 0, $4273 = 0, $4277 = 0, $4279 = 0, $4280 = 0, $4281 = 0, $4282 = 0, $4284 = 0, $4285 = 0, $4287 = 0, $4288 = 0, $4294 = 0, $4297 = 0, $4299 = 0, $43 = 0, $430 = 0, $4303 = 0, $4304 = 0, $4305 = 0, $4309 = 0, $4311 = 0, $4313 = 0, $4315 = 0, $4316 = 0, $4319 = 0, $432 = 0, $4320 = 0, $4323 = 0, $4324 = 0, $4330 = 0, $4332 = 0, $4334 = 0, $4336 = 0, $4339 = 0, $434 = 0, $4340 = 0, $4344 = 0, $4346 = 0, $4349 = 0, $435 = 0, $4357 = 0, $4358 = 0, $436 = 0, $4362 = 0, $4364 = 0, $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4371 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $4380 = 0, $4383 = 0, $4388 = 0, $4390 = 0, $4392 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $4398 = 0, $44 = 0, $4400 = 0, $4401 = 0, $4402 = 0, $4404 = 0, $4411 = 0, $4412 = 0, $4414 = 0, $4415 = 0, $4417 = 0, $442 = 0, $4420 = 0, $4421 = 0, $4422 = 0, $4424 = 0, $4426 = 0, $4427 = 0, $443 = 0, $4432 = 0, $4433 = 0.0, $4434 = 0, $4435 = 0, $4439 = 0, $4441 = 0, $4445 = 0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4452 = 0, $4457 = 0, $4459 = 0, $446 = 0, $4461 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4467 = 0, $4469 = 0, $447 = 0, $4470 = 0, $4471 = 0, $4473 = 0, $4475 = 0, $4476 = 0, $4478 = 0, $448 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4485 = 0, $4487 = 0, $4488 = 0, $449 = 0, $4490 = 0, $4491 = 0, $4492 = 0, $4495 = 0, $45 = 0, $4500 = 0, $4502 = 0, $4504 = 0, $4506 = 0, $4507 = 0, $4508 = 0, $4510 = 0, $4512 = 0, $4513 = 0, $4515 = 0, $4516 = 0, $4518 = 0, $452 = 0, $4520 = 0, $4521 = 0, $4523 = 0, $4526 = 0, $4528 = 0, $4530 = 0, $4531 = 0, $4533 = 0, $4535 = 0, $4537 = 0, $4538 = 0, $4539 = 0, $454 = 0, $4540 = 0, $4544 = 0, $4546 = 0, $4550 = 0.0, $4551 = 0, $4553 = 0, $4554 = 0, $4555 = 0, $4556 = 0, $4560 = 0, $4562 = 0, $4566 = 0.0, $4567 = 0, $4569 = 0, $4570 = 0, $4571 = 0, $4572 = 0, $4576 = 0, $4578 = 0, $458 = 0, $4582 = 0.0, $4583 = 0, $4585 = 0, $4586 = 0, $4587 = 0, $4588 = 0, $459 = 0, $4592 = 0, $4594 = 0, $46 = 0, $4600 = 0, $4602 = 0, $4603 = 0, $4604 = 0, $4605 = 0, $4610 = 0, $4612 = 0, $4615 = 0.0, $4617 = 0, $4618 = 0, $4620 = 0, $4623 = 0, $4624 = 0, $4625 = 0, $4627 = 0, $4628 = 0, $4631 = 0.0, $4632 = 0, $4634 = 0, $4635 = 0, $4639 = 0, $4641 = 0, $4644 = 0, $4645 = 0, $4648 = 0, $4649 = 0, $465 = 0, $4656 = 0, $4658 = 0, $4667 = 0, $4669 = 0, $4672 = 0, $4673 = 0, $4674 = 0, $4675 = 0, $4676 = 0, $4677 = 0, $4678 = 0, $4679 = 0, $468 = 0, $4681 = 0, $4683 = 0, $4684 = 0, $4686 = 0, $4687 = 0, $4693 = 0, $4694 = 0, $4696 = 0, $4697 = 0, $47 = 0, $4702 = 0, $4703 = 0, $4705 = 0, $4706 = 0, $4707 = 0, $4709 = 0, $4713 = 0, $4714 = 0, $4715 = 0, $472 = 0, $4721 = 0, $4724 = 0, $473 = 0, $4732 = 0, $474 = 0, $4745 = 0, $4747 = 0, $4749 = 0, $4752 = 0, $4753 = 0, $4756 = 0, $4758 = 0, $4759 = 0, $4761 = 0, $4763 = 0, $4767 = 0, $478 = 0, $4793 = 0, $4795 = 0, $4797 = 0, $4798 = 0, $4799 = 0, $48 = 0, $480 = 0, $4800 = 0, $4802 = 0, $4803 = 0, $4805 = 0, $4806 = 0, $4808 = 0, $4811 = 0, $4813 = 0, $4814 = 0, $4815 = 0, $4817 = 0, $4818 = 0, $482 = 0, $4821 = 0, $4823 = 0, $4824 = 0, $4826 = 0, $4829 = 0, $4830 = 0, $4831 = 0, $4833 = 0, $4834 = 0, $4836 = 0, $4837 = 0, $4839 = 0, $484 = 0, $4842 = 0, $4844 = 0, $4845 = 0, $4846 = 0, $4848 = 0, $4849 = 0, $485 = 0, $4854 = 0, $4856 = 0, $4861 = 0, $4862 = 0, $4863 = 0, $4865 = 0, $4866 = 0, $4868 = 0, $4869 = 0, $4871 = 0, $4874 = 0, $4876 = 0, $4877 = 0, $4878 = 0, $4880 = 0, $4881 = 0, $4883 = 0, $4885 = 0, $4889 = 0, $4892 = 0, $4893 = 0, $4894 = 0, $4897 = 0, $49 = 0, $490 = 0, $4902 = 0, $4904 = 0, $4906 = 0, $4908 = 0, $4909 = 0, $491 = 0, $4910 = 0, $4912 = 0, $4914 = 0, $4915 = 0, $4916 = 0, $4918 = 0, $4919 = 0, $4921 = 0, $4922 = 0, $4924 = 0, $4925 = 0, $4927 = 0, $4929 = 0, $4930 = 0, $4933 = 0, $4936 = 0, $4938 = 0, $4940 = 0, $4941 = 0, $4943 = 0, $4947 = 0, $4957 = 0, $4961 = 0, $4962 = 0, $4963 = 0, $4965 = 0, $4966 = 0, $4968 = 0, $4969 = 0, $497 = 0, $4971 = 0, $4974 = 0, $4976 = 0, $4977 = 0, $4978 = 0, $4980 = 0, $4981 = 0, $4983 = 0, $4984 = 0, $4985 = 0, $499 = 0, $4990 = 0, $4991 = 0, $4994 = 0, $4999 = 0, $5 = 0, $50 = 0, $5003 = 0, $5004 = 0, $5005 = 0, $5007 = 0, $5008 = 0, $5010 = 0, $5011 = 0, $5013 = 0, $5016 = 0, $5018 = 0, $5019 = 0, $5020 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5027 = 0, $5033 = 0, $5036 = 0, $5037 = 0, $5038 = 0, $5039 = 0, $5042 = 0, $5047 = 0, $5049 = 0, $5051 = 0, $5053 = 0, $5054 = 0, $5055 = 0, $5057 = 0, $5059 = 0, $5060 = 0, $5061 = 0, $5063 = 0, $5064 = 0, $5066 = 0, $5067 = 0, $5069 = 0, $5070 = 0, $5072 = 0, $5074 = 0, $5075 = 0, $5078 = 0, $508 = 0, $5081 = 0, $5083 = 0, $5085 = 0, $5086 = 0, $5091 = 0, $5094 = 0, $5096 = 0, $5097 = 0, $5098 = 0, $51 = 0, $510 = 0, $5104 = 0, $5105 = 0, $5110 = 0, $5111 = 0, $5113 = 0, $5114 = 0, $5116 = 0, $5118 = 0, $5119 = 0, $5120 = 0, $5122 = 0, $5123 = 0, $5125 = 0, $5126 = 0, $5128 = 0, $513 = 0, $5131 = 0, $5133 = 0, $5134 = 0, $5135 = 0, $5137 = 0, $5138 = 0, $514 = 0, $5140 = 0, $5141 = 0, $5143 = 0, $5145 = 0, $5146 = 0, $5149 = 0, $5152 = 0, $5154 = 0, $5155 = 0, $5156 = 0, $5157 = 0, $5158 = 0, $5159 = 0, $5164 = 0, $5165 = 0, $5168 = 0, $517 = 0, $5170 = 0, $5171 = 0, $5172 = 0, $5173 = 0, $5182 = 0, $5183 = 0, $5184 = 0, $519 = 0, $5191 = 0, $5193 = 0, $52 = 0, $5202 = 0, $5204 = 0, $5205 = 0, $5207 = 0, $521 = 0, $5210 = 0, $5211 = 0, $5212 = 0, $5213 = 0, $5214 = 0, $5215 = 0, $5216 = 0, $5219 = 0, $5220 = 0, $5222 = 0, $5224 = 0, $5228 = 0, $5229 = 0, $5235 = 0, $5238 = 0, $524 = 0, $5244 = 0, $5246 = 0, $525 = 0, $5251 = 0, $5252 = 0, $5258 = 0, $5259 = 0, $5262 = 0, $5264 = 0, $5268 = 0, $5269 = 0, $5275 = 0, $5278 = 0, $5284 = 0, $5286 = 0, $529 = 0, $5291 = 0, $5292 = 0, $5296 = 0, $5299 = 0, $53 = 0, $5305 = 0, $5306 = 0, $5309 = 0, $531 = 0, $5311 = 0, $5313 = 0, $5316 = 0, $5317 = 0, $5321 = 0, $5323 = 0, $5325 = 0, $5328 = 0, $533 = 0, $5336 = 0, $5339 = 0, $5341 = 0, $5343 = 0, $5344 = 0, $5346 = 0, $5347 = 0, $5348 = 0, $5351 = 0, $5355 = 0, $5359 = 0, $536 = 0, $5364 = 0, $5365 = 0, $5367 = 0, $5370 = 0, $5374 = 0, $5376 = 0, $5377 = 0, $5379 = 0, $5380 = 0, $5381 = 0, $5383 = 0, $5385 = 0, $5388 = 0, $5396 = 0, $5399 = 0, $54 = 0, $5401 = 0, $5403 = 0, $5404 = 0, $5406 = 0, $5407 = 0, $5408 = 0, $5411 = 0, $5415 = 0, $5419 = 0, $5424 = 0, $5425 = 0, $5427 = 0, $5430 = 0, $5434 = 0, $5439 = 0, $544 = 0, $5440 = 0, $5442 = 0, $5443 = 0, $5445 = 0, $5446 = 0, $5451 = 0, $5454 = 0, $5455 = 0, $5456 = 0, $5458 = 0, $5459 = 0, $5461 = 0, $5464 = 0, $5466 = 0, $5467 = 0, $5468 = 0, $5469 = 0, $547 = 0, $5470 = 0, $5473 = 0, $5475 = 0, $5476 = 0, $5480 = 0, $5481 = 0, $5484 = 0, $5485 = 0, $5486 = 0, $5488 = 0, $5489 = 0, $549 = 0, $5491 = 0, $5493 = 0, $5495 = 0, $5499 = 0, $55 = 0, $5500 = 0, $5506 = 0, $551 = 0, $5511 = 0, $5513 = 0, $5518 = 0, $5519 = 0, $552 = 0, $5527 = 0, $5529 = 0, $5532 = 0, $5533 = 0, $5534 = 0, $5537 = 0, $554 = 0, $5542 = 0, $5544 = 0, $5546 = 0, $5548 = 0, $5549 = 0, $555 = 0, $5550 = 0, $5552 = 0, $5554 = 0, $5555 = 0, $5556 = 0, $5558 = 0, $556 = 0, $5560 = 0, $5562 = 0, $5572 = 0, $5574 = 0, $5575 = 0, $5578 = 0, $5581 = 0, $5583 = 0, $5584 = 0, $5585 = 0, $5587 = 0, $5588 = 0, $5589 = 0, $559 = 0, $5590 = 0, $5591 = 0, $5592 = 0, $5597 = 0, $5598 = 0, $56 = 0, $5601 = 0, $5603 = 0, $5604 = 0, $5605 = 0, $5606 = 0, $5615 = 0, $5616 = 0, $5617 = 0, $5624 = 0, $5626 = 0, $563 = 0, $5635 = 0, $5637 = 0, $5638 = 0, $5640 = 0, $5643 = 0, $5644 = 0, $5645 = 0, $5646 = 0, $5647 = 0, $5648 = 0, $5649 = 0, $5652 = 0, $5653 = 0, $5655 = 0, $5657 = 0, $5661 = 0, $5662 = 0, $5668 = 0, $567 = 0, $5673 = 0, $5675 = 0, $5680 = 0, $5681 = 0, $5686 = 0, $5693 = 0, $5694 = 0, $5697 = 0, $5699 = 0, $57 = 0, $5701 = 0, $5704 = 0, $5705 = 0, $5709 = 0, $5711 = 0, $5713 = 0, $5716 = 0, $572 = 0, $5724 = 0, $5727 = 0, $5729 = 0, $573 = 0, $5731 = 0, $5732 = 0, $5734 = 0, $5735 = 0, $5736 = 0, $5739 = 0, $5743 = 0, $5747 = 0, $575 = 0, $5752 = 0, $5753 = 0, $5755 = 0, $5758 = 0, $5763 = 0, $5765 = 0, $5767 = 0, $5768 = 0, $5771 = 0, $5773 = 0, $5775 = 0, $5778 = 0, $5779 = 0, $578 = 0, $5783 = 0, $5785 = 0, $5787 = 0, $5790 = 0, $5798 = 0, $58 = 0, $5801 = 0, $5803 = 0, $5805 = 0, $5806 = 0, $5808 = 0, $5809 = 0, $5810 = 0, $5813 = 0, $5817 = 0, $582 = 0, $5821 = 0, $5826 = 0, $5827 = 0, $5829 = 0, $583 = 0, $5832 = 0, $5836 = 0, $5841 = 0, $5842 = 0, $5844 = 0, $5845 = 0, $5847 = 0, $5848 = 0, $5853 = 0, $5854 = 0, $5856 = 0, $5857 = 0, $5859 = 0, $5861 = 0, $5863 = 0, $5867 = 0, $5868 = 0, $5874 = 0, $5879 = 0, $5881 = 0, $5886 = 0, $5887 = 0, $589 = 0, $5894 = 0, $5895 = 0, $5896 = 0, $5897 = 0, $5899 = 0, $59 = 0, $590 = 0, $5901 = 0, $5903 = 0, $5904 = 0, $5905 = 0, $5907 = 0, $5912 = 0, $5913 = 0, $5914 = 0, $5916 = 0, $5926 = 0, $5928 = 0, $593 = 0, $5931 = 0, $5932 = 0, $5935 = 0, $5937 = 0, $5938 = 0, $5939 = 0, $5941 = 0, $5948 = 0, $595 = 0, $5950 = 0, $5951 = 0, $5955 = 0, $5956 = 0, $5957 = 0, $5959 = 0, $596 = 0, $5969 = 0, $5972 = 0, $5973 = 0, $5976 = 0, $5978 = 0, $5979 = 0, $5980 = 0, $5982 = 0, $5989 = 0, $599 = 0, $5991 = 0, $5992 = 0, $5993 = 0, $5995 = 0, $5997 = 0, $5998 = 0, $6 = 0, $60 = 0, $600 = 0, $6000 = 0, $6002 = 0, $6006 = 0, $6007 = 0, $6008 = 0, $6010 = 0, $6012 = 0, $6013 = 0, $6015 = 0, $6016 = 0, $6018 = 0, $6021 = 0, $6023 = 0, $6024 = 0, $6025 = 0, $6027 = 0, $6028 = 0, $6029 = 0, $603 = 0, $6032 = 0.0, $6036 = 0.0, $6037 = 0, $6038 = 0, $6040 = 0, $6042 = 0, $6043 = 0, $6045 = 0, $6046 = 0, $6048 = 0, $6051 = 0, $6053 = 0, $6054 = 0, $6055 = 0, $6057 = 0, $6058 = 0, $6059 = 0, $6060 = 0, $6063 = 0, $6065 = 0, $6066 = 0, $6068 = 0, $6069 = 0, $6071 = 0, $6073 = 0, $6075 = 0, $608 = 0, $6085 = 0, $6086 = 0, $6088 = 0, $609 = 0, $6091 = 0, $6093 = 0, $6094 = 0, $6095 = 0, $6097 = 0, $6099 = 0, $61 = 0, $610 = 0, $6101 = 0, $6102 = 0, $6105 = 0, $6111 = 0, $6112 = 0, $6117 = 0, $6118 = 0, $612 = 0, $6120 = 0, $6121 = 0, $6126 = 0, $6127 = 0, $6128 = 0, $6129 = 0, $613 = 0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6134 = 0, $6135 = 0, $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0, $6144 = 0, $6145 = 0, $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $6160 = 0, $6161 = 0, $6162 = 0, $6163 = 0, $619 = 0, $62 = 0, $620 = 0, $622 = 0, $624 = 0, $625 = 0, $626 = 0, $629 = 0, $63 = 0, $631 = 0, $634 = 0, $636 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $646 = 0, $648 = 0, $65 = 0, $650 = 0, $652 = 0, $653 = 0, $656 = 0, $657 = 0, $66 = 0, $660 = 0, $661 = 0, $664 = 0, $667 = 0, $669 = 0, $67 = 0, $671 = 0, $672 = 0, $679 = 0, $68 = 0, $681 = 0, $682 = 0, $689 = 0, $69 = 0, $698 = 0, $7 = 0, $70 = 0, $700 = 0, $706 = 0, $709 = 0, $71 = 0, $712 = 0, $716 = 0, $72 = 0, $725 = 0, $73 = 0, $730 = 0, $732 = 0, $736 = 0, $738 = 0, $74 = 0, $740 = 0, $742 = 0, $743 = 0, $75 = 0, $750 = 0, $752 = 0, $753 = 0, $759 = 0, $76 = 0, $761 = 0, $763 = 0, $766 = 0, $77 = 0, $772 = 0, $78 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $792 = 0, $794 = 0, $795 = 0, $798 = 0, $8 = 0, $80 = 0, $800 = 0, $802 = 0, $805 = 0, $806 = 0, $81 = 0, $810 = 0, $812 = 0, $814 = 0, $817 = 0, $82 = 0, $825 = 0, $828 = 0, $83 = 0, $830 = 0, $832 = 0, $833 = 0, $835 = 0, $836 = 0, $837 = 0, $84 = 0, $840 = 0, $844 = 0, $848 = 0, $85 = 0, $853 = 0, $854 = 0, $856 = 0, $859 = 0, $86 = 0, $863 = 0, $864 = 0, $866 = 0, $869 = 0, $87 = 0, $870 = 0, $873 = 0, $875 = 0, $877 = 0, $88 = 0, $880 = 0, $881 = 0, $885 = 0, $887 = 0, $889 = 0, $89 = 0, $892 = 0, $9 = 0, $90 = 0, $900 = 0, $903 = 0, $905 = 0, $907 = 0, $908 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $915 = 0, $919 = 0, $92 = 0, $923 = 0, $928 = 0, $929 = 0, $93 = 0, $931 = 0, $934 = 0, $938 = 0, $939 = 0, $94 = 0, $945 = 0, $946 = 0, $949 = 0, $95 = 0, $951 = 0, $952 = 0, $955 = 0, $956 = 0, $959 = 0, $96 = 0, $964 = 0, $965 = 0, $966 = 0, $968 = 0, $969 = 0, $97 = 0, $975 = 0, $976 = 0, $978 = 0, $979 = 0, $98 = 0, $981 = 0, $982 = 0, $983 = 0, $986 = 0, $988 = 0, $99 = 0, $991 = 0, $993 = 0, $997 = 0, $998 = 0, $999 = 0, $__cache$017$i$i$i = 0, $__cache$017$i$i$i$lcssa = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0216$i$i$i = 0, $__first$03$ph$i$i$i = 0, $__first$0314$i$i$i = 0, $__k$val$i = 0, $__k$val$i1079 = 0, $__k$val$i1192 = 0, $__k$val$i1533 = 0, $__k$val$i2131 = 0, $__k$val$i2283 = 0, $__k$val$i548 = 0, $__k$val$i791 = 0, $__lhs_sz$03$i = 0, $__lhs_sz$03$i$us = 0, $__lp$04$i = 0, $__lp$04$i$us = 0, $__nd$0$be$in$i$i = 0, $__nd$0$be$in$i$i$i$i$i = 0, $__nd$0$be$in$i$i1082 = 0, $__nd$0$be$in$i$i1195 = 0, $__nd$0$be$in$i$i1536 = 0, $__nd$0$be$in$i$i2020 = 0, $__nd$0$be$in$i$i2032 = 0, $__nd$0$be$in$i$i2134 = 0, $__nd$0$be$in$i$i2192 = 0, $__nd$0$be$in$i$i2286 = 0, $__nd$0$be$in$i$i24$i$i$i = 0, $__nd$0$be$in$i$i551 = 0, $__nd$0$be$in$i$i794 = 0, $__nd$0$i$i = 0, $__nd$0$i$i$i$i$i = 0, $__nd$0$i$i$i$i$i$lcssa = 0, $__nd$0$i$i$i$i$i$lcssa8404 = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa8204 = 0, $__nd$0$i$i$lcssa8205 = 0, $__nd$0$i$i1080 = 0, $__nd$0$i$i1080$lcssa = 0, $__nd$0$i$i1080$lcssa8841 = 0, $__nd$0$i$i1080$lcssa8842 = 0, $__nd$0$i$i1193 = 0, $__nd$0$i$i1193$lcssa = 0, $__nd$0$i$i1193$lcssa8407 = 0, $__nd$0$i$i1193$lcssa8408 = 0, $__nd$0$i$i1534 = 0, $__nd$0$i$i1534$lcssa = 0, $__nd$0$i$i1534$lcssa8393 = 0, $__nd$0$i$i1534$lcssa8394 = 0, $__nd$0$i$i2018 = 0, $__nd$0$i$i2018$lcssa = 0, $__nd$0$i$i2018$lcssa8373 = 0, $__nd$0$i$i2018$lcssa8374 = 0, $__nd$0$i$i2030 = 0, $__nd$0$i$i2030$lcssa = 0, $__nd$0$i$i2030$lcssa8377 = 0, $__nd$0$i$i2030$lcssa8378 = 0, $__nd$0$i$i21$i$i$i = 0, $__nd$0$i$i21$i$i$i$lcssa = 0, $__nd$0$i$i21$i$i$i$lcssa8398 = 0, $__nd$0$i$i2132 = 0, $__nd$0$i$i2132$lcssa = 0, $__nd$0$i$i2132$lcssa8833 = 0, $__nd$0$i$i2132$lcssa8834 = 0, $__nd$0$i$i2190 = 0, $__nd$0$i$i2190$lcssa = 0, $__nd$0$i$i2190$lcssa8359 = 0, $__nd$0$i$i2190$lcssa8360 = 0, $__nd$0$i$i2284 = 0, $__nd$0$i$i2284$lcssa = 0, $__nd$0$i$i2284$lcssa8829 = 0, $__nd$0$i$i2284$lcssa8830 = 0, $__nd$0$i$i549 = 0, $__nd$0$i$i549$lcssa = 0, $__nd$0$i$i549$lcssa8208 = 0, $__nd$0$i$i549$lcssa8209 = 0, $__nd$0$i$i792 = 0, $__nd$0$i$i792$lcssa = 0, $__nd$0$i$i792$lcssa8417 = 0, $__nd$0$i$i792$lcssa8418 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa8222 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa8223 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i441 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa8217 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa8218 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa8213 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa8214 = 0, $__nd$0$i20$i$i$i$i$in$i$i1060 = 0, $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa8837 = 0, $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa8838 = 0, $__nd$0$i20$i$i$i$i$in$i$i1512 = 0, $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa8389 = 0, $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa8390 = 0, $__nd$0$i20$i$i$i$i$in$i$i2063 = 0, $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa8381 = 0, $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa8382 = 0, $__nd$0$i20$i$i$i$i$in$i$i2104 = 0, $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa8385 = 0, $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa8386 = 0, $__nd$0$i20$i$i$i$i$in$i$i2223 = 0, $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa8363 = 0, $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa8364 = 0, $__nd$0$i20$i$i$i$i$in$i$i2262 = 0, $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa8367 = 0, $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa8368 = 0, $__nd$0$i20$i$i$i$i$in$i$i770 = 0, $__nd$0$i20$i$i$i$i$in$i$i770$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i770$lcssa8413 = 0, $__nd$0$i20$i$i$i$i$in$i$i770$lcssa8414 = 0, $__parent$i1078 = 0, $__parent$i1191 = 0, $__parent$i1532 = 0, $__parent$i790 = 0, $__r$0$i = 0, $__r$0$i1092 = 0, $__r$0$i1205 = 0, $__r$0$i1546 = 0, $__r$0$i2027 = 0, $__r$0$i2042 = 0, $__r$0$i2144 = 0, $__r$0$i2202 = 0, $__r$0$i2296 = 0, $__r$0$i561 = 0, $__r$0$i804 = 0, $__rp$05$i = 0, $__rp$05$i$us = 0, $__t$idx$val$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i19$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i2101 = 0, $__x$idx$i = 0, $__x$idx1$i$pre$phiZZZ2D = 0, $args = 0, $args68 = 0, $args68$idx$val = 0, $args68$idx360$val = 0, $args68$idx362$val = 0, $args68$idx372$val = 0, $args68$idx376$val = 0, $args68$idx378$val = 0, $args68$idx391$val = 0, $bindings = 0, $bindings65 = 0, $bindings83 = 0, $c105 = 0, $ch = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$i$i510$index14Z2D = 0, $eh$lpad$body$i$i510$indexZ2D = 0, $eh$lpad$body$i$index8Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i1119$index121Z2D = 0, $eh$lpad$body$i1119$indexZ2D = 0, $eh$lpad$body$i1138$index126Z2D = 0, $eh$lpad$body$i1138$indexZ2D = 0, $eh$lpad$body$i1667$index145Z2D = 0, $eh$lpad$body$i1667$indexZ2D = 0, $eh$lpad$body$i1705$index150Z2D = 0, $eh$lpad$body$i1705$indexZ2D = 0, $eh$lpad$body$i1724$index155Z2D = 0, $eh$lpad$body$i1724$indexZ2D = 0, $eh$lpad$body$i1932$index160Z2D = 0, $eh$lpad$body$i1932$indexZ2D = 0, $eh$lpad$body$i1966$index165Z2D = 0, $eh$lpad$body$i1966$indexZ2D = 0, $eh$lpad$body$i2147$index170Z2D = 0, $eh$lpad$body$i2147$indexZ2D = 0, $eh$lpad$body$i2303$index175Z2D = 0, $eh$lpad$body$i2303$indexZ2D = 0, $eh$lpad$body$i523$index20Z2D = 0, $eh$lpad$body$i523$indexZ2D = 0, $eh$lpad$body$i527$index31Z2D = 0, $eh$lpad$body$i527$indexZ2D = 0, $eh$lpad$body$i694$index36Z2D = 0, $eh$lpad$body$i694$indexZ2D = 0, $eh$lpad$body$index26Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body1114$index87Z2D = 0, $eh$lpad$body1114$indexZ2D = 0, $eh$lpad$body1143$index133Z2D = 0, $eh$lpad$body1143$indexZ2D = 0, $eh$lpad$body2330$index181Z2D = 0, $eh$lpad$body2330$indexZ2D = 0, $eh$lpad$body788$index41Z2D = 0, $eh$lpad$body788$indexZ2D = 0, $elements45 = 0, $elements75 = 0, $env = 0, $env130 = 0, $env138 = 0, $env26 = 0, $env27 = 0, $exp = 0, $exp106 = 0, $fields = 0, $fields88 = 0, $fields90 = 0, $found$0$off0 = 0, $i$0$i = 0, $i$0$i$lcssa8227 = 0, $i$0$i414 = 0, $i$0$i414$lcssa8212 = 0, $i$0$i538 = 0, $i$0$i538$lcssa8202 = 0, $i$0$i618 = 0, $i$0$i618$lcssa8201 = 0, $i$0$i628 = 0, $i$0$i628$lcssa8200 = 0, $i$0$i706 = 0, $i$0$i706$lcssa8412 = 0, $i$0$in$i = 0, $i$0$in$i413 = 0, $i$0$in$i537 = 0, $i$0$in$i617 = 0, $i$0$in$i627 = 0, $i$0$in$i679 = 0, $i$0$in$i705 = 0, $i$013$i$i = 0, $i$013$i$i$i = 0, $i$013$i$i$i494 = 0, $i$013$i$i$i659 = 0, $i$013$i$i$i996 = 0, $i$04090 = 0, $i$1$i$i = 0, $i$1$i$i$i = 0, $i$1$i$i$i1008 = 0, $i$1$i$i$i505 = 0, $i$1$i$i$i671 = 0, $i41$04093 = 0, $i77$04080 = 0, $lpad$phi2700$index = 0, $lpad$phi2700$index46 = 0, $lpad$phi2706$index = 0, $lpad$phi2706$index52 = 0, $lpad$phi2717$index = 0, $lpad$phi2717$index140 = 0, $scevgep4$i$i$i$i$i$i = 0, $scevgep4$i$i$i$i$i$i1005 = 0, $scevgep4$i$i$i$i$i$i502 = 0, $scevgep4$i$i$i$i$i$i668 = 0, $scevgep4$i$i$i$i$i543 = 0, $ss = 0, $ss102 = 0, $ss103 = 0, $ss104 = 0, $ss120 = 0, $ss126 = 0, $ss135 = 0, $ss142 = 0, $ss73 = 0, $ss76 = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i$i463 = 0, $this$idx2$val$i$i$i$i$i636 = 0, $this$idx2$val$i$i$i$i$i973 = 0, $this$idx2$val$i$i1028 = 0, $this$idx2$val$i$i1096 = 0, $this$idx2$val$i$i1167 = 0, $this$idx2$val$i$i1622 = 0, $this$idx2$val$i$i713 = 0, $this$idx2$val$i$i890 = 0, $this$idx2$val$i$i911 = 0, $this$idx3$i$i = 0, $this$idx3$i$i813 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4352 | 0;
 $0 = sp + 2600 | 0;
 $1 = sp + 900 | 0;
 $2 = sp + 4052 | 0;
 $3 = sp + 4176 | 0;
 $4 = sp + 3636 | 0;
 $5 = sp + 1204 | 0;
 $6 = sp + 2216 | 0;
 $__parent$i1532 = sp + 4048 | 0;
 $__parent$i1191 = sp + 1216 | 0;
 $7 = sp + 3336 | 0;
 $8 = sp + 3624 | 0;
 $__parent$i1078 = sp + 1980 | 0;
 $__parent$i790 = sp + 4136 | 0;
 $9 = sp + 780 | 0;
 $10 = sp + 744 | 0;
 $11 = sp + 4024 | 0;
 $12 = sp + 3456 | 0;
 $13 = sp + 64 | 0;
 $14 = sp + 2432 | 0;
 $15 = sp + 2188 | 0;
 $env = sp + 2080 | 0;
 $16 = sp + 1280 | 0;
 $17 = sp + 432 | 0;
 $18 = sp + 1180 | 0;
 $$sroa$32509 = sp + 4266 | 0;
 $19 = sp + 512 | 0;
 $20 = sp + 688 | 0;
 $$sroa$22505 = sp + 768 | 0;
 $env26 = sp + 756 | 0;
 $fields = sp + 732 | 0;
 $21 = sp + 272 | 0;
 $22 = sp + 4012 | 0;
 $23 = sp + 3976 | 0;
 $env27 = sp + 3444 | 0;
 $24 = sp + 3300 | 0;
 $25 = sp + 2648 | 0;
 $26 = sp + 2468 | 0;
 $ss = sp + 2288 | 0;
 $27 = sp + 2248 | 0;
 $28 = sp + 2176 | 0;
 $args = sp + 2128 | 0;
 $bindings = sp + 2068 | 0;
 $$sroa$32499 = sp + 4316 | 0;
 $$sroa$32495 = sp + 4252 | 0;
 $29 = sp + 1256 | 0;
 $30 = sp + 1244 | 0;
 $31 = sp + 1220 | 0;
 $32 = sp + 1168 | 0;
 $33 = sp + 1156 | 0;
 $34 = sp + 1132 | 0;
 $35 = sp + 1120 | 0;
 $36 = sp + 960 | 0;
 $37 = sp + 936 | 0;
 $elements45 = sp + 924 | 0;
 $38 = sp + 96 | 0;
 $39 = sp + 804 | 0;
 $40 = sp + 816 | 0;
 $41 = sp + 828 | 0;
 $$sroa$32491 = sp + 4294 | 0;
 $$sroa$32487 = sp + 4236 | 0;
 $42 = sp + 864 | 0;
 $43 = sp + 720 | 0;
 $44 = sp + 888 | 0;
 $45 = sp + 16 | 0;
 $46 = sp + 400 | 0;
 $47 = sp + 144 | 0;
 $48 = sp + 3916 | 0;
 $49 = sp;
 $$sroa$32468 = sp + 4259 | 0;
 $$sroa$32464 = sp + 4280 | 0;
 $$sroa$32460 = sp + 4243 | 0;
 $$sroa$32456 = sp + 4344 | 0;
 $50 = sp + 2480 | 0;
 $51 = sp + 2456 | 0;
 $52 = sp + 2444 | 0;
 $53 = sp + 2272 | 0;
 $54 = sp + 2260 | 0;
 $55 = sp + 2236 | 0;
 $56 = sp + 2224 | 0;
 $57 = sp + 2164 | 0;
 $58 = sp + 2152 | 0;
 $59 = sp + 2116 | 0;
 $60 = sp + 2104 | 0;
 $61 = sp + 2056 | 0;
 $62 = sp + 480 | 0;
 $63 = sp + 1984 | 0;
 $$sroa$32448 = sp + 4337 | 0;
 $$sroa$32444 = sp + 4323 | 0;
 $$sroa$32440 = sp + 4301 | 0;
 $$sroa$32436 = sp + 4287 | 0;
 $64 = sp + 1340 | 0;
 $65 = sp + 1232 | 0;
 $66 = sp + 1496 | 0;
 $67 = sp + 1508 | 0;
 $68 = sp + 1520 | 0;
 $69 = sp + 384 | 0;
 $bindings65 = sp + 1544 | 0;
 $args68 = sp + 1556 | 0;
 $70 = sp + 1568 | 0;
 $ss73 = sp + 1584 | 0;
 $71 = sp + 1728 | 0;
 $elements75 = sp + 1740 | 0;
 $ss76 = sp + 1752 | 0;
 $72 = sp + 948 | 0;
 $73 = sp + 352 | 0;
 $74 = sp + 1920 | 0;
 $75 = sp + 672 | 0;
 $76 = sp + 912 | 0;
 $77 = sp + 256 | 0;
 $78 = sp + 4088 | 0;
 $79 = sp + 592 | 0;
 $80 = sp + 1956 | 0;
 $81 = sp + 576 | 0;
 $82 = sp + 4188 | 0;
 $83 = sp + 560 | 0;
 $84 = sp + 2008 | 0;
 $85 = sp + 608 | 0;
 $86 = sp + 2020 | 0;
 $87 = sp + 240 | 0;
 $88 = sp + 2044 | 0;
 $89 = sp + 224 | 0;
 $90 = sp + 2092 | 0;
 $91 = sp + 288 | 0;
 $92 = sp + 876 | 0;
 $93 = sp + 544 | 0;
 $94 = sp + 80 | 0;
 $95 = sp + 2140 | 0;
 $96 = sp + 704 | 0;
 $97 = sp + 4e3 | 0;
 $98 = sp + 48 | 0;
 $99 = sp + 3988 | 0;
 $100 = sp + 416 | 0;
 $101 = sp + 3964 | 0;
 $102 = sp + 336 | 0;
 $103 = sp + 3904 | 0;
 $104 = sp + 176 | 0;
 $105 = sp + 3432 | 0;
 $106 = sp + 368 | 0;
 $107 = sp + 4140 | 0;
 $108 = sp + 3276 | 0;
 $109 = sp + 3252 | 0;
 $110 = sp + 112 | 0;
 $111 = sp + 4212 | 0;
 $bindings83 = sp + 2624 | 0;
 $112 = sp + 2612 | 0;
 $113 = sp + 2492 | 0;
 $$sroa$32403 = sp + 4330 | 0;
 $114 = sp + 2516 | 0;
 $fields88 = sp + 2528 | 0;
 $115 = sp + 2540 | 0;
 $116 = sp + 2552 | 0;
 $117 = sp + 2564 | 0;
 $fields90 = sp + 2576 | 0;
 $118 = sp + 2588 | 0;
 $119 = sp + 160 | 0;
 $120 = sp + 4224 | 0;
 $121 = sp + 640 | 0;
 $122 = sp + 2672 | 0;
 $ss102 = sp + 2688 | 0;
 $123 = sp + 2832 | 0;
 $124 = sp + 2844 | 0;
 $ss103 = sp + 2856 | 0;
 $125 = sp + 3e3 | 0;
 $ss104 = sp + 3016 | 0;
 $126 = sp + 3160 | 0;
 $c105 = sp + 4308 | 0;
 $127 = sp + 496 | 0;
 $128 = sp + 3184 | 0;
 $129 = sp + 3196 | 0;
 $130 = sp + 304 | 0;
 $131 = sp + 2032 | 0;
 $132 = sp + 128 | 0;
 $133 = sp + 3220 | 0;
 $exp = sp + 3232 | 0;
 $134 = sp + 32 | 0;
 $135 = sp + 3236 | 0;
 $exp106 = sp + 3248 | 0;
 $136 = sp + 448 | 0;
 $137 = sp + 3264 | 0;
 $138 = sp + 1328 | 0;
 $139 = sp + 208 | 0;
 $140 = sp + 3312 | 0;
 $141 = sp + 3324 | 0;
 $142 = sp + 464 | 0;
 $$sroa$32363 = sp + 4273 | 0;
 $143 = sp + 3360 | 0;
 $144 = sp + 3372 | 0;
 $145 = sp + 3384 | 0;
 $146 = sp + 3396 | 0;
 $147 = sp + 4076 | 0;
 $148 = sp + 3420 | 0;
 $149 = sp + 4100 | 0;
 $150 = sp + 4112 | 0;
 $151 = sp + 3468 | 0;
 $ss120 = sp + 3480 | 0;
 $152 = sp + 4152 | 0;
 $153 = sp + 4164 | 0;
 $154 = sp + 3648 | 0;
 $155 = sp + 3660 | 0;
 $156 = sp + 3672 | 0;
 $157 = sp + 3684 | 0;
 $158 = sp + 3696 | 0;
 $ss126 = sp + 3712 | 0;
 $159 = sp + 3856 | 0;
 $ch = sp + 4250 | 0;
 $160 = sp + 528 | 0;
 $161 = sp + 3880 | 0;
 $162 = sp + 1896 | 0;
 $163 = sp + 3892 | 0;
 $164 = sp + 1908 | 0;
 $165 = sp + 3928 | 0;
 $166 = sp + 3940 | 0;
 $167 = sp + 3952 | 0;
 $env130 = sp + 1932 | 0;
 $168 = sp + 624 | 0;
 $169 = sp + 1944 | 0;
 $170 = sp + 1192 | 0;
 $171 = sp + 1292 | 0;
 $172 = sp + 4064 | 0;
 $173 = sp + 656 | 0;
 $174 = sp + 4124 | 0;
 $175 = sp + 4036 | 0;
 $ss135 = sp + 976 | 0;
 $176 = sp + 2660 | 0;
 $177 = sp + 3408 | 0;
 $178 = sp + 792 | 0;
 $179 = sp + 1532 | 0;
 $env138 = sp + 2200 | 0;
 $180 = sp + 192 | 0;
 $181 = sp + 4200 | 0;
 $182 = sp + 3868 | 0;
 $ss142 = sp + 1352 | 0;
 $183 = sp + 3172 | 0;
 $184 = sp + 2504 | 0;
 $185 = sp + 320 | 0;
 $186 = sp + 1316 | 0;
 $$sroa$3 = sp + 4309 | 0;
 $187 = sp + 1304 | 0;
 $188 = sp + 1968 | 0;
 $189 = sp + 2636 | 0;
 $190 = sp + 3208 | 0;
 $191 = sp + 3288 | 0;
 $192 = sp + 3348 | 0;
 $193 = sp + 852 | 0;
 $194 = sp + 840 | 0;
 $195 = sp + 1268 | 0;
 $196 = sp + 1996 | 0;
 $197 = sp + 1144 | 0;
 $198 = $this + 56 | 0;
 $$idx$i = $this + 68 | 0;
 $$idx1$i = $this + 72 | 0;
 $201 = (HEAP32[$$idx1$i >> 2] | 0) - (HEAP32[$$idx$i >> 2] | 0) | 0;
 $202 = $14 + 4 | 0;
 $203 = $14 + 8 | 0;
 $204 = $this + 40 | 0;
 $205 = $this + 48 | 0;
 $206 = $this + 84 | 0;
 $207 = $15 + 4 | 0;
 $208 = $15 + 8 | 0;
 $209 = $args + 4 | 0;
 $210 = $args + 8 | 0;
 $211 = $bindings + 4 | 0;
 $212 = $bindings + 8 | 0;
 $213 = $bindings + 4 | 0;
 $214 = $213;
 $215 = $args + 8 | 0;
 $216 = $28 + 4 | 0;
 $217 = $28 + 8 | 0;
 $218 = $this + 40 | 0;
 $219 = $this + 49 | 0;
 $220 = $elements45 + 4 | 0;
 $221 = $elements45 + 8 | 0;
 $222 = $elements45 + 8 | 0;
 $223 = $this + 48 | 0;
 $224 = $this + 20 | 0;
 $225 = $this + 24 | 0;
 $226 = $this + 28 | 0;
 $227 = $this + 16 | 0;
 $228 = $this + 36 | 0;
 $229 = $this + 8 | 0;
 $230 = $this + 32 | 0;
 $$idx6$i$i$i990 = $this + 20 | 0;
 $231 = $args68 + 4 | 0;
 $232 = $args68 + 8 | 0;
 $233 = $70 + 4 | 0;
 $234 = $70 + 8 | 0;
 $235 = $70 + 8 | 0;
 $236 = $elements75 + 4 | 0;
 $237 = $elements75 + 8 | 0;
 $238 = $elements75 + 8 | 0;
 $239 = $74 + 4 | 0;
 $240 = $74 + 8 | 0;
 $241 = $74 + 8 | 0;
 $242 = $76 + 4 | 0;
 $243 = $76 + 8 | 0;
 $244 = $76 + 8 | 0;
 $245 = $78 + 4 | 0;
 $246 = $78 + 8 | 0;
 $247 = $78 + 8 | 0;
 $248 = $80 + 4 | 0;
 $249 = $80 + 8 | 0;
 $250 = $80 + 8 | 0;
 $251 = $82 + 4 | 0;
 $252 = $82 + 8 | 0;
 $253 = $82 + 8 | 0;
 $254 = $84 + 4 | 0;
 $255 = $84 + 8 | 0;
 $256 = $84 + 8 | 0;
 $257 = $86 + 4 | 0;
 $258 = $86 + 8 | 0;
 $259 = $86 + 8 | 0;
 $260 = $88 + 4 | 0;
 $261 = $88 + 8 | 0;
 $262 = $88 + 8 | 0;
 $263 = $90 + 4 | 0;
 $264 = $90 + 8 | 0;
 $265 = $90 + 8 | 0;
 $266 = $92 + 4 | 0;
 $267 = $92 + 8 | 0;
 $268 = $92 + 8 | 0;
 $269 = $108 + 4 | 0;
 $270 = $108 + 8 | 0;
 $271 = $108 + 8 | 0;
 $272 = $111 + 4 | 0;
 $273 = $111 + 8 | 0;
 $274 = $bindings83 + 4 | 0;
 $275 = $bindings83 + 8 | 0;
 $276 = $bindings83 + 4 | 0;
 $277 = $276;
 $278 = $112 + 4 | 0;
 $279 = $112 + 8 | 0;
 $280 = $112 + 8 | 0;
 $281 = $113 + 4 | 0;
 $282 = $fields88 + 8 | 0;
 $283 = $fields88 + 4 | 0;
 $284 = $117 + 4 | 0;
 $285 = $117 + 8 | 0;
 $286 = $117 + 8 | 0;
 $287 = $fields90 + 4 | 0;
 $288 = $fields90 + 8 | 0;
 $289 = $fields90 + 4 | 0;
 $290 = $118 + 4 | 0;
 $291 = $120 + 4 | 0;
 $292 = $120 + 8 | 0;
 $293 = $122 + 4 | 0;
 $294 = $122 + 8 | 0;
 $295 = $122 + 8 | 0;
 $296 = $124 + 4 | 0;
 $297 = $124 + 8 | 0;
 $298 = $124 + 8 | 0;
 $299 = $129 + 4 | 0;
 $300 = $129 + 8 | 0;
 $301 = $129 + 8 | 0;
 $302 = $131 + 4 | 0;
 $303 = $131 + 8 | 0;
 $304 = $131 + 8 | 0;
 $305 = $133 + 4 | 0;
 $306 = $133 + 8 | 0;
 $307 = $133 + 8 | 0;
 $308 = $135 + 4 | 0;
 $309 = $135 + 8 | 0;
 $310 = $135 + 8 | 0;
 $311 = $137 + 4 | 0;
 $312 = $137 + 8 | 0;
 $313 = $137 + 8 | 0;
 $314 = $140 + 4 | 0;
 $315 = $140 + 8 | 0;
 $316 = $140 + 8 | 0;
 $317 = $this + 100 | 0;
 $318 = $this + 104 | 0;
 $319 = $args68 + 8 | 0;
 $320 = $ch + 1 | 0;
 $321 = $169 + 4 | 0;
 $322 = $169 + 8 | 0;
 $323 = $169 + 4 | 0;
 $324 = $env130 + 4 | 0;
 $325 = $170 + 4 | 0;
 $326 = $170 + 8 | 0;
 $327 = $170 + 4 | 0;
 $328 = $327;
 $329 = $323;
 $330 = $this + 80 | 0;
 $331 = $174 + 4 | 0;
 $332 = $174 + 8 | 0;
 $333 = $174 + 4 | 0;
 $334 = $175 + 4 | 0;
 $335 = $175 + 8 | 0;
 $336 = $175 + 4 | 0;
 $337 = $181 + 4 | 0;
 $338 = $181 + 8 | 0;
 $339 = $181 + 4 | 0;
 $340 = $env138 + 4 | 0;
 $341 = $182 + 4 | 0;
 $342 = $182 + 8 | 0;
 $343 = $182 + 4 | 0;
 $344 = $343;
 $345 = $339;
 $346 = $ss142 + 64 | 0;
 $347 = $ss142 + 8 | 0;
 $348 = $ss142 + 12 | 0;
 $349 = $ss142 + 4 | 0;
 $350 = $ss142 + 64 | 0;
 $351 = $ss142 + 64 | 0;
 $352 = $ss142 + 136 | 0;
 $353 = $ss142 + 140 | 0;
 $354 = $ss142 + 44 | 0;
 $355 = $ss142 + 60 | 0;
 $356 = $ss142 + 8 | 0;
 $357 = $184 + 8 | 0;
 $358 = $184 + 1 | 0;
 $359 = $184 + 4 | 0;
 $360 = $183 + 8 | 0;
 $361 = $183 + 1 | 0;
 $362 = $183 + 4 | 0;
 $363 = $bindings65 + 4 | 0;
 $364 = $bindings65 + 8 | 0;
 $365 = $bindings65 + 4 | 0;
 $366 = $365;
 $367 = $3 + 4 | 0;
 $368 = $3 + 8 | 0;
 $369 = $3 + 4 | 0;
 $370 = $1 + 4 | 0;
 $371 = $1 + 8 | 0;
 $372 = $1 + 4 | 0;
 $373 = $2 + 4 | 0;
 $374 = $2 + 8 | 0;
 $375 = $4 + 4 | 0;
 $376 = $2 + 8 | 0;
 $377 = $372;
 $378 = $11 + 4 | 0;
 $379 = $11 + 8 | 0;
 $380 = $11 + 4 | 0;
 $381 = $env + 4 | 0;
 $382 = $9 + 4 | 0;
 $383 = $9 + 8 | 0;
 $384 = $9 + 4 | 0;
 $385 = $10 + 4 | 0;
 $386 = $10 + 8 | 0;
 $387 = $12 + 4 | 0;
 $388 = $10 + 8 | 0;
 $389 = $384;
 $390 = $380;
 $391 = $0 + 4 | 0;
 $392 = $16 + 4 | 0;
 $393 = $16 + 8 | 0;
 $394 = $16 + 4 | 0;
 $395 = $1 + 4 | 0;
 $396 = $0 + 8 | 0;
 $397 = $0 + 1 | 0;
 $398 = $1 + 8 | 0;
 $399 = $1 + 1 | 0;
 $400 = $18 + 4 | 0;
 $401 = $18 + 8 | 0;
 $402 = $this + 44 | 0;
 $403 = $env26 + 4 | 0;
 $404 = $env26 + 8 | 0;
 $405 = $env26 + 4 | 0;
 $406 = $fields + 4 | 0;
 $407 = $fields + 8 | 0;
 $408 = $fields + 4 | 0;
 $409 = $22 + 4 | 0;
 $410 = $22 + 8 | 0;
 $411 = $22 + 4 | 0;
 $412 = $23 + 4 | 0;
 $413 = $23 + 8 | 0;
 $414 = $23 + 4 | 0;
 $415 = $env27 + 4 | 0;
 $$010 = $ast_;
 L1 : while (1) {
  $416 = $$010 + 32 | 0;
  L3 : do switch (HEAP32[$416 >> 2] | 0) {
  case 0:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 0, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 1:
   {
    $$idx$val$i400 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i400 | 0) / 144 | 0;
    while (1) {
     $i$0$i = $i$0$in$i + -1 | 0;
     if (($i$0$in$i | 0) <= 0) {
      $435 = 0;
      $445 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i400 + ($i$0$i * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i$lcssa8227 = $i$0$i;
      label = 7;
      break;
     } else $i$0$in$i = $i$0$i;
    }
    if ((label | 0) == 7) {
     label = 0;
     $435 = HEAP32[$$idx$val$i400 + ($i$0$i$lcssa8227 * 144 | 0) + 120 >> 2] | 0;
     $445 = HEAP32[$$idx$val$i400 + ($i$0$i$lcssa8227 * 144 | 0) + 124 >> 2] | 0;
    }
    HEAP32[$14 >> 2] = 0;
    HEAP32[$202 >> 2] = 0;
    HEAP32[$203 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(11, $13 | 0, $this | 0, $14 | 0);
    $430 = __THREW__;
    __THREW__ = 0;
    if ($430 & 1) {
     label = 26;
     break L1;
    };
    HEAP32[$204 >> 2] = HEAP32[$13 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$13 + 12 >> 2];
    $$pre5065 = HEAP32[$205 >> 2] | 0;
    $$pre5067 = HEAP32[$$010 + 48 >> 2] | 0;
    $$pre5070 = HEAP32[$$010 + 52 >> 2] | 0;
    $432 = $$pre5065 + 8 | 0;
    if (($$pre5067 | 0) != ($$pre5070 | 0)) {
     $434 = $435;
     $436 = $$pre5065 + 12 | 0;
     $437 = $$pre5065 + 16 | 0;
     $443 = $$pre5067;
     do {
      $442 = HEAP32[$443 >> 2] | 0;
      $446 = __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, HEAP32[$206 >> 2] | 0, $434, $445, $442) | 0;
      $447 = $446;
      $448 = $446 + 28 | 0;
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($15, $this, HEAP32[$442 + 36 >> 2] | 0, HEAP32[$442 + 40 >> 2] | 0);
      $449 = $446 + 32 | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($448, HEAP32[$449 >> 2] | 0);
      HEAP32[$448 >> 2] = HEAP32[$15 >> 2];
      $452 = HEAP32[$207 >> 2] | 0;
      HEAP32[$449 >> 2] = $452;
      $454 = HEAP32[$208 >> 2] | 0;
      HEAP32[$446 + 36 >> 2] = $454;
      if (!$454) {
       HEAP32[$448 >> 2] = $449;
       $458 = HEAP32[$207 >> 2] | 0;
      } else {
       HEAP32[$452 + 8 >> 2] = $449;
       HEAP32[$15 >> 2] = $207;
       HEAP32[$207 >> 2] = 0;
       HEAP32[$208 >> 2] = 0;
       $458 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($15, $458);
      $459 = HEAP32[$436 >> 2] | 0;
      if (($459 | 0) == (HEAP32[$437 >> 2] | 0)) {
       $this$idx2$val$i$i = HEAP32[$432 >> 2] | 0;
       $465 = $this$idx2$val$i$i;
       $468 = ($459 - $465 >> 2) + 1 | 0;
       if ($468 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($432);
        $$idx$val$i$i$pre$i$i = HEAP32[$432 >> 2] | 0;
        $$idx1$val$i$i$i$i = HEAP32[$437 >> 2] | 0;
        $473 = $$idx$val$i$i$pre$i$i;
        $499 = $$idx$val$i$i$pre$i$i;
       } else {
        $$idx1$val$i$i$i$i = $459;
        $473 = $this$idx2$val$i$i;
        $499 = $465;
       }
       $472 = $473;
       $474 = $$idx1$val$i$i$i$i - $472 | 0;
       if ($474 >> 2 >>> 0 < 536870911) {
        $480 = $474 >> 1;
        $482 = $480 >>> 0 < $468 >>> 0 ? $468 : $480;
        $484 = (HEAP32[$436 >> 2] | 0) - $472 | 0;
        $485 = $484 >> 2;
        if (!$482) {
         $$0$i8$i$i = 0;
         $490 = 0;
         $491 = $485;
         $497 = $484;
        } else {
         $$0$i7$i$i = $482;
         $6126 = $485;
         $6127 = $484;
         label = 22;
        }
       } else {
        $478 = (HEAP32[$436 >> 2] | 0) - $472 | 0;
        $$0$i7$i$i = 1073741823;
        $6126 = $478 >> 2;
        $6127 = $478;
        label = 22;
       }
       if ((label | 0) == 22) {
        label = 0;
        $$0$i8$i$i = $$0$i7$i$i;
        $490 = __Znwj($$0$i7$i$i << 2) | 0;
        $491 = $6126;
        $497 = $6127;
       }
       HEAP32[$490 + ($491 << 2) >> 2] = $447;
       _memcpy($490 | 0, $473 | 0, $497 | 0) | 0;
       HEAP32[$432 >> 2] = $490;
       HEAP32[$436 >> 2] = $490 + ($491 + 1 << 2);
       HEAP32[$437 >> 2] = $490 + ($$0$i8$i$i << 2);
       if ($499) __ZdlPv($499);
      } else {
       HEAP32[$459 >> 2] = $447;
       HEAP32[$436 >> 2] = (HEAP32[$436 >> 2] | 0) + 4;
      }
      $443 = $443 + 4 | 0;
     } while (($443 | 0) != ($$pre5070 | 0));
    }
    break;
   }
  case 2:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 1, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 3:
   {
    $508 = HEAP32[$$010 + 48 >> 2] | 0;
    HEAP32[$367 >> 2] = 0;
    HEAP32[$368 >> 2] = 0;
    HEAP32[$3 >> 2] = $369;
    __THREW__ = 0;
    invoke_vii(55, $4 | 0, $$010 + 52 | 0);
    $510 = __THREW__;
    __THREW__ = 0;
    if ($510 & 1) {
     label = 117;
     break L1;
    }
    HEAP32[$370 >> 2] = 0;
    HEAP32[$371 >> 2] = 0;
    HEAP32[$1 >> 2] = $372;
    $$idx$val2$i$i$i$i = HEAP32[$3 >> 2] | 0;
    if (($$idx$val2$i$i$i$i | 0) != ($369 | 0)) {
     $517 = $$idx$val2$i$i$i$i;
     $6128 = $$idx$val2$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $513 = invoke_ii(67, 24) | 0;
      $514 = __THREW__;
      __THREW__ = 0;
      if ($514 & 1) {
       label = 59;
       break L1;
      }
      $519 = $517 + 16 | 0;
      $521 = HEAP32[$519 >> 2] | 0;
      $524 = HEAP32[$519 + 4 >> 2] | 0;
      $525 = $513 + 16 | 0;
      HEAP32[$525 >> 2] = $521;
      HEAP32[$525 + 4 >> 2] = $524;
      $529 = $521;
      $$pre$i$i$i$i$i$i$i$i = HEAP32[$372 >> 2] | 0;
      do if ((HEAP32[$1 >> 2] | 0) == ($372 | 0)) {
       $544 = $377;
       label = 37;
      } else {
       $531 = ($$pre$i$i$i$i$i$i$i$i | 0) == 0;
       if ($531) {
        $$0$i$i$i$i$i$i$i$i$i$i = $372;
        while (1) {
         $536 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$536 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i = $536; else {
          $$01$i$i$i$i$i$i$i$i$i$i = $536;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $533 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$533) {
          $$01$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i = $533;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $529 >>> 0) {
        $544 = $$01$i$i$i$i$i$i$i$i$i$i;
        label = 37;
       } else {
        if ($531) {
         HEAP32[$0 >> 2] = $377;
         $$0$i$i$i$i1$i$i$i$i = $372;
         $559 = $377;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 > $529 >>> 0) {
          $547 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i >> 2] | 0;
          if (!$547) {
           $$lcssa8225 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa8223 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 43;
           break;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i = $547;
           continue;
          }
         }
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 >= $529 >>> 0) {
          $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
          label = 47;
          break;
         }
         $551 = $__nd$0$i20$i$i$i$i$in$i$i$i$i + 4 | 0;
         $552 = HEAP32[$551 >> 2] | 0;
         if (!$552) {
          $$lcssa8224 = $551;
          $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa8222 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
          label = 46;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i$i$i = $552;
        }
        if ((label | 0) == 43) {
         label = 0;
         $549 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa8223;
         HEAP32[$0 >> 2] = $549;
         $$0$i$i$i$i1$i$i$i$i = $$lcssa8225;
         $559 = $549;
         break;
        } else if ((label | 0) == 46) {
         label = 0;
         $554 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa8222;
         HEAP32[$0 >> 2] = $554;
         $$0$i$i$i$i1$i$i$i$i = $$lcssa8224;
         $559 = $554;
         break;
        } else if ((label | 0) == 47) {
         label = 0;
         $555 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa;
         HEAP32[$0 >> 2] = $555;
         $$0$i$i$i$i1$i$i$i$i = $0;
         $559 = $555;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 37) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i) {
        HEAP32[$0 >> 2] = $377;
        $$0$i$i$i$i1$i$i$i$i = $372;
        $559 = $377;
        break;
       } else {
        HEAP32[$0 >> 2] = $544;
        $$0$i$i$i$i1$i$i$i$i = $544 + 4 | 0;
        $559 = $544;
        break;
       }
      } while (0);
      $556 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
      if (!$556) {
       HEAP32[$513 >> 2] = 0;
       HEAP32[$513 + 4 >> 2] = 0;
       HEAP32[$513 + 8 >> 2] = $559;
       HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] = $513;
       $563 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
       if (!$563) $567 = $513; else {
        HEAP32[$1 >> 2] = $563;
        $567 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$370 >> 2] | 0, $567);
       HEAP32[$371 >> 2] = (HEAP32[$371 >> 2] | 0) + 1;
       $572 = $517;
      } else if (($556 | 0) == ($513 | 0)) $572 = $6128; else {
       __ZdlPv($513);
       $572 = $6128;
      }
      $573 = HEAP32[$572 + 4 >> 2] | 0;
      if (!$573) {
       $$0$i$i$i$i$i$i$i = $572;
       while (1) {
        $578 = HEAP32[$$0$i$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$578 >> 2] | 0) == ($$0$i$i$i$i$i$i$i | 0)) {
         $$01$i$i$i$i$i$i$i = $578;
         break;
        } else $$0$i$i$i$i$i$i$i = $578;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i = $573;
       while (1) {
        $575 = HEAP32[$$0$i$i$i$i$i$i$i$i >> 2] | 0;
        if (!$575) {
         $$01$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i;
         break;
        } else $$0$i$i$i$i$i$i$i$i = $575;
       }
      }
      if (($$01$i$i$i$i$i$i$i | 0) == ($369 | 0)) break; else {
       $517 = $$01$i$i$i$i$i$i$i;
       $6128 = $$01$i$i$i$i$i$i$i;
      }
     }
    }
    HEAP32[$2 >> 2] = 0;
    HEAP32[$373 >> 2] = 0;
    HEAP32[$374 >> 2] = 0;
    $589 = (HEAP32[$375 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0;
    $590 = $589 >> 2;
    if ($590) {
     if ($590 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(175, $2 | 0);
      $593 = __THREW__;
      __THREW__ = 0;
      if ($593 & 1) {
       label = 67;
       break L1;
      }
     }
     __THREW__ = 0;
     $595 = invoke_ii(67, $589 | 0) | 0;
     $596 = __THREW__;
     __THREW__ = 0;
     if ($596 & 1) {
      label = 67;
      break L1;
     }
     HEAP32[$373 >> 2] = $595;
     HEAP32[$2 >> 2] = $595;
     HEAP32[$376 >> 2] = $595 + ($590 << 2);
     $599 = HEAP32[$4 >> 2] | 0;
     $600 = HEAP32[$375 >> 2] | 0;
     if (($599 | 0) != ($600 | 0)) {
      $$01$i$i$i = $599;
      $603 = $595;
      do {
       HEAP32[$603 >> 2] = HEAP32[$$01$i$i$i >> 2];
       $603 = (HEAP32[$373 >> 2] | 0) + 4 | 0;
       HEAP32[$373 >> 2] = $603;
       $$01$i$i$i = $$01$i$i$i + 4 | 0;
      } while (($$01$i$i$i | 0) != ($600 | 0));
     }
    }
    __THREW__ = 0;
    $619 = invoke_ii(67, 48) | 0;
    $620 = __THREW__;
    __THREW__ = 0;
    if ($620 & 1) {
     label = 107;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(1, $619 | 0, $1 | 0, 0, 0, $2 | 0, 0, $508 | 0);
    $622 = __THREW__;
    __THREW__ = 0;
    if ($622 & 1) {
     $$lcssa9184 = $619;
     label = 85;
     break L1;
    }
    $624 = $619;
    $625 = HEAP32[$225 >> 2] | 0;
    $626 = HEAP32[$226 >> 2] | 0;
    if ($625 >>> 0 < $626 >>> 0) {
     HEAP32[$625 >> 2] = $624;
     $629 = (HEAP32[$225 >> 2] | 0) + 4 | 0;
     HEAP32[$225 >> 2] = $629;
     $$idx1$val$i$i$i = $629;
    } else {
     $this$idx2$val$i$i$i$i$i = HEAP32[$224 >> 2] | 0;
     $631 = $this$idx2$val$i$i$i$i$i;
     $634 = ($625 - $631 >> 2) + 1 | 0;
     if ($634 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(175, $224 | 0);
      $636 = __THREW__;
      __THREW__ = 0;
      if ($636 & 1) {
       label = 107;
       break L1;
      }
      $$idx$val$i$i$pre$i$i$i$i$i = HEAP32[$224 >> 2] | 0;
      $$idx1$val$i$i$i$i$i$i$i = HEAP32[$226 >> 2] | 0;
      $641 = $$idx$val$i$i$pre$i$i$i$i$i;
      $669 = $$idx$val$i$i$pre$i$i$i$i$i;
     } else {
      $$idx1$val$i$i$i$i$i$i$i = $626;
      $641 = $this$idx2$val$i$i$i$i$i;
      $669 = $631;
     }
     $640 = $641;
     $642 = $$idx1$val$i$i$i$i$i$i$i - $640 | 0;
     if ($642 >> 2 >>> 0 < 536870911) {
      $648 = $642 >> 1;
      $650 = $648 >>> 0 < $634 >>> 0 ? $634 : $648;
      $652 = (HEAP32[$225 >> 2] | 0) - $640 | 0;
      $653 = $652 >> 2;
      if (!$650) {
       $$0$i8$i$i$i$i$i = 0;
       $660 = 0;
       $661 = $653;
       $667 = $652;
      } else {
       $$0$i7$i$i$i$i$i = $650;
       $6129 = $653;
       $6130 = $652;
       label = 81;
      }
     } else {
      $646 = (HEAP32[$225 >> 2] | 0) - $640 | 0;
      $$0$i7$i$i$i$i$i = 1073741823;
      $6129 = $646 >> 2;
      $6130 = $646;
      label = 81;
     }
     if ((label | 0) == 81) {
      label = 0;
      __THREW__ = 0;
      $656 = invoke_ii(67, $$0$i7$i$i$i$i$i << 2 | 0) | 0;
      $657 = __THREW__;
      __THREW__ = 0;
      if ($657 & 1) {
       label = 107;
       break L1;
      }
      $$0$i8$i$i$i$i$i = $$0$i7$i$i$i$i$i;
      $660 = $656;
      $661 = $6129;
      $667 = $6130;
     }
     HEAP32[$660 + ($661 << 2) >> 2] = $624;
     $664 = $660 + ($661 + 1 << 2) | 0;
     _memcpy($660 | 0, $641 | 0, $667 | 0) | 0;
     HEAP32[$224 >> 2] = $660;
     HEAP32[$225 >> 2] = $664;
     HEAP32[$226 >> 2] = $660 + ($$0$i8$i$i$i$i$i << 2);
     if (!$669) $$idx1$val$i$i$i = $664; else {
      __ZdlPv($669);
      $$idx1$val$i$i$i = HEAP32[$225 >> 2] | 0;
     }
    }
    HEAP8[$619 + 4 >> 0] = HEAP8[$227 >> 0] | 0;
    HEAP32[$228 >> 2] = $$idx1$val$i$i$i - (HEAP32[$224 >> 2] | 0) >> 2;
    $679 = HEAP32[$2 >> 2] | 0;
    $681 = $679;
    if ($679) {
     $682 = HEAP32[$373 >> 2] | 0;
     if (($682 | 0) != ($679 | 0)) HEAP32[$373 >> 2] = $682 + (~(($682 + -4 - $681 | 0) >>> 2) << 2);
     __ZdlPv($679);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$372 >> 2] | 0);
    $689 = HEAP32[$228 >> 2] | 0;
    if ($689 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($689 >>> 0) > +HEAPF64[$229 >> 3] * +((HEAP32[$230 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(62, $this | 0, $619 | 0);
     $698 = __THREW__;
     __THREW__ = 0;
     if ($698 & 1) {
      label = 118;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(63, $198 | 0, $this | 0);
     $700 = __THREW__;
     __THREW__ = 0;
     if ($700 & 1) {
      label = 118;
      break L1;
     }
     if (HEAP32[$218 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(62, $this | 0, HEAP32[$205 >> 2] | 0);
      $706 = __THREW__;
      __THREW__ = 0;
      if ($706 & 1) {
       label = 118;
       break L1;
      }
     }
     $709 = (HEAP8[$227 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$227 >> 0] = $709;
     $$idx6$val11$i$i$i = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
     $$idx7$val12$i$i$i = HEAP32[$225 >> 2] | 0;
     L126 : do if (($$idx7$val12$i$i$i | 0) == ($$idx6$val11$i$i$i | 0)) $$lcssa$i$i$i = 0; else {
      $$idx5$val19$i$i$i = $$idx7$val12$i$i$i;
      $$idx6$val14$i$i$i = $$idx6$val11$i$i$i;
      $716 = $709;
      $i$013$i$i$i = 0;
      while (1) {
       $712 = HEAP32[$$idx6$val14$i$i$i + ($i$013$i$i$i << 2) >> 2] | 0;
       if ((HEAP8[$712 + 4 >> 0] | 0) == $716 << 24 >> 24) {
        $$idx6$val$i$i$i = $$idx6$val14$i$i$i;
        $$idx7$val$i$i$i = $$idx5$val19$i$i$i;
        $i$1$i$i$i = $i$013$i$i$i;
       } else {
        if (!$712) {
         $$idx4$val$i$i$i = $$idx6$val14$i$i$i;
         $$idx5$val$i$i$i = $$idx5$val19$i$i$i;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$712 >> 2] | 0) + 4 >> 2] & 255]($712);
         $$idx4$val$i$i$i = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
         $$idx5$val$i$i$i = HEAP32[$225 >> 2] | 0;
        }
        $725 = ($$idx5$val$i$i$i - $$idx4$val$i$i$i >> 2) + -1 | 0;
        if (($i$013$i$i$i | 0) == ($725 | 0)) {
         $$idx6$val$pre$i$i$i = $$idx4$val$i$i$i;
         $730 = $$idx5$val$i$i$i;
        } else {
         HEAP32[$$idx4$val$i$i$i + ($i$013$i$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i$i + ($725 << 2) >> 2];
         $$idx6$val$pre$i$i$i = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
         $730 = HEAP32[$225 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i = $730 + -4 | 0;
        HEAP32[$225 >> 2] = $scevgep4$i$i$i$i$i$i;
        $$idx6$val$i$i$i = $$idx6$val$pre$i$i$i;
        $$idx7$val$i$i$i = $scevgep4$i$i$i$i$i$i;
        $i$1$i$i$i = $i$013$i$i$i + -1 | 0;
       }
       $732 = $i$1$i$i$i + 1 | 0;
       $736 = $$idx7$val$i$i$i - $$idx6$val$i$i$i >> 2;
       if ($732 >>> 0 >= $736 >>> 0) {
        $$lcssa$i$i$i = $736;
        break L126;
       }
       $$idx5$val19$i$i$i = $$idx7$val$i$i$i;
       $$idx6$val14$i$i$i = $$idx6$val$i$i$i;
       $716 = HEAP8[$227 >> 0] | 0;
       $i$013$i$i$i = $732;
      }
     } while (0);
     HEAP32[$228 >> 2] = $$lcssa$i$i$i;
     HEAP32[$230 >> 2] = $$lcssa$i$i$i;
    }
    $750 = HEAP32[$4 >> 2] | 0;
    $752 = $750;
    if ($750) {
     $753 = HEAP32[$375 >> 2] | 0;
     if (($753 | 0) != ($750 | 0)) HEAP32[$375 >> 2] = $753 + (~(($753 + -4 - $752 | 0) >>> 2) << 2);
     __ZdlPv($750);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$369 >> 2] | 0);
    HEAP32[$218 >> 2] = 17;
    HEAP32[$205 >> 2] = $619;
    break;
   }
  case 4:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 8, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 5:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 6, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 6:
   {
    __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env, $this, HEAP32[$$010 + 36 >> 2] | 0, HEAP32[$$010 + 40 >> 2] | 0);
    $$idx$val$i410 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i413 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i410 | 0) / 144 | 0;
    while (1) {
     $i$0$i414 = $i$0$in$i413 + -1 | 0;
     if (($i$0$in$i413 | 0) <= 0) {
      $789 = 0;
      $978 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i410 + ($i$0$i414 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i414$lcssa8212 = $i$0$i414;
      label = 130;
      break;
     } else $i$0$in$i413 = $i$0$i414;
    }
    if ((label | 0) == 130) {
     label = 0;
     $789 = HEAP32[$$idx$val$i410 + ($i$0$i414$lcssa8212 * 144 | 0) + 120 >> 2] | 0;
     $978 = HEAP32[$$idx$val$i410 + ($i$0$i414$lcssa8212 * 144 | 0) + 124 >> 2] | 0;
    }
    $788 = $789;
    $790 = $$010 + 48 | 0;
    $792 = HEAP32[$$010 + 60 >> 2] | 0;
    HEAP32[$378 >> 2] = 0;
    HEAP32[$379 >> 2] = 0;
    HEAP32[$11 >> 2] = $380;
    $$idx$val2$i$i$i = HEAP32[$env >> 2] | 0;
    if (($$idx$val2$i$i$i | 0) != ($381 | 0)) {
     $6131 = $$idx$val2$i$i$i;
     $798 = $$idx$val2$i$i$i;
     while (1) {
      __THREW__ = 0;
      $794 = invoke_ii(67, 24) | 0;
      $795 = __THREW__;
      __THREW__ = 0;
      if ($795 & 1) {
       label = 161;
       break L1;
      }
      $800 = $798 + 16 | 0;
      $802 = HEAP32[$800 >> 2] | 0;
      $805 = HEAP32[$800 + 4 >> 2] | 0;
      $806 = $794 + 16 | 0;
      HEAP32[$806 >> 2] = $802;
      HEAP32[$806 + 4 >> 2] = $805;
      $810 = $802;
      $$pre$i$i$i$i$i$i$i = HEAP32[$380 >> 2] | 0;
      do if ((HEAP32[$11 >> 2] | 0) == ($380 | 0)) {
       $825 = $390;
       label = 139;
      } else {
       $812 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
       if ($812) {
        $$0$i$i$i$i$i$i$i$i$i = $380;
        while (1) {
         $817 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$817 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i = $817; else {
          $$01$i$i$i$i$i$i$i$i$i = $817;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i422 = $$pre$i$i$i$i$i$i$i;
        while (1) {
         $814 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i422 + 4 >> 2] | 0;
         if (!$814) {
          $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i422;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i422 = $814;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $810 >>> 0) {
        $825 = $$01$i$i$i$i$i$i$i$i$i;
        label = 139;
       } else {
        if ($812) {
         HEAP32[$0 >> 2] = $390;
         $$0$i$i$i$i1$i$i$i = $380;
         $840 = $390;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i$i = $$pre$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 > $810 >>> 0) {
          $828 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i >> 2] | 0;
          if (!$828) {
           $$lcssa8216 = $__nd$0$i20$i$i$i$i$in$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa8214 = $__nd$0$i20$i$i$i$i$in$i$i$i;
           label = 145;
           break;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i$i = $828;
           continue;
          }
         }
         if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 >= $810 >>> 0) {
          $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i;
          label = 149;
          break;
         }
         $832 = $__nd$0$i20$i$i$i$i$in$i$i$i + 4 | 0;
         $833 = HEAP32[$832 >> 2] | 0;
         if (!$833) {
          $$lcssa8215 = $832;
          $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa8213 = $__nd$0$i20$i$i$i$i$in$i$i$i;
          label = 148;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i$i = $833;
        }
        if ((label | 0) == 145) {
         label = 0;
         $830 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa8214;
         HEAP32[$0 >> 2] = $830;
         $$0$i$i$i$i1$i$i$i = $$lcssa8216;
         $840 = $830;
         break;
        } else if ((label | 0) == 148) {
         label = 0;
         $835 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa8213;
         HEAP32[$0 >> 2] = $835;
         $$0$i$i$i$i1$i$i$i = $$lcssa8215;
         $840 = $835;
         break;
        } else if ((label | 0) == 149) {
         label = 0;
         $836 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa;
         HEAP32[$0 >> 2] = $836;
         $$0$i$i$i$i1$i$i$i = $0;
         $840 = $836;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 139) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i) {
        HEAP32[$0 >> 2] = $390;
        $$0$i$i$i$i1$i$i$i = $380;
        $840 = $390;
        break;
       } else {
        HEAP32[$0 >> 2] = $825;
        $$0$i$i$i$i1$i$i$i = $825 + 4 | 0;
        $840 = $825;
        break;
       }
      } while (0);
      $837 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
      if (!$837) {
       HEAP32[$794 >> 2] = 0;
       HEAP32[$794 + 4 >> 2] = 0;
       HEAP32[$794 + 8 >> 2] = $840;
       HEAP32[$$0$i$i$i$i1$i$i$i >> 2] = $794;
       $844 = HEAP32[HEAP32[$11 >> 2] >> 2] | 0;
       if (!$844) $848 = $794; else {
        HEAP32[$11 >> 2] = $844;
        $848 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$378 >> 2] | 0, $848);
       HEAP32[$379 >> 2] = (HEAP32[$379 >> 2] | 0) + 1;
       $853 = $798;
      } else if (($837 | 0) == ($794 | 0)) $853 = $6131; else {
       __ZdlPv($794);
       $853 = $6131;
      }
      $854 = HEAP32[$853 + 4 >> 2] | 0;
      if (!$854) {
       $$0$i$i$i$i$i$i = $853;
       while (1) {
        $859 = HEAP32[$$0$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$859 >> 2] | 0) == ($$0$i$i$i$i$i$i | 0)) {
         $$01$i$i$i$i$i$i = $859;
         break;
        } else $$0$i$i$i$i$i$i = $859;
       }
      } else {
       $$0$i$i$i$i$i$i$i423 = $854;
       while (1) {
        $856 = HEAP32[$$0$i$i$i$i$i$i$i423 >> 2] | 0;
        if (!$856) {
         $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i423;
         break;
        } else $$0$i$i$i$i$i$i$i423 = $856;
       }
      }
      if (($$01$i$i$i$i$i$i | 0) == ($381 | 0)) break; else {
       $6131 = $$01$i$i$i$i$i$i;
       $798 = $$01$i$i$i$i$i$i;
      }
     }
    }
    __THREW__ = 0;
    invoke_vii(55, $12 | 0, $790 | 0);
    $866 = __THREW__;
    __THREW__ = 0;
    if ($866 & 1) {
     label = 251;
     break L1;
    }
    HEAP32[$382 >> 2] = 0;
    HEAP32[$383 >> 2] = 0;
    HEAP32[$9 >> 2] = $384;
    $$idx$val2$i$i$i$i425 = HEAP32[$11 >> 2] | 0;
    if (($$idx$val2$i$i$i$i425 | 0) != ($380 | 0)) {
     $6132 = $$idx$val2$i$i$i$i425;
     $873 = $$idx$val2$i$i$i$i425;
     while (1) {
      __THREW__ = 0;
      $869 = invoke_ii(67, 24) | 0;
      $870 = __THREW__;
      __THREW__ = 0;
      if ($870 & 1) {
       label = 193;
       break L1;
      }
      $875 = $873 + 16 | 0;
      $877 = HEAP32[$875 >> 2] | 0;
      $880 = HEAP32[$875 + 4 >> 2] | 0;
      $881 = $869 + 16 | 0;
      HEAP32[$881 >> 2] = $877;
      HEAP32[$881 + 4 >> 2] = $880;
      $885 = $877;
      $$pre$i$i$i$i$i$i$i$i430 = HEAP32[$384 >> 2] | 0;
      do if ((HEAP32[$9 >> 2] | 0) == ($384 | 0)) {
       $900 = $389;
       label = 171;
      } else {
       $887 = ($$pre$i$i$i$i$i$i$i$i430 | 0) == 0;
       if ($887) {
        $$0$i$i$i$i$i$i$i$i$i2$i = $384;
        while (1) {
         $892 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2$i + 8 >> 2] | 0;
         if ((HEAP32[$892 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i2$i | 0)) $$0$i$i$i$i$i$i$i$i$i2$i = $892; else {
          $$01$i$i$i$i$i$i$i$i$i$i436 = $892;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i432 = $$pre$i$i$i$i$i$i$i$i430;
        while (1) {
         $889 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i432 + 4 >> 2] | 0;
         if (!$889) {
          $$01$i$i$i$i$i$i$i$i$i$i436 = $$0$i$i$i$i$i$i$i$i$i$i$i432;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i432 = $889;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i436 + 16 >> 2] | 0) >>> 0 < $885 >>> 0) {
        $900 = $$01$i$i$i$i$i$i$i$i$i$i436;
        label = 171;
       } else {
        if ($887) {
         HEAP32[$0 >> 2] = $389;
         $$0$i$i$i$i1$i$i$i$i445 = $384;
         $915 = $389;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i$i$i441 = $$pre$i$i$i$i$i$i$i$i430;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i443 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i441 + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i443 >>> 0 > $885 >>> 0) {
          $903 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i441 >> 2] | 0;
          if (!$903) {
           $$lcssa8220 = $__nd$0$i20$i$i$i$i$in$i$i$i$i441;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa8218 = $__nd$0$i20$i$i$i$i$in$i$i$i$i441;
           label = 177;
           break;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i441 = $903;
           continue;
          }
         }
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i443 >>> 0 >= $885 >>> 0) {
          $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i441;
          label = 181;
          break;
         }
         $907 = $__nd$0$i20$i$i$i$i$in$i$i$i$i441 + 4 | 0;
         $908 = HEAP32[$907 >> 2] | 0;
         if (!$908) {
          $$lcssa8219 = $907;
          $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa8217 = $__nd$0$i20$i$i$i$i$in$i$i$i$i441;
          label = 180;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i$i$i441 = $908;
        }
        if ((label | 0) == 177) {
         label = 0;
         $905 = $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa8218;
         HEAP32[$0 >> 2] = $905;
         $$0$i$i$i$i1$i$i$i$i445 = $$lcssa8220;
         $915 = $905;
         break;
        } else if ((label | 0) == 180) {
         label = 0;
         $910 = $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa8217;
         HEAP32[$0 >> 2] = $910;
         $$0$i$i$i$i1$i$i$i$i445 = $$lcssa8219;
         $915 = $910;
         break;
        } else if ((label | 0) == 181) {
         label = 0;
         $911 = $__nd$0$i20$i$i$i$i$in$i$i$i$i441$lcssa;
         HEAP32[$0 >> 2] = $911;
         $$0$i$i$i$i1$i$i$i$i445 = $0;
         $915 = $911;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 171) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i430) {
        HEAP32[$0 >> 2] = $389;
        $$0$i$i$i$i1$i$i$i$i445 = $384;
        $915 = $389;
        break;
       } else {
        HEAP32[$0 >> 2] = $900;
        $$0$i$i$i$i1$i$i$i$i445 = $900 + 4 | 0;
        $915 = $900;
        break;
       }
      } while (0);
      $912 = HEAP32[$$0$i$i$i$i1$i$i$i$i445 >> 2] | 0;
      if (!$912) {
       HEAP32[$869 >> 2] = 0;
       HEAP32[$869 + 4 >> 2] = 0;
       HEAP32[$869 + 8 >> 2] = $915;
       HEAP32[$$0$i$i$i$i1$i$i$i$i445 >> 2] = $869;
       $919 = HEAP32[HEAP32[$9 >> 2] >> 2] | 0;
       if (!$919) $923 = $869; else {
        HEAP32[$9 >> 2] = $919;
        $923 = HEAP32[$$0$i$i$i$i1$i$i$i$i445 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$382 >> 2] | 0, $923);
       HEAP32[$383 >> 2] = (HEAP32[$383 >> 2] | 0) + 1;
       $928 = $873;
      } else if (($912 | 0) == ($869 | 0)) $928 = $6132; else {
       __ZdlPv($869);
       $928 = $6132;
      }
      $929 = HEAP32[$928 + 4 >> 2] | 0;
      if (!$929) {
       $$0$i$i$i$i$i$i3$i = $928;
       while (1) {
        $934 = HEAP32[$$0$i$i$i$i$i$i3$i + 8 >> 2] | 0;
        if ((HEAP32[$934 >> 2] | 0) == ($$0$i$i$i$i$i$i3$i | 0)) {
         $$01$i$i$i$i$i$i$i455 = $934;
         break;
        } else $$0$i$i$i$i$i$i3$i = $934;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i451 = $929;
       while (1) {
        $931 = HEAP32[$$0$i$i$i$i$i$i$i$i451 >> 2] | 0;
        if (!$931) {
         $$01$i$i$i$i$i$i$i455 = $$0$i$i$i$i$i$i$i$i451;
         break;
        } else $$0$i$i$i$i$i$i$i$i451 = $931;
       }
      }
      if (($$01$i$i$i$i$i$i$i455 | 0) == ($380 | 0)) break; else {
       $6132 = $$01$i$i$i$i$i$i$i455;
       $873 = $$01$i$i$i$i$i$i$i455;
      }
     }
    }
    HEAP32[$10 >> 2] = 0;
    HEAP32[$385 >> 2] = 0;
    HEAP32[$386 >> 2] = 0;
    $945 = (HEAP32[$387 >> 2] | 0) - (HEAP32[$12 >> 2] | 0) | 0;
    $946 = $945 >> 2;
    if ($946) {
     if ($946 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(175, $10 | 0);
      $949 = __THREW__;
      __THREW__ = 0;
      if ($949 & 1) {
       label = 201;
       break L1;
      }
     }
     __THREW__ = 0;
     $951 = invoke_ii(67, $945 | 0) | 0;
     $952 = __THREW__;
     __THREW__ = 0;
     if ($952 & 1) {
      label = 201;
      break L1;
     }
     HEAP32[$385 >> 2] = $951;
     HEAP32[$10 >> 2] = $951;
     HEAP32[$388 >> 2] = $951 + ($946 << 2);
     $955 = HEAP32[$12 >> 2] | 0;
     $956 = HEAP32[$387 >> 2] | 0;
     if (($955 | 0) != ($956 | 0)) {
      $$01$i$i$i459 = $955;
      $959 = $951;
      do {
       HEAP32[$959 >> 2] = HEAP32[$$01$i$i$i459 >> 2];
       $959 = (HEAP32[$385 >> 2] | 0) + 4 | 0;
       HEAP32[$385 >> 2] = $959;
       $$01$i$i$i459 = $$01$i$i$i459 + 4 | 0;
      } while (($$01$i$i$i459 | 0) != ($956 | 0));
     }
    }
    __THREW__ = 0;
    $975 = invoke_ii(67, 48) | 0;
    $976 = __THREW__;
    __THREW__ = 0;
    if ($976 & 1) {
     label = 241;
     break L1;
    }
    __THREW__ = 0;
    invoke_viiiiiii(1, $975 | 0, $9 | 0, $788 | 0, $978 | 0, $10 | 0, $792 | 0, 0);
    $979 = __THREW__;
    __THREW__ = 0;
    if ($979 & 1) {
     $$lcssa9182 = $975;
     label = 219;
     break L1;
    }
    $981 = $975;
    $982 = HEAP32[$225 >> 2] | 0;
    $983 = HEAP32[$226 >> 2] | 0;
    if ($982 >>> 0 < $983 >>> 0) {
     HEAP32[$982 >> 2] = $981;
     $986 = (HEAP32[$225 >> 2] | 0) + 4 | 0;
     HEAP32[$225 >> 2] = $986;
     $$idx1$val$i$i$i479 = $986;
    } else {
     $this$idx2$val$i$i$i$i$i463 = HEAP32[$224 >> 2] | 0;
     $988 = $this$idx2$val$i$i$i$i$i463;
     $991 = ($982 - $988 >> 2) + 1 | 0;
     if ($991 >>> 0 > 1073741823) {
      __THREW__ = 0;
      invoke_vi(175, $224 | 0);
      $993 = __THREW__;
      __THREW__ = 0;
      if ($993 & 1) {
       label = 241;
       break L1;
      }
      $$idx$val$i$i$pre$i$i$i$i$i464 = HEAP32[$224 >> 2] | 0;
      $$idx1$val$i$i$i$i$i$i$i467 = HEAP32[$226 >> 2] | 0;
      $1026 = $$idx$val$i$i$pre$i$i$i$i$i464;
      $998 = $$idx$val$i$i$pre$i$i$i$i$i464;
     } else {
      $$idx1$val$i$i$i$i$i$i$i467 = $983;
      $1026 = $988;
      $998 = $this$idx2$val$i$i$i$i$i463;
     }
     $997 = $998;
     $999 = $$idx1$val$i$i$i$i$i$i$i467 - $997 | 0;
     if ($999 >> 2 >>> 0 < 536870911) {
      $1005 = $999 >> 1;
      $1007 = $1005 >>> 0 < $991 >>> 0 ? $991 : $1005;
      $1009 = (HEAP32[$225 >> 2] | 0) - $997 | 0;
      $1010 = $1009 >> 2;
      if (!$1007) {
       $$0$i8$i$i$i$i$i474 = 0;
       $1017 = 0;
       $1018 = $1010;
       $1024 = $1009;
      } else {
       $$0$i7$i$i$i$i$i472 = $1007;
       $6133 = $1010;
       $6134 = $1009;
       label = 215;
      }
     } else {
      $1003 = (HEAP32[$225 >> 2] | 0) - $997 | 0;
      $$0$i7$i$i$i$i$i472 = 1073741823;
      $6133 = $1003 >> 2;
      $6134 = $1003;
      label = 215;
     }
     if ((label | 0) == 215) {
      label = 0;
      __THREW__ = 0;
      $1013 = invoke_ii(67, $$0$i7$i$i$i$i$i472 << 2 | 0) | 0;
      $1014 = __THREW__;
      __THREW__ = 0;
      if ($1014 & 1) {
       label = 241;
       break L1;
      }
      $$0$i8$i$i$i$i$i474 = $$0$i7$i$i$i$i$i472;
      $1017 = $1013;
      $1018 = $6133;
      $1024 = $6134;
     }
     HEAP32[$1017 + ($1018 << 2) >> 2] = $981;
     $1021 = $1017 + ($1018 + 1 << 2) | 0;
     _memcpy($1017 | 0, $998 | 0, $1024 | 0) | 0;
     HEAP32[$224 >> 2] = $1017;
     HEAP32[$225 >> 2] = $1021;
     HEAP32[$226 >> 2] = $1017 + ($$0$i8$i$i$i$i$i474 << 2);
     if (!$1026) $$idx1$val$i$i$i479 = $1021; else {
      __ZdlPv($1026);
      $$idx1$val$i$i$i479 = HEAP32[$225 >> 2] | 0;
     }
    }
    HEAP8[$975 + 4 >> 0] = HEAP8[$227 >> 0] | 0;
    HEAP32[$228 >> 2] = $$idx1$val$i$i$i479 - (HEAP32[$224 >> 2] | 0) >> 2;
    $1036 = HEAP32[$10 >> 2] | 0;
    $1038 = $1036;
    if ($1036) {
     $1039 = HEAP32[$385 >> 2] | 0;
     if (($1039 | 0) != ($1036 | 0)) HEAP32[$385 >> 2] = $1039 + (~(($1039 + -4 - $1038 | 0) >>> 2) << 2);
     __ZdlPv($1036);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($9, HEAP32[$384 >> 2] | 0);
    $1046 = HEAP32[$228 >> 2] | 0;
    if ($1046 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1046 >>> 0) > +HEAPF64[$229 >> 3] * +((HEAP32[$230 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(62, $this | 0, $975 | 0);
     $1055 = __THREW__;
     __THREW__ = 0;
     if ($1055 & 1) {
      label = 252;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(63, $198 | 0, $this | 0);
     $1057 = __THREW__;
     __THREW__ = 0;
     if ($1057 & 1) {
      label = 252;
      break L1;
     }
     if (HEAP32[$218 >> 2] & 16) {
      __THREW__ = 0;
      invoke_vii(62, $this | 0, HEAP32[$205 >> 2] | 0);
      $1063 = __THREW__;
      __THREW__ = 0;
      if ($1063 & 1) {
       label = 252;
       break L1;
      }
     }
     $1066 = (HEAP8[$227 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$227 >> 0] = $1066;
     $$idx6$val11$i$i$i489 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
     $$idx7$val12$i$i$i490 = HEAP32[$225 >> 2] | 0;
     L293 : do if (($$idx7$val12$i$i$i490 | 0) == ($$idx6$val11$i$i$i489 | 0)) $$lcssa$i$i$i508 = 0; else {
      $$idx5$val19$i$i$i492 = $$idx7$val12$i$i$i490;
      $$idx6$val14$i$i$i493 = $$idx6$val11$i$i$i489;
      $1073 = $1066;
      $i$013$i$i$i494 = 0;
      while (1) {
       $1069 = HEAP32[$$idx6$val14$i$i$i493 + ($i$013$i$i$i494 << 2) >> 2] | 0;
       if ((HEAP8[$1069 + 4 >> 0] | 0) == $1073 << 24 >> 24) {
        $$idx6$val$i$i$i504 = $$idx6$val14$i$i$i493;
        $$idx7$val$i$i$i503 = $$idx5$val19$i$i$i492;
        $i$1$i$i$i505 = $i$013$i$i$i494;
       } else {
        if (!$1069) {
         $$idx4$val$i$i$i498 = $$idx6$val14$i$i$i493;
         $$idx5$val$i$i$i497 = $$idx5$val19$i$i$i492;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1069 >> 2] | 0) + 4 >> 2] & 255]($1069);
         $$idx4$val$i$i$i498 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
         $$idx5$val$i$i$i497 = HEAP32[$225 >> 2] | 0;
        }
        $1082 = ($$idx5$val$i$i$i497 - $$idx4$val$i$i$i498 >> 2) + -1 | 0;
        if (($i$013$i$i$i494 | 0) == ($1082 | 0)) {
         $$idx6$val$pre$i$i$i501 = $$idx4$val$i$i$i498;
         $1087 = $$idx5$val$i$i$i497;
        } else {
         HEAP32[$$idx4$val$i$i$i498 + ($i$013$i$i$i494 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i498 + ($1082 << 2) >> 2];
         $$idx6$val$pre$i$i$i501 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
         $1087 = HEAP32[$225 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i502 = $1087 + -4 | 0;
        HEAP32[$225 >> 2] = $scevgep4$i$i$i$i$i$i502;
        $$idx6$val$i$i$i504 = $$idx6$val$pre$i$i$i501;
        $$idx7$val$i$i$i503 = $scevgep4$i$i$i$i$i$i502;
        $i$1$i$i$i505 = $i$013$i$i$i494 + -1 | 0;
       }
       $1089 = $i$1$i$i$i505 + 1 | 0;
       $1093 = $$idx7$val$i$i$i503 - $$idx6$val$i$i$i504 >> 2;
       if ($1089 >>> 0 >= $1093 >>> 0) {
        $$lcssa$i$i$i508 = $1093;
        break L293;
       }
       $$idx5$val19$i$i$i492 = $$idx7$val$i$i$i503;
       $$idx6$val14$i$i$i493 = $$idx6$val$i$i$i504;
       $1073 = HEAP8[$227 >> 0] | 0;
       $i$013$i$i$i494 = $1089;
      }
     } while (0);
     HEAP32[$228 >> 2] = $$lcssa$i$i$i508;
     HEAP32[$230 >> 2] = $$lcssa$i$i$i508;
    }
    $1107 = HEAP32[$12 >> 2] | 0;
    $1109 = $1107;
    if ($1107) {
     $1110 = HEAP32[$387 >> 2] | 0;
     if (($1110 | 0) != ($1107 | 0)) HEAP32[$387 >> 2] = $1110 + (~(($1110 + -4 - $1109 | 0) >>> 2) << 2);
     __ZdlPv($1107);
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($11, HEAP32[$380 >> 2] | 0);
    HEAP32[$218 >> 2] = 17;
    HEAP32[$205 >> 2] = $975;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$381 >> 2] | 0);
    break;
   }
  case 7:
   {
    $1133 = $$010 + 4 | 0;
    $1134 = $$010 + 48 | 0;
    $1135 = __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($1133, 47, -1) | 0;
    if (($1135 | 0) == -1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 62848, 0); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($0, $1133, 0, $1135 + 1 | 0, $1133);
    __THREW__ = 0;
    $1138 = invoke_iiii(38, $this | 0, $1133 | 0, $1134 | 0) | 0;
    $1139 = __THREW__;
    __THREW__ = 0;
    if ($1139 & 1) {
     label = 275;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(40, $1 | 0, $1134 | 0);
    $1141 = __THREW__;
    __THREW__ = 0;
    if ($1141 & 1) {
     label = 275;
     break L1;
    }
    $1143 = HEAP8[$0 >> 0] | 0;
    $1145 = ($1143 & 1) == 0;
    $1149 = $1145 ? ($1143 & 255) >>> 1 : HEAP32[$391 >> 2] | 0;
    if ($1149) {
     HEAP32[$2 >> 2] = 0;
     HEAP32[$2 + 4 >> 2] = 0;
     HEAP32[$2 + 8 >> 2] = 0;
     $1151 = HEAP8[$1 >> 0] | 0;
     $1157 = ($1151 & 1) == 0 ? ($1151 & 255) >>> 1 : HEAP32[$395 >> 2] | 0;
     __THREW__ = 0;
     invoke_viiii(13, $2 | 0, ($1145 ? $397 : HEAP32[$396 >> 2] | 0) | 0, $1149 | 0, $1157 + $1149 | 0);
     $1161 = __THREW__;
     __THREW__ = 0;
     if ($1161 & 1) {
      label = 268;
      break L1;
     }
     __THREW__ = 0;
     invoke_iiii(35, $2 | 0, ((HEAP8[$1 >> 0] & 1) == 0 ? $399 : HEAP32[$398 >> 2] | 0) | 0, $1157 | 0) | 0;
     $1168 = __THREW__;
     __THREW__ = 0;
     if ($1168 & 1) {
      label = 268;
      break L1;
     }
     if (!(HEAP8[$1 >> 0] & 1)) {
      HEAP8[$399 >> 0] = 0;
      HEAP8[$1 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$398 >> 2] >> 0] = 0;
      HEAP32[$395 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $1 | 0, 0);
     $1176 = __THREW__;
     __THREW__ = 0;
     if ($1176 & 1) {
      label = 273;
      break L1;
     };
     HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
     HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
     HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
     HEAP32[$2 >> 2] = 0;
     HEAP32[$2 + 4 >> 2] = 0;
     HEAP32[$2 + 8 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    }
    if (!(HEAP8[$1138 >> 0] & 1)) $1191 = $1138 + 1 | 0; else $1191 = HEAP32[$1138 + 8 >> 2] | 0;
    __THREW__ = 0;
    $1192 = invoke_iiii(39, HEAP32[$330 >> 2] | 0, $1 | 0, $1191 | 0) | 0;
    $1193 = __THREW__;
    __THREW__ = 0;
    if ($1193 & 1) {
     label = 276;
     break L1;
    }
    __THREW__ = 0;
    invoke_vi(180, $1192 | 0);
    $1195 = __THREW__;
    __THREW__ = 0;
    if ($1195 & 1) {
     label = 276;
     break L1;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    HEAP32[$392 >> 2] = 0;
    HEAP32[$393 >> 2] = 0;
    HEAP32[$16 >> 2] = $394;
    __THREW__ = 0;
    invoke_viiiiii(10, $198 | 0, $1133 | 0, 0, 0, 0, $16 | 0);
    $1197 = __THREW__;
    __THREW__ = 0;
    if ($1197 & 1) {
     label = 286;
     break L1;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($16, HEAP32[$394 >> 2] | 0);
    $$010 = $1192;
    continue L1;
    break;
   }
  case 8:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($17, $this, __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $$010 + 4 | 0, $$010 + 48 | 0) | 0);
    HEAP32[$204 >> 2] = HEAP32[$17 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
    break;
   }
  case 9:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 9, $$010);
    $$010 = HEAP32[$$010 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 10:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 11, $$010);
    $$idx$val$i532 = HEAP32[$$idx1$i >> 2] | 0;
    $$idx$val$i534 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i537 = ($$idx$val$i532 - $$idx$val$i534 | 0) / 144 | 0;
    while (1) {
     $i$0$i538 = $i$0$in$i537 + -1 | 0;
     if (($i$0$in$i537 | 0) <= 0) {
      $1223 = 0;
      $1242 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i534 + ($i$0$i538 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i538$lcssa8202 = $i$0$i538;
      label = 292;
      break;
     } else $i$0$in$i537 = $i$0$i538;
    }
    if ((label | 0) == 292) {
     label = 0;
     $1223 = HEAP32[$$idx$val$i534 + ($i$0$i538$lcssa8202 * 144 | 0) + 120 >> 2] | 0;
     $1242 = HEAP32[$$idx$val$i534 + ($i$0$i538$lcssa8202 * 144 | 0) + 124 >> 2] | 0;
    }
    $1218 = $$010 + 48 | 0;
    $1219 = HEAP32[$1218 >> 2] | 0;
    $1220 = $$010 + 52 | 0;
    if (($1219 | 0) == ($1220 | 0)) $1377 = $1219; else {
     $1222 = $1223;
     $1224 = $$idx$val$i532 + -16 | 0;
     $1225 = $$idx$val$i532 + -12 | 0;
     $1226 = $1225;
     $1227 = $$idx$val$i532 + -12 | 0;
     $1228 = $$idx$val$i532 + -8 | 0;
     $1230 = $1219;
     while (1) {
      $1229 = $1230 + 16 | 0;
      $1231 = HEAP32[$1229 >> 2] | 0;
      $1233 = HEAP32[$1230 + 20 >> 2] | 0;
      $1234 = __Znwj(56) | 0;
      HEAP32[$1234 >> 2] = 3592;
      HEAP8[$1234 + 5 >> 0] = 0;
      HEAP32[$1234 + 24 >> 2] = $1231;
      $1238 = $1234 + 32 | 0;
      HEAP32[$1238 >> 2] = 0;
      HEAP32[$1234 + 36 >> 2] = 0;
      HEAP32[$1234 + 28 >> 2] = $1238;
      HEAP32[$1234 + 40 >> 2] = $1222;
      HEAP32[$1234 + 44 >> 2] = $1242;
      HEAP32[$1234 + 48 >> 2] = $1233;
      $1244 = $1234;
      $1245 = HEAP32[$225 >> 2] | 0;
      $1246 = HEAP32[$226 >> 2] | 0;
      if ($1245 >>> 0 < $1246 >>> 0) {
       HEAP32[$1245 >> 2] = $1244;
       $1249 = (HEAP32[$225 >> 2] | 0) + 4 | 0;
       HEAP32[$225 >> 2] = $1249;
       $$idx1$val$i$i = $1249;
      } else {
       $this$idx2$val$i$i$i$i = HEAP32[$224 >> 2] | 0;
       $1251 = $this$idx2$val$i$i$i$i;
       $1254 = ($1245 - $1251 >> 2) + 1 | 0;
       if ($1254 >>> 0 > 1073741823) {
        __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($224);
        $$idx$val$i$i$pre$i$i$i$i = HEAP32[$224 >> 2] | 0;
        $$idx1$val$i$i$i$i$i$i = HEAP32[$226 >> 2] | 0;
        $1259 = $$idx$val$i$i$pre$i$i$i$i;
        $1285 = $$idx$val$i$i$pre$i$i$i$i;
       } else {
        $$idx1$val$i$i$i$i$i$i = $1246;
        $1259 = $this$idx2$val$i$i$i$i;
        $1285 = $1251;
       }
       $1258 = $1259;
       $1260 = $$idx1$val$i$i$i$i$i$i - $1258 | 0;
       if ($1260 >> 2 >>> 0 < 536870911) {
        $1266 = $1260 >> 1;
        $1268 = $1266 >>> 0 < $1254 >>> 0 ? $1254 : $1266;
        $1270 = (HEAP32[$225 >> 2] | 0) - $1258 | 0;
        $1271 = $1270 >> 2;
        if (!$1268) {
         $$0$i8$i$i$i$i = 0;
         $1276 = 0;
         $1277 = $1271;
         $1283 = $1270;
        } else {
         $$0$i7$i$i$i$i = $1268;
         $6135 = $1271;
         $6136 = $1270;
         label = 302;
        }
       } else {
        $1264 = (HEAP32[$225 >> 2] | 0) - $1258 | 0;
        $$0$i7$i$i$i$i = 1073741823;
        $6135 = $1264 >> 2;
        $6136 = $1264;
        label = 302;
       }
       if ((label | 0) == 302) {
        label = 0;
        $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
        $1276 = __Znwj($$0$i7$i$i$i$i << 2) | 0;
        $1277 = $6135;
        $1283 = $6136;
       }
       HEAP32[$1276 + ($1277 << 2) >> 2] = $1244;
       $1280 = $1276 + ($1277 + 1 << 2) | 0;
       _memcpy($1276 | 0, $1259 | 0, $1283 | 0) | 0;
       HEAP32[$224 >> 2] = $1276;
       HEAP32[$225 >> 2] = $1280;
       HEAP32[$226 >> 2] = $1276 + ($$0$i8$i$i$i$i << 2);
       if (!$1285) $$idx1$val$i$i = $1280; else {
        __ZdlPv($1285);
        $$idx1$val$i$i = HEAP32[$225 >> 2] | 0;
       }
      }
      HEAP8[$1234 + 4 >> 0] = HEAP8[$227 >> 0] | 0;
      $1292 = $$idx1$val$i$i - (HEAP32[$224 >> 2] | 0) >> 2;
      HEAP32[$228 >> 2] = $1292;
      if ($1292 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1292 >>> 0) > +HEAPF64[$229 >> 3] * +((HEAP32[$230 >> 2] | 0) >>> 0)) {
       __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1234);
       __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($198, $this);
       if (HEAP32[$218 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$205 >> 2] | 0);
       $1306 = (HEAP8[$227 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$227 >> 0] = $1306;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$225 >> 2] | 0;
       L371 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx5$val19$i$i = $$idx7$val12$i$i;
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $1313 = $1306;
        $i$013$i$i = 0;
        while (1) {
         $1309 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$1309 + 4 >> 0] | 0) == $1313 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx5$val19$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$1309) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx5$val19$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1309 >> 2] | 0) + 4 >> 2] & 255]($1309);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$225 >> 2] | 0;
          }
          $1322 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($1322 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $1327 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($1322 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
           $1327 = HEAP32[$225 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i543 = $1327 + -4 | 0;
          HEAP32[$225 >> 2] = $scevgep4$i$i$i$i$i543;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i$i543;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $1329 = $i$1$i$i + 1 | 0;
         $1333 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($1329 >>> 0 >= $1333 >>> 0) {
          $$lcssa$i$i = $1333;
          break L371;
         }
         $$idx5$val19$i$i = $$idx7$val$i$i;
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $1313 = HEAP8[$227 >> 0] | 0;
         $i$013$i$i = $1329;
        }
       } while (0);
       HEAP32[$228 >> 2] = $$lcssa$i$i;
       HEAP32[$230 >> 2] = $$lcssa$i$i;
      }
      $__k$val$i = HEAP32[$1229 >> 2] | 0;
      $1335 = HEAP32[$1225 >> 2] | 0;
      $1337 = $__k$val$i;
      do if (!$1335) {
       HEAP32[$0 >> 2] = $1225;
       $$0$i7$i = $1225;
       $1356 = $1226;
       label = 329;
      } else {
       $__nd$0$i$i = $1335;
       while (1) {
        $1339 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
        if ($1339 >>> 0 > $__k$val$i >>> 0) {
         $1341 = HEAP32[$__nd$0$i$i >> 2] | 0;
         if (!$1341) {
          $$lcssa8207 = $__nd$0$i$i;
          $__nd$0$i$i$lcssa8205 = $__nd$0$i$i;
          label = 322;
          break;
         } else $__nd$0$be$in$i$i = $1341;
        } else {
         if ($1339 >>> 0 >= $__k$val$i >>> 0) {
          $__nd$0$i$i$lcssa = $__nd$0$i$i;
          label = 328;
          break;
         }
         $1345 = $__nd$0$i$i + 4 | 0;
         $1346 = HEAP32[$1345 >> 2] | 0;
         if (!$1346) {
          $$lcssa8206 = $1345;
          $__nd$0$i$i$lcssa8204 = $__nd$0$i$i;
          label = 326;
          break;
         } else $__nd$0$be$in$i$i = $1346;
        }
        $__nd$0$i$i = $__nd$0$be$in$i$i;
       }
       if ((label | 0) == 322) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa8205;
        $$0$i7$i = $$lcssa8207;
        $1356 = $__nd$0$i$i$lcssa8205;
        label = 329;
        break;
       } else if ((label | 0) == 326) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa8204;
        $$0$i7$i = $$lcssa8206;
        $1356 = $__nd$0$i$i$lcssa8204;
        label = 329;
        break;
       } else if ((label | 0) == 328) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i$lcssa;
        if (!$__nd$0$i$i$lcssa) {
         $$0$i7$i = $0;
         $1356 = $__nd$0$i$i$lcssa;
         label = 329;
         break;
        } else {
         $__r$0$i = $__nd$0$i$i$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 329) {
       label = 0;
       $1351 = __Znwj(24) | 0;
       HEAP32[$1351 + 16 >> 2] = $1337;
       HEAP32[$1351 + 20 >> 2] = 0;
       HEAP32[$1351 >> 2] = 0;
       HEAP32[$1351 + 4 >> 2] = 0;
       HEAP32[$1351 + 8 >> 2] = $1356;
       HEAP32[$$0$i7$i >> 2] = $1351;
       $1358 = HEAP32[HEAP32[$1224 >> 2] >> 2] | 0;
       if (!$1358) $1362 = $1351; else {
        HEAP32[$1224 >> 2] = $1358;
        $1362 = HEAP32[$$0$i7$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1227 >> 2] | 0, $1362);
       HEAP32[$1228 >> 2] = (HEAP32[$1228 >> 2] | 0) + 1;
       $__r$0$i = $1351;
      }
      HEAP32[$__r$0$i + 20 >> 2] = $1234;
      $1367 = HEAP32[$1230 + 4 >> 2] | 0;
      if (!$1367) {
       $$0$i$i$i = $1230;
       while (1) {
        $1372 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$1372 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$01$i$i$i546 = $1372;
         break;
        } else $$0$i$i$i = $1372;
       }
      } else {
       $$0$i$i$i$i = $1367;
       while (1) {
        $1369 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$1369) {
         $$01$i$i$i546 = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $1369;
       }
      }
      if (($$01$i$i$i546 | 0) == ($1220 | 0)) break; else $1230 = $$01$i$i$i546;
     }
     $1377 = HEAP32[$1218 >> 2] | 0;
    }
    if (($1377 | 0) != ($1220 | 0)) {
     $1378 = $$idx$val$i532 + -16 | 0;
     $1379 = $$idx$val$i532 + -12 | 0;
     $1380 = $1379;
     $1381 = $$idx$val$i532 + -12 | 0;
     $1382 = $$idx$val$i532 + -8 | 0;
     $1384 = $1377;
     while (1) {
      $__k$val$i548 = HEAP32[$1384 + 16 >> 2] | 0;
      $1385 = HEAP32[$1379 >> 2] | 0;
      $1387 = $__k$val$i548;
      do if (!$1385) {
       HEAP32[$0 >> 2] = $1379;
       $$0$i7$i557 = $1379;
       $1406 = $1380;
       label = 350;
      } else {
       $__nd$0$i$i549 = $1385;
       while (1) {
        $1389 = HEAP32[$__nd$0$i$i549 + 16 >> 2] | 0;
        if ($1389 >>> 0 > $__k$val$i548 >>> 0) {
         $1391 = HEAP32[$__nd$0$i$i549 >> 2] | 0;
         if (!$1391) {
          $$lcssa8211 = $__nd$0$i$i549;
          $__nd$0$i$i549$lcssa8209 = $__nd$0$i$i549;
          label = 343;
          break;
         } else $__nd$0$be$in$i$i551 = $1391;
        } else {
         if ($1389 >>> 0 >= $__k$val$i548 >>> 0) {
          $__nd$0$i$i549$lcssa = $__nd$0$i$i549;
          label = 349;
          break;
         }
         $1395 = $__nd$0$i$i549 + 4 | 0;
         $1396 = HEAP32[$1395 >> 2] | 0;
         if (!$1396) {
          $$lcssa8210 = $1395;
          $__nd$0$i$i549$lcssa8208 = $__nd$0$i$i549;
          label = 347;
          break;
         } else $__nd$0$be$in$i$i551 = $1396;
        }
        $__nd$0$i$i549 = $__nd$0$be$in$i$i551;
       }
       if ((label | 0) == 343) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i549$lcssa8209;
        $$0$i7$i557 = $$lcssa8211;
        $1406 = $__nd$0$i$i549$lcssa8209;
        label = 350;
        break;
       } else if ((label | 0) == 347) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i549$lcssa8208;
        $$0$i7$i557 = $$lcssa8210;
        $1406 = $__nd$0$i$i549$lcssa8208;
        label = 350;
        break;
       } else if ((label | 0) == 349) {
        label = 0;
        HEAP32[$0 >> 2] = $__nd$0$i$i549$lcssa;
        if (!$__nd$0$i$i549$lcssa) {
         $$0$i7$i557 = $0;
         $1406 = $__nd$0$i$i549$lcssa;
         label = 350;
         break;
        } else {
         $__r$0$i561 = $__nd$0$i$i549$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 350) {
       label = 0;
       $1401 = __Znwj(24) | 0;
       HEAP32[$1401 + 16 >> 2] = $1387;
       HEAP32[$1401 + 20 >> 2] = 0;
       HEAP32[$1401 >> 2] = 0;
       HEAP32[$1401 + 4 >> 2] = 0;
       HEAP32[$1401 + 8 >> 2] = $1406;
       HEAP32[$$0$i7$i557 >> 2] = $1401;
       $1408 = HEAP32[HEAP32[$1378 >> 2] >> 2] | 0;
       if (!$1408) $1412 = $1401; else {
        HEAP32[$1378 >> 2] = $1408;
        $1412 = HEAP32[$$0$i7$i557 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1381 >> 2] | 0, $1412);
       HEAP32[$1382 >> 2] = (HEAP32[$1382 >> 2] | 0) + 1;
       $__r$0$i561 = $1401;
      }
      $1416 = HEAP32[$__r$0$i561 + 20 >> 2] | 0;
      $1417 = $1416 + 28 | 0;
      $1419 = HEAP32[$1384 + 20 >> 2] | 0;
      __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($18, $this, HEAP32[$1419 + 36 >> 2] | 0, HEAP32[$1419 + 40 >> 2] | 0);
      $1420 = $1416 + 32 | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1417, HEAP32[$1420 >> 2] | 0);
      HEAP32[$1417 >> 2] = HEAP32[$18 >> 2];
      $1423 = HEAP32[$400 >> 2] | 0;
      HEAP32[$1420 >> 2] = $1423;
      $1425 = HEAP32[$401 >> 2] | 0;
      HEAP32[$1416 + 36 >> 2] = $1425;
      if (!$1425) {
       HEAP32[$1417 >> 2] = $1420;
       $1429 = HEAP32[$400 >> 2] | 0;
      } else {
       HEAP32[$1423 + 8 >> 2] = $1420;
       HEAP32[$18 >> 2] = $400;
       HEAP32[$400 >> 2] = 0;
       HEAP32[$401 >> 2] = 0;
       $1429 = 0;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($18, $1429);
      $1431 = HEAP32[$1384 + 4 >> 2] | 0;
      if (!$1431) {
       $$0$i$i$i566 = $1384;
       while (1) {
        $1436 = HEAP32[$$0$i$i$i566 + 8 >> 2] | 0;
        if ((HEAP32[$1436 >> 2] | 0) == ($$0$i$i$i566 | 0)) {
         $$01$i$i$i569 = $1436;
         break;
        } else $$0$i$i$i566 = $1436;
       }
      } else {
       $$0$i$i$i$i564 = $1431;
       while (1) {
        $1433 = HEAP32[$$0$i$i$i$i564 >> 2] | 0;
        if (!$1433) {
         $$01$i$i$i569 = $$0$i$i$i$i564;
         break;
        } else $$0$i$i$i$i564 = $1433;
       }
      }
      if (($$01$i$i$i569 | 0) == ($1220 | 0)) break; else $1384 = $$01$i$i$i569;
     }
    }
    $$010 = HEAP32[$$010 + 60 >> 2] | 0;
    continue L1;
    break;
   }
  case 11:
   {
    $1443 = HEAP8[$$010 + 48 >> 0] | 0;
    HEAP32[$218 >> 2] = 1;
    HEAP8[$205 >> 0] = $1443;
    HEAP8[$219 >> 0] = HEAP8[$$sroa$32509 >> 0] | 0;
    HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32509 + 1 >> 0] | 0;
    HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32509 + 2 >> 0] | 0;
    HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32509 + 3 >> 0] | 0;
    HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32509 + 4 >> 0] | 0;
    HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32509 + 5 >> 0] | 0;
    HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32509 + 6 >> 0] | 0;
    break;
   }
  case 13:
   {
    __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($19, $this, $$010 + 4 | 0, +HEAPF64[$$010 + 48 >> 3]);
    HEAP32[$204 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
    break;
   }
  case 14:
   {
    __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($20, $this, $$010 + 48 | 0);
    HEAP32[$204 >> 2] = HEAP32[$20 >> 2];
    HEAP32[$204 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
    HEAP32[$204 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
    HEAP32[$204 + 12 >> 2] = HEAP32[$20 + 12 >> 2];
    break;
   }
  case 12:
   {
    HEAP32[$218 >> 2] = 0;
    HEAP32[$402 >> 2] = HEAP32[$$sroa$22505 >> 2];
    HEAP32[$402 + 4 >> 2] = HEAP32[$$sroa$22505 + 4 >> 2];
    HEAP32[$402 + 8 >> 2] = HEAP32[$$sroa$22505 + 8 >> 2];
    break;
   }
  case 15:
   {
    if (!(HEAP32[$$010 + 56 >> 2] | 0)) {
     HEAP32[$403 >> 2] = 0;
     HEAP32[$404 >> 2] = 0;
     HEAP32[$env26 >> 2] = $405;
     HEAP32[$406 >> 2] = 0;
     HEAP32[$407 >> 2] = 0;
     HEAP32[$fields >> 2] = $408;
     HEAP32[$409 >> 2] = 0;
     HEAP32[$410 >> 2] = 0;
     HEAP32[$22 >> 2] = $411;
     HEAP32[$412 >> 2] = 0;
     HEAP32[$413 >> 2] = 0;
     HEAP32[$23 >> 2] = $414;
     __THREW__ = 0;
     invoke_viiii(17, $21 | 0, $this | 0, $22 | 0, $23 | 0);
     $1451 = __THREW__;
     __THREW__ = 0;
     if ($1451 & 1) {
      label = 369;
      break L1;
     };
     HEAP32[$204 >> 2] = HEAP32[$21 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($23, HEAP32[$414 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($22, HEAP32[$411 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$408 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$405 >> 2] | 0);
     break L3;
    } else {
     __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env27, $this, HEAP32[$$010 + 36 >> 2] | 0, HEAP32[$$010 + 40 >> 2] | 0);
     __THREW__ = 0;
     invoke_viii(12, $198 | 0, 12, $$010 | 0);
     $1462 = __THREW__;
     __THREW__ = 0;
     if ($1462 & 1) {
      label = 372;
      break L1;
     }
     $1465 = HEAP32[$$010 + 52 >> 2] | 0;
     HEAP32[(HEAP32[$$idx1$i >> 2] | 0) + -72 >> 2] = $1465;
     $1469 = HEAP32[$1465 + 8 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$415 >> 2] | 0);
     $$010 = $1469;
     continue L1;
    }
    break;
   }
  case 16:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 13, $$010);
    $$010 = HEAP32[$$010 + 60 >> 2] | 0;
    continue L1;
    break;
   }
  case 17:
   {
    HEAP32[$218 >> 2] = 18;
    $$idx$val$i614 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i617 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i614 | 0) / 144 | 0;
    while (1) {
     $i$0$i618 = $i$0$in$i617 + -1 | 0;
     if (($i$0$in$i617 | 0) <= 0) {
      $1484 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i614 + ($i$0$i618 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i618$lcssa8201 = $i$0$i618;
      label = 377;
      break;
     } else $i$0$in$i617 = $i$0$i618;
    }
    if ((label | 0) == 377) {
     label = 0;
     $1484 = HEAP32[$$idx$val$i614 + ($i$0$i618$lcssa8201 * 144 | 0) + 120 >> 2] | 0;
    }
    HEAP32[$205 >> 2] = $1484;
    break;
   }
  case 18:
   {
    $$idx$val$i624 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i627 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i624 | 0) / 144 | 0;
    while (1) {
     $i$0$i628 = $i$0$in$i627 + -1 | 0;
     if (($i$0$in$i627 | 0) <= 0) {
      $1496 = 0;
      $1498 = 0;
      break;
     }
     if ((HEAP32[$$idx$val$i624 + ($i$0$i628 * 144 | 0) >> 2] | 0) == 5) {
      $i$0$i628$lcssa8200 = $i$0$i628;
      label = 382;
      break;
     } else $i$0$in$i627 = $i$0$i628;
    }
    if ((label | 0) == 382) {
     label = 0;
     $1496 = HEAP32[$$idx$val$i624 + ($i$0$i628$lcssa8200 * 144 | 0) + 124 >> 2] | 0;
     $1498 = HEAP32[$$idx$val$i624 + ($i$0$i628$lcssa8200 * 144 | 0) + 120 >> 2] | 0;
    }
    $1495 = $1496 + 1 | 0;
    $1497 = $1498;
    if ($1495 >>> 0 >= (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($1497) | 0) >>> 0) {
     $$010$lcssa8847 = $$010;
     label = 384;
     break L1;
    }
    $1512 = __Znwj(16) | 0;
    HEAP32[$1512 >> 2] = 3608;
    HEAP32[$1512 + 8 >> 2] = $1497;
    HEAP32[$1512 + 12 >> 2] = $1495;
    $1515 = $1512;
    $1516 = HEAP32[$225 >> 2] | 0;
    $1517 = HEAP32[$226 >> 2] | 0;
    if ($1516 >>> 0 < $1517 >>> 0) {
     HEAP32[$1516 >> 2] = $1515;
     $1520 = (HEAP32[$225 >> 2] | 0) + 4 | 0;
     HEAP32[$225 >> 2] = $1520;
     $$idx1$val$i$i$i650 = $1520;
    } else {
     $this$idx2$val$i$i$i$i$i636 = HEAP32[$224 >> 2] | 0;
     $1522 = $this$idx2$val$i$i$i$i$i636;
     $1525 = ($1516 - $1522 >> 2) + 1 | 0;
     if ($1525 >>> 0 > 1073741823) {
      __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($224);
      $$idx$val$i$i$pre$i$i$i$i$i637 = HEAP32[$224 >> 2] | 0;
      $$idx1$val$i$i$i$i$i$i$i639 = HEAP32[$226 >> 2] | 0;
      $1530 = $$idx$val$i$i$pre$i$i$i$i$i637;
      $1556 = $$idx$val$i$i$pre$i$i$i$i$i637;
     } else {
      $$idx1$val$i$i$i$i$i$i$i639 = $1517;
      $1530 = $this$idx2$val$i$i$i$i$i636;
      $1556 = $1522;
     }
     $1529 = $1530;
     $1531 = $$idx1$val$i$i$i$i$i$i$i639 - $1529 | 0;
     if ($1531 >> 2 >>> 0 < 536870911) {
      $1537 = $1531 >> 1;
      $1539 = $1537 >>> 0 < $1525 >>> 0 ? $1525 : $1537;
      $1541 = (HEAP32[$225 >> 2] | 0) - $1529 | 0;
      $1542 = $1541 >> 2;
      if (!$1539) {
       $$0$i8$i$i$i$i$i645 = 0;
       $1547 = 0;
       $1548 = $1542;
       $1554 = $1541;
      } else {
       $$0$i7$i$i$i$i$i644 = $1539;
       $6137 = $1542;
       $6138 = $1541;
       label = 397;
      }
     } else {
      $1535 = (HEAP32[$225 >> 2] | 0) - $1529 | 0;
      $$0$i7$i$i$i$i$i644 = 1073741823;
      $6137 = $1535 >> 2;
      $6138 = $1535;
      label = 397;
     }
     if ((label | 0) == 397) {
      label = 0;
      $$0$i8$i$i$i$i$i645 = $$0$i7$i$i$i$i$i644;
      $1547 = __Znwj($$0$i7$i$i$i$i$i644 << 2) | 0;
      $1548 = $6137;
      $1554 = $6138;
     }
     HEAP32[$1547 + ($1548 << 2) >> 2] = $1515;
     $1551 = $1547 + ($1548 + 1 << 2) | 0;
     _memcpy($1547 | 0, $1530 | 0, $1554 | 0) | 0;
     HEAP32[$224 >> 2] = $1547;
     HEAP32[$225 >> 2] = $1551;
     HEAP32[$226 >> 2] = $1547 + ($$0$i8$i$i$i$i$i645 << 2);
     if (!$1556) $$idx1$val$i$i$i650 = $1551; else {
      __ZdlPv($1556);
      $$idx1$val$i$i$i650 = HEAP32[$225 >> 2] | 0;
     }
    }
    HEAP8[$1512 + 4 >> 0] = HEAP8[$227 >> 0] | 0;
    $1563 = $$idx1$val$i$i$i650 - (HEAP32[$224 >> 2] | 0) >> 2;
    HEAP32[$228 >> 2] = $1563;
    if ($1563 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($1563 >>> 0) > +HEAPF64[$229 >> 3] * +((HEAP32[$230 >> 2] | 0) >>> 0)) {
     __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $1512);
     __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($198, $this);
     if (HEAP32[$218 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$205 >> 2] | 0);
     $1577 = (HEAP8[$227 >> 0] | 0) + 1 << 24 >> 24;
     HEAP8[$227 >> 0] = $1577;
     $$idx6$val11$i$i$i654 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
     $$idx7$val12$i$i$i655 = HEAP32[$225 >> 2] | 0;
     L495 : do if (($$idx7$val12$i$i$i655 | 0) == ($$idx6$val11$i$i$i654 | 0)) $$lcssa$i$i$i673 = 0; else {
      $$idx5$val19$i$i$i657 = $$idx7$val12$i$i$i655;
      $$idx6$val14$i$i$i658 = $$idx6$val11$i$i$i654;
      $1584 = $1577;
      $i$013$i$i$i659 = 0;
      while (1) {
       $1580 = HEAP32[$$idx6$val14$i$i$i658 + ($i$013$i$i$i659 << 2) >> 2] | 0;
       if ((HEAP8[$1580 + 4 >> 0] | 0) == $1584 << 24 >> 24) {
        $$idx6$val$i$i$i670 = $$idx6$val14$i$i$i658;
        $$idx7$val$i$i$i669 = $$idx5$val19$i$i$i657;
        $i$1$i$i$i671 = $i$013$i$i$i659;
       } else {
        if (!$1580) {
         $$idx4$val$i$i$i664 = $$idx6$val14$i$i$i658;
         $$idx5$val$i$i$i663 = $$idx5$val19$i$i$i657;
        } else {
         FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1580 >> 2] | 0) + 4 >> 2] & 255]($1580);
         $$idx4$val$i$i$i664 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
         $$idx5$val$i$i$i663 = HEAP32[$225 >> 2] | 0;
        }
        $1593 = ($$idx5$val$i$i$i663 - $$idx4$val$i$i$i664 >> 2) + -1 | 0;
        if (($i$013$i$i$i659 | 0) == ($1593 | 0)) {
         $$idx6$val$pre$i$i$i667 = $$idx4$val$i$i$i664;
         $1598 = $$idx5$val$i$i$i663;
        } else {
         HEAP32[$$idx4$val$i$i$i664 + ($i$013$i$i$i659 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i664 + ($1593 << 2) >> 2];
         $$idx6$val$pre$i$i$i667 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
         $1598 = HEAP32[$225 >> 2] | 0;
        }
        $scevgep4$i$i$i$i$i$i668 = $1598 + -4 | 0;
        HEAP32[$225 >> 2] = $scevgep4$i$i$i$i$i$i668;
        $$idx6$val$i$i$i670 = $$idx6$val$pre$i$i$i667;
        $$idx7$val$i$i$i669 = $scevgep4$i$i$i$i$i$i668;
        $i$1$i$i$i671 = $i$013$i$i$i659 + -1 | 0;
       }
       $1600 = $i$1$i$i$i671 + 1 | 0;
       $1604 = $$idx7$val$i$i$i669 - $$idx6$val$i$i$i670 >> 2;
       if ($1600 >>> 0 >= $1604 >>> 0) {
        $$lcssa$i$i$i673 = $1604;
        break L495;
       }
       $$idx5$val19$i$i$i657 = $$idx7$val$i$i$i669;
       $$idx6$val14$i$i$i658 = $$idx6$val$i$i$i670;
       $1584 = HEAP8[$227 >> 0] | 0;
       $i$013$i$i$i659 = $1600;
      }
     } while (0);
     HEAP32[$228 >> 2] = $$lcssa$i$i$i673;
     HEAP32[$230 >> 2] = $$lcssa$i$i$i673;
    }
    HEAP32[$218 >> 2] = 18;
    HEAP32[$205 >> 2] = $1512;
    break;
   }
  case 19:
   {
    __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($198, 16, $$010);
    $$010 = HEAP32[$$010 + 52 >> 2] | 0;
    continue L1;
    break;
   }
  case 20:
   {
    $1608 = $$010 + 48 | 0;
    $1609 = HEAP32[$1608 >> 2] | 0;
    $$idx$val$i676 = HEAP32[$$idx$i >> 2] | 0;
    $i$0$in$i679 = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i676 | 0) / 144 | 0;
    while (1) {
     if (($i$0$in$i679 | 0) <= 0) {
      $1632 = $1608;
      label = 427;
      break L1;
     }
     $i$0$in$i679 = $i$0$in$i679 + -1 | 0;
     $1615 = $$idx$val$i676 + ($i$0$in$i679 * 144 | 0) + 132 | 0;
     $1616 = HEAP32[$1615 >> 2] | 0;
     if ($1616) {
      $$0$ph6$i$i$i$i = $1615;
      $$01$ph5$i$i$i$i = $1616;
      L516 : while (1) {
       $$013$i$i$i$i = $$01$ph5$i$i$i$i;
       while (1) {
        if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $1609 >>> 0) {
         $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
         break;
        }
        $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
        if (!$$013$i$i$i$i) {
         $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i;
         break L516;
        }
       }
       $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
       if (!$$01$ph5$i$i$i$i) {
        $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa;
        break;
       } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
      }
      if (($$0$ph$lcssa$i$i$i$i | 0) != ($1615 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 <= $1609 >>> 0) {
       $$0$ph$lcssa$i$i$i$i$lcssa = $$0$ph$lcssa$i$i$i$i;
       break;
      }
     }
     if ((HEAP32[$$idx$val$i676 + ($i$0$in$i679 * 144 | 0) >> 2] | 0) == 5) {
      $1632 = $1608;
      label = 427;
      break L1;
     }
    }
    $1628 = HEAP32[$$0$ph$lcssa$i$i$i$i$lcssa + 20 >> 2] | 0;
    if (!$1628) {
     $1632 = $1608;
     label = 427;
     break L1;
    }
    if (!(HEAP8[$1628 + 5 >> 0] | 0)) {
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($198, $$010 + 4 | 0, $1628, HEAP32[$1628 + 40 >> 2] | 0, HEAP32[$1628 + 44 >> 2] | 0, $1628 + 28 | 0);
     $$010 = HEAP32[$1628 + 48 >> 2] | 0;
     continue L1;
    } else {
     $1665 = $1628 + 8 | 0;
     HEAP32[$204 >> 2] = HEAP32[$1665 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$1665 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$1665 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$1665 + 12 >> 2];
     break L3;
    }
    break;
   }
  default:
   {
    $$lcssa9012 = $416;
    label = 434;
    break L1;
   }
  } while (0);
  $$idx$val$i68540624095 = HEAP32[$$idx$i >> 2] | 0;
  $$idx1$val$i68740634096 = HEAP32[$$idx1$i >> 2] | 0;
  if (($$idx1$val$i68740634096 - $$idx$val$i68540624095 | 0) >>> 0 > $201 >>> 0) {
   $$111$ph4097 = $$010;
   $$idx$val$i7025085 = $$idx$val$i68540624095;
   $$idx1$val$i68740634098 = $$idx1$val$i68740634096;
  } else {
   label = 2029;
   break;
  }
  L531 : while (1) {
   $$idx$val$i7025084 = $$idx$val$i7025085;
   $$idx$val$i860 = $$idx1$val$i68740634098;
   L533 : while (1) {
    $1693 = $$idx$val$i860 + -144 | 0;
    switch (HEAP32[$1693 >> 2] | 0) {
    case 6:
     {
      $$idx$val$i860$lcssa8253 = $$idx$val$i860;
      label = 1510;
      break L1;
      break;
     }
    case 8:
     {
      $$idx$val$i860$lcssa8254 = $$idx$val$i860;
      label = 1525;
      break L531;
      break;
     }
    case 9:
     {
      $$idx$val$i860$lcssa8256 = $$idx$val$i860;
      $$lcssa8294 = $1693;
      label = 1645;
      break L531;
      break;
     }
    case 0:
     {
      $$idx$val$i7025084$lcssa8228 = $$idx$val$i7025084;
      $$idx$val$i860$lcssa8247 = $$idx$val$i860;
      label = 439;
      break L533;
      break;
     }
    case 1:
     {
      $$idx$val$i860$lcssa8248 = $$idx$val$i860;
      $$lcssa8286 = $1693;
      label = 617;
      break L533;
      break;
     }
    case 3:
     {
      $$idx$val$i860$lcssa8249 = $$idx$val$i860;
      label = 851;
      break L533;
      break;
     }
    case 4:
     {
      $$idx$val$i860$lcssa8250 = $$idx$val$i860;
      $$lcssa8288 = $1693;
      label = 923;
      break L533;
      break;
     }
    case 5:
     {
      $$idx$val$i860$lcssa8251 = $$idx$val$i860;
      label = 1498;
      break L533;
      break;
     }
    case 7:
     {
      $$idx$val$i860$lcssa8252 = $$idx$val$i860;
      label = 1509;
      break L533;
      break;
     }
    case 10:
     {
      $$idx$val$i860$lcssa8255 = $$idx$val$i860;
      label = 1538;
      break L533;
      break;
     }
    case 11:
     {
      $$515 = $$111$ph4097;
      label = 2026;
      break L533;
      break;
     }
    case 12:
     {
      $$idx$val$i860$lcssa8258 = $$idx$val$i860;
      label = 1658;
      break L533;
      break;
     }
    case 13:
     {
      $$idx$val$i860$lcssa8259 = $$idx$val$i860;
      $$lcssa8297 = $1693;
      label = 1782;
      break L533;
      break;
     }
    case 14:
     {
      $$idx$val$i860$lcssa8260 = $$idx$val$i860;
      label = 1809;
      break L533;
      break;
     }
    case 15:
     {
      $$idx$val$i860$lcssa8261 = $$idx$val$i860;
      label = 1946;
      break L533;
      break;
     }
    case 16:
     {
      $$idx$val$i860$lcssa8262 = $$idx$val$i860;
      label = 1977;
      break L533;
      break;
     }
    case 2:
     break;
    default:
     {
      $$lcssa8284 = $1693;
      label = 2022;
      break L1;
     }
    }
    $2231 = HEAP32[$$idx$val$i860 + -140 >> 2] | 0;
    $2232 = $$idx$val$i860 + -104 | 0;
    $2233 = HEAP32[$2232 >> 2] | 0;
    if (($2233 | 0) == 19) label = 627; else if ((HEAP32[$204 >> 2] | 0) == 19) label = 627; else {
     $$phi$trans$insert5079 = $2231 + 52 | 0;
     $$pre$phi5096Z2D = $$phi$trans$insert5079;
     $2241 = HEAP32[$$phi$trans$insert5079 >> 2] | 0;
     label = 629;
    }
    if ((label | 0) == 627) {
     label = 0;
     $2237 = $2231 + 52 | 0;
     $2238 = HEAP32[$2237 >> 2] | 0;
     if (($2238 | 0) == 2) {
      HEAP32[$1693 >> 2] = 15;
      $2240 = $$idx$val$i860 + -88 | 0;
      HEAP32[$2240 >> 2] = HEAP32[$204 >> 2];
      HEAP32[$2240 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
      HEAP32[$2240 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
      HEAP32[$2240 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
     } else {
      $$pre$phi5096Z2D = $2237;
      $2241 = $2238;
      label = 629;
     }
    }
    if ((label | 0) == 629) {
     label = 0;
     switch ($2241 | 0) {
     case 11:
      {
       label = 632;
       break L1;
       break;
      }
     case 10:
      break;
     default:
      {
       $$idx$val$i860$lcssa8263 = $$idx$val$i860;
       $$lcssa8306 = $2231;
       $$lcssa8322 = $2232;
       $$lcssa8338 = $2233;
       $$lcssa8355 = $2241;
       $$pre$phi5096$lcssaZ2D = $$pre$phi5096Z2D;
       label = 636;
       break L533;
      }
     }
     HEAP32[$1693 >> 2] = 7;
     $2242 = $$idx$val$i860 + -88 | 0;
     HEAP32[$2242 >> 2] = HEAP32[$204 >> 2];
     HEAP32[$2242 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
     HEAP32[$2242 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
     HEAP32[$2242 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
    }
    $$idx$val$i7025084 = HEAP32[$$idx$i >> 2] | 0;
    $$idx$val$i860 = HEAP32[$$idx1$i >> 2] | 0;
    if (($$idx$val$i860 - $$idx$val$i7025084 | 0) >>> 0 <= $201 >>> 0) {
     label = 2029;
     break L1;
    }
   }
   L546 : switch (label | 0) {
   case 439:
    {
     label = 0;
     $1695 = $$idx$val$i860$lcssa8247 + -140 | 0;
     $1696 = HEAP32[$1695 >> 2] | 0;
     if ((HEAP32[$204 >> 2] | 0) != 17) {
      $$lcssa8798 = $1696;
      label = 440;
      break L1;
     }
     $1715 = HEAP32[$205 >> 2] | 0;
     $1716 = $1696 + 56 | 0;
     $1717 = HEAP32[$1716 >> 2] | 0;
     $1718 = $1696 + 52 | 0;
     $1719 = HEAP32[$1718 >> 2] | 0;
     $1723 = $1715 + 32 | 0;
     $1725 = $1715 + 28 | 0;
     if (($1717 - $1719 | 0) != ((HEAP32[$1723 >> 2] | 0) - (HEAP32[$1725 >> 2] | 0) | 0)) {
      $$lcssa8799 = $1696;
      $$lcssa8805 = $1716;
      $$lcssa8811 = $1718;
      $$lcssa8817 = $1723;
      $$lcssa8823 = $1725;
      label = 452;
      break L1;
     }
     L550 : do if (($1717 | 0) == ($1719 | 0)) $__x$idx1$i$pre$phiZZZ2D = $$idx$val$i860$lcssa8247 + -36 | 0; else {
      $1732 = $$idx$val$i860$lcssa8247 + -40 | 0;
      $1733 = $$idx$val$i860$lcssa8247 + -36 | 0;
      $1734 = $$idx$val$i860$lcssa8247 + -32 | 0;
      $$idx1$val$i704 = $$idx$val$i860$lcssa8247;
      $$idx2$val$i709 = $$idx$val$i7025084$lcssa8228;
      $1798 = $1719;
      $i$04090 = 0;
      while (1) {
       $1799 = HEAP32[$1798 + ($i$04090 << 2) >> 2] | 0;
       $i$0$in$i705 = ($$idx1$val$i704 - $$idx2$val$i709 | 0) / 144 | 0;
       while (1) {
        $i$0$i706 = $i$0$in$i705 + -1 | 0;
        if (($i$0$in$i705 | 0) <= 0) {
         $1814 = 0;
         $1815 = 0;
         break;
        }
        if ((HEAP32[$$idx2$val$i709 + ($i$0$i706 * 144 | 0) >> 2] | 0) == 5) {
         $i$0$i706$lcssa8412 = $i$0$i706;
         label = 476;
         break;
        } else $i$0$in$i705 = $i$0$i706;
       }
       if ((label | 0) == 476) {
        label = 0;
        $1814 = HEAP32[$$idx2$val$i709 + ($i$0$i706$lcssa8412 * 144 | 0) + 120 >> 2] | 0;
        $1815 = HEAP32[$$idx2$val$i709 + ($i$0$i706$lcssa8412 * 144 | 0) + 124 >> 2] | 0;
       }
       $1816 = __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, HEAP32[(HEAP32[$1725 >> 2] | 0) + ($i$04090 << 2) >> 2] | 0, $1814, $1815, $1799) | 0;
       $1817 = $1816;
       $1818 = $1816 + 28 | 0;
       __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($28, $this, HEAP32[$1799 + 36 >> 2] | 0, HEAP32[$1799 + 40 >> 2] | 0);
       $1819 = $1816 + 32 | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1818, HEAP32[$1819 >> 2] | 0);
       HEAP32[$1818 >> 2] = HEAP32[$28 >> 2];
       $1822 = HEAP32[$216 >> 2] | 0;
       HEAP32[$1819 >> 2] = $1822;
       $1824 = HEAP32[$217 >> 2] | 0;
       HEAP32[$1816 + 36 >> 2] = $1824;
       if (!$1824) {
        HEAP32[$1818 >> 2] = $1819;
        $1828 = HEAP32[$216 >> 2] | 0;
       } else {
        HEAP32[$1822 + 8 >> 2] = $1819;
        HEAP32[$28 >> 2] = $216;
        HEAP32[$216 >> 2] = 0;
        HEAP32[$217 >> 2] = 0;
        $1828 = 0;
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($28, $1828);
       $1829 = HEAP32[$1733 >> 2] | 0;
       if (($1829 | 0) == (HEAP32[$1734 >> 2] | 0)) {
        $this$idx2$val$i$i713 = HEAP32[$1732 >> 2] | 0;
        $1835 = $this$idx2$val$i$i713;
        $1838 = ($1829 - $1835 >> 2) + 1 | 0;
        if ($1838 >>> 0 > 1073741823) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($1732);
         $$idx$val$i$i$pre$i$i714 = HEAP32[$1732 >> 2] | 0;
         $$idx1$val$i$i$i$i716 = HEAP32[$1734 >> 2] | 0;
         $1843 = $$idx$val$i$i$pre$i$i714;
         $1869 = $$idx$val$i$i$pre$i$i714;
        } else {
         $$idx1$val$i$i$i$i716 = $1829;
         $1843 = $this$idx2$val$i$i713;
         $1869 = $1835;
        }
        $1842 = $1843;
        $1844 = $$idx1$val$i$i$i$i716 - $1842 | 0;
        if ($1844 >> 2 >>> 0 < 536870911) {
         $1850 = $1844 >> 1;
         $1852 = $1850 >>> 0 < $1838 >>> 0 ? $1838 : $1850;
         $1854 = (HEAP32[$1733 >> 2] | 0) - $1842 | 0;
         $1855 = $1854 >> 2;
         if (!$1852) {
          $$0$i8$i$i722 = 0;
          $1860 = 0;
          $1861 = $1855;
          $1867 = $1854;
         } else {
          $$0$i7$i$i721 = $1852;
          $6139 = $1855;
          $6140 = $1854;
          label = 487;
         }
        } else {
         $1848 = (HEAP32[$1733 >> 2] | 0) - $1842 | 0;
         $$0$i7$i$i721 = 1073741823;
         $6139 = $1848 >> 2;
         $6140 = $1848;
         label = 487;
        }
        if ((label | 0) == 487) {
         label = 0;
         $$0$i8$i$i722 = $$0$i7$i$i721;
         $1860 = __Znwj($$0$i7$i$i721 << 2) | 0;
         $1861 = $6139;
         $1867 = $6140;
        }
        HEAP32[$1860 + ($1861 << 2) >> 2] = $1817;
        _memcpy($1860 | 0, $1843 | 0, $1867 | 0) | 0;
        HEAP32[$1732 >> 2] = $1860;
        HEAP32[$1733 >> 2] = $1860 + ($1861 + 1 << 2);
        HEAP32[$1734 >> 2] = $1860 + ($$0$i8$i$i722 << 2);
        if ($1869) __ZdlPv($1869);
       } else {
        HEAP32[$1829 >> 2] = $1817;
        HEAP32[$1733 >> 2] = (HEAP32[$1733 >> 2] | 0) + 4;
       }
       $1871 = $i$04090 + 1 | 0;
       $1873 = HEAP32[$1718 >> 2] | 0;
       if ($1871 >>> 0 >= (HEAP32[$1716 >> 2] | 0) - $1873 >> 2 >>> 0) {
        $__x$idx1$i$pre$phiZZZ2D = $1733;
        break L550;
       }
       $$idx1$val$i704 = HEAP32[$$idx1$i >> 2] | 0;
       $$idx2$val$i709 = HEAP32[$$idx$i >> 2] | 0;
       $1798 = $1873;
       $i$04090 = $1871;
      }
     } while (0);
     HEAP32[$args >> 2] = 0;
     HEAP32[$209 >> 2] = 0;
     HEAP32[$210 >> 2] = 0;
     $__x$idx$i = $$idx$val$i860$lcssa8247 + -40 | 0;
     $1881 = (HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0) - (HEAP32[$__x$idx$i >> 2] | 0) | 0;
     $1882 = $1881 >> 2;
     if ($1882) {
      if ($1882 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(175, $args | 0);
       $1885 = __THREW__;
       __THREW__ = 0;
       if ($1885 & 1) {
        label = 499;
        break L1;
       }
      }
      __THREW__ = 0;
      $1887 = invoke_ii(67, $1881 | 0) | 0;
      $1888 = __THREW__;
      __THREW__ = 0;
      if ($1888 & 1) {
       label = 499;
       break L1;
      }
      HEAP32[$209 >> 2] = $1887;
      HEAP32[$args >> 2] = $1887;
      HEAP32[$215 >> 2] = $1887 + ($1882 << 2);
      $1891 = HEAP32[$__x$idx$i >> 2] | 0;
      $1892 = HEAP32[$__x$idx1$i$pre$phiZZZ2D >> 2] | 0;
      if (($1891 | 0) != ($1892 | 0)) {
       $$01$i$i728 = $1891;
       $1895 = $1887;
       do {
        HEAP32[$1895 >> 2] = HEAP32[$$01$i$i728 >> 2];
        $1895 = (HEAP32[$209 >> 2] | 0) + 4 | 0;
        HEAP32[$209 >> 2] = $1895;
        $$01$i$i728 = $$01$i$i728 + 4 | 0;
       } while (($$01$i$i728 | 0) != ($1892 | 0));
      }
     }
     __ZN12_GLOBAL__N_15Stack3popEv($198);
     $1911 = $1715 + 40 | 0;
     if (!(HEAP32[$1911 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_viii(12, $198 | 0, 4, HEAP32[$1695 >> 2] | 0);
      $1915 = __THREW__;
      __THREW__ = 0;
      if ($1915 & 1) {
       label = 529;
       break L1;
      }
      $$idx$val$i733 = HEAP32[$$idx1$i >> 2] | 0;
      $1917 = $$idx$val$i733 + -40 | 0;
      L594 : do if (($1917 | 0) != ($args | 0)) {
       $1919 = HEAP32[$args >> 2] | 0;
       $1920 = HEAP32[$209 >> 2] | 0;
       $1922 = $1919;
       $1924 = $1920 - $1922 >> 2;
       $$idx$val$i$i$i735 = HEAP32[$1917 >> 2] | 0;
       $$idx1$i$i$i = $$idx$val$i733 + -32 | 0;
       $$idx1$val$i$i$i736 = HEAP32[$$idx1$i$i$i >> 2] | 0;
       $1926 = $$idx$val$i$i$i735;
       if ($1924 >>> 0 <= $$idx1$val$i$i$i736 - $1926 >> 2 >>> 0) {
        $this$idx3$i$i = $$idx$val$i733 + -36 | 0;
        $1932 = (HEAP32[$this$idx3$i$i >> 2] | 0) - $1926 >> 2;
        $1933 = $1924 >>> 0 > $1932 >>> 0;
        $$__last$i$i = $1933 ? $1919 + ($1932 << 2) | 0 : $1920;
        $1936 = $$__last$i$i - $1922 | 0;
        _memmove($$idx$val$i$i$i735 | 0, $1919 | 0, $1936 | 0) | 0;
        $1938 = $$idx$val$i$i$i735 + ($1936 >> 2 << 2) | 0;
        if (!$1933) {
         $1946 = HEAP32[$this$idx3$i$i >> 2] | 0;
         if (($1946 | 0) == ($1938 | 0)) break;
         HEAP32[$this$idx3$i$i >> 2] = $1946 + (~(($1946 + -4 - $1938 | 0) >>> 2) << 2);
         break;
        }
        if (($$__last$i$i | 0) == ($1920 | 0)) break;
        $$01$i6$i$i = $$__last$i$i;
        $1941 = HEAP32[$this$idx3$i$i >> 2] | 0;
        while (1) {
         HEAP32[$1941 >> 2] = HEAP32[$$01$i6$i$i >> 2];
         $1941 = (HEAP32[$this$idx3$i$i >> 2] | 0) + 4 | 0;
         HEAP32[$this$idx3$i$i >> 2] = $1941;
         $$01$i6$i$i = $$01$i6$i$i + 4 | 0;
         if (($$01$i6$i$i | 0) == ($1920 | 0)) break L594;
        }
       }
       if (!$$idx$val$i$i$i735) $$idx1$val$i$i14$i$i = $$idx1$val$i$i$i736; else {
        $1953 = $$idx$val$i733 + -36 | 0;
        $1954 = HEAP32[$1953 >> 2] | 0;
        if (($1954 | 0) != ($$idx$val$i$i$i735 | 0)) HEAP32[$1953 >> 2] = $1954 + (~(($1954 + -4 - $1926 | 0) >>> 2) << 2);
        __ZdlPv($$idx$val$i$i$i735);
        HEAP32[$$idx1$i$i$i >> 2] = 0;
        HEAP32[$1953 >> 2] = 0;
        HEAP32[$1917 >> 2] = 0;
        $$idx1$val$i$i14$i$i = 0;
       }
       if ($1924 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(175, $1917 | 0);
        $1961 = __THREW__;
        __THREW__ = 0;
        if ($1961 & 1) {
         label = 529;
         break L1;
        }
        $$idx$val$i$i$i$i743 = HEAP32[$1917 >> 2] | 0;
        $$idx1$val$i$i$i$i742 = HEAP32[$$idx1$i$i$i >> 2] | 0;
       } else {
        $$idx$val$i$i$i$i743 = 0;
        $$idx1$val$i$i$i$i742 = $$idx1$val$i$i14$i$i;
       }
       $1964 = $$idx1$val$i$i$i$i742 - $$idx$val$i$i$i$i743 | 0;
       if ($1964 >> 2 >>> 0 < 536870911) {
        $1967 = $1964 >> 1;
        $1969 = $1967 >>> 0 < $1924 >>> 0 ? $1924 : $1967;
        if ($1969 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(175, $1917 | 0);
         $1971 = __THREW__;
         __THREW__ = 0;
         if ($1971 & 1) {
          label = 529;
          break L1;
         } else $$0$i9$i$i = $1969;
        } else $$0$i9$i$i = $1969;
       } else $$0$i9$i$i = 1073741823;
       __THREW__ = 0;
       $1974 = invoke_ii(67, $$0$i9$i$i << 2 | 0) | 0;
       $1975 = __THREW__;
       __THREW__ = 0;
       if ($1975 & 1) {
        label = 529;
        break L1;
       }
       $1977 = $$idx$val$i733 + -36 | 0;
       HEAP32[$1977 >> 2] = $1974;
       HEAP32[$1917 >> 2] = $1974;
       HEAP32[$$idx1$i$i$i >> 2] = $1974 + ($$0$i9$i$i << 2);
       if (($1919 | 0) != ($1920 | 0)) {
        $$01$i$i$i746 = $1919;
        $1981 = $1974;
        do {
         HEAP32[$1981 >> 2] = HEAP32[$$01$i$i$i746 >> 2];
         $1981 = (HEAP32[$1977 >> 2] | 0) + 4 | 0;
         HEAP32[$1977 >> 2] = $1981;
         $$01$i$i$i746 = $$01$i$i$i746 + 4 | 0;
        } while (($$01$i$i$i746 | 0) != ($1920 | 0));
       }
      } while (0);
      $1986 = (HEAP32[$$idx1$i >> 2] | 0) + -104 | 0;
      HEAP32[$1986 >> 2] = HEAP32[$204 >> 2];
      HEAP32[$1986 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
      HEAP32[$1986 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
      HEAP32[$1986 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
      $$1137 = 16;
      $$313 = $$111$ph4097;
     } else {
      HEAP32[$211 >> 2] = 0;
      HEAP32[$212 >> 2] = 0;
      HEAP32[$bindings >> 2] = $213;
      $$idx$val2$i$i753 = HEAP32[$1715 + 8 >> 2] | 0;
      $1989 = $1715 + 12 | 0;
      if (($$idx$val2$i$i753 | 0) != ($1989 | 0)) {
       $1995 = $$idx$val2$i$i753;
       $6141 = $$idx$val2$i$i753;
       while (1) {
        __THREW__ = 0;
        $1991 = invoke_ii(67, 24) | 0;
        $1992 = __THREW__;
        __THREW__ = 0;
        if ($1992 & 1) {
         label = 562;
         break L1;
        }
        $1997 = $1995 + 16 | 0;
        $1999 = HEAP32[$1997 >> 2] | 0;
        $2002 = HEAP32[$1997 + 4 >> 2] | 0;
        $2003 = $1991 + 16 | 0;
        HEAP32[$2003 >> 2] = $1999;
        HEAP32[$2003 + 4 >> 2] = $2002;
        $2007 = $1999;
        $$pre$i$i$i$i$i$i758 = HEAP32[$213 >> 2] | 0;
        do if ((HEAP32[$bindings >> 2] | 0) == ($213 | 0)) {
         $2022 = $214;
         label = 539;
        } else {
         $2009 = ($$pre$i$i$i$i$i$i758 | 0) == 0;
         if ($2009) {
          $$0$i$i$i$i$i$i$i$i762 = $213;
          while (1) {
           $2014 = HEAP32[$$0$i$i$i$i$i$i$i$i762 + 8 >> 2] | 0;
           if ((HEAP32[$2014 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i762 | 0)) $$0$i$i$i$i$i$i$i$i762 = $2014; else {
            $$01$i$i$i$i$i$i$i$i765 = $2014;
            break;
           }
          }
         } else {
          $$0$i$i$i$i$i$i$i$i$i760 = $$pre$i$i$i$i$i$i758;
          while (1) {
           $2011 = HEAP32[$$0$i$i$i$i$i$i$i$i$i760 + 4 >> 2] | 0;
           if (!$2011) {
            $$01$i$i$i$i$i$i$i$i765 = $$0$i$i$i$i$i$i$i$i$i760;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i760 = $2011;
          }
         }
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i765 + 16 >> 2] | 0) >>> 0 < $2007 >>> 0) {
          $2022 = $$01$i$i$i$i$i$i$i$i765;
          label = 539;
         } else {
          if ($2009) {
           HEAP32[$0 >> 2] = $214;
           $$0$i$i$i$i1$i$i774 = $213;
           $2037 = $214;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i770 = $$pre$i$i$i$i$i$i758;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i772 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i770 + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i772 >>> 0 > $2007 >>> 0) {
            $2025 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i770 >> 2] | 0;
            if (!$2025) {
             $$lcssa8416 = $__nd$0$i20$i$i$i$i$in$i$i770;
             $__nd$0$i20$i$i$i$i$in$i$i770$lcssa8414 = $__nd$0$i20$i$i$i$i$in$i$i770;
             label = 545;
             break;
            } else {
             $__nd$0$i20$i$i$i$i$in$i$i770 = $2025;
             continue;
            }
           }
           if ($$idx2$val$i22$i$i$i$i$i$i772 >>> 0 >= $2007 >>> 0) {
            $__nd$0$i20$i$i$i$i$in$i$i770$lcssa = $__nd$0$i20$i$i$i$i$in$i$i770;
            label = 549;
            break;
           }
           $2029 = $__nd$0$i20$i$i$i$i$in$i$i770 + 4 | 0;
           $2030 = HEAP32[$2029 >> 2] | 0;
           if (!$2030) {
            $$lcssa8415 = $2029;
            $__nd$0$i20$i$i$i$i$in$i$i770$lcssa8413 = $__nd$0$i20$i$i$i$i$in$i$i770;
            label = 548;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i770 = $2030;
          }
          if ((label | 0) == 545) {
           label = 0;
           $2027 = $__nd$0$i20$i$i$i$i$in$i$i770$lcssa8414;
           HEAP32[$0 >> 2] = $2027;
           $$0$i$i$i$i1$i$i774 = $$lcssa8416;
           $2037 = $2027;
           break;
          } else if ((label | 0) == 548) {
           label = 0;
           $2032 = $__nd$0$i20$i$i$i$i$in$i$i770$lcssa8413;
           HEAP32[$0 >> 2] = $2032;
           $$0$i$i$i$i1$i$i774 = $$lcssa8415;
           $2037 = $2032;
           break;
          } else if ((label | 0) == 549) {
           label = 0;
           $2033 = $__nd$0$i20$i$i$i$i$in$i$i770$lcssa;
           HEAP32[$0 >> 2] = $2033;
           $$0$i$i$i$i1$i$i774 = $0;
           $2037 = $2033;
           break;
          }
         }
        } while (0);
        do if ((label | 0) == 539) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i758) {
          HEAP32[$0 >> 2] = $214;
          $$0$i$i$i$i1$i$i774 = $213;
          $2037 = $214;
          break;
         } else {
          HEAP32[$0 >> 2] = $2022;
          $$0$i$i$i$i1$i$i774 = $2022 + 4 | 0;
          $2037 = $2022;
          break;
         }
        } while (0);
        $2034 = HEAP32[$$0$i$i$i$i1$i$i774 >> 2] | 0;
        if (!$2034) {
         HEAP32[$1991 >> 2] = 0;
         HEAP32[$1991 + 4 >> 2] = 0;
         HEAP32[$1991 + 8 >> 2] = $2037;
         HEAP32[$$0$i$i$i$i1$i$i774 >> 2] = $1991;
         $2041 = HEAP32[HEAP32[$bindings >> 2] >> 2] | 0;
         if (!$2041) $2045 = $1991; else {
          HEAP32[$bindings >> 2] = $2041;
          $2045 = HEAP32[$$0$i$i$i$i1$i$i774 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$211 >> 2] | 0, $2045);
         HEAP32[$212 >> 2] = (HEAP32[$212 >> 2] | 0) + 1;
         $2050 = $1995;
        } else if (($2034 | 0) == ($1991 | 0)) $2050 = $6141; else {
         __ZdlPv($1991);
         $2050 = $6141;
        }
        $2051 = HEAP32[$2050 + 4 >> 2] | 0;
        if (!$2051) {
         $$0$i$i$i$i$i782 = $2050;
         while (1) {
          $2056 = HEAP32[$$0$i$i$i$i$i782 + 8 >> 2] | 0;
          if ((HEAP32[$2056 >> 2] | 0) == ($$0$i$i$i$i$i782 | 0)) {
           $$01$i$i$i$i$i785 = $2056;
           break;
          } else $$0$i$i$i$i$i782 = $2056;
         }
        } else {
         $$0$i$i$i$i$i$i780 = $2051;
         while (1) {
          $2053 = HEAP32[$$0$i$i$i$i$i$i780 >> 2] | 0;
          if (!$2053) {
           $$01$i$i$i$i$i785 = $$0$i$i$i$i$i$i780;
           break;
          } else $$0$i$i$i$i$i$i780 = $2053;
         }
        }
        if (($$01$i$i$i$i$i785 | 0) == ($1989 | 0)) break; else {
         $1995 = $$01$i$i$i$i$i785;
         $6141 = $$01$i$i$i$i$i785;
        }
       }
      }
      $2061 = HEAP32[$1725 >> 2] | 0;
      if ((HEAP32[$1723 >> 2] | 0) != ($2061 | 0)) {
       $2069 = $2061;
       $i41$04093 = 0;
       do {
        $2067 = HEAP32[(HEAP32[$args >> 2] | 0) + ($i41$04093 << 2) >> 2] | 0;
        $__k$val$i791 = HEAP32[$2069 + ($i41$04093 << 2) >> 2] | 0;
        $2070 = HEAP32[$213 >> 2] | 0;
        $2072 = $__k$val$i791;
        do if (!$2070) {
         HEAP32[$__parent$i790 >> 2] = $213;
         $$0$i7$i800 = $213;
         $2093 = $214;
         label = 573;
        } else {
         $__nd$0$i$i792 = $2070;
         while (1) {
          $2074 = HEAP32[$__nd$0$i$i792 + 16 >> 2] | 0;
          if ($2074 >>> 0 > $__k$val$i791 >>> 0) {
           $2076 = HEAP32[$__nd$0$i$i792 >> 2] | 0;
           if (!$2076) {
            $$lcssa8420 = $__nd$0$i$i792;
            $__nd$0$i$i792$lcssa8418 = $__nd$0$i$i792;
            label = 566;
            break;
           } else $__nd$0$be$in$i$i794 = $2076;
          } else {
           if ($2074 >>> 0 >= $__k$val$i791 >>> 0) {
            $__nd$0$i$i792$lcssa = $__nd$0$i$i792;
            label = 572;
            break;
           }
           $2080 = $__nd$0$i$i792 + 4 | 0;
           $2081 = HEAP32[$2080 >> 2] | 0;
           if (!$2081) {
            $$lcssa8419 = $2080;
            $__nd$0$i$i792$lcssa8417 = $__nd$0$i$i792;
            label = 570;
            break;
           } else $__nd$0$be$in$i$i794 = $2081;
          }
          $__nd$0$i$i792 = $__nd$0$be$in$i$i794;
         }
         if ((label | 0) == 566) {
          label = 0;
          HEAP32[$__parent$i790 >> 2] = $__nd$0$i$i792$lcssa8418;
          $$0$i7$i800 = $$lcssa8420;
          $2093 = $__nd$0$i$i792$lcssa8418;
          label = 573;
          break;
         } else if ((label | 0) == 570) {
          label = 0;
          HEAP32[$__parent$i790 >> 2] = $__nd$0$i$i792$lcssa8417;
          $$0$i7$i800 = $$lcssa8419;
          $2093 = $__nd$0$i$i792$lcssa8417;
          label = 573;
          break;
         } else if ((label | 0) == 572) {
          label = 0;
          HEAP32[$__parent$i790 >> 2] = $__nd$0$i$i792$lcssa;
          if (!$__nd$0$i$i792$lcssa) {
           $$0$i7$i800 = $__parent$i790;
           $2093 = $__nd$0$i$i792$lcssa;
           label = 573;
           break;
          } else {
           $__r$0$i804 = $__nd$0$i$i792$lcssa;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 573) {
         label = 0;
         __THREW__ = 0;
         $2086 = invoke_ii(67, 24) | 0;
         $2087 = __THREW__;
         __THREW__ = 0;
         if ($2087 & 1) {
          $$lcssa8421 = $2070;
          label = 578;
          break L1;
         }
         HEAP32[$2086 + 16 >> 2] = $2072;
         HEAP32[$2086 + 20 >> 2] = 0;
         HEAP32[$2086 >> 2] = 0;
         HEAP32[$2086 + 4 >> 2] = 0;
         HEAP32[$2086 + 8 >> 2] = $2093;
         HEAP32[$$0$i7$i800 >> 2] = $2086;
         $2095 = HEAP32[HEAP32[$bindings >> 2] >> 2] | 0;
         if (!$2095) $2099 = $2086; else {
          HEAP32[$bindings >> 2] = $2095;
          $2099 = HEAP32[$$0$i7$i800 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$211 >> 2] | 0, $2099);
         HEAP32[$212 >> 2] = (HEAP32[$212 >> 2] | 0) + 1;
         $__r$0$i804 = $2086;
        }
        HEAP32[$__r$0$i804 + 20 >> 2] = $2067;
        $i41$04093 = $i41$04093 + 1 | 0;
        $2069 = HEAP32[$1725 >> 2] | 0;
       } while ($i41$04093 >>> 0 < (HEAP32[$1723 >> 2] | 0) - $2069 >> 2 >>> 0);
      }
      __THREW__ = 0;
      invoke_viiiiii(10, $198 | 0, $1696 + 4 | 0, $1715 | 0, HEAP32[$1715 + 20 >> 2] | 0, HEAP32[$1715 + 24 >> 2] | 0, $bindings | 0);
      $2121 = __THREW__;
      __THREW__ = 0;
      if ($2121 & 1) {
       label = 579;
       break L1;
      }
      if (!(HEAP8[$1696 + 64 >> 0] | 0)) {
       $$0136 = 2;
       $$212 = HEAP32[$1911 >> 2] | 0;
      } else {
       $$idx$val$i808 = HEAP32[$$idx1$i >> 2] | 0;
       $2126 = $$idx$val$i808 + -40 | 0;
       L701 : do if (($2126 | 0) != ($args | 0)) {
        $2128 = HEAP32[$args >> 2] | 0;
        $2129 = HEAP32[$209 >> 2] | 0;
        $2131 = $2128;
        $2133 = $2129 - $2131 >> 2;
        $$idx$val$i$i$i810 = HEAP32[$2126 >> 2] | 0;
        $$idx1$i$i$i811 = $$idx$val$i808 + -32 | 0;
        $$idx1$val$i$i$i812 = HEAP32[$$idx1$i$i$i811 >> 2] | 0;
        $2135 = $$idx$val$i$i$i810;
        if ($2133 >>> 0 <= $$idx1$val$i$i$i812 - $2135 >> 2 >>> 0) {
         $this$idx3$i$i813 = $$idx$val$i808 + -36 | 0;
         $2141 = (HEAP32[$this$idx3$i$i813 >> 2] | 0) - $2135 >> 2;
         $2142 = $2133 >>> 0 > $2141 >>> 0;
         $$__last$i$i815 = $2142 ? $2128 + ($2141 << 2) | 0 : $2129;
         $2145 = $$__last$i$i815 - $2131 | 0;
         _memmove($$idx$val$i$i$i810 | 0, $2128 | 0, $2145 | 0) | 0;
         $2147 = $$idx$val$i$i$i810 + ($2145 >> 2 << 2) | 0;
         if (!$2142) {
          $2155 = HEAP32[$this$idx3$i$i813 >> 2] | 0;
          if (($2155 | 0) == ($2147 | 0)) break;
          HEAP32[$this$idx3$i$i813 >> 2] = $2155 + (~(($2155 + -4 - $2147 | 0) >>> 2) << 2);
          break;
         }
         if (($$__last$i$i815 | 0) == ($2129 | 0)) break;
         $$01$i6$i$i818 = $$__last$i$i815;
         $2150 = HEAP32[$this$idx3$i$i813 >> 2] | 0;
         while (1) {
          HEAP32[$2150 >> 2] = HEAP32[$$01$i6$i$i818 >> 2];
          $2150 = (HEAP32[$this$idx3$i$i813 >> 2] | 0) + 4 | 0;
          HEAP32[$this$idx3$i$i813 >> 2] = $2150;
          $$01$i6$i$i818 = $$01$i6$i$i818 + 4 | 0;
          if (($$01$i6$i$i818 | 0) == ($2129 | 0)) break L701;
         }
        }
        if (!$$idx$val$i$i$i810) $$idx1$val$i$i14$i$i827 = $$idx1$val$i$i$i812; else {
         $2162 = $$idx$val$i808 + -36 | 0;
         $2163 = HEAP32[$2162 >> 2] | 0;
         if (($2163 | 0) != ($$idx$val$i$i$i810 | 0)) HEAP32[$2162 >> 2] = $2163 + (~(($2163 + -4 - $2135 | 0) >>> 2) << 2);
         __ZdlPv($$idx$val$i$i$i810);
         HEAP32[$$idx1$i$i$i811 >> 2] = 0;
         HEAP32[$2162 >> 2] = 0;
         HEAP32[$2126 >> 2] = 0;
         $$idx1$val$i$i14$i$i827 = 0;
        }
        if ($2133 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(175, $2126 | 0);
         $2170 = __THREW__;
         __THREW__ = 0;
         if ($2170 & 1) {
          label = 579;
          break L1;
         }
         $$idx$val$i$i$i$i833 = HEAP32[$2126 >> 2] | 0;
         $$idx1$val$i$i$i$i832 = HEAP32[$$idx1$i$i$i811 >> 2] | 0;
        } else {
         $$idx$val$i$i$i$i833 = 0;
         $$idx1$val$i$i$i$i832 = $$idx1$val$i$i14$i$i827;
        }
        $2173 = $$idx1$val$i$i$i$i832 - $$idx$val$i$i$i$i833 | 0;
        do if ($2173 >> 2 >>> 0 < 536870911) {
         $2176 = $2173 >> 1;
         $2178 = $2176 >>> 0 < $2133 >>> 0 ? $2133 : $2176;
         if ($2178 >>> 0 <= 1073741823) {
          $$0$i9$i$i835 = $2178;
          break;
         }
         __THREW__ = 0;
         invoke_vi(175, $2126 | 0);
         $2180 = __THREW__;
         __THREW__ = 0;
         if ($2180 & 1) {
          label = 579;
          break L1;
         } else $$0$i9$i$i835 = $2178;
        } else $$0$i9$i$i835 = 1073741823; while (0);
        __THREW__ = 0;
        $2183 = invoke_ii(67, $$0$i9$i$i835 << 2 | 0) | 0;
        $2184 = __THREW__;
        __THREW__ = 0;
        if ($2184 & 1) {
         label = 579;
         break L1;
        }
        $2186 = $$idx$val$i808 + -36 | 0;
        HEAP32[$2186 >> 2] = $2183;
        HEAP32[$2126 >> 2] = $2183;
        HEAP32[$$idx1$i$i$i811 >> 2] = $2183 + ($$0$i9$i$i835 << 2);
        if (($2128 | 0) == ($2129 | 0)) break;
        $$01$i$i$i838 = $2128;
        $2190 = $2183;
        do {
         HEAP32[$2190 >> 2] = HEAP32[$$01$i$i$i838 >> 2];
         $2190 = (HEAP32[$2186 >> 2] | 0) + 4 | 0;
         HEAP32[$2186 >> 2] = $2190;
         $$01$i$i$i838 = $$01$i$i$i838 + 4 | 0;
        } while (($$01$i$i$i838 | 0) != ($2129 | 0));
       } while (0);
       $2195 = (HEAP32[$$idx1$i >> 2] | 0) + -104 | 0;
       HEAP32[$2195 >> 2] = HEAP32[$204 >> 2];
       HEAP32[$2195 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
       HEAP32[$2195 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
       HEAP32[$2195 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
       HEAP8[(HEAP32[$$idx1$i >> 2] | 0) + -108 >> 0] = 1;
       $$0136 = 16;
       $$212 = $$111$ph4097;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$213 >> 2] | 0);
      $$1137 = $$0136;
      $$313 = $$212;
     }
     $2199 = HEAP32[$args >> 2] | 0;
     $2201 = $2199;
     if ($2199) {
      $2202 = HEAP32[$209 >> 2] | 0;
      if (($2202 | 0) != ($2199 | 0)) HEAP32[$209 >> 2] = $2202 + (~(($2202 + -4 - $2201 | 0) >>> 2) << 2);
      __ZdlPv($2199);
     }
     if (($$1137 | 0) == 2) {
      $$010 = $$313;
      continue L1;
     } else $$111$ph$be = $$313;
     break;
    }
   case 617:
    {
     label = 0;
     $2218 = HEAP32[$$idx$val$i860$lcssa8248 + -140 >> 2] | 0;
     if ((HEAP32[$204 >> 2] | 0) != 1) {
      $$idx$val$i860$lcssa8248$lcssa = $$idx$val$i860$lcssa8248;
      $$lcssa8286$lcssa = $$lcssa8286;
      $$lcssa8797 = $2218;
      label = 623;
      break L531;
     }
     switch (HEAP32[$2218 + 52 >> 2] | 0) {
     case 15:
      {
       if (HEAP8[$205 >> 0] | 0) {
        $$idx$val$i860$lcssa8248$lcssa = $$idx$val$i860$lcssa8248;
        $$lcssa8286$lcssa = $$lcssa8286;
        $$lcssa8797 = $2218;
        label = 623;
        break L531;
       }
       HEAP32[$218 >> 2] = 1;
       HEAP8[$205 >> 0] = 0;
       HEAP8[$219 >> 0] = HEAP8[$$sroa$32499 >> 0] | 0;
       HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32499 + 1 >> 0] | 0;
       HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32499 + 2 >> 0] | 0;
       HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32499 + 3 >> 0] | 0;
       HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32499 + 4 >> 0] | 0;
       HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32499 + 5 >> 0] | 0;
       HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32499 + 6 >> 0] | 0;
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     case 16:
      {
       if (!(HEAP8[$205 >> 0] | 0)) {
        $$idx$val$i860$lcssa8248$lcssa = $$idx$val$i860$lcssa8248;
        $$lcssa8286$lcssa = $$lcssa8286;
        $$lcssa8797 = $2218;
        label = 623;
        break L531;
       }
       HEAP32[$218 >> 2] = 1;
       HEAP8[$205 >> 0] = 1;
       HEAP8[$219 >> 0] = HEAP8[$$sroa$32495 >> 0] | 0;
       HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32495 + 1 >> 0] | 0;
       HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32495 + 2 >> 0] | 0;
       HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32495 + 3 >> 0] | 0;
       HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32495 + 4 >> 0] | 0;
       HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32495 + 5 >> 0] | 0;
       HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32495 + 6 >> 0] | 0;
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     default:
      {
       $$idx$val$i860$lcssa8248$lcssa = $$idx$val$i860$lcssa8248;
       $$lcssa8286$lcssa = $$lcssa8286;
       $$lcssa8797 = $2218;
       label = 623;
       break L531;
      }
     }
     break;
    }
   case 636:
    {
     label = 0;
     if (($$lcssa8338 | 0) != (HEAP32[$204 >> 2] | 0)) {
      $$lcssa8306$lcssa = $$lcssa8306;
      $$lcssa8322$lcssa = $$lcssa8322;
      $$pre$phi5096$lcssa$lcssaZ2D = $$pre$phi5096$lcssaZ2D;
      label = 637;
      break L1;
     }
     switch ($$lcssa8338 | 0) {
     case 17:
      {
       $$lcssa8306$lcssa8309 = $$lcssa8306;
       $$pre$phi5096$lcssa$lcssa8342Z2D = $$pre$phi5096$lcssaZ2D;
       label = 770;
       break L1;
       break;
      }
     case 0:
      {
       $$lcssa8306$lcssa8310 = $$lcssa8306;
       $$pre$phi5096$lcssa$lcssa8343Z2D = $$pre$phi5096$lcssaZ2D;
       label = 781;
       break L1;
       break;
      }
     case 16:
      {
       if (($$lcssa8355 | 0) != 2) {
        $$lcssa8306$lcssa8318 = $$lcssa8306;
        $$pre$phi5096$lcssa$lcssa8351Z2D = $$pre$phi5096$lcssaZ2D;
        label = 709;
        break L1;
       }
       $2342 = HEAP32[$$idx$val$i860$lcssa8263 + -96 >> 2] | 0;
       $2343 = HEAP32[$205 >> 2] | 0;
       HEAP32[$elements45 >> 2] = 0;
       HEAP32[$220 >> 2] = 0;
       HEAP32[$221 >> 2] = 0;
       $$idx272$val = HEAP32[$2342 + 8 >> 2] | 0;
       $$idx275$val = HEAP32[$2342 + 12 >> 2] | 0;
       L1594 : do if (($$idx272$val | 0) != ($$idx275$val | 0)) {
        $$idx272$val25204082 = $$idx272$val;
        $2347 = 0;
        $2348 = 0;
        while (1) {
         $2345 = HEAP32[$$idx272$val25204082 >> 2] | 0;
         if (($2347 | 0) == ($2348 | 0)) {
          $this$idx2$val$i$i890 = HEAP32[$elements45 >> 2] | 0;
          $2352 = $this$idx2$val$i$i890;
          $2355 = ($2348 - $2352 >> 2) + 1 | 0;
          if ($2355 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(175, $elements45 | 0);
           $2357 = __THREW__;
           __THREW__ = 0;
           if ($2357 & 1) {
            label = 684;
            break L1;
           }
           $$idx$val$i$i$pre$i$i891 = HEAP32[$elements45 >> 2] | 0;
           $$idx1$val$i$i$i$i893 = HEAP32[$222 >> 2] | 0;
           $2362 = $$idx$val$i$i$pre$i$i891;
           $2390 = $$idx$val$i$i$pre$i$i891;
          } else {
           $$idx1$val$i$i$i$i893 = $2348;
           $2362 = $this$idx2$val$i$i890;
           $2390 = $2352;
          }
          $2361 = $2362;
          $2363 = $$idx1$val$i$i$i$i893 - $2361 | 0;
          if ($2363 >> 2 >>> 0 < 536870911) {
           $2369 = $2363 >> 1;
           $2371 = $2369 >>> 0 < $2355 >>> 0 ? $2355 : $2369;
           $2373 = (HEAP32[$220 >> 2] | 0) - $2361 | 0;
           $2374 = $2373 >> 2;
           if (!$2371) {
            $$0$i8$i$i899 = 0;
            $2381 = 0;
            $2382 = $2374;
            $2388 = $2373;
           } else {
            $$0$i7$i$i898 = $2371;
            $6142 = $2374;
            $6143 = $2373;
            label = 677;
           }
          } else {
           $2367 = (HEAP32[$220 >> 2] | 0) - $2361 | 0;
           $$0$i7$i$i898 = 1073741823;
           $6142 = $2367 >> 2;
           $6143 = $2367;
           label = 677;
          }
          if ((label | 0) == 677) {
           label = 0;
           __THREW__ = 0;
           $2377 = invoke_ii(67, $$0$i7$i$i898 << 2 | 0) | 0;
           $2378 = __THREW__;
           __THREW__ = 0;
           if ($2378 & 1) {
            label = 684;
            break L1;
           }
           $$0$i8$i$i899 = $$0$i7$i$i898;
           $2381 = $2377;
           $2382 = $6142;
           $2388 = $6143;
          }
          HEAP32[$2381 + ($2382 << 2) >> 2] = $2345;
          _memcpy($2381 | 0, $2362 | 0, $2388 | 0) | 0;
          HEAP32[$elements45 >> 2] = $2381;
          HEAP32[$220 >> 2] = $2381 + ($2382 + 1 << 2);
          HEAP32[$222 >> 2] = $2381 + ($$0$i8$i$i899 << 2);
          if ($2390) __ZdlPv($2390);
         } else {
          HEAP32[$2347 >> 2] = $2345;
          HEAP32[$220 >> 2] = (HEAP32[$220 >> 2] | 0) + 4;
         }
         $2392 = $$idx272$val25204082 + 4 | 0;
         if (($2392 | 0) == ($$idx275$val | 0)) break L1594;
         $$idx272$val25204082 = $2392;
         $2347 = HEAP32[$220 >> 2] | 0;
         $2348 = HEAP32[$222 >> 2] | 0;
        }
       } while (0);
       $$idx271$val = HEAP32[$2343 + 8 >> 2] | 0;
       $$idx274$val = HEAP32[$2343 + 12 >> 2] | 0;
       if (($$idx271$val | 0) != ($$idx274$val | 0)) {
        $$idx271$val25194086 = $$idx271$val;
        do {
         $2410 = HEAP32[$$idx271$val25194086 >> 2] | 0;
         $2411 = HEAP32[$220 >> 2] | 0;
         if (($2411 | 0) == (HEAP32[$222 >> 2] | 0)) {
          $this$idx2$val$i$i911 = HEAP32[$elements45 >> 2] | 0;
          $2417 = $this$idx2$val$i$i911;
          $2420 = ($2411 - $2417 >> 2) + 1 | 0;
          if ($2420 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(175, $elements45 | 0);
           $2422 = __THREW__;
           __THREW__ = 0;
           if ($2422 & 1) {
            label = 683;
            break L1;
           }
           $$idx$val$i$i$pre$i$i912 = HEAP32[$elements45 >> 2] | 0;
           $$idx1$val$i$i$i$i914 = HEAP32[$222 >> 2] | 0;
           $2427 = $$idx$val$i$i$pre$i$i912;
           $2455 = $$idx$val$i$i$pre$i$i912;
          } else {
           $$idx1$val$i$i$i$i914 = $2411;
           $2427 = $this$idx2$val$i$i911;
           $2455 = $2417;
          }
          $2426 = $2427;
          $2428 = $$idx1$val$i$i$i$i914 - $2426 | 0;
          if ($2428 >> 2 >>> 0 < 536870911) {
           $2434 = $2428 >> 1;
           $2436 = $2434 >>> 0 < $2420 >>> 0 ? $2420 : $2434;
           $2438 = (HEAP32[$220 >> 2] | 0) - $2426 | 0;
           $2439 = $2438 >> 2;
           if (!$2436) {
            $$0$i8$i$i920 = 0;
            $2446 = 0;
            $2447 = $2439;
            $2453 = $2438;
           } else {
            $$0$i7$i$i919 = $2436;
            $6144 = $2439;
            $6145 = $2438;
            label = 699;
           }
          } else {
           $2432 = (HEAP32[$220 >> 2] | 0) - $2426 | 0;
           $$0$i7$i$i919 = 1073741823;
           $6144 = $2432 >> 2;
           $6145 = $2432;
           label = 699;
          }
          if ((label | 0) == 699) {
           label = 0;
           __THREW__ = 0;
           $2442 = invoke_ii(67, $$0$i7$i$i919 << 2 | 0) | 0;
           $2443 = __THREW__;
           __THREW__ = 0;
           if ($2443 & 1) {
            label = 683;
            break L1;
           }
           $$0$i8$i$i920 = $$0$i7$i$i919;
           $2446 = $2442;
           $2447 = $6144;
           $2453 = $6145;
          }
          HEAP32[$2446 + ($2447 << 2) >> 2] = $2410;
          _memcpy($2446 | 0, $2427 | 0, $2453 | 0) | 0;
          HEAP32[$elements45 >> 2] = $2446;
          HEAP32[$220 >> 2] = $2446 + ($2447 + 1 << 2);
          HEAP32[$222 >> 2] = $2446 + ($$0$i8$i$i920 << 2);
          if ($2455) __ZdlPv($2455);
         } else {
          HEAP32[$2411 >> 2] = $2410;
          HEAP32[$220 >> 2] = (HEAP32[$220 >> 2] | 0) + 4;
         }
         $$idx271$val25194086 = $$idx271$val25194086 + 4 | 0;
        } while (($$idx271$val25194086 | 0) != ($$idx274$val | 0));
       }
       __THREW__ = 0;
       invoke_viii(11, $38 | 0, $this | 0, $elements45 | 0);
       $2459 = __THREW__;
       __THREW__ = 0;
       if ($2459 & 1) {
        label = 685;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$38 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$38 + 12 >> 2];
       $2461 = HEAP32[$elements45 >> 2] | 0;
       if (!$2461) {
        $$515 = $$111$ph4097;
        label = 2026;
        break L546;
       }
       $2464 = HEAP32[$220 >> 2] | 0;
       if (($2464 | 0) != ($2461 | 0)) HEAP32[$220 >> 2] = $2464 + (~(($2464 + -4 - $2461 | 0) >>> 2) << 2);
       __ZdlPv($2461);
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     case 1:
      {
       switch ($$lcssa8355 | 0) {
       case 15:
        {
         if (!(HEAP8[$$idx$val$i860$lcssa8263 + -96 >> 0] | 0)) $2498 = 0; else $2498 = (HEAP8[$205 >> 0] | 0) != 0;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = $2498 & 1;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32491 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32491 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32491 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32491 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32491 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32491 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32491 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 16:
        {
         if (!(HEAP8[$$idx$val$i860$lcssa8263 + -96 >> 0] | 0)) $2505 = (HEAP8[$205 >> 0] | 0) != 0; else $2505 = 1;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = $2505 & 1;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32487 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32487 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32487 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32487 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32487 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32487 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32487 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       default:
        {
         $$lcssa8306$lcssa8317 = $$lcssa8306;
         $$pre$phi5096$lcssa$lcssa8350Z2D = $$pre$phi5096$lcssaZ2D;
         label = 727;
         break L1;
        }
       }
       break;
      }
     case 2:
      {
       do switch ($$lcssa8355 | 0) {
       case 2:
        {
         __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($45, $this, $$lcssa8306 + 4 | 0, +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] + +HEAPF64[$223 >> 3]);
         HEAP32[$204 >> 2] = HEAP32[$45 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$45 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$45 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$45 + 12 >> 2];
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 3:
        {
         __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($46, $this, $$lcssa8306 + 4 | 0, +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] - +HEAPF64[$223 >> 3]);
         HEAP32[$204 >> 2] = HEAP32[$46 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$46 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$46 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$46 + 12 >> 2];
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 0:
        {
         __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($47, $this, $$lcssa8306 + 4 | 0, +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] * +HEAPF64[$223 >> 3]);
         HEAP32[$204 >> 2] = HEAP32[$47 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$47 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$47 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$47 + 12 >> 2];
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 1:
        {
         $2543 = +HEAPF64[$223 >> 3];
         if ($2543 == 0.0) {
          $$lcssa8306$lcssa8316 = $$lcssa8306;
          label = 743;
          break L1;
         }
         __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($49, $this, $$lcssa8306 + 4 | 0, +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] / $2543);
         HEAP32[$204 >> 2] = HEAP32[$49 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$49 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$49 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$49 + 12 >> 2];
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 4:
        {
         $2566 = +(~~+HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] << ~~+HEAPF64[$223 >> 3] | 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $2566;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 5:
        {
         $2573 = +(~~+HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] >> ~~+HEAPF64[$223 >> 3] | 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $2573;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 12:
        {
         $2580 = +(~~+HEAPF64[$223 >> 3] & ~~+HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] | 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $2580;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 13:
        {
         $2587 = +(~~+HEAPF64[$223 >> 3] ^ ~~+HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] | 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $2587;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 14:
        {
         $2594 = +(~~+HEAPF64[$223 >> 3] | ~~+HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] | 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $2594;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 9:
        {
         $2599 = +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] <= +HEAPF64[$223 >> 3] & 1;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = $2599;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32468 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32468 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32468 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32468 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32468 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32468 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32468 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 7:
        {
         $2604 = +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] >= +HEAPF64[$223 >> 3] & 1;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = $2604;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32464 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32464 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32464 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32464 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32464 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32464 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32464 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 8:
        {
         $2609 = +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] < +HEAPF64[$223 >> 3] & 1;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = $2609;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32460 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32460 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32460 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32460 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32460 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32460 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32460 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 6:
        {
         $2614 = +HEAPF64[$$idx$val$i860$lcssa8263 + -96 >> 3] > +HEAPF64[$223 >> 3] & 1;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = $2614;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32456 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32456 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32456 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32456 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32456 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32456 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32456 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       default:
        {
         $$lcssa8306$lcssa8315 = $$lcssa8306;
         $$pre$phi5096$lcssa$lcssa8348Z2D = $$pre$phi5096$lcssaZ2D;
         label = 759;
         break L1;
        }
       } while (0);
       break;
      }
     case 18:
      {
       if (($$lcssa8355 | 0) != 2) {
        $$lcssa8306$lcssa8314 = $$lcssa8306;
        $$pre$phi5096$lcssa$lcssa8347Z2D = $$pre$phi5096$lcssaZ2D;
        label = 793;
        break L1;
       }
       $2705 = HEAP32[$$idx$val$i860$lcssa8263 + -96 >> 2] | 0;
       $2706 = HEAP32[$205 >> 2] | 0;
       $2707 = __Znwj(16) | 0;
       HEAP32[$2707 >> 2] = 3624;
       HEAP32[$2707 + 8 >> 2] = $2705;
       HEAP32[$2707 + 12 >> 2] = $2706;
       $2710 = $2707;
       $2711 = HEAP32[$225 >> 2] | 0;
       $2712 = HEAP32[$226 >> 2] | 0;
       if ($2711 >>> 0 < $2712 >>> 0) {
        HEAP32[$2711 >> 2] = $2710;
        $2715 = (HEAP32[$225 >> 2] | 0) + 4 | 0;
        HEAP32[$225 >> 2] = $2715;
        $$idx1$val$i$i$i987 = $2715;
       } else {
        $this$idx2$val$i$i$i$i$i973 = HEAP32[$224 >> 2] | 0;
        $2717 = $this$idx2$val$i$i$i$i$i973;
        $2720 = ($2711 - $2717 >> 2) + 1 | 0;
        if ($2720 >>> 0 > 1073741823) {
         __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($224);
         $$idx$val$i$i$pre$i$i$i$i$i974 = HEAP32[$224 >> 2] | 0;
         $$idx1$val$i$i$i$i$i$i$i976 = HEAP32[$226 >> 2] | 0;
         $2725 = $$idx$val$i$i$pre$i$i$i$i$i974;
         $2751 = $$idx$val$i$i$pre$i$i$i$i$i974;
        } else {
         $$idx1$val$i$i$i$i$i$i$i976 = $2712;
         $2725 = $this$idx2$val$i$i$i$i$i973;
         $2751 = $2717;
        }
        $2724 = $2725;
        $2726 = $$idx1$val$i$i$i$i$i$i$i976 - $2724 | 0;
        if ($2726 >> 2 >>> 0 < 536870911) {
         $2732 = $2726 >> 1;
         $2734 = $2732 >>> 0 < $2720 >>> 0 ? $2720 : $2732;
         $2736 = (HEAP32[$225 >> 2] | 0) - $2724 | 0;
         $2737 = $2736 >> 2;
         if (!$2734) {
          $$0$i8$i$i$i$i$i982 = 0;
          $2742 = 0;
          $2743 = $2737;
          $2749 = $2736;
         } else {
          $$0$i7$i$i$i$i$i981 = $2734;
          $6146 = $2737;
          $6147 = $2736;
          label = 811;
         }
        } else {
         $2730 = (HEAP32[$225 >> 2] | 0) - $2724 | 0;
         $$0$i7$i$i$i$i$i981 = 1073741823;
         $6146 = $2730 >> 2;
         $6147 = $2730;
         label = 811;
        }
        if ((label | 0) == 811) {
         label = 0;
         $$0$i8$i$i$i$i$i982 = $$0$i7$i$i$i$i$i981;
         $2742 = __Znwj($$0$i7$i$i$i$i$i981 << 2) | 0;
         $2743 = $6146;
         $2749 = $6147;
        }
        HEAP32[$2742 + ($2743 << 2) >> 2] = $2710;
        $2746 = $2742 + ($2743 + 1 << 2) | 0;
        _memcpy($2742 | 0, $2725 | 0, $2749 | 0) | 0;
        HEAP32[$224 >> 2] = $2742;
        HEAP32[$225 >> 2] = $2746;
        HEAP32[$226 >> 2] = $2742 + ($$0$i8$i$i$i$i$i982 << 2);
        if (!$2751) $$idx1$val$i$i$i987 = $2746; else {
         __ZdlPv($2751);
         $$idx1$val$i$i$i987 = HEAP32[$225 >> 2] | 0;
        }
       }
       HEAP8[$2707 + 4 >> 0] = HEAP8[$227 >> 0] | 0;
       $2758 = $$idx1$val$i$i$i987 - (HEAP32[$224 >> 2] | 0) >> 2;
       HEAP32[$228 >> 2] = $2758;
       if ($2758 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) if (+($2758 >>> 0) > +HEAPF64[$229 >> 3] * +((HEAP32[$230 >> 2] | 0) >>> 0)) {
        __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $2707);
        __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($198, $this);
        if (HEAP32[$218 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$205 >> 2] | 0);
        $2772 = (HEAP8[$227 >> 0] | 0) + 1 << 24 >> 24;
        HEAP8[$227 >> 0] = $2772;
        $$idx6$val11$i$i$i991 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
        $$idx7$val12$i$i$i992 = HEAP32[$225 >> 2] | 0;
        L1688 : do if (($$idx7$val12$i$i$i992 | 0) == ($$idx6$val11$i$i$i991 | 0)) $$lcssa$i$i$i1011 = 0; else {
         $$idx5$val19$i$i$i994 = $$idx7$val12$i$i$i992;
         $$idx6$val14$i$i$i995 = $$idx6$val11$i$i$i991;
         $2779 = $2772;
         $i$013$i$i$i996 = 0;
         while (1) {
          $2775 = HEAP32[$$idx6$val14$i$i$i995 + ($i$013$i$i$i996 << 2) >> 2] | 0;
          if ((HEAP8[$2775 + 4 >> 0] | 0) == $2779 << 24 >> 24) {
           $$idx6$val$i$i$i1007 = $$idx6$val14$i$i$i995;
           $$idx7$val$i$i$i1006 = $$idx5$val19$i$i$i994;
           $i$1$i$i$i1008 = $i$013$i$i$i996;
          } else {
           if (!$2775) {
            $$idx4$val$i$i$i1001 = $$idx6$val14$i$i$i995;
            $$idx5$val$i$i$i1000 = $$idx5$val19$i$i$i994;
           } else {
            FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2775 >> 2] | 0) + 4 >> 2] & 255]($2775);
            $$idx4$val$i$i$i1001 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
            $$idx5$val$i$i$i1000 = HEAP32[$225 >> 2] | 0;
           }
           $2788 = ($$idx5$val$i$i$i1000 - $$idx4$val$i$i$i1001 >> 2) + -1 | 0;
           if (($i$013$i$i$i996 | 0) == ($2788 | 0)) {
            $$idx6$val$pre$i$i$i1004 = $$idx4$val$i$i$i1001;
            $2793 = $$idx5$val$i$i$i1000;
           } else {
            HEAP32[$$idx4$val$i$i$i1001 + ($i$013$i$i$i996 << 2) >> 2] = HEAP32[$$idx4$val$i$i$i1001 + ($2788 << 2) >> 2];
            $$idx6$val$pre$i$i$i1004 = HEAP32[$$idx6$i$i$i990 >> 2] | 0;
            $2793 = HEAP32[$225 >> 2] | 0;
           }
           $scevgep4$i$i$i$i$i$i1005 = $2793 + -4 | 0;
           HEAP32[$225 >> 2] = $scevgep4$i$i$i$i$i$i1005;
           $$idx6$val$i$i$i1007 = $$idx6$val$pre$i$i$i1004;
           $$idx7$val$i$i$i1006 = $scevgep4$i$i$i$i$i$i1005;
           $i$1$i$i$i1008 = $i$013$i$i$i996 + -1 | 0;
          }
          $2795 = $i$1$i$i$i1008 + 1 | 0;
          $2799 = $$idx7$val$i$i$i1006 - $$idx6$val$i$i$i1007 >> 2;
          if ($2795 >>> 0 >= $2799 >>> 0) {
           $$lcssa$i$i$i1011 = $2799;
           break L1688;
          }
          $$idx5$val19$i$i$i994 = $$idx7$val$i$i$i1006;
          $$idx6$val14$i$i$i995 = $$idx6$val$i$i$i1007;
          $2779 = HEAP8[$227 >> 0] | 0;
          $i$013$i$i$i996 = $2795;
         }
        } while (0);
        HEAP32[$228 >> 2] = $$lcssa$i$i$i1011;
        HEAP32[$230 >> 2] = $$lcssa$i$i$i1011;
       }
       HEAP32[$218 >> 2] = 18;
       HEAP32[$205 >> 2] = $2707;
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     case 19:
      {
       $2802 = HEAP32[$$idx$val$i860$lcssa8263 + -96 >> 2] | 0;
       $2803 = $2802 + 8 | 0;
       $2804 = HEAP32[$205 >> 2] | 0;
       $2805 = $2804 + 8 | 0;
       switch ($$lcssa8355 | 0) {
       case 2:
        {
         HEAP32[$63 >> 2] = 0;
         HEAP32[$63 + 4 >> 2] = 0;
         HEAP32[$63 + 8 >> 2] = 0;
         $2806 = HEAP8[$2803 >> 0] | 0;
         $2808 = ($2806 & 1) == 0;
         $2813 = $2808 ? ($2806 & 255) >>> 1 : HEAP32[$2802 + 12 >> 2] | 0;
         $2814 = HEAP8[$2805 >> 0] | 0;
         $2821 = ($2814 & 1) == 0 ? ($2814 & 255) >>> 1 : HEAP32[$2804 + 12 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(13, $63 | 0, ($2808 ? $2803 + 1 | 0 : HEAP32[$2802 + 16 >> 2] | 0) | 0, $2813 | 0, $2821 + $2813 | 0);
         $2827 = __THREW__;
         __THREW__ = 0;
         if ($2827 & 1) {
          label = 832;
          break L1;
         }
         __THREW__ = 0;
         invoke_iiii(35, $63 | 0, ((HEAP8[$2805 >> 0] & 1) == 0 ? $2805 + 1 | 0 : HEAP32[$2804 + 16 >> 2] | 0) | 0, $2821 | 0) | 0;
         $2836 = __THREW__;
         __THREW__ = 0;
         if ($2836 & 1) {
          label = 832;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $62 | 0, $this | 0, $63 | 0);
         $2840 = __THREW__;
         __THREW__ = 0;
         if ($2840 & 1) {
          label = 835;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$62 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$62 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$62 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$62 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 9:
        {
         $2844 = HEAP8[$2805 >> 0] | 0;
         $2846 = ($2844 & 1) == 0;
         $2851 = $2846 ? ($2844 & 255) >>> 1 : HEAP32[$2804 + 12 >> 2] | 0;
         $2852 = HEAP8[$2803 >> 0] | 0;
         $2854 = ($2852 & 1) == 0;
         $2859 = $2854 ? ($2852 & 255) >>> 1 : HEAP32[$2802 + 12 >> 2] | 0;
         $2870 = _memcmp($2846 ? $2805 + 1 | 0 : HEAP32[$2804 + 16 >> 2] | 0, $2854 ? $2803 + 1 | 0 : HEAP32[$2802 + 16 >> 2] | 0, $2859 >>> 0 < $2851 >>> 0 ? $2859 : $2851) | 0;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = (($2870 | 0) == 0 ? ($2851 >>> 0 < $2859 >>> 0 ? -2147483648 : 0) : $2870) >>> 31 & 255 ^ 1;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32448 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32448 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32448 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32448 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32448 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32448 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32448 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 7:
        {
         $2875 = HEAP8[$2803 >> 0] | 0;
         $2877 = ($2875 & 1) == 0;
         $2882 = $2877 ? ($2875 & 255) >>> 1 : HEAP32[$2802 + 12 >> 2] | 0;
         $2883 = HEAP8[$2805 >> 0] | 0;
         $2885 = ($2883 & 1) == 0;
         $2890 = $2885 ? ($2883 & 255) >>> 1 : HEAP32[$2804 + 12 >> 2] | 0;
         $2901 = _memcmp($2877 ? $2803 + 1 | 0 : HEAP32[$2802 + 16 >> 2] | 0, $2885 ? $2805 + 1 | 0 : HEAP32[$2804 + 16 >> 2] | 0, $2890 >>> 0 < $2882 >>> 0 ? $2890 : $2882) | 0;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = (($2901 | 0) == 0 ? ($2882 >>> 0 < $2890 >>> 0 ? -2147483648 : 0) : $2901) >>> 31 & 255 ^ 1;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32444 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32444 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32444 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32444 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32444 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32444 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32444 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 8:
        {
         $2906 = HEAP8[$2803 >> 0] | 0;
         $2908 = ($2906 & 1) == 0;
         $2913 = $2908 ? ($2906 & 255) >>> 1 : HEAP32[$2802 + 12 >> 2] | 0;
         $2914 = HEAP8[$2805 >> 0] | 0;
         $2916 = ($2914 & 1) == 0;
         $2921 = $2916 ? ($2914 & 255) >>> 1 : HEAP32[$2804 + 12 >> 2] | 0;
         $2932 = _memcmp($2908 ? $2803 + 1 | 0 : HEAP32[$2802 + 16 >> 2] | 0, $2916 ? $2805 + 1 | 0 : HEAP32[$2804 + 16 >> 2] | 0, $2921 >>> 0 < $2913 >>> 0 ? $2921 : $2913) | 0;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = (($2932 | 0) == 0 ? ($2913 >>> 0 < $2921 >>> 0 ? -2147483648 : 0) : $2932) >>> 31;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32440 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32440 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32440 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32440 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32440 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32440 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32440 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       case 6:
        {
         $2937 = HEAP8[$2805 >> 0] | 0;
         $2939 = ($2937 & 1) == 0;
         $2944 = $2939 ? ($2937 & 255) >>> 1 : HEAP32[$2804 + 12 >> 2] | 0;
         $2945 = HEAP8[$2803 >> 0] | 0;
         $2947 = ($2945 & 1) == 0;
         $2952 = $2947 ? ($2945 & 255) >>> 1 : HEAP32[$2802 + 12 >> 2] | 0;
         $2963 = _memcmp($2939 ? $2805 + 1 | 0 : HEAP32[$2804 + 16 >> 2] | 0, $2947 ? $2803 + 1 | 0 : HEAP32[$2802 + 16 >> 2] | 0, $2952 >>> 0 < $2944 >>> 0 ? $2952 : $2944) | 0;
         HEAP32[$218 >> 2] = 1;
         HEAP8[$205 >> 0] = (($2963 | 0) == 0 ? ($2944 >>> 0 < $2952 >>> 0 ? -2147483648 : 0) : $2963) >>> 31;
         HEAP8[$219 >> 0] = HEAP8[$$sroa$32436 >> 0] | 0;
         HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32436 + 1 >> 0] | 0;
         HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32436 + 2 >> 0] | 0;
         HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32436 + 3 >> 0] | 0;
         HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32436 + 4 >> 0] | 0;
         HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32436 + 5 >> 0] | 0;
         HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32436 + 6 >> 0] | 0;
         $$515 = $$111$ph4097;
         label = 2026;
         break L546;
         break;
        }
       default:
        {
         $$lcssa8306$lcssa8311 = $$lcssa8306;
         $$pre$phi5096$lcssa$lcssa8344Z2D = $$pre$phi5096$lcssaZ2D;
         label = 840;
         break L1;
        }
       }
       break;
      }
     default:
      {
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
      }
     }
     break;
    }
   case 851:
    {
     label = 0;
     $2991 = HEAP32[$$idx$val$i860$lcssa8249 + -140 >> 2] | 0;
     $2993 = HEAP32[$$idx$val$i860$lcssa8249 + -96 >> 2] | 0;
     $2995 = HEAP32[$$idx$val$i860$lcssa8249 + -80 >> 2] | 0;
     if ((HEAP32[$204 >> 2] | 0) != 1) {
      $$lcssa8792 = $2991;
      label = 852;
      break L1;
     }
     do if (!(HEAP8[$205 >> 0] | 0)) {
      $$idx268$pre$phiZZ2D = $2995 + 8 | 0;
      $$pre$phi5102Z2D = $$idx$val$i860$lcssa8249 + -56 | 0;
     } else {
      $3016 = $$idx$val$i860$lcssa8249 + -40 | 0;
      $3017 = $$idx$val$i860$lcssa8249 + -56 | 0;
      $$idx311 = $2995 + 8 | 0;
      $3019 = (HEAP32[$$idx311 >> 2] | 0) + (HEAP32[$3017 >> 2] << 2) | 0;
      $3020 = $$idx$val$i860$lcssa8249 + -36 | 0;
      $3021 = HEAP32[$3020 >> 2] | 0;
      $3022 = $$idx$val$i860$lcssa8249 + -32 | 0;
      if (($3021 | 0) != (HEAP32[$3022 >> 2] | 0)) {
       HEAP32[$3021 >> 2] = HEAP32[$3019 >> 2];
       HEAP32[$3020 >> 2] = (HEAP32[$3020 >> 2] | 0) + 4;
       $$idx268$pre$phiZZ2D = $$idx311;
       $$pre$phi5102Z2D = $3017;
       break;
      }
      $this$idx2$val$i$i1028 = HEAP32[$3016 >> 2] | 0;
      $3029 = $this$idx2$val$i$i1028;
      $3032 = ($3021 - $3029 >> 2) + 1 | 0;
      if ($3032 >>> 0 > 1073741823) {
       __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($3016);
       $$idx$val$i$i$pre$i$i1029 = HEAP32[$3016 >> 2] | 0;
       $$idx1$val$i$i$i$i1031 = HEAP32[$3022 >> 2] | 0;
       $3037 = $$idx$val$i$i$pre$i$i1029;
       $3064 = $$idx$val$i$i$pre$i$i1029;
      } else {
       $$idx1$val$i$i$i$i1031 = $3021;
       $3037 = $this$idx2$val$i$i1028;
       $3064 = $3029;
      }
      $3036 = $3037;
      $3038 = $$idx1$val$i$i$i$i1031 - $3036 | 0;
      if ($3038 >> 2 >>> 0 < 536870911) {
       $3044 = $3038 >> 1;
       $3046 = $3044 >>> 0 < $3032 >>> 0 ? $3032 : $3044;
       $3048 = (HEAP32[$3020 >> 2] | 0) - $3036 | 0;
       $3049 = $3048 >> 2;
       if (!$3046) {
        $$0$i8$i$i1037 = 0;
        $3054 = 0;
        $3055 = $3049;
        $3062 = $3048;
       } else {
        $$0$i7$i$i1036 = $3046;
        $6148 = $3049;
        $6149 = $3048;
        label = 869;
       }
      } else {
       $3042 = (HEAP32[$3020 >> 2] | 0) - $3036 | 0;
       $$0$i7$i$i1036 = 1073741823;
       $6148 = $3042 >> 2;
       $6149 = $3042;
       label = 869;
      }
      if ((label | 0) == 869) {
       label = 0;
       $$0$i8$i$i1037 = $$0$i7$i$i1036;
       $3054 = __Znwj($$0$i7$i$i1036 << 2) | 0;
       $3055 = $6148;
       $3062 = $6149;
      }
      HEAP32[$3054 + ($3055 << 2) >> 2] = HEAP32[$3019 >> 2];
      _memcpy($3054 | 0, $3037 | 0, $3062 | 0) | 0;
      HEAP32[$3016 >> 2] = $3054;
      HEAP32[$3020 >> 2] = $3054 + ($3055 + 1 << 2);
      HEAP32[$3022 >> 2] = $3054 + ($$0$i8$i$i1037 << 2);
      if (!$3064) {
       $$idx268$pre$phiZZ2D = $$idx311;
       $$pre$phi5102Z2D = $3017;
      } else {
       __ZdlPv($3064);
       $$idx268$pre$phiZZ2D = $$idx311;
       $$pre$phi5102Z2D = $3017;
      }
     } while (0);
     $3067 = (HEAP32[$$pre$phi5102Z2D >> 2] | 0) + 1 | 0;
     HEAP32[$$pre$phi5102Z2D >> 2] = $3067;
     $$idx268$val = HEAP32[$$idx268$pre$phiZZ2D >> 2] | 0;
     if (($3067 | 0) != ((HEAP32[$2995 + 12 >> 2] | 0) - $$idx268$val >> 2 | 0)) {
      $$idx268$val$lcssa = $$idx268$val;
      $$lcssa8793 = $2991;
      $$lcssa8795 = $2993;
      $$lcssa8796 = $3067;
      label = 874;
      break L531;
     }
     __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($69, $this, $$idx$val$i860$lcssa8249 + -40 | 0);
     HEAP32[$204 >> 2] = HEAP32[$69 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$69 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$69 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$69 + 12 >> 2];
     $$515 = $$111$ph4097;
     label = 2026;
     break;
    }
   case 923:
    {
     label = 0;
     $3199 = HEAP32[$$idx$val$i860$lcssa8250 + -140 >> 2] | 0;
     $3200 = $$idx$val$i860$lcssa8250 + -104 | 0;
     $3201 = $$idx$val$i860$lcssa8250 + -56 | 0;
     $3202 = HEAP32[$3201 >> 2] | 0;
     $3203 = $$idx$val$i860$lcssa8250 + -40 | 0;
     $$idx266$val = HEAP32[$3203 >> 2] | 0;
     $$idx267 = $$idx$val$i860$lcssa8250 + -36 | 0;
     $$idx267$val = HEAP32[$$idx267 >> 2] | 0;
     if (($3202 | 0) != ($$idx267$val - $$idx266$val >> 2 | 0)) {
      HEAP32[$3201 >> 2] = $3202 + 1;
      $4732 = HEAP32[$$idx266$val + ($3202 << 2) >> 2] | 0;
      if (!(HEAP8[$4732 + 5 >> 0] | 0)) {
       $$lcssa8504 = $3199;
       $$lcssa8580 = $4732;
       label = 1497;
       break L531;
      } else {
       $$515 = $$111$ph4097;
       label = 2026;
       break;
      }
     }
     $3211 = $3199 + 4 | 0;
     $3213 = HEAP32[(HEAP32[$$idx$val$i860$lcssa8250 + -96 >> 2] | 0) + 44 >> 2] | 0;
     HEAP32[$args68 >> 2] = 0;
     HEAP32[$231 >> 2] = 0;
     HEAP32[$232 >> 2] = 0;
     L771 : do if (($$idx266$val | 0) != ($$idx267$val | 0)) {
      $$idx270$val25184067 = $$idx266$val;
      $3218 = 0;
      $3219 = 0;
      while (1) {
       $3216 = (HEAP32[$$idx270$val25184067 >> 2] | 0) + 8 | 0;
       if (($3218 | 0) == ($3219 | 0)) {
        $this$idx2$val$i$i1096 = HEAP32[$args68 >> 2] | 0;
        $3222 = $this$idx2$val$i$i1096;
        $3225 = ($3219 - $3222 >> 4) + 1 | 0;
        if ($3225 >>> 0 > 268435455) {
         __THREW__ = 0;
         invoke_vi(175, $args68 | 0);
         $3227 = __THREW__;
         __THREW__ = 0;
         if ($3227 & 1) {
          label = 939;
          break L1;
         }
         $$idx$val$i$i$pre$i$i1097 = HEAP32[$args68 >> 2] | 0;
         $$idx1$val$i$i$i$i1099 = HEAP32[$319 >> 2] | 0;
         $3232 = $$idx$val$i$i$pre$i$i1097;
         $3260 = $$idx$val$i$i$pre$i$i1097;
        } else {
         $$idx1$val$i$i$i$i1099 = $3219;
         $3232 = $this$idx2$val$i$i1096;
         $3260 = $3222;
        }
        $3231 = $3232;
        $3233 = $$idx1$val$i$i$i$i1099 - $3231 | 0;
        if ($3233 >> 4 >>> 0 < 134217727) {
         $3239 = $3233 >> 3;
         $3241 = $3239 >>> 0 < $3225 >>> 0 ? $3225 : $3239;
         $3243 = (HEAP32[$231 >> 2] | 0) - $3231 | 0;
         $3244 = $3243 >> 4;
         if (!$3241) {
          $$0$i8$i$i1103 = 0;
          $3251 = 0;
          $3252 = $3244;
          $3258 = $3243;
         } else {
          $$0$i7$i$i1102 = $3241;
          $6151 = $3244;
          $6152 = $3243;
          label = 933;
         }
        } else {
         $3237 = (HEAP32[$231 >> 2] | 0) - $3231 | 0;
         $$0$i7$i$i1102 = 268435455;
         $6151 = $3237 >> 4;
         $6152 = $3237;
         label = 933;
        }
        if ((label | 0) == 933) {
         label = 0;
         __THREW__ = 0;
         $3247 = invoke_ii(67, $$0$i7$i$i1102 << 4 | 0) | 0;
         $3248 = __THREW__;
         __THREW__ = 0;
         if ($3248 & 1) {
          label = 939;
          break L1;
         }
         $$0$i8$i$i1103 = $$0$i7$i$i1102;
         $3251 = $3247;
         $3252 = $6151;
         $3258 = $6152;
        }
        $3250 = $3251 + ($3252 << 4) | 0;
        HEAP32[$3250 >> 2] = HEAP32[$3216 >> 2];
        HEAP32[$3250 + 4 >> 2] = HEAP32[$3216 + 4 >> 2];
        HEAP32[$3250 + 8 >> 2] = HEAP32[$3216 + 8 >> 2];
        HEAP32[$3250 + 12 >> 2] = HEAP32[$3216 + 12 >> 2];
        _memcpy($3251 | 0, $3232 | 0, $3258 | 0) | 0;
        HEAP32[$args68 >> 2] = $3251;
        HEAP32[$231 >> 2] = $3251 + ($3252 + 1 << 4);
        HEAP32[$319 >> 2] = $3251 + ($$0$i8$i$i1103 << 4);
        if ($3260) __ZdlPv($3260);
       } else {
        HEAP32[$3218 >> 2] = HEAP32[$3216 >> 2];
        HEAP32[$3218 + 4 >> 2] = HEAP32[$3216 + 4 >> 2];
        HEAP32[$3218 + 8 >> 2] = HEAP32[$3216 + 8 >> 2];
        HEAP32[$3218 + 12 >> 2] = HEAP32[$3216 + 12 >> 2];
        HEAP32[$231 >> 2] = $3218 + 16;
       }
       $3262 = $$idx270$val25184067 + 4 | 0;
       if (($3262 | 0) == ($$idx267$val | 0)) break L771;
       $$idx270$val25184067 = $3262;
       $3218 = HEAP32[$231 >> 2] | 0;
       $3219 = HEAP32[$319 >> 2] | 0;
      }
     } while (0);
     L792 : do switch ($3213 | 0) {
     case 0:
      {
       HEAP32[$70 >> 2] = 0;
       HEAP32[$233 >> 2] = 0;
       HEAP32[$234 >> 2] = 0;
       __THREW__ = 0;
       $3270 = invoke_ii(67, 8) | 0;
       $3271 = __THREW__;
       __THREW__ = 0;
       if ($3271 & 1) {
        label = 946;
        break L1;
       }
       HEAP32[$70 >> 2] = $3270;
       HEAP32[$235 >> 2] = $3270 + 8;
       HEAP32[$3270 >> 2] = 2;
       HEAP32[$3270 + 4 >> 2] = 17;
       HEAP32[$233 >> 2] = $3270 + 8;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 0, $args68 | 0, $70 | 0);
       $3276 = __THREW__;
       __THREW__ = 0;
       if ($3276 & 1) {
        $$lcssa8773 = $3270;
        label = 961;
        break L1;
       }
       HEAP32[$233 >> 2] = $3270;
       __ZdlPv($3270);
       $args68$idx360$val = HEAP32[$args68 >> 2] | 0;
       $3282 = ~~+HEAPF64[$args68$idx360$val + 8 >> 3];
       if (($3282 | 0) < 0) {
        $$lcssa8651 = $3211;
        $$lcssa8779 = $3282;
        label = 948;
        break L1;
       }
       $3327 = HEAP32[$args68$idx360$val + 24 >> 2] | 0;
       HEAP32[$elements75 >> 2] = 0;
       HEAP32[$236 >> 2] = 0;
       HEAP32[$237 >> 2] = 0;
       $3328 = $3327 + 32 | 0;
       $3330 = $3327 + 28 | 0;
       if (((HEAP32[$3328 >> 2] | 0) - (HEAP32[$3330 >> 2] | 0) | 0) != 4) {
        $$lcssa8652 = $3211;
        $$lcssa8784 = $3328;
        $$lcssa8788 = $3330;
        label = 968;
        break L1;
       }
       if ($3282) {
        if ($3282 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(175, $elements75 | 0);
         $3390 = __THREW__;
         __THREW__ = 0;
         if ($3390 & 1) {
          label = 983;
          break L1;
         }
         $$idx1$val$i$i$i$i1155 = HEAP32[$238 >> 2] | 0;
         $this$idx$val$i$i = HEAP32[$elements75 >> 2] | 0;
        } else {
         $$idx1$val$i$i$i$i1155 = 0;
         $this$idx$val$i$i = 0;
        }
        $3393 = $this$idx$val$i$i;
        $3394 = $$idx1$val$i$i$i$i1155 - $3393 | 0;
        if ($3394 >> 2 >>> 0 < 536870911) {
         $3400 = $3394 >> 1;
         $3402 = $3400 >>> 0 < $3282 >>> 0 ? $3282 : $3400;
         $3405 = (HEAP32[$236 >> 2] | 0) - $3393 >> 2;
         if (!$3402) {
          $$0$i611$i$i = 0;
          $3412 = 0;
          $3413 = $3405;
         } else {
          $$0$i610$i$i = $3402;
          $6153 = $3405;
          label = 997;
         }
        } else {
         $$0$i610$i$i = 1073741823;
         $6153 = (HEAP32[$236 >> 2] | 0) - $3393 >> 2;
         label = 997;
        }
        if ((label | 0) == 997) {
         label = 0;
         __THREW__ = 0;
         $3408 = invoke_ii(67, $$0$i610$i$i << 2 | 0) | 0;
         $3409 = __THREW__;
         __THREW__ = 0;
         if ($3409 & 1) {
          label = 983;
          break L1;
         }
         $$0$i611$i$i = $$0$i610$i$i;
         $3412 = $3408;
         $3413 = $6153;
        }
        $3411 = $3412 + ($3413 << 2) | 0;
        $$0$i5$i$i = $3282;
        $3415 = $3411;
        $3417 = $3411;
        while (1) {
         HEAP32[$3415 >> 2] = 0;
         $3415 = $3417 + 4 | 0;
         $3419 = $3415;
         $$0$i5$i$i = $$0$i5$i$i + -1 | 0;
         if (!$$0$i5$i$i) {
          $$lcssa8397 = $3419;
          break;
         } else $3417 = $3419;
        }
        $3424 = HEAP32[$elements75 >> 2] | 0;
        $3428 = (HEAP32[$236 >> 2] | 0) - $3424 | 0;
        $3430 = $3412 + ($3413 - ($3428 >> 2) << 2) | 0;
        _memcpy($3430 | 0, $3424 | 0, $3428 | 0) | 0;
        HEAP32[$elements75 >> 2] = $3430;
        HEAP32[$236 >> 2] = $$lcssa8397;
        HEAP32[$238 >> 2] = $3412 + ($$0$i611$i$i << 2);
        if ($3424) __ZdlPv($3424);
        if (($3282 | 0) > 0) {
         $3434 = $3327 + 20 | 0;
         $3435 = $3327 + 24 | 0;
         $3436 = $3327 + 40 | 0;
         $3437 = $$idx$val$i860$lcssa8250 + -32 | 0;
         $3438 = $3327 + 8 | 0;
         $3439 = $3327 + 12 | 0;
         $i77$04080 = 0;
         do {
          __THREW__ = 0;
          $3444 = invoke_iiiiii(23, $this | 0, HEAP32[$206 >> 2] | 0, HEAP32[$3434 >> 2] | 0, HEAP32[$3435 >> 2] | 0, HEAP32[$3436 >> 2] | 0) | 0;
          $3445 = __THREW__;
          __THREW__ = 0;
          if ($3445 & 1) {
           label = 982;
           break L1;
          }
          $3447 = $3444;
          $3448 = HEAP32[$$idx267 >> 2] | 0;
          do if (($3448 | 0) == (HEAP32[$3437 >> 2] | 0)) {
           $this$idx2$val$i$i1167 = HEAP32[$3203 >> 2] | 0;
           $3454 = $this$idx2$val$i$i1167;
           $3457 = ($3448 - $3454 >> 2) + 1 | 0;
           if ($3457 >>> 0 > 1073741823) {
            __THREW__ = 0;
            invoke_vi(175, $3203 | 0);
            $3459 = __THREW__;
            __THREW__ = 0;
            if ($3459 & 1) {
             label = 982;
             break L1;
            }
            $$idx$val$i$i$pre$i$i1168 = HEAP32[$3203 >> 2] | 0;
            $$idx1$val$i$i$i$i1170 = HEAP32[$3437 >> 2] | 0;
            $3464 = $$idx$val$i$i$pre$i$i1168;
            $3492 = $$idx$val$i$i$pre$i$i1168;
           } else {
            $$idx1$val$i$i$i$i1170 = $3448;
            $3464 = $this$idx2$val$i$i1167;
            $3492 = $3454;
           }
           $3463 = $3464;
           $3465 = $$idx1$val$i$i$i$i1170 - $3463 | 0;
           if ($3465 >> 2 >>> 0 < 536870911) {
            $3471 = $3465 >> 1;
            $3473 = $3471 >>> 0 < $3457 >>> 0 ? $3457 : $3471;
            $3475 = (HEAP32[$$idx267 >> 2] | 0) - $3463 | 0;
            $3476 = $3475 >> 2;
            if (!$3473) {
             $$0$i8$i$i1176 = 0;
             $3483 = 0;
             $3484 = $3476;
             $3490 = $3475;
            } else {
             $$0$i7$i$i1175 = $3473;
             $6154 = $3476;
             $6155 = $3475;
             label = 1014;
            }
           } else {
            $3469 = (HEAP32[$$idx267 >> 2] | 0) - $3463 | 0;
            $$0$i7$i$i1175 = 1073741823;
            $6154 = $3469 >> 2;
            $6155 = $3469;
            label = 1014;
           }
           if ((label | 0) == 1014) {
            label = 0;
            __THREW__ = 0;
            $3479 = invoke_ii(67, $$0$i7$i$i1175 << 2 | 0) | 0;
            $3480 = __THREW__;
            __THREW__ = 0;
            if ($3480 & 1) {
             label = 982;
             break L1;
            }
            $$0$i8$i$i1176 = $$0$i7$i$i1175;
            $3483 = $3479;
            $3484 = $6154;
            $3490 = $6155;
           }
           HEAP32[$3483 + ($3484 << 2) >> 2] = $3447;
           _memcpy($3483 | 0, $3464 | 0, $3490 | 0) | 0;
           HEAP32[$3203 >> 2] = $3483;
           HEAP32[$$idx267 >> 2] = $3483 + ($3484 + 1 << 2);
           HEAP32[$3437 >> 2] = $3483 + ($$0$i8$i$i1176 << 2);
           if (!$3492) break;
           __ZdlPv($3492);
          } else {
           HEAP32[$3448 >> 2] = $3447;
           HEAP32[$$idx267 >> 2] = (HEAP32[$$idx267 >> 2] | 0) + 4;
          } while (0);
          $3494 = $3444 + 28 | 0;
          L837 : do if (($3494 | 0) != ($3438 | 0)) {
           $__t$idx$val$i$i = HEAP32[$3438 >> 2] | 0;
           $3496 = $3444 + 36 | 0;
           L839 : do if (!(HEAP32[$3496 >> 2] | 0)) $__first$03$ph$i$i$i = $__t$idx$val$i$i; else {
            $3499 = HEAP32[$3494 >> 2] | 0;
            $3500 = $3444 + 32 | 0;
            HEAP32[$3494 >> 2] = $3500;
            HEAP32[(HEAP32[$3500 >> 2] | 0) + 8 >> 2] = 0;
            HEAP32[$3500 >> 2] = 0;
            HEAP32[$3496 >> 2] = 0;
            $3504 = HEAP32[$3499 + 4 >> 2] | 0;
            $$$i$i$i$i = ($3504 | 0) == 0 ? $3499 : $3504;
            if (!$$$i$i$i$i) {
             $__first$03$ph$i$i$i = $__t$idx$val$i$i;
             break;
            }
            $3507 = $3444 + 32 | 0;
            $__cache$017$i$i$i = $$$i$i$i$i;
            $__first$0216$i$i$i = $__t$idx$val$i$i;
            while (1) {
             if (($__first$0216$i$i$i | 0) == ($3439 | 0)) {
              $__cache$017$i$i$i$lcssa = $__cache$017$i$i$i;
              break;
             }
             HEAP32[$__cache$017$i$i$i + 16 >> 2] = HEAP32[$__first$0216$i$i$i + 16 >> 2];
             HEAP32[$__cache$017$i$i$i + 20 >> 2] = HEAP32[$__first$0216$i$i$i + 20 >> 2];
             $3518 = $__cache$017$i$i$i + 8 | 0;
             $3519 = HEAP32[$3518 >> 2] | 0;
             do if (!$3519) $$0$i$i$i$i1182 = 0; else {
              $3521 = HEAP32[$3519 >> 2] | 0;
              if (($3521 | 0) == ($__cache$017$i$i$i | 0)) {
               HEAP32[$3519 >> 2] = 0;
               $3524 = HEAP32[$3519 + 4 >> 2] | 0;
               if (!$3524) {
                $$0$i$i$i$i1182 = $3519;
                break;
               } else $$0$i1$i$i$i$i = $3524;
               while (1) {
                $3526 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
                if ($3526) {
                 $$0$i1$i$i$i$i = $3526;
                 continue;
                }
                $3529 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
                if (!$3529) {
                 $$0$i1$i$i$i$i$lcssa = $$0$i1$i$i$i$i;
                 break;
                } else $$0$i1$i$i$i$i = $3529;
               }
               $$0$i$i$i$i1182 = $$0$i1$i$i$i$i$lcssa;
               break;
              } else {
               HEAP32[$3519 + 4 >> 2] = 0;
               if (!$3521) {
                $$0$i$i$i$i1182 = $3519;
                break;
               } else $$0$i$i9$i$i$i = $3521;
               while (1) {
                $3533 = HEAP32[$$0$i$i9$i$i$i >> 2] | 0;
                if ($3533) {
                 $$0$i$i9$i$i$i = $3533;
                 continue;
                }
                $3536 = HEAP32[$$0$i$i9$i$i$i + 4 >> 2] | 0;
                if (!$3536) {
                 $$0$i$i9$i$i$i$lcssa = $$0$i$i9$i$i$i;
                 break;
                } else $$0$i$i9$i$i$i = $3536;
               }
               $$0$i$i$i$i1182 = $$0$i$i9$i$i$i$lcssa;
               break;
              }
             } while (0);
             $3538 = HEAP32[$3500 >> 2] | 0;
             do if (!$3538) {
              $$0$i$i27$i$i$i = $3500;
              $3547 = $3500;
             } else {
              $__v$idx$val$i$i19$i$i$i = HEAP32[$__cache$017$i$i$i + 16 >> 2] | 0;
              $__nd$0$i$i21$i$i$i = $3538;
              while (1) {
               if ($__v$idx$val$i$i19$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i21$i$i$i + 16 >> 2] | 0) >>> 0) {
                $3541 = HEAP32[$__nd$0$i$i21$i$i$i >> 2] | 0;
                if (!$3541) {
                 $$lcssa8400 = $__nd$0$i$i21$i$i$i;
                 $__nd$0$i$i21$i$i$i$lcssa8398 = $__nd$0$i$i21$i$i$i;
                 label = 1038;
                 break;
                } else $__nd$0$be$in$i$i24$i$i$i = $3541;
               } else {
                $3543 = $__nd$0$i$i21$i$i$i + 4 | 0;
                $3544 = HEAP32[$3543 >> 2] | 0;
                if (!$3544) {
                 $$lcssa8399 = $3543;
                 $__nd$0$i$i21$i$i$i$lcssa = $__nd$0$i$i21$i$i$i;
                 label = 1041;
                 break;
                } else $__nd$0$be$in$i$i24$i$i$i = $3544;
               }
               $__nd$0$i$i21$i$i$i = $__nd$0$be$in$i$i24$i$i$i;
              }
              if ((label | 0) == 1038) {
               label = 0;
               $$0$i$i27$i$i$i = $$lcssa8400;
               $3547 = $__nd$0$i$i21$i$i$i$lcssa8398;
               break;
              } else if ((label | 0) == 1041) {
               label = 0;
               $$0$i$i27$i$i$i = $$lcssa8399;
               $3547 = $__nd$0$i$i21$i$i$i$lcssa;
               break;
              }
             } while (0);
             HEAP32[$__cache$017$i$i$i >> 2] = 0;
             HEAP32[$__cache$017$i$i$i + 4 >> 2] = 0;
             HEAP32[$3518 >> 2] = $3547;
             HEAP32[$$0$i$i27$i$i$i >> 2] = $__cache$017$i$i$i;
             $3549 = HEAP32[HEAP32[$3494 >> 2] >> 2] | 0;
             if (!$3549) $3553 = $__cache$017$i$i$i; else {
              HEAP32[$3494 >> 2] = $3549;
              $3553 = HEAP32[$$0$i$i27$i$i$i >> 2] | 0;
             }
             __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3507 >> 2] | 0, $3553);
             HEAP32[$3496 >> 2] = (HEAP32[$3496 >> 2] | 0) + 1;
             $3557 = HEAP32[$__first$0216$i$i$i + 4 >> 2] | 0;
             if (!$3557) {
              $$0$i$i13$i$i$i = $__first$0216$i$i$i;
              while (1) {
               $3562 = HEAP32[$$0$i$i13$i$i$i + 8 >> 2] | 0;
               if ((HEAP32[$3562 >> 2] | 0) == ($$0$i$i13$i$i$i | 0)) {
                $$01$i$i16$i$i$i = $3562;
                break;
               } else $$0$i$i13$i$i$i = $3562;
              }
             } else {
              $$0$i$i$i11$i$i$i = $3557;
              while (1) {
               $3559 = HEAP32[$$0$i$i$i11$i$i$i >> 2] | 0;
               if (!$3559) {
                $$01$i$i16$i$i$i = $$0$i$i$i11$i$i$i;
                break;
               } else $$0$i$i$i11$i$i$i = $3559;
              }
             }
             if (!$$0$i$i$i$i1182) {
              $__first$03$ph$i$i$i = $$01$i$i16$i$i$i;
              break L839;
             } else {
              $__cache$017$i$i$i = $$0$i$i$i$i1182;
              $__first$0216$i$i$i = $$01$i$i16$i$i$i;
             }
            }
            $3510 = HEAP32[$__cache$017$i$i$i$lcssa + 8 >> 2] | 0;
            if (!$3510) $__cache$2$lcssa$i$i$i = $__cache$017$i$i$i$lcssa; else {
             $3567 = $3510;
             while (1) {
              $3568 = HEAP32[$3567 + 8 >> 2] | 0;
              if (!$3568) {
               $$lcssa8403 = $3567;
               break;
              } else $3567 = $3568;
             }
             $__cache$2$lcssa$i$i$i = $$lcssa8403;
            }
            __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3494, $__cache$2$lcssa$i$i$i);
            break L837;
           } while (0);
           if (($__first$03$ph$i$i$i | 0) == ($3439 | 0)) break;
           $3571 = $3444 + 32 | 0;
           $3572 = $3444 + 32 | 0;
           $__first$0314$i$i$i = $__first$03$ph$i$i$i;
           while (1) {
            $3573 = $__first$0314$i$i$i + 16 | 0;
            $3574 = HEAP32[$3571 >> 2] | 0;
            do if (!$3574) {
             $$0$i$i8$i$i$i = $3571;
             $3598 = $3571;
            } else {
             $__v$idx$val$i$i$i$i$i = HEAP32[$3573 >> 2] | 0;
             $__nd$0$i$i$i$i$i = $3574;
             while (1) {
              if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
               $3577 = HEAP32[$__nd$0$i$i$i$i$i >> 2] | 0;
               if (!$3577) {
                $$lcssa8406 = $__nd$0$i$i$i$i$i;
                $__nd$0$i$i$i$i$i$lcssa8404 = $__nd$0$i$i$i$i$i;
                label = 1058;
                break;
               } else $__nd$0$be$in$i$i$i$i$i = $3577;
              } else {
               $3579 = $__nd$0$i$i$i$i$i + 4 | 0;
               $3580 = HEAP32[$3579 >> 2] | 0;
               if (!$3580) {
                $$lcssa8405 = $3579;
                $__nd$0$i$i$i$i$i$lcssa = $__nd$0$i$i$i$i$i;
                label = 1061;
                break;
               } else $__nd$0$be$in$i$i$i$i$i = $3580;
              }
              $__nd$0$i$i$i$i$i = $__nd$0$be$in$i$i$i$i$i;
             }
             if ((label | 0) == 1058) {
              label = 0;
              $$0$i$i8$i$i$i = $$lcssa8406;
              $3598 = $__nd$0$i$i$i$i$i$lcssa8404;
              break;
             } else if ((label | 0) == 1061) {
              label = 0;
              $$0$i$i8$i$i$i = $$lcssa8405;
              $3598 = $__nd$0$i$i$i$i$i$lcssa;
              break;
             }
            } while (0);
            __THREW__ = 0;
            $3582 = invoke_ii(67, 24) | 0;
            $3583 = __THREW__;
            __THREW__ = 0;
            if ($3583 & 1) {
             label = 981;
             break L1;
            }
            $3586 = $3573;
            $3591 = HEAP32[$3586 + 4 >> 2] | 0;
            $3592 = $3582 + 16 | 0;
            HEAP32[$3592 >> 2] = HEAP32[$3586 >> 2];
            HEAP32[$3592 + 4 >> 2] = $3591;
            HEAP32[$3582 >> 2] = 0;
            HEAP32[$3582 + 4 >> 2] = 0;
            HEAP32[$3582 + 8 >> 2] = $3598;
            HEAP32[$$0$i$i8$i$i$i >> 2] = $3582;
            $3600 = HEAP32[HEAP32[$3494 >> 2] >> 2] | 0;
            if (!$3600) $3604 = $3582; else {
             HEAP32[$3494 >> 2] = $3600;
             $3604 = HEAP32[$$0$i$i8$i$i$i >> 2] | 0;
            }
            __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3572 >> 2] | 0, $3604);
            HEAP32[$3496 >> 2] = (HEAP32[$3496 >> 2] | 0) + 1;
            $3608 = HEAP32[$__first$0314$i$i$i + 4 >> 2] | 0;
            if (!$3608) {
             $$0$i$i$i$i$i1186 = $__first$0314$i$i$i;
             while (1) {
              $3613 = HEAP32[$$0$i$i$i$i$i1186 + 8 >> 2] | 0;
              if ((HEAP32[$3613 >> 2] | 0) == ($$0$i$i$i$i$i1186 | 0)) {
               $$01$i$i$i$i$i1189 = $3613;
               break;
              } else $$0$i$i$i$i$i1186 = $3613;
             }
            } else {
             $$0$i$i$i$i$i$i1184 = $3608;
             while (1) {
              $3610 = HEAP32[$$0$i$i$i$i$i$i1184 >> 2] | 0;
              if (!$3610) {
               $$01$i$i$i$i$i1189 = $$0$i$i$i$i$i$i1184;
               break;
              } else $$0$i$i$i$i$i$i1184 = $3610;
             }
            }
            if (($$01$i$i$i$i$i1189 | 0) == ($3439 | 0)) break; else $__first$0314$i$i$i = $$01$i$i$i$i$i1189;
           }
          } while (0);
          __THREW__ = 0;
          $3619 = invoke_iii(31, $this | 0, HEAP32[HEAP32[$3330 >> 2] >> 2] | 0) | 0;
          $3620 = __THREW__;
          __THREW__ = 0;
          if ($3620 & 1) {
           label = 982;
           break L1;
          }
          HEAP32[$3619 + 8 >> 2] = 2;
          HEAPF64[$3619 + 16 >> 3] = +($i77$04080 | 0);
          HEAP8[$3619 + 5 >> 0] = 1;
          HEAP32[$3619 + 40 >> 2] = 0;
          $3627 = $3619 + 28 | 0;
          $3628 = $3619 + 32 | 0;
          __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3627, HEAP32[$3628 >> 2] | 0);
          HEAP32[$3619 + 36 >> 2] = 0;
          HEAP32[$3627 >> 2] = $3628;
          HEAP32[$3628 >> 2] = 0;
          $__k$val$i1192 = HEAP32[HEAP32[$3330 >> 2] >> 2] | 0;
          $3632 = $3444 + 32 | 0;
          $3633 = HEAP32[$3632 >> 2] | 0;
          $3635 = $__k$val$i1192;
          do if (!$3633) {
           HEAP32[$__parent$i1191 >> 2] = $3632;
           $$0$i7$i1201 = $3632;
           $3657 = $3632;
           label = 1081;
          } else {
           $__nd$0$i$i1193 = $3633;
           while (1) {
            $3637 = HEAP32[$__nd$0$i$i1193 + 16 >> 2] | 0;
            if ($3637 >>> 0 > $__k$val$i1192 >>> 0) {
             $3639 = HEAP32[$__nd$0$i$i1193 >> 2] | 0;
             if (!$3639) {
              $$lcssa8410 = $__nd$0$i$i1193;
              $__nd$0$i$i1193$lcssa8408 = $__nd$0$i$i1193;
              label = 1074;
              break;
             } else $__nd$0$be$in$i$i1195 = $3639;
            } else {
             if ($3637 >>> 0 >= $__k$val$i1192 >>> 0) {
              $__nd$0$i$i1193$lcssa = $__nd$0$i$i1193;
              label = 1080;
              break;
             }
             $3643 = $__nd$0$i$i1193 + 4 | 0;
             $3644 = HEAP32[$3643 >> 2] | 0;
             if (!$3644) {
              $$lcssa8409 = $3643;
              $__nd$0$i$i1193$lcssa8407 = $__nd$0$i$i1193;
              label = 1078;
              break;
             } else $__nd$0$be$in$i$i1195 = $3644;
            }
            $__nd$0$i$i1193 = $__nd$0$be$in$i$i1195;
           }
           if ((label | 0) == 1074) {
            label = 0;
            HEAP32[$__parent$i1191 >> 2] = $__nd$0$i$i1193$lcssa8408;
            $$0$i7$i1201 = $$lcssa8410;
            $3657 = $__nd$0$i$i1193$lcssa8408;
            label = 1081;
            break;
           } else if ((label | 0) == 1078) {
            label = 0;
            HEAP32[$__parent$i1191 >> 2] = $__nd$0$i$i1193$lcssa8407;
            $$0$i7$i1201 = $$lcssa8409;
            $3657 = $__nd$0$i$i1193$lcssa8407;
            label = 1081;
            break;
           } else if ((label | 0) == 1080) {
            label = 0;
            HEAP32[$__parent$i1191 >> 2] = $__nd$0$i$i1193$lcssa;
            if (!$__nd$0$i$i1193$lcssa) {
             $$0$i7$i1201 = $__parent$i1191;
             $3657 = $__nd$0$i$i1193$lcssa;
             label = 1081;
             break;
            } else {
             $__r$0$i1205 = $__nd$0$i$i1193$lcssa;
             break;
            }
           }
          } while (0);
          if ((label | 0) == 1081) {
           label = 0;
           __THREW__ = 0;
           $3650 = invoke_ii(67, 24) | 0;
           $3651 = __THREW__;
           __THREW__ = 0;
           if ($3651 & 1) {
            label = 982;
            break L1;
           }
           HEAP32[$3650 + 16 >> 2] = $3635;
           HEAP32[$3650 + 20 >> 2] = 0;
           HEAP32[$3650 >> 2] = 0;
           HEAP32[$3650 + 4 >> 2] = 0;
           HEAP32[$3650 + 8 >> 2] = $3657;
           HEAP32[$$0$i7$i1201 >> 2] = $3650;
           $3659 = HEAP32[HEAP32[$3494 >> 2] >> 2] | 0;
           if (!$3659) $3664 = $3650; else {
            HEAP32[$3494 >> 2] = $3659;
            $3664 = HEAP32[$$0$i7$i1201 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$3444 + 32 >> 2] | 0, $3664);
           $3665 = $3444 + 36 | 0;
           HEAP32[$3665 >> 2] = (HEAP32[$3665 >> 2] | 0) + 1;
           $__r$0$i1205 = $3650;
          }
          HEAP32[$__r$0$i1205 + 20 >> 2] = $3619;
          HEAP32[(HEAP32[$elements75 >> 2] | 0) + ($i77$04080 << 2) >> 2] = $3447;
          $i77$04080 = $i77$04080 + 1 | 0;
         } while (($i77$04080 | 0) < ($3282 | 0));
        }
       }
       __THREW__ = 0;
       invoke_viii(11, $73 | 0, $this | 0, $elements75 | 0);
       $3672 = __THREW__;
       __THREW__ = 0;
       if ($3672 & 1) {
        label = 983;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$73 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$73 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$73 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$73 + 12 >> 2];
       $3674 = HEAP32[$elements75 >> 2] | 0;
       $3676 = $3674;
       if (!$3674) {
        $$2138$ph = 1;
        $$414$ph = $$111$ph4097;
        label = 1486;
       } else {
        $3677 = HEAP32[$236 >> 2] | 0;
        if (($3677 | 0) != ($3674 | 0)) HEAP32[$236 >> 2] = $3677 + (~(($3677 + -4 - $3676 | 0) >>> 2) << 2);
        __ZdlPv($3674);
        $$2138$ph = 1;
        $$414$ph = $$111$ph4097;
        label = 1486;
       }
       break;
      }
     case 1:
      {
       HEAP32[$74 >> 2] = 0;
       HEAP32[$239 >> 2] = 0;
       HEAP32[$240 >> 2] = 0;
       __THREW__ = 0;
       $3692 = invoke_ii(67, 8) | 0;
       $3693 = __THREW__;
       __THREW__ = 0;
       if ($3693 & 1) {
        label = 1097;
        break L1;
       }
       HEAP32[$74 >> 2] = $3692;
       HEAP32[$241 >> 2] = $3692 + 8;
       HEAP32[$3692 >> 2] = 2;
       HEAP32[$3692 + 4 >> 2] = 2;
       HEAP32[$239 >> 2] = $3692 + 8;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 1, $args68 | 0, $74 | 0);
       $3698 = __THREW__;
       __THREW__ = 0;
       if ($3698 & 1) {
        $$lcssa8772 = $3692;
        label = 1100;
        break L1;
       }
       HEAP32[$239 >> 2] = $3692;
       __ZdlPv($3692);
       $args68$idx362$val = HEAP32[$args68 >> 2] | 0;
       $3706 = +Math_pow(+(+HEAPF64[$args68$idx362$val + 8 >> 3]), +(+HEAPF64[$args68$idx362$val + 24 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $75 | 0, $this | 0, $3211 | 0, +$3706);
       $3707 = __THREW__;
       __THREW__ = 0;
       if ($3707 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$75 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$75 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$75 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$75 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 2:
      {
       HEAP32[$76 >> 2] = 0;
       HEAP32[$242 >> 2] = 0;
       HEAP32[$243 >> 2] = 0;
       __THREW__ = 0;
       $3711 = invoke_ii(67, 4) | 0;
       $3712 = __THREW__;
       __THREW__ = 0;
       if ($3712 & 1) {
        label = 1103;
        break L1;
       }
       HEAP32[$76 >> 2] = $3711;
       HEAP32[$244 >> 2] = $3711 + 4;
       HEAP32[$3711 >> 2] = 2;
       HEAP32[$242 >> 2] = $3711 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 2, $args68 | 0, $76 | 0);
       $3716 = __THREW__;
       __THREW__ = 0;
       if ($3716 & 1) {
        $$lcssa8771 = $3711;
        label = 1106;
        break L1;
       }
       HEAP32[$242 >> 2] = $3711;
       __ZdlPv($3711);
       $3722 = +Math_floor(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $77 | 0, $this | 0, $3211 | 0, +$3722);
       $3723 = __THREW__;
       __THREW__ = 0;
       if ($3723 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$77 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$77 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 3:
      {
       HEAP32[$78 >> 2] = 0;
       HEAP32[$245 >> 2] = 0;
       HEAP32[$246 >> 2] = 0;
       __THREW__ = 0;
       $3727 = invoke_ii(67, 4) | 0;
       $3728 = __THREW__;
       __THREW__ = 0;
       if ($3728 & 1) {
        label = 1109;
        break L1;
       }
       HEAP32[$78 >> 2] = $3727;
       HEAP32[$247 >> 2] = $3727 + 4;
       HEAP32[$3727 >> 2] = 2;
       HEAP32[$245 >> 2] = $3727 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 3, $args68 | 0, $78 | 0);
       $3732 = __THREW__;
       __THREW__ = 0;
       if ($3732 & 1) {
        $$lcssa8770 = $3727;
        label = 1112;
        break L1;
       }
       HEAP32[$245 >> 2] = $3727;
       __ZdlPv($3727);
       $3738 = +Math_ceil(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $79 | 0, $this | 0, $3211 | 0, +$3738);
       $3739 = __THREW__;
       __THREW__ = 0;
       if ($3739 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$79 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$79 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$79 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$79 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 4:
      {
       HEAP32[$80 >> 2] = 0;
       HEAP32[$248 >> 2] = 0;
       HEAP32[$249 >> 2] = 0;
       __THREW__ = 0;
       $3743 = invoke_ii(67, 4) | 0;
       $3744 = __THREW__;
       __THREW__ = 0;
       if ($3744 & 1) {
        label = 1115;
        break L1;
       }
       HEAP32[$80 >> 2] = $3743;
       HEAP32[$250 >> 2] = $3743 + 4;
       HEAP32[$3743 >> 2] = 2;
       HEAP32[$248 >> 2] = $3743 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 4, $args68 | 0, $80 | 0);
       $3748 = __THREW__;
       __THREW__ = 0;
       if ($3748 & 1) {
        $$lcssa8769 = $3743;
        label = 1118;
        break L1;
       }
       HEAP32[$248 >> 2] = $3743;
       __ZdlPv($3743);
       $3754 = +Math_sqrt(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $81 | 0, $this | 0, $3211 | 0, +$3754);
       $3755 = __THREW__;
       __THREW__ = 0;
       if ($3755 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$81 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$81 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 5:
      {
       HEAP32[$82 >> 2] = 0;
       HEAP32[$251 >> 2] = 0;
       HEAP32[$252 >> 2] = 0;
       __THREW__ = 0;
       $3759 = invoke_ii(67, 4) | 0;
       $3760 = __THREW__;
       __THREW__ = 0;
       if ($3760 & 1) {
        label = 1121;
        break L1;
       }
       HEAP32[$82 >> 2] = $3759;
       HEAP32[$253 >> 2] = $3759 + 4;
       HEAP32[$3759 >> 2] = 2;
       HEAP32[$251 >> 2] = $3759 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 5, $args68 | 0, $82 | 0);
       $3764 = __THREW__;
       __THREW__ = 0;
       if ($3764 & 1) {
        $$lcssa8768 = $3759;
        label = 1124;
        break L1;
       }
       HEAP32[$251 >> 2] = $3759;
       __ZdlPv($3759);
       $3770 = +Math_sin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $83 | 0, $this | 0, $3211 | 0, +$3770);
       $3771 = __THREW__;
       __THREW__ = 0;
       if ($3771 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$83 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$83 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$83 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$83 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 6:
      {
       HEAP32[$84 >> 2] = 0;
       HEAP32[$254 >> 2] = 0;
       HEAP32[$255 >> 2] = 0;
       __THREW__ = 0;
       $3775 = invoke_ii(67, 4) | 0;
       $3776 = __THREW__;
       __THREW__ = 0;
       if ($3776 & 1) {
        label = 1127;
        break L1;
       }
       HEAP32[$84 >> 2] = $3775;
       HEAP32[$256 >> 2] = $3775 + 4;
       HEAP32[$3775 >> 2] = 2;
       HEAP32[$254 >> 2] = $3775 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 6, $args68 | 0, $84 | 0);
       $3780 = __THREW__;
       __THREW__ = 0;
       if ($3780 & 1) {
        $$lcssa8767 = $3775;
        label = 1130;
        break L1;
       }
       HEAP32[$254 >> 2] = $3775;
       __ZdlPv($3775);
       $3786 = +Math_cos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $85 | 0, $this | 0, $3211 | 0, +$3786);
       $3787 = __THREW__;
       __THREW__ = 0;
       if ($3787 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$85 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$85 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 7:
      {
       HEAP32[$86 >> 2] = 0;
       HEAP32[$257 >> 2] = 0;
       HEAP32[$258 >> 2] = 0;
       __THREW__ = 0;
       $3791 = invoke_ii(67, 4) | 0;
       $3792 = __THREW__;
       __THREW__ = 0;
       if ($3792 & 1) {
        label = 1133;
        break L1;
       }
       HEAP32[$86 >> 2] = $3791;
       HEAP32[$259 >> 2] = $3791 + 4;
       HEAP32[$3791 >> 2] = 2;
       HEAP32[$257 >> 2] = $3791 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 7, $args68 | 0, $86 | 0);
       $3796 = __THREW__;
       __THREW__ = 0;
       if ($3796 & 1) {
        $$lcssa8766 = $3791;
        label = 1136;
        break L1;
       }
       HEAP32[$257 >> 2] = $3791;
       __ZdlPv($3791);
       $3802 = +Math_tan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $87 | 0, $this | 0, $3211 | 0, +$3802);
       $3803 = __THREW__;
       __THREW__ = 0;
       if ($3803 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$87 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$87 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$87 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$87 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 8:
      {
       HEAP32[$88 >> 2] = 0;
       HEAP32[$260 >> 2] = 0;
       HEAP32[$261 >> 2] = 0;
       __THREW__ = 0;
       $3807 = invoke_ii(67, 4) | 0;
       $3808 = __THREW__;
       __THREW__ = 0;
       if ($3808 & 1) {
        label = 1139;
        break L1;
       }
       HEAP32[$88 >> 2] = $3807;
       HEAP32[$262 >> 2] = $3807 + 4;
       HEAP32[$3807 >> 2] = 2;
       HEAP32[$260 >> 2] = $3807 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 8, $args68 | 0, $88 | 0);
       $3812 = __THREW__;
       __THREW__ = 0;
       if ($3812 & 1) {
        $$lcssa8765 = $3807;
        label = 1142;
        break L1;
       }
       HEAP32[$260 >> 2] = $3807;
       __ZdlPv($3807);
       $3818 = +Math_asin(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $89 | 0, $this | 0, $3211 | 0, +$3818);
       $3819 = __THREW__;
       __THREW__ = 0;
       if ($3819 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$89 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 9:
      {
       HEAP32[$90 >> 2] = 0;
       HEAP32[$263 >> 2] = 0;
       HEAP32[$264 >> 2] = 0;
       __THREW__ = 0;
       $3823 = invoke_ii(67, 4) | 0;
       $3824 = __THREW__;
       __THREW__ = 0;
       if ($3824 & 1) {
        label = 1145;
        break L1;
       }
       HEAP32[$90 >> 2] = $3823;
       HEAP32[$265 >> 2] = $3823 + 4;
       HEAP32[$3823 >> 2] = 2;
       HEAP32[$263 >> 2] = $3823 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 9, $args68 | 0, $90 | 0);
       $3828 = __THREW__;
       __THREW__ = 0;
       if ($3828 & 1) {
        $$lcssa8764 = $3823;
        label = 1148;
        break L1;
       }
       HEAP32[$263 >> 2] = $3823;
       __ZdlPv($3823);
       $3834 = +Math_acos(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $91 | 0, $this | 0, $3211 | 0, +$3834);
       $3835 = __THREW__;
       __THREW__ = 0;
       if ($3835 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$91 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$91 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 10:
      {
       HEAP32[$92 >> 2] = 0;
       HEAP32[$266 >> 2] = 0;
       HEAP32[$267 >> 2] = 0;
       __THREW__ = 0;
       $3839 = invoke_ii(67, 4) | 0;
       $3840 = __THREW__;
       __THREW__ = 0;
       if ($3840 & 1) {
        label = 1151;
        break L1;
       }
       HEAP32[$92 >> 2] = $3839;
       HEAP32[$268 >> 2] = $3839 + 4;
       HEAP32[$3839 >> 2] = 2;
       HEAP32[$266 >> 2] = $3839 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 10, $args68 | 0, $92 | 0);
       $3844 = __THREW__;
       __THREW__ = 0;
       if ($3844 & 1) {
        $$lcssa8763 = $3839;
        label = 1154;
        break L1;
       }
       HEAP32[$266 >> 2] = $3839;
       __ZdlPv($3839);
       $3850 = +Math_atan(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $93 | 0, $this | 0, $3211 | 0, +$3850);
       $3851 = __THREW__;
       __THREW__ = 0;
       if ($3851 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$93 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$93 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$93 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$93 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 11:
      {
       $args68$idx372$val = HEAP32[$args68 >> 2] | 0;
       switch (HEAP32[$args68$idx372$val >> 2] | 0) {
       case 0:
        {
         __THREW__ = 0;
         invoke_viii(3, $95 | 0, 52444, 4);
         $3856 = __THREW__;
         __THREW__ = 0;
         if ($3856 & 1) {
          label = 940;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $94 | 0, $this | 0, $95 | 0);
         $3858 = __THREW__;
         __THREW__ = 0;
         if ($3858 & 1) {
          label = 1159;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$94 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$94 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 1:
        {
         __THREW__ = 0;
         invoke_viii(3, $97 | 0, 52449, 7);
         $3862 = __THREW__;
         __THREW__ = 0;
         if ($3862 & 1) {
          label = 940;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $96 | 0, $this | 0, $97 | 0);
         $3864 = __THREW__;
         __THREW__ = 0;
         if ($3864 & 1) {
          label = 1163;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$96 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$96 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 2:
        {
         __THREW__ = 0;
         invoke_viii(3, $99 | 0, 53301, 6);
         $3868 = __THREW__;
         __THREW__ = 0;
         if ($3868 & 1) {
          label = 940;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $98 | 0, $this | 0, $99 | 0);
         $3870 = __THREW__;
         __THREW__ = 0;
         if ($3870 & 1) {
          label = 1167;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$98 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$98 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$98 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$98 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 16:
        {
         __THREW__ = 0;
         invoke_viii(3, $101 | 0, 52464, 5);
         $3874 = __THREW__;
         __THREW__ = 0;
         if ($3874 & 1) {
          label = 940;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $100 | 0, $this | 0, $101 | 0);
         $3876 = __THREW__;
         __THREW__ = 0;
         if ($3876 & 1) {
          label = 1171;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$100 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$100 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$100 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$100 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 17:
        {
         __THREW__ = 0;
         invoke_viii(3, $103 | 0, 52470, 8);
         $3880 = __THREW__;
         __THREW__ = 0;
         if ($3880 & 1) {
          label = 940;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $102 | 0, $this | 0, $103 | 0);
         $3882 = __THREW__;
         __THREW__ = 0;
         if ($3882 & 1) {
          label = 1175;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$102 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$102 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$102 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$102 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 18:
        {
         __THREW__ = 0;
         invoke_viii(3, $105 | 0, 52479, 6);
         $3886 = __THREW__;
         __THREW__ = 0;
         if ($3886 & 1) {
          label = 940;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $104 | 0, $this | 0, $105 | 0);
         $3888 = __THREW__;
         __THREW__ = 0;
         if ($3888 & 1) {
          label = 1179;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$104 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$104 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$104 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$104 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 19:
        {
         __THREW__ = 0;
         invoke_viii(3, $107 | 0, 52486, 6);
         $3892 = __THREW__;
         __THREW__ = 0;
         if ($3892 & 1) {
          label = 940;
          break L1;
         }
         __THREW__ = 0;
         invoke_viii(13, $106 | 0, $this | 0, $107 | 0);
         $3894 = __THREW__;
         __THREW__ = 0;
         if ($3894 & 1) {
          label = 1183;
          break L1;
         };
         HEAP32[$204 >> 2] = HEAP32[$106 >> 2];
         HEAP32[$204 + 4 >> 2] = HEAP32[$106 + 4 >> 2];
         HEAP32[$204 + 8 >> 2] = HEAP32[$106 + 8 >> 2];
         HEAP32[$204 + 12 >> 2] = HEAP32[$106 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($107);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       default:
        {
         $$2138 = 1;
         $$414 = $$111$ph4097;
         $4713 = $args68$idx372$val;
         break L792;
        }
       }
       break;
      }
     case 12:
      {
       HEAP32[$108 >> 2] = 0;
       HEAP32[$269 >> 2] = 0;
       HEAP32[$270 >> 2] = 0;
       __THREW__ = 0;
       $3898 = invoke_ii(67, 8) | 0;
       $3899 = __THREW__;
       __THREW__ = 0;
       if ($3899 & 1) {
        label = 1186;
        break L1;
       }
       HEAP32[$108 >> 2] = $3898;
       HEAP32[$271 >> 2] = $3898 + 8;
       HEAP32[$3898 >> 2] = 17;
       HEAP32[$3898 + 4 >> 2] = 16;
       HEAP32[$269 >> 2] = $3898 + 8;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 12, $args68 | 0, $108 | 0);
       $3904 = __THREW__;
       __THREW__ = 0;
       if ($3904 & 1) {
        $$lcssa8758 = $3898;
        label = 1191;
        break L1;
       }
       HEAP32[$269 >> 2] = $3898;
       __ZdlPv($3898);
       $args68$idx376$val = HEAP32[$args68 >> 2] | 0;
       $3909 = HEAP32[$args68$idx376$val + 8 >> 2] | 0;
       $3912 = $3909 + 28 | 0;
       if (((HEAP32[$3909 + 32 >> 2] | 0) - (HEAP32[$3912 >> 2] | 0) | 0) != 4) {
        $$lcssa8618 = $3211;
        label = 1188;
        break L1;
       }
       $3931 = HEAP32[$args68$idx376$val + 24 >> 2] | 0;
       $$idx264 = $3931 + 8 | 0;
       if ((HEAP32[$3931 + 12 >> 2] | 0) == (HEAP32[$$idx264 >> 2] | 0)) {
        HEAP32[$111 >> 2] = 0;
        HEAP32[$272 >> 2] = 0;
        HEAP32[$273 >> 2] = 0;
        __THREW__ = 0;
        invoke_viii(11, $110 | 0, $this | 0, $111 | 0);
        $3933 = __THREW__;
        __THREW__ = 0;
        if ($3933 & 1) {
         label = 1198;
         break L1;
        };
        HEAP32[$204 >> 2] = HEAP32[$110 >> 2];
        HEAP32[$204 + 4 >> 2] = HEAP32[$110 + 4 >> 2];
        HEAP32[$204 + 8 >> 2] = HEAP32[$110 + 8 >> 2];
        HEAP32[$204 + 12 >> 2] = HEAP32[$110 + 12 >> 2];
        $$2138$ph = 1;
        $$414$ph = $$111$ph4097;
        label = 1486;
        break L792;
       }
       HEAP32[$$lcssa8288 >> 2] = 3;
       HEAP32[$3200 >> 2] = HEAP32[$args68$idx376$val >> 2];
       HEAP32[$3200 + 4 >> 2] = HEAP32[$args68$idx376$val + 4 >> 2];
       HEAP32[$3200 + 8 >> 2] = HEAP32[$args68$idx376$val + 8 >> 2];
       HEAP32[$3200 + 12 >> 2] = HEAP32[$args68$idx376$val + 12 >> 2];
       $3937 = $$idx$val$i860$lcssa8250 + -88 | 0;
       $3938 = $args68$idx376$val + 16 | 0;
       HEAP32[$3937 >> 2] = HEAP32[$3938 >> 2];
       HEAP32[$3937 + 4 >> 2] = HEAP32[$3938 + 4 >> 2];
       HEAP32[$3937 + 8 >> 2] = HEAP32[$3938 + 8 >> 2];
       HEAP32[$3937 + 12 >> 2] = HEAP32[$3938 + 12 >> 2];
       $3939 = HEAP32[$3203 >> 2] | 0;
       $3940 = HEAP32[$$idx267 >> 2] | 0;
       if (($3940 | 0) != ($3939 | 0)) HEAP32[$$idx267 >> 2] = $3940 + (~(($3940 + -4 - $3939 | 0) >>> 2) << 2);
       HEAP32[$3201 >> 2] = 0;
       $3946 = HEAP32[HEAP32[$$idx264 >> 2] >> 2] | 0;
       HEAP32[$274 >> 2] = 0;
       HEAP32[$275 >> 2] = 0;
       HEAP32[$bindings83 >> 2] = $276;
       $$idx$val2$i$i1495 = HEAP32[$3909 + 8 >> 2] | 0;
       $3947 = $3909 + 12 | 0;
       do if (($$idx$val2$i$i1495 | 0) == ($3947 | 0)) {
        $6156 = HEAP32[HEAP32[$3912 >> 2] >> 2] | 0;
        label = 1241;
       } else {
        $3955 = $$idx$val2$i$i1495;
        $6157 = $$idx$val2$i$i1495;
        while (1) {
         __THREW__ = 0;
         $3951 = invoke_ii(67, 24) | 0;
         $3952 = __THREW__;
         __THREW__ = 0;
         if ($3952 & 1) {
          label = 1232;
          break L1;
         }
         $3957 = $3955 + 16 | 0;
         $3959 = HEAP32[$3957 >> 2] | 0;
         $3962 = HEAP32[$3957 + 4 >> 2] | 0;
         $3963 = $3951 + 16 | 0;
         HEAP32[$3963 >> 2] = $3959;
         HEAP32[$3963 + 4 >> 2] = $3962;
         $3967 = $3959;
         $$pre$i$i$i$i$i$i1500 = HEAP32[$276 >> 2] | 0;
         do if ((HEAP32[$bindings83 >> 2] | 0) == ($276 | 0)) {
          $3982 = $277;
          label = 1210;
         } else {
          $3969 = ($$pre$i$i$i$i$i$i1500 | 0) == 0;
          if ($3969) {
           $$0$i$i$i$i$i$i$i$i1504 = $276;
           while (1) {
            $3974 = HEAP32[$$0$i$i$i$i$i$i$i$i1504 + 8 >> 2] | 0;
            if ((HEAP32[$3974 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1504 | 0)) $$0$i$i$i$i$i$i$i$i1504 = $3974; else {
             $$01$i$i$i$i$i$i$i$i1507 = $3974;
             break;
            }
           }
          } else {
           $$0$i$i$i$i$i$i$i$i$i1502 = $$pre$i$i$i$i$i$i1500;
           while (1) {
            $3971 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1502 + 4 >> 2] | 0;
            if (!$3971) {
             $$01$i$i$i$i$i$i$i$i1507 = $$0$i$i$i$i$i$i$i$i$i1502;
             break;
            } else $$0$i$i$i$i$i$i$i$i$i1502 = $3971;
           }
          }
          if ((HEAP32[$$01$i$i$i$i$i$i$i$i1507 + 16 >> 2] | 0) >>> 0 < $3967 >>> 0) {
           $3982 = $$01$i$i$i$i$i$i$i$i1507;
           label = 1210;
          } else {
           if ($3969) {
            HEAP32[$0 >> 2] = $277;
            $$0$i$i$i$i1$i$i1516 = $276;
            $3997 = $277;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i1512 = $$pre$i$i$i$i$i$i1500;
           while (1) {
            $$idx2$val$i22$i$i$i$i$i$i1514 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1512 + 16 >> 2] | 0;
            if ($$idx2$val$i22$i$i$i$i$i$i1514 >>> 0 > $3967 >>> 0) {
             $3985 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1512 >> 2] | 0;
             if (!$3985) {
              $$lcssa8392 = $__nd$0$i20$i$i$i$i$in$i$i1512;
              $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa8390 = $__nd$0$i20$i$i$i$i$in$i$i1512;
              label = 1216;
              break;
             } else {
              $__nd$0$i20$i$i$i$i$in$i$i1512 = $3985;
              continue;
             }
            }
            if ($$idx2$val$i22$i$i$i$i$i$i1514 >>> 0 >= $3967 >>> 0) {
             $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa = $__nd$0$i20$i$i$i$i$in$i$i1512;
             label = 1220;
             break;
            }
            $3989 = $__nd$0$i20$i$i$i$i$in$i$i1512 + 4 | 0;
            $3990 = HEAP32[$3989 >> 2] | 0;
            if (!$3990) {
             $$lcssa8391 = $3989;
             $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa8389 = $__nd$0$i20$i$i$i$i$in$i$i1512;
             label = 1219;
             break;
            } else $__nd$0$i20$i$i$i$i$in$i$i1512 = $3990;
           }
           if ((label | 0) == 1216) {
            label = 0;
            $3987 = $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa8390;
            HEAP32[$0 >> 2] = $3987;
            $$0$i$i$i$i1$i$i1516 = $$lcssa8392;
            $3997 = $3987;
            break;
           } else if ((label | 0) == 1219) {
            label = 0;
            $3992 = $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa8389;
            HEAP32[$0 >> 2] = $3992;
            $$0$i$i$i$i1$i$i1516 = $$lcssa8391;
            $3997 = $3992;
            break;
           } else if ((label | 0) == 1220) {
            label = 0;
            $3993 = $__nd$0$i20$i$i$i$i$in$i$i1512$lcssa;
            HEAP32[$0 >> 2] = $3993;
            $$0$i$i$i$i1$i$i1516 = $0;
            $3997 = $3993;
            break;
           }
          }
         } while (0);
         do if ((label | 0) == 1210) {
          label = 0;
          if (!$$pre$i$i$i$i$i$i1500) {
           HEAP32[$0 >> 2] = $277;
           $$0$i$i$i$i1$i$i1516 = $276;
           $3997 = $277;
           break;
          } else {
           HEAP32[$0 >> 2] = $3982;
           $$0$i$i$i$i1$i$i1516 = $3982 + 4 | 0;
           $3997 = $3982;
           break;
          }
         } while (0);
         $3994 = HEAP32[$$0$i$i$i$i1$i$i1516 >> 2] | 0;
         if (!$3994) {
          HEAP32[$3951 >> 2] = 0;
          HEAP32[$3951 + 4 >> 2] = 0;
          HEAP32[$3951 + 8 >> 2] = $3997;
          HEAP32[$$0$i$i$i$i1$i$i1516 >> 2] = $3951;
          $4001 = HEAP32[HEAP32[$bindings83 >> 2] >> 2] | 0;
          if (!$4001) $4005 = $3951; else {
           HEAP32[$bindings83 >> 2] = $4001;
           $4005 = HEAP32[$$0$i$i$i$i1$i$i1516 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$274 >> 2] | 0, $4005);
          HEAP32[$275 >> 2] = (HEAP32[$275 >> 2] | 0) + 1;
          $4010 = $3955;
         } else if (($3994 | 0) == ($3951 | 0)) $4010 = $6157; else {
          __ZdlPv($3951);
          $4010 = $6157;
         }
         $4011 = HEAP32[$4010 + 4 >> 2] | 0;
         if (!$4011) {
          $$0$i$i$i$i$i1524 = $4010;
          while (1) {
           $4016 = HEAP32[$$0$i$i$i$i$i1524 + 8 >> 2] | 0;
           if ((HEAP32[$4016 >> 2] | 0) == ($$0$i$i$i$i$i1524 | 0)) {
            $$01$i$i$i$i$i1527 = $4016;
            break;
           } else $$0$i$i$i$i$i1524 = $4016;
          }
         } else {
          $$0$i$i$i$i$i$i1522 = $4011;
          while (1) {
           $4013 = HEAP32[$$0$i$i$i$i$i$i1522 >> 2] | 0;
           if (!$4013) {
            $$01$i$i$i$i$i1527 = $$0$i$i$i$i$i$i1522;
            break;
           } else $$0$i$i$i$i$i$i1522 = $4013;
          }
         }
         if (($$01$i$i$i$i$i1527 | 0) == ($3947 | 0)) break; else {
          $3955 = $$01$i$i$i$i$i1527;
          $6157 = $$01$i$i$i$i$i1527;
         }
        }
        $$pre5076 = HEAP32[$276 >> 2] | 0;
        $__k$val$i1533 = HEAP32[HEAP32[$3912 >> 2] >> 2] | 0;
        $4025 = $__k$val$i1533;
        if (!$$pre5076) {
         $6156 = $4025;
         label = 1241;
        } else {
         $__nd$0$i$i1534 = $$pre5076;
         while (1) {
          $4027 = HEAP32[$__nd$0$i$i1534 + 16 >> 2] | 0;
          if ($4027 >>> 0 > $__k$val$i1533 >>> 0) {
           $4029 = HEAP32[$__nd$0$i$i1534 >> 2] | 0;
           if (!$4029) {
            $$lcssa8396 = $__nd$0$i$i1534;
            $__nd$0$i$i1534$lcssa8394 = $__nd$0$i$i1534;
            label = 1236;
            break;
           } else $__nd$0$be$in$i$i1536 = $4029;
          } else {
           if ($4027 >>> 0 >= $__k$val$i1533 >>> 0) {
            $__nd$0$i$i1534$lcssa = $__nd$0$i$i1534;
            label = 1242;
            break;
           }
           $4033 = $__nd$0$i$i1534 + 4 | 0;
           $4034 = HEAP32[$4033 >> 2] | 0;
           if (!$4034) {
            $$lcssa8395 = $4033;
            $__nd$0$i$i1534$lcssa8393 = $__nd$0$i$i1534;
            label = 1240;
            break;
           } else $__nd$0$be$in$i$i1536 = $4034;
          }
          $__nd$0$i$i1534 = $__nd$0$be$in$i$i1536;
         }
         if ((label | 0) == 1236) {
          label = 0;
          HEAP32[$__parent$i1532 >> 2] = $__nd$0$i$i1534$lcssa8394;
          $$0$i7$i1542 = $$lcssa8396;
          $4043 = $4025;
          $4047 = $__nd$0$i$i1534$lcssa8394;
          label = 1243;
          break;
         } else if ((label | 0) == 1240) {
          label = 0;
          HEAP32[$__parent$i1532 >> 2] = $__nd$0$i$i1534$lcssa8393;
          $$0$i7$i1542 = $$lcssa8395;
          $4043 = $4025;
          $4047 = $__nd$0$i$i1534$lcssa8393;
          label = 1243;
          break;
         } else if ((label | 0) == 1242) {
          label = 0;
          HEAP32[$__parent$i1532 >> 2] = $__nd$0$i$i1534$lcssa;
          if (!$__nd$0$i$i1534$lcssa) {
           $$0$i7$i1542 = $__parent$i1532;
           $4043 = $4025;
           $4047 = $__nd$0$i$i1534$lcssa;
           label = 1243;
           break;
          } else {
           $__r$0$i1546 = $__nd$0$i$i1534$lcssa;
           break;
          }
         }
        }
       } while (0);
       if ((label | 0) == 1241) {
        label = 0;
        HEAP32[$__parent$i1532 >> 2] = $276;
        $$0$i7$i1542 = $276;
        $4043 = $6156;
        $4047 = $277;
        label = 1243;
       }
       if ((label | 0) == 1243) {
        label = 0;
        __THREW__ = 0;
        $4039 = invoke_ii(67, 24) | 0;
        $4040 = __THREW__;
        __THREW__ = 0;
        if ($4040 & 1) {
         label = 1249;
         break L1;
        }
        HEAP32[$4039 + 16 >> 2] = $4043;
        HEAP32[$4039 + 20 >> 2] = 0;
        HEAP32[$4039 >> 2] = 0;
        HEAP32[$4039 + 4 >> 2] = 0;
        HEAP32[$4039 + 8 >> 2] = $4047;
        HEAP32[$$0$i7$i1542 >> 2] = $4039;
        $4049 = HEAP32[HEAP32[$bindings83 >> 2] >> 2] | 0;
        if (!$4049) $4053 = $4039; else {
         HEAP32[$bindings83 >> 2] = $4049;
         $4053 = HEAP32[$$0$i7$i1542 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$274 >> 2] | 0, $4053);
        HEAP32[$275 >> 2] = (HEAP32[$275 >> 2] | 0) + 1;
        $__r$0$i1546 = $4039;
       }
       HEAP32[$__r$0$i1546 + 20 >> 2] = $3946;
       __THREW__ = 0;
       invoke_viiiiii(10, $198 | 0, $3211 | 0, $3909 | 0, HEAP32[$3909 + 20 >> 2] | 0, HEAP32[$3909 + 24 >> 2] | 0, $bindings83 | 0);
       $4061 = __THREW__;
       __THREW__ = 0;
       if ($4061 & 1) {
        label = 1249;
        break L1;
       }
       $4064 = HEAP32[$3909 + 40 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$276 >> 2] | 0);
       $$2138$ph = 0;
       $$414$ph = $4064;
       label = 1486;
       break;
      }
     case 13:
      {
       HEAP32[$112 >> 2] = 0;
       HEAP32[$278 >> 2] = 0;
       HEAP32[$279 >> 2] = 0;
       __THREW__ = 0;
       $4069 = invoke_ii(67, 8) | 0;
       $4070 = __THREW__;
       __THREW__ = 0;
       if ($4070 & 1) {
        label = 1252;
        break L1;
       }
       HEAP32[$112 >> 2] = $4069;
       HEAP32[$280 >> 2] = $4069 + 8;
       HEAP32[$4069 >> 2] = 18;
       HEAP32[$4069 + 4 >> 2] = 19;
       HEAP32[$278 >> 2] = $4069 + 8;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 13, $args68 | 0, $112 | 0);
       $4075 = __THREW__;
       __THREW__ = 0;
       if ($4075 & 1) {
        $$lcssa8757 = $4069;
        label = 1267;
        break L1;
       }
       HEAP32[$278 >> 2] = $4069;
       __ZdlPv($4069);
       $args68$idx378$val = HEAP32[$args68 >> 2] | 0;
       $4082 = HEAP32[$args68$idx378$val + 24 >> 2] | 0;
       __THREW__ = 0;
       invoke_vii(61, $113 | 0, HEAP32[$args68$idx378$val + 8 >> 2] | 0);
       $4083 = __THREW__;
       __THREW__ = 0;
       if ($4083 & 1) {
        label = 940;
        break L1;
       }
       $4085 = HEAP32[$113 >> 2] | 0;
       L1089 : do if (($4085 | 0) == ($281 | 0)) $found$0$off0 = 0; else {
        $4087 = $4082 + 8 | 0;
        $4088 = HEAP8[$4087 >> 0] | 0;
        $4090 = ($4088 & 1) == 0;
        $4095 = $4090 ? ($4088 & 255) >>> 1 : HEAP32[$4082 + 12 >> 2] | 0;
        $4096 = $4082 + 16 | 0;
        $4097 = $4087 + 1 | 0;
        $4098 = ($4095 | 0) == 0;
        if ($4090) {
         $4100 = $4085;
         while (1) {
          $4101 = HEAP32[$4100 + 16 >> 2] | 0;
          $4102 = HEAP8[$4101 >> 0] | 0;
          $4104 = ($4102 & 1) == 0;
          L1094 : do if ((($4104 ? ($4102 & 255) >>> 1 : HEAP32[$4101 + 4 >> 2] | 0) | 0) == ($4095 | 0)) {
           $4114 = $4104 ? $4101 + 1 | 0 : HEAP32[$4101 + 8 >> 2] | 0;
           if (!$4104) if (!(_memcmp($4114, $4097, $4095) | 0)) {
            $found$0$off0 = 1;
            break L1089;
           } else break;
           if ($4098) {
            $found$0$off0 = 1;
            break L1089;
           } else {
            $__lhs_sz$03$i$us = $4095;
            $__lp$04$i$us = $4114;
            $__rp$05$i$us = $4097;
           }
           while (1) {
            if ((HEAP8[$__lp$04$i$us >> 0] | 0) != (HEAP8[$__rp$05$i$us >> 0] | 0)) break L1094;
            $__lhs_sz$03$i$us = $__lhs_sz$03$i$us + -1 | 0;
            if (!$__lhs_sz$03$i$us) {
             $found$0$off0 = 1;
             break L1089;
            } else {
             $__lp$04$i$us = $__lp$04$i$us + 1 | 0;
             $__rp$05$i$us = $__rp$05$i$us + 1 | 0;
            }
           }
          } while (0);
          $4121 = HEAP32[$4100 + 4 >> 2] | 0;
          if (!$4121) {
           $$0$i$i1573$us = $4100;
           while (1) {
            $4126 = HEAP32[$$0$i$i1573$us + 8 >> 2] | 0;
            if ((HEAP32[$4126 >> 2] | 0) == ($$0$i$i1573$us | 0)) {
             $$01$i$i1575$us = $4126;
             break;
            } else $$0$i$i1573$us = $4126;
           }
          } else {
           $$0$i$i$i1572$us = $4121;
           while (1) {
            $4123 = HEAP32[$$0$i$i$i1572$us >> 2] | 0;
            if (!$4123) {
             $$01$i$i1575$us = $$0$i$i$i1572$us;
             break;
            } else $$0$i$i$i1572$us = $4123;
           }
          }
          if (($$01$i$i1575$us | 0) == ($281 | 0)) {
           $found$0$off0 = 0;
           break;
          } else $4100 = $$01$i$i1575$us;
         }
        } else {
         $4137 = $4085;
         while (1) {
          $4138 = HEAP32[$4137 + 16 >> 2] | 0;
          $4139 = HEAP8[$4138 >> 0] | 0;
          $4141 = ($4139 & 1) == 0;
          L1112 : do if ((($4141 ? ($4139 & 255) >>> 1 : HEAP32[$4138 + 4 >> 2] | 0) | 0) == ($4095 | 0)) {
           $4151 = $4141 ? $4138 + 1 | 0 : HEAP32[$4138 + 8 >> 2] | 0;
           $4152 = HEAP32[$4096 >> 2] | 0;
           if (!$4141) if (!(_memcmp($4151, $4152, $4095) | 0)) {
            $found$0$off0 = 1;
            break L1089;
           } else break;
           if ($4098) {
            $found$0$off0 = 1;
            break L1089;
           } else {
            $__lhs_sz$03$i = $4095;
            $__lp$04$i = $4151;
            $__rp$05$i = $4152;
           }
           while (1) {
            if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) break L1112;
            $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
            if (!$__lhs_sz$03$i) {
             $found$0$off0 = 1;
             break L1089;
            } else {
             $__lp$04$i = $__lp$04$i + 1 | 0;
             $__rp$05$i = $__rp$05$i + 1 | 0;
            }
           }
          } while (0);
          $4163 = HEAP32[$4137 + 4 >> 2] | 0;
          if (!$4163) {
           $$0$i$i1573 = $4137;
           while (1) {
            $4168 = HEAP32[$$0$i$i1573 + 8 >> 2] | 0;
            if ((HEAP32[$4168 >> 2] | 0) == ($$0$i$i1573 | 0)) {
             $$01$i$i1575 = $4168;
             break;
            } else $$0$i$i1573 = $4168;
           }
          } else {
           $$0$i$i$i1572 = $4163;
           while (1) {
            $4165 = HEAP32[$$0$i$i$i1572 >> 2] | 0;
            if (!$4165) {
             $$01$i$i1575 = $$0$i$i$i1572;
             break;
            } else $$0$i$i$i1572 = $4165;
           }
          }
          if (($$01$i$i1575 | 0) == ($281 | 0)) {
           $found$0$off0 = 0;
           break;
          } else $4137 = $$01$i$i1575;
         }
        }
       } while (0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($113, HEAP32[$281 >> 2] | 0);
       HEAP32[$218 >> 2] = 1;
       HEAP8[$205 >> 0] = $found$0$off0;
       HEAP8[$219 >> 0] = HEAP8[$$sroa$32403 >> 0] | 0;
       HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32403 + 1 >> 0] | 0;
       HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32403 + 2 >> 0] | 0;
       HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32403 + 3 >> 0] | 0;
       HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32403 + 4 >> 0] | 0;
       HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32403 + 5 >> 0] | 0;
       HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32403 + 6 >> 0] | 0;
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 14:
      {
       $args68$idx$val = HEAP32[$args68 >> 2] | 0;
       if (((HEAP32[$231 >> 2] | 0) - $args68$idx$val | 0) != 16) {
        $$lcssa8612 = $3211;
        label = 1281;
        break L1;
       }
       $4188 = HEAP32[$args68$idx$val + 8 >> 2] | 0;
       switch (HEAP32[$args68$idx$val >> 2] | 0) {
       case 18:
        {
         __THREW__ = 0;
         invoke_vii(61, $fields88 | 0, $4188 | 0);
         $4190 = __THREW__;
         __THREW__ = 0;
         if ($4190 & 1) {
          label = 940;
          break L1;
         }
         $4193 = +((HEAP32[$282 >> 2] | 0) >>> 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $4193;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields88, HEAP32[$283 >> 2] | 0);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 16:
        {
         $4200 = +((HEAP32[$4188 + 12 >> 2] | 0) - (HEAP32[$4188 + 8 >> 2] | 0) >> 2 >>> 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $4200;
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 19:
        {
         $4202 = HEAP8[$4188 + 8 >> 0] | 0;
         if (!($4202 & 1)) $4210 = ($4202 & 255) >>> 1; else $4210 = HEAP32[$4188 + 12 >> 2] | 0;
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = +($4210 >>> 0);
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       case 17:
        {
         $4211 = $4188 + 28 | 0;
         $4219 = +((HEAP32[$4211 + 4 >> 2] | 0) - (HEAP32[$4211 >> 2] | 0) >> 2 >>> 0);
         HEAP32[$218 >> 2] = 2;
         HEAPF64[$223 >> 3] = $4219;
         $$2138$ph = 1;
         $$414$ph = $$111$ph4097;
         label = 1486;
         break L792;
         break;
        }
       default:
        {
         $$lcssa8613 = $3211;
         label = 1296;
         break L1;
        }
       }
       break;
      }
     case 15:
      {
       HEAP32[$117 >> 2] = 0;
       HEAP32[$284 >> 2] = 0;
       HEAP32[$285 >> 2] = 0;
       __THREW__ = 0;
       $4235 = invoke_ii(67, 4) | 0;
       $4236 = __THREW__;
       __THREW__ = 0;
       if ($4236 & 1) {
        label = 1306;
        break L1;
       }
       HEAP32[$117 >> 2] = $4235;
       HEAP32[$286 >> 2] = $4235 + 4;
       HEAP32[$4235 >> 2] = 18;
       HEAP32[$284 >> 2] = $4235 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 15, $args68 | 0, $117 | 0);
       $4240 = __THREW__;
       __THREW__ = 0;
       if ($4240 & 1) {
        $$lcssa8752 = $4235;
        label = 1310;
        break L1;
       }
       HEAP32[$284 >> 2] = $4235;
       __ZdlPv($4235);
       $4245 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
       HEAP32[$287 >> 2] = 0;
       HEAP32[$288 >> 2] = 0;
       HEAP32[$fields90 >> 2] = $289;
       __THREW__ = 0;
       invoke_vii(61, $118 | 0, $4245 | 0);
       $4246 = __THREW__;
       __THREW__ = 0;
       if ($4246 & 1) {
        label = 1312;
        break L1;
       }
       $4248 = HEAP32[$118 >> 2] | 0;
       if (($4248 | 0) != ($290 | 0)) {
        $4263 = $4248;
        while (1) {
         __THREW__ = 0;
         invoke_viii(9, $6 | 0, $fields90 | 0, HEAP32[$4263 + 16 >> 2] | 0);
         $4265 = __THREW__;
         __THREW__ = 0;
         if ($4265 & 1) {
          label = 1314;
          break L1;
         }
         $4268 = HEAP32[$4263 + 4 >> 2] | 0;
         if (!$4268) {
          $$0$i$i1611 = $4263;
          while (1) {
           $4273 = HEAP32[$$0$i$i1611 + 8 >> 2] | 0;
           if ((HEAP32[$4273 >> 2] | 0) == ($$0$i$i1611 | 0)) {
            $$01$i$i1614 = $4273;
            break;
           } else $$0$i$i1611 = $4273;
          }
         } else {
          $$0$i$i$i1609 = $4268;
          while (1) {
           $4270 = HEAP32[$$0$i$i$i1609 >> 2] | 0;
           if (!$4270) {
            $$01$i$i1614 = $$0$i$i$i1609;
            break;
           } else $$0$i$i$i1609 = $4270;
          }
         }
         if (($$01$i$i1614 | 0) == ($290 | 0)) break; else $4263 = $$01$i$i1614;
        }
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($118, HEAP32[$290 >> 2] | 0);
       HEAP32[$120 >> 2] = 0;
       HEAP32[$291 >> 2] = 0;
       HEAP32[$292 >> 2] = 0;
       __THREW__ = 0;
       invoke_viii(11, $119 | 0, $this | 0, $120 | 0);
       $4251 = __THREW__;
       __THREW__ = 0;
       if ($4251 & 1) {
        label = 1342;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$119 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$119 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$119 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$119 + 12 >> 2];
       $$pre5074 = HEAP32[$205 >> 2] | 0;
       $$pre5075 = HEAP32[$fields90 >> 2] | 0;
       $4277 = $$pre5074 + 8 | 0;
       if (($$pre5075 | 0) != ($289 | 0)) {
        $4279 = $$pre5074 + 12 | 0;
        $4280 = $$pre5074 + 16 | 0;
        $4282 = $$pre5075;
        while (1) {
         $4281 = $4282 + 16 | 0;
         __THREW__ = 0;
         $4284 = invoke_iii(31, $this | 0, HEAP32[$206 >> 2] | 0) | 0;
         $4285 = __THREW__;
         __THREW__ = 0;
         if ($4285 & 1) {
          label = 1311;
          break L1;
         }
         $4287 = $4284;
         $4288 = HEAP32[$4279 >> 2] | 0;
         do if (($4288 | 0) == (HEAP32[$4280 >> 2] | 0)) {
          $this$idx2$val$i$i1622 = HEAP32[$4277 >> 2] | 0;
          $4294 = $this$idx2$val$i$i1622;
          $4297 = ($4288 - $4294 >> 2) + 1 | 0;
          if ($4297 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(175, $4277 | 0);
           $4299 = __THREW__;
           __THREW__ = 0;
           if ($4299 & 1) {
            label = 1311;
            break L1;
           }
           $$idx$val$i$i$pre$i$i1623 = HEAP32[$4277 >> 2] | 0;
           $$idx1$val$i$i$i$i1625 = HEAP32[$4280 >> 2] | 0;
           $4304 = $$idx$val$i$i$pre$i$i1623;
           $4332 = $$idx$val$i$i$pre$i$i1623;
          } else {
           $$idx1$val$i$i$i$i1625 = $4288;
           $4304 = $this$idx2$val$i$i1622;
           $4332 = $4294;
          }
          $4303 = $4304;
          $4305 = $$idx1$val$i$i$i$i1625 - $4303 | 0;
          if ($4305 >> 2 >>> 0 < 536870911) {
           $4311 = $4305 >> 1;
           $4313 = $4311 >>> 0 < $4297 >>> 0 ? $4297 : $4311;
           $4315 = (HEAP32[$4279 >> 2] | 0) - $4303 | 0;
           $4316 = $4315 >> 2;
           if (!$4313) {
            $$0$i8$i$i1631 = 0;
            $4323 = 0;
            $4324 = $4316;
            $4330 = $4315;
           } else {
            $$0$i7$i$i1630 = $4313;
            $6158 = $4316;
            $6159 = $4315;
            label = 1332;
           }
          } else {
           $4309 = (HEAP32[$4279 >> 2] | 0) - $4303 | 0;
           $$0$i7$i$i1630 = 1073741823;
           $6158 = $4309 >> 2;
           $6159 = $4309;
           label = 1332;
          }
          if ((label | 0) == 1332) {
           label = 0;
           __THREW__ = 0;
           $4319 = invoke_ii(67, $$0$i7$i$i1630 << 2 | 0) | 0;
           $4320 = __THREW__;
           __THREW__ = 0;
           if ($4320 & 1) {
            label = 1311;
            break L1;
           }
           $$0$i8$i$i1631 = $$0$i7$i$i1630;
           $4323 = $4319;
           $4324 = $6158;
           $4330 = $6159;
          }
          HEAP32[$4323 + ($4324 << 2) >> 2] = $4287;
          _memcpy($4323 | 0, $4304 | 0, $4330 | 0) | 0;
          HEAP32[$4277 >> 2] = $4323;
          HEAP32[$4279 >> 2] = $4323 + ($4324 + 1 << 2);
          HEAP32[$4280 >> 2] = $4323 + ($$0$i8$i$i1631 << 2);
          if (!$4332) break;
          __ZdlPv($4332);
         } else {
          HEAP32[$4288 >> 2] = $4287;
          HEAP32[$4279 >> 2] = (HEAP32[$4279 >> 2] | 0) + 4;
         } while (0);
         __THREW__ = 0;
         invoke_viii(13, $121 | 0, $this | 0, $4281 | 0);
         $4334 = __THREW__;
         __THREW__ = 0;
         if ($4334 & 1) {
          label = 1311;
          break L1;
         }
         $4336 = $4284 + 8 | 0;
         HEAP32[$4336 >> 2] = HEAP32[$121 >> 2];
         HEAP32[$4336 + 4 >> 2] = HEAP32[$121 + 4 >> 2];
         HEAP32[$4336 + 8 >> 2] = HEAP32[$121 + 8 >> 2];
         HEAP32[$4336 + 12 >> 2] = HEAP32[$121 + 12 >> 2];
         HEAP8[$4284 + 5 >> 0] = 1;
         HEAP32[$4284 + 40 >> 2] = 0;
         $4339 = $4284 + 28 | 0;
         $4340 = $4284 + 32 | 0;
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4339, HEAP32[$4340 >> 2] | 0);
         HEAP32[$4284 + 36 >> 2] = 0;
         HEAP32[$4339 >> 2] = $4340;
         HEAP32[$4340 >> 2] = 0;
         $4344 = HEAP32[$4282 + 4 >> 2] | 0;
         if (!$4344) {
          $$0$i$i1639 = $4282;
          while (1) {
           $4349 = HEAP32[$$0$i$i1639 + 8 >> 2] | 0;
           if ((HEAP32[$4349 >> 2] | 0) == ($$0$i$i1639 | 0)) {
            $$01$i$i1642 = $4349;
            break;
           } else $$0$i$i1639 = $4349;
          }
         } else {
          $$0$i$i$i1637 = $4344;
          while (1) {
           $4346 = HEAP32[$$0$i$i$i1637 >> 2] | 0;
           if (!$4346) {
            $$01$i$i1642 = $$0$i$i$i1637;
            break;
           } else $$0$i$i$i1637 = $4346;
          }
         }
         if (($$01$i$i1642 | 0) == ($289 | 0)) break; else $4282 = $$01$i$i1642;
        }
       }
       __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$289 >> 2] | 0);
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 16:
      {
       HEAP32[$122 >> 2] = 0;
       HEAP32[$293 >> 2] = 0;
       HEAP32[$294 >> 2] = 0;
       __THREW__ = 0;
       $4357 = invoke_ii(67, 4) | 0;
       $4358 = __THREW__;
       __THREW__ = 0;
       if ($4358 & 1) {
        label = 1347;
        break L1;
       }
       HEAP32[$122 >> 2] = $4357;
       HEAP32[$295 >> 2] = $4357 + 4;
       HEAP32[$4357 >> 2] = 19;
       HEAP32[$293 >> 2] = $4357 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 16, $args68 | 0, $122 | 0);
       $4362 = __THREW__;
       __THREW__ = 0;
       if ($4362 & 1) {
        $$lcssa8748 = $4357;
        label = 1368;
        break L1;
       }
       HEAP32[$293 >> 2] = $4357;
       __ZdlPv($4357);
       $4367 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
       $4368 = $4367 + 8 | 0;
       $4369 = HEAP8[$4368 >> 0] | 0;
       $4371 = ($4369 & 1) == 0;
       if ($4371) $4377 = ($4369 & 255) >>> 1; else $4377 = HEAP32[$4367 + 12 >> 2] | 0;
       if (($4377 | 0) != 1) {
        $$lcssa8605 = $3211;
        $$lcssa8750 = $4367;
        $$lcssa8751 = $4368;
        label = 1352;
        break L1;
       }
       if ($4371) $4432 = $4368 + 1 | 0; else $4432 = HEAP32[$4367 + 16 >> 2] | 0;
       $4433 = +(HEAPU8[$4432 >> 0] | 0);
       HEAP32[$218 >> 2] = 2;
       HEAPF64[$223 >> 3] = $4433;
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 17:
      {
       HEAP32[$124 >> 2] = 0;
       HEAP32[$296 >> 2] = 0;
       HEAP32[$297 >> 2] = 0;
       __THREW__ = 0;
       $4434 = invoke_ii(67, 4) | 0;
       $4435 = __THREW__;
       __THREW__ = 0;
       if ($4435 & 1) {
        label = 1380;
        break L1;
       }
       HEAP32[$124 >> 2] = $4434;
       HEAP32[$298 >> 2] = $4434 + 4;
       HEAP32[$4434 >> 2] = 2;
       HEAP32[$296 >> 2] = $4434 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 17, $args68 | 0, $124 | 0);
       $4439 = __THREW__;
       __THREW__ = 0;
       if ($4439 & 1) {
        $$lcssa8741 = $4434;
        label = 1395;
        break L1;
       }
       HEAP32[$296 >> 2] = $4434;
       __ZdlPv($4434);
       $4445 = ~~+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3] >>> 0;
       if (($4445 | 0) < 0) {
        $$lcssa8600 = $3211;
        $$lcssa8745 = $4445;
        label = 1382;
        break L1;
       }
       if (($4445 | 0) > 127) {
        $$lcssa8601 = $3211;
        $$lcssa8746 = $4445;
        label = 1402;
        break L1;
       }
       HEAP8[$c105 >> 0] = $4445;
       __THREW__ = 0;
       invoke_viii(3, $128 | 0, $c105 | 0, 1);
       $4533 = __THREW__;
       __THREW__ = 0;
       if ($4533 & 1) {
        label = 940;
        break L1;
       }
       __THREW__ = 0;
       invoke_viii(13, $127 | 0, $this | 0, $128 | 0);
       $4535 = __THREW__;
       __THREW__ = 0;
       if ($4535 & 1) {
        label = 1424;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$127 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$127 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$127 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$127 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 18:
      {
       HEAP32[$129 >> 2] = 0;
       HEAP32[$299 >> 2] = 0;
       HEAP32[$300 >> 2] = 0;
       __THREW__ = 0;
       $4539 = invoke_ii(67, 4) | 0;
       $4540 = __THREW__;
       __THREW__ = 0;
       if ($4540 & 1) {
        label = 1427;
        break L1;
       }
       HEAP32[$129 >> 2] = $4539;
       HEAP32[$301 >> 2] = $4539 + 4;
       HEAP32[$4539 >> 2] = 2;
       HEAP32[$299 >> 2] = $4539 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 18, $args68 | 0, $129 | 0);
       $4544 = __THREW__;
       __THREW__ = 0;
       if ($4544 & 1) {
        $$lcssa8740 = $4539;
        label = 1430;
        break L1;
       }
       HEAP32[$299 >> 2] = $4539;
       __ZdlPv($4539);
       $4550 = +Math_log(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $130 | 0, $this | 0, $3211 | 0, +$4550);
       $4551 = __THREW__;
       __THREW__ = 0;
       if ($4551 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$130 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$130 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$130 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$130 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 19:
      {
       HEAP32[$131 >> 2] = 0;
       HEAP32[$302 >> 2] = 0;
       HEAP32[$303 >> 2] = 0;
       __THREW__ = 0;
       $4555 = invoke_ii(67, 4) | 0;
       $4556 = __THREW__;
       __THREW__ = 0;
       if ($4556 & 1) {
        label = 1433;
        break L1;
       }
       HEAP32[$131 >> 2] = $4555;
       HEAP32[$304 >> 2] = $4555 + 4;
       HEAP32[$4555 >> 2] = 2;
       HEAP32[$302 >> 2] = $4555 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 19, $args68 | 0, $131 | 0);
       $4560 = __THREW__;
       __THREW__ = 0;
       if ($4560 & 1) {
        $$lcssa8739 = $4555;
        label = 1436;
        break L1;
       }
       HEAP32[$302 >> 2] = $4555;
       __ZdlPv($4555);
       $4566 = +Math_exp(+(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3]));
       __THREW__ = 0;
       invoke_viiid(1, $132 | 0, $this | 0, $3211 | 0, +$4566);
       $4567 = __THREW__;
       __THREW__ = 0;
       if ($4567 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$132 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$132 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$132 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$132 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 20:
      {
       HEAP32[$133 >> 2] = 0;
       HEAP32[$305 >> 2] = 0;
       HEAP32[$306 >> 2] = 0;
       __THREW__ = 0;
       $4571 = invoke_ii(67, 4) | 0;
       $4572 = __THREW__;
       __THREW__ = 0;
       if ($4572 & 1) {
        label = 1439;
        break L1;
       }
       HEAP32[$133 >> 2] = $4571;
       HEAP32[$307 >> 2] = $4571 + 4;
       HEAP32[$4571 >> 2] = 2;
       HEAP32[$305 >> 2] = $4571 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 20, $args68 | 0, $133 | 0);
       $4576 = __THREW__;
       __THREW__ = 0;
       if ($4576 & 1) {
        $$lcssa8738 = $4571;
        label = 1442;
        break L1;
       }
       HEAP32[$305 >> 2] = $4571;
       __ZdlPv($4571);
       $4582 = +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp);
       __THREW__ = 0;
       invoke_viiid(1, $134 | 0, $this | 0, $3211 | 0, +$4582);
       $4583 = __THREW__;
       __THREW__ = 0;
       if ($4583 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$134 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$134 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$134 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$134 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 21:
      {
       HEAP32[$135 >> 2] = 0;
       HEAP32[$308 >> 2] = 0;
       HEAP32[$309 >> 2] = 0;
       __THREW__ = 0;
       $4587 = invoke_ii(67, 4) | 0;
       $4588 = __THREW__;
       __THREW__ = 0;
       if ($4588 & 1) {
        label = 1445;
        break L1;
       }
       HEAP32[$135 >> 2] = $4587;
       HEAP32[$310 >> 2] = $4587 + 4;
       HEAP32[$4587 >> 2] = 2;
       HEAP32[$308 >> 2] = $4587 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 21, $args68 | 0, $135 | 0);
       $4592 = __THREW__;
       __THREW__ = 0;
       if ($4592 & 1) {
        $$lcssa8737 = $4587;
        label = 1448;
        break L1;
       }
       HEAP32[$308 >> 2] = $4587;
       __ZdlPv($4587);
       +_frexp(+HEAPF64[(HEAP32[$args68 >> 2] | 0) + 8 >> 3], $exp106);
       __THREW__ = 0;
       invoke_viiid(1, $136 | 0, $this | 0, $3211 | 0, +(+(HEAP32[$exp106 >> 2] | 0)));
       $4600 = __THREW__;
       __THREW__ = 0;
       if ($4600 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$136 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$136 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$136 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$136 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 22:
      {
       HEAP32[$137 >> 2] = 0;
       HEAP32[$311 >> 2] = 0;
       HEAP32[$312 >> 2] = 0;
       __THREW__ = 0;
       $4604 = invoke_ii(67, 8) | 0;
       $4605 = __THREW__;
       __THREW__ = 0;
       if ($4605 & 1) {
        label = 1451;
        break L1;
       }
       HEAP32[$137 >> 2] = $4604;
       HEAP32[$313 >> 2] = $4604 + 8;
       HEAP32[$4604 >> 2] = 2;
       HEAP32[$4604 + 4 >> 2] = 2;
       HEAP32[$311 >> 2] = $4604 + 8;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 22, $args68 | 0, $137 | 0);
       $4610 = __THREW__;
       __THREW__ = 0;
       if ($4610 & 1) {
        $$lcssa8735 = $4604;
        label = 1456;
        break L1;
       }
       HEAP32[$311 >> 2] = $4604;
       __ZdlPv($4604);
       $args68$idx391$val = HEAP32[$args68 >> 2] | 0;
       $4615 = +HEAPF64[$args68$idx391$val + 24 >> 3];
       if ($4615 == 0.0) {
        $$lcssa8589 = $3211;
        label = 1453;
        break L1;
       }
       $4631 = +_fmod(+HEAPF64[$args68$idx391$val + 8 >> 3], $4615);
       __THREW__ = 0;
       invoke_viiid(1, $139 | 0, $this | 0, $3211 | 0, +$4631);
       $4632 = __THREW__;
       __THREW__ = 0;
       if ($4632 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$139 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$139 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$139 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$139 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     case 23:
      {
       HEAP32[$140 >> 2] = 0;
       HEAP32[$314 >> 2] = 0;
       HEAP32[$315 >> 2] = 0;
       __THREW__ = 0;
       $4634 = invoke_ii(67, 4) | 0;
       $4635 = __THREW__;
       __THREW__ = 0;
       if ($4635 & 1) {
        label = 1464;
        break L1;
       }
       HEAP32[$140 >> 2] = $4634;
       HEAP32[$316 >> 2] = $4634 + 4;
       HEAP32[$4634 >> 2] = 19;
       HEAP32[$314 >> 2] = $4634 + 4;
       __THREW__ = 0;
       invoke_viiiii(7, $this | 0, $3211 | 0, 23, $args68 | 0, $140 | 0);
       $4639 = __THREW__;
       __THREW__ = 0;
       if ($4639 & 1) {
        $$lcssa8731 = $4634;
        label = 1470;
        break L1;
       }
       HEAP32[$314 >> 2] = $4634;
       __ZdlPv($4634);
       $4644 = HEAP32[(HEAP32[$args68 >> 2] | 0) + 8 >> 2] | 0;
       $4645 = $4644 + 8 | 0;
       if ((__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_($317, $4645) | 0) == ($318 | 0)) {
        $$lcssa8585 = $3211;
        $$lcssa8733 = $4644;
        $$lcssa8734 = $4645;
        label = 1466;
        break L1;
       }
       __THREW__ = 0;
       $4678 = invoke_iii(29, $317 | 0, $4645 | 0) | 0;
       $4679 = __THREW__;
       __THREW__ = 0;
       if ($4679 & 1) {
        label = 940;
        break L1;
       }
       __THREW__ = 0;
       invoke_viii(13, $142 | 0, $this | 0, $4678 | 0);
       $4681 = __THREW__;
       __THREW__ = 0;
       if ($4681 & 1) {
        label = 940;
        break L1;
       };
       HEAP32[$204 >> 2] = HEAP32[$142 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$142 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$142 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$142 + 12 >> 2];
       $$2138$ph = 1;
       $$414$ph = $$111$ph4097;
       label = 1486;
       break;
      }
     default:
      {
       $$lcssa8657 = $3213;
       label = 1477;
       break L1;
      }
     } while (0);
     if ((label | 0) == 1486) {
      label = 0;
      $$2138 = $$2138$ph;
      $$414 = $$414$ph;
      $4713 = HEAP32[$args68 >> 2] | 0;
     }
     $4714 = $4713;
     if ($4713) {
      $4715 = HEAP32[$231 >> 2] | 0;
      if (($4715 | 0) != ($4713 | 0)) HEAP32[$231 >> 2] = $4715 + (~(($4715 + -16 - $4714 | 0) >>> 4) << 4);
      __ZdlPv($4713);
     }
     if ($$2138) {
      $$515 = $$414;
      label = 2026;
     } else {
      $$010 = $$414;
      continue L1;
     }
     break;
    }
   case 1498:
    {
     label = 0;
     $4745 = HEAP32[$$idx$val$i860$lcssa8251 + -28 >> 2] | 0;
     if (!$4745) {
      $$515 = $$111$ph4097;
      label = 2026;
     } else {
      $4747 = ___dynamic_cast($4745, 448, 504, 0) | 0;
      if ($4747) {
       $4749 = $4747 + 8 | 0;
       HEAP32[$4749 >> 2] = HEAP32[$204 >> 2];
       HEAP32[$4749 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
       HEAP32[$4749 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
       HEAP32[$4749 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
       HEAP8[$4747 + 5 >> 0] = 1;
       HEAP32[$4747 + 40 >> 2] = 0;
       $4752 = $4747 + 28 | 0;
       $4753 = $4747 + 32 | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4752, HEAP32[$4753 >> 2] | 0);
       HEAP32[$4747 + 36 >> 2] = 0;
       HEAP32[$4752 >> 2] = $4753;
       HEAP32[$4753 >> 2] = 0;
       $$515 = $$111$ph4097;
       label = 2026;
       break;
      }
      $4756 = ___dynamic_cast($4745, 448, 528, 0) | 0;
      if (!$4756) {
       $$515 = $$111$ph4097;
       label = 2026;
      } else {
       $4758 = $$idx$val$i860$lcssa8251 + -56 | 0;
       $4759 = HEAP32[$4758 >> 2] | 0;
       $$idx260$val = HEAP32[$$idx$val$i860$lcssa8251 + -40 >> 2] | 0;
       $$idx261 = $$idx$val$i860$lcssa8251 + -36 | 0;
       $$idx261$val = HEAP32[$$idx261 >> 2] | 0;
       $4761 = $$idx260$val;
       $4763 = $$idx261$val - $4761 >> 2;
       if ($4759 >>> 0 < $4763 >>> 0) {
        HEAP32[$4758 >> 2] = $4759 + 1;
        $4767 = HEAP32[$$idx260$val + ($4759 << 2) >> 2] | 0;
        if (!(HEAP8[$4767 + 5 >> 0] | 0)) {
         $$idx$val$i860$lcssa8251$lcssa8266 = $$idx$val$i860$lcssa8251;
         $$lcssa8503 = $4767;
         label = 1504;
         break L531;
        } else {
         $$515 = $$111$ph4097;
         label = 2026;
         break;
        }
       } else if (!$4763) {
        $$515 = $$111$ph4097;
        label = 2026;
        break;
       } else {
        $$idx260$val$lcssa = $$idx260$val;
        $$idx261$lcssa = $$idx261;
        $$idx261$val$lcssa = $$idx261$val;
        $$lcssa8494 = $4756;
        $$lcssa8496 = $4758;
        $$lcssa8501 = $4761;
        label = 1506;
        break L531;
       }
      }
     }
     break;
    }
   case 1509:
    {
     label = 0;
     $4793 = (__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, (HEAP32[$$idx$val$i860$lcssa8252 + -140 >> 2] | 0) + 4 | 0, $$idx$val$i860$lcssa8252 + -104 | 0, $$idx$val$i860$lcssa8252 + -88 | 0) | 0) & 1;
     HEAP32[$218 >> 2] = 1;
     HEAP8[$205 >> 0] = $4793;
     HEAP8[$219 >> 0] = HEAP8[$$sroa$32363 >> 0] | 0;
     HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$32363 + 1 >> 0] | 0;
     HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$32363 + 2 >> 0] | 0;
     HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$32363 + 3 >> 0] | 0;
     HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$32363 + 4 >> 0] | 0;
     HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$32363 + 5 >> 0] | 0;
     HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$32363 + 6 >> 0] | 0;
     $$515 = $$111$ph4097;
     label = 2026;
     break;
    }
   case 1538:
    {
     label = 0;
     $4856 = HEAP32[$$idx$val$i860$lcssa8255 + -140 >> 2] | 0;
     switch (HEAP32[$$idx$val$i860$lcssa8255 + -104 >> 2] | 0) {
     case 18:
      {
       $$idx$val$i860$lcssa8255$lcssa8267 = $$idx$val$i860$lcssa8255;
       $$lcssa8475 = $4856;
       label = 1576;
       break L531;
       break;
      }
     case 16:
      {
       if ((HEAP32[$204 >> 2] | 0) != 2) {
        $$lcssa8480 = $4856;
        label = 1540;
        break L1;
       }
       $4883 = HEAP32[$$idx$val$i860$lcssa8255 + -96 >> 2] | 0;
       $4885 = ~~+HEAPF64[$223 >> 3];
       $$idx256$val = HEAP32[$4883 + 8 >> 2] | 0;
       $4889 = (HEAP32[$4883 + 12 >> 2] | 0) - $$idx256$val >> 2;
       if (!(($4885 | 0) > -1 & ($4885 | 0) < ($4889 | 0))) {
        $$lcssa8481 = $4856;
        $$lcssa8489 = $4885;
        $$lcssa8491 = $4889;
        label = 1552;
        break L1;
       }
       $4943 = HEAP32[$$idx256$val + ($4885 << 2) >> 2] | 0;
       if (!(HEAP8[$4943 + 5 >> 0] | 0)) {
        $$lcssa8482 = $4856;
        $$lcssa8493 = $4943;
        label = 1575;
        break L531;
       }
       $4947 = $4943 + 8 | 0;
       HEAP32[$204 >> 2] = HEAP32[$4947 >> 2];
       HEAP32[$204 + 4 >> 2] = HEAP32[$4947 + 4 >> 2];
       HEAP32[$204 + 8 >> 2] = HEAP32[$4947 + 8 >> 2];
       HEAP32[$204 + 12 >> 2] = HEAP32[$4947 + 12 >> 2];
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     case 19:
      break;
     default:
      {
       label = 1641;
       break L1;
      }
     }
     $4999 = HEAP32[$$idx$val$i860$lcssa8255 + -96 >> 2] | 0;
     if (!$4999) {
      label = 1597;
      break L1;
     }
     if ((HEAP32[$204 >> 2] | 0) != 2) {
      $$lcssa8477 = $4856;
      label = 1599;
      break L1;
     }
     $5024 = $4999 + 8 | 0;
     $5025 = HEAP8[$5024 >> 0] | 0;
     $5027 = ($5025 & 1) == 0;
     if ($5027) $5036 = ($5025 & 255) >>> 1; else $5036 = HEAP32[$4999 + 12 >> 2] | 0;
     $5033 = ~~+HEAPF64[$223 >> 3];
     if (!(($5033 | 0) > -1 & ($5033 | 0) < ($5036 | 0))) {
      $$lcssa8478 = $4856;
      $$lcssa8485 = $5036;
      $$lcssa8487 = $5033;
      label = 1614;
      break L1;
     }
     if ($5027) $5091 = $5024 + 1 | 0; else $5091 = HEAP32[$4999 + 16 >> 2] | 0;
     HEAP8[$ch >> 0] = HEAP8[$5091 + $5033 >> 0] | 0;
     HEAP8[$320 >> 0] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($161, $ch, _strlen($ch) | 0);
     __THREW__ = 0;
     invoke_viii(13, $160 | 0, $this | 0, $161 | 0);
     $5094 = __THREW__;
     __THREW__ = 0;
     if ($5094 & 1) {
      label = 1640;
      break L1;
     };
     HEAP32[$204 >> 2] = HEAP32[$160 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$160 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$160 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$160 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
     $$515 = $$111$ph4097;
     label = 2026;
     break;
    }
   case 1658:
    {
     label = 0;
     $5143 = HEAP32[$$idx$val$i860$lcssa8258 + -140 >> 2] | 0;
     switch (HEAP32[$204 >> 2] | 0) {
     case 0:
      break;
     case 19:
      {
       $5156 = HEAP32[$205 >> 2] | 0;
       $5157 = $5156 + 8 | 0;
       $5158 = HEAP32[$330 >> 2] | 0;
       $5159 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($5158, $5157) | 0;
       if (($5159 | 0) == ($5158 + 4 | 0)) {
        $5164 = __Znwj(12) | 0;
        __THREW__ = 0;
        invoke_vii(40, $5164 | 0, $5157 | 0);
        $5165 = __THREW__;
        __THREW__ = 0;
        if ($5165 & 1) {
         $$lcssa8470 = $5164;
         label = 1669;
         break L1;
        }
        HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($5158, $5157) | 0) >> 2] = $5164;
        $$0$i1996 = $5164;
       } else $$0$i1996 = HEAP32[$5159 + 28 >> 2] | 0;
       $5170 = $$idx$val$i860$lcssa8258 + -68 | 0;
       $5171 = $$idx$val$i860$lcssa8258 + -64 | 0;
       $5172 = HEAP32[$5171 >> 2] | 0;
       $5173 = ($5172 | 0) == 0;
       if (!$5173) {
        $$0$ph6$i$i$i = $5171;
        $$01$ph5$i$i$i = $5172;
        L1281 : while (1) {
         $$013$i$i$i = $$01$ph5$i$i$i;
         while (1) {
          if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $$0$i1996 >>> 0) {
           $$013$i$i$i$lcssa = $$013$i$i$i;
           break;
          }
          $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
          if (!$$013$i$i$i) {
           $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i;
           break L1281;
          }
         }
         $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i) {
          $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa;
          break;
         } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i | 0) != ($5171 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 <= $$0$i1996 >>> 0) {
         $$lcssa8461 = $5143;
         $$lcssa8467 = $5156;
         $$lcssa8469 = $5157;
         label = 1677;
         break L1;
        }
       }
       $5216 = $$idx$val$i860$lcssa8258 + -72 | 0;
       $5219 = HEAP32[(HEAP32[$5216 >> 2] | 0) + 12 >> 2] | 0;
       $5220 = $$0$i1996;
       do if ($5173) {
        HEAP32[$0 >> 2] = $5171;
        $$0$i7$i2025 = $5171;
        $5244 = $5171;
        label = 1696;
       } else {
        $__nd$0$i$i2018 = $5172;
        while (1) {
         $5222 = HEAP32[$__nd$0$i$i2018 + 16 >> 2] | 0;
         if ($5222 >>> 0 > $$0$i1996 >>> 0) {
          $5224 = HEAP32[$__nd$0$i$i2018 >> 2] | 0;
          if (!$5224) {
           $$lcssa8376 = $__nd$0$i$i2018;
           $__nd$0$i$i2018$lcssa8374 = $__nd$0$i$i2018;
           label = 1689;
           break;
          } else $__nd$0$be$in$i$i2020 = $5224;
         } else {
          if ($5222 >>> 0 >= $$0$i1996 >>> 0) {
           $__nd$0$i$i2018$lcssa = $__nd$0$i$i2018;
           label = 1695;
           break;
          }
          $5228 = $__nd$0$i$i2018 + 4 | 0;
          $5229 = HEAP32[$5228 >> 2] | 0;
          if (!$5229) {
           $$lcssa8375 = $5228;
           $__nd$0$i$i2018$lcssa8373 = $__nd$0$i$i2018;
           label = 1693;
           break;
          } else $__nd$0$be$in$i$i2020 = $5229;
         }
         $__nd$0$i$i2018 = $__nd$0$be$in$i$i2020;
        }
        if ((label | 0) == 1689) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2018$lcssa8374;
         $$0$i7$i2025 = $$lcssa8376;
         $5244 = $__nd$0$i$i2018$lcssa8374;
         label = 1696;
         break;
        } else if ((label | 0) == 1693) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2018$lcssa8373;
         $$0$i7$i2025 = $$lcssa8375;
         $5244 = $__nd$0$i$i2018$lcssa8373;
         label = 1696;
         break;
        } else if ((label | 0) == 1695) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2018$lcssa;
         if (!$__nd$0$i$i2018$lcssa) {
          $$0$i7$i2025 = $0;
          $5244 = $__nd$0$i$i2018$lcssa;
          label = 1696;
          break;
         } else {
          $__r$0$i2027 = $__nd$0$i$i2018$lcssa;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 1696) {
        label = 0;
        $5235 = __Znwj(28) | 0;
        HEAP32[$5235 + 16 >> 2] = $5220;
        $5238 = $5235 + 20 | 0;
        HEAP32[$5238 >> 2] = 0;
        HEAP32[$5238 + 4 >> 2] = 0;
        HEAP32[$5235 >> 2] = 0;
        HEAP32[$5235 + 4 >> 2] = 0;
        HEAP32[$5235 + 8 >> 2] = $5244;
        HEAP32[$$0$i7$i2025 >> 2] = $5235;
        $5246 = HEAP32[HEAP32[$5170 >> 2] >> 2] | 0;
        if (!$5246) $5251 = $5235; else {
         HEAP32[$5170 >> 2] = $5246;
         $5251 = HEAP32[$$0$i7$i2025 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i860$lcssa8258 + -64 >> 2] | 0, $5251);
        $5252 = $$idx$val$i860$lcssa8258 + -60 | 0;
        HEAP32[$5252 >> 2] = (HEAP32[$5252 >> 2] | 0) + 1;
        $__r$0$i2027 = $5235;
       }
       HEAP32[$__r$0$i2027 + 20 >> 2] = $5219;
       $5258 = HEAP32[(HEAP32[$5216 >> 2] | 0) + 16 >> 2] | 0;
       $5259 = HEAP32[$5171 >> 2] | 0;
       do if (!$5259) {
        HEAP32[$0 >> 2] = $5171;
        $$0$i7$i2038 = $5171;
        $5284 = $5171;
        label = 1709;
       } else {
        $__nd$0$i$i2030 = $5259;
        while (1) {
         $5262 = HEAP32[$__nd$0$i$i2030 + 16 >> 2] | 0;
         if ($5262 >>> 0 > $$0$i1996 >>> 0) {
          $5264 = HEAP32[$__nd$0$i$i2030 >> 2] | 0;
          if (!$5264) {
           $$lcssa8380 = $__nd$0$i$i2030;
           $__nd$0$i$i2030$lcssa8378 = $__nd$0$i$i2030;
           label = 1702;
           break;
          } else $__nd$0$be$in$i$i2032 = $5264;
         } else {
          if ($5262 >>> 0 >= $$0$i1996 >>> 0) {
           $__nd$0$i$i2030$lcssa = $__nd$0$i$i2030;
           label = 1708;
           break;
          }
          $5268 = $__nd$0$i$i2030 + 4 | 0;
          $5269 = HEAP32[$5268 >> 2] | 0;
          if (!$5269) {
           $$lcssa8379 = $5268;
           $__nd$0$i$i2030$lcssa8377 = $__nd$0$i$i2030;
           label = 1706;
           break;
          } else $__nd$0$be$in$i$i2032 = $5269;
         }
         $__nd$0$i$i2030 = $__nd$0$be$in$i$i2032;
        }
        if ((label | 0) == 1702) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2030$lcssa8378;
         $$0$i7$i2038 = $$lcssa8380;
         $5284 = $__nd$0$i$i2030$lcssa8378;
         label = 1709;
         break;
        } else if ((label | 0) == 1706) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2030$lcssa8377;
         $$0$i7$i2038 = $$lcssa8379;
         $5284 = $__nd$0$i$i2030$lcssa8377;
         label = 1709;
         break;
        } else if ((label | 0) == 1708) {
         label = 0;
         HEAP32[$0 >> 2] = $__nd$0$i$i2030$lcssa;
         if (!$__nd$0$i$i2030$lcssa) {
          $$0$i7$i2038 = $0;
          $5284 = $__nd$0$i$i2030$lcssa;
          label = 1709;
          break;
         } else {
          $__r$0$i2042 = $__nd$0$i$i2030$lcssa;
          break;
         }
        }
       } while (0);
       if ((label | 0) == 1709) {
        label = 0;
        $5275 = __Znwj(28) | 0;
        HEAP32[$5275 + 16 >> 2] = $5220;
        $5278 = $5275 + 20 | 0;
        HEAP32[$5278 >> 2] = 0;
        HEAP32[$5278 + 4 >> 2] = 0;
        HEAP32[$5275 >> 2] = 0;
        HEAP32[$5275 + 4 >> 2] = 0;
        HEAP32[$5275 + 8 >> 2] = $5284;
        HEAP32[$$0$i7$i2038 >> 2] = $5275;
        $5286 = HEAP32[HEAP32[$5170 >> 2] >> 2] | 0;
        if (!$5286) $5291 = $5275; else {
         HEAP32[$5170 >> 2] = $5286;
         $5291 = HEAP32[$$0$i7$i2038 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i860$lcssa8258 + -64 >> 2] | 0, $5291);
        $5292 = $$idx$val$i860$lcssa8258 + -60 | 0;
        HEAP32[$5292 >> 2] = (HEAP32[$5292 >> 2] | 0) + 1;
        $__r$0$i2042 = $5275;
       }
       HEAP32[$__r$0$i2042 + 24 >> 2] = $5258;
       break;
      }
     default:
      {
       $$lcssa8459 = $5143;
       label = 1659;
       break L1;
      }
     }
     $5296 = $$idx$val$i860$lcssa8258 + -72 | 0;
     $5299 = HEAP32[(HEAP32[$5296 >> 2] | 0) + 4 >> 2] | 0;
     HEAP32[$5296 >> 2] = $5299;
     $$cast = $5299;
     if (($$cast | 0) != ($5143 + 48 | 0)) {
      $$cast$lcssa = $$cast;
      label = 1714;
      break L531;
     }
     __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env130, $this, HEAP32[$5143 + 36 >> 2] | 0, HEAP32[$5143 + 40 >> 2] | 0);
     HEAP32[$321 >> 2] = 0;
     HEAP32[$322 >> 2] = 0;
     HEAP32[$169 >> 2] = $323;
     $$idx$val2$i$i2046 = HEAP32[$env130 >> 2] | 0;
     if (($$idx$val2$i$i2046 | 0) != ($324 | 0)) {
      $5309 = $$idx$val2$i$i2046;
      $6160 = $$idx$val2$i$i2046;
      while (1) {
       __THREW__ = 0;
       $5305 = invoke_ii(67, 24) | 0;
       $5306 = __THREW__;
       __THREW__ = 0;
       if ($5306 & 1) {
        label = 1777;
        break L1;
       }
       $5311 = $5309 + 16 | 0;
       $5313 = HEAP32[$5311 >> 2] | 0;
       $5316 = HEAP32[$5311 + 4 >> 2] | 0;
       $5317 = $5305 + 16 | 0;
       HEAP32[$5317 >> 2] = $5313;
       HEAP32[$5317 + 4 >> 2] = $5316;
       $5321 = $5313;
       $$pre$i$i$i$i$i$i2051 = HEAP32[$323 >> 2] | 0;
       do if ((HEAP32[$169 >> 2] | 0) == ($323 | 0)) {
        $5336 = $329;
        label = 1723;
       } else {
        $5323 = ($$pre$i$i$i$i$i$i2051 | 0) == 0;
        if ($5323) {
         $$0$i$i$i$i$i$i$i$i2055 = $323;
         while (1) {
          $5328 = HEAP32[$$0$i$i$i$i$i$i$i$i2055 + 8 >> 2] | 0;
          if ((HEAP32[$5328 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2055 | 0)) $$0$i$i$i$i$i$i$i$i2055 = $5328; else {
           $$01$i$i$i$i$i$i$i$i2058 = $5328;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i2053 = $$pre$i$i$i$i$i$i2051;
         while (1) {
          $5325 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2053 + 4 >> 2] | 0;
          if (!$5325) {
           $$01$i$i$i$i$i$i$i$i2058 = $$0$i$i$i$i$i$i$i$i$i2053;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i2053 = $5325;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i2058 + 16 >> 2] | 0) >>> 0 < $5321 >>> 0) {
         $5336 = $$01$i$i$i$i$i$i$i$i2058;
         label = 1723;
        } else {
         if ($5323) {
          HEAP32[$0 >> 2] = $329;
          $$0$i$i$i$i1$i$i2067 = $323;
          $5351 = $329;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i2063 = $$pre$i$i$i$i$i$i2051;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i2065 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2063 + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i2065 >>> 0 > $5321 >>> 0) {
           $5339 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2063 >> 2] | 0;
           if (!$5339) {
            $$lcssa8384 = $__nd$0$i20$i$i$i$i$in$i$i2063;
            $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa8382 = $__nd$0$i20$i$i$i$i$in$i$i2063;
            label = 1729;
            break;
           } else {
            $__nd$0$i20$i$i$i$i$in$i$i2063 = $5339;
            continue;
           }
          }
          if ($$idx2$val$i22$i$i$i$i$i$i2065 >>> 0 >= $5321 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2063;
           label = 1733;
           break;
          }
          $5343 = $__nd$0$i20$i$i$i$i$in$i$i2063 + 4 | 0;
          $5344 = HEAP32[$5343 >> 2] | 0;
          if (!$5344) {
           $$lcssa8383 = $5343;
           $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa8381 = $__nd$0$i20$i$i$i$i$in$i$i2063;
           label = 1732;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i2063 = $5344;
         }
         if ((label | 0) == 1729) {
          label = 0;
          $5341 = $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa8382;
          HEAP32[$0 >> 2] = $5341;
          $$0$i$i$i$i1$i$i2067 = $$lcssa8384;
          $5351 = $5341;
          break;
         } else if ((label | 0) == 1732) {
          label = 0;
          $5346 = $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa8381;
          HEAP32[$0 >> 2] = $5346;
          $$0$i$i$i$i1$i$i2067 = $$lcssa8383;
          $5351 = $5346;
          break;
         } else if ((label | 0) == 1733) {
          label = 0;
          $5347 = $__nd$0$i20$i$i$i$i$in$i$i2063$lcssa;
          HEAP32[$0 >> 2] = $5347;
          $$0$i$i$i$i1$i$i2067 = $0;
          $5351 = $5347;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 1723) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i2051) {
         HEAP32[$0 >> 2] = $329;
         $$0$i$i$i$i1$i$i2067 = $323;
         $5351 = $329;
         break;
        } else {
         HEAP32[$0 >> 2] = $5336;
         $$0$i$i$i$i1$i$i2067 = $5336 + 4 | 0;
         $5351 = $5336;
         break;
        }
       } while (0);
       $5348 = HEAP32[$$0$i$i$i$i1$i$i2067 >> 2] | 0;
       if (!$5348) {
        HEAP32[$5305 >> 2] = 0;
        HEAP32[$5305 + 4 >> 2] = 0;
        HEAP32[$5305 + 8 >> 2] = $5351;
        HEAP32[$$0$i$i$i$i1$i$i2067 >> 2] = $5305;
        $5355 = HEAP32[HEAP32[$169 >> 2] >> 2] | 0;
        if (!$5355) $5359 = $5305; else {
         HEAP32[$169 >> 2] = $5355;
         $5359 = HEAP32[$$0$i$i$i$i1$i$i2067 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$321 >> 2] | 0, $5359);
        HEAP32[$322 >> 2] = (HEAP32[$322 >> 2] | 0) + 1;
        $5364 = $5309;
       } else if (($5348 | 0) == ($5305 | 0)) $5364 = $6160; else {
        __ZdlPv($5305);
        $5364 = $6160;
       }
       $5365 = HEAP32[$5364 + 4 >> 2] | 0;
       if (!$5365) {
        $$0$i$i$i$i$i2075 = $5364;
        while (1) {
         $5370 = HEAP32[$$0$i$i$i$i$i2075 + 8 >> 2] | 0;
         if ((HEAP32[$5370 >> 2] | 0) == ($$0$i$i$i$i$i2075 | 0)) {
          $$01$i$i$i$i$i2078 = $5370;
          break;
         } else $$0$i$i$i$i$i2075 = $5370;
        }
       } else {
        $$0$i$i$i$i$i$i2073 = $5365;
        while (1) {
         $5367 = HEAP32[$$0$i$i$i$i$i$i2073 >> 2] | 0;
         if (!$5367) {
          $$01$i$i$i$i$i2078 = $$0$i$i$i$i$i$i2073;
          break;
         } else $$0$i$i$i$i$i$i2073 = $5367;
        }
       }
       if (($$01$i$i$i$i$i2078 | 0) == ($324 | 0)) break; else {
        $5309 = $$01$i$i$i$i$i2078;
        $6160 = $$01$i$i$i$i$i2078;
       }
      }
     }
     HEAP32[$325 >> 2] = 0;
     HEAP32[$326 >> 2] = 0;
     HEAP32[$170 >> 2] = $327;
     $$idx$val2$i$i2085 = HEAP32[$$idx$val$i860$lcssa8258 + -68 >> 2] | 0;
     $5374 = $$idx$val$i860$lcssa8258 + -64 | 0;
     if (($$idx$val2$i$i2085 | 0) != ($5374 | 0)) {
      $5380 = $$idx$val2$i$i2085;
      $6161 = $$idx$val2$i$i2085;
      while (1) {
       __THREW__ = 0;
       $5376 = invoke_ii(67, 28) | 0;
       $5377 = __THREW__;
       __THREW__ = 0;
       if ($5377 & 1) {
        label = 1778;
        break L1;
       }
       $5379 = $5380 + 16 | 0;
       $5381 = $5376 + 16 | 0;
       HEAP32[$5381 >> 2] = HEAP32[$5379 >> 2];
       HEAP32[$5381 + 4 >> 2] = HEAP32[$5379 + 4 >> 2];
       HEAP32[$5381 + 8 >> 2] = HEAP32[$5379 + 8 >> 2];
       $$pre$i$i$i$i$i$i2090 = HEAP32[$327 >> 2] | 0;
       do if ((HEAP32[$170 >> 2] | 0) == ($327 | 0)) {
        $5396 = $328;
        label = 1753;
       } else {
        $5383 = ($$pre$i$i$i$i$i$i2090 | 0) == 0;
        if ($5383) {
         $$0$i$i$i$i$i$i$i$i2094 = $327;
         while (1) {
          $5388 = HEAP32[$$0$i$i$i$i$i$i$i$i2094 + 8 >> 2] | 0;
          if ((HEAP32[$5388 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2094 | 0)) $$0$i$i$i$i$i$i$i$i2094 = $5388; else {
           $$01$i$i$i$i$i$i$i$i2097 = $5388;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i2092 = $$pre$i$i$i$i$i$i2090;
         while (1) {
          $5385 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2092 + 4 >> 2] | 0;
          if (!$5385) {
           $$01$i$i$i$i$i$i$i$i2097 = $$0$i$i$i$i$i$i$i$i$i2092;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i2092 = $5385;
         }
        }
        $__v$idx14$val$i$i$i$i$i$i2101 = HEAP32[$5381 >> 2] | 0;
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i2097 + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i2101 >>> 0) {
         $5396 = $$01$i$i$i$i$i$i$i$i2097;
         label = 1753;
        } else {
         if ($5383) {
          HEAP32[$0 >> 2] = $328;
          $$0$i$i$i$i1$i$i2108 = $327;
          $5411 = $328;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i2104 = $$pre$i$i$i$i$i$i2090;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i2106 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2104 + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i2106 >>> 0 > $__v$idx14$val$i$i$i$i$i$i2101 >>> 0) {
           $5399 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2104 >> 2] | 0;
           if (!$5399) {
            $$lcssa8388 = $__nd$0$i20$i$i$i$i$in$i$i2104;
            $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa8386 = $__nd$0$i20$i$i$i$i$in$i$i2104;
            label = 1759;
            break;
           } else {
            $__nd$0$i20$i$i$i$i$in$i$i2104 = $5399;
            continue;
           }
          }
          if ($$idx2$val$i22$i$i$i$i$i$i2106 >>> 0 >= $__v$idx14$val$i$i$i$i$i$i2101 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2104;
           label = 1763;
           break;
          }
          $5403 = $__nd$0$i20$i$i$i$i$in$i$i2104 + 4 | 0;
          $5404 = HEAP32[$5403 >> 2] | 0;
          if (!$5404) {
           $$lcssa8387 = $5403;
           $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa8385 = $__nd$0$i20$i$i$i$i$in$i$i2104;
           label = 1762;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i2104 = $5404;
         }
         if ((label | 0) == 1759) {
          label = 0;
          $5401 = $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa8386;
          HEAP32[$0 >> 2] = $5401;
          $$0$i$i$i$i1$i$i2108 = $$lcssa8388;
          $5411 = $5401;
          break;
         } else if ((label | 0) == 1762) {
          label = 0;
          $5406 = $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa8385;
          HEAP32[$0 >> 2] = $5406;
          $$0$i$i$i$i1$i$i2108 = $$lcssa8387;
          $5411 = $5406;
          break;
         } else if ((label | 0) == 1763) {
          label = 0;
          $5407 = $__nd$0$i20$i$i$i$i$in$i$i2104$lcssa;
          HEAP32[$0 >> 2] = $5407;
          $$0$i$i$i$i1$i$i2108 = $0;
          $5411 = $5407;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 1753) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i2090) {
         HEAP32[$0 >> 2] = $328;
         $$0$i$i$i$i1$i$i2108 = $327;
         $5411 = $328;
         break;
        } else {
         HEAP32[$0 >> 2] = $5396;
         $$0$i$i$i$i1$i$i2108 = $5396 + 4 | 0;
         $5411 = $5396;
         break;
        }
       } while (0);
       $5408 = HEAP32[$$0$i$i$i$i1$i$i2108 >> 2] | 0;
       if (!$5408) {
        HEAP32[$5376 >> 2] = 0;
        HEAP32[$5376 + 4 >> 2] = 0;
        HEAP32[$5376 + 8 >> 2] = $5411;
        HEAP32[$$0$i$i$i$i1$i$i2108 >> 2] = $5376;
        $5415 = HEAP32[HEAP32[$170 >> 2] >> 2] | 0;
        if (!$5415) $5419 = $5376; else {
         HEAP32[$170 >> 2] = $5415;
         $5419 = HEAP32[$$0$i$i$i$i1$i$i2108 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$325 >> 2] | 0, $5419);
        HEAP32[$326 >> 2] = (HEAP32[$326 >> 2] | 0) + 1;
        $5424 = $5380;
       } else if (($5408 | 0) == ($5376 | 0)) $5424 = $6161; else {
        __ZdlPv($5376);
        $5424 = $6161;
       }
       $5425 = HEAP32[$5424 + 4 >> 2] | 0;
       if (!$5425) {
        $$0$i$i$i$i$i2116 = $5424;
        while (1) {
         $5430 = HEAP32[$$0$i$i$i$i$i2116 + 8 >> 2] | 0;
         if ((HEAP32[$5430 >> 2] | 0) == ($$0$i$i$i$i$i2116 | 0)) {
          $$01$i$i$i$i$i2119 = $5430;
          break;
         } else $$0$i$i$i$i$i2116 = $5430;
        }
       } else {
        $$0$i$i$i$i$i$i2114 = $5425;
        while (1) {
         $5427 = HEAP32[$$0$i$i$i$i$i$i2114 >> 2] | 0;
         if (!$5427) {
          $$01$i$i$i$i$i2119 = $$0$i$i$i$i$i$i2114;
          break;
         } else $$0$i$i$i$i$i$i2114 = $5427;
        }
       }
       if (($$01$i$i$i$i$i2119 | 0) == ($5374 | 0)) break; else {
        $5380 = $$01$i$i$i$i$i2119;
        $6161 = $$01$i$i$i$i$i2119;
       }
      }
     }
     __THREW__ = 0;
     invoke_viiii(17, $168 | 0, $this | 0, $169 | 0, $170 | 0);
     $5434 = __THREW__;
     __THREW__ = 0;
     if ($5434 & 1) {
      label = 1779;
      break L1;
     };
     HEAP32[$204 >> 2] = HEAP32[$168 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$168 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$168 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$168 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$327 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($169, HEAP32[$323 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env130, HEAP32[$324 >> 2] | 0);
     $$515 = $$111$ph4097;
     label = 2026;
     break;
    }
   case 1782:
    {
     label = 0;
     $5451 = HEAP32[$$idx$val$i860$lcssa8259 + -140 >> 2] | 0;
     if ((HEAP32[$204 >> 2] | 0) != 16) {
      $$lcssa8455 = $5451;
      label = 1783;
      break L1;
     }
     $5470 = HEAP32[$205 >> 2] | 0;
     $$idx254 = $5470 + 8 | 0;
     if ((HEAP32[$5470 + 12 >> 2] | 0) != (HEAP32[$$idx254 >> 2] | 0)) {
      $$idx$val$i860$lcssa8259$lcssa8275 = $$idx$val$i860$lcssa8259;
      $$idx254$lcssa = $$idx254;
      $$lcssa8297$lcssa8304 = $$lcssa8297;
      $$lcssa8456 = $5451;
      label = 1795;
      break L531;
     }
     HEAP32[$331 >> 2] = 0;
     HEAP32[$332 >> 2] = 0;
     HEAP32[$174 >> 2] = $333;
     $5473 = HEAP32[$5451 + 52 >> 2] | 0;
     $5475 = HEAP32[$5451 + 56 >> 2] | 0;
     HEAP32[$334 >> 2] = 0;
     HEAP32[$335 >> 2] = 0;
     HEAP32[$175 >> 2] = $336;
     __THREW__ = 0;
     invoke_viiiiii(11, $173 | 0, $this | 0, $174 | 0, $5473 | 0, $5475 | 0, $175 | 0);
     $5476 = __THREW__;
     __THREW__ = 0;
     if ($5476 & 1) {
      label = 1794;
      break L1;
     };
     HEAP32[$204 >> 2] = HEAP32[$173 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$173 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$173 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$173 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($175, HEAP32[$336 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($174, HEAP32[$333 >> 2] | 0);
     $$515 = $$111$ph4097;
     label = 2026;
     break;
    }
   case 1809:
    {
     label = 0;
     $5527 = HEAP32[$$idx$val$i860$lcssa8260 + -140 >> 2] | 0;
     $5529 = HEAP32[$$idx$val$i860$lcssa8260 + -96 >> 2] | 0;
     if ((HEAP32[$204 >> 2] | 0) != 19) {
      $$lcssa8428 = $5527;
      label = 1810;
      break L1;
     }
     $5589 = HEAP32[$205 >> 2] | 0;
     $5590 = $5589 + 8 | 0;
     $5591 = HEAP32[$330 >> 2] | 0;
     $5592 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($5591, $5590) | 0;
     if (($5592 | 0) == ($5591 + 4 | 0)) {
      $5597 = __Znwj(12) | 0;
      __THREW__ = 0;
      invoke_vii(40, $5597 | 0, $5590 | 0);
      $5598 = __THREW__;
      __THREW__ = 0;
      if ($5598 & 1) {
       $$lcssa8447 = $5597;
       label = 1834;
       break L1;
      }
      HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($5591, $5590) | 0) >> 2] = $5597;
      $$0$i2163 = $5597;
     } else $$0$i2163 = HEAP32[$5592 + 28 >> 2] | 0;
     $5603 = $$idx$val$i860$lcssa8260 + -52 | 0;
     $5604 = $$idx$val$i860$lcssa8260 + -48 | 0;
     $5605 = HEAP32[$5604 >> 2] | 0;
     $5606 = ($5605 | 0) == 0;
     if (!$5606) {
      $$0$ph6$i$i$i2165 = $5604;
      $$01$ph5$i$i$i2166 = $5605;
      L1437 : while (1) {
       $$013$i$i$i2168 = $$01$ph5$i$i$i2166;
       while (1) {
        if ((HEAP32[$$013$i$i$i2168 + 16 >> 2] | 0) >>> 0 >= $$0$i2163 >>> 0) {
         $$013$i$i$i2168$lcssa = $$013$i$i$i2168;
         break;
        }
        $$013$i$i$i2168 = HEAP32[$$013$i$i$i2168 + 4 >> 2] | 0;
        if (!$$013$i$i$i2168) {
         $$0$ph$lcssa$i$i$i2172 = $$0$ph6$i$i$i2165;
         break L1437;
        }
       }
       $$01$ph5$i$i$i2166 = HEAP32[$$013$i$i$i2168$lcssa >> 2] | 0;
       if (!$$01$ph5$i$i$i2166) {
        $$0$ph$lcssa$i$i$i2172 = $$013$i$i$i2168$lcssa;
        break;
       } else $$0$ph6$i$i$i2165 = $$013$i$i$i2168$lcssa;
      }
      if (($$0$ph$lcssa$i$i$i2172 | 0) != ($5604 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i2172 + 16 >> 2] | 0) >>> 0 <= $$0$i2163 >>> 0) {
       $$lcssa8430 = $5527;
       $$lcssa8436 = $5589;
       $$lcssa8442 = $5590;
       label = 1842;
       break L1;
      }
     }
     $5649 = $$idx$val$i860$lcssa8260 + -56 | 0;
     $$idx394 = $5529 + 8 | 0;
     $5652 = HEAP32[(HEAP32[$$idx394 >> 2] | 0) + (HEAP32[$5649 >> 2] << 2) >> 2] | 0;
     $5653 = $$0$i2163;
     do if ($5606) {
      HEAP32[$0 >> 2] = $5604;
      $$0$i7$i2198 = $5604;
      $5673 = $5604;
      label = 1861;
     } else {
      $__nd$0$i$i2190 = $5605;
      while (1) {
       $5655 = HEAP32[$__nd$0$i$i2190 + 16 >> 2] | 0;
       if ($5655 >>> 0 > $$0$i2163 >>> 0) {
        $5657 = HEAP32[$__nd$0$i$i2190 >> 2] | 0;
        if (!$5657) {
         $$lcssa8362 = $__nd$0$i$i2190;
         $__nd$0$i$i2190$lcssa8360 = $__nd$0$i$i2190;
         label = 1854;
         break;
        } else $__nd$0$be$in$i$i2192 = $5657;
       } else {
        if ($5655 >>> 0 >= $$0$i2163 >>> 0) {
         $__nd$0$i$i2190$lcssa = $__nd$0$i$i2190;
         label = 1860;
         break;
        }
        $5661 = $__nd$0$i$i2190 + 4 | 0;
        $5662 = HEAP32[$5661 >> 2] | 0;
        if (!$5662) {
         $$lcssa8361 = $5661;
         $__nd$0$i$i2190$lcssa8359 = $__nd$0$i$i2190;
         label = 1858;
         break;
        } else $__nd$0$be$in$i$i2192 = $5662;
       }
       $__nd$0$i$i2190 = $__nd$0$be$in$i$i2192;
      }
      if ((label | 0) == 1854) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2190$lcssa8360;
       $$0$i7$i2198 = $$lcssa8362;
       $5673 = $__nd$0$i$i2190$lcssa8360;
       label = 1861;
       break;
      } else if ((label | 0) == 1858) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2190$lcssa8359;
       $$0$i7$i2198 = $$lcssa8361;
       $5673 = $__nd$0$i$i2190$lcssa8359;
       label = 1861;
       break;
      } else if ((label | 0) == 1860) {
       label = 0;
       HEAP32[$0 >> 2] = $__nd$0$i$i2190$lcssa;
       if (!$__nd$0$i$i2190$lcssa) {
        $$0$i7$i2198 = $0;
        $5673 = $__nd$0$i$i2190$lcssa;
        label = 1861;
        break;
       } else {
        $__r$0$i2202 = $__nd$0$i$i2190$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 1861) {
      label = 0;
      $5668 = __Znwj(24) | 0;
      HEAP32[$5668 + 16 >> 2] = $5653;
      HEAP32[$5668 + 20 >> 2] = 0;
      HEAP32[$5668 >> 2] = 0;
      HEAP32[$5668 + 4 >> 2] = 0;
      HEAP32[$5668 + 8 >> 2] = $5673;
      HEAP32[$$0$i7$i2198 >> 2] = $5668;
      $5675 = HEAP32[HEAP32[$5603 >> 2] >> 2] | 0;
      if (!$5675) $5680 = $5668; else {
       HEAP32[$5603 >> 2] = $5675;
       $5680 = HEAP32[$$0$i7$i2198 >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i860$lcssa8260 + -48 >> 2] | 0, $5680);
      $5681 = $$idx$val$i860$lcssa8260 + -44 | 0;
      HEAP32[$5681 >> 2] = (HEAP32[$5681 >> 2] | 0) + 1;
      $__r$0$i2202 = $5668;
     }
     HEAP32[$__r$0$i2202 + 20 >> 2] = $5652;
     $5686 = (HEAP32[$5649 >> 2] | 0) + 1 | 0;
     HEAP32[$5649 >> 2] = $5686;
     $$idx$val = HEAP32[$$idx394 >> 2] | 0;
     if (($5686 | 0) != ((HEAP32[$5529 + 12 >> 2] | 0) - $$idx$val >> 2 | 0)) {
      $$idx$val$i860$lcssa8260$lcssa8280 = $$idx$val$i860$lcssa8260;
      $$idx$val$lcssa = $$idx$val;
      $$lcssa8431 = $5527;
      $$lcssa8448 = $5686;
      label = 1932;
      break L531;
     }
     __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($env138, $this, HEAP32[$5527 + 36 >> 2] | 0, HEAP32[$5527 + 40 >> 2] | 0);
     HEAP32[$337 >> 2] = 0;
     HEAP32[$338 >> 2] = 0;
     HEAP32[$181 >> 2] = $339;
     $$idx$val2$i$i2206 = HEAP32[$env138 >> 2] | 0;
     if (($$idx$val2$i$i2206 | 0) != ($340 | 0)) {
      $5697 = $$idx$val2$i$i2206;
      $6162 = $$idx$val2$i$i2206;
      while (1) {
       __THREW__ = 0;
       $5693 = invoke_ii(67, 24) | 0;
       $5694 = __THREW__;
       __THREW__ = 0;
       if ($5694 & 1) {
        label = 1927;
        break L1;
       }
       $5699 = $5697 + 16 | 0;
       $5701 = HEAP32[$5699 >> 2] | 0;
       $5704 = HEAP32[$5699 + 4 >> 2] | 0;
       $5705 = $5693 + 16 | 0;
       HEAP32[$5705 >> 2] = $5701;
       HEAP32[$5705 + 4 >> 2] = $5704;
       $5709 = $5701;
       $$pre$i$i$i$i$i$i2211 = HEAP32[$339 >> 2] | 0;
       do if ((HEAP32[$181 >> 2] | 0) == ($339 | 0)) {
        $5724 = $345;
        label = 1873;
       } else {
        $5711 = ($$pre$i$i$i$i$i$i2211 | 0) == 0;
        if ($5711) {
         $$0$i$i$i$i$i$i$i$i2215 = $339;
         while (1) {
          $5716 = HEAP32[$$0$i$i$i$i$i$i$i$i2215 + 8 >> 2] | 0;
          if ((HEAP32[$5716 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2215 | 0)) $$0$i$i$i$i$i$i$i$i2215 = $5716; else {
           $$01$i$i$i$i$i$i$i$i2218 = $5716;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i2213 = $$pre$i$i$i$i$i$i2211;
         while (1) {
          $5713 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2213 + 4 >> 2] | 0;
          if (!$5713) {
           $$01$i$i$i$i$i$i$i$i2218 = $$0$i$i$i$i$i$i$i$i$i2213;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i2213 = $5713;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i2218 + 16 >> 2] | 0) >>> 0 < $5709 >>> 0) {
         $5724 = $$01$i$i$i$i$i$i$i$i2218;
         label = 1873;
        } else {
         if ($5711) {
          HEAP32[$0 >> 2] = $345;
          $$0$i$i$i$i1$i$i2227 = $339;
          $5739 = $345;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i2223 = $$pre$i$i$i$i$i$i2211;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i2225 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2223 + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i2225 >>> 0 > $5709 >>> 0) {
           $5727 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2223 >> 2] | 0;
           if (!$5727) {
            $$lcssa8366 = $__nd$0$i20$i$i$i$i$in$i$i2223;
            $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa8364 = $__nd$0$i20$i$i$i$i$in$i$i2223;
            label = 1879;
            break;
           } else {
            $__nd$0$i20$i$i$i$i$in$i$i2223 = $5727;
            continue;
           }
          }
          if ($$idx2$val$i22$i$i$i$i$i$i2225 >>> 0 >= $5709 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2223;
           label = 1883;
           break;
          }
          $5731 = $__nd$0$i20$i$i$i$i$in$i$i2223 + 4 | 0;
          $5732 = HEAP32[$5731 >> 2] | 0;
          if (!$5732) {
           $$lcssa8365 = $5731;
           $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa8363 = $__nd$0$i20$i$i$i$i$in$i$i2223;
           label = 1882;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i2223 = $5732;
         }
         if ((label | 0) == 1879) {
          label = 0;
          $5729 = $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa8364;
          HEAP32[$0 >> 2] = $5729;
          $$0$i$i$i$i1$i$i2227 = $$lcssa8366;
          $5739 = $5729;
          break;
         } else if ((label | 0) == 1882) {
          label = 0;
          $5734 = $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa8363;
          HEAP32[$0 >> 2] = $5734;
          $$0$i$i$i$i1$i$i2227 = $$lcssa8365;
          $5739 = $5734;
          break;
         } else if ((label | 0) == 1883) {
          label = 0;
          $5735 = $__nd$0$i20$i$i$i$i$in$i$i2223$lcssa;
          HEAP32[$0 >> 2] = $5735;
          $$0$i$i$i$i1$i$i2227 = $0;
          $5739 = $5735;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 1873) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i2211) {
         HEAP32[$0 >> 2] = $345;
         $$0$i$i$i$i1$i$i2227 = $339;
         $5739 = $345;
         break;
        } else {
         HEAP32[$0 >> 2] = $5724;
         $$0$i$i$i$i1$i$i2227 = $5724 + 4 | 0;
         $5739 = $5724;
         break;
        }
       } while (0);
       $5736 = HEAP32[$$0$i$i$i$i1$i$i2227 >> 2] | 0;
       if (!$5736) {
        HEAP32[$5693 >> 2] = 0;
        HEAP32[$5693 + 4 >> 2] = 0;
        HEAP32[$5693 + 8 >> 2] = $5739;
        HEAP32[$$0$i$i$i$i1$i$i2227 >> 2] = $5693;
        $5743 = HEAP32[HEAP32[$181 >> 2] >> 2] | 0;
        if (!$5743) $5747 = $5693; else {
         HEAP32[$181 >> 2] = $5743;
         $5747 = HEAP32[$$0$i$i$i$i1$i$i2227 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$337 >> 2] | 0, $5747);
        HEAP32[$338 >> 2] = (HEAP32[$338 >> 2] | 0) + 1;
        $5752 = $5697;
       } else if (($5736 | 0) == ($5693 | 0)) $5752 = $6162; else {
        __ZdlPv($5693);
        $5752 = $6162;
       }
       $5753 = HEAP32[$5752 + 4 >> 2] | 0;
       if (!$5753) {
        $$0$i$i$i$i$i2235 = $5752;
        while (1) {
         $5758 = HEAP32[$$0$i$i$i$i$i2235 + 8 >> 2] | 0;
         if ((HEAP32[$5758 >> 2] | 0) == ($$0$i$i$i$i$i2235 | 0)) {
          $$01$i$i$i$i$i2238 = $5758;
          break;
         } else $$0$i$i$i$i$i2235 = $5758;
        }
       } else {
        $$0$i$i$i$i$i$i2233 = $5753;
        while (1) {
         $5755 = HEAP32[$$0$i$i$i$i$i$i2233 >> 2] | 0;
         if (!$5755) {
          $$01$i$i$i$i$i2238 = $$0$i$i$i$i$i$i2233;
          break;
         } else $$0$i$i$i$i$i$i2233 = $5755;
        }
       }
       if (($$01$i$i$i$i$i2238 | 0) == ($340 | 0)) break; else {
        $5697 = $$01$i$i$i$i$i2238;
        $6162 = $$01$i$i$i$i$i2238;
       }
      }
     }
     $5763 = HEAP32[$5527 + 52 >> 2] | 0;
     $5765 = HEAP32[$5527 + 56 >> 2] | 0;
     HEAP32[$341 >> 2] = 0;
     HEAP32[$342 >> 2] = 0;
     HEAP32[$182 >> 2] = $343;
     $$idx$val2$i$i2245 = HEAP32[$5603 >> 2] | 0;
     if (($$idx$val2$i$i2245 | 0) != ($5604 | 0)) {
      $5771 = $$idx$val2$i$i2245;
      $6163 = $$idx$val2$i$i2245;
      while (1) {
       __THREW__ = 0;
       $5767 = invoke_ii(67, 24) | 0;
       $5768 = __THREW__;
       __THREW__ = 0;
       if ($5768 & 1) {
        label = 1928;
        break L1;
       }
       $5773 = $5771 + 16 | 0;
       $5775 = HEAP32[$5773 >> 2] | 0;
       $5778 = HEAP32[$5773 + 4 >> 2] | 0;
       $5779 = $5767 + 16 | 0;
       HEAP32[$5779 >> 2] = $5775;
       HEAP32[$5779 + 4 >> 2] = $5778;
       $5783 = $5775;
       $$pre$i$i$i$i$i$i2250 = HEAP32[$343 >> 2] | 0;
       do if ((HEAP32[$182 >> 2] | 0) == ($343 | 0)) {
        $5798 = $344;
        label = 1903;
       } else {
        $5785 = ($$pre$i$i$i$i$i$i2250 | 0) == 0;
        if ($5785) {
         $$0$i$i$i$i$i$i$i$i2254 = $343;
         while (1) {
          $5790 = HEAP32[$$0$i$i$i$i$i$i$i$i2254 + 8 >> 2] | 0;
          if ((HEAP32[$5790 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i2254 | 0)) $$0$i$i$i$i$i$i$i$i2254 = $5790; else {
           $$01$i$i$i$i$i$i$i$i2257 = $5790;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i2252 = $$pre$i$i$i$i$i$i2250;
         while (1) {
          $5787 = HEAP32[$$0$i$i$i$i$i$i$i$i$i2252 + 4 >> 2] | 0;
          if (!$5787) {
           $$01$i$i$i$i$i$i$i$i2257 = $$0$i$i$i$i$i$i$i$i$i2252;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i2252 = $5787;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i2257 + 16 >> 2] | 0) >>> 0 < $5783 >>> 0) {
         $5798 = $$01$i$i$i$i$i$i$i$i2257;
         label = 1903;
        } else {
         if ($5785) {
          HEAP32[$0 >> 2] = $344;
          $$0$i$i$i$i1$i$i2266 = $343;
          $5813 = $344;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i2262 = $$pre$i$i$i$i$i$i2250;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i2264 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2262 + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i2264 >>> 0 > $5783 >>> 0) {
           $5801 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i2262 >> 2] | 0;
           if (!$5801) {
            $$lcssa8370 = $__nd$0$i20$i$i$i$i$in$i$i2262;
            $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa8368 = $__nd$0$i20$i$i$i$i$in$i$i2262;
            label = 1909;
            break;
           } else {
            $__nd$0$i20$i$i$i$i$in$i$i2262 = $5801;
            continue;
           }
          }
          if ($$idx2$val$i22$i$i$i$i$i$i2264 >>> 0 >= $5783 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa = $__nd$0$i20$i$i$i$i$in$i$i2262;
           label = 1913;
           break;
          }
          $5805 = $__nd$0$i20$i$i$i$i$in$i$i2262 + 4 | 0;
          $5806 = HEAP32[$5805 >> 2] | 0;
          if (!$5806) {
           $$lcssa8369 = $5805;
           $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa8367 = $__nd$0$i20$i$i$i$i$in$i$i2262;
           label = 1912;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i2262 = $5806;
         }
         if ((label | 0) == 1909) {
          label = 0;
          $5803 = $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa8368;
          HEAP32[$0 >> 2] = $5803;
          $$0$i$i$i$i1$i$i2266 = $$lcssa8370;
          $5813 = $5803;
          break;
         } else if ((label | 0) == 1912) {
          label = 0;
          $5808 = $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa8367;
          HEAP32[$0 >> 2] = $5808;
          $$0$i$i$i$i1$i$i2266 = $$lcssa8369;
          $5813 = $5808;
          break;
         } else if ((label | 0) == 1913) {
          label = 0;
          $5809 = $__nd$0$i20$i$i$i$i$in$i$i2262$lcssa;
          HEAP32[$0 >> 2] = $5809;
          $$0$i$i$i$i1$i$i2266 = $0;
          $5813 = $5809;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 1903) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i2250) {
         HEAP32[$0 >> 2] = $344;
         $$0$i$i$i$i1$i$i2266 = $343;
         $5813 = $344;
         break;
        } else {
         HEAP32[$0 >> 2] = $5798;
         $$0$i$i$i$i1$i$i2266 = $5798 + 4 | 0;
         $5813 = $5798;
         break;
        }
       } while (0);
       $5810 = HEAP32[$$0$i$i$i$i1$i$i2266 >> 2] | 0;
       if (!$5810) {
        HEAP32[$5767 >> 2] = 0;
        HEAP32[$5767 + 4 >> 2] = 0;
        HEAP32[$5767 + 8 >> 2] = $5813;
        HEAP32[$$0$i$i$i$i1$i$i2266 >> 2] = $5767;
        $5817 = HEAP32[HEAP32[$182 >> 2] >> 2] | 0;
        if (!$5817) $5821 = $5767; else {
         HEAP32[$182 >> 2] = $5817;
         $5821 = HEAP32[$$0$i$i$i$i1$i$i2266 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$341 >> 2] | 0, $5821);
        HEAP32[$342 >> 2] = (HEAP32[$342 >> 2] | 0) + 1;
        $5826 = $5771;
       } else if (($5810 | 0) == ($5767 | 0)) $5826 = $6163; else {
        __ZdlPv($5767);
        $5826 = $6163;
       }
       $5827 = HEAP32[$5826 + 4 >> 2] | 0;
       if (!$5827) {
        $$0$i$i$i$i$i2274 = $5826;
        while (1) {
         $5832 = HEAP32[$$0$i$i$i$i$i2274 + 8 >> 2] | 0;
         if ((HEAP32[$5832 >> 2] | 0) == ($$0$i$i$i$i$i2274 | 0)) {
          $$01$i$i$i$i$i2277 = $5832;
          break;
         } else $$0$i$i$i$i$i2274 = $5832;
        }
       } else {
        $$0$i$i$i$i$i$i2272 = $5827;
        while (1) {
         $5829 = HEAP32[$$0$i$i$i$i$i$i2272 >> 2] | 0;
         if (!$5829) {
          $$01$i$i$i$i$i2277 = $$0$i$i$i$i$i$i2272;
          break;
         } else $$0$i$i$i$i$i$i2272 = $5829;
        }
       }
       if (($$01$i$i$i$i$i2277 | 0) == ($5604 | 0)) break; else {
        $5771 = $$01$i$i$i$i$i2277;
        $6163 = $$01$i$i$i$i$i2277;
       }
      }
     }
     __THREW__ = 0;
     invoke_viiiiii(11, $180 | 0, $this | 0, $181 | 0, $5763 | 0, $5765 | 0, $182 | 0);
     $5836 = __THREW__;
     __THREW__ = 0;
     if ($5836 & 1) {
      label = 1929;
      break L1;
     };
     HEAP32[$204 >> 2] = HEAP32[$180 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$180 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$180 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$180 + 12 >> 2];
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($182, HEAP32[$343 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($181, HEAP32[$339 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env138, HEAP32[$340 >> 2] | 0);
     $$515 = $$111$ph4097;
     label = 2026;
     break;
    }
   case 1946:
    {
     label = 0;
     $5894 = HEAP32[$$idx$val$i860$lcssa8261 + -140 >> 2] | 0;
     $5895 = $$idx$val$i860$lcssa8261 + -104 | 0;
     $5896 = $$idx$val$i860$lcssa8261 + -88 | 0;
     HEAP32[$347 >> 2] = 2912;
     HEAP32[$ss142 >> 2] = 2952;
     HEAP32[$346 >> 2] = 2972;
     HEAP32[$349 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $350 | 0, $348 | 0);
     $5897 = __THREW__;
     __THREW__ = 0;
     if ($5897 & 1) {
      label = 1950;
      break L1;
     }
     HEAP32[$352 >> 2] = 0;
     HEAP32[$353 >> 2] = -1;
     HEAP32[$ss142 >> 2] = 2892;
     HEAP32[$351 >> 2] = 2932;
     HEAP32[$347 >> 2] = 2912;
     __THREW__ = 0;
     invoke_vi(173, $348 | 0);
     $5899 = __THREW__;
     __THREW__ = 0;
     if ($5899 & 1) {
      label = 1951;
      break L1;
     }
     HEAP32[$348 >> 2] = 2988;
     HEAP32[$354 >> 2] = 0;
     HEAP32[$354 + 4 >> 2] = 0;
     HEAP32[$354 + 8 >> 2] = 0;
     HEAP32[$354 + 12 >> 2] = 0;
     HEAP32[$355 >> 2] = 24;
     HEAP32[$0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $348 | 0, $0 | 0);
     $5901 = __THREW__;
     __THREW__ = 0;
     if ($5901 & 1) {
      label = 1949;
      break L1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     if ((HEAP32[$5895 >> 2] | 0) == 19) {
      $5912 = HEAP32[$$idx$val$i860$lcssa8261 + -96 >> 2] | 0;
      $5913 = $5912 + 8 | 0;
      $5914 = HEAP8[$5913 >> 0] | 0;
      $5916 = ($5914 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $356 | 0, ($5916 ? $5913 + 1 | 0 : HEAP32[$5912 + 16 >> 2] | 0) | 0, ($5916 ? ($5914 & 255) >>> 1 : HEAP32[$5912 + 12 >> 2] | 0) | 0) | 0;
      $5926 = __THREW__;
      __THREW__ = 0;
      if ($5926 & 1) {
       label = 1956;
       break L1;
      }
     } else {
      HEAP32[$204 >> 2] = HEAP32[$5895 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$5895 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$5895 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$5895 + 12 >> 2];
      $5931 = HEAP32[$5894 + 48 >> 2] | 0;
      __THREW__ = 0;
      invoke_viii(3, $1 | 0, 62848, 0);
      $5932 = __THREW__;
      __THREW__ = 0;
      if ($5932 & 1) {
       label = 1956;
       break L1;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $183 | 0, $this | 0, $5931 + 4 | 0, 0, $1 | 0);
      $5935 = __THREW__;
      __THREW__ = 0;
      if ($5935 & 1) {
       label = 1960;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $5939 = HEAP8[$183 >> 0] | 0;
      $5941 = ($5939 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $356 | 0, ($5941 ? $361 : HEAP32[$360 >> 2] | 0) | 0, ($5941 ? ($5939 & 255) >>> 1 : HEAP32[$362 >> 2] | 0) | 0) | 0;
      $5948 = __THREW__;
      __THREW__ = 0;
      if ($5948 & 1) {
       label = 1963;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
     }
     if ((HEAP32[$5896 >> 2] | 0) == 19) {
      $5955 = HEAP32[$$idx$val$i860$lcssa8261 + -80 >> 2] | 0;
      $5956 = $5955 + 8 | 0;
      $5957 = HEAP8[$5956 >> 0] | 0;
      $5959 = ($5957 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $356 | 0, ($5959 ? $5956 + 1 | 0 : HEAP32[$5955 + 16 >> 2] | 0) | 0, ($5959 ? ($5957 & 255) >>> 1 : HEAP32[$5955 + 12 >> 2] | 0) | 0) | 0;
      $5969 = __THREW__;
      __THREW__ = 0;
      if ($5969 & 1) {
       label = 1956;
       break L1;
      }
     } else {
      HEAP32[$204 >> 2] = HEAP32[$5896 >> 2];
      HEAP32[$204 + 4 >> 2] = HEAP32[$5896 + 4 >> 2];
      HEAP32[$204 + 8 >> 2] = HEAP32[$5896 + 8 >> 2];
      HEAP32[$204 + 12 >> 2] = HEAP32[$5896 + 12 >> 2];
      $5972 = HEAP32[$5894 + 56 >> 2] | 0;
      __THREW__ = 0;
      invoke_viii(3, $2 | 0, 62848, 0);
      $5973 = __THREW__;
      __THREW__ = 0;
      if ($5973 & 1) {
       label = 1956;
       break L1;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $184 | 0, $this | 0, $5972 + 4 | 0, 0, $2 | 0);
      $5976 = __THREW__;
      __THREW__ = 0;
      if ($5976 & 1) {
       label = 1968;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      $5980 = HEAP8[$184 >> 0] | 0;
      $5982 = ($5980 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $356 | 0, ($5982 ? $358 : HEAP32[$357 >> 2] | 0) | 0, ($5982 ? ($5980 & 255) >>> 1 : HEAP32[$359 >> 2] | 0) | 0) | 0;
      $5989 = __THREW__;
      __THREW__ = 0;
      if ($5989 & 1) {
       label = 1971;
       break L1;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184);
     }
     __THREW__ = 0;
     invoke_vii(43, $186 | 0, $348 | 0);
     $5993 = __THREW__;
     __THREW__ = 0;
     if ($5993 & 1) {
      label = 1956;
      break L1;
     }
     __THREW__ = 0;
     invoke_viii(13, $185 | 0, $this | 0, $186 | 0);
     $5995 = __THREW__;
     __THREW__ = 0;
     if ($5995 & 1) {
      label = 1975;
      break L1;
     };
     HEAP32[$204 >> 2] = HEAP32[$185 >> 2];
     HEAP32[$204 + 4 >> 2] = HEAP32[$185 + 4 >> 2];
     HEAP32[$204 + 8 >> 2] = HEAP32[$185 + 8 >> 2];
     HEAP32[$204 + 12 >> 2] = HEAP32[$185 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($186);
     HEAP32[$ss142 >> 2] = 2892;
     HEAP32[$346 >> 2] = 2932;
     HEAP32[$356 >> 2] = 2912;
     HEAP32[$348 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($354);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($348);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($346);
     $$515 = $$111$ph4097;
     label = 2026;
     break;
    }
   case 1977:
    {
     label = 0;
     $6000 = HEAP32[$$idx$val$i860$lcssa8262 + -140 >> 2] | 0;
     switch (HEAP32[$204 >> 2] | 0) {
     case 1:
      {
       $6002 = $6000 + 48 | 0;
       if (HEAP32[$6002 >> 2] | 0) {
        $$lcssa8425 = $6000;
        $$lcssa8427 = $6002;
        label = 1980;
        break L1;
       }
       $6006 = HEAP8[$205 >> 0] ^ 1;
       HEAP32[$218 >> 2] = 1;
       HEAP8[$205 >> 0] = $6006;
       HEAP8[$219 >> 0] = HEAP8[$$sroa$3 >> 0] | 0;
       HEAP8[$219 + 1 >> 0] = HEAP8[$$sroa$3 + 1 >> 0] | 0;
       HEAP8[$219 + 2 >> 0] = HEAP8[$$sroa$3 + 2 >> 0] | 0;
       HEAP8[$219 + 3 >> 0] = HEAP8[$$sroa$3 + 3 >> 0] | 0;
       HEAP8[$219 + 4 >> 0] = HEAP8[$$sroa$3 + 4 >> 0] | 0;
       HEAP8[$219 + 5 >> 0] = HEAP8[$$sroa$3 + 5 >> 0] | 0;
       HEAP8[$219 + 6 >> 0] = HEAP8[$$sroa$3 + 6 >> 0] | 0;
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     case 2:
      break;
     default:
      {
       $$lcssa8423 = $6000;
       label = 2005;
       break L1;
      }
     }
     $6029 = $6000 + 48 | 0;
     switch (HEAP32[$6029 >> 2] | 0) {
     case 2:
      {
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     case 3:
      {
       $6032 = -+HEAPF64[$223 >> 3];
       HEAP32[$218 >> 2] = 2;
       HEAPF64[$223 >> 3] = $6032;
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     case 1:
      {
       $6036 = +(~~+HEAPF64[$223 >> 3] ^ -1 | 0);
       HEAP32[$218 >> 2] = 2;
       HEAPF64[$223 >> 3] = $6036;
       $$515 = $$111$ph4097;
       label = 2026;
       break L546;
       break;
      }
     default:
      {
       $$lcssa8424 = $6000;
       $$lcssa8426 = $6029;
       label = 1994;
       break L1;
      }
     }
     break;
    }
   }
   if ((label | 0) == 2026) {
    label = 0;
    __ZN12_GLOBAL__N_15Stack3popEv($198);
    $$111$ph$be = $$515;
   }
   $$idx$val$i7025085 = HEAP32[$$idx$i >> 2] | 0;
   $$idx1$val$i68740634098 = HEAP32[$$idx1$i >> 2] | 0;
   if (($$idx1$val$i68740634098 - $$idx$val$i7025085 | 0) >>> 0 <= $201 >>> 0) {
    label = 2029;
    break L1;
   } else $$111$ph4097 = $$111$ph$be;
  }
  switch (label | 0) {
  case 623:
   {
    label = 0;
    HEAP32[$$lcssa8286$lcssa >> 2] = 2;
    $2227 = $$idx$val$i860$lcssa8248$lcssa + -104 | 0;
    HEAP32[$2227 >> 2] = HEAP32[$204 >> 2];
    HEAP32[$2227 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
    HEAP32[$2227 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
    HEAP32[$2227 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
    $$010 = HEAP32[$$lcssa8797 + 56 >> 2] | 0;
    continue L1;
    break;
   }
  case 874:
   {
    label = 0;
    $3075 = HEAP32[$$idx268$val$lcssa + ($$lcssa8796 << 2) >> 2] | 0;
    HEAP32[$363 >> 2] = 0;
    HEAP32[$364 >> 2] = 0;
    HEAP32[$bindings65 >> 2] = $365;
    $$idx$val2$i$i1043 = HEAP32[$$lcssa8795 + 8 >> 2] | 0;
    $3076 = $$lcssa8795 + 12 | 0;
    if (($$idx$val2$i$i1043 | 0) == ($3076 | 0)) $3153 = 0; else {
     $3082 = $$idx$val2$i$i1043;
     $6150 = $$idx$val2$i$i1043;
     while (1) {
      __THREW__ = 0;
      $3078 = invoke_ii(67, 24) | 0;
      $3079 = __THREW__;
      __THREW__ = 0;
      if ($3079 & 1) {
       label = 904;
       break L1;
      }
      $3084 = $3082 + 16 | 0;
      $3086 = HEAP32[$3084 >> 2] | 0;
      $3089 = HEAP32[$3084 + 4 >> 2] | 0;
      $3090 = $3078 + 16 | 0;
      HEAP32[$3090 >> 2] = $3086;
      HEAP32[$3090 + 4 >> 2] = $3089;
      $3094 = $3086;
      $$pre$i$i$i$i$i$i1048 = HEAP32[$365 >> 2] | 0;
      do if ((HEAP32[$bindings65 >> 2] | 0) == ($365 | 0)) {
       $3109 = $366;
       label = 882;
      } else {
       $3096 = ($$pre$i$i$i$i$i$i1048 | 0) == 0;
       if ($3096) {
        $$0$i$i$i$i$i$i$i$i1052 = $365;
        while (1) {
         $3101 = HEAP32[$$0$i$i$i$i$i$i$i$i1052 + 8 >> 2] | 0;
         if ((HEAP32[$3101 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i1052 | 0)) $$0$i$i$i$i$i$i$i$i1052 = $3101; else {
          $$01$i$i$i$i$i$i$i$i1055 = $3101;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i1050 = $$pre$i$i$i$i$i$i1048;
        while (1) {
         $3098 = HEAP32[$$0$i$i$i$i$i$i$i$i$i1050 + 4 >> 2] | 0;
         if (!$3098) {
          $$01$i$i$i$i$i$i$i$i1055 = $$0$i$i$i$i$i$i$i$i$i1050;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i1050 = $3098;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i1055 + 16 >> 2] | 0) >>> 0 < $3094 >>> 0) {
        $3109 = $$01$i$i$i$i$i$i$i$i1055;
        label = 882;
       } else {
        if ($3096) {
         HEAP32[$0 >> 2] = $366;
         $$0$i$i$i$i1$i$i1064 = $365;
         $3124 = $366;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i1060 = $$pre$i$i$i$i$i$i1048;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i1062 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1060 + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i1062 >>> 0 > $3094 >>> 0) {
          $3112 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i1060 >> 2] | 0;
          if (!$3112) {
           $$lcssa8840 = $__nd$0$i20$i$i$i$i$in$i$i1060;
           $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa8838 = $__nd$0$i20$i$i$i$i$in$i$i1060;
           label = 888;
           break;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i1060 = $3112;
           continue;
          }
         }
         if ($$idx2$val$i22$i$i$i$i$i$i1062 >>> 0 >= $3094 >>> 0) {
          $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa = $__nd$0$i20$i$i$i$i$in$i$i1060;
          label = 892;
          break;
         }
         $3116 = $__nd$0$i20$i$i$i$i$in$i$i1060 + 4 | 0;
         $3117 = HEAP32[$3116 >> 2] | 0;
         if (!$3117) {
          $$lcssa8839 = $3116;
          $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa8837 = $__nd$0$i20$i$i$i$i$in$i$i1060;
          label = 891;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i1060 = $3117;
        }
        if ((label | 0) == 888) {
         label = 0;
         $3114 = $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa8838;
         HEAP32[$0 >> 2] = $3114;
         $$0$i$i$i$i1$i$i1064 = $$lcssa8840;
         $3124 = $3114;
         break;
        } else if ((label | 0) == 891) {
         label = 0;
         $3119 = $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa8837;
         HEAP32[$0 >> 2] = $3119;
         $$0$i$i$i$i1$i$i1064 = $$lcssa8839;
         $3124 = $3119;
         break;
        } else if ((label | 0) == 892) {
         label = 0;
         $3120 = $__nd$0$i20$i$i$i$i$in$i$i1060$lcssa;
         HEAP32[$0 >> 2] = $3120;
         $$0$i$i$i$i1$i$i1064 = $0;
         $3124 = $3120;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 882) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i1048) {
        HEAP32[$0 >> 2] = $366;
        $$0$i$i$i$i1$i$i1064 = $365;
        $3124 = $366;
        break;
       } else {
        HEAP32[$0 >> 2] = $3109;
        $$0$i$i$i$i1$i$i1064 = $3109 + 4 | 0;
        $3124 = $3109;
        break;
       }
      } while (0);
      $3121 = HEAP32[$$0$i$i$i$i1$i$i1064 >> 2] | 0;
      if (!$3121) {
       HEAP32[$3078 >> 2] = 0;
       HEAP32[$3078 + 4 >> 2] = 0;
       HEAP32[$3078 + 8 >> 2] = $3124;
       HEAP32[$$0$i$i$i$i1$i$i1064 >> 2] = $3078;
       $3128 = HEAP32[HEAP32[$bindings65 >> 2] >> 2] | 0;
       if (!$3128) $3132 = $3078; else {
        HEAP32[$bindings65 >> 2] = $3128;
        $3132 = HEAP32[$$0$i$i$i$i1$i$i1064 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$363 >> 2] | 0, $3132);
       HEAP32[$364 >> 2] = (HEAP32[$364 >> 2] | 0) + 1;
       $3137 = $3082;
      } else if (($3121 | 0) == ($3078 | 0)) $3137 = $6150; else {
       __ZdlPv($3078);
       $3137 = $6150;
      }
      $3138 = HEAP32[$3137 + 4 >> 2] | 0;
      if (!$3138) {
       $$0$i$i$i$i$i1072 = $3137;
       while (1) {
        $3143 = HEAP32[$$0$i$i$i$i$i1072 + 8 >> 2] | 0;
        if ((HEAP32[$3143 >> 2] | 0) == ($$0$i$i$i$i$i1072 | 0)) {
         $$01$i$i$i$i$i1075 = $3143;
         break;
        } else $$0$i$i$i$i$i1072 = $3143;
       }
      } else {
       $$0$i$i$i$i$i$i1070 = $3138;
       while (1) {
        $3140 = HEAP32[$$0$i$i$i$i$i$i1070 >> 2] | 0;
        if (!$3140) {
         $$01$i$i$i$i$i1075 = $$0$i$i$i$i$i$i1070;
         break;
        } else $$0$i$i$i$i$i$i1070 = $3140;
       }
      }
      if (($$01$i$i$i$i$i1075 | 0) == ($3076 | 0)) break; else {
       $3082 = $$01$i$i$i$i$i1075;
       $6150 = $$01$i$i$i$i$i1075;
      }
     }
     $3153 = HEAP32[$365 >> 2] | 0;
    }
    $__k$val$i1079 = HEAP32[HEAP32[$$lcssa8795 + 28 >> 2] >> 2] | 0;
    $3154 = $__k$val$i1079;
    do if (!$3153) {
     HEAP32[$__parent$i1078 >> 2] = $365;
     $$0$i7$i1088 = $365;
     $3175 = $366;
     label = 916;
    } else {
     $__nd$0$i$i1080 = $3153;
     while (1) {
      $3156 = HEAP32[$__nd$0$i$i1080 + 16 >> 2] | 0;
      if ($3156 >>> 0 > $__k$val$i1079 >>> 0) {
       $3158 = HEAP32[$__nd$0$i$i1080 >> 2] | 0;
       if (!$3158) {
        $$lcssa8844 = $__nd$0$i$i1080;
        $__nd$0$i$i1080$lcssa8842 = $__nd$0$i$i1080;
        label = 909;
        break;
       } else $__nd$0$be$in$i$i1082 = $3158;
      } else {
       if ($3156 >>> 0 >= $__k$val$i1079 >>> 0) {
        $__nd$0$i$i1080$lcssa = $__nd$0$i$i1080;
        label = 915;
        break;
       }
       $3162 = $__nd$0$i$i1080 + 4 | 0;
       $3163 = HEAP32[$3162 >> 2] | 0;
       if (!$3163) {
        $$lcssa8843 = $3162;
        $__nd$0$i$i1080$lcssa8841 = $__nd$0$i$i1080;
        label = 913;
        break;
       } else $__nd$0$be$in$i$i1082 = $3163;
      }
      $__nd$0$i$i1080 = $__nd$0$be$in$i$i1082;
     }
     if ((label | 0) == 909) {
      label = 0;
      HEAP32[$__parent$i1078 >> 2] = $__nd$0$i$i1080$lcssa8842;
      $$0$i7$i1088 = $$lcssa8844;
      $3175 = $__nd$0$i$i1080$lcssa8842;
      label = 916;
      break;
     } else if ((label | 0) == 913) {
      label = 0;
      HEAP32[$__parent$i1078 >> 2] = $__nd$0$i$i1080$lcssa8841;
      $$0$i7$i1088 = $$lcssa8843;
      $3175 = $__nd$0$i$i1080$lcssa8841;
      label = 916;
      break;
     } else if ((label | 0) == 915) {
      label = 0;
      HEAP32[$__parent$i1078 >> 2] = $__nd$0$i$i1080$lcssa;
      if (!$__nd$0$i$i1080$lcssa) {
       $$0$i7$i1088 = $__parent$i1078;
       $3175 = $__nd$0$i$i1080$lcssa;
       label = 916;
       break;
      } else {
       $__r$0$i1092 = $__nd$0$i$i1080$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 916) {
     label = 0;
     __THREW__ = 0;
     $3168 = invoke_ii(67, 24) | 0;
     $3169 = __THREW__;
     __THREW__ = 0;
     if ($3169 & 1) {
      label = 922;
      break L1;
     }
     HEAP32[$3168 + 16 >> 2] = $3154;
     HEAP32[$3168 + 20 >> 2] = 0;
     HEAP32[$3168 >> 2] = 0;
     HEAP32[$3168 + 4 >> 2] = 0;
     HEAP32[$3168 + 8 >> 2] = $3175;
     HEAP32[$$0$i7$i1088 >> 2] = $3168;
     $3177 = HEAP32[HEAP32[$bindings65 >> 2] >> 2] | 0;
     if (!$3177) $3181 = $3168; else {
      HEAP32[$bindings65 >> 2] = $3177;
      $3181 = HEAP32[$$0$i7$i1088 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$363 >> 2] | 0, $3181);
     HEAP32[$364 >> 2] = (HEAP32[$364 >> 2] | 0) + 1;
     $__r$0$i1092 = $3168;
    }
    HEAP32[$__r$0$i1092 + 20 >> 2] = $3075;
    __THREW__ = 0;
    invoke_viiiiii(10, $198 | 0, $$lcssa8793 + 4 | 0, $$lcssa8795 | 0, HEAP32[$$lcssa8795 + 20 >> 2] | 0, HEAP32[$$lcssa8795 + 24 >> 2] | 0, $bindings65 | 0);
    $3190 = __THREW__;
    __THREW__ = 0;
    if ($3190 & 1) {
     label = 922;
     break L1;
    }
    $3193 = HEAP32[$$lcssa8795 + 40 >> 2] | 0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$365 >> 2] | 0);
    $$010 = $3193;
    continue L1;
    break;
   }
  case 1497:
   {
    label = 0;
    __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($198, $$lcssa8504 + 4 | 0, $$lcssa8580, HEAP32[$$lcssa8580 + 40 >> 2] | 0, HEAP32[$$lcssa8580 + 44 >> 2] | 0, $$lcssa8580 + 28 | 0);
    $$010 = HEAP32[$$lcssa8580 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 1504:
   {
    label = 0;
    __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($198, $$idx$val$i860$lcssa8251$lcssa8266 + -136 | 0, $$lcssa8503, HEAP32[$$lcssa8503 + 40 >> 2] | 0, HEAP32[$$lcssa8503 + 44 >> 2] | 0, $$lcssa8503 + 28 | 0);
    $$010 = HEAP32[$$lcssa8503 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 1506:
   {
    label = 0;
    if (($$idx261$val$lcssa | 0) != ($$idx260$val$lcssa | 0)) HEAP32[$$idx261$lcssa >> 2] = $$idx261$val$lcssa + (~(($$idx261$val$lcssa + -4 - $$lcssa8501 | 0) >>> 2) << 2);
    HEAP32[$$lcssa8496 >> 2] = 0;
    $$010 = HEAP32[$$lcssa8494 + 40 >> 2] | 0;
    continue L1;
    break;
   }
  case 1525:
   {
    label = 0;
    $4826 = HEAP32[$$idx$val$i860$lcssa8254 + -140 >> 2] | 0;
    if ((HEAP32[$204 >> 2] | 0) != 1) {
     $$lcssa9188 = $4826;
     label = 1526;
     break L1;
    }
    $4854 = HEAP32[((HEAP8[$205 >> 0] | 0) == 0 ? $4826 + 56 | 0 : $4826 + 52 | 0) >> 2] | 0;
    __ZN12_GLOBAL__N_15Stack3popEv($198);
    $$010 = $4854;
    continue L1;
    break;
   }
  case 1575:
   {
    label = 0;
    __ZN12_GLOBAL__N_15Stack3popEv($198);
    __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($198, $$lcssa8482 + 4 | 0, $$lcssa8493, HEAP32[$$lcssa8493 + 40 >> 2] | 0, HEAP32[$$lcssa8493 + 44 >> 2] | 0, $$lcssa8493 + 28 | 0);
    $$010 = HEAP32[$$lcssa8493 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 1576:
   {
    label = 0;
    $4957 = HEAP32[$$idx$val$i860$lcssa8255$lcssa8267 + -96 >> 2] | 0;
    if (!$4957) {
     label = 1577;
     break L1;
    }
    if ((HEAP32[$204 >> 2] | 0) != 19) {
     $$lcssa8475$lcssa8483 = $$lcssa8475;
     label = 1579;
     break L1;
    }
    $4983 = (HEAP32[$205 >> 2] | 0) + 8 | 0;
    $4984 = HEAP32[$330 >> 2] | 0;
    $4985 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($4984, $4983) | 0;
    if (($4985 | 0) == ($4984 + 4 | 0)) {
     $4990 = __Znwj(12) | 0;
     __THREW__ = 0;
     invoke_vii(40, $4990 | 0, $4983 | 0);
     $4991 = __THREW__;
     __THREW__ = 0;
     if ($4991 & 1) {
      $$lcssa9187 = $4990;
      label = 1594;
      break L1;
     }
     HEAP32[(__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($4984, $4983) | 0) >> 2] = $4990;
     $$0$i1955 = $4990;
    } else $$0$i1955 = HEAP32[$4985 + 28 >> 2] | 0;
    __ZN12_GLOBAL__N_15Stack3popEv($198);
    $$010 = __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $$lcssa8475 + 4 | 0, $4957, $$0$i1955) | 0;
    continue L1;
    break;
   }
  case 1645:
   {
    label = 0;
    $5116 = HEAP32[$$idx$val$i860$lcssa8256 + -140 >> 2] | 0;
    switch (HEAP32[$204 >> 2] | 0) {
    case 19:
    case 18:
    case 16:
     break;
    default:
     {
      $$lcssa9186 = $5116;
      label = 1646;
      break L1;
     }
    }
    $5140 = HEAP32[$5116 + 52 >> 2] | 0;
    HEAP32[$$lcssa8294 >> 2] = 10;
    $5141 = $$idx$val$i860$lcssa8256 + -104 | 0;
    HEAP32[$5141 >> 2] = HEAP32[$204 >> 2];
    HEAP32[$5141 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
    HEAP32[$5141 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
    HEAP32[$5141 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
    $$010 = $5140;
    continue L1;
    break;
   }
  case 1714:
   {
    label = 0;
    $$010 = HEAP32[$$cast$lcssa + 8 >> 2] | 0;
    continue L1;
    break;
   }
  case 1795:
   {
    label = 0;
    HEAP32[$$lcssa8297$lcssa8304 >> 2] = 14;
    $5484 = $$idx$val$i860$lcssa8259$lcssa8275 + -104 | 0;
    HEAP32[$5484 >> 2] = HEAP32[$204 >> 2];
    HEAP32[$5484 + 4 >> 2] = HEAP32[$204 + 4 >> 2];
    HEAP32[$5484 + 8 >> 2] = HEAP32[$204 + 8 >> 2];
    HEAP32[$5484 + 12 >> 2] = HEAP32[$204 + 12 >> 2];
    $5485 = HEAP32[HEAP32[$$idx254$lcssa >> 2] >> 2] | 0;
    $5486 = $$idx$val$i860$lcssa8259$lcssa8275 + -16 | 0;
    $__k$val$i2131 = HEAP32[$$lcssa8456 + 56 >> 2] | 0;
    $5488 = $$idx$val$i860$lcssa8259$lcssa8275 + -12 | 0;
    $5489 = HEAP32[$5488 >> 2] | 0;
    $5491 = $__k$val$i2131;
    do if (!$5489) {
     HEAP32[$0 >> 2] = $5488;
     $$0$i7$i2140 = $5488;
     $5511 = $5488;
     label = 1805;
    } else {
     $__nd$0$i$i2132 = $5489;
     while (1) {
      $5493 = HEAP32[$__nd$0$i$i2132 + 16 >> 2] | 0;
      if ($5493 >>> 0 > $__k$val$i2131 >>> 0) {
       $5495 = HEAP32[$__nd$0$i$i2132 >> 2] | 0;
       if (!$5495) {
        $$lcssa8836 = $__nd$0$i$i2132;
        $__nd$0$i$i2132$lcssa8834 = $__nd$0$i$i2132;
        label = 1798;
        break;
       } else $__nd$0$be$in$i$i2134 = $5495;
      } else {
       if ($5493 >>> 0 >= $__k$val$i2131 >>> 0) {
        $__nd$0$i$i2132$lcssa = $__nd$0$i$i2132;
        label = 1804;
        break;
       }
       $5499 = $__nd$0$i$i2132 + 4 | 0;
       $5500 = HEAP32[$5499 >> 2] | 0;
       if (!$5500) {
        $$lcssa8835 = $5499;
        $__nd$0$i$i2132$lcssa8833 = $__nd$0$i$i2132;
        label = 1802;
        break;
       } else $__nd$0$be$in$i$i2134 = $5500;
      }
      $__nd$0$i$i2132 = $__nd$0$be$in$i$i2134;
     }
     if ((label | 0) == 1798) {
      label = 0;
      HEAP32[$0 >> 2] = $__nd$0$i$i2132$lcssa8834;
      $$0$i7$i2140 = $$lcssa8836;
      $5511 = $__nd$0$i$i2132$lcssa8834;
      label = 1805;
      break;
     } else if ((label | 0) == 1802) {
      label = 0;
      HEAP32[$0 >> 2] = $__nd$0$i$i2132$lcssa8833;
      $$0$i7$i2140 = $$lcssa8835;
      $5511 = $__nd$0$i$i2132$lcssa8833;
      label = 1805;
      break;
     } else if ((label | 0) == 1804) {
      label = 0;
      HEAP32[$0 >> 2] = $__nd$0$i$i2132$lcssa;
      if (!$__nd$0$i$i2132$lcssa) {
       $$0$i7$i2140 = $0;
       $5511 = $__nd$0$i$i2132$lcssa;
       label = 1805;
       break;
      } else {
       $$idx$val$i860$lcssa82598277 = $$idx$val$i860$lcssa8259$lcssa8275;
       $__r$0$i2144 = $__nd$0$i$i2132$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 1805) {
     label = 0;
     $5506 = __Znwj(24) | 0;
     HEAP32[$5506 + 16 >> 2] = $5491;
     HEAP32[$5506 + 20 >> 2] = 0;
     HEAP32[$5506 >> 2] = 0;
     HEAP32[$5506 + 4 >> 2] = 0;
     HEAP32[$5506 + 8 >> 2] = $5511;
     HEAP32[$$0$i7$i2140 >> 2] = $5506;
     $5513 = HEAP32[HEAP32[$5486 >> 2] >> 2] | 0;
     if (!$5513) $5518 = $5506; else {
      HEAP32[$5486 >> 2] = $5513;
      $5518 = HEAP32[$$0$i7$i2140 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i860$lcssa8259$lcssa8275 + -12 >> 2] | 0, $5518);
     $5519 = $$idx$val$i860$lcssa8259$lcssa8275 + -8 | 0;
     HEAP32[$5519 >> 2] = (HEAP32[$5519 >> 2] | 0) + 1;
     $$idx$val$i860$lcssa82598277 = $$idx$val$i860$lcssa8259$lcssa8275;
     $__r$0$i2144 = $5506;
    }
    HEAP32[$__r$0$i2144 + 20 >> 2] = $5485;
    HEAP32[$$idx$val$i860$lcssa82598277 + -56 >> 2] = 0;
    $$010 = HEAP32[$$lcssa8456 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  case 1932:
   {
    label = 0;
    $5853 = HEAP32[$$idx$val$lcssa + ($$lcssa8448 << 2) >> 2] | 0;
    $5854 = $$idx$val$i860$lcssa8260$lcssa8280 + -16 | 0;
    $__k$val$i2283 = HEAP32[$$lcssa8431 + 56 >> 2] | 0;
    $5856 = $$idx$val$i860$lcssa8260$lcssa8280 + -12 | 0;
    $5857 = HEAP32[$5856 >> 2] | 0;
    $5859 = $__k$val$i2283;
    do if (!$5857) {
     HEAP32[$0 >> 2] = $5856;
     $$0$i7$i2292 = $5856;
     $5879 = $5856;
     label = 1942;
    } else {
     $__nd$0$i$i2284 = $5857;
     while (1) {
      $5861 = HEAP32[$__nd$0$i$i2284 + 16 >> 2] | 0;
      if ($5861 >>> 0 > $__k$val$i2283 >>> 0) {
       $5863 = HEAP32[$__nd$0$i$i2284 >> 2] | 0;
       if (!$5863) {
        $$lcssa8832 = $__nd$0$i$i2284;
        $__nd$0$i$i2284$lcssa8830 = $__nd$0$i$i2284;
        label = 1935;
        break;
       } else $__nd$0$be$in$i$i2286 = $5863;
      } else {
       if ($5861 >>> 0 >= $__k$val$i2283 >>> 0) {
        $__nd$0$i$i2284$lcssa = $__nd$0$i$i2284;
        label = 1941;
        break;
       }
       $5867 = $__nd$0$i$i2284 + 4 | 0;
       $5868 = HEAP32[$5867 >> 2] | 0;
       if (!$5868) {
        $$lcssa8831 = $5867;
        $__nd$0$i$i2284$lcssa8829 = $__nd$0$i$i2284;
        label = 1939;
        break;
       } else $__nd$0$be$in$i$i2286 = $5868;
      }
      $__nd$0$i$i2284 = $__nd$0$be$in$i$i2286;
     }
     if ((label | 0) == 1935) {
      label = 0;
      HEAP32[$0 >> 2] = $__nd$0$i$i2284$lcssa8830;
      $$0$i7$i2292 = $$lcssa8832;
      $5879 = $__nd$0$i$i2284$lcssa8830;
      label = 1942;
      break;
     } else if ((label | 0) == 1939) {
      label = 0;
      HEAP32[$0 >> 2] = $__nd$0$i$i2284$lcssa8829;
      $$0$i7$i2292 = $$lcssa8831;
      $5879 = $__nd$0$i$i2284$lcssa8829;
      label = 1942;
      break;
     } else if ((label | 0) == 1941) {
      label = 0;
      HEAP32[$0 >> 2] = $__nd$0$i$i2284$lcssa;
      if (!$__nd$0$i$i2284$lcssa) {
       $$0$i7$i2292 = $0;
       $5879 = $__nd$0$i$i2284$lcssa;
       label = 1942;
       break;
      } else {
       $__r$0$i2296 = $__nd$0$i$i2284$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 1942) {
     label = 0;
     $5874 = __Znwj(24) | 0;
     HEAP32[$5874 + 16 >> 2] = $5859;
     HEAP32[$5874 + 20 >> 2] = 0;
     HEAP32[$5874 >> 2] = 0;
     HEAP32[$5874 + 4 >> 2] = 0;
     HEAP32[$5874 + 8 >> 2] = $5879;
     HEAP32[$$0$i7$i2292 >> 2] = $5874;
     $5881 = HEAP32[HEAP32[$5854 >> 2] >> 2] | 0;
     if (!$5881) $5886 = $5874; else {
      HEAP32[$5854 >> 2] = $5881;
      $5886 = HEAP32[$$0$i7$i2292 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$$idx$val$i860$lcssa8260$lcssa8280 + -12 >> 2] | 0, $5886);
     $5887 = $$idx$val$i860$lcssa8260$lcssa8280 + -8 | 0;
     HEAP32[$5887 >> 2] = (HEAP32[$5887 >> 2] | 0) + 1;
     $__r$0$i2296 = $5874;
    }
    HEAP32[$__r$0$i2296 + 20 >> 2] = $5853;
    $$010 = HEAP32[$$lcssa8431 + 48 >> 2] | 0;
    continue L1;
    break;
   }
  }
 }
 L1848 : switch (label | 0) {
 case 26:
  {
   $$107 = ___cxa_find_matching_catch() | 0;
   $$107135 = tempRet0;
   ___resumeException($$107 | 0);
   break;
  }
 case 59:
  {
   $582 = ___cxa_find_matching_catch() | 0;
   $583 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$372 >> 2] | 0);
   $eh$lpad$body$i$index8Z2D = $583;
   $eh$lpad$body$i$indexZ2D = $582;
   label = 119;
   break;
  }
 case 67:
  {
   $608 = ___cxa_find_matching_catch() | 0;
   $609 = tempRet0;
   $610 = HEAP32[$2 >> 2] | 0;
   $612 = $610;
   if ($610) {
    $613 = HEAP32[$373 >> 2] | 0;
    if (($613 | 0) != ($610 | 0)) HEAP32[$373 >> 2] = $613 + (~(($613 + -4 - $612 | 0) >>> 2) << 2);
    __ZdlPv($610);
   }
   $$0$i$i = $609;
   $$01$i$i = $608;
   label = 112;
   break;
  }
 case 85:
  {
   $671 = ___cxa_find_matching_catch() | 0;
   $672 = tempRet0;
   __ZdlPv($$lcssa9184);
   $eh$lpad$body$i$i$index2Z2D = $672;
   $eh$lpad$body$i$i$indexZ2D = $671;
   label = 108;
   break;
  }
 case 107:
  {
   $738 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$i$indexZ2D = $738;
   label = 108;
   break;
  }
 case 117:
  {
   $759 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $759;
   $772 = HEAP32[$369 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $772);
   ___resumeException($$01$i | 0);
   break;
  }
 case 118:
  {
   $761 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index8Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $761;
   label = 119;
   break;
  }
 case 161:
  {
   $863 = ___cxa_find_matching_catch() | 0;
   $864 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($11, HEAP32[$380 >> 2] | 0);
   $eh$lpad$body$index26Z2D = $864;
   $eh$lpad$body$indexZ2D = $863;
   break;
  }
 case 193:
  {
   $938 = ___cxa_find_matching_catch() | 0;
   $939 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($9, HEAP32[$384 >> 2] | 0);
   $eh$lpad$body$i523$index20Z2D = $939;
   $eh$lpad$body$i523$indexZ2D = $938;
   label = 253;
   break;
  }
 case 201:
  {
   $964 = ___cxa_find_matching_catch() | 0;
   $965 = tempRet0;
   $966 = HEAP32[$10 >> 2] | 0;
   $968 = $966;
   if ($966) {
    $969 = HEAP32[$385 >> 2] | 0;
    if (($969 | 0) != ($966 | 0)) HEAP32[$385 >> 2] = $969 + (~(($969 + -4 - $968 | 0) >>> 2) << 2);
    __ZdlPv($966);
   }
   $$0$i$i517 = $965;
   $$01$i$i516 = $964;
   label = 246;
   break;
  }
 case 219:
  {
   $1028 = ___cxa_find_matching_catch() | 0;
   $1029 = tempRet0;
   __ZdlPv($$lcssa9182);
   $eh$lpad$body$i$i510$index14Z2D = $1029;
   $eh$lpad$body$i$i510$indexZ2D = $1028;
   label = 242;
   break;
  }
 case 241:
  {
   $1095 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$i510$index14Z2D = tempRet0;
   $eh$lpad$body$i$i510$indexZ2D = $1095;
   label = 242;
   break;
  }
 case 251:
  {
   $1116 = ___cxa_find_matching_catch() | 0;
   $$0$i526 = tempRet0;
   $$01$i525 = $1116;
   label = 257;
   break;
  }
 case 252:
  {
   $1118 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i523$index20Z2D = tempRet0;
   $eh$lpad$body$i523$indexZ2D = $1118;
   label = 253;
   break;
  }
 case 268:
  {
   $1170 = ___cxa_find_matching_catch() | 0;
   $1171 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $eh$lpad$body$i527$index31Z2D = $1171;
   $eh$lpad$body$i527$indexZ2D = $1170;
   label = 277;
   break;
  }
 case 273:
  {
   ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
   break;
  }
 case 275:
  {
   $$0$i530 = ___cxa_find_matching_catch() | 0;
   $$01$i529 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($$0$i530 | 0);
   break;
  }
 case 276:
  {
   $1182 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i527$index31Z2D = tempRet0;
   $eh$lpad$body$i527$indexZ2D = $1182;
   label = 277;
   break;
  }
 case 286:
  {
   $1200 = ___cxa_find_matching_catch() | 0;
   $1201 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($16, HEAP32[$394 >> 2] | 0);
   $$107 = $1200;
   $$107135 = $1201;
   ___resumeException($$107 | 0);
   break;
  }
 case 369:
  {
   $1457 = ___cxa_find_matching_catch() | 0;
   $1458 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($23, HEAP32[$414 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($22, HEAP32[$411 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($fields, HEAP32[$408 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env26, HEAP32[$405 >> 2] | 0);
   $$107 = $1457;
   $$107135 = $1458;
   ___resumeException($$107 | 0);
   break;
  }
 case 372:
  {
   $1471 = ___cxa_find_matching_catch() | 0;
   $1472 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env27, HEAP32[$415 >> 2] | 0);
   $$107 = $1471;
   $$107135 = $1472;
   ___resumeException($$107 | 0);
   break;
  }
 case 384:
  {
   $1501 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $24 | 0, 52670, 50);
   $1502 = __THREW__;
   __THREW__ = 0;
   if ($1502 & 1) {
    $1508 = ___cxa_find_matching_catch() | 0;
    $$2182522 = $1508;
    $$2302521 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $1501 | 0, $198 | 0, $$010$lcssa8847 + 4 | 0, $24 | 0);
    $1505 = __THREW__;
    __THREW__ = 0;
    if ($1505 & 1) $$0142 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1501 | 0, 392, 179);
     __THREW__ = 0;
     $$0142 = 0;
    }
    $1510 = ___cxa_find_matching_catch() | 0;
    $1511 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    if ($$0142) {
     $$2182522 = $1510;
     $$2302521 = $1511;
    } else {
     $$107 = $1510;
     $$107135 = $1511;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($1501 | 0);
   $$107 = $$2182522;
   $$107135 = $$2302521;
   ___resumeException($$107 | 0);
   break;
  }
 case 427:
  {
   $1630 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 52721, 41) | 0;
   $1631 = HEAP32[$1632 >> 2] | 0;
   $1633 = HEAP8[$1631 >> 0] | 0;
   $1635 = ($1633 & 1) == 0;
   $1645 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($1630, $1635 ? $1631 + 1 | 0 : HEAP32[$1631 + 8 >> 2] | 0, $1635 ? ($1633 & 255) >>> 1 : HEAP32[$1631 + 4 >> 2] | 0) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($1645 + (HEAP32[(HEAP32[$1645 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $1651 = invoke_iii(22, $0 | 0, 11164) | 0;
   $1652 = __THREW__;
   __THREW__ = 0;
   if ($1652 & 1) {
    $1660 = ___cxa_find_matching_catch() | 0;
    $1661 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1660 | 0);
   }
   __THREW__ = 0;
   $1657 = invoke_iii(HEAP32[(HEAP32[$1651 >> 2] | 0) + 28 >> 2] | 0, $1651 | 0, 10) | 0;
   $1658 = __THREW__;
   __THREW__ = 0;
   if ($1658 & 1) {
    $1660 = ___cxa_find_matching_catch() | 0;
    $1661 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1660 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1645, $1657) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1645) | 0;
    _abort();
   }
   break;
  }
 case 434:
  {
   $1676 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 52763, 29) | 0, HEAP32[$$lcssa9012 >> 2] | 0) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($1676 + (HEAP32[(HEAP32[$1676 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $1682 = invoke_iii(22, $0 | 0, 11164) | 0;
   $1683 = __THREW__;
   __THREW__ = 0;
   if ($1683 & 1) {
    $1691 = ___cxa_find_matching_catch() | 0;
    $1692 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1691 | 0);
   }
   __THREW__ = 0;
   $1688 = invoke_iii(HEAP32[(HEAP32[$1682 >> 2] | 0) + 28 >> 2] | 0, $1682 | 0, 10) | 0;
   $1689 = __THREW__;
   __THREW__ = 0;
   if ($1689 & 1) {
    $1691 = ___cxa_find_matching_catch() | 0;
    $1692 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($1691 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($1676, $1688) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($1676) | 0;
    _abort();
   }
   break;
  }
 case 440:
  {
   $1699 = ___cxa_allocate_exception(24) | 0;
   $1700 = $$lcssa8798 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $26 | 0, HEAP32[$204 >> 2] | 0);
   $1701 = __THREW__;
   __THREW__ = 0;
   do if ($1701 & 1) {
    $1709 = ___cxa_find_matching_catch() | 0;
    $$4202525 = $1709;
    $$4322524 = tempRet0;
   } else {
    __THREW__ = 0;
    $1703 = invoke_iiii(33, $26 | 0, 0, 52793) | 0;
    $1704 = __THREW__;
    __THREW__ = 0;
    if ($1704 & 1) {
     $1711 = ___cxa_find_matching_catch() | 0;
     $1712 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
     $$4202525 = $1711;
     $$4322524 = $1712;
     break;
    };
    HEAP32[$25 >> 2] = HEAP32[$1703 >> 2];
    HEAP32[$25 + 4 >> 2] = HEAP32[$1703 + 4 >> 2];
    HEAP32[$25 + 8 >> 2] = HEAP32[$1703 + 8 >> 2];
    HEAP32[$1703 >> 2] = 0;
    HEAP32[$1703 + 4 >> 2] = 0;
    HEAP32[$1703 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $1699 | 0, $198 | 0, $1700 | 0, $25 | 0);
    $1706 = __THREW__;
    __THREW__ = 0;
    if ($1706 & 1) $$0146 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $1699 | 0, 392, 179);
     __THREW__ = 0;
     $$0146 = 0;
    }
    $1713 = ___cxa_find_matching_catch() | 0;
    $1714 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
    if ($$0146) {
     $$4202525 = $1713;
     $$4322524 = $1714;
    } else {
     $$107 = $1713;
     $$107135 = $1714;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($1699 | 0);
   $$107 = $$4202525;
   $$107135 = $$4322524;
   ___resumeException($$107 | 0);
   break;
  }
 case 452:
  {
   $1735 = $ss + 64 | 0;
   $1736 = $ss + 8 | 0;
   HEAP32[$1736 >> 2] = 2912;
   $1737 = $ss + 12 | 0;
   HEAP32[$ss >> 2] = 2952;
   HEAP32[$1735 >> 2] = 2972;
   HEAP32[$ss + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss + 64 | 0, $1737 | 0);
   $1740 = __THREW__;
   __THREW__ = 0;
   if ($1740 & 1) {
    $1753 = ___cxa_find_matching_catch() | 0;
    $$0$i697 = tempRet0;
    $$01$i696 = $1753;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1735);
    ___resumeException($$01$i696 | 0);
   }
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 2892;
   HEAP32[$ss + 64 >> 2] = 2932;
   HEAP32[$1736 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $1737 | 0);
   $1745 = __THREW__;
   __THREW__ = 0;
   do if ($1745 & 1) {
    $1755 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i694$index36Z2D = tempRet0;
    $eh$lpad$body$i694$indexZ2D = $1755;
   } else {
    HEAP32[$1737 >> 2] = 2988;
    $1747 = $ss + 44 | 0;
    HEAP32[$1747 >> 2] = 0;
    HEAP32[$1747 + 4 >> 2] = 0;
    HEAP32[$1747 + 8 >> 2] = 0;
    HEAP32[$1747 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $1737 | 0, $0 | 0);
    $1749 = __THREW__;
    __THREW__ = 0;
    if ($1749 & 1) {
     $1751 = ___cxa_find_matching_catch() | 0;
     $1752 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1747);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1737);
     $eh$lpad$body$i694$index36Z2D = $1752;
     $eh$lpad$body$i694$indexZ2D = $1751;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $1757 = $ss + 8 | 0;
    __THREW__ = 0;
    $1758 = invoke_iiii(29, $1757 | 0, 52828, 9) | 0;
    $1759 = __THREW__;
    __THREW__ = 0;
    do if ($1759 & 1) label = 468; else {
     __THREW__ = 0;
     $1767 = invoke_iii(24, $1758 | 0, (HEAP32[$$lcssa8817 >> 2] | 0) - (HEAP32[$$lcssa8823 >> 2] | 0) >> 2 | 0) | 0;
     $1768 = __THREW__;
     __THREW__ = 0;
     if ($1768 & 1) label = 468; else {
      __THREW__ = 0;
      $1770 = invoke_iiii(29, $1767 | 0, 52838, 16) | 0;
      $1771 = __THREW__;
      __THREW__ = 0;
      if ($1771 & 1) label = 468; else {
       __THREW__ = 0;
       $1779 = invoke_iii(24, $1770 | 0, (HEAP32[$$lcssa8805 >> 2] | 0) - (HEAP32[$$lcssa8811 >> 2] | 0) >> 2 | 0) | 0;
       $1780 = __THREW__;
       __THREW__ = 0;
       if ($1780 & 1) label = 468; else {
        __THREW__ = 0;
        invoke_iiii(29, $1779 | 0, 60756, 1) | 0;
        $1782 = __THREW__;
        __THREW__ = 0;
        if ($1782 & 1) label = 468; else {
         $1784 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $27 | 0, $1737 | 0);
         $1785 = __THREW__;
         __THREW__ = 0;
         if ($1785 & 1) {
          $1793 = ___cxa_find_matching_catch() | 0;
          $$5212529 = $1793;
          $$5332528 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(16, $1784 | 0, $198 | 0, $$lcssa8799 + 4 | 0, $27 | 0);
          $1788 = __THREW__;
          __THREW__ = 0;
          if ($1788 & 1) $$0149 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $1784 | 0, 392, 179);
           __THREW__ = 0;
           $$0149 = 0;
          }
          $1795 = ___cxa_find_matching_catch() | 0;
          $1796 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
          if ($$0149) {
           $$5212529 = $1795;
           $$5332528 = $1796;
          } else {
           $$6 = $1795;
           $$634 = $1796;
           break;
          }
         }
         ___cxa_free_exception($1784 | 0);
         $$6 = $$5212529;
         $$634 = $$5332528;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 468) {
     $1791 = ___cxa_find_matching_catch() | 0;
     $$6 = $1791;
     $$634 = tempRet0;
    }
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$1735 >> 2] = 2932;
    HEAP32[$1757 >> 2] = 2912;
    HEAP32[$1737 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1747);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1737);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1735);
    $$107 = $$6;
    $$107135 = $$634;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i697 = $eh$lpad$body$i694$index36Z2D;
   $$01$i696 = $eh$lpad$body$i694$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1735);
   ___resumeException($$01$i696 | 0);
   break;
  }
 case 499:
  {
   $1900 = ___cxa_find_matching_catch() | 0;
   $1902 = HEAP32[$args >> 2] | 0;
   if (!$1902) ___resumeException($1900 | 0);
   $1905 = HEAP32[$209 >> 2] | 0;
   if (($1905 | 0) != ($1902 | 0)) HEAP32[$209 >> 2] = $1905 + (~(($1905 + -4 - $1902 | 0) >>> 2) << 2);
   __ZdlPv($1902);
   ___resumeException($1900 | 0);
   break;
  }
 case 529:
  {
   $1987 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body788$index41Z2D = tempRet0;
   $eh$lpad$body788$indexZ2D = $1987;
   label = 530;
   break;
  }
 case 562:
  {
   $2063 = ___cxa_find_matching_catch() | 0;
   $2064 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, HEAP32[$213 >> 2] | 0);
   $eh$lpad$body788$index41Z2D = $2064;
   $eh$lpad$body788$indexZ2D = $2063;
   label = 530;
   break;
  }
 case 578:
  {
   $2115 = $$lcssa8421;
   $lpad$phi2700$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2700$index46 = tempRet0;
   label = 580;
   break;
  }
 case 579:
  {
   $2113 = ___cxa_find_matching_catch() | 0;
   $2115 = HEAP32[$213 >> 2] | 0;
   $lpad$phi2700$index = $2113;
   $lpad$phi2700$index46 = tempRet0;
   label = 580;
   break;
  }
 case 632:
  {
   $2247 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 52855, 42) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($2247 + (HEAP32[(HEAP32[$2247 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $2253 = invoke_iii(22, $0 | 0, 11164) | 0;
   $2254 = __THREW__;
   __THREW__ = 0;
   if ($2254 & 1) {
    $2262 = ___cxa_find_matching_catch() | 0;
    $2263 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($2262 | 0);
   }
   __THREW__ = 0;
   $2259 = invoke_iii(HEAP32[(HEAP32[$2253 >> 2] | 0) + 28 >> 2] | 0, $2253 | 0, 10) | 0;
   $2260 = __THREW__;
   __THREW__ = 0;
   if ($2260 & 1) {
    $2262 = ___cxa_find_matching_catch() | 0;
    $2263 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($2262 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2247, $2259) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2247) | 0;
    _abort();
   }
   break;
  }
 case 637:
  {
   $2266 = ___cxa_allocate_exception(24) | 0;
   $2267 = $$lcssa8306$lcssa + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $35 | 0, HEAP32[$$pre$phi5096$lcssa$lcssaZ2D >> 2] | 0);
   $2269 = __THREW__;
   __THREW__ = 0;
   do if ($2269 & 1) {
    $2320 = ___cxa_find_matching_catch() | 0;
    $$162532 = $2320;
    $$16442531 = tempRet0;
   } else {
    __THREW__ = 0;
    $2271 = invoke_iiii(33, $35 | 0, 0, 52898) | 0;
    $2272 = __THREW__;
    __THREW__ = 0;
    if ($2272 & 1) {
     $2322 = ___cxa_find_matching_catch() | 0;
     $2323 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
     $$162532 = $2322;
     $$16442531 = $2323;
     break;
    };
    HEAP32[$34 >> 2] = HEAP32[$2271 >> 2];
    HEAP32[$34 + 4 >> 2] = HEAP32[$2271 + 4 >> 2];
    HEAP32[$34 + 8 >> 2] = HEAP32[$2271 + 8 >> 2];
    HEAP32[$2271 >> 2] = 0;
    HEAP32[$2271 + 4 >> 2] = 0;
    HEAP32[$2271 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2274 = invoke_iii(27, $34 | 0, 52915) | 0;
    $2275 = __THREW__;
    __THREW__ = 0;
    if ($2275 & 1) {
     $2324 = ___cxa_find_matching_catch() | 0;
     $$14 = $2324;
     $$1442 = tempRet0;
     $$7161 = 1;
    } else {
     HEAP32[$33 >> 2] = HEAP32[$2274 >> 2];
     HEAP32[$33 + 4 >> 2] = HEAP32[$2274 + 4 >> 2];
     HEAP32[$33 + 8 >> 2] = HEAP32[$2274 + 8 >> 2];
     HEAP32[$2274 >> 2] = 0;
     HEAP32[$2274 + 4 >> 2] = 0;
     HEAP32[$2274 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(60, $36 | 0, HEAP32[$$lcssa8322$lcssa >> 2] | 0);
     $2277 = __THREW__;
     __THREW__ = 0;
     if ($2277 & 1) {
      $2326 = ___cxa_find_matching_catch() | 0;
      $$1322 = $2326;
      $$1341 = tempRet0;
      $$6160 = 1;
     } else {
      $2279 = HEAP8[$36 >> 0] | 0;
      $2281 = ($2279 & 1) == 0;
      __THREW__ = 0;
      $2291 = invoke_iiii(35, $33 | 0, ($2281 ? $36 + 1 | 0 : HEAP32[$36 + 8 >> 2] | 0) | 0, ($2281 ? ($2279 & 255) >>> 1 : HEAP32[$36 + 4 >> 2] | 0) | 0) | 0;
      $2292 = __THREW__;
      __THREW__ = 0;
      if ($2292 & 1) {
       $2328 = ___cxa_find_matching_catch() | 0;
       $$12 = $2328;
       $$1240 = tempRet0;
       $$5159 = 1;
      } else {
       HEAP32[$32 >> 2] = HEAP32[$2291 >> 2];
       HEAP32[$32 + 4 >> 2] = HEAP32[$2291 + 4 >> 2];
       HEAP32[$32 + 8 >> 2] = HEAP32[$2291 + 8 >> 2];
       HEAP32[$2291 >> 2] = 0;
       HEAP32[$2291 + 4 >> 2] = 0;
       HEAP32[$2291 + 8 >> 2] = 0;
       __THREW__ = 0;
       $2294 = invoke_iii(27, $32 | 0, 52946) | 0;
       $2295 = __THREW__;
       __THREW__ = 0;
       if ($2295 & 1) {
        $2330 = ___cxa_find_matching_catch() | 0;
        $$11 = $2330;
        $$1139 = tempRet0;
        $$4158 = 1;
       } else {
        HEAP32[$31 >> 2] = HEAP32[$2294 >> 2];
        HEAP32[$31 + 4 >> 2] = HEAP32[$2294 + 4 >> 2];
        HEAP32[$31 + 8 >> 2] = HEAP32[$2294 + 8 >> 2];
        HEAP32[$2294 >> 2] = 0;
        HEAP32[$2294 + 4 >> 2] = 0;
        HEAP32[$2294 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(60, $37 | 0, HEAP32[$204 >> 2] | 0);
        $2297 = __THREW__;
        __THREW__ = 0;
        if ($2297 & 1) {
         $2332 = ___cxa_find_matching_catch() | 0;
         $$10 = $2332;
         $$1038 = tempRet0;
         $$3157 = 1;
        } else {
         $2299 = HEAP8[$37 >> 0] | 0;
         $2301 = ($2299 & 1) == 0;
         __THREW__ = 0;
         $2311 = invoke_iiii(35, $31 | 0, ($2301 ? $37 + 1 | 0 : HEAP32[$37 + 8 >> 2] | 0) | 0, ($2301 ? ($2299 & 255) >>> 1 : HEAP32[$37 + 4 >> 2] | 0) | 0) | 0;
         $2312 = __THREW__;
         __THREW__ = 0;
         if ($2312 & 1) {
          $2334 = ___cxa_find_matching_catch() | 0;
          $$2156 = 1;
          $$9 = $2334;
          $$937 = tempRet0;
         } else {
          HEAP32[$30 >> 2] = HEAP32[$2311 >> 2];
          HEAP32[$30 + 4 >> 2] = HEAP32[$2311 + 4 >> 2];
          HEAP32[$30 + 8 >> 2] = HEAP32[$2311 + 8 >> 2];
          HEAP32[$2311 >> 2] = 0;
          HEAP32[$2311 + 4 >> 2] = 0;
          HEAP32[$2311 + 8 >> 2] = 0;
          __THREW__ = 0;
          $2314 = invoke_iii(27, $30 | 0, 60756) | 0;
          $2315 = __THREW__;
          __THREW__ = 0;
          if ($2315 & 1) {
           $2336 = ___cxa_find_matching_catch() | 0;
           $$1155 = 1;
           $$8 = $2336;
           $$836 = tempRet0;
          } else {
           HEAP32[$29 >> 2] = HEAP32[$2314 >> 2];
           HEAP32[$29 + 4 >> 2] = HEAP32[$2314 + 4 >> 2];
           HEAP32[$29 + 8 >> 2] = HEAP32[$2314 + 8 >> 2];
           HEAP32[$2314 >> 2] = 0;
           HEAP32[$2314 + 4 >> 2] = 0;
           HEAP32[$2314 + 8 >> 2] = 0;
           __THREW__ = 0;
           invoke_viiii(16, $2266 | 0, $198 | 0, $2267 | 0, $29 | 0);
           $2317 = __THREW__;
           __THREW__ = 0;
           if ($2317 & 1) $$0154 = 1; else {
            __THREW__ = 0;
            invoke_viii(4, $2266 | 0, 392, 179);
            __THREW__ = 0;
            $$0154 = 0;
           }
           $2338 = ___cxa_find_matching_catch() | 0;
           $2339 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
           $$1155 = $$0154;
           $$8 = $2338;
           $$836 = $2339;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
          $$2156 = $$1155;
          $$9 = $$8;
          $$937 = $$836;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
         $$10 = $$9;
         $$1038 = $$937;
         $$3157 = $$2156;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
        $$11 = $$10;
        $$1139 = $$1038;
        $$4158 = $$3157;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
       $$12 = $$11;
       $$1240 = $$1139;
       $$5159 = $$4158;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
      $$1322 = $$12;
      $$1341 = $$1240;
      $$6160 = $$5159;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
     $$14 = $$1322;
     $$1442 = $$1341;
     $$7161 = $$6160;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
    if ($$7161) {
     $$162532 = $$14;
     $$16442531 = $$1442;
    } else {
     $$107 = $$14;
     $$107135 = $$1442;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2266 | 0);
   $$107 = $$162532;
   $$107135 = $$16442531;
   ___resumeException($$107 | 0);
   break;
  }
 case 683:
  {
   $lpad$phi2706$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2706$index52 = tempRet0;
   label = 686;
   break;
  }
 case 684:
  {
   $lpad$phi2706$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2706$index52 = tempRet0;
   label = 686;
   break;
  }
 case 685:
  {
   $lpad$phi2706$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2706$index52 = tempRet0;
   label = 686;
   break;
  }
 case 709:
  {
   $2470 = ___cxa_allocate_exception(24) | 0;
   $2471 = $$lcssa8306$lcssa8318 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $41 | 0, HEAP32[$$pre$phi5096$lcssa$lcssa8351Z2D >> 2] | 0);
   $2473 = __THREW__;
   __THREW__ = 0;
   do if ($2473 & 1) {
    $2484 = ___cxa_find_matching_catch() | 0;
    $$192536 = $2484;
    $$19472535 = tempRet0;
   } else {
    __THREW__ = 0;
    $2475 = invoke_iiii(33, $41 | 0, 0, 52898) | 0;
    $2476 = __THREW__;
    __THREW__ = 0;
    if ($2476 & 1) {
     $2486 = ___cxa_find_matching_catch() | 0;
     $2487 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
     $$192536 = $2486;
     $$19472535 = $2487;
     break;
    };
    HEAP32[$40 >> 2] = HEAP32[$2475 >> 2];
    HEAP32[$40 + 4 >> 2] = HEAP32[$2475 + 4 >> 2];
    HEAP32[$40 + 8 >> 2] = HEAP32[$2475 + 8 >> 2];
    HEAP32[$2475 >> 2] = 0;
    HEAP32[$2475 + 4 >> 2] = 0;
    HEAP32[$2475 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2478 = invoke_iii(27, $40 | 0, 52952) | 0;
    $2479 = __THREW__;
    __THREW__ = 0;
    if ($2479 & 1) {
     $2488 = ___cxa_find_matching_catch() | 0;
     $$1165 = 1;
     $$1723 = $2488;
     $$1745 = tempRet0;
    } else {
     HEAP32[$39 >> 2] = HEAP32[$2478 >> 2];
     HEAP32[$39 + 4 >> 2] = HEAP32[$2478 + 4 >> 2];
     HEAP32[$39 + 8 >> 2] = HEAP32[$2478 + 8 >> 2];
     HEAP32[$2478 >> 2] = 0;
     HEAP32[$2478 + 4 >> 2] = 0;
     HEAP32[$2478 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2470 | 0, $198 | 0, $2471 | 0, $39 | 0);
     $2481 = __THREW__;
     __THREW__ = 0;
     if ($2481 & 1) $$0164 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2470 | 0, 392, 179);
      __THREW__ = 0;
      $$0164 = 0;
     }
     $2490 = ___cxa_find_matching_catch() | 0;
     $2491 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
     $$1165 = $$0164;
     $$1723 = $2490;
     $$1745 = $2491;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
    if ($$1165) {
     $$192536 = $$1723;
     $$19472535 = $$1745;
    } else {
     $$107 = $$1723;
     $$107135 = $$1745;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2470 | 0);
   $$107 = $$192536;
   $$107135 = $$19472535;
   ___resumeException($$107 | 0);
   break;
  }
 case 727:
  {
   $2506 = ___cxa_allocate_exception(24) | 0;
   $2507 = $$lcssa8306$lcssa8317 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $44 | 0, HEAP32[$$pre$phi5096$lcssa$lcssa8350Z2D >> 2] | 0);
   $2509 = __THREW__;
   __THREW__ = 0;
   do if ($2509 & 1) {
    $2520 = ___cxa_find_matching_catch() | 0;
    $$222540 = $2520;
    $$22502539 = tempRet0;
   } else {
    __THREW__ = 0;
    $2511 = invoke_iiii(33, $44 | 0, 0, 52898) | 0;
    $2512 = __THREW__;
    __THREW__ = 0;
    if ($2512 & 1) {
     $2522 = ___cxa_find_matching_catch() | 0;
     $2523 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     $$222540 = $2522;
     $$22502539 = $2523;
     break;
    };
    HEAP32[$43 >> 2] = HEAP32[$2511 >> 2];
    HEAP32[$43 + 4 >> 2] = HEAP32[$2511 + 4 >> 2];
    HEAP32[$43 + 8 >> 2] = HEAP32[$2511 + 8 >> 2];
    HEAP32[$2511 >> 2] = 0;
    HEAP32[$2511 + 4 >> 2] = 0;
    HEAP32[$2511 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2514 = invoke_iii(27, $43 | 0, 52981) | 0;
    $2515 = __THREW__;
    __THREW__ = 0;
    if ($2515 & 1) {
     $2524 = ___cxa_find_matching_catch() | 0;
     $$1172 = 1;
     $$20 = $2524;
     $$2048 = tempRet0;
    } else {
     HEAP32[$42 >> 2] = HEAP32[$2514 >> 2];
     HEAP32[$42 + 4 >> 2] = HEAP32[$2514 + 4 >> 2];
     HEAP32[$42 + 8 >> 2] = HEAP32[$2514 + 8 >> 2];
     HEAP32[$2514 >> 2] = 0;
     HEAP32[$2514 + 4 >> 2] = 0;
     HEAP32[$2514 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2506 | 0, $198 | 0, $2507 | 0, $42 | 0);
     $2517 = __THREW__;
     __THREW__ = 0;
     if ($2517 & 1) $$0171 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2506 | 0, 392, 179);
      __THREW__ = 0;
      $$0171 = 0;
     }
     $2526 = ___cxa_find_matching_catch() | 0;
     $2527 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
     $$1172 = $$0171;
     $$20 = $2526;
     $$2048 = $2527;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    if ($$1172) {
     $$222540 = $$20;
     $$22502539 = $$2048;
    } else {
     $$107 = $$20;
     $$107135 = $$2048;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2506 | 0);
   $$107 = $$222540;
   $$107135 = $$22502539;
   ___resumeException($$107 | 0);
   break;
  }
 case 743:
  {
   $2545 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $48 | 0, 53012, 17);
   $2546 = __THREW__;
   __THREW__ = 0;
   if ($2546 & 1) {
    $2552 = ___cxa_find_matching_catch() | 0;
    $$232544 = $2552;
    $$23512543 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $2545 | 0, $198 | 0, $$lcssa8306$lcssa8316 + 4 | 0, $48 | 0);
    $2549 = __THREW__;
    __THREW__ = 0;
    if ($2549 & 1) $$0177 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2545 | 0, 392, 179);
     __THREW__ = 0;
     $$0177 = 0;
    }
    $2554 = ___cxa_find_matching_catch() | 0;
    $2555 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    if ($$0177) {
     $$232544 = $2554;
     $$23512543 = $2555;
    } else {
     $$107 = $2554;
     $$107135 = $2555;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($2545 | 0);
   $$107 = $$232544;
   $$107135 = $$23512543;
   ___resumeException($$107 | 0);
   break;
  }
 case 759:
  {
   $2615 = ___cxa_allocate_exception(24) | 0;
   $2616 = $$lcssa8306$lcssa8315 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $52 | 0, HEAP32[$$pre$phi5096$lcssa$lcssa8348Z2D >> 2] | 0);
   $2618 = __THREW__;
   __THREW__ = 0;
   do if ($2618 & 1) {
    $2629 = ___cxa_find_matching_catch() | 0;
    $$262547 = $2629;
    $$26542546 = tempRet0;
   } else {
    __THREW__ = 0;
    $2620 = invoke_iiii(33, $52 | 0, 0, 52898) | 0;
    $2621 = __THREW__;
    __THREW__ = 0;
    if ($2621 & 1) {
     $2631 = ___cxa_find_matching_catch() | 0;
     $2632 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$262547 = $2631;
     $$26542546 = $2632;
     break;
    };
    HEAP32[$51 >> 2] = HEAP32[$2620 >> 2];
    HEAP32[$51 + 4 >> 2] = HEAP32[$2620 + 4 >> 2];
    HEAP32[$51 + 8 >> 2] = HEAP32[$2620 + 8 >> 2];
    HEAP32[$2620 >> 2] = 0;
    HEAP32[$2620 + 4 >> 2] = 0;
    HEAP32[$2620 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2623 = invoke_iii(27, $51 | 0, 53030) | 0;
    $2624 = __THREW__;
    __THREW__ = 0;
    if ($2624 & 1) {
     $2633 = ___cxa_find_matching_catch() | 0;
     $$1184 = 1;
     $$2424 = $2633;
     $$2452 = tempRet0;
    } else {
     HEAP32[$50 >> 2] = HEAP32[$2623 >> 2];
     HEAP32[$50 + 4 >> 2] = HEAP32[$2623 + 4 >> 2];
     HEAP32[$50 + 8 >> 2] = HEAP32[$2623 + 8 >> 2];
     HEAP32[$2623 >> 2] = 0;
     HEAP32[$2623 + 4 >> 2] = 0;
     HEAP32[$2623 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2615 | 0, $198 | 0, $2616 | 0, $50 | 0);
     $2626 = __THREW__;
     __THREW__ = 0;
     if ($2626 & 1) $$0183 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2615 | 0, 392, 179);
      __THREW__ = 0;
      $$0183 = 0;
     }
     $2635 = ___cxa_find_matching_catch() | 0;
     $2636 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     $$1184 = $$0183;
     $$2424 = $2635;
     $$2452 = $2636;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
    if ($$1184) {
     $$262547 = $$2424;
     $$26542546 = $$2452;
    } else {
     $$107 = $$2424;
     $$107135 = $$2452;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2615 | 0);
   $$107 = $$262547;
   $$107135 = $$26542546;
   ___resumeException($$107 | 0);
   break;
  }
 case 770:
  {
   $2637 = ___cxa_allocate_exception(24) | 0;
   $2638 = $$lcssa8306$lcssa8309 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $55 | 0, HEAP32[$$pre$phi5096$lcssa$lcssa8342Z2D >> 2] | 0);
   $2640 = __THREW__;
   __THREW__ = 0;
   do if ($2640 & 1) {
    $2651 = ___cxa_find_matching_catch() | 0;
    $$292551 = $2651;
    $$29572550 = tempRet0;
   } else {
    __THREW__ = 0;
    $2642 = invoke_iiii(33, $55 | 0, 0, 52898) | 0;
    $2643 = __THREW__;
    __THREW__ = 0;
    if ($2643 & 1) {
     $2653 = ___cxa_find_matching_catch() | 0;
     $2654 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     $$292551 = $2653;
     $$29572550 = $2654;
     break;
    };
    HEAP32[$54 >> 2] = HEAP32[$2642 >> 2];
    HEAP32[$54 + 4 >> 2] = HEAP32[$2642 + 4 >> 2];
    HEAP32[$54 + 8 >> 2] = HEAP32[$2642 + 8 >> 2];
    HEAP32[$2642 >> 2] = 0;
    HEAP32[$2642 + 4 >> 2] = 0;
    HEAP32[$2642 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2645 = invoke_iii(27, $54 | 0, 53060) | 0;
    $2646 = __THREW__;
    __THREW__ = 0;
    if ($2646 & 1) {
     $2655 = ___cxa_find_matching_catch() | 0;
     $$1190 = 1;
     $$27 = $2655;
     $$2755 = tempRet0;
    } else {
     HEAP32[$53 >> 2] = HEAP32[$2645 >> 2];
     HEAP32[$53 + 4 >> 2] = HEAP32[$2645 + 4 >> 2];
     HEAP32[$53 + 8 >> 2] = HEAP32[$2645 + 8 >> 2];
     HEAP32[$2645 >> 2] = 0;
     HEAP32[$2645 + 4 >> 2] = 0;
     HEAP32[$2645 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2637 | 0, $198 | 0, $2638 | 0, $53 | 0);
     $2648 = __THREW__;
     __THREW__ = 0;
     if ($2648 & 1) $$0189 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2637 | 0, 392, 179);
      __THREW__ = 0;
      $$0189 = 0;
     }
     $2657 = ___cxa_find_matching_catch() | 0;
     $2658 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
     $$1190 = $$0189;
     $$27 = $2657;
     $$2755 = $2658;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
    if ($$1190) {
     $$292551 = $$27;
     $$29572550 = $$2755;
    } else {
     $$107 = $$27;
     $$107135 = $$2755;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2637 | 0);
   $$107 = $$292551;
   $$107135 = $$29572550;
   ___resumeException($$107 | 0);
   break;
  }
 case 781:
  {
   $2659 = ___cxa_allocate_exception(24) | 0;
   $2660 = $$lcssa8306$lcssa8310 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $58 | 0, HEAP32[$$pre$phi5096$lcssa$lcssa8343Z2D >> 2] | 0);
   $2662 = __THREW__;
   __THREW__ = 0;
   do if ($2662 & 1) {
    $2673 = ___cxa_find_matching_catch() | 0;
    $$322555 = $2673;
    $$32602554 = tempRet0;
   } else {
    __THREW__ = 0;
    $2664 = invoke_iiii(33, $58 | 0, 0, 52898) | 0;
    $2665 = __THREW__;
    __THREW__ = 0;
    if ($2665 & 1) {
     $2675 = ___cxa_find_matching_catch() | 0;
     $2676 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
     $$322555 = $2675;
     $$32602554 = $2676;
     break;
    };
    HEAP32[$57 >> 2] = HEAP32[$2664 >> 2];
    HEAP32[$57 + 4 >> 2] = HEAP32[$2664 + 4 >> 2];
    HEAP32[$57 + 8 >> 2] = HEAP32[$2664 + 8 >> 2];
    HEAP32[$2664 >> 2] = 0;
    HEAP32[$2664 + 4 >> 2] = 0;
    HEAP32[$2664 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2667 = invoke_iii(27, $57 | 0, 53092) | 0;
    $2668 = __THREW__;
    __THREW__ = 0;
    if ($2668 & 1) {
     $2677 = ___cxa_find_matching_catch() | 0;
     $$1194 = 1;
     $$30 = $2677;
     $$3058 = tempRet0;
    } else {
     HEAP32[$56 >> 2] = HEAP32[$2667 >> 2];
     HEAP32[$56 + 4 >> 2] = HEAP32[$2667 + 4 >> 2];
     HEAP32[$56 + 8 >> 2] = HEAP32[$2667 + 8 >> 2];
     HEAP32[$2667 >> 2] = 0;
     HEAP32[$2667 + 4 >> 2] = 0;
     HEAP32[$2667 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2659 | 0, $198 | 0, $2660 | 0, $56 | 0);
     $2670 = __THREW__;
     __THREW__ = 0;
     if ($2670 & 1) $$0193 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2659 | 0, 392, 179);
      __THREW__ = 0;
      $$0193 = 0;
     }
     $2679 = ___cxa_find_matching_catch() | 0;
     $2680 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     $$1194 = $$0193;
     $$30 = $2679;
     $$3058 = $2680;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
    if ($$1194) {
     $$322555 = $$30;
     $$32602554 = $$3058;
    } else {
     $$107 = $$30;
     $$107135 = $$3058;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2659 | 0);
   $$107 = $$322555;
   $$107135 = $$32602554;
   ___resumeException($$107 | 0);
   break;
  }
 case 793:
  {
   $2682 = ___cxa_allocate_exception(24) | 0;
   $2683 = $$lcssa8306$lcssa8314 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $61 | 0, HEAP32[$$pre$phi5096$lcssa$lcssa8347Z2D >> 2] | 0);
   $2685 = __THREW__;
   __THREW__ = 0;
   do if ($2685 & 1) {
    $2696 = ___cxa_find_matching_catch() | 0;
    $$35262559 = $2696;
    $$35632558 = tempRet0;
   } else {
    __THREW__ = 0;
    $2687 = invoke_iiii(33, $61 | 0, 0, 52898) | 0;
    $2688 = __THREW__;
    __THREW__ = 0;
    if ($2688 & 1) {
     $2698 = ___cxa_find_matching_catch() | 0;
     $2699 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     $$35262559 = $2698;
     $$35632558 = $2699;
     break;
    };
    HEAP32[$60 >> 2] = HEAP32[$2687 >> 2];
    HEAP32[$60 + 4 >> 2] = HEAP32[$2687 + 4 >> 2];
    HEAP32[$60 + 8 >> 2] = HEAP32[$2687 + 8 >> 2];
    HEAP32[$2687 >> 2] = 0;
    HEAP32[$2687 + 4 >> 2] = 0;
    HEAP32[$2687 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2690 = invoke_iii(27, $60 | 0, 53119) | 0;
    $2691 = __THREW__;
    __THREW__ = 0;
    if ($2691 & 1) {
     $2700 = ___cxa_find_matching_catch() | 0;
     $$1202 = 1;
     $$33 = $2700;
     $$3361 = tempRet0;
    } else {
     HEAP32[$59 >> 2] = HEAP32[$2690 >> 2];
     HEAP32[$59 + 4 >> 2] = HEAP32[$2690 + 4 >> 2];
     HEAP32[$59 + 8 >> 2] = HEAP32[$2690 + 8 >> 2];
     HEAP32[$2690 >> 2] = 0;
     HEAP32[$2690 + 4 >> 2] = 0;
     HEAP32[$2690 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2682 | 0, $198 | 0, $2683 | 0, $59 | 0);
     $2693 = __THREW__;
     __THREW__ = 0;
     if ($2693 & 1) $$0201 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2682 | 0, 392, 179);
      __THREW__ = 0;
      $$0201 = 0;
     }
     $2702 = ___cxa_find_matching_catch() | 0;
     $2703 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     $$1202 = $$0201;
     $$33 = $2702;
     $$3361 = $2703;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
    if ($$1202) {
     $$35262559 = $$33;
     $$35632558 = $$3361;
    } else {
     $$107 = $$33;
     $$107135 = $$3361;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2682 | 0);
   $$107 = $$35262559;
   $$107135 = $$35632558;
   ___resumeException($$107 | 0);
   break;
  }
 case 832:
  {
   $2838 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
   ___resumeException($2838 | 0);
   break;
  }
 case 835:
  {
   $2842 = ___cxa_find_matching_catch() | 0;
   $2843 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
   $$107 = $2842;
   $$107135 = $2843;
   ___resumeException($$107 | 0);
   break;
  }
 case 840:
  {
   $2968 = ___cxa_allocate_exception(24) | 0;
   $2969 = $$lcssa8306$lcssa8311 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(64, $66 | 0, HEAP32[$$pre$phi5096$lcssa$lcssa8344Z2D >> 2] | 0);
   $2971 = __THREW__;
   __THREW__ = 0;
   do if ($2971 & 1) {
    $2982 = ___cxa_find_matching_catch() | 0;
    $$382563 = $2982;
    $$38662562 = tempRet0;
   } else {
    __THREW__ = 0;
    $2973 = invoke_iiii(33, $66 | 0, 0, 52898) | 0;
    $2974 = __THREW__;
    __THREW__ = 0;
    if ($2974 & 1) {
     $2984 = ___cxa_find_matching_catch() | 0;
     $2985 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
     $$382563 = $2984;
     $$38662562 = $2985;
     break;
    };
    HEAP32[$65 >> 2] = HEAP32[$2973 >> 2];
    HEAP32[$65 + 4 >> 2] = HEAP32[$2973 + 4 >> 2];
    HEAP32[$65 + 8 >> 2] = HEAP32[$2973 + 8 >> 2];
    HEAP32[$2973 >> 2] = 0;
    HEAP32[$2973 + 4 >> 2] = 0;
    HEAP32[$2973 + 8 >> 2] = 0;
    __THREW__ = 0;
    $2976 = invoke_iii(27, $65 | 0, 53149) | 0;
    $2977 = __THREW__;
    __THREW__ = 0;
    if ($2977 & 1) {
     $2986 = ___cxa_find_matching_catch() | 0;
     $$1206 = 1;
     $$36 = $2986;
     $$3664 = tempRet0;
    } else {
     HEAP32[$64 >> 2] = HEAP32[$2976 >> 2];
     HEAP32[$64 + 4 >> 2] = HEAP32[$2976 + 4 >> 2];
     HEAP32[$64 + 8 >> 2] = HEAP32[$2976 + 8 >> 2];
     HEAP32[$2976 >> 2] = 0;
     HEAP32[$2976 + 4 >> 2] = 0;
     HEAP32[$2976 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $2968 | 0, $198 | 0, $2969 | 0, $64 | 0);
     $2979 = __THREW__;
     __THREW__ = 0;
     if ($2979 & 1) $$0205 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $2968 | 0, 392, 179);
      __THREW__ = 0;
      $$0205 = 0;
     }
     $2988 = ___cxa_find_matching_catch() | 0;
     $2989 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     $$1206 = $$0205;
     $$36 = $2988;
     $$3664 = $2989;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($65);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
    if ($$1206) {
     $$382563 = $$36;
     $$38662562 = $$3664;
    } else {
     $$107 = $$36;
     $$107135 = $$3664;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2968 | 0);
   $$107 = $$382563;
   $$107135 = $$38662562;
   ___resumeException($$107 | 0);
   break;
  }
 case 852:
  {
   $2998 = ___cxa_allocate_exception(24) | 0;
   $2999 = $$lcssa8792 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $68 | 0, HEAP32[$204 >> 2] | 0);
   $3000 = __THREW__;
   __THREW__ = 0;
   do if ($3000 & 1) {
    $3008 = ___cxa_find_matching_catch() | 0;
    $$402567 = $3008;
    $$40682566 = tempRet0;
   } else {
    __THREW__ = 0;
    $3002 = invoke_iiii(33, $68 | 0, 0, 53179) | 0;
    $3003 = __THREW__;
    __THREW__ = 0;
    if ($3003 & 1) {
     $3010 = ___cxa_find_matching_catch() | 0;
     $3011 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
     $$402567 = $3010;
     $$40682566 = $3011;
     break;
    };
    HEAP32[$67 >> 2] = HEAP32[$3002 >> 2];
    HEAP32[$67 + 4 >> 2] = HEAP32[$3002 + 4 >> 2];
    HEAP32[$67 + 8 >> 2] = HEAP32[$3002 + 8 >> 2];
    HEAP32[$3002 >> 2] = 0;
    HEAP32[$3002 + 4 >> 2] = 0;
    HEAP32[$3002 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $2998 | 0, $198 | 0, $2999 | 0, $67 | 0);
    $3005 = __THREW__;
    __THREW__ = 0;
    if ($3005 & 1) $$0209 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $2998 | 0, 392, 179);
     __THREW__ = 0;
     $$0209 = 0;
    }
    $3012 = ___cxa_find_matching_catch() | 0;
    $3013 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($68);
    if ($$0209) {
     $$402567 = $3012;
     $$40682566 = $3013;
    } else {
     $$107 = $3012;
     $$107135 = $3013;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($2998 | 0);
   $$107 = $$402567;
   $$107135 = $$40682566;
   ___resumeException($$107 | 0);
   break;
  }
 case 904:
  {
   $3147 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$365 >> 2] | 0);
   ___resumeException($3147 | 0);
   break;
  }
 case 922:
  {
   $3195 = ___cxa_find_matching_catch() | 0;
   $3196 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings65, HEAP32[$365 >> 2] | 0);
   $$107 = $3195;
   $$107135 = $3196;
   ___resumeException($$107 | 0);
   break;
  }
 case 939:
  {
   $3264 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3264;
   label = 942;
   break;
  }
 case 940:
  {
   $3266 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3266;
   label = 942;
   break;
  }
 case 946:
  {
   $3278 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3278;
   label = 942;
   break;
  }
 case 948:
  {
   $3284 = $ss73 + 64 | 0;
   $3285 = $ss73 + 8 | 0;
   HEAP32[$3285 >> 2] = 2912;
   $3286 = $ss73 + 12 | 0;
   HEAP32[$ss73 >> 2] = 2952;
   HEAP32[$3284 >> 2] = 2972;
   HEAP32[$ss73 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss73 + 64 | 0, $3286 | 0);
   $3289 = __THREW__;
   __THREW__ = 0;
   if ($3289 & 1) {
    $3302 = ___cxa_find_matching_catch() | 0;
    $$0$i1122 = tempRet0;
    $$01$i1121 = $3302;
   } else {
    HEAP32[$ss73 + 136 >> 2] = 0;
    HEAP32[$ss73 + 140 >> 2] = -1;
    HEAP32[$ss73 >> 2] = 2892;
    HEAP32[$ss73 + 64 >> 2] = 2932;
    HEAP32[$3285 >> 2] = 2912;
    __THREW__ = 0;
    invoke_vi(173, $3286 | 0);
    $3294 = __THREW__;
    __THREW__ = 0;
    do if ($3294 & 1) {
     $3304 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1119$index121Z2D = tempRet0;
     $eh$lpad$body$i1119$indexZ2D = $3304;
    } else {
     HEAP32[$3286 >> 2] = 2988;
     $3296 = $ss73 + 44 | 0;
     HEAP32[$3296 >> 2] = 0;
     HEAP32[$3296 + 4 >> 2] = 0;
     HEAP32[$3296 + 8 >> 2] = 0;
     HEAP32[$3296 + 12 >> 2] = 0;
     HEAP32[$ss73 + 60 >> 2] = 24;
     HEAP32[$8 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $3286 | 0, $8 | 0);
     $3298 = __THREW__;
     __THREW__ = 0;
     if ($3298 & 1) {
      $3300 = ___cxa_find_matching_catch() | 0;
      $3301 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3296);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3286);
      $eh$lpad$body$i1119$index121Z2D = $3301;
      $eh$lpad$body$i1119$indexZ2D = $3300;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     $3306 = $ss73 + 8 | 0;
     __THREW__ = 0;
     $3307 = invoke_iiii(29, $3306 | 0, 53222, 34) | 0;
     $3308 = __THREW__;
     __THREW__ = 0;
     do if ($3308 & 1) label = 962; else {
      __THREW__ = 0;
      invoke_iii(30, $3307 | 0, $$lcssa8779 | 0) | 0;
      $3310 = __THREW__;
      __THREW__ = 0;
      if ($3310 & 1) label = 962; else {
       $3312 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $71 | 0, $3286 | 0);
       $3313 = __THREW__;
       __THREW__ = 0;
       if ($3313 & 1) {
        $3322 = ___cxa_find_matching_catch() | 0;
        $$412571 = $3322;
        $$41692570 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $3312 | 0, $198 | 0, $$lcssa8651 | 0, $71 | 0);
        $3315 = __THREW__;
        __THREW__ = 0;
        if ($3315 & 1) $$0216 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $3312 | 0, 392, 179);
         __THREW__ = 0;
         $$0216 = 0;
        }
        $3324 = ___cxa_find_matching_catch() | 0;
        $3325 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
        if ($$0216) {
         $$412571 = $3324;
         $$41692570 = $3325;
        } else {
         $$42 = $3324;
         $$4270 = $3325;
         break;
        }
       }
       ___cxa_free_exception($3312 | 0);
       $$42 = $$412571;
       $$4270 = $$41692570;
      }
     } while (0);
     if ((label | 0) == 962) {
      $3320 = ___cxa_find_matching_catch() | 0;
      $$42 = $3320;
      $$4270 = tempRet0;
     }
     HEAP32[$ss73 >> 2] = 2892;
     HEAP32[$3284 >> 2] = 2932;
     HEAP32[$3306 >> 2] = 2912;
     HEAP32[$3286 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3296);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3286);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3284);
     $$59 = $$42;
     $$5987 = $$4270;
     label = 1492;
     break L1848;
    } while (0);
    $$0$i1122 = $eh$lpad$body$i1119$index121Z2D;
    $$01$i1121 = $eh$lpad$body$i1119$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3284);
   $eh$lpad$body1114$index87Z2D = $$0$i1122;
   $eh$lpad$body1114$indexZ2D = $$01$i1121;
   label = 942;
   break;
  }
 case 961:
  {
   $3318 = ___cxa_find_matching_catch() | 0;
   $3319 = tempRet0;
   HEAP32[$233 >> 2] = $$lcssa8773;
   __ZdlPv($$lcssa8773);
   $$59 = $3318;
   $$5987 = $3319;
   label = 1492;
   break;
  }
 case 968:
  {
   $3336 = $ss76 + 64 | 0;
   $3337 = $ss76 + 8 | 0;
   HEAP32[$3337 >> 2] = 2912;
   $3338 = $ss76 + 12 | 0;
   HEAP32[$ss76 >> 2] = 2952;
   HEAP32[$3336 >> 2] = 2972;
   HEAP32[$ss76 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss76 + 64 | 0, $3338 | 0);
   $3341 = __THREW__;
   __THREW__ = 0;
   if ($3341 & 1) {
    $3354 = ___cxa_find_matching_catch() | 0;
    $$0$i1141 = tempRet0;
    $$01$i1140 = $3354;
   } else {
    HEAP32[$ss76 + 136 >> 2] = 0;
    HEAP32[$ss76 + 140 >> 2] = -1;
    HEAP32[$ss76 >> 2] = 2892;
    HEAP32[$ss76 + 64 >> 2] = 2932;
    HEAP32[$3337 >> 2] = 2912;
    __THREW__ = 0;
    invoke_vi(173, $3338 | 0);
    $3346 = __THREW__;
    __THREW__ = 0;
    do if ($3346 & 1) {
     $3356 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1138$index126Z2D = tempRet0;
     $eh$lpad$body$i1138$indexZ2D = $3356;
    } else {
     HEAP32[$3338 >> 2] = 2988;
     $3348 = $ss76 + 44 | 0;
     HEAP32[$3348 >> 2] = 0;
     HEAP32[$3348 + 4 >> 2] = 0;
     HEAP32[$3348 + 8 >> 2] = 0;
     HEAP32[$3348 + 12 >> 2] = 0;
     HEAP32[$ss76 + 60 >> 2] = 24;
     HEAP32[$7 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $3338 | 0, $7 | 0);
     $3350 = __THREW__;
     __THREW__ = 0;
     if ($3350 & 1) {
      $3352 = ___cxa_find_matching_catch() | 0;
      $3353 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3348);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3338);
      $eh$lpad$body$i1138$index126Z2D = $3353;
      $eh$lpad$body$i1138$indexZ2D = $3352;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     $3358 = $ss76 + 8 | 0;
     __THREW__ = 0;
     $3359 = invoke_iiii(29, $3358 | 0, 53257, 43) | 0;
     $3360 = __THREW__;
     __THREW__ = 0;
     do if ($3360 & 1) label = 985; else {
      __THREW__ = 0;
      invoke_iii(24, $3359 | 0, (HEAP32[$$lcssa8784 >> 2] | 0) - (HEAP32[$$lcssa8788 >> 2] | 0) >> 2 | 0) | 0;
      $3368 = __THREW__;
      __THREW__ = 0;
      if ($3368 & 1) label = 985; else {
       $3370 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $72 | 0, $3338 | 0);
       $3371 = __THREW__;
       __THREW__ = 0;
       if ($3371 & 1) {
        $3384 = ___cxa_find_matching_catch() | 0;
        $$432574 = $3384;
        $$43712573 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $3370 | 0, $198 | 0, $$lcssa8652 | 0, $72 | 0);
        $3373 = __THREW__;
        __THREW__ = 0;
        if ($3373 & 1) $$0218 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $3370 | 0, 392, 179);
         __THREW__ = 0;
         $$0218 = 0;
        }
        $3386 = ___cxa_find_matching_catch() | 0;
        $3387 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
        if ($$0218) {
         $$432574 = $3386;
         $$43712573 = $3387;
        } else {
         $$44 = $3386;
         $$4472 = $3387;
         break;
        }
       }
       ___cxa_free_exception($3370 | 0);
       $$44 = $$432574;
       $$4472 = $$43712573;
      }
     } while (0);
     if ((label | 0) == 985) {
      $3382 = ___cxa_find_matching_catch() | 0;
      $$44 = $3382;
      $$4472 = tempRet0;
     }
     HEAP32[$ss76 >> 2] = 2892;
     HEAP32[$3336 >> 2] = 2932;
     HEAP32[$3358 >> 2] = 2912;
     HEAP32[$3338 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3348);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3338);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3336);
     $$45 = $$44;
     $$4573 = $$4472;
     label = 1091;
     break L1848;
    } while (0);
    $$0$i1141 = $eh$lpad$body$i1138$index126Z2D;
    $$01$i1140 = $eh$lpad$body$i1138$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3336);
   $eh$lpad$body1143$index133Z2D = $$0$i1141;
   $eh$lpad$body1143$indexZ2D = $$01$i1140;
   label = 984;
   break;
  }
 case 981:
  {
   $3376 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1143$index133Z2D = tempRet0;
   $eh$lpad$body1143$indexZ2D = $3376;
   label = 984;
   break;
  }
 case 982:
  {
   $3378 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1143$index133Z2D = tempRet0;
   $eh$lpad$body1143$indexZ2D = $3378;
   label = 984;
   break;
  }
 case 983:
  {
   $3380 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1143$index133Z2D = tempRet0;
   $eh$lpad$body1143$indexZ2D = $3380;
   label = 984;
   break;
  }
 case 1097:
  {
   $3700 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3700;
   label = 942;
   break;
  }
 case 1100:
  {
   $3709 = ___cxa_find_matching_catch() | 0;
   $3710 = tempRet0;
   HEAP32[$239 >> 2] = $$lcssa8772;
   __ZdlPv($$lcssa8772);
   $$59 = $3709;
   $$5987 = $3710;
   label = 1492;
   break;
  }
 case 1103:
  {
   $3718 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3718;
   label = 942;
   break;
  }
 case 1106:
  {
   $3725 = ___cxa_find_matching_catch() | 0;
   $3726 = tempRet0;
   HEAP32[$242 >> 2] = $$lcssa8771;
   __ZdlPv($$lcssa8771);
   $$59 = $3725;
   $$5987 = $3726;
   label = 1492;
   break;
  }
 case 1109:
  {
   $3734 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3734;
   label = 942;
   break;
  }
 case 1112:
  {
   $3741 = ___cxa_find_matching_catch() | 0;
   $3742 = tempRet0;
   HEAP32[$245 >> 2] = $$lcssa8770;
   __ZdlPv($$lcssa8770);
   $$59 = $3741;
   $$5987 = $3742;
   label = 1492;
   break;
  }
 case 1115:
  {
   $3750 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3750;
   label = 942;
   break;
  }
 case 1118:
  {
   $3757 = ___cxa_find_matching_catch() | 0;
   $3758 = tempRet0;
   HEAP32[$248 >> 2] = $$lcssa8769;
   __ZdlPv($$lcssa8769);
   $$59 = $3757;
   $$5987 = $3758;
   label = 1492;
   break;
  }
 case 1121:
  {
   $3766 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3766;
   label = 942;
   break;
  }
 case 1124:
  {
   $3773 = ___cxa_find_matching_catch() | 0;
   $3774 = tempRet0;
   HEAP32[$251 >> 2] = $$lcssa8768;
   __ZdlPv($$lcssa8768);
   $$59 = $3773;
   $$5987 = $3774;
   label = 1492;
   break;
  }
 case 1127:
  {
   $3782 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3782;
   label = 942;
   break;
  }
 case 1130:
  {
   $3789 = ___cxa_find_matching_catch() | 0;
   $3790 = tempRet0;
   HEAP32[$254 >> 2] = $$lcssa8767;
   __ZdlPv($$lcssa8767);
   $$59 = $3789;
   $$5987 = $3790;
   label = 1492;
   break;
  }
 case 1133:
  {
   $3798 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3798;
   label = 942;
   break;
  }
 case 1136:
  {
   $3805 = ___cxa_find_matching_catch() | 0;
   $3806 = tempRet0;
   HEAP32[$257 >> 2] = $$lcssa8766;
   __ZdlPv($$lcssa8766);
   $$59 = $3805;
   $$5987 = $3806;
   label = 1492;
   break;
  }
 case 1139:
  {
   $3814 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3814;
   label = 942;
   break;
  }
 case 1142:
  {
   $3821 = ___cxa_find_matching_catch() | 0;
   $3822 = tempRet0;
   HEAP32[$260 >> 2] = $$lcssa8765;
   __ZdlPv($$lcssa8765);
   $$59 = $3821;
   $$5987 = $3822;
   label = 1492;
   break;
  }
 case 1145:
  {
   $3830 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3830;
   label = 942;
   break;
  }
 case 1148:
  {
   $3837 = ___cxa_find_matching_catch() | 0;
   $3838 = tempRet0;
   HEAP32[$263 >> 2] = $$lcssa8764;
   __ZdlPv($$lcssa8764);
   $$59 = $3837;
   $$5987 = $3838;
   label = 1492;
   break;
  }
 case 1151:
  {
   $3846 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3846;
   label = 942;
   break;
  }
 case 1154:
  {
   $3853 = ___cxa_find_matching_catch() | 0;
   $3854 = tempRet0;
   HEAP32[$266 >> 2] = $$lcssa8763;
   __ZdlPv($$lcssa8763);
   $$59 = $3853;
   $$5987 = $3854;
   label = 1492;
   break;
  }
 case 1159:
  {
   $3860 = ___cxa_find_matching_catch() | 0;
   $3861 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
   $$59 = $3860;
   $$5987 = $3861;
   label = 1492;
   break;
  }
 case 1163:
  {
   $3866 = ___cxa_find_matching_catch() | 0;
   $3867 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
   $$59 = $3866;
   $$5987 = $3867;
   label = 1492;
   break;
  }
 case 1167:
  {
   $3872 = ___cxa_find_matching_catch() | 0;
   $3873 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
   $$59 = $3872;
   $$5987 = $3873;
   label = 1492;
   break;
  }
 case 1171:
  {
   $3878 = ___cxa_find_matching_catch() | 0;
   $3879 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($101);
   $$59 = $3878;
   $$5987 = $3879;
   label = 1492;
   break;
  }
 case 1175:
  {
   $3884 = ___cxa_find_matching_catch() | 0;
   $3885 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
   $$59 = $3884;
   $$5987 = $3885;
   label = 1492;
   break;
  }
 case 1179:
  {
   $3890 = ___cxa_find_matching_catch() | 0;
   $3891 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
   $$59 = $3890;
   $$5987 = $3891;
   label = 1492;
   break;
  }
 case 1183:
  {
   $3896 = ___cxa_find_matching_catch() | 0;
   $3897 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($107);
   $$59 = $3896;
   $$5987 = $3897;
   label = 1492;
   break;
  }
 case 1186:
  {
   $3906 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3906;
   label = 942;
   break;
  }
 case 1188:
  {
   $3918 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $109 | 0, 53308, 34);
   $3919 = __THREW__;
   __THREW__ = 0;
   if ($3919 & 1) {
    $3926 = ___cxa_find_matching_catch() | 0;
    $$462577 = $3926;
    $$46742576 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $3918 | 0, $198 | 0, $$lcssa8618 | 0, $109 | 0);
    $3921 = __THREW__;
    __THREW__ = 0;
    if ($3921 & 1) $$0222 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3918 | 0, 392, 179);
     __THREW__ = 0;
     $$0222 = 0;
    }
    $3928 = ___cxa_find_matching_catch() | 0;
    $3929 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($109);
    if ($$0222) {
     $$462577 = $3928;
     $$46742576 = $3929;
    } else {
     $$59 = $3928;
     $$5987 = $3929;
     label = 1492;
     break;
    }
   }
   ___cxa_free_exception($3918 | 0);
   $$59 = $$462577;
   $$5987 = $$46742576;
   label = 1492;
   break;
  }
 case 1191:
  {
   $3924 = ___cxa_find_matching_catch() | 0;
   $3925 = tempRet0;
   HEAP32[$269 >> 2] = $$lcssa8758;
   __ZdlPv($$lcssa8758);
   $$59 = $3924;
   $$5987 = $3925;
   label = 1492;
   break;
  }
 case 1198:
  {
   $$59 = ___cxa_find_matching_catch() | 0;
   $$5987 = tempRet0;
   label = 1492;
   break;
  }
 case 1232:
  {
   $4020 = ___cxa_find_matching_catch() | 0;
   $4021 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$276 >> 2] | 0);
   $eh$lpad$body1114$index87Z2D = $4021;
   $eh$lpad$body1114$indexZ2D = $4020;
   label = 942;
   break;
  }
 case 1249:
  {
   $4066 = ___cxa_find_matching_catch() | 0;
   $4067 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings83, HEAP32[$276 >> 2] | 0);
   $$59 = $4066;
   $$5987 = $4067;
   label = 1492;
   break;
  }
 case 1252:
  {
   $4077 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4077;
   label = 942;
   break;
  }
 case 1267:
  {
   $4134 = ___cxa_find_matching_catch() | 0;
   $4135 = tempRet0;
   HEAP32[$278 >> 2] = $$lcssa8757;
   __ZdlPv($$lcssa8757);
   $$59 = $4134;
   $$5987 = $4135;
   label = 1492;
   break;
  }
 case 1281:
  {
   $4177 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $114 | 0, 53343, 25);
   $4178 = __THREW__;
   __THREW__ = 0;
   if ($4178 & 1) {
    $4183 = ___cxa_find_matching_catch() | 0;
    $$472582 = $4183;
    $$47752581 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $4177 | 0, $198 | 0, $$lcssa8612 | 0, $114 | 0);
    $4180 = __THREW__;
    __THREW__ = 0;
    if ($4180 & 1) $$0228 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4177 | 0, 392, 179);
     __THREW__ = 0;
     $$0228 = 0;
    }
    $4185 = ___cxa_find_matching_catch() | 0;
    $4186 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($114);
    if ($$0228) {
     $$472582 = $4185;
     $$47752581 = $4186;
    } else {
     $$59 = $4185;
     $$5987 = $4186;
     label = 1492;
     break;
    }
   }
   ___cxa_free_exception($4177 | 0);
   $$59 = $$472582;
   $$5987 = $$47752581;
   label = 1492;
   break;
  }
 case 1296:
  {
   $4220 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_vii(60, $116 | 0, HEAP32[HEAP32[$args68 >> 2] >> 2] | 0);
   $4221 = __THREW__;
   __THREW__ = 0;
   do if ($4221 & 1) {
    $4229 = ___cxa_find_matching_catch() | 0;
    $$492585 = $4229;
    $$49772584 = tempRet0;
   } else {
    __THREW__ = 0;
    $4223 = invoke_iiii(33, $116 | 0, 0, 53369) | 0;
    $4224 = __THREW__;
    __THREW__ = 0;
    if ($4224 & 1) {
     $4231 = ___cxa_find_matching_catch() | 0;
     $4232 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($116);
     $$492585 = $4231;
     $$49772584 = $4232;
     break;
    };
    HEAP32[$115 >> 2] = HEAP32[$4223 >> 2];
    HEAP32[$115 + 4 >> 2] = HEAP32[$4223 + 4 >> 2];
    HEAP32[$115 + 8 >> 2] = HEAP32[$4223 + 8 >> 2];
    HEAP32[$4223 >> 2] = 0;
    HEAP32[$4223 + 4 >> 2] = 0;
    HEAP32[$4223 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $4220 | 0, $198 | 0, $$lcssa8613 | 0, $115 | 0);
    $4226 = __THREW__;
    __THREW__ = 0;
    if ($4226 & 1) $$0230 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4220 | 0, 392, 179);
     __THREW__ = 0;
     $$0230 = 0;
    }
    $4233 = ___cxa_find_matching_catch() | 0;
    $4234 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($116);
    if ($$0230) {
     $$492585 = $4233;
     $$49772584 = $4234;
    } else {
     $$59 = $4233;
     $$5987 = $4234;
     label = 1492;
     break L1848;
    }
   } while (0);
   ___cxa_free_exception($4220 | 0);
   $$59 = $$492585;
   $$5987 = $$49772584;
   label = 1492;
   break;
  }
 case 1306:
  {
   $4242 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4242;
   label = 942;
   break;
  }
 case 1310:
  {
   $4253 = ___cxa_find_matching_catch() | 0;
   $4254 = tempRet0;
   HEAP32[$284 >> 2] = $$lcssa8752;
   __ZdlPv($$lcssa8752);
   $$59 = $4253;
   $$5987 = $4254;
   label = 1492;
   break;
  }
 case 1311:
  {
   $lpad$phi2717$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2717$index140 = tempRet0;
   label = 1313;
   break;
  }
 case 1312:
  {
   $lpad$phi2717$index = ___cxa_find_matching_catch() | 0;
   $lpad$phi2717$index140 = tempRet0;
   label = 1313;
   break;
  }
 case 1314:
  {
   $4259 = ___cxa_find_matching_catch() | 0;
   $4260 = tempRet0;
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($118, HEAP32[$290 >> 2] | 0);
   $$50 = $4259;
   $$5078 = $4260;
   label = 1344;
   break;
  }
 case 1342:
  {
   $$50 = ___cxa_find_matching_catch() | 0;
   $$5078 = tempRet0;
   label = 1344;
   break;
  }
 case 1347:
  {
   $4364 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4364;
   label = 942;
   break;
  }
 case 1352:
  {
   $4378 = $ss102 + 64 | 0;
   $4379 = $ss102 + 8 | 0;
   HEAP32[$4379 >> 2] = 2912;
   $4380 = $ss102 + 12 | 0;
   HEAP32[$ss102 >> 2] = 2952;
   HEAP32[$4378 >> 2] = 2972;
   HEAP32[$ss102 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss102 + 64 | 0, $4380 | 0);
   $4383 = __THREW__;
   __THREW__ = 0;
   if ($4383 & 1) {
    $4396 = ___cxa_find_matching_catch() | 0;
    $$0$i1670 = tempRet0;
    $$01$i1669 = $4396;
   } else {
    HEAP32[$ss102 + 136 >> 2] = 0;
    HEAP32[$ss102 + 140 >> 2] = -1;
    HEAP32[$ss102 >> 2] = 2892;
    HEAP32[$ss102 + 64 >> 2] = 2932;
    HEAP32[$4379 >> 2] = 2912;
    __THREW__ = 0;
    invoke_vi(173, $4380 | 0);
    $4388 = __THREW__;
    __THREW__ = 0;
    do if ($4388 & 1) {
     $4398 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1667$index145Z2D = tempRet0;
     $eh$lpad$body$i1667$indexZ2D = $4398;
    } else {
     HEAP32[$4380 >> 2] = 2988;
     $4390 = $ss102 + 44 | 0;
     HEAP32[$4390 >> 2] = 0;
     HEAP32[$4390 + 4 >> 2] = 0;
     HEAP32[$4390 + 8 >> 2] = 0;
     HEAP32[$4390 + 12 >> 2] = 0;
     HEAP32[$ss102 + 60 >> 2] = 24;
     HEAP32[$5 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4380 | 0, $5 | 0);
     $4392 = __THREW__;
     __THREW__ = 0;
     if ($4392 & 1) {
      $4394 = ___cxa_find_matching_catch() | 0;
      $4395 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4390);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4380);
      $eh$lpad$body$i1667$index145Z2D = $4395;
      $eh$lpad$body$i1667$indexZ2D = $4394;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $4400 = $ss102 + 8 | 0;
     __THREW__ = 0;
     $4401 = invoke_iiii(29, $4400 | 0, 53423, 49) | 0;
     $4402 = __THREW__;
     __THREW__ = 0;
     do if ($4402 & 1) label = 1369; else {
      $4404 = HEAP8[$$lcssa8751 >> 0] | 0;
      if (!($4404 & 1)) $4411 = ($4404 & 255) >>> 1; else $4411 = HEAP32[$$lcssa8750 + 12 >> 2] | 0;
      __THREW__ = 0;
      invoke_iii(24, $4401 | 0, $4411 | 0) | 0;
      $4412 = __THREW__;
      __THREW__ = 0;
      if ($4412 & 1) label = 1369; else {
       $4414 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $123 | 0, $4380 | 0);
       $4415 = __THREW__;
       __THREW__ = 0;
       if ($4415 & 1) {
        $4424 = ___cxa_find_matching_catch() | 0;
        $$512589 = $4424;
        $$51792588 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $4414 | 0, $198 | 0, $$lcssa8605 | 0, $123 | 0);
        $4417 = __THREW__;
        __THREW__ = 0;
        if ($4417 & 1) $$0237 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $4414 | 0, 392, 179);
         __THREW__ = 0;
         $$0237 = 0;
        }
        $4426 = ___cxa_find_matching_catch() | 0;
        $4427 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
        if ($$0237) {
         $$512589 = $4426;
         $$51792588 = $4427;
        } else {
         $$52 = $4426;
         $$5280 = $4427;
         break;
        }
       }
       ___cxa_free_exception($4414 | 0);
       $$52 = $$512589;
       $$5280 = $$51792588;
      }
     } while (0);
     if ((label | 0) == 1369) {
      $4422 = ___cxa_find_matching_catch() | 0;
      $$52 = $4422;
      $$5280 = tempRet0;
     }
     HEAP32[$ss102 >> 2] = 2892;
     HEAP32[$4378 >> 2] = 2932;
     HEAP32[$4400 >> 2] = 2912;
     HEAP32[$4380 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4390);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4380);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4378);
     $$59 = $$52;
     $$5987 = $$5280;
     label = 1492;
     break L1848;
    } while (0);
    $$0$i1670 = $eh$lpad$body$i1667$index145Z2D;
    $$01$i1669 = $eh$lpad$body$i1667$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4378);
   $eh$lpad$body1114$index87Z2D = $$0$i1670;
   $eh$lpad$body1114$indexZ2D = $$01$i1669;
   label = 942;
   break;
  }
 case 1368:
  {
   $4420 = ___cxa_find_matching_catch() | 0;
   $4421 = tempRet0;
   HEAP32[$293 >> 2] = $$lcssa8748;
   __ZdlPv($$lcssa8748);
   $$59 = $4420;
   $$5987 = $4421;
   label = 1492;
   break;
  }
 case 1380:
  {
   $4441 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4441;
   label = 942;
   break;
  }
 case 1382:
  {
   $4447 = $ss103 + 64 | 0;
   $4448 = $ss103 + 8 | 0;
   HEAP32[$4448 >> 2] = 2912;
   $4449 = $ss103 + 12 | 0;
   HEAP32[$ss103 >> 2] = 2952;
   HEAP32[$4447 >> 2] = 2972;
   HEAP32[$ss103 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss103 + 64 | 0, $4449 | 0);
   $4452 = __THREW__;
   __THREW__ = 0;
   if ($4452 & 1) {
    $4465 = ___cxa_find_matching_catch() | 0;
    $$0$i1708 = tempRet0;
    $$01$i1707 = $4465;
   } else {
    HEAP32[$ss103 + 136 >> 2] = 0;
    HEAP32[$ss103 + 140 >> 2] = -1;
    HEAP32[$ss103 >> 2] = 2892;
    HEAP32[$ss103 + 64 >> 2] = 2932;
    HEAP32[$4448 >> 2] = 2912;
    __THREW__ = 0;
    invoke_vi(173, $4449 | 0);
    $4457 = __THREW__;
    __THREW__ = 0;
    do if ($4457 & 1) {
     $4467 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1705$index150Z2D = tempRet0;
     $eh$lpad$body$i1705$indexZ2D = $4467;
    } else {
     HEAP32[$4449 >> 2] = 2988;
     $4459 = $ss103 + 44 | 0;
     HEAP32[$4459 >> 2] = 0;
     HEAP32[$4459 + 4 >> 2] = 0;
     HEAP32[$4459 + 8 >> 2] = 0;
     HEAP32[$4459 + 12 >> 2] = 0;
     HEAP32[$ss103 + 60 >> 2] = 24;
     HEAP32[$4 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4449 | 0, $4 | 0);
     $4461 = __THREW__;
     __THREW__ = 0;
     if ($4461 & 1) {
      $4463 = ___cxa_find_matching_catch() | 0;
      $4464 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4459);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4449);
      $eh$lpad$body$i1705$index150Z2D = $4464;
      $eh$lpad$body$i1705$indexZ2D = $4463;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     $4469 = $ss103 + 8 | 0;
     __THREW__ = 0;
     $4470 = invoke_iiii(29, $4469 | 0, 53473, 29) | 0;
     $4471 = __THREW__;
     __THREW__ = 0;
     do if ($4471 & 1) label = 1396; else {
      __THREW__ = 0;
      invoke_iii(30, $4470 | 0, $$lcssa8745 | 0) | 0;
      $4473 = __THREW__;
      __THREW__ = 0;
      if ($4473 & 1) label = 1396; else {
       $4475 = ___cxa_allocate_exception(24) | 0;
       __THREW__ = 0;
       invoke_vii(43, $125 | 0, $4449 | 0);
       $4476 = __THREW__;
       __THREW__ = 0;
       if ($4476 & 1) {
        $4485 = ___cxa_find_matching_catch() | 0;
        $$532592 = $4485;
        $$53812591 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_viiii(16, $4475 | 0, $198 | 0, $$lcssa8600 | 0, $125 | 0);
        $4478 = __THREW__;
        __THREW__ = 0;
        if ($4478 & 1) $$0244 = 1; else {
         __THREW__ = 0;
         invoke_viii(4, $4475 | 0, 392, 179);
         __THREW__ = 0;
         $$0244 = 0;
        }
        $4487 = ___cxa_find_matching_catch() | 0;
        $4488 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($125);
        if ($$0244) {
         $$532592 = $4487;
         $$53812591 = $4488;
        } else {
         $$54 = $4487;
         $$5482 = $4488;
         break;
        }
       }
       ___cxa_free_exception($4475 | 0);
       $$54 = $$532592;
       $$5482 = $$53812591;
      }
     } while (0);
     if ((label | 0) == 1396) {
      $4483 = ___cxa_find_matching_catch() | 0;
      $$54 = $4483;
      $$5482 = tempRet0;
     }
     HEAP32[$ss103 >> 2] = 2892;
     HEAP32[$4447 >> 2] = 2932;
     HEAP32[$4469 >> 2] = 2912;
     HEAP32[$4449 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4459);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4449);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4447);
     $$59 = $$54;
     $$5987 = $$5482;
     label = 1492;
     break L1848;
    } while (0);
    $$0$i1708 = $eh$lpad$body$i1705$index150Z2D;
    $$01$i1707 = $eh$lpad$body$i1705$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4447);
   $eh$lpad$body1114$index87Z2D = $$0$i1708;
   $eh$lpad$body1114$indexZ2D = $$01$i1707;
   label = 942;
   break;
  }
 case 1395:
  {
   $4481 = ___cxa_find_matching_catch() | 0;
   $4482 = tempRet0;
   HEAP32[$296 >> 2] = $$lcssa8741;
   __ZdlPv($$lcssa8741);
   $$59 = $4481;
   $$5987 = $4482;
   label = 1492;
   break;
  }
 case 1402:
  {
   $4490 = $ss104 + 64 | 0;
   $4491 = $ss104 + 8 | 0;
   HEAP32[$4491 >> 2] = 2912;
   $4492 = $ss104 + 12 | 0;
   HEAP32[$ss104 >> 2] = 2952;
   HEAP32[$4490 >> 2] = 2972;
   HEAP32[$ss104 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss104 + 64 | 0, $4492 | 0);
   $4495 = __THREW__;
   __THREW__ = 0;
   if ($4495 & 1) {
    $4508 = ___cxa_find_matching_catch() | 0;
    $$0$i1727 = tempRet0;
    $$01$i1726 = $4508;
   } else {
    HEAP32[$ss104 + 136 >> 2] = 0;
    HEAP32[$ss104 + 140 >> 2] = -1;
    HEAP32[$ss104 >> 2] = 2892;
    HEAP32[$ss104 + 64 >> 2] = 2932;
    HEAP32[$4491 >> 2] = 2912;
    __THREW__ = 0;
    invoke_vi(173, $4492 | 0);
    $4500 = __THREW__;
    __THREW__ = 0;
    do if ($4500 & 1) {
     $4510 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i1724$index155Z2D = tempRet0;
     $eh$lpad$body$i1724$indexZ2D = $4510;
    } else {
     HEAP32[$4492 >> 2] = 2988;
     $4502 = $ss104 + 44 | 0;
     HEAP32[$4502 >> 2] = 0;
     HEAP32[$4502 + 4 >> 2] = 0;
     HEAP32[$4502 + 8 >> 2] = 0;
     HEAP32[$4502 + 12 >> 2] = 0;
     HEAP32[$ss104 + 60 >> 2] = 24;
     HEAP32[$3 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $4492 | 0, $3 | 0);
     $4504 = __THREW__;
     __THREW__ = 0;
     if ($4504 & 1) {
      $4506 = ___cxa_find_matching_catch() | 0;
      $4507 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4502);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4492);
      $eh$lpad$body$i1724$index155Z2D = $4507;
      $eh$lpad$body$i1724$indexZ2D = $4506;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $4512 = $ss104 + 8 | 0;
     __THREW__ = 0;
     invoke_iiii(29, $4512 | 0, 53503, 40) | 0;
     $4513 = __THREW__;
     __THREW__ = 0;
     do if ($4513 & 1) label = 1416; else {
      __THREW__ = 0;
      $4515 = invoke_iiii(29, $4512 | 0, 53544, 30) | 0;
      $4516 = __THREW__;
      __THREW__ = 0;
      if ($4516 & 1) label = 1416; else {
       __THREW__ = 0;
       invoke_iii(30, $4515 | 0, $$lcssa8746 | 0) | 0;
       $4518 = __THREW__;
       __THREW__ = 0;
       if ($4518 & 1) label = 1416; else {
        $4520 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $126 | 0, $4492 | 0);
        $4521 = __THREW__;
        __THREW__ = 0;
        if ($4521 & 1) {
         $4528 = ___cxa_find_matching_catch() | 0;
         $$552595 = $4528;
         $$55832594 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(16, $4520 | 0, $198 | 0, $$lcssa8601 | 0, $126 | 0);
         $4523 = __THREW__;
         __THREW__ = 0;
         if ($4523 & 1) $$0246 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $4520 | 0, 392, 179);
          __THREW__ = 0;
          $$0246 = 0;
         }
         $4530 = ___cxa_find_matching_catch() | 0;
         $4531 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($126);
         if ($$0246) {
          $$552595 = $4530;
          $$55832594 = $4531;
         } else {
          $$56 = $4530;
          $$5684 = $4531;
          break;
         }
        }
        ___cxa_free_exception($4520 | 0);
        $$56 = $$552595;
        $$5684 = $$55832594;
       }
      }
     } while (0);
     if ((label | 0) == 1416) {
      $4526 = ___cxa_find_matching_catch() | 0;
      $$56 = $4526;
      $$5684 = tempRet0;
     }
     HEAP32[$ss104 >> 2] = 2892;
     HEAP32[$4490 >> 2] = 2932;
     HEAP32[$4512 >> 2] = 2912;
     HEAP32[$4492 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4502);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4492);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4490);
     $$59 = $$56;
     $$5987 = $$5684;
     label = 1492;
     break L1848;
    } while (0);
    $$0$i1727 = $eh$lpad$body$i1724$index155Z2D;
    $$01$i1726 = $eh$lpad$body$i1724$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4490);
   $eh$lpad$body1114$index87Z2D = $$0$i1727;
   $eh$lpad$body1114$indexZ2D = $$01$i1726;
   label = 942;
   break;
  }
 case 1424:
  {
   $4537 = ___cxa_find_matching_catch() | 0;
   $4538 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($128);
   $$59 = $4537;
   $$5987 = $4538;
   label = 1492;
   break;
  }
 case 1427:
  {
   $4546 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4546;
   label = 942;
   break;
  }
 case 1430:
  {
   $4553 = ___cxa_find_matching_catch() | 0;
   $4554 = tempRet0;
   HEAP32[$299 >> 2] = $$lcssa8740;
   __ZdlPv($$lcssa8740);
   $$59 = $4553;
   $$5987 = $4554;
   label = 1492;
   break;
  }
 case 1433:
  {
   $4562 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4562;
   label = 942;
   break;
  }
 case 1436:
  {
   $4569 = ___cxa_find_matching_catch() | 0;
   $4570 = tempRet0;
   HEAP32[$302 >> 2] = $$lcssa8739;
   __ZdlPv($$lcssa8739);
   $$59 = $4569;
   $$5987 = $4570;
   label = 1492;
   break;
  }
 case 1439:
  {
   $4578 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4578;
   label = 942;
   break;
  }
 case 1442:
  {
   $4585 = ___cxa_find_matching_catch() | 0;
   $4586 = tempRet0;
   HEAP32[$305 >> 2] = $$lcssa8738;
   __ZdlPv($$lcssa8738);
   $$59 = $4585;
   $$5987 = $4586;
   label = 1492;
   break;
  }
 case 1445:
  {
   $4594 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4594;
   label = 942;
   break;
  }
 case 1448:
  {
   $4602 = ___cxa_find_matching_catch() | 0;
   $4603 = tempRet0;
   HEAP32[$308 >> 2] = $$lcssa8737;
   __ZdlPv($$lcssa8737);
   $$59 = $4602;
   $$5987 = $4603;
   label = 1492;
   break;
  }
 case 1451:
  {
   $4612 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4612;
   label = 942;
   break;
  }
 case 1453:
  {
   $4617 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $138 | 0, 53012, 17);
   $4618 = __THREW__;
   __THREW__ = 0;
   if ($4618 & 1) {
    $4625 = ___cxa_find_matching_catch() | 0;
    $$572598 = $4625;
    $$57852597 = tempRet0;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $4617 | 0, $198 | 0, $$lcssa8589 | 0, $138 | 0);
    $4620 = __THREW__;
    __THREW__ = 0;
    if ($4620 & 1) $$0248 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $4617 | 0, 392, 179);
     __THREW__ = 0;
     $$0248 = 0;
    }
    $4627 = ___cxa_find_matching_catch() | 0;
    $4628 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
    if ($$0248) {
     $$572598 = $4627;
     $$57852597 = $4628;
    } else {
     $$59 = $4627;
     $$5987 = $4628;
     label = 1492;
     break;
    }
   }
   ___cxa_free_exception($4617 | 0);
   $$59 = $$572598;
   $$5987 = $$57852597;
   label = 1492;
   break;
  }
 case 1456:
  {
   $4623 = ___cxa_find_matching_catch() | 0;
   $4624 = tempRet0;
   HEAP32[$311 >> 2] = $$lcssa8735;
   __ZdlPv($$lcssa8735);
   $$59 = $4623;
   $$5987 = $4624;
   label = 1492;
   break;
  }
 case 1464:
  {
   $4641 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $4641;
   label = 942;
   break;
  }
 case 1466:
  {
   $4648 = ___cxa_allocate_exception(24) | 0;
   HEAP32[$141 >> 2] = 0;
   HEAP32[$141 + 4 >> 2] = 0;
   HEAP32[$141 + 8 >> 2] = 0;
   $4649 = HEAP8[$$lcssa8734 >> 0] | 0;
   $4656 = ($4649 & 1) == 0 ? ($4649 & 255) >>> 1 : HEAP32[$$lcssa8733 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $141 | 0, 53575, 29, $4656 + 29 | 0);
   $4658 = __THREW__;
   __THREW__ = 0;
   if ($4658 & 1) label = 1471; else {
    __THREW__ = 0;
    invoke_iiii(35, $141 | 0, ((HEAP8[$$lcssa8734 >> 0] & 1) == 0 ? $$lcssa8734 + 1 | 0 : HEAP32[$$lcssa8733 + 16 >> 2] | 0) | 0, $4656 | 0) | 0;
    $4667 = __THREW__;
    __THREW__ = 0;
    if ($4667 & 1) label = 1471; else {
     __THREW__ = 0;
     invoke_viiii(16, $4648 | 0, $198 | 0, $$lcssa8585 | 0, $141 | 0);
     $4669 = __THREW__;
     __THREW__ = 0;
     if ($4669 & 1) $$0250 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4648 | 0, 392, 179);
      __THREW__ = 0;
      $$0250 = 0;
     }
     $4676 = ___cxa_find_matching_catch() | 0;
     $4677 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($141);
     if ($$0250) {
      $$582601 = $4676;
      $$58862600 = $4677;
     } else {
      $$59 = $4676;
      $$5987 = $4677;
      label = 1492;
      break;
     }
    }
   }
   if ((label | 0) == 1471) {
    $4674 = ___cxa_find_matching_catch() | 0;
    $4675 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($141);
    $$582601 = $4674;
    $$58862600 = $4675;
   }
   ___cxa_free_exception($4648 | 0);
   $$59 = $$582601;
   $$5987 = $$58862600;
   label = 1492;
   break;
  }
 case 1470:
  {
   $4672 = ___cxa_find_matching_catch() | 0;
   $4673 = tempRet0;
   HEAP32[$314 >> 2] = $$lcssa8731;
   __ZdlPv($$lcssa8731);
   $$59 = $4672;
   $$5987 = $4673;
   label = 1492;
   break;
  }
 case 1477:
  {
   __THREW__ = 0;
   $4683 = invoke_iiii(29, 8580, 53605, 38) | 0;
   $4684 = __THREW__;
   __THREW__ = 0;
   do if (!($4684 & 1)) {
    __THREW__ = 0;
    $4686 = invoke_iii(24, $4683 | 0, $$lcssa8657 | 0) | 0;
    $4687 = __THREW__;
    __THREW__ = 0;
    if (!($4687 & 1)) {
     __THREW__ = 0;
     $4693 = invoke_ii(68, $4686 + (HEAP32[(HEAP32[$4686 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
     $4694 = __THREW__;
     __THREW__ = 0;
     if (!($4694 & 1)) {
      HEAP32[$0 >> 2] = $4693;
      __THREW__ = 0;
      $4696 = invoke_iii(22, $0 | 0, 11164) | 0;
      $4697 = __THREW__;
      __THREW__ = 0;
      if (!($4697 & 1)) {
       __THREW__ = 0;
       $4702 = invoke_iii(HEAP32[(HEAP32[$4696 >> 2] | 0) + 28 >> 2] | 0, $4696 | 0, 10) | 0;
       $4703 = __THREW__;
       __THREW__ = 0;
       if (!($4703 & 1)) {
        __ZNSt3__16localeD2Ev($0);
        __THREW__ = 0;
        invoke_iii(25, $4686 | 0, $4702 | 0) | 0;
        $4707 = __THREW__;
        __THREW__ = 0;
        if ($4707 & 1) break;
        __THREW__ = 0;
        invoke_ii(69, $4686 | 0) | 0;
        $4709 = __THREW__;
        __THREW__ = 0;
        if ($4709 & 1) break;
        __THREW__ = 0;
        invoke_v(3);
        __THREW__ = 0;
        break;
       }
      }
      $4705 = ___cxa_find_matching_catch() | 0;
      $4706 = tempRet0;
      __ZNSt3__16localeD2Ev($0);
      $eh$lpad$body1114$index87Z2D = $4706;
      $eh$lpad$body1114$indexZ2D = $4705;
      label = 942;
      break L1848;
     }
    }
   } while (0);
   $3268 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body1114$index87Z2D = tempRet0;
   $eh$lpad$body1114$indexZ2D = $3268;
   label = 942;
   break;
  }
 case 1510:
  {
   $4795 = HEAP32[$$idx$val$i860$lcssa8253 + -140 >> 2] | 0;
   $4797 = (HEAP32[$204 >> 2] | 0) == 19;
   $4798 = ___cxa_allocate_exception(24) | 0;
   $4799 = $4795 + 4 | 0;
   if ($4797) {
    __THREW__ = 0;
    invoke_viiii(16, $4798 | 0, $198 | 0, $4799 | 0, (HEAP32[$205 >> 2] | 0) + 8 | 0);
    $4821 = __THREW__;
    __THREW__ = 0;
    if (!($4821 & 1)) ___cxa_throw($4798 | 0, 392, 179);
    $4823 = ___cxa_find_matching_catch() | 0;
    $4824 = tempRet0;
    ___cxa_free_exception($4798 | 0);
    $$107 = $4823;
    $$107135 = $4824;
    ___resumeException($$107 | 0);
   }
   __THREW__ = 0;
   invoke_vii(60, $145 | 0, HEAP32[$204 >> 2] | 0);
   $4800 = __THREW__;
   __THREW__ = 0;
   do if ($4800 & 1) {
    $4811 = ___cxa_find_matching_catch() | 0;
    $$622606 = $4811;
    $$62902605 = tempRet0;
   } else {
    __THREW__ = 0;
    $4802 = invoke_iiii(33, $145 | 0, 0, 53644) | 0;
    $4803 = __THREW__;
    __THREW__ = 0;
    if ($4803 & 1) {
     $4813 = ___cxa_find_matching_catch() | 0;
     $4814 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($145);
     $$622606 = $4813;
     $$62902605 = $4814;
     break;
    };
    HEAP32[$144 >> 2] = HEAP32[$4802 >> 2];
    HEAP32[$144 + 4 >> 2] = HEAP32[$4802 + 4 >> 2];
    HEAP32[$144 + 8 >> 2] = HEAP32[$4802 + 8 >> 2];
    HEAP32[$4802 >> 2] = 0;
    HEAP32[$4802 + 4 >> 2] = 0;
    HEAP32[$4802 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4805 = invoke_iii(27, $144 | 0, 60756) | 0;
    $4806 = __THREW__;
    __THREW__ = 0;
    if ($4806 & 1) {
     $4815 = ___cxa_find_matching_catch() | 0;
     $$1241 = 1;
     $$60 = $4815;
     $$6088 = tempRet0;
    } else {
     HEAP32[$143 >> 2] = HEAP32[$4805 >> 2];
     HEAP32[$143 + 4 >> 2] = HEAP32[$4805 + 4 >> 2];
     HEAP32[$143 + 8 >> 2] = HEAP32[$4805 + 8 >> 2];
     HEAP32[$4805 >> 2] = 0;
     HEAP32[$4805 + 4 >> 2] = 0;
     HEAP32[$4805 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4798 | 0, $198 | 0, $4799 | 0, $143 | 0);
     $4808 = __THREW__;
     __THREW__ = 0;
     if ($4808 & 1) $$0239 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4798 | 0, 392, 179);
      __THREW__ = 0;
      $$0239 = 0;
     }
     $4817 = ___cxa_find_matching_catch() | 0;
     $4818 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($143);
     $$1241 = $$0239;
     $$60 = $4817;
     $$6088 = $4818;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($144);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($145);
    if ($$1241) {
     $$622606 = $$60;
     $$62902605 = $$6088;
    } else {
     $$107 = $$60;
     $$107135 = $$6088;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4798 | 0);
   $$107 = $$622606;
   $$107135 = $$62902605;
   ___resumeException($$107 | 0);
   break;
  }
 case 1526:
  {
   $4829 = ___cxa_allocate_exception(24) | 0;
   $4830 = $$lcssa9188 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $148 | 0, HEAP32[$204 >> 2] | 0);
   $4831 = __THREW__;
   __THREW__ = 0;
   do if ($4831 & 1) {
    $4842 = ___cxa_find_matching_catch() | 0;
    $$652610 = $4842;
    $$65932609 = tempRet0;
   } else {
    __THREW__ = 0;
    $4833 = invoke_iiii(33, $148 | 0, 0, 53679) | 0;
    $4834 = __THREW__;
    __THREW__ = 0;
    if ($4834 & 1) {
     $4844 = ___cxa_find_matching_catch() | 0;
     $4845 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
     $$652610 = $4844;
     $$65932609 = $4845;
     break;
    };
    HEAP32[$147 >> 2] = HEAP32[$4833 >> 2];
    HEAP32[$147 + 4 >> 2] = HEAP32[$4833 + 4 >> 2];
    HEAP32[$147 + 8 >> 2] = HEAP32[$4833 + 8 >> 2];
    HEAP32[$4833 >> 2] = 0;
    HEAP32[$4833 + 4 >> 2] = 0;
    HEAP32[$4833 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4836 = invoke_iii(27, $147 | 0, 60756) | 0;
    $4837 = __THREW__;
    __THREW__ = 0;
    if ($4837 & 1) {
     $4846 = ___cxa_find_matching_catch() | 0;
     $$1234 = 1;
     $$63 = $4846;
     $$6391 = tempRet0;
    } else {
     HEAP32[$146 >> 2] = HEAP32[$4836 >> 2];
     HEAP32[$146 + 4 >> 2] = HEAP32[$4836 + 4 >> 2];
     HEAP32[$146 + 8 >> 2] = HEAP32[$4836 + 8 >> 2];
     HEAP32[$4836 >> 2] = 0;
     HEAP32[$4836 + 4 >> 2] = 0;
     HEAP32[$4836 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4829 | 0, $198 | 0, $4830 | 0, $146 | 0);
     $4839 = __THREW__;
     __THREW__ = 0;
     if ($4839 & 1) $$0233 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4829 | 0, 392, 179);
      __THREW__ = 0;
      $$0233 = 0;
     }
     $4848 = ___cxa_find_matching_catch() | 0;
     $4849 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($146);
     $$1234 = $$0233;
     $$63 = $4848;
     $$6391 = $4849;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($147);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
    if ($$1234) {
     $$652610 = $$63;
     $$65932609 = $$6391;
    } else {
     $$107 = $$63;
     $$107135 = $$6391;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4829 | 0);
   $$107 = $$652610;
   $$107135 = $$65932609;
   ___resumeException($$107 | 0);
   break;
  }
 case 1540:
  {
   $4861 = ___cxa_allocate_exception(24) | 0;
   $4862 = $$lcssa8480 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $151 | 0, HEAP32[$204 >> 2] | 0);
   $4863 = __THREW__;
   __THREW__ = 0;
   do if ($4863 & 1) {
    $4874 = ___cxa_find_matching_catch() | 0;
    $$682614 = $4874;
    $$68962613 = tempRet0;
   } else {
    __THREW__ = 0;
    $4865 = invoke_iiii(33, $151 | 0, 0, 53714) | 0;
    $4866 = __THREW__;
    __THREW__ = 0;
    if ($4866 & 1) {
     $4876 = ___cxa_find_matching_catch() | 0;
     $4877 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
     $$682614 = $4876;
     $$68962613 = $4877;
     break;
    };
    HEAP32[$150 >> 2] = HEAP32[$4865 >> 2];
    HEAP32[$150 + 4 >> 2] = HEAP32[$4865 + 4 >> 2];
    HEAP32[$150 + 8 >> 2] = HEAP32[$4865 + 8 >> 2];
    HEAP32[$4865 >> 2] = 0;
    HEAP32[$4865 + 4 >> 2] = 0;
    HEAP32[$4865 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4868 = invoke_iii(27, $150 | 0, 60756) | 0;
    $4869 = __THREW__;
    __THREW__ = 0;
    if ($4869 & 1) {
     $4878 = ___cxa_find_matching_catch() | 0;
     $$1225 = 1;
     $$66 = $4878;
     $$6694 = tempRet0;
    } else {
     HEAP32[$149 >> 2] = HEAP32[$4868 >> 2];
     HEAP32[$149 + 4 >> 2] = HEAP32[$4868 + 4 >> 2];
     HEAP32[$149 + 8 >> 2] = HEAP32[$4868 + 8 >> 2];
     HEAP32[$4868 >> 2] = 0;
     HEAP32[$4868 + 4 >> 2] = 0;
     HEAP32[$4868 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4861 | 0, $198 | 0, $4862 | 0, $149 | 0);
     $4871 = __THREW__;
     __THREW__ = 0;
     if ($4871 & 1) $$0224 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4861 | 0, 392, 179);
      __THREW__ = 0;
      $$0224 = 0;
     }
     $4880 = ___cxa_find_matching_catch() | 0;
     $4881 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($149);
     $$1225 = $$0224;
     $$66 = $4880;
     $$6694 = $4881;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($150);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
    if ($$1225) {
     $$682614 = $$66;
     $$68962613 = $$6694;
    } else {
     $$107 = $$66;
     $$107135 = $$6694;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4861 | 0);
   $$107 = $$682614;
   $$107135 = $$68962613;
   ___resumeException($$107 | 0);
   break;
  }
 case 1552:
  {
   $4892 = $ss120 + 64 | 0;
   $4893 = $ss120 + 8 | 0;
   HEAP32[$4893 >> 2] = 2912;
   $4894 = $ss120 + 12 | 0;
   HEAP32[$ss120 >> 2] = 2952;
   HEAP32[$4892 >> 2] = 2972;
   HEAP32[$ss120 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss120 + 64 | 0, $4894 | 0);
   $4897 = __THREW__;
   __THREW__ = 0;
   if ($4897 & 1) {
    $4910 = ___cxa_find_matching_catch() | 0;
    $$0$i1935 = tempRet0;
    $$01$i1934 = $4910;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4892);
    ___resumeException($$01$i1934 | 0);
   }
   HEAP32[$ss120 + 136 >> 2] = 0;
   HEAP32[$ss120 + 140 >> 2] = -1;
   HEAP32[$ss120 >> 2] = 2892;
   HEAP32[$ss120 + 64 >> 2] = 2932;
   HEAP32[$4893 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $4894 | 0);
   $4902 = __THREW__;
   __THREW__ = 0;
   do if ($4902 & 1) {
    $4912 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i1932$index160Z2D = tempRet0;
    $eh$lpad$body$i1932$indexZ2D = $4912;
   } else {
    HEAP32[$4894 >> 2] = 2988;
    $4904 = $ss120 + 44 | 0;
    HEAP32[$4904 >> 2] = 0;
    HEAP32[$4904 + 4 >> 2] = 0;
    HEAP32[$4904 + 8 >> 2] = 0;
    HEAP32[$4904 + 12 >> 2] = 0;
    HEAP32[$ss120 + 60 >> 2] = 24;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $4894 | 0, $0 | 0);
    $4906 = __THREW__;
    __THREW__ = 0;
    if ($4906 & 1) {
     $4908 = ___cxa_find_matching_catch() | 0;
     $4909 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4904);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4894);
     $eh$lpad$body$i1932$index160Z2D = $4909;
     $eh$lpad$body$i1932$indexZ2D = $4908;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $4914 = $ss120 + 8 | 0;
    __THREW__ = 0;
    $4915 = invoke_iiii(29, $4914 | 0, 53747, 20) | 0;
    $4916 = __THREW__;
    __THREW__ = 0;
    do if ($4916 & 1) label = 1568; else {
     __THREW__ = 0;
     $4918 = invoke_iii(30, $4915 | 0, $$lcssa8489 | 0) | 0;
     $4919 = __THREW__;
     __THREW__ = 0;
     if ($4919 & 1) label = 1568; else {
      __THREW__ = 0;
      $4921 = invoke_iiii(29, $4918 | 0, 53768, 16) | 0;
      $4922 = __THREW__;
      __THREW__ = 0;
      if ($4922 & 1) label = 1568; else {
       __THREW__ = 0;
       $4924 = invoke_iii(30, $4921 | 0, $$lcssa8491 | 0) | 0;
       $4925 = __THREW__;
       __THREW__ = 0;
       if ($4925 & 1) label = 1568; else {
        __THREW__ = 0;
        invoke_iiii(29, $4924 | 0, 54795, 1) | 0;
        $4927 = __THREW__;
        __THREW__ = 0;
        if ($4927 & 1) label = 1568; else {
         $4929 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $152 | 0, $4894 | 0);
         $4930 = __THREW__;
         __THREW__ = 0;
         if ($4930 & 1) {
          $4938 = ___cxa_find_matching_catch() | 0;
          $$692618 = $4938;
          $$69972617 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_viiii(16, $4929 | 0, $198 | 0, $$lcssa8481 + 4 | 0, $152 | 0);
          $4933 = __THREW__;
          __THREW__ = 0;
          if ($4933 & 1) $$0220 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $4929 | 0, 392, 179);
           __THREW__ = 0;
           $$0220 = 0;
          }
          $4940 = ___cxa_find_matching_catch() | 0;
          $4941 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($152);
          if ($$0220) {
           $$692618 = $4940;
           $$69972617 = $4941;
          } else {
           $$70 = $4940;
           $$7098 = $4941;
           break;
          }
         }
         ___cxa_free_exception($4929 | 0);
         $$70 = $$692618;
         $$7098 = $$69972617;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 1568) {
     $4936 = ___cxa_find_matching_catch() | 0;
     $$70 = $4936;
     $$7098 = tempRet0;
    }
    HEAP32[$ss120 >> 2] = 2892;
    HEAP32[$4892 >> 2] = 2932;
    HEAP32[$4914 >> 2] = 2912;
    HEAP32[$4894 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4904);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4894);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4892);
    $$107 = $$70;
    $$107135 = $$7098;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i1935 = $eh$lpad$body$i1932$index160Z2D;
   $$01$i1934 = $eh$lpad$body$i1932$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4892);
   ___resumeException($$01$i1934 | 0);
   break;
  }
 case 1577:
  {
   ___assert_fail(53785, 52089, 1854, 53800);
   break;
  }
 case 1579:
  {
   $4961 = ___cxa_allocate_exception(24) | 0;
   $4962 = $$lcssa8475$lcssa8483 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $155 | 0, HEAP32[$204 >> 2] | 0);
   $4963 = __THREW__;
   __THREW__ = 0;
   do if ($4963 & 1) {
    $4974 = ___cxa_find_matching_catch() | 0;
    $$731012620 = tempRet0;
    $$732621 = $4974;
   } else {
    __THREW__ = 0;
    $4965 = invoke_iiii(33, $155 | 0, 0, 53809) | 0;
    $4966 = __THREW__;
    __THREW__ = 0;
    if ($4966 & 1) {
     $4976 = ___cxa_find_matching_catch() | 0;
     $4977 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
     $$731012620 = $4977;
     $$732621 = $4976;
     break;
    };
    HEAP32[$154 >> 2] = HEAP32[$4965 >> 2];
    HEAP32[$154 + 4 >> 2] = HEAP32[$4965 + 4 >> 2];
    HEAP32[$154 + 8 >> 2] = HEAP32[$4965 + 8 >> 2];
    HEAP32[$4965 >> 2] = 0;
    HEAP32[$4965 + 4 >> 2] = 0;
    HEAP32[$4965 + 8 >> 2] = 0;
    __THREW__ = 0;
    $4968 = invoke_iii(27, $154 | 0, 60756) | 0;
    $4969 = __THREW__;
    __THREW__ = 0;
    if ($4969 & 1) {
     $4978 = ___cxa_find_matching_catch() | 0;
     $$1213 = 1;
     $$71 = $4978;
     $$7199 = tempRet0;
    } else {
     HEAP32[$153 >> 2] = HEAP32[$4968 >> 2];
     HEAP32[$153 + 4 >> 2] = HEAP32[$4968 + 4 >> 2];
     HEAP32[$153 + 8 >> 2] = HEAP32[$4968 + 8 >> 2];
     HEAP32[$4968 >> 2] = 0;
     HEAP32[$4968 + 4 >> 2] = 0;
     HEAP32[$4968 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $4961 | 0, $198 | 0, $4962 | 0, $153 | 0);
     $4971 = __THREW__;
     __THREW__ = 0;
     if ($4971 & 1) $$0212 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $4961 | 0, 392, 179);
      __THREW__ = 0;
      $$0212 = 0;
     }
     $4980 = ___cxa_find_matching_catch() | 0;
     $4981 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($153);
     $$1213 = $$0212;
     $$71 = $4980;
     $$7199 = $4981;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($154);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
    if ($$1213) {
     $$731012620 = $$7199;
     $$732621 = $$71;
    } else {
     $$107 = $$71;
     $$107135 = $$7199;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($4961 | 0);
   $$107 = $$732621;
   $$107135 = $$731012620;
   ___resumeException($$107 | 0);
   break;
  }
 case 1594:
  {
   $4994 = ___cxa_find_matching_catch() | 0;
   __ZdlPv($$lcssa9187);
   ___resumeException($4994 | 0);
   break;
  }
 case 1597:
  {
   ___assert_fail(53785, 52089, 1868, 53800);
   break;
  }
 case 1599:
  {
   $5003 = ___cxa_allocate_exception(24) | 0;
   $5004 = $$lcssa8477 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $158 | 0, HEAP32[$204 >> 2] | 0);
   $5005 = __THREW__;
   __THREW__ = 0;
   do if ($5005 & 1) {
    $5016 = ___cxa_find_matching_catch() | 0;
    $$761042624 = tempRet0;
    $$762625 = $5016;
   } else {
    __THREW__ = 0;
    $5007 = invoke_iiii(33, $158 | 0, 0, 53843) | 0;
    $5008 = __THREW__;
    __THREW__ = 0;
    if ($5008 & 1) {
     $5018 = ___cxa_find_matching_catch() | 0;
     $5019 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($158);
     $$761042624 = $5019;
     $$762625 = $5018;
     break;
    };
    HEAP32[$157 >> 2] = HEAP32[$5007 >> 2];
    HEAP32[$157 + 4 >> 2] = HEAP32[$5007 + 4 >> 2];
    HEAP32[$157 + 8 >> 2] = HEAP32[$5007 + 8 >> 2];
    HEAP32[$5007 >> 2] = 0;
    HEAP32[$5007 + 4 >> 2] = 0;
    HEAP32[$5007 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5010 = invoke_iii(27, $157 | 0, 60756) | 0;
    $5011 = __THREW__;
    __THREW__ = 0;
    if ($5011 & 1) {
     $5020 = ___cxa_find_matching_catch() | 0;
     $$1198 = 1;
     $$74 = $5020;
     $$74102 = tempRet0;
    } else {
     HEAP32[$156 >> 2] = HEAP32[$5010 >> 2];
     HEAP32[$156 + 4 >> 2] = HEAP32[$5010 + 4 >> 2];
     HEAP32[$156 + 8 >> 2] = HEAP32[$5010 + 8 >> 2];
     HEAP32[$5010 >> 2] = 0;
     HEAP32[$5010 + 4 >> 2] = 0;
     HEAP32[$5010 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $5003 | 0, $198 | 0, $5004 | 0, $156 | 0);
     $5013 = __THREW__;
     __THREW__ = 0;
     if ($5013 & 1) $$0197 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5003 | 0, 392, 179);
      __THREW__ = 0;
      $$0197 = 0;
     }
     $5022 = ___cxa_find_matching_catch() | 0;
     $5023 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($156);
     $$1198 = $$0197;
     $$74 = $5022;
     $$74102 = $5023;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($157);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($158);
    if ($$1198) {
     $$761042624 = $$74102;
     $$762625 = $$74;
    } else {
     $$107 = $$74;
     $$107135 = $$74102;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5003 | 0);
   $$107 = $$762625;
   $$107135 = $$761042624;
   ___resumeException($$107 | 0);
   break;
  }
 case 1614:
  {
   $5037 = $ss126 + 64 | 0;
   $5038 = $ss126 + 8 | 0;
   HEAP32[$5038 >> 2] = 2912;
   $5039 = $ss126 + 12 | 0;
   HEAP32[$ss126 >> 2] = 2952;
   HEAP32[$5037 >> 2] = 2972;
   HEAP32[$ss126 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss126 + 64 | 0, $5039 | 0);
   $5042 = __THREW__;
   __THREW__ = 0;
   if ($5042 & 1) {
    $5055 = ___cxa_find_matching_catch() | 0;
    $$0$i1969 = tempRet0;
    $$01$i1968 = $5055;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5037);
    ___resumeException($$01$i1968 | 0);
   }
   HEAP32[$ss126 + 136 >> 2] = 0;
   HEAP32[$ss126 + 140 >> 2] = -1;
   HEAP32[$ss126 >> 2] = 2892;
   HEAP32[$ss126 + 64 >> 2] = 2932;
   HEAP32[$5038 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $5039 | 0);
   $5047 = __THREW__;
   __THREW__ = 0;
   do if ($5047 & 1) {
    $5057 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i1966$index165Z2D = tempRet0;
    $eh$lpad$body$i1966$indexZ2D = $5057;
   } else {
    HEAP32[$5039 >> 2] = 2988;
    $5049 = $ss126 + 44 | 0;
    HEAP32[$5049 >> 2] = 0;
    HEAP32[$5049 + 4 >> 2] = 0;
    HEAP32[$5049 + 8 >> 2] = 0;
    HEAP32[$5049 + 12 >> 2] = 0;
    HEAP32[$ss126 + 60 >> 2] = 24;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $5039 | 0, $0 | 0);
    $5051 = __THREW__;
    __THREW__ = 0;
    if ($5051 & 1) {
     $5053 = ___cxa_find_matching_catch() | 0;
     $5054 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5049);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5039);
     $eh$lpad$body$i1966$index165Z2D = $5054;
     $eh$lpad$body$i1966$indexZ2D = $5053;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $5059 = $ss126 + 8 | 0;
    __THREW__ = 0;
    $5060 = invoke_iiii(29, $5059 | 0, 53879, 21) | 0;
    $5061 = __THREW__;
    __THREW__ = 0;
    do if ($5061 & 1) label = 1630; else {
     __THREW__ = 0;
     $5063 = invoke_iii(30, $5060 | 0, $$lcssa8487 | 0) | 0;
     $5064 = __THREW__;
     __THREW__ = 0;
     if ($5064 & 1) label = 1630; else {
      __THREW__ = 0;
      $5066 = invoke_iiii(29, $5063 | 0, 53768, 16) | 0;
      $5067 = __THREW__;
      __THREW__ = 0;
      if ($5067 & 1) label = 1630; else {
       __THREW__ = 0;
       $5069 = invoke_iii(30, $5066 | 0, $$lcssa8485 | 0) | 0;
       $5070 = __THREW__;
       __THREW__ = 0;
       if ($5070 & 1) label = 1630; else {
        __THREW__ = 0;
        invoke_iiii(29, $5069 | 0, 54795, 1) | 0;
        $5072 = __THREW__;
        __THREW__ = 0;
        if ($5072 & 1) label = 1630; else {
         $5074 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_vii(43, $159 | 0, $5039 | 0);
         $5075 = __THREW__;
         __THREW__ = 0;
         if ($5075 & 1) {
          $5083 = ___cxa_find_matching_catch() | 0;
          $$771052628 = tempRet0;
          $$772629 = $5083;
         } else {
          __THREW__ = 0;
          invoke_viiii(16, $5074 | 0, $198 | 0, $$lcssa8478 + 4 | 0, $159 | 0);
          $5078 = __THREW__;
          __THREW__ = 0;
          if ($5078 & 1) $$0187 = 1; else {
           __THREW__ = 0;
           invoke_viii(4, $5074 | 0, 392, 179);
           __THREW__ = 0;
           $$0187 = 0;
          }
          $5085 = ___cxa_find_matching_catch() | 0;
          $5086 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($159);
          if ($$0187) {
           $$771052628 = $5086;
           $$772629 = $5085;
          } else {
           $$78 = $5085;
           $$78106 = $5086;
           break;
          }
         }
         ___cxa_free_exception($5074 | 0);
         $$78 = $$772629;
         $$78106 = $$771052628;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 1630) {
     $5081 = ___cxa_find_matching_catch() | 0;
     $$78 = $5081;
     $$78106 = tempRet0;
    }
    HEAP32[$ss126 >> 2] = 2892;
    HEAP32[$5037 >> 2] = 2932;
    HEAP32[$5059 >> 2] = 2912;
    HEAP32[$5039 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5049);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5039);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5037);
    $$107 = $$78;
    $$107135 = $$78106;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i1969 = $eh$lpad$body$i1966$index165Z2D;
   $$01$i1968 = $eh$lpad$body$i1966$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5037);
   ___resumeException($$01$i1968 | 0);
   break;
  }
 case 1640:
  {
   $5096 = ___cxa_find_matching_catch() | 0;
   $5097 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
   $$107 = $5096;
   $$107135 = $5097;
   ___resumeException($$107 | 0);
   break;
  }
 case 1641:
  {
   $5098 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 53901, 44) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($5098 + (HEAP32[(HEAP32[$5098 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $5104 = invoke_iii(22, $0 | 0, 11164) | 0;
   $5105 = __THREW__;
   __THREW__ = 0;
   if ($5105 & 1) {
    $5113 = ___cxa_find_matching_catch() | 0;
    $5114 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5113 | 0);
   }
   __THREW__ = 0;
   $5110 = invoke_iii(HEAP32[(HEAP32[$5104 >> 2] | 0) + 28 >> 2] | 0, $5104 | 0, 10) | 0;
   $5111 = __THREW__;
   __THREW__ = 0;
   if ($5111 & 1) {
    $5113 = ___cxa_find_matching_catch() | 0;
    $5114 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($5113 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($5098, $5110) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($5098) | 0;
    _abort();
   }
   break;
  }
 case 1646:
  {
   $5118 = ___cxa_allocate_exception(24) | 0;
   $5119 = $$lcssa9186 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $164 | 0, HEAP32[$204 >> 2] | 0);
   $5120 = __THREW__;
   __THREW__ = 0;
   do if ($5120 & 1) {
    $5131 = ___cxa_find_matching_catch() | 0;
    $$811092631 = tempRet0;
    $$812632 = $5131;
   } else {
    __THREW__ = 0;
    $5122 = invoke_iiii(33, $164 | 0, 0, 53946) | 0;
    $5123 = __THREW__;
    __THREW__ = 0;
    if ($5123 & 1) {
     $5133 = ___cxa_find_matching_catch() | 0;
     $5134 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
     $$811092631 = $5134;
     $$812632 = $5133;
     break;
    };
    HEAP32[$163 >> 2] = HEAP32[$5122 >> 2];
    HEAP32[$163 + 4 >> 2] = HEAP32[$5122 + 4 >> 2];
    HEAP32[$163 + 8 >> 2] = HEAP32[$5122 + 8 >> 2];
    HEAP32[$5122 >> 2] = 0;
    HEAP32[$5122 + 4 >> 2] = 0;
    HEAP32[$5122 + 8 >> 2] = 0;
    __THREW__ = 0;
    $5125 = invoke_iii(27, $163 | 0, 60756) | 0;
    $5126 = __THREW__;
    __THREW__ = 0;
    if ($5126 & 1) {
     $5135 = ___cxa_find_matching_catch() | 0;
     $$1180 = 1;
     $$79 = $5135;
     $$79107 = tempRet0;
    } else {
     HEAP32[$162 >> 2] = HEAP32[$5125 >> 2];
     HEAP32[$162 + 4 >> 2] = HEAP32[$5125 + 4 >> 2];
     HEAP32[$162 + 8 >> 2] = HEAP32[$5125 + 8 >> 2];
     HEAP32[$5125 >> 2] = 0;
     HEAP32[$5125 + 4 >> 2] = 0;
     HEAP32[$5125 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $5118 | 0, $198 | 0, $5119 | 0, $162 | 0);
     $5128 = __THREW__;
     __THREW__ = 0;
     if ($5128 & 1) $$0179 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5118 | 0, 392, 179);
      __THREW__ = 0;
      $$0179 = 0;
     }
     $5137 = ___cxa_find_matching_catch() | 0;
     $5138 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($162);
     $$1180 = $$0179;
     $$79 = $5137;
     $$79107 = $5138;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($163);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($164);
    if ($$1180) {
     $$811092631 = $$79107;
     $$812632 = $$79;
    } else {
     $$107 = $$79;
     $$107135 = $$79107;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5118 | 0);
   $$107 = $$812632;
   $$107135 = $$811092631;
   ___resumeException($$107 | 0);
   break;
  }
 case 1659:
  {
   $5145 = ___cxa_allocate_exception(24) | 0;
   __THREW__ = 0;
   invoke_viii(3, $165 | 0, 53996, 28);
   $5146 = __THREW__;
   __THREW__ = 0;
   if ($5146 & 1) {
    $5152 = ___cxa_find_matching_catch() | 0;
    $$821102635 = tempRet0;
    $$822636 = $5152;
   } else {
    __THREW__ = 0;
    invoke_viiii(16, $5145 | 0, $198 | 0, $$lcssa8459 + 4 | 0, $165 | 0);
    $5149 = __THREW__;
    __THREW__ = 0;
    if ($5149 & 1) $$0175 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $5145 | 0, 392, 179);
     __THREW__ = 0;
     $$0175 = 0;
    }
    $5154 = ___cxa_find_matching_catch() | 0;
    $5155 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($165);
    if ($$0175) {
     $$821102635 = $5155;
     $$822636 = $5154;
    } else {
     $$107 = $5154;
     $$107135 = $5155;
     ___resumeException($$107 | 0);
    }
   }
   ___cxa_free_exception($5145 | 0);
   $$107 = $$822636;
   $$107135 = $$821102635;
   ___resumeException($$107 | 0);
   break;
  }
 case 1669:
  {
   $5168 = ___cxa_find_matching_catch() | 0;
   __ZdlPv($$lcssa8470);
   ___resumeException($5168 | 0);
   break;
  }
 case 1677:
  {
   $5182 = ___cxa_allocate_exception(24) | 0;
   $5183 = $$lcssa8461 + 4 | 0;
   HEAP32[$167 >> 2] = 0;
   HEAP32[$167 + 4 >> 2] = 0;
   HEAP32[$167 + 8 >> 2] = 0;
   $5184 = HEAP8[$$lcssa8469 >> 0] | 0;
   $5191 = ($5184 & 1) == 0 ? ($5184 & 255) >>> 1 : HEAP32[$$lcssa8467 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $167 | 0, 54025, 23, $5191 + 23 | 0);
   $5193 = __THREW__;
   __THREW__ = 0;
   do if ($5193 & 1) label = 1682; else {
    __THREW__ = 0;
    invoke_iiii(35, $167 | 0, ((HEAP8[$$lcssa8469 >> 0] & 1) == 0 ? $$lcssa8469 + 1 | 0 : HEAP32[$$lcssa8467 + 16 >> 2] | 0) | 0, $5191 | 0) | 0;
    $5202 = __THREW__;
    __THREW__ = 0;
    if ($5202 & 1) label = 1682; else {
     __THREW__ = 0;
     $5204 = invoke_iii(27, $167 | 0, 52632) | 0;
     $5205 = __THREW__;
     __THREW__ = 0;
     if ($5205 & 1) {
      $5212 = ___cxa_find_matching_catch() | 0;
      $5213 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
      $$841122638 = $5213;
      $$842639 = $5212;
      break;
     };
     HEAP32[$166 >> 2] = HEAP32[$5204 >> 2];
     HEAP32[$166 + 4 >> 2] = HEAP32[$5204 + 4 >> 2];
     HEAP32[$166 + 8 >> 2] = HEAP32[$5204 + 8 >> 2];
     HEAP32[$5204 >> 2] = 0;
     HEAP32[$5204 + 4 >> 2] = 0;
     HEAP32[$5204 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $5182 | 0, $198 | 0, $5183 | 0, $166 | 0);
     $5207 = __THREW__;
     __THREW__ = 0;
     if ($5207 & 1) $$0168 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5182 | 0, 392, 179);
      __THREW__ = 0;
      $$0168 = 0;
     }
     $5214 = ___cxa_find_matching_catch() | 0;
     $5215 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($166);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
     if ($$0168) {
      $$841122638 = $5215;
      $$842639 = $5214;
     } else {
      $$107 = $5214;
      $$107135 = $5215;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 1682) {
    $5210 = ___cxa_find_matching_catch() | 0;
    $5211 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
    $$841122638 = $5211;
    $$842639 = $5210;
   }
   ___cxa_free_exception($5182 | 0);
   $$107 = $$842639;
   $$107135 = $$841122638;
   ___resumeException($$107 | 0);
   break;
  }
 case 1777:
  {
   $5439 = ___cxa_find_matching_catch() | 0;
   $5440 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($169, HEAP32[$323 >> 2] | 0);
   $$86 = $5439;
   $$86114 = $5440;
   label = 1781;
   break;
  }
 case 1778:
  {
   $5442 = ___cxa_find_matching_catch() | 0;
   $5443 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$327 >> 2] | 0);
   $$85 = $5442;
   $$85113 = $5443;
   label = 1780;
   break;
  }
 case 1779:
  {
   $5445 = ___cxa_find_matching_catch() | 0;
   $5446 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($170, HEAP32[$327 >> 2] | 0);
   $$85 = $5445;
   $$85113 = $5446;
   label = 1780;
   break;
  }
 case 1783:
  {
   $5454 = ___cxa_allocate_exception(24) | 0;
   $5455 = $$lcssa8455 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(60, $172 | 0, HEAP32[$204 >> 2] | 0);
   $5456 = __THREW__;
   __THREW__ = 0;
   do if ($5456 & 1) {
    $5464 = ___cxa_find_matching_catch() | 0;
    $$881162642 = tempRet0;
    $$882643 = $5464;
   } else {
    __THREW__ = 0;
    $5458 = invoke_iiii(33, $172 | 0, 0, 54049) | 0;
    $5459 = __THREW__;
    __THREW__ = 0;
    if ($5459 & 1) {
     $5466 = ___cxa_find_matching_catch() | 0;
     $5467 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($172);
     $$881162642 = $5467;
     $$882643 = $5466;
     break;
    };
    HEAP32[$171 >> 2] = HEAP32[$5458 >> 2];
    HEAP32[$171 + 4 >> 2] = HEAP32[$5458 + 4 >> 2];
    HEAP32[$171 + 8 >> 2] = HEAP32[$5458 + 8 >> 2];
    HEAP32[$5458 >> 2] = 0;
    HEAP32[$5458 + 4 >> 2] = 0;
    HEAP32[$5458 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_viiii(16, $5454 | 0, $198 | 0, $5455 | 0, $171 | 0);
    $5461 = __THREW__;
    __THREW__ = 0;
    if ($5461 & 1) $$0151 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $5454 | 0, 392, 179);
     __THREW__ = 0;
     $$0151 = 0;
    }
    $5468 = ___cxa_find_matching_catch() | 0;
    $5469 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($171);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($172);
    if ($$0151) {
     $$881162642 = $5469;
     $$882643 = $5468;
    } else {
     $$107 = $5468;
     $$107135 = $5469;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($5454 | 0);
   $$107 = $$882643;
   $$107135 = $$881162642;
   ___resumeException($$107 | 0);
   break;
  }
 case 1794:
  {
   $5480 = ___cxa_find_matching_catch() | 0;
   $5481 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($175, HEAP32[$336 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($174, HEAP32[$333 >> 2] | 0);
   $$107 = $5480;
   $$107135 = $5481;
   ___resumeException($$107 | 0);
   break;
  }
 case 1810:
  {
   $5532 = $ss135 + 64 | 0;
   $5533 = $ss135 + 8 | 0;
   HEAP32[$5533 >> 2] = 2912;
   $5534 = $ss135 + 12 | 0;
   HEAP32[$ss135 >> 2] = 2952;
   HEAP32[$5532 >> 2] = 2972;
   HEAP32[$ss135 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss135 + 64 | 0, $5534 | 0);
   $5537 = __THREW__;
   __THREW__ = 0;
   if ($5537 & 1) {
    $5550 = ___cxa_find_matching_catch() | 0;
    $$0$i2150 = tempRet0;
    $$01$i2149 = $5550;
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5532);
    ___resumeException($$01$i2149 | 0);
   }
   HEAP32[$ss135 + 136 >> 2] = 0;
   HEAP32[$ss135 + 140 >> 2] = -1;
   HEAP32[$ss135 >> 2] = 2892;
   HEAP32[$ss135 + 64 >> 2] = 2932;
   HEAP32[$5533 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $5534 | 0);
   $5542 = __THREW__;
   __THREW__ = 0;
   do if ($5542 & 1) {
    $5552 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i2147$index170Z2D = tempRet0;
    $eh$lpad$body$i2147$indexZ2D = $5552;
   } else {
    HEAP32[$5534 >> 2] = 2988;
    $5544 = $ss135 + 44 | 0;
    HEAP32[$5544 >> 2] = 0;
    HEAP32[$5544 + 4 >> 2] = 0;
    HEAP32[$5544 + 8 >> 2] = 0;
    HEAP32[$5544 + 12 >> 2] = 0;
    HEAP32[$ss135 + 60 >> 2] = 24;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $5534 | 0, $0 | 0);
    $5546 = __THREW__;
    __THREW__ = 0;
    if ($5546 & 1) {
     $5548 = ___cxa_find_matching_catch() | 0;
     $5549 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5544);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5534);
     $eh$lpad$body$i2147$index170Z2D = $5549;
     $eh$lpad$body$i2147$indexZ2D = $5548;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $5554 = $ss135 + 8 | 0;
    __THREW__ = 0;
    $5555 = invoke_iiii(29, $5554 | 0, 54088, 27) | 0;
    $5556 = __THREW__;
    __THREW__ = 0;
    do if ($5556 & 1) label = 1824; else {
     __THREW__ = 0;
     invoke_vii(60, $176 | 0, HEAP32[$204 >> 2] | 0);
     $5558 = __THREW__;
     __THREW__ = 0;
     if ($5558 & 1) label = 1824; else {
      $5560 = HEAP8[$176 >> 0] | 0;
      $5562 = ($5560 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $5555 | 0, ($5562 ? $176 + 1 | 0 : HEAP32[$176 + 8 >> 2] | 0) | 0, ($5562 ? ($5560 & 255) >>> 1 : HEAP32[$176 + 4 >> 2] | 0) | 0) | 0;
      $5572 = __THREW__;
      __THREW__ = 0;
      if ($5572 & 1) {
       $5583 = ___cxa_find_matching_catch() | 0;
       $5584 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
       $$90 = $5583;
       $$90118 = $5584;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($176);
      $5574 = ___cxa_allocate_exception(24) | 0;
      __THREW__ = 0;
      invoke_vii(43, $177 | 0, $5534 | 0);
      $5575 = __THREW__;
      __THREW__ = 0;
      if ($5575 & 1) {
       $5585 = ___cxa_find_matching_catch() | 0;
       $$891172646 = tempRet0;
       $$892647 = $5585;
      } else {
       __THREW__ = 0;
       invoke_viiii(16, $5574 | 0, $198 | 0, $$lcssa8428 + 4 | 0, $177 | 0);
       $5578 = __THREW__;
       __THREW__ = 0;
       if ($5578 & 1) $$0144 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $5574 | 0, 392, 179);
        __THREW__ = 0;
        $$0144 = 0;
       }
       $5587 = ___cxa_find_matching_catch() | 0;
       $5588 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($177);
       if ($$0144) {
        $$891172646 = $5588;
        $$892647 = $5587;
       } else {
        $$90 = $5587;
        $$90118 = $5588;
        break;
       }
      }
      ___cxa_free_exception($5574 | 0);
      $$90 = $$892647;
      $$90118 = $$891172646;
     }
    } while (0);
    if ((label | 0) == 1824) {
     $5581 = ___cxa_find_matching_catch() | 0;
     $$90 = $5581;
     $$90118 = tempRet0;
    }
    HEAP32[$ss135 >> 2] = 2892;
    HEAP32[$5532 >> 2] = 2932;
    HEAP32[$5554 >> 2] = 2912;
    HEAP32[$5534 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5544);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5534);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5532);
    $$107 = $$90;
    $$107135 = $$90118;
    ___resumeException($$107 | 0);
   } while (0);
   $$0$i2150 = $eh$lpad$body$i2147$index170Z2D;
   $$01$i2149 = $eh$lpad$body$i2147$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($5532);
   ___resumeException($$01$i2149 | 0);
   break;
  }
 case 1834:
  {
   $5601 = ___cxa_find_matching_catch() | 0;
   __ZdlPv($$lcssa8447);
   ___resumeException($5601 | 0);
   break;
  }
 case 1842:
  {
   $5615 = ___cxa_allocate_exception(24) | 0;
   $5616 = $$lcssa8430 + 4 | 0;
   HEAP32[$179 >> 2] = 0;
   HEAP32[$179 + 4 >> 2] = 0;
   HEAP32[$179 + 8 >> 2] = 0;
   $5617 = HEAP8[$$lcssa8442 >> 0] | 0;
   $5624 = ($5617 & 1) == 0 ? ($5617 & 255) >>> 1 : HEAP32[$$lcssa8436 + 12 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $179 | 0, 54025, 23, $5624 + 23 | 0);
   $5626 = __THREW__;
   __THREW__ = 0;
   do if ($5626 & 1) label = 1847; else {
    __THREW__ = 0;
    invoke_iiii(35, $179 | 0, ((HEAP8[$$lcssa8442 >> 0] & 1) == 0 ? $$lcssa8442 + 1 | 0 : HEAP32[$$lcssa8436 + 16 >> 2] | 0) | 0, $5624 | 0) | 0;
    $5635 = __THREW__;
    __THREW__ = 0;
    if ($5635 & 1) label = 1847; else {
     __THREW__ = 0;
     $5637 = invoke_iii(27, $179 | 0, 52632) | 0;
     $5638 = __THREW__;
     __THREW__ = 0;
     if ($5638 & 1) {
      $5645 = ___cxa_find_matching_catch() | 0;
      $5646 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($179);
      $$921202649 = $5646;
      $$922650 = $5645;
      break;
     };
     HEAP32[$178 >> 2] = HEAP32[$5637 >> 2];
     HEAP32[$178 + 4 >> 2] = HEAP32[$5637 + 4 >> 2];
     HEAP32[$178 + 8 >> 2] = HEAP32[$5637 + 8 >> 2];
     HEAP32[$5637 >> 2] = 0;
     HEAP32[$5637 + 4 >> 2] = 0;
     HEAP32[$5637 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $5615 | 0, $198 | 0, $5616 | 0, $178 | 0);
     $5640 = __THREW__;
     __THREW__ = 0;
     if ($5640 & 1) $$0139 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $5615 | 0, 392, 179);
      __THREW__ = 0;
      $$0139 = 0;
     }
     $5647 = ___cxa_find_matching_catch() | 0;
     $5648 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($178);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($179);
     if ($$0139) {
      $$921202649 = $5648;
      $$922650 = $5647;
     } else {
      $$107 = $5647;
      $$107135 = $5648;
      ___resumeException($$107 | 0);
     }
    }
   } while (0);
   if ((label | 0) == 1847) {
    $5643 = ___cxa_find_matching_catch() | 0;
    $5644 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($179);
    $$921202649 = $5644;
    $$922650 = $5643;
   }
   ___cxa_free_exception($5615 | 0);
   $$107 = $$922650;
   $$107135 = $$921202649;
   ___resumeException($$107 | 0);
   break;
  }
 case 1927:
  {
   $5841 = ___cxa_find_matching_catch() | 0;
   $5842 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($181, HEAP32[$339 >> 2] | 0);
   $$94 = $5841;
   $$94122 = $5842;
   label = 1931;
   break;
  }
 case 1928:
  {
   $5844 = ___cxa_find_matching_catch() | 0;
   $5845 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($182, HEAP32[$343 >> 2] | 0);
   $$93 = $5844;
   $$93121 = $5845;
   label = 1930;
   break;
  }
 case 1929:
  {
   $5847 = ___cxa_find_matching_catch() | 0;
   $5848 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($182, HEAP32[$343 >> 2] | 0);
   $$93 = $5847;
   $$93121 = $5848;
   label = 1930;
   break;
  }
 case 1949:
  {
   $5903 = ___cxa_find_matching_catch() | 0;
   $5904 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($354);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($348);
   $eh$lpad$body$i2303$index175Z2D = $5904;
   $eh$lpad$body$i2303$indexZ2D = $5903;
   label = 1952;
   break;
  }
 case 1950:
  {
   $5905 = ___cxa_find_matching_catch() | 0;
   $$0$i2306 = tempRet0;
   $$01$i2305 = $5905;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($346);
   ___resumeException($$01$i2305 | 0);
   break;
  }
 case 1951:
  {
   $5907 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i2303$index175Z2D = tempRet0;
   $eh$lpad$body$i2303$indexZ2D = $5907;
   label = 1952;
   break;
  }
 case 1956:
  {
   $5928 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body2330$index181Z2D = tempRet0;
   $eh$lpad$body2330$indexZ2D = $5928;
   label = 1957;
   break;
  }
 case 1960:
  {
   $5937 = ___cxa_find_matching_catch() | 0;
   $5938 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $eh$lpad$body2330$index181Z2D = $5938;
   $eh$lpad$body2330$indexZ2D = $5937;
   label = 1957;
   break;
  }
 case 1963:
  {
   $5950 = ___cxa_find_matching_catch() | 0;
   $5951 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($183);
   $$95 = $5950;
   $$95123 = $5951;
   label = 1976;
   break;
  }
 case 1968:
  {
   $5978 = ___cxa_find_matching_catch() | 0;
   $5979 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
   $eh$lpad$body2330$index181Z2D = $5979;
   $eh$lpad$body2330$indexZ2D = $5978;
   label = 1957;
   break;
  }
 case 1971:
  {
   $5991 = ___cxa_find_matching_catch() | 0;
   $5992 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184);
   $$95 = $5991;
   $$95123 = $5992;
   label = 1976;
   break;
  }
 case 1975:
  {
   $5997 = ___cxa_find_matching_catch() | 0;
   $5998 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($186);
   $$95 = $5997;
   $$95123 = $5998;
   label = 1976;
   break;
  }
 case 1980:
  {
   $6007 = ___cxa_allocate_exception(24) | 0;
   $6008 = $$lcssa8425 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $189 | 0, HEAP32[$$lcssa8427 >> 2] | 0);
   $6010 = __THREW__;
   __THREW__ = 0;
   do if ($6010 & 1) {
    $6021 = ___cxa_find_matching_catch() | 0;
    $$981262653 = tempRet0;
    $$982654 = $6021;
   } else {
    __THREW__ = 0;
    $6012 = invoke_iiii(33, $189 | 0, 0, 54116) | 0;
    $6013 = __THREW__;
    __THREW__ = 0;
    if ($6013 & 1) {
     $6023 = ___cxa_find_matching_catch() | 0;
     $6024 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
     $$981262653 = $6024;
     $$982654 = $6023;
     break;
    };
    HEAP32[$188 >> 2] = HEAP32[$6012 >> 2];
    HEAP32[$188 + 4 >> 2] = HEAP32[$6012 + 4 >> 2];
    HEAP32[$188 + 8 >> 2] = HEAP32[$6012 + 8 >> 2];
    HEAP32[$6012 >> 2] = 0;
    HEAP32[$6012 + 4 >> 2] = 0;
    HEAP32[$6012 + 8 >> 2] = 0;
    __THREW__ = 0;
    $6015 = invoke_iii(27, $188 | 0, 52981) | 0;
    $6016 = __THREW__;
    __THREW__ = 0;
    if ($6016 & 1) {
     $6025 = ___cxa_find_matching_catch() | 0;
     $$17 = 1;
     $$96 = $6025;
     $$96124 = tempRet0;
    } else {
     HEAP32[$187 >> 2] = HEAP32[$6015 >> 2];
     HEAP32[$187 + 4 >> 2] = HEAP32[$6015 + 4 >> 2];
     HEAP32[$187 + 8 >> 2] = HEAP32[$6015 + 8 >> 2];
     HEAP32[$6015 >> 2] = 0;
     HEAP32[$6015 + 4 >> 2] = 0;
     HEAP32[$6015 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $6007 | 0, $198 | 0, $6008 | 0, $187 | 0);
     $6018 = __THREW__;
     __THREW__ = 0;
     if ($6018 & 1) $$06 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $6007 | 0, 392, 179);
      __THREW__ = 0;
      $$06 = 0;
     }
     $6027 = ___cxa_find_matching_catch() | 0;
     $6028 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($187);
     $$17 = $$06;
     $$96 = $6027;
     $$96124 = $6028;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($188);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($189);
    if ($$17) {
     $$981262653 = $$96124;
     $$982654 = $$96;
    } else {
     $$107 = $$96;
     $$107135 = $$96124;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($6007 | 0);
   $$107 = $$982654;
   $$107135 = $$981262653;
   ___resumeException($$107 | 0);
   break;
  }
 case 1994:
  {
   $6037 = ___cxa_allocate_exception(24) | 0;
   $6038 = $$lcssa8424 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $192 | 0, HEAP32[$$lcssa8426 >> 2] | 0);
   $6040 = __THREW__;
   __THREW__ = 0;
   do if ($6040 & 1) {
    $6051 = ___cxa_find_matching_catch() | 0;
    $$1011292657 = tempRet0;
    $$1012658 = $6051;
   } else {
    __THREW__ = 0;
    $6042 = invoke_iiii(33, $192 | 0, 0, 54116) | 0;
    $6043 = __THREW__;
    __THREW__ = 0;
    if ($6043 & 1) {
     $6053 = ___cxa_find_matching_catch() | 0;
     $6054 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($192);
     $$1011292657 = $6054;
     $$1012658 = $6053;
     break;
    };
    HEAP32[$191 >> 2] = HEAP32[$6042 >> 2];
    HEAP32[$191 + 4 >> 2] = HEAP32[$6042 + 4 >> 2];
    HEAP32[$191 + 8 >> 2] = HEAP32[$6042 + 8 >> 2];
    HEAP32[$6042 >> 2] = 0;
    HEAP32[$6042 + 4 >> 2] = 0;
    HEAP32[$6042 + 8 >> 2] = 0;
    __THREW__ = 0;
    $6045 = invoke_iii(27, $191 | 0, 53030) | 0;
    $6046 = __THREW__;
    __THREW__ = 0;
    if ($6046 & 1) {
     $6055 = ___cxa_find_matching_catch() | 0;
     $$13 = 1;
     $$99 = $6055;
     $$99127 = tempRet0;
    } else {
     HEAP32[$190 >> 2] = HEAP32[$6045 >> 2];
     HEAP32[$190 + 4 >> 2] = HEAP32[$6045 + 4 >> 2];
     HEAP32[$190 + 8 >> 2] = HEAP32[$6045 + 8 >> 2];
     HEAP32[$6045 >> 2] = 0;
     HEAP32[$6045 + 4 >> 2] = 0;
     HEAP32[$6045 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(16, $6037 | 0, $198 | 0, $6038 | 0, $190 | 0);
     $6048 = __THREW__;
     __THREW__ = 0;
     if ($6048 & 1) $$02 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $6037 | 0, 392, 179);
      __THREW__ = 0;
      $$02 = 0;
     }
     $6057 = ___cxa_find_matching_catch() | 0;
     $6058 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($190);
     $$13 = $$02;
     $$99 = $6057;
     $$99127 = $6058;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($191);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($192);
    if ($$13) {
     $$1011292657 = $$99127;
     $$1012658 = $$99;
    } else {
     $$107 = $$99;
     $$107135 = $$99127;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($6037 | 0);
   $$107 = $$1012658;
   $$107135 = $$1011292657;
   ___resumeException($$107 | 0);
   break;
  }
 case 2005:
  {
   $6059 = ___cxa_allocate_exception(24) | 0;
   $6060 = $$lcssa8423 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(65, $196 | 0, HEAP32[$$lcssa8423 + 48 >> 2] | 0);
   $6063 = __THREW__;
   __THREW__ = 0;
   do if ($6063 & 1) {
    $6091 = ___cxa_find_matching_catch() | 0;
    $$1061342661 = tempRet0;
    $$1062662 = $6091;
   } else {
    __THREW__ = 0;
    $6065 = invoke_iiii(33, $196 | 0, 0, 54116) | 0;
    $6066 = __THREW__;
    __THREW__ = 0;
    if ($6066 & 1) {
     $6093 = ___cxa_find_matching_catch() | 0;
     $6094 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($196);
     $$1061342661 = $6094;
     $$1062662 = $6093;
     break;
    };
    HEAP32[$195 >> 2] = HEAP32[$6065 >> 2];
    HEAP32[$195 + 4 >> 2] = HEAP32[$6065 + 4 >> 2];
    HEAP32[$195 + 8 >> 2] = HEAP32[$6065 + 8 >> 2];
    HEAP32[$6065 >> 2] = 0;
    HEAP32[$6065 + 4 >> 2] = 0;
    HEAP32[$6065 + 8 >> 2] = 0;
    __THREW__ = 0;
    $6068 = invoke_iii(27, $195 | 0, 54132) | 0;
    $6069 = __THREW__;
    __THREW__ = 0;
    if ($6069 & 1) {
     $6095 = ___cxa_find_matching_catch() | 0;
     $$104 = $6095;
     $$104132 = tempRet0;
     $$3 = 1;
    } else {
     HEAP32[$194 >> 2] = HEAP32[$6068 >> 2];
     HEAP32[$194 + 4 >> 2] = HEAP32[$6068 + 4 >> 2];
     HEAP32[$194 + 8 >> 2] = HEAP32[$6068 + 8 >> 2];
     HEAP32[$6068 >> 2] = 0;
     HEAP32[$6068 + 4 >> 2] = 0;
     HEAP32[$6068 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(60, $197 | 0, HEAP32[$204 >> 2] | 0);
     $6071 = __THREW__;
     __THREW__ = 0;
     if ($6071 & 1) {
      $6097 = ___cxa_find_matching_catch() | 0;
      $$103 = $6097;
      $$103131 = tempRet0;
      $$2 = 1;
     } else {
      $6073 = HEAP8[$197 >> 0] | 0;
      $6075 = ($6073 & 1) == 0;
      __THREW__ = 0;
      $6085 = invoke_iiii(35, $194 | 0, ($6075 ? $197 + 1 | 0 : HEAP32[$197 + 8 >> 2] | 0) | 0, ($6075 ? ($6073 & 255) >>> 1 : HEAP32[$197 + 4 >> 2] | 0) | 0) | 0;
      $6086 = __THREW__;
      __THREW__ = 0;
      if ($6086 & 1) {
       $6099 = ___cxa_find_matching_catch() | 0;
       $$1 = 1;
       $$102 = $6099;
       $$102130 = tempRet0;
      } else {
       HEAP32[$193 >> 2] = HEAP32[$6085 >> 2];
       HEAP32[$193 + 4 >> 2] = HEAP32[$6085 + 4 >> 2];
       HEAP32[$193 + 8 >> 2] = HEAP32[$6085 + 8 >> 2];
       HEAP32[$6085 >> 2] = 0;
       HEAP32[$6085 + 4 >> 2] = 0;
       HEAP32[$6085 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_viiii(16, $6059 | 0, $198 | 0, $6060 | 0, $193 | 0);
       $6088 = __THREW__;
       __THREW__ = 0;
       if ($6088 & 1) $$0 = 1; else {
        __THREW__ = 0;
        invoke_viii(4, $6059 | 0, 392, 179);
        __THREW__ = 0;
        $$0 = 0;
       }
       $6101 = ___cxa_find_matching_catch() | 0;
       $6102 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($193);
       $$1 = $$0;
       $$102 = $6101;
       $$102130 = $6102;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($197);
      $$103 = $$102;
      $$103131 = $$102130;
      $$2 = $$1;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($194);
     $$104 = $$103;
     $$104132 = $$103131;
     $$3 = $$2;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($195);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($196);
    if ($$3) {
     $$1061342661 = $$104132;
     $$1062662 = $$104;
    } else {
     $$107 = $$104;
     $$107135 = $$104132;
     ___resumeException($$107 | 0);
    }
   } while (0);
   ___cxa_free_exception($6059 | 0);
   $$107 = $$1062662;
   $$107135 = $$1061342661;
   ___resumeException($$107 | 0);
   break;
  }
 case 2022:
  {
   $6105 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 54159, 36) | 0, HEAP32[$$lcssa8284 >> 2] | 0) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($6105 + (HEAP32[(HEAP32[$6105 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $6111 = invoke_iii(22, $0 | 0, 11164) | 0;
   $6112 = __THREW__;
   __THREW__ = 0;
   if ($6112 & 1) {
    $6120 = ___cxa_find_matching_catch() | 0;
    $6121 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($6120 | 0);
   }
   __THREW__ = 0;
   $6117 = invoke_iii(HEAP32[(HEAP32[$6111 >> 2] | 0) + 28 >> 2] | 0, $6111 | 0, 10) | 0;
   $6118 = __THREW__;
   __THREW__ = 0;
   if ($6118 & 1) {
    $6120 = ___cxa_find_matching_catch() | 0;
    $6121 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($6120 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($6105, $6117) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($6105) | 0;
    _abort();
   }
   break;
  }
 case 2029:
  {
   STACKTOP = sp;
   return;
  }
 }
 switch (label | 0) {
 case 108:
  {
   $740 = HEAP32[$2 >> 2] | 0;
   $742 = $740;
   if (!$740) {
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
    label = 112;
   } else {
    $743 = HEAP32[$373 >> 2] | 0;
    if (($743 | 0) != ($740 | 0)) HEAP32[$373 >> 2] = $743 + (~(($743 + -4 - $742 | 0) >>> 2) << 2);
    __ZdlPv($740);
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
    label = 112;
   }
   break;
  }
 case 242:
  {
   $1097 = HEAP32[$10 >> 2] | 0;
   $1099 = $1097;
   if (!$1097) {
    $$0$i$i517 = $eh$lpad$body$i$i510$index14Z2D;
    $$01$i$i516 = $eh$lpad$body$i$i510$indexZ2D;
    label = 246;
   } else {
    $1100 = HEAP32[$385 >> 2] | 0;
    if (($1100 | 0) != ($1097 | 0)) HEAP32[$385 >> 2] = $1100 + (~(($1100 + -4 - $1099 | 0) >>> 2) << 2);
    __ZdlPv($1097);
    $$0$i$i517 = $eh$lpad$body$i$i510$index14Z2D;
    $$01$i$i516 = $eh$lpad$body$i$i510$indexZ2D;
    label = 246;
   }
   break;
  }
 case 277:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$0$i530 = $eh$lpad$body$i527$indexZ2D;
   $$01$i529 = $eh$lpad$body$i527$index31Z2D;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($$0$i530 | 0);
   break;
  }
 case 530:
  {
   $$7 = $eh$lpad$body788$indexZ2D;
   $$735 = $eh$lpad$body788$index41Z2D;
   label = 613;
   break;
  }
 case 580:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($bindings, $2115);
   $$7 = $lpad$phi2700$index;
   $$735 = $lpad$phi2700$index46;
   label = 613;
   break;
  }
 case 686:
  {
   $2400 = HEAP32[$elements45 >> 2] | 0;
   if (!$2400) {
    $$107 = $lpad$phi2706$index;
    $$107135 = $lpad$phi2706$index52;
    ___resumeException($$107 | 0);
   }
   $2403 = HEAP32[$220 >> 2] | 0;
   if (($2403 | 0) != ($2400 | 0)) HEAP32[$220 >> 2] = $2403 + (~(($2403 + -4 - $2400 | 0) >>> 2) << 2);
   __ZdlPv($2400);
   $$107 = $lpad$phi2706$index;
   $$107135 = $lpad$phi2706$index52;
   ___resumeException($$107 | 0);
   break;
  }
 case 942:
  {
   $$59 = $eh$lpad$body1114$indexZ2D;
   $$5987 = $eh$lpad$body1114$index87Z2D;
   label = 1492;
   break;
  }
 case 984:
  {
   $$45 = $eh$lpad$body1143$indexZ2D;
   $$4573 = $eh$lpad$body1143$index133Z2D;
   label = 1091;
   break;
  }
 case 1313:
  {
   $$50 = $lpad$phi2717$index;
   $$5078 = $lpad$phi2717$index140;
   label = 1344;
   break;
  }
 case 1780:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($169, HEAP32[$323 >> 2] | 0);
   $$86 = $$85;
   $$86114 = $$85113;
   label = 1781;
   break;
  }
 case 1930:
  {
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($181, HEAP32[$339 >> 2] | 0);
   $$94 = $$93;
   $$94122 = $$93121;
   label = 1931;
   break;
  }
 case 1952:
  {
   $$0$i2306 = $eh$lpad$body$i2303$index175Z2D;
   $$01$i2305 = $eh$lpad$body$i2303$indexZ2D;
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($346);
   ___resumeException($$01$i2305 | 0);
   break;
  }
 case 1957:
  {
   $$95 = $eh$lpad$body2330$indexZ2D;
   $$95123 = $eh$lpad$body2330$index181Z2D;
   label = 1976;
   break;
  }
 }
 if ((label | 0) == 112) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$372 >> 2] | 0);
  $eh$lpad$body$i$index8Z2D = $$0$i$i;
  $eh$lpad$body$i$indexZ2D = $$01$i$i;
  label = 119;
 } else if ((label | 0) == 246) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($9, HEAP32[$384 >> 2] | 0);
  $eh$lpad$body$i523$index20Z2D = $$0$i$i517;
  $eh$lpad$body$i523$indexZ2D = $$01$i$i516;
  label = 253;
 } else if ((label | 0) == 613) {
  $2208 = HEAP32[$args >> 2] | 0;
  if (!$2208) {
   $$107 = $$7;
   $$107135 = $$735;
   ___resumeException($$107 | 0);
  }
  $2211 = HEAP32[$209 >> 2] | 0;
  if (($2211 | 0) != ($2208 | 0)) HEAP32[$209 >> 2] = $2211 + (~(($2211 + -4 - $2208 | 0) >>> 2) << 2);
  __ZdlPv($2208);
  $$107 = $$7;
  $$107135 = $$735;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 1091) {
  $3683 = HEAP32[$elements75 >> 2] | 0;
  $3685 = $3683;
  if (!$3683) {
   $$59 = $$45;
   $$5987 = $$4573;
   label = 1492;
  } else {
   $3686 = HEAP32[$236 >> 2] | 0;
   if (($3686 | 0) != ($3683 | 0)) HEAP32[$236 >> 2] = $3686 + (~(($3686 + -4 - $3685 | 0) >>> 2) << 2);
   __ZdlPv($3683);
   $$59 = $$45;
   $$5987 = $$4573;
   label = 1492;
  }
 } else if ((label | 0) == 1344) {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($fields90, HEAP32[$289 >> 2] | 0);
  $$59 = $$50;
  $$5987 = $$5078;
  label = 1492;
 } else if ((label | 0) == 1781) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env130, HEAP32[$324 >> 2] | 0);
  $$107 = $$86;
  $$107135 = $$86114;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 1931) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env138, HEAP32[$340 >> 2] | 0);
  $$107 = $$94;
  $$107135 = $$94122;
  ___resumeException($$107 | 0);
 } else if ((label | 0) == 1976) {
  HEAP32[$ss142 >> 2] = 2892;
  HEAP32[$346 >> 2] = 2932;
  HEAP32[$356 >> 2] = 2912;
  HEAP32[$348 >> 2] = 2988;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($354);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($348);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($346);
  $$107 = $$95;
  $$107135 = $$95123;
  ___resumeException($$107 | 0);
 }
 if ((label | 0) == 119) {
  $763 = HEAP32[$4 >> 2] | 0;
  if (!$763) {
   $$0$i = $eh$lpad$body$i$index8Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
   $772 = HEAP32[$369 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $772);
   ___resumeException($$01$i | 0);
  }
  $766 = HEAP32[$375 >> 2] | 0;
  if (($766 | 0) != ($763 | 0)) HEAP32[$375 >> 2] = $766 + (~(($766 + -4 - $763 | 0) >>> 2) << 2);
  __ZdlPv($763);
  $$0$i = $eh$lpad$body$i$index8Z2D;
  $$01$i = $eh$lpad$body$i$indexZ2D;
  $772 = HEAP32[$369 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $772);
  ___resumeException($$01$i | 0);
 } else if ((label | 0) == 253) {
  $1120 = HEAP32[$12 >> 2] | 0;
  $1122 = $1120;
  if (!$1120) {
   $$0$i526 = $eh$lpad$body$i523$index20Z2D;
   $$01$i525 = $eh$lpad$body$i523$indexZ2D;
   label = 257;
  } else {
   $1123 = HEAP32[$387 >> 2] | 0;
   if (($1123 | 0) != ($1120 | 0)) HEAP32[$387 >> 2] = $1123 + (~(($1123 + -4 - $1122 | 0) >>> 2) << 2);
   __ZdlPv($1120);
   $$0$i526 = $eh$lpad$body$i523$index20Z2D;
   $$01$i525 = $eh$lpad$body$i523$indexZ2D;
   label = 257;
  }
 } else if ((label | 0) == 1492) {
  $4721 = HEAP32[$args68 >> 2] | 0;
  if (!$4721) {
   $$107 = $$59;
   $$107135 = $$5987;
   ___resumeException($$107 | 0);
  }
  $4724 = HEAP32[$231 >> 2] | 0;
  if (($4724 | 0) != ($4721 | 0)) HEAP32[$231 >> 2] = $4724 + (~(($4724 + -16 - $4721 | 0) >>> 4) << 4);
  __ZdlPv($4721);
  $$107 = $$59;
  $$107135 = $$5987;
  ___resumeException($$107 | 0);
 }
 if ((label | 0) == 257) {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($11, HEAP32[$380 >> 2] | 0);
  $eh$lpad$body$index26Z2D = $$0$i526;
  $eh$lpad$body$indexZ2D = $$01$i525;
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($env, HEAP32[$381 >> 2] | 0);
 $$107 = $eh$lpad$body$indexZ2D;
 $$107135 = $eh$lpad$body$index26Z2D;
 ___resumeException($$107 | 0);
}

function __ZN12_GLOBAL__N_16Parser5parseEij($this, $precedence, $obj_level) {
 $this = $this | 0;
 $precedence = $precedence | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i185 = 0, $$0$i217 = 0, $$0$i252 = 0, $$0$i304 = 0, $$0$i309 = 0, $$0$i418 = 0, $$0$i7$i = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i378 = 0, $$01$i184 = 0, $$01$i216 = 0, $$01$i251 = 0, $$01$i308 = 0, $$01432 = 0, $$02431 = 0, $$042 = 0, $$044 = 0, $$046 = 0, $$046$lpad$bodyZZ2D = 0, $$049 = 0, $$051 = 0, $$1 = 0, $$10 = 0, $$1019 = 0, $$11 = 0, $$110 = 0, $$1120 = 0, $$12 = 0, $$1221 = 0, $$1322443 = 0, $$13444 = 0, $$14 = 0, $$1423 = 0, $$147 = 0, $$15 = 0, $$1524 = 0, $$16 = 0, $$1625 = 0, $$1726447 = 0, $$17448 = 0, $$18 = 0, $$1827 = 0, $$19 = 0, $$1928 = 0, $$2 = 0, $$20 = 0, $$2029 = 0, $$21 = 0, $$211 = 0, $$2130 = 0, $$22 = 0, $$2231 = 0, $$23 = 0, $$2332 = 0, $$24 = 0, $$2433 = 0, $$25 = 0, $$2534 = 0, $$26 = 0, $$2635 = 0, $$27 = 0, $$2736 = 0, $$28 = 0, $$2837 = 0, $$29 = 0, $$2938 = 0, $$3 = 0, $$30 = 0, $$3039 = 0, $$31 = 0, $$312 = 0, $$3140 = 0, $$4 = 0, $$413 = 0, $$514435 = 0, $$5436 = 0, $$6 = 0, $$615 = 0, $$7 = 0, $$716 = 0, $$817439 = 0, $$8440 = 0, $$9 = 0, $$918 = 0, $$byval_copy = 0, $$lcssa = 0, $$lcssa1025 = 0, $$lcssa1067 = 0, $$lcssa1068 = 0, $$lcssa1069 = 0, $$lcssa1070 = 0, $$lcssa1073 = 0, $$lcssa1074 = 0, $$lcssa1075 = 0, $$lcssa1083 = 0, $$lcssa1088 = 0, $$lcssa1089 = 0, $$lcssa1090 = 0, $$lcssa808 = 0, $$pre$phi814Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1001 = 0, $1002 = 0, $1005 = 0, $1006 = 0, $1011 = 0, $1012 = 0, $1017 = 0, $1022 = 0, $1023 = 0, $1027 = 0, $1028 = 0, $1031 = 0, $1033 = 0, $1040 = 0, $1041 = 0, $1049 = 0, $105 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1055 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1129 = 0, $113 = 0, $1133 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1142 = 0, $1146 = 0, $1148 = 0, $1149 = 0, $1150 = 0, $1153 = 0, $1154 = 0, $1157 = 0, $1161 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1167 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1176 = 0, $1181 = 0, $1183 = 0, $1185 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1191 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1197 = 0, $1199 = 0, $12 = 0, $120 = 0, $1201 = 0, $1204 = 0, $1206 = 0, $1208 = 0, $1209 = 0, $1210 = 0, $1211 = 0, $1213 = 0, $1215 = 0, $1225 = 0, $1227 = 0, $1228 = 0, $1230 = 0, $1232 = 0, $1235 = 0, $1237 = 0, $1239 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1244 = 0, $1246 = 0, $1248 = 0, $125 = 0, $1250 = 0, $1252 = 0, $1253 = 0, $1255 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $1261 = 0, $1263 = 0, $1265 = 0, $1268 = 0, $1270 = 0, $1271 = 0, $1275 = 0, $1276 = 0, $1281 = 0, $1282 = 0, $1288 = 0, $1290 = 0, $1294 = 0, $13 = 0, $130 = 0, $1300 = 0, $1303 = 0, $1307 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1313 = 0, $1315 = 0, $1316 = 0, $1318 = 0, $1322 = 0, $1328 = 0, $1329 = 0, $1331 = 0, $1333 = 0, $1334 = 0, $1336 = 0, $1341 = 0, $1342 = 0, $1346 = 0, $135 = 0, $1351 = 0, $1352 = 0, $1356 = 0, $1357 = 0, $136 = 0, $1360 = 0, $1362 = 0, $1369 = 0, $1370 = 0, $1378 = 0, $1380 = 0, $1381 = 0, $1386 = 0, $1388 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1393 = 0, $1398 = 0, $1399 = 0, $14 = 0, $1403 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1413 = 0, $1415 = 0, $1416 = 0, $1418 = 0, $1419 = 0, $1421 = 0, $1426 = 0, $1427 = 0, $1431 = 0, $1436 = 0, $1437 = 0, $1441 = 0, $1442 = 0, $1445 = 0, $1447 = 0, $1454 = 0, $1455 = 0, $1463 = 0, $1465 = 0, $1466 = 0, $147 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1475 = 0, $1477 = 0, $1479 = 0, $148 = 0, $1482 = 0, $1486 = 0, $1488 = 0, $1489 = 0, $1490 = 0, $1491 = 0, $1493 = 0, $1496 = 0, $15 = 0, $1500 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1506 = 0, $1508 = 0, $1509 = 0, $1511 = 0, $1515 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1526 = 0, $1527 = 0, $1529 = 0, $1534 = 0, $1535 = 0, $1539 = 0, $1544 = 0, $1545 = 0, $1553 = 0, $1554 = 0, $1557 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1563 = 0, $1564 = 0, $1567 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1576 = 0, $1577 = 0, $158 = 0, $1583 = 0, $1584 = 0, $1586 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1595 = 0, $1597 = 0, $1598 = 0, $16 = 0, $160 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1608 = 0, $1609 = 0, $1615 = 0, $1617 = 0, $1618 = 0, $162 = 0, $1624 = 0, $1626 = 0, $1627 = 0, $1629 = 0, $1634 = 0, $1635 = 0, $1639 = 0, $164 = 0, $1644 = 0, $1645 = 0, $1649 = 0, $1650 = 0, $1651 = 0, $1654 = 0, $1656 = 0, $166 = 0, $1664 = 0, $1665 = 0, $1673 = 0, $1675 = 0, $1676 = 0, $1679 = 0, $168 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1689 = 0, $1690 = 0, $1692 = 0, $1697 = 0, $1698 = 0, $17 = 0, $170 = 0, $1700 = 0, $1702 = 0, $1703 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1711 = 0, $1713 = 0, $1720 = 0, $1721 = 0, $1729 = 0, $173 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1736 = 0, $1737 = 0, $1739 = 0, $1740 = 0, $1742 = 0, $1743 = 0, $1746 = 0, $1748 = 0, $175 = 0, $1755 = 0, $1756 = 0, $1764 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1774 = 0, $1775 = 0, $1777 = 0, $178 = 0, $1780 = 0, $1785 = 0, $1786 = 0, $179 = 0, $1790 = 0, $1795 = 0, $1796 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1806 = 0, $1811 = 0, $1812 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1825 = 0, $1827 = 0, $1828 = 0, $1834 = 0, $1838 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $1860 = 0, $1861 = 0, $1864 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1874 = 0, $1879 = 0, $1880 = 0, $1884 = 0, $1885 = 0, $1887 = 0, $1888 = 0, $1890 = 0, $1898 = 0, $1899 = 0, $19 = 0, $1907 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1914 = 0, $1915 = 0, $1918 = 0, $1920 = 0, $1927 = 0, $1928 = 0, $1936 = 0, $1938 = 0, $1939 = 0, $1940 = 0, $1942 = 0, $1944 = 0, $196 = 0, $197 = 0, $199 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $21 = 0, $210 = 0, $213 = 0, $215 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $223 = 0, $225 = 0, $227 = 0, $23 = 0, $230 = 0, $232 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $239 = 0, $24 = 0, $241 = 0, $242 = 0, $244 = 0, $248 = 0, $25 = 0, $253 = 0, $254 = 0, $256 = 0, $257 = 0, $258 = 0, $26 = 0, $261 = 0, $262 = 0, $267 = 0, $268 = 0, $27 = 0, $273 = 0, $278 = 0, $279 = 0, $28 = 0, $283 = 0, $284 = 0, $287 = 0, $289 = 0, $29 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $303 = 0, $305 = 0, $306 = 0, $307 = 0, $309 = 0, $31 = 0, $310 = 0, $313 = 0, $314 = 0, $319 = 0, $32 = 0, $320 = 0, $325 = 0, $33 = 0, $330 = 0, $331 = 0, $335 = 0, $336 = 0, $339 = 0, $34 = 0, $341 = 0, $349 = 0, $35 = 0, $350 = 0, $358 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $364 = 0, $366 = 0, $368 = 0, $37 = 0, $371 = 0, $373 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $38 = 0, $380 = 0, $382 = 0, $383 = 0, $385 = 0, $389 = 0, $39 = 0, $394 = 0, $396 = 0, $398 = 0, $4 = 0, $40 = 0, $401 = 0, $403 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $41 = 0, $410 = 0, $412 = 0, $413 = 0, $415 = 0, $419 = 0, $42 = 0, $426 = 0, $428 = 0, $43 = 0, $430 = 0, $434 = 0, $435 = 0, $437 = 0, $439 = 0, $44 = 0, $440 = 0, $442 = 0, $443 = 0, $444 = 0, $446 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $452 = 0, $453 = 0, $454 = 0, $457 = 0, $46 = 0, $462 = 0, $464 = 0, $466 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $472 = 0, $474 = 0, $475 = 0, $476 = 0, $478 = 0, $48 = 0, $480 = 0, $481 = 0, $484 = 0, $486 = 0, $487 = 0, $489 = 0, $49 = 0, $491 = 0, $492 = 0, $494 = 0, $496 = 0, $498 = 0, $5 = 0, $50 = 0, $500 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $51 = 0, $511 = 0, $516 = 0, $517 = 0, $52 = 0, $521 = 0, $526 = 0, $527 = 0, $53 = 0, $532 = 0, $537 = 0, $538 = 0, $54 = 0, $542 = 0, $548 = 0, $549 = 0, $55 = 0, $552 = 0, $554 = 0, $555 = 0, $559 = 0, $56 = 0, $560 = 0, $563 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $572 = 0, $573 = 0, $579 = 0, $58 = 0, $580 = 0, $582 = 0, $584 = 0, $585 = 0, $59 = 0, $591 = 0, $593 = 0, $594 = 0, $6 = 0, $60 = 0, $600 = 0, $602 = 0, $603 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $614 = 0, $620 = 0, $622 = 0, $623 = 0, $629 = 0, $63 = 0, $631 = 0, $632 = 0, $638 = 0, $639 = 0, $640 = 0, $643 = 0, $648 = 0, $650 = 0, $652 = 0, $654 = 0, $655 = 0, $656 = 0, $658 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $664 = 0, $666 = 0, $667 = 0, $669 = 0, $671 = 0, $673 = 0, $675 = 0, $676 = 0, $678 = 0, $68 = 0, $680 = 0, $682 = 0, $683 = 0, $684 = 0, $686 = 0, $688 = 0, $691 = 0, $693 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $7 = 0, $70 = 0, $700 = 0, $702 = 0, $703 = 0, $705 = 0, $709 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $722 = 0, $725 = 0, $729 = 0, $73 = 0, $731 = 0, $732 = 0, $733 = 0, $735 = 0, $737 = 0, $738 = 0, $74 = 0, $740 = 0, $744 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $755 = 0, $760 = 0, $762 = 0, $764 = 0, $766 = 0, $767 = 0, $768 = 0, $77 = 0, $770 = 0, $772 = 0, $773 = 0, $774 = 0, $776 = 0, $778 = 0, $779 = 0, $781 = 0, $783 = 0, $785 = 0, $787 = 0, $788 = 0, $79 = 0, $790 = 0, $792 = 0, $794 = 0, $796 = 0, $798 = 0, $799 = 0, $8 = 0, $800 = 0, $801 = 0, $804 = 0, $805 = 0, $809 = 0, $814 = 0, $815 = 0, $82 = 0, $820 = 0, $825 = 0, $826 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $835 = 0, $836 = 0, $837 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $847 = 0, $848 = 0, $852 = 0, $853 = 0, $855 = 0, $859 = 0, $86 = 0, $863 = 0, $868 = 0, $869 = 0, $87 = 0, $871 = 0, $874 = 0, $878 = 0, $879 = 0, $88 = 0, $881 = 0, $883 = 0, $884 = 0, $89 = 0, $892 = 0, $894 = 0, $895 = 0, $898 = 0, $899 = 0, $9 = 0, $901 = 0, $905 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $912 = 0, $917 = 0, $919 = 0, $921 = 0, $923 = 0, $924 = 0, $925 = 0, $927 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $933 = 0, $935 = 0, $94 = 0, $945 = 0, $947 = 0, $948 = 0, $950 = 0, $952 = 0, $954 = 0, $956 = 0, $957 = 0, $959 = 0, $96 = 0, $961 = 0, $963 = 0, $964 = 0, $966 = 0, $967 = 0, $969 = 0, $971 = 0, $974 = 0, $976 = 0, $978 = 0, $979 = 0, $980 = 0, $981 = 0, $983 = 0, $985 = 0, $986 = 0, $988 = 0, $992 = 0, $997 = 0, $998 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa1023 = 0, $__nd$0$i$i$lcssa1024 = 0, $__parent$i = 0, $__r$0$i = 0, $args = 0, $begin = 0, $binds = 0, $branch_false$0 = 0, $delim = 0, $eh$lpad$body$i$index50Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i182$index62Z2D = 0, $eh$lpad$body$i182$indexZ2D = 0, $eh$lpad$body$i214$index67Z2D = 0, $eh$lpad$body$i214$indexZ2D = 0, $eh$lpad$body$i249$index84Z2D = 0, $eh$lpad$body$i249$indexZ2D = 0, $eh$lpad$body$i306$index94Z2D = 0, $eh$lpad$body$i306$indexZ2D = 0, $eh$lpad$body$index158Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body111$index40Z2D = 0, $eh$lpad$body111$indexZ2D = 0, $eh$lpad$body117$index45Z2D = 0, $eh$lpad$body117$indexZ2D = 0, $eh$lpad$body141$index56Z2D = 0, $eh$lpad$body141$indexZ2D = 0, $eh$lpad$body211$index73Z2D = 0, $eh$lpad$body211$indexZ2D = 0, $eh$lpad$body246$index79Z2D = 0, $eh$lpad$body246$indexZ2D = 0, $eh$lpad$body280$index89Z2D = 0, $eh$lpad$body280$indexZ2D = 0, $eh$lpad$body291$index136Z2D = 0, $eh$lpad$body291$indexZ2D = 0, $eh$lpad$body317$index99Z2D = 0, $eh$lpad$body317$indexZ2D = 0, $eh$lpad$body323$index104Z2D = 0, $eh$lpad$body323$indexZ2D = 0, $eh$lpad$body329$index109Z2D = 0, $eh$lpad$body329$indexZ2D = 0, $eh$lpad$body343$index148Z2D = 0, $eh$lpad$body343$indexZ2D = 0, $eh$lpad$body348$index114Z2D = 0, $eh$lpad$body348$indexZ2D = 0, $eh$lpad$body356$index119Z2D = 0, $eh$lpad$body356$indexZ2D = 0, $eh$lpad$body364$index125Z2D = 0, $eh$lpad$body364$indexZ2D = 0, $eh$lpad$body412$index131Z2D = 0, $eh$lpad$body412$indexZ2D = 0, $eh$lpad$body422$index142Z2D = 0, $eh$lpad$body422$indexZ2D = 0, $eh$lpad$body65$index153Z2D = 0, $eh$lpad$body65$indexZ2D = 0, $eh$lpad$body74$index16Z2D = 0, $eh$lpad$body74$indexZ2D = 0, $eh$lpad$body80$index35Z2D = 0, $eh$lpad$body80$indexZ2D = 0, $end = 0, $end10 = 0, $end9 = 0, $field = 0, $l = 0, $lhs$0 = 0, $lhs$1 = 0, $next = 0, $obj = 0, $op = 0, $op7 = 0, $params = 0, $params_asts = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $ss4 = 0, $ss6 = 0, $tailstrict$0$off0 = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i121 = 0, $this$idx$val$idx$val$i129 = 0, $this$idx$val$idx$val$i200 = 0, $this$idx$val$idx$val$i208 = 0, $this$idx$val$idx$val$i268 = 0, $this$idx$val$idx$val$i335 = 0, $this$idx$val$idx$val$i369 = 0, $this$idx$val$idx$val$i84 = 0, $this$idx$val$idx$val$i96 = 0, $this$idx53$val$idx$val = 0, $this$idx54$val$idx$val = 0, $this$idx55$val$idx$val = 0, $this$idx56$val$idx$val = 0, $this$idx57$val$idx$val = 0, $this$idx58$val$idx$val = 0, $this$idx59$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2608 | 0;
 $$byval_copy = sp + 2560 | 0;
 $0 = sp + 2256 | 0;
 $1 = sp + 44 | 0;
 $2 = sp + 48 | 0;
 $3 = sp + 52 | 0;
 $__parent$i = sp + 916 | 0;
 $4 = sp + 988 | 0;
 $5 = sp + 2544 | 0;
 $6 = sp + 116 | 0;
 $7 = sp + 128 | 0;
 $8 = sp + 132 | 0;
 $9 = sp + 144 | 0;
 $10 = sp + 156 | 0;
 $11 = sp + 168 | 0;
 $12 = sp + 172 | 0;
 $13 = sp + 176 | 0;
 $14 = sp + 180 | 0;
 $15 = sp + 184 | 0;
 $begin = sp + 188 | 0;
 $16 = sp + 232 | 0;
 $17 = sp + 276 | 0;
 $18 = sp + 304 | 0;
 $19 = sp + 348 | 0;
 $20 = sp + 392 | 0;
 $21 = sp + 436 | 0;
 $22 = sp + 480 | 0;
 $23 = sp + 508 | 0;
 $24 = sp + 536 | 0;
 $next = sp + 580 | 0;
 $params_asts = sp + 624 | 0;
 $25 = sp + 636 | 0;
 $26 = sp + 680 | 0;
 $params = sp + 692 | 0;
 $ss = sp + 704 | 0;
 $27 = sp + 848 | 0;
 $28 = sp + 860 | 0;
 $29 = sp + 2260 | 0;
 $ss1 = sp + 2288 | 0;
 $30 = sp + 2460 | 0;
 $31 = sp + 2500 | 0;
 $binds = sp + 2548 | 0;
 $delim = sp + 2564 | 0;
 $ss2 = sp + 1e3 | 0;
 $32 = sp + 1144 | 0;
 $33 = sp + 1156 | 0;
 $34 = sp + 1184 | 0;
 $ss4 = sp + 1200 | 0;
 $35 = sp + 1344 | 0;
 $op = sp + 1356 | 0;
 $36 = sp + 1400 | 0;
 $37 = sp + 1428 | 0;
 $38 = sp + 1472 | 0;
 $39 = sp + 1516 | 0;
 $ss6 = sp + 1560 | 0;
 $40 = sp + 1704 | 0;
 $41 = sp + 1748 | 0;
 $42 = sp + 1792 | 0;
 $op7 = sp + 1804 | 0;
 $end = sp + 1848 | 0;
 $43 = sp + 1892 | 0;
 $field = sp + 1920 | 0;
 $44 = sp + 1964 | 0;
 $45 = sp + 1992 | 0;
 $46 = sp + 2004 | 0;
 $args = sp + 2032 | 0;
 $end9 = sp + 2044 | 0;
 $47 = sp + 2088 | 0;
 $48 = sp + 2100 | 0;
 $49 = sp + 2144 | 0;
 $50 = sp + 2188 | 0;
 $51 = sp + 2216 | 0;
 $obj = sp + 84 | 0;
 $end10 = sp;
 $52 = sp + 56 | 0;
 $l = sp + 2228 | 0;
 $53 = sp + 888 | 0;
 $54 = sp + 2272 | 0;
 $55 = sp + 920 | 0;
 $56 = sp + 2432 | 0;
 $57 = sp + 88 | 0;
 $58 = sp + 948 | 0;
 $59 = sp + 2472 | 0;
 $60 = sp + 960 | 0;
 $this$idx59$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $61 = $this$idx59$val$idx$val + 8 | 0;
 HEAP32[$begin >> 2] = HEAP32[$61 >> 2];
 $63 = $begin + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($63, $this$idx59$val$idx$val + 12 | 0);
 HEAP32[$begin >> 2] = HEAP32[$61 >> 2];
 $66 = $begin + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $66 | 0, $this$idx59$val$idx$val + 24 | 0);
 $68 = __THREW__;
 __THREW__ = 0;
 if ($68 & 1) {
  $70 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
  ___resumeException($70 | 0);
 }
 $72 = $begin + 28 | 0;
 $73 = $this$idx59$val$idx$val + 36 | 0;
 HEAP32[$72 >> 2] = HEAP32[$73 >> 2];
 HEAP32[$72 + 4 >> 2] = HEAP32[$73 + 4 >> 2];
 HEAP32[$72 + 8 >> 2] = HEAP32[$73 + 8 >> 2];
 HEAP32[$72 + 12 >> 2] = HEAP32[$73 + 12 >> 2];
 $74 = HEAP32[$61 >> 2] | 0;
 HEAP32[$begin >> 2] = $74;
 L4 : do switch ($74 | 0) {
 case 16:
  {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $75 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$16 >> 2] = HEAP32[$75 >> 2];
   $77 = $16 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $77 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $79 = __THREW__;
   __THREW__ = 0;
   if ($79 & 1) label = 17; else {
    HEAP32[$16 >> 2] = HEAP32[$75 >> 2];
    $82 = $16 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $82 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $84 = __THREW__;
    __THREW__ = 0;
    if ($84 & 1) {
     $86 = ___cxa_find_matching_catch() | 0;
     $87 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
     $eh$lpad$body74$index16Z2D = $87;
     $eh$lpad$body74$indexZ2D = $86;
     break L4;
    }
    $88 = $16 + 28 | 0;
    $89 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$88 >> 2] = HEAP32[$89 >> 2];
    HEAP32[$88 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
    HEAP32[$88 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
    HEAP32[$88 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
    HEAP32[$16 >> 2] = HEAP32[$75 >> 2];
    $91 = HEAP32[$this >> 2] | 0;
    $93 = HEAP32[$91 + 4 >> 2] | 0;
    $94 = $93 + 4 | 0;
    $96 = HEAP32[$93 >> 2] | 0;
    HEAP32[$96 + 4 >> 2] = HEAP32[$94 >> 2];
    HEAP32[HEAP32[$94 >> 2] >> 2] = $96;
    $100 = $91 + 8 | 0;
    HEAP32[$100 >> 2] = (HEAP32[$100 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($93 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($93 + 12 | 0);
    __ZdlPv($93);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
    __THREW__ = 0;
    $105 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
    $106 = __THREW__;
    __THREW__ = 0;
    if ($106 & 1) label = 17; else {
     $109 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $17 | 0, $66 | 0);
     $110 = __THREW__;
     __THREW__ = 0;
     if ($110 & 1) label = 17; else {
      $113 = $17 + 12 | 0;
      $114 = $72;
      $119 = HEAP32[$114 + 4 >> 2] | 0;
      $120 = $113;
      HEAP32[$120 >> 2] = HEAP32[$114 >> 2];
      HEAP32[$120 + 4 >> 2] = $119;
      $125 = $105 + 24 | 0;
      $130 = HEAP32[$125 + 4 >> 2] | 0;
      $131 = $17 + 20 | 0;
      HEAP32[$131 >> 2] = HEAP32[$125 >> 2];
      HEAP32[$131 + 4 >> 2] = $130;
      __THREW__ = 0;
      $135 = invoke_ii(67, 52) | 0;
      $136 = __THREW__;
      __THREW__ = 0;
      do if ($136 & 1) label = 19; else {
       HEAP32[$135 >> 2] = 3192;
       __THREW__ = 0;
       invoke_vii(40, $135 + 4 | 0, $17 | 0);
       $139 = __THREW__;
       __THREW__ = 0;
       if ($139 & 1) {
        $158 = ___cxa_find_matching_catch() | 0;
        $159 = tempRet0;
        __ZdlPv($135);
        $eh$lpad$body80$index35Z2D = $159;
        $eh$lpad$body80$indexZ2D = $158;
        break;
       }
       $141 = $135 + 16 | 0;
       HEAP32[$141 >> 2] = HEAP32[$113 >> 2];
       HEAP32[$141 + 4 >> 2] = HEAP32[$113 + 4 >> 2];
       HEAP32[$141 + 8 >> 2] = HEAP32[$113 + 8 >> 2];
       HEAP32[$141 + 12 >> 2] = HEAP32[$113 + 12 >> 2];
       HEAP32[$135 + 32 >> 2] = 5;
       HEAP32[$135 + 36 >> 2] = 0;
       HEAP32[$135 + 40 >> 2] = 0;
       HEAP32[$135 + 44 >> 2] = 0;
       HEAP32[$135 >> 2] = 3292;
       HEAP32[$135 + 48 >> 2] = $105;
       HEAP32[$13 >> 2] = $135;
       $147 = $109 + 16 | 0;
       $148 = HEAP32[$147 >> 2] | 0;
       if ($148 >>> 0 < (HEAP32[$109 + 20 >> 2] | 0) >>> 0) {
        HEAP32[$148 >> 2] = $135;
        HEAP32[$147 >> 2] = (HEAP32[$147 >> 2] | 0) + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(50, $109 + 12 | 0, $13 | 0);
        $156 = __THREW__;
        __THREW__ = 0;
        if ($156 & 1) {
         label = 19;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
       $$0 = $135;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 19) {
       $164 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body80$index35Z2D = tempRet0;
       $eh$lpad$body80$indexZ2D = $164;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      $$31 = $eh$lpad$body80$indexZ2D;
      $$3140 = $eh$lpad$body80$index35Z2D;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
      ___resumeException($$31 | 0);
     }
    }
   }
   break;
  }
 case 20:
  {
   $this$idx$val$idx$val$i84 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $166 = $this$idx$val$idx$val$i84 + 8 | 0;
   HEAP32[$18 >> 2] = HEAP32[$166 >> 2];
   $168 = $18 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $168 | 0, $this$idx$val$idx$val$i84 + 12 | 0);
   $170 = __THREW__;
   __THREW__ = 0;
   if ($170 & 1) label = 17; else {
    HEAP32[$18 >> 2] = HEAP32[$166 >> 2];
    $173 = $18 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $173 | 0, $this$idx$val$idx$val$i84 + 24 | 0);
    $175 = __THREW__;
    __THREW__ = 0;
    if ($175 & 1) {
     $177 = ___cxa_find_matching_catch() | 0;
     $178 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($168);
     $eh$lpad$body74$index16Z2D = $178;
     $eh$lpad$body74$indexZ2D = $177;
     break L4;
    }
    $179 = $18 + 28 | 0;
    $180 = $this$idx$val$idx$val$i84 + 36 | 0;
    HEAP32[$179 >> 2] = HEAP32[$180 >> 2];
    HEAP32[$179 + 4 >> 2] = HEAP32[$180 + 4 >> 2];
    HEAP32[$179 + 8 >> 2] = HEAP32[$180 + 8 >> 2];
    HEAP32[$179 + 12 >> 2] = HEAP32[$180 + 12 >> 2];
    HEAP32[$18 >> 2] = HEAP32[$166 >> 2];
    $182 = HEAP32[$this >> 2] | 0;
    $184 = HEAP32[$182 + 4 >> 2] | 0;
    $185 = $184 + 4 | 0;
    $187 = HEAP32[$184 >> 2] | 0;
    HEAP32[$187 + 4 >> 2] = HEAP32[$185 >> 2];
    HEAP32[HEAP32[$185 >> 2] >> 2] = $187;
    $191 = $182 + 8 | 0;
    HEAP32[$191 >> 2] = (HEAP32[$191 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($184 + 12 | 0);
    __ZdlPv($184);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($173);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($168);
    __THREW__ = 0;
    $196 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
    $197 = __THREW__;
    __THREW__ = 0;
    if ($197 & 1) label = 17; else {
     __THREW__ = 0;
     invoke_viiii(12, $19 | 0, $this | 0, 27, 0);
     $199 = __THREW__;
     __THREW__ = 0;
     if ($199 & 1) label = 17; else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19 + 16 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19 + 4 | 0);
      __THREW__ = 0;
      $203 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
      $204 = __THREW__;
      __THREW__ = 0;
      if ($204 & 1) label = 17; else {
       $this$idx58$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $206 = $this$idx58$val$idx$val + 8 | 0;
       HEAP32[$20 >> 2] = HEAP32[$206 >> 2];
       $208 = $20 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $208 | 0, $this$idx58$val$idx$val + 12 | 0);
       $210 = __THREW__;
       __THREW__ = 0;
       if ($210 & 1) label = 17; else {
        HEAP32[$20 >> 2] = HEAP32[$206 >> 2];
        $213 = $20 + 16 | 0;
        __THREW__ = 0;
        invoke_vii(40, $213 | 0, $this$idx58$val$idx$val + 24 | 0);
        $215 = __THREW__;
        __THREW__ = 0;
        if ($215 & 1) {
         $217 = ___cxa_find_matching_catch() | 0;
         $218 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($208);
         $eh$lpad$body74$index16Z2D = $218;
         $eh$lpad$body74$indexZ2D = $217;
         break L4;
        }
        $219 = $20 + 28 | 0;
        $220 = $this$idx58$val$idx$val + 36 | 0;
        HEAP32[$219 >> 2] = HEAP32[$220 >> 2];
        HEAP32[$219 + 4 >> 2] = HEAP32[$220 + 4 >> 2];
        HEAP32[$219 + 8 >> 2] = HEAP32[$220 + 8 >> 2];
        HEAP32[$219 + 12 >> 2] = HEAP32[$220 + 12 >> 2];
        $221 = HEAP32[$206 >> 2] | 0;
        HEAP32[$20 >> 2] = $221;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($213);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($208);
        L39 : do if (($221 | 0) == 15) {
         $this$idx$val$idx$val$i96 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $223 = $this$idx$val$idx$val$i96 + 8 | 0;
         HEAP32[$21 >> 2] = HEAP32[$223 >> 2];
         $225 = $21 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $225 | 0, $this$idx$val$idx$val$i96 + 12 | 0);
         $227 = __THREW__;
         __THREW__ = 0;
         if ($227 & 1) {
          label = 17;
          break L4;
         }
         HEAP32[$21 >> 2] = HEAP32[$223 >> 2];
         $230 = $21 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $230 | 0, $this$idx$val$idx$val$i96 + 24 | 0);
         $232 = __THREW__;
         __THREW__ = 0;
         if ($232 & 1) {
          $234 = ___cxa_find_matching_catch() | 0;
          $235 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
          $eh$lpad$body74$index16Z2D = $235;
          $eh$lpad$body74$indexZ2D = $234;
          break L4;
         }
         $236 = $21 + 28 | 0;
         $237 = $this$idx$val$idx$val$i96 + 36 | 0;
         HEAP32[$236 >> 2] = HEAP32[$237 >> 2];
         HEAP32[$236 + 4 >> 2] = HEAP32[$237 + 4 >> 2];
         HEAP32[$236 + 8 >> 2] = HEAP32[$237 + 8 >> 2];
         HEAP32[$236 + 12 >> 2] = HEAP32[$237 + 12 >> 2];
         HEAP32[$21 >> 2] = HEAP32[$223 >> 2];
         $239 = HEAP32[$this >> 2] | 0;
         $241 = HEAP32[$239 + 4 >> 2] | 0;
         $242 = $241 + 4 | 0;
         $244 = HEAP32[$241 >> 2] | 0;
         HEAP32[$244 + 4 >> 2] = HEAP32[$242 >> 2];
         HEAP32[HEAP32[$242 >> 2] >> 2] = $244;
         $248 = $239 + 8 | 0;
         HEAP32[$248 >> 2] = (HEAP32[$248 >> 2] | 0) + -1;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($241 + 24 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($241 + 12 | 0);
         __ZdlPv($241);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($230);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
         __THREW__ = 0;
         $253 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
         $254 = __THREW__;
         __THREW__ = 0;
         if ($254 & 1) {
          label = 17;
          break L4;
         }
         $$pre$phi814Z2D = $this + 4 | 0;
         $branch_false$0 = $253;
        } else {
         $256 = $this + 4 | 0;
         $257 = HEAP32[$256 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $22 | 0, $66 | 0);
         $258 = __THREW__;
         __THREW__ = 0;
         if ($258 & 1) {
          label = 17;
          break L4;
         }
         $261 = $22 + 12 | 0;
         $262 = $72;
         $267 = HEAP32[$262 + 4 >> 2] | 0;
         $268 = $261;
         HEAP32[$268 >> 2] = HEAP32[$262 >> 2];
         HEAP32[$268 + 4 >> 2] = $267;
         $273 = $203 + 24 | 0;
         $278 = HEAP32[$273 + 4 >> 2] | 0;
         $279 = $22 + 20 | 0;
         HEAP32[$279 >> 2] = HEAP32[$273 >> 2];
         HEAP32[$279 + 4 >> 2] = $278;
         __THREW__ = 0;
         $283 = invoke_ii(67, 48) | 0;
         $284 = __THREW__;
         __THREW__ = 0;
         do if ($284 & 1) label = 44; else {
          HEAP32[$283 >> 2] = 3192;
          __THREW__ = 0;
          invoke_vii(40, $283 + 4 | 0, $22 | 0);
          $287 = __THREW__;
          __THREW__ = 0;
          if ($287 & 1) {
           $305 = ___cxa_find_matching_catch() | 0;
           $306 = tempRet0;
           __ZdlPv($283);
           $eh$lpad$body111$index40Z2D = $306;
           $eh$lpad$body111$indexZ2D = $305;
           break;
          }
          $289 = $283 + 16 | 0;
          HEAP32[$289 >> 2] = HEAP32[$261 >> 2];
          HEAP32[$289 + 4 >> 2] = HEAP32[$261 + 4 >> 2];
          HEAP32[$289 + 8 >> 2] = HEAP32[$261 + 8 >> 2];
          HEAP32[$289 + 12 >> 2] = HEAP32[$261 + 12 >> 2];
          HEAP32[$283 + 32 >> 2] = 12;
          HEAP32[$283 + 36 >> 2] = 0;
          HEAP32[$283 + 40 >> 2] = 0;
          HEAP32[$283 + 44 >> 2] = 0;
          HEAP32[$283 >> 2] = 3308;
          HEAP32[$12 >> 2] = $283;
          $294 = $257 + 16 | 0;
          $295 = HEAP32[$294 >> 2] | 0;
          if ($295 >>> 0 < (HEAP32[$257 + 20 >> 2] | 0) >>> 0) {
           HEAP32[$295 >> 2] = $283;
           HEAP32[$294 >> 2] = (HEAP32[$294 >> 2] | 0) + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(50, $257 + 12 | 0, $12 | 0);
           $303 = __THREW__;
           __THREW__ = 0;
           if ($303 & 1) {
            label = 44;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
          $$pre$phi814Z2D = $256;
          $branch_false$0 = $283;
          break L39;
         } while (0);
         if ((label | 0) == 44) {
          $307 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body111$index40Z2D = tempRet0;
          $eh$lpad$body111$indexZ2D = $307;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
         $$31 = $eh$lpad$body111$indexZ2D;
         $$3140 = $eh$lpad$body111$index40Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
         ___resumeException($$31 | 0);
        } while (0);
        $309 = HEAP32[$$pre$phi814Z2D >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(40, $23 | 0, $66 | 0);
        $310 = __THREW__;
        __THREW__ = 0;
        if ($310 & 1) label = 17; else {
         $313 = $23 + 12 | 0;
         $314 = $72;
         $319 = HEAP32[$314 + 4 >> 2] | 0;
         $320 = $313;
         HEAP32[$320 >> 2] = HEAP32[$314 >> 2];
         HEAP32[$320 + 4 >> 2] = $319;
         $325 = $branch_false$0 + 24 | 0;
         $330 = HEAP32[$325 + 4 >> 2] | 0;
         $331 = $23 + 20 | 0;
         HEAP32[$331 >> 2] = HEAP32[$325 >> 2];
         HEAP32[$331 + 4 >> 2] = $330;
         __THREW__ = 0;
         $335 = invoke_ii(67, 60) | 0;
         $336 = __THREW__;
         __THREW__ = 0;
         do if ($336 & 1) label = 54; else {
          HEAP32[$335 >> 2] = 3192;
          __THREW__ = 0;
          invoke_vii(40, $335 + 4 | 0, $23 | 0);
          $339 = __THREW__;
          __THREW__ = 0;
          if ($339 & 1) {
           $360 = ___cxa_find_matching_catch() | 0;
           $361 = tempRet0;
           __ZdlPv($335);
           $eh$lpad$body117$index45Z2D = $361;
           $eh$lpad$body117$indexZ2D = $360;
           break;
          }
          $341 = $335 + 16 | 0;
          HEAP32[$341 >> 2] = HEAP32[$313 >> 2];
          HEAP32[$341 + 4 >> 2] = HEAP32[$313 + 4 >> 2];
          HEAP32[$341 + 8 >> 2] = HEAP32[$313 + 8 >> 2];
          HEAP32[$341 + 12 >> 2] = HEAP32[$313 + 12 >> 2];
          HEAP32[$335 + 32 >> 2] = 4;
          HEAP32[$335 + 36 >> 2] = 0;
          HEAP32[$335 + 40 >> 2] = 0;
          HEAP32[$335 + 44 >> 2] = 0;
          HEAP32[$335 >> 2] = 3324;
          HEAP32[$335 + 48 >> 2] = $196;
          HEAP32[$335 + 52 >> 2] = $203;
          HEAP32[$335 + 56 >> 2] = $branch_false$0;
          HEAP32[$11 >> 2] = $335;
          $349 = $309 + 16 | 0;
          $350 = HEAP32[$349 >> 2] | 0;
          if ($350 >>> 0 < (HEAP32[$309 + 20 >> 2] | 0) >>> 0) {
           HEAP32[$350 >> 2] = $335;
           HEAP32[$349 >> 2] = (HEAP32[$349 >> 2] | 0) + 4;
          } else {
           __THREW__ = 0;
           invoke_vii(50, $309 + 12 | 0, $11 | 0);
           $358 = __THREW__;
           __THREW__ = 0;
           if ($358 & 1) {
            label = 54;
            break;
           }
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
          $$0 = $335;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
          STACKTOP = sp;
          return $$0 | 0;
         } while (0);
         if ((label | 0) == 54) {
          $362 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body117$index45Z2D = tempRet0;
          $eh$lpad$body117$indexZ2D = $362;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
         $$31 = $eh$lpad$body117$indexZ2D;
         $$3140 = $eh$lpad$body117$index45Z2D;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
         ___resumeException($$31 | 0);
        }
       }
      }
     }
    }
   }
   break;
  }
 case 19:
  {
   $this$idx$val$idx$val$i121 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $364 = $this$idx$val$idx$val$i121 + 8 | 0;
   HEAP32[$24 >> 2] = HEAP32[$364 >> 2];
   $366 = $24 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $366 | 0, $this$idx$val$idx$val$i121 + 12 | 0);
   $368 = __THREW__;
   __THREW__ = 0;
   if ($368 & 1) label = 17; else {
    HEAP32[$24 >> 2] = HEAP32[$364 >> 2];
    $371 = $24 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $371 | 0, $this$idx$val$idx$val$i121 + 24 | 0);
    $373 = __THREW__;
    __THREW__ = 0;
    if ($373 & 1) {
     $375 = ___cxa_find_matching_catch() | 0;
     $376 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($366);
     $eh$lpad$body74$index16Z2D = $376;
     $eh$lpad$body74$indexZ2D = $375;
     break L4;
    }
    $377 = $24 + 28 | 0;
    $378 = $this$idx$val$idx$val$i121 + 36 | 0;
    HEAP32[$377 >> 2] = HEAP32[$378 >> 2];
    HEAP32[$377 + 4 >> 2] = HEAP32[$378 + 4 >> 2];
    HEAP32[$377 + 8 >> 2] = HEAP32[$378 + 8 >> 2];
    HEAP32[$377 + 12 >> 2] = HEAP32[$378 + 12 >> 2];
    HEAP32[$24 >> 2] = HEAP32[$364 >> 2];
    $380 = HEAP32[$this >> 2] | 0;
    $382 = HEAP32[$380 + 4 >> 2] | 0;
    $383 = $382 + 4 | 0;
    $385 = HEAP32[$382 >> 2] | 0;
    HEAP32[$385 + 4 >> 2] = HEAP32[$383 >> 2];
    HEAP32[HEAP32[$383 >> 2] >> 2] = $385;
    $389 = $380 + 8 | 0;
    HEAP32[$389 >> 2] = (HEAP32[$389 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($382 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($382 + 12 | 0);
    __ZdlPv($382);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($371);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($366);
    $this$idx$val$idx$val$i129 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $394 = $this$idx$val$idx$val$i129 + 8 | 0;
    HEAP32[$next >> 2] = HEAP32[$394 >> 2];
    $396 = $next + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $396 | 0, $this$idx$val$idx$val$i129 + 12 | 0);
    $398 = __THREW__;
    __THREW__ = 0;
    if ($398 & 1) label = 17; else {
     HEAP32[$next >> 2] = HEAP32[$394 >> 2];
     $401 = $next + 16 | 0;
     __THREW__ = 0;
     invoke_vii(40, $401 | 0, $this$idx$val$idx$val$i129 + 24 | 0);
     $403 = __THREW__;
     __THREW__ = 0;
     if ($403 & 1) {
      $405 = ___cxa_find_matching_catch() | 0;
      $406 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($396);
      $eh$lpad$body74$index16Z2D = $406;
      $eh$lpad$body74$indexZ2D = $405;
      break L4;
     }
     $407 = $next + 28 | 0;
     $408 = $this$idx$val$idx$val$i129 + 36 | 0;
     HEAP32[$407 >> 2] = HEAP32[$408 >> 2];
     HEAP32[$407 + 4 >> 2] = HEAP32[$408 + 4 >> 2];
     HEAP32[$407 + 8 >> 2] = HEAP32[$408 + 8 >> 2];
     HEAP32[$407 + 12 >> 2] = HEAP32[$408 + 12 >> 2];
     HEAP32[$next >> 2] = HEAP32[$394 >> 2];
     $410 = HEAP32[$this >> 2] | 0;
     $412 = HEAP32[$410 + 4 >> 2] | 0;
     $413 = $412 + 4 | 0;
     $415 = HEAP32[$412 >> 2] | 0;
     HEAP32[$415 + 4 >> 2] = HEAP32[$413 >> 2];
     HEAP32[HEAP32[$413 >> 2] >> 2] = $415;
     $419 = $410 + 8 | 0;
     HEAP32[$419 >> 2] = (HEAP32[$419 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($412 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($412 + 12 | 0);
     __ZdlPv($412);
     L86 : do if ((HEAP32[$next >> 2] | 0) == 8) {
      HEAP32[$params_asts >> 2] = 0;
      $426 = $params_asts + 4 | 0;
      HEAP32[$426 >> 2] = 0;
      HEAP32[$params_asts + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_viii(3, $26 | 0, 50943, 18);
      $428 = __THREW__;
      __THREW__ = 0;
      do if ($428 & 1) label = 69; else {
       __THREW__ = 0;
       invoke_viiiii(4, $25 | 0, $this | 0, $params_asts | 0, $26 | 0, $obj_level | 0);
       $430 = __THREW__;
       __THREW__ = 0;
       if ($430 & 1) {
        $448 = ___cxa_find_matching_catch() | 0;
        $449 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        $$4 = $448;
        $$413 = $449;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25 + 16 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25 + 4 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
       __THREW__ = 0;
       $434 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
       $435 = __THREW__;
       __THREW__ = 0;
       if ($435 & 1) label = 69; else {
        HEAP32[$params >> 2] = 0;
        $437 = $params + 4 | 0;
        HEAP32[$437 >> 2] = 0;
        HEAP32[$params + 8 >> 2] = 0;
        $439 = HEAP32[$params_asts >> 2] | 0;
        $440 = HEAP32[$426 >> 2] | 0;
        L94 : do if (($439 | 0) == ($440 | 0)) label = 99; else {
         $442 = $params + 8 | 0;
         $444 = $439;
         while (1) {
          $443 = HEAP32[$444 >> 2] | 0;
          if (!$443) {
           $$lcssa808 = 0;
           break;
          }
          $450 = ___dynamic_cast($443, 48, 376, 0) | 0;
          if (!$450) {
           $$lcssa808 = $443;
           break;
          }
          $504 = $450 + 48 | 0;
          $505 = HEAP32[$437 >> 2] | 0;
          if (($505 | 0) == (HEAP32[$442 >> 2] | 0)) {
           __THREW__ = 0;
           invoke_vii(54, $params | 0, $504 | 0);
           $511 = __THREW__;
           __THREW__ = 0;
           if ($511 & 1) {
            label = 87;
            break;
           }
          } else {
           HEAP32[$505 >> 2] = HEAP32[$504 >> 2];
           HEAP32[$437 >> 2] = (HEAP32[$437 >> 2] | 0) + 4;
          }
          $444 = $444 + 4 | 0;
          if (($444 | 0) == ($440 | 0)) {
           label = 99;
           break L94;
          }
         }
         if ((label | 0) == 87) {
          $494 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body141$index56Z2D = tempRet0;
          $eh$lpad$body141$indexZ2D = $494;
          label = 89;
          break;
         }
         $452 = $ss + 64 | 0;
         $453 = $ss + 8 | 0;
         HEAP32[$453 >> 2] = 2912;
         $454 = $ss + 12 | 0;
         HEAP32[$ss >> 2] = 2952;
         HEAP32[$452 >> 2] = 2972;
         HEAP32[$ss + 4 >> 2] = 0;
         __THREW__ = 0;
         invoke_vii(41, $ss + 64 | 0, $454 | 0);
         $457 = __THREW__;
         __THREW__ = 0;
         if ($457 & 1) {
          $470 = ___cxa_find_matching_catch() | 0;
          $$0$i = tempRet0;
          $$01$i = $470;
         } else {
          HEAP32[$ss + 136 >> 2] = 0;
          HEAP32[$ss + 140 >> 2] = -1;
          HEAP32[$ss >> 2] = 2892;
          HEAP32[$ss + 64 >> 2] = 2932;
          HEAP32[$453 >> 2] = 2912;
          __THREW__ = 0;
          invoke_vi(173, $454 | 0);
          $462 = __THREW__;
          __THREW__ = 0;
          do if ($462 & 1) {
           $472 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body$i$index50Z2D = tempRet0;
           $eh$lpad$body$i$indexZ2D = $472;
          } else {
           HEAP32[$454 >> 2] = 2988;
           $464 = $ss + 44 | 0;
           HEAP32[$464 >> 2] = 0;
           HEAP32[$464 + 4 >> 2] = 0;
           HEAP32[$464 + 8 >> 2] = 0;
           HEAP32[$464 + 12 >> 2] = 0;
           HEAP32[$ss + 60 >> 2] = 24;
           HEAP32[$10 >> 2] = 0;
           HEAP32[$10 + 4 >> 2] = 0;
           HEAP32[$10 + 8 >> 2] = 0;
           __THREW__ = 0;
           invoke_vii(42, $454 | 0, $10 | 0);
           $466 = __THREW__;
           __THREW__ = 0;
           if ($466 & 1) {
            $468 = ___cxa_find_matching_catch() | 0;
            $469 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($464);
            __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($454);
            $eh$lpad$body$i$index50Z2D = $469;
            $eh$lpad$body$i$indexZ2D = $468;
            break;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
           $474 = $ss + 8 | 0;
           __THREW__ = 0;
           $475 = invoke_iiii(29, $474 | 0, 50962, 19) | 0;
           $476 = __THREW__;
           __THREW__ = 0;
           L116 : do if ($476 & 1) label = 90; else {
            __THREW__ = 0;
            invoke_iii(26, $475 | 0, $$lcssa808 | 0) | 0;
            $478 = __THREW__;
            __THREW__ = 0;
            if ($478 & 1) {
             label = 90;
             break;
            }
            $480 = ___cxa_allocate_exception(40) | 0;
            __THREW__ = 0;
            invoke_vii(43, $27 | 0, $454 | 0);
            $481 = __THREW__;
            __THREW__ = 0;
            L119 : do if ($481 & 1) {
             $500 = ___cxa_find_matching_catch() | 0;
             $$01432 = $500;
             $$02431 = tempRet0;
            } else {
             __THREW__ = 0;
             invoke_vii(40, $480 | 0, $$lcssa808 + 4 | 0);
             $484 = __THREW__;
             __THREW__ = 0;
             do if ($484 & 1) $$042 = 1; else {
              $486 = $480 + 12 | 0;
              $487 = $$lcssa808 + 16 | 0;
              HEAP32[$486 >> 2] = HEAP32[$487 >> 2];
              HEAP32[$486 + 4 >> 2] = HEAP32[$487 + 4 >> 2];
              HEAP32[$486 + 8 >> 2] = HEAP32[$487 + 8 >> 2];
              HEAP32[$486 + 12 >> 2] = HEAP32[$487 + 12 >> 2];
              __THREW__ = 0;
              invoke_vii(40, $480 + 28 | 0, $27 | 0);
              $489 = __THREW__;
              __THREW__ = 0;
              if ($489 & 1) {
               $491 = ___cxa_find_matching_catch() | 0;
               $492 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($480);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
               $$01432 = $491;
               $$02431 = $492;
               break L119;
              } else {
               __THREW__ = 0;
               invoke_viii(4, $480 | 0, 8, 172);
               __THREW__ = 0;
               $$042 = 0;
               break;
              }
             } while (0);
             $502 = ___cxa_find_matching_catch() | 0;
             $503 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
             if ($$042) {
              $$01432 = $502;
              $$02431 = $503;
             } else {
              $$1 = $502;
              $$110 = $503;
              break L116;
             }
            } while (0);
            ___cxa_free_exception($480 | 0);
            $$1 = $$01432;
            $$110 = $$02431;
           } while (0);
           if ((label | 0) == 90) {
            $498 = ___cxa_find_matching_catch() | 0;
            $$1 = $498;
            $$110 = tempRet0;
           }
           HEAP32[$ss >> 2] = 2892;
           HEAP32[$452 >> 2] = 2932;
           HEAP32[$474 >> 2] = 2912;
           HEAP32[$454 >> 2] = 2988;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($464);
           __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($454);
           __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($452);
           $$3 = $$1;
           $$312 = $$110;
           break L94;
          } while (0);
          $$0$i = $eh$lpad$body$i$index50Z2D;
          $$01$i = $eh$lpad$body$i$indexZ2D;
         }
         __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($452);
         $eh$lpad$body141$index56Z2D = $$0$i;
         $eh$lpad$body141$indexZ2D = $$01$i;
         label = 89;
        } while (0);
        do if ((label | 0) == 99) {
         $516 = HEAP32[$this + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_vii(40, $28 | 0, $66 | 0);
         $517 = __THREW__;
         __THREW__ = 0;
         if ($517 & 1) {
          $496 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body141$index56Z2D = tempRet0;
          $eh$lpad$body141$indexZ2D = $496;
          label = 89;
          break;
         }
         $521 = $72;
         $526 = HEAP32[$521 + 4 >> 2] | 0;
         $527 = $28 + 12 | 0;
         HEAP32[$527 >> 2] = HEAP32[$521 >> 2];
         HEAP32[$527 + 4 >> 2] = $526;
         $532 = $434 + 24 | 0;
         $537 = HEAP32[$532 + 4 >> 2] | 0;
         $538 = $28 + 20 | 0;
         HEAP32[$538 >> 2] = HEAP32[$532 >> 2];
         HEAP32[$538 + 4 >> 2] = $537;
         HEAP32[$29 >> 2] = 0;
         $542 = $29 + 4 | 0;
         HEAP32[$542 >> 2] = 0;
         HEAP32[$29 + 8 >> 2] = 0;
         $548 = (HEAP32[$437 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
         $549 = $548 >> 2;
         L139 : do if (!$549) label = 111; else {
          if ($549 >>> 0 > 1073741823) {
           __THREW__ = 0;
           invoke_vi(175, $29 | 0);
           $552 = __THREW__;
           __THREW__ = 0;
           if (!($552 & 1)) label = 103;
          } else label = 103;
          if ((label | 0) == 103) {
           __THREW__ = 0;
           $554 = invoke_ii(67, $548 | 0) | 0;
           $555 = __THREW__;
           __THREW__ = 0;
           if (!($555 & 1)) {
            HEAP32[$542 >> 2] = $554;
            HEAP32[$29 >> 2] = $554;
            HEAP32[$29 + 8 >> 2] = $554 + ($549 << 2);
            $559 = HEAP32[$params >> 2] | 0;
            $560 = HEAP32[$437 >> 2] | 0;
            if (($559 | 0) == ($560 | 0)) {
             label = 111;
             break;
            }
            $$01$i$i = $559;
            $563 = $554;
            while (1) {
             HEAP32[$563 >> 2] = HEAP32[$$01$i$i >> 2];
             $563 = (HEAP32[$542 >> 2] | 0) + 4 | 0;
             HEAP32[$542 >> 2] = $563;
             $$01$i$i = $$01$i$i + 4 | 0;
             if (($$01$i$i | 0) == ($560 | 0)) {
              label = 111;
              break L139;
             }
            }
           }
          }
          $568 = ___cxa_find_matching_catch() | 0;
          $569 = tempRet0;
          $570 = HEAP32[$29 >> 2] | 0;
          $572 = $570;
          if ($570) {
           $573 = HEAP32[$542 >> 2] | 0;
           if (($573 | 0) != ($570 | 0)) HEAP32[$542 >> 2] = $573 + (~(($573 + -4 - $572 | 0) >>> 2) << 2);
           __ZdlPv($570);
          }
          $$2 = $568;
          $$211 = $569;
         } while (0);
         do if ((label | 0) == 111) {
          __THREW__ = 0;
          $579 = invoke_iiiii(6, $516 | 0, $28 | 0, $29 | 0, $434 | 0) | 0;
          $580 = __THREW__;
          __THREW__ = 0;
          if ($580 & 1) {
           $609 = ___cxa_find_matching_catch() | 0;
           $610 = tempRet0;
           $611 = HEAP32[$29 >> 2] | 0;
           if (!$611) {
            $$2 = $609;
            $$211 = $610;
            break;
           }
           $614 = HEAP32[$542 >> 2] | 0;
           if (($614 | 0) != ($611 | 0)) HEAP32[$542 >> 2] = $614 + (~(($614 + -4 - $611 | 0) >>> 2) << 2);
           __ZdlPv($611);
           $$2 = $609;
           $$211 = $610;
           break;
          }
          $582 = HEAP32[$29 >> 2] | 0;
          $584 = $582;
          if ($582) {
           $585 = HEAP32[$542 >> 2] | 0;
           if (($585 | 0) != ($582 | 0)) HEAP32[$542 >> 2] = $585 + (~(($585 + -4 - $584 | 0) >>> 2) << 2);
           __ZdlPv($582);
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
          $591 = HEAP32[$params >> 2] | 0;
          $593 = $591;
          if ($591) {
           $594 = HEAP32[$437 >> 2] | 0;
           if (($594 | 0) != ($591 | 0)) HEAP32[$437 >> 2] = $594 + (~(($594 + -4 - $593 | 0) >>> 2) << 2);
           __ZdlPv($591);
          }
          $600 = HEAP32[$params_asts >> 2] | 0;
          $602 = $600;
          if ($600) {
           $603 = HEAP32[$426 >> 2] | 0;
           if (($603 | 0) != ($600 | 0)) HEAP32[$426 >> 2] = $603 + (~(($603 + -4 - $602 | 0) >>> 2) << 2);
           __ZdlPv($600);
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($401);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($396);
          $$0 = $579;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
          STACKTOP = sp;
          return $$0 | 0;
         } while (0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
         $$3 = $$2;
         $$312 = $$211;
        } while (0);
        if ((label | 0) == 89) {
         $$3 = $eh$lpad$body141$indexZ2D;
         $$312 = $eh$lpad$body141$index56Z2D;
        }
        $620 = HEAP32[$params >> 2] | 0;
        $622 = $620;
        if (!$620) {
         $$4 = $$3;
         $$413 = $$312;
        } else {
         $623 = HEAP32[$437 >> 2] | 0;
         if (($623 | 0) != ($620 | 0)) HEAP32[$437 >> 2] = $623 + (~(($623 + -4 - $622 | 0) >>> 2) << 2);
         __ZdlPv($620);
         $$4 = $$3;
         $$413 = $$312;
        }
       }
      } while (0);
      if ((label | 0) == 69) {
       $446 = ___cxa_find_matching_catch() | 0;
       $$4 = $446;
       $$413 = tempRet0;
      }
      $629 = HEAP32[$params_asts >> 2] | 0;
      $631 = $629;
      if (!$629) {
       $$7 = $$4;
       $$716 = $$413;
      } else {
       $632 = HEAP32[$426 >> 2] | 0;
       if (($632 | 0) != ($629 | 0)) HEAP32[$426 >> 2] = $632 + (~(($632 + -4 - $631 | 0) >>> 2) << 2);
       __ZdlPv($629);
       $$7 = $$4;
       $$716 = $$413;
      }
     } else {
      $638 = $ss1 + 64 | 0;
      $639 = $ss1 + 8 | 0;
      HEAP32[$639 >> 2] = 2912;
      $640 = $ss1 + 12 | 0;
      HEAP32[$ss1 >> 2] = 2952;
      HEAP32[$638 >> 2] = 2972;
      HEAP32[$ss1 + 4 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(41, $ss1 + 64 | 0, $640 | 0);
      $643 = __THREW__;
      __THREW__ = 0;
      if ($643 & 1) {
       $656 = ___cxa_find_matching_catch() | 0;
       $$0$i185 = tempRet0;
       $$01$i184 = $656;
      } else {
       HEAP32[$ss1 + 136 >> 2] = 0;
       HEAP32[$ss1 + 140 >> 2] = -1;
       HEAP32[$ss1 >> 2] = 2892;
       HEAP32[$ss1 + 64 >> 2] = 2932;
       HEAP32[$639 >> 2] = 2912;
       __THREW__ = 0;
       invoke_vi(173, $640 | 0);
       $648 = __THREW__;
       __THREW__ = 0;
       do if ($648 & 1) {
        $658 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$i182$index62Z2D = tempRet0;
        $eh$lpad$body$i182$indexZ2D = $658;
       } else {
        HEAP32[$640 >> 2] = 2988;
        $650 = $ss1 + 44 | 0;
        HEAP32[$650 >> 2] = 0;
        HEAP32[$650 + 4 >> 2] = 0;
        HEAP32[$650 + 8 >> 2] = 0;
        HEAP32[$650 + 12 >> 2] = 0;
        HEAP32[$ss1 + 60 >> 2] = 24;
        HEAP32[$9 >> 2] = 0;
        HEAP32[$9 + 4 >> 2] = 0;
        HEAP32[$9 + 8 >> 2] = 0;
        __THREW__ = 0;
        invoke_vii(42, $640 | 0, $9 | 0);
        $652 = __THREW__;
        __THREW__ = 0;
        if ($652 & 1) {
         $654 = ___cxa_find_matching_catch() | 0;
         $655 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($650);
         __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($640);
         $eh$lpad$body$i182$index62Z2D = $655;
         $eh$lpad$body$i182$indexZ2D = $654;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
        $660 = $ss1 + 8 | 0;
        __THREW__ = 0;
        $661 = invoke_iiii(29, $660 | 0, 50982, 19) | 0;
        $662 = __THREW__;
        __THREW__ = 0;
        L209 : do if ($662 & 1) label = 154; else {
         __THREW__ = 0;
         invoke_vii(51, $661 | 0, $next | 0);
         $664 = __THREW__;
         __THREW__ = 0;
         if ($664 & 1) label = 154; else {
          $666 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $30 | 0, $640 | 0);
          $667 = __THREW__;
          __THREW__ = 0;
          L212 : do if ($667 & 1) {
           $680 = ___cxa_find_matching_catch() | 0;
           $$514435 = tempRet0;
           $$5436 = $680;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $666 | 0, $401 | 0);
           $669 = __THREW__;
           __THREW__ = 0;
           do if ($669 & 1) $$044 = 1; else {
            $671 = $666 + 12 | 0;
            HEAP32[$671 >> 2] = HEAP32[$407 >> 2];
            HEAP32[$671 + 4 >> 2] = HEAP32[$407 + 4 >> 2];
            HEAP32[$671 + 8 >> 2] = HEAP32[$407 + 8 >> 2];
            HEAP32[$671 + 12 >> 2] = HEAP32[$407 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $666 + 28 | 0, $30 | 0);
            $673 = __THREW__;
            __THREW__ = 0;
            if ($673 & 1) {
             $675 = ___cxa_find_matching_catch() | 0;
             $676 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($666);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
             $$514435 = $676;
             $$5436 = $675;
             break L212;
            } else {
             __THREW__ = 0;
             invoke_viii(4, $666 | 0, 8, 172);
             __THREW__ = 0;
             $$044 = 0;
             break;
            }
           } while (0);
           $682 = ___cxa_find_matching_catch() | 0;
           $683 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
           if ($$044) {
            $$514435 = $683;
            $$5436 = $682;
           } else {
            $$6 = $682;
            $$615 = $683;
            break L209;
           }
          } while (0);
          ___cxa_free_exception($666 | 0);
          $$6 = $$5436;
          $$615 = $$514435;
         }
        } while (0);
        if ((label | 0) == 154) {
         $678 = ___cxa_find_matching_catch() | 0;
         $$6 = $678;
         $$615 = tempRet0;
        }
        HEAP32[$ss1 >> 2] = 2892;
        HEAP32[$638 >> 2] = 2932;
        HEAP32[$660 >> 2] = 2912;
        HEAP32[$640 >> 2] = 2988;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($650);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($640);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($638);
        $$7 = $$6;
        $$716 = $$615;
        break L86;
       } while (0);
       $$0$i185 = $eh$lpad$body$i182$index62Z2D;
       $$01$i184 = $eh$lpad$body$i182$indexZ2D;
      }
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($638);
      $$7 = $$01$i184;
      $$716 = $$0$i185;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($401);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($396);
     $$31 = $$7;
     $$3140 = $$716;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
     ___resumeException($$31 | 0);
    }
   }
   break;
  }
 case 24:
  {
   $this$idx$val$idx$val$i200 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $684 = $this$idx$val$idx$val$i200 + 8 | 0;
   HEAP32[$31 >> 2] = HEAP32[$684 >> 2];
   $686 = $31 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $686 | 0, $this$idx$val$idx$val$i200 + 12 | 0);
   $688 = __THREW__;
   __THREW__ = 0;
   if ($688 & 1) label = 17; else {
    HEAP32[$31 >> 2] = HEAP32[$684 >> 2];
    $691 = $31 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $691 | 0, $this$idx$val$idx$val$i200 + 24 | 0);
    $693 = __THREW__;
    __THREW__ = 0;
    if ($693 & 1) {
     $695 = ___cxa_find_matching_catch() | 0;
     $696 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($686);
     $eh$lpad$body74$index16Z2D = $696;
     $eh$lpad$body74$indexZ2D = $695;
     break L4;
    }
    $697 = $31 + 28 | 0;
    $698 = $this$idx$val$idx$val$i200 + 36 | 0;
    HEAP32[$697 >> 2] = HEAP32[$698 >> 2];
    HEAP32[$697 + 4 >> 2] = HEAP32[$698 + 4 >> 2];
    HEAP32[$697 + 8 >> 2] = HEAP32[$698 + 8 >> 2];
    HEAP32[$697 + 12 >> 2] = HEAP32[$698 + 12 >> 2];
    HEAP32[$31 >> 2] = HEAP32[$684 >> 2];
    $700 = HEAP32[$this >> 2] | 0;
    $702 = HEAP32[$700 + 4 >> 2] | 0;
    $703 = $702 + 4 | 0;
    $705 = HEAP32[$702 >> 2] | 0;
    HEAP32[$705 + 4 >> 2] = HEAP32[$703 >> 2];
    HEAP32[HEAP32[$703 >> 2] >> 2] = $705;
    $709 = $700 + 8 | 0;
    HEAP32[$709 >> 2] = (HEAP32[$709 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($702 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($702 + 12 | 0);
    __ZdlPv($702);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($691);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($686);
    HEAP32[$binds + 4 >> 2] = 0;
    HEAP32[$binds + 8 >> 2] = 0;
    $716 = $binds + 4 | 0;
    HEAP32[$binds >> 2] = $716;
    $717 = $delim + 4 | 0;
    $718 = $delim + 16 | 0;
    $719 = $delim + 28 | 0;
    L234 : while (1) {
     __THREW__ = 0;
     invoke_viii(6, $this | 0, $binds | 0, $obj_level | 0);
     $720 = __THREW__;
     __THREW__ = 0;
     if ($720 & 1) {
      label = 183;
      break;
     }
     $this$idx$val$idx$val$i208 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $722 = $this$idx$val$idx$val$i208 + 8 | 0;
     HEAP32[$delim >> 2] = HEAP32[$722 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $717 | 0, $this$idx$val$idx$val$i208 + 12 | 0);
     $725 = __THREW__;
     __THREW__ = 0;
     if ($725 & 1) {
      label = 183;
      break;
     }
     HEAP32[$delim >> 2] = HEAP32[$722 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $718 | 0, $this$idx$val$idx$val$i208 + 24 | 0);
     $729 = __THREW__;
     __THREW__ = 0;
     if ($729 & 1) {
      label = 167;
      break;
     }
     $733 = $this$idx$val$idx$val$i208 + 36 | 0;
     HEAP32[$719 >> 2] = HEAP32[$733 >> 2];
     HEAP32[$719 + 4 >> 2] = HEAP32[$733 + 4 >> 2];
     HEAP32[$719 + 8 >> 2] = HEAP32[$733 + 8 >> 2];
     HEAP32[$719 + 12 >> 2] = HEAP32[$733 + 12 >> 2];
     HEAP32[$delim >> 2] = HEAP32[$722 >> 2];
     $735 = HEAP32[$this >> 2] | 0;
     $737 = HEAP32[$735 + 4 >> 2] | 0;
     $738 = $737 + 4 | 0;
     $740 = HEAP32[$737 >> 2] | 0;
     HEAP32[$740 + 4 >> 2] = HEAP32[$738 >> 2];
     HEAP32[HEAP32[$738 >> 2] >> 2] = $740;
     $744 = $735 + 8 | 0;
     HEAP32[$744 >> 2] = (HEAP32[$744 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($737 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($737 + 12 | 0);
     __ZdlPv($737);
     $749 = HEAP32[$delim >> 2] | 0;
     switch ($749 | 0) {
     case 5:
     case 10:
      break;
     default:
      {
       label = 169;
       break L234;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($718);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($717);
     if (($749 | 0) == 10) {
      label = 193;
      break;
     }
    }
    do if ((label | 0) == 167) {
     $731 = ___cxa_find_matching_catch() | 0;
     $732 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($717);
     $eh$lpad$body211$index73Z2D = $732;
     $eh$lpad$body211$indexZ2D = $731;
     label = 185;
    } else if ((label | 0) == 169) {
     $750 = $ss2 + 64 | 0;
     $751 = $ss2 + 8 | 0;
     HEAP32[$751 >> 2] = 2912;
     $752 = $ss2 + 12 | 0;
     HEAP32[$ss2 >> 2] = 2952;
     HEAP32[$750 >> 2] = 2972;
     HEAP32[$ss2 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss2 + 64 | 0, $752 | 0);
     $755 = __THREW__;
     __THREW__ = 0;
     L284 : do if ($755 & 1) {
      $768 = ___cxa_find_matching_catch() | 0;
      $$0$i217 = tempRet0;
      $$01$i216 = $768;
      label = 186;
     } else {
      HEAP32[$ss2 + 136 >> 2] = 0;
      HEAP32[$ss2 + 140 >> 2] = -1;
      HEAP32[$ss2 >> 2] = 2892;
      HEAP32[$ss2 + 64 >> 2] = 2932;
      HEAP32[$751 >> 2] = 2912;
      __THREW__ = 0;
      invoke_vi(173, $752 | 0);
      $760 = __THREW__;
      __THREW__ = 0;
      do if ($760 & 1) {
       $770 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i214$index67Z2D = tempRet0;
       $eh$lpad$body$i214$indexZ2D = $770;
      } else {
       HEAP32[$752 >> 2] = 2988;
       $762 = $ss2 + 44 | 0;
       HEAP32[$762 >> 2] = 0;
       HEAP32[$762 + 4 >> 2] = 0;
       HEAP32[$762 + 8 >> 2] = 0;
       HEAP32[$762 + 12 >> 2] = 0;
       HEAP32[$ss2 + 60 >> 2] = 24;
       HEAP32[$8 >> 2] = 0;
       HEAP32[$8 + 4 >> 2] = 0;
       HEAP32[$8 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $752 | 0, $8 | 0);
       $764 = __THREW__;
       __THREW__ = 0;
       if ($764 & 1) {
        $766 = ___cxa_find_matching_catch() | 0;
        $767 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($762);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($752);
        $eh$lpad$body$i214$index67Z2D = $767;
        $eh$lpad$body$i214$indexZ2D = $766;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       $772 = $ss2 + 8 | 0;
       __THREW__ = 0;
       $773 = invoke_iiii(29, $772 | 0, 51002, 24) | 0;
       $774 = __THREW__;
       __THREW__ = 0;
       L293 : do if ($774 & 1) label = 187; else {
        __THREW__ = 0;
        invoke_vii(51, $773 | 0, $delim | 0);
        $776 = __THREW__;
        __THREW__ = 0;
        if ($776 & 1) label = 187; else {
         $778 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $32 | 0, $752 | 0);
         $779 = __THREW__;
         __THREW__ = 0;
         L296 : do if ($779 & 1) {
          $796 = ___cxa_find_matching_catch() | 0;
          $$817439 = tempRet0;
          $$8440 = $796;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $778 | 0, $718 | 0);
          $781 = __THREW__;
          __THREW__ = 0;
          do if ($781 & 1) $$049 = 1; else {
           $783 = $778 + 12 | 0;
           HEAP32[$783 >> 2] = HEAP32[$719 >> 2];
           HEAP32[$783 + 4 >> 2] = HEAP32[$719 + 4 >> 2];
           HEAP32[$783 + 8 >> 2] = HEAP32[$719 + 8 >> 2];
           HEAP32[$783 + 12 >> 2] = HEAP32[$719 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $778 + 28 | 0, $32 | 0);
           $785 = __THREW__;
           __THREW__ = 0;
           if ($785 & 1) {
            $787 = ___cxa_find_matching_catch() | 0;
            $788 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($778);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
            $$817439 = $788;
            $$8440 = $787;
            break L296;
           } else {
            __THREW__ = 0;
            invoke_viii(4, $778 | 0, 8, 172);
            __THREW__ = 0;
            $$049 = 0;
            break;
           }
          } while (0);
          $798 = ___cxa_find_matching_catch() | 0;
          $799 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($32);
          if ($$049) {
           $$817439 = $799;
           $$8440 = $798;
          } else {
           $$9 = $798;
           $$918 = $799;
           break L293;
          }
         } while (0);
         ___cxa_free_exception($778 | 0);
         $$9 = $$8440;
         $$918 = $$817439;
        }
       } while (0);
       if ((label | 0) == 187) {
        $794 = ___cxa_find_matching_catch() | 0;
        $$9 = $794;
        $$918 = tempRet0;
       }
       HEAP32[$ss2 >> 2] = 2892;
       HEAP32[$750 >> 2] = 2932;
       HEAP32[$772 >> 2] = 2912;
       HEAP32[$752 >> 2] = 2988;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($762);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($752);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($750);
       $$10 = $$9;
       $$1019 = $$918;
       break L284;
      } while (0);
      $$0$i217 = $eh$lpad$body$i214$index67Z2D;
      $$01$i216 = $eh$lpad$body$i214$indexZ2D;
      label = 186;
     } while (0);
     if ((label | 0) == 186) {
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($750);
      $$10 = $$01$i216;
      $$1019 = $$0$i217;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($718);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($717);
     $$12 = $$10;
     $$1221 = $$1019;
    } else if ((label | 0) == 183) {
     $790 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body211$index73Z2D = tempRet0;
     $eh$lpad$body211$indexZ2D = $790;
     label = 185;
    } else if ((label | 0) == 193) {
     __THREW__ = 0;
     $800 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
     $801 = __THREW__;
     __THREW__ = 0;
     if (!($801 & 1)) {
      $804 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $33 | 0, $66 | 0);
      $805 = __THREW__;
      __THREW__ = 0;
      if (!($805 & 1)) {
       $809 = $72;
       $814 = HEAP32[$809 + 4 >> 2] | 0;
       $815 = $33 + 12 | 0;
       HEAP32[$815 >> 2] = HEAP32[$809 >> 2];
       HEAP32[$815 + 4 >> 2] = $814;
       $820 = $800 + 24 | 0;
       $825 = HEAP32[$820 + 4 >> 2] | 0;
       $826 = $33 + 20 | 0;
       HEAP32[$826 >> 2] = HEAP32[$820 >> 2];
       HEAP32[$826 + 4 >> 2] = $825;
       $830 = $34 + 4 | 0;
       HEAP32[$830 >> 2] = 0;
       $831 = $34 + 8 | 0;
       HEAP32[$831 >> 2] = 0;
       $832 = $34 + 4 | 0;
       HEAP32[$34 >> 2] = $832;
       $833 = HEAP32[$binds >> 2] | 0;
       L246 : do if (($833 | 0) == ($716 | 0)) label = 208; else {
        $835 = $832;
        $840 = $833;
        $868 = $833;
        while (1) {
         __THREW__ = 0;
         $836 = invoke_ii(67, 24) | 0;
         $837 = __THREW__;
         __THREW__ = 0;
         if ($837 & 1) break;
         $841 = $836 + 16 | 0;
         $842 = $840 + 16 | 0;
         $847 = HEAP32[$842 + 4 >> 2] | 0;
         $848 = $841;
         HEAP32[$848 >> 2] = HEAP32[$842 >> 2];
         HEAP32[$848 + 4 >> 2] = $847;
         HEAP32[$1 >> 2] = $835;
         HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
         $852 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($34, $$byval_copy, $0, $841) | 0;
         $853 = HEAP32[$852 >> 2] | 0;
         if (!$853) {
          $855 = HEAP32[$0 >> 2] | 0;
          HEAP32[$836 >> 2] = 0;
          HEAP32[$836 + 4 >> 2] = 0;
          HEAP32[$836 + 8 >> 2] = $855;
          HEAP32[$852 >> 2] = $836;
          $859 = HEAP32[HEAP32[$34 >> 2] >> 2] | 0;
          if (!$859) $863 = $836; else {
           HEAP32[$34 >> 2] = $859;
           $863 = HEAP32[$852 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$830 >> 2] | 0, $863);
          HEAP32[$831 >> 2] = (HEAP32[$831 >> 2] | 0) + 1;
         } else if (($853 | 0) != ($836 | 0)) __ZdlPv($836);
         $869 = HEAP32[$868 + 4 >> 2] | 0;
         if (!$869) {
          $$0$i$i$i$i$i = $868;
          while (1) {
           $874 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
           if ((HEAP32[$874 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
            $$01$i$i$i$i$i = $874;
            break;
           } else $$0$i$i$i$i$i = $874;
          }
         } else {
          $$0$i$i$i$i$i$i = $869;
          while (1) {
           $871 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$871) {
            $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $871;
          }
         }
         if (($$01$i$i$i$i$i | 0) == ($716 | 0)) {
          label = 208;
          break L246;
         } else {
          $840 = $$01$i$i$i$i$i;
          $868 = $$01$i$i$i$i$i;
         }
        }
        $898 = ___cxa_find_matching_catch() | 0;
        $899 = tempRet0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($34, HEAP32[$832 >> 2] | 0);
        $$11 = $898;
        $$1120 = $899;
       } while (0);
       if ((label | 0) == 208) {
        __THREW__ = 0;
        $878 = invoke_ii(67, 64) | 0;
        $879 = __THREW__;
        __THREW__ = 0;
        do if ($879 & 1) label = 217; else {
         __THREW__ = 0;
         invoke_viiii(11, $878 | 0, $33 | 0, $34 | 0, $800 | 0);
         $881 = __THREW__;
         __THREW__ = 0;
         if ($881 & 1) {
          $894 = ___cxa_find_matching_catch() | 0;
          $895 = tempRet0;
          __ZdlPv($878);
          $eh$lpad$body246$index79Z2D = $895;
          $eh$lpad$body246$indexZ2D = $894;
          break;
         }
         HEAP32[$7 >> 2] = $878;
         $883 = $804 + 16 | 0;
         $884 = HEAP32[$883 >> 2] | 0;
         if ($884 >>> 0 < (HEAP32[$804 + 20 >> 2] | 0) >>> 0) {
          HEAP32[$884 >> 2] = $878;
          HEAP32[$883 >> 2] = (HEAP32[$883 >> 2] | 0) + 4;
         } else {
          __THREW__ = 0;
          invoke_vii(50, $804 + 12 | 0, $7 | 0);
          $892 = __THREW__;
          __THREW__ = 0;
          if ($892 & 1) {
           label = 217;
           break;
          }
         }
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($34, HEAP32[$832 >> 2] | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
         __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$716 >> 2] | 0);
         $$0 = $878;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
         STACKTOP = sp;
         return $$0 | 0;
        } while (0);
        if ((label | 0) == 217) {
         $901 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body246$index79Z2D = tempRet0;
         $eh$lpad$body246$indexZ2D = $901;
        }
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($34, HEAP32[$832 >> 2] | 0);
        $$11 = $eh$lpad$body246$indexZ2D;
        $$1120 = $eh$lpad$body246$index79Z2D;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
       $$12 = $$11;
       $$1221 = $$1120;
       break;
      }
     }
     $792 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body211$index73Z2D = tempRet0;
     $eh$lpad$body211$indexZ2D = $792;
     label = 185;
    } while (0);
    if ((label | 0) == 185) {
     $$12 = $eh$lpad$body211$indexZ2D;
     $$1221 = $eh$lpad$body211$index73Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($binds, HEAP32[$716 >> 2] | 0);
    $$31 = $$12;
    $$3140 = $$1221;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
    ___resumeException($$31 | 0);
   }
   break;
  }
 case 13:
  {
   $905 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_(3228, $63) | 0;
   if (($905 | 0) != 3232) {
    $966 = HEAP32[$905 + 28 >> 2] | 0;
    switch ($precedence | 0) {
    case 0:
     {
      label = 260;
      break L4;
      break;
     }
    case 4:
     break;
    default:
     {
      label = 261;
      break L4;
     }
    }
    $this$idx$val$idx$val$i268 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $967 = $this$idx$val$idx$val$i268 + 8 | 0;
    HEAP32[$op >> 2] = HEAP32[$967 >> 2];
    $969 = $op + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $969 | 0, $this$idx$val$idx$val$i268 + 12 | 0);
    $971 = __THREW__;
    __THREW__ = 0;
    if ($971 & 1) {
     label = 17;
     break L4;
    }
    HEAP32[$op >> 2] = HEAP32[$967 >> 2];
    $974 = $op + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $974 | 0, $this$idx$val$idx$val$i268 + 24 | 0);
    $976 = __THREW__;
    __THREW__ = 0;
    if ($976 & 1) {
     $978 = ___cxa_find_matching_catch() | 0;
     $979 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($969);
     $eh$lpad$body74$index16Z2D = $979;
     $eh$lpad$body74$indexZ2D = $978;
     break L4;
    }
    $980 = $op + 28 | 0;
    $981 = $this$idx$val$idx$val$i268 + 36 | 0;
    HEAP32[$980 >> 2] = HEAP32[$981 >> 2];
    HEAP32[$980 + 4 >> 2] = HEAP32[$981 + 4 >> 2];
    HEAP32[$980 + 8 >> 2] = HEAP32[$981 + 8 >> 2];
    HEAP32[$980 + 12 >> 2] = HEAP32[$981 + 12 >> 2];
    HEAP32[$op >> 2] = HEAP32[$967 >> 2];
    $983 = HEAP32[$this >> 2] | 0;
    $985 = HEAP32[$983 + 4 >> 2] | 0;
    $986 = $985 + 4 | 0;
    $988 = HEAP32[$985 >> 2] | 0;
    HEAP32[$988 + 4 >> 2] = HEAP32[$986 >> 2];
    HEAP32[HEAP32[$986 >> 2] >> 2] = $988;
    $992 = $983 + 8 | 0;
    HEAP32[$992 >> 2] = (HEAP32[$992 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($985 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($985 + 12 | 0);
    __ZdlPv($985);
    __THREW__ = 0;
    $997 = invoke_iiii(32, $this | 0, 4, $obj_level | 0) | 0;
    $998 = __THREW__;
    __THREW__ = 0;
    if ($998 & 1) label = 255; else {
     $1001 = HEAP32[$this + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $36 | 0, $974 | 0);
     $1002 = __THREW__;
     __THREW__ = 0;
     if ($1002 & 1) label = 255; else {
      $1005 = $36 + 12 | 0;
      $1006 = $980;
      $1011 = HEAP32[$1006 + 4 >> 2] | 0;
      $1012 = $1005;
      HEAP32[$1012 >> 2] = HEAP32[$1006 >> 2];
      HEAP32[$1012 + 4 >> 2] = $1011;
      $1017 = $997 + 24 | 0;
      $1022 = HEAP32[$1017 + 4 >> 2] | 0;
      $1023 = $36 + 20 | 0;
      HEAP32[$1023 >> 2] = HEAP32[$1017 >> 2];
      HEAP32[$1023 + 4 >> 2] = $1022;
      __THREW__ = 0;
      $1027 = invoke_ii(67, 56) | 0;
      $1028 = __THREW__;
      __THREW__ = 0;
      do if ($1028 & 1) label = 256; else {
       HEAP32[$1027 >> 2] = 3192;
       __THREW__ = 0;
       invoke_vii(40, $1027 + 4 | 0, $36 | 0);
       $1031 = __THREW__;
       __THREW__ = 0;
       if ($1031 & 1) {
        $1051 = ___cxa_find_matching_catch() | 0;
        $1052 = tempRet0;
        __ZdlPv($1027);
        $eh$lpad$body280$index89Z2D = $1052;
        $eh$lpad$body280$indexZ2D = $1051;
        break;
       }
       $1033 = $1027 + 16 | 0;
       HEAP32[$1033 >> 2] = HEAP32[$1005 >> 2];
       HEAP32[$1033 + 4 >> 2] = HEAP32[$1005 + 4 >> 2];
       HEAP32[$1033 + 8 >> 2] = HEAP32[$1005 + 8 >> 2];
       HEAP32[$1033 + 12 >> 2] = HEAP32[$1005 + 12 >> 2];
       HEAP32[$1027 + 32 >> 2] = 19;
       HEAP32[$1027 + 36 >> 2] = 0;
       HEAP32[$1027 + 40 >> 2] = 0;
       HEAP32[$1027 + 44 >> 2] = 0;
       HEAP32[$1027 >> 2] = 3340;
       HEAP32[$1027 + 48 >> 2] = $966;
       HEAP32[$1027 + 52 >> 2] = $997;
       HEAP32[$5 >> 2] = $1027;
       $1040 = $1001 + 16 | 0;
       $1041 = HEAP32[$1040 >> 2] | 0;
       if ($1041 >>> 0 < (HEAP32[$1001 + 20 >> 2] | 0) >>> 0) {
        HEAP32[$1041 >> 2] = $1027;
        HEAP32[$1040 >> 2] = (HEAP32[$1040 >> 2] | 0) + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(50, $1001 + 12 | 0, $5 | 0);
        $1049 = __THREW__;
        __THREW__ = 0;
        if ($1049 & 1) {
         label = 256;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($974);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($969);
       $$0 = $1027;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
       STACKTOP = sp;
       return $$0 | 0;
      } while (0);
      if ((label | 0) == 256) {
       $1055 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body280$index89Z2D = tempRet0;
       $eh$lpad$body280$indexZ2D = $1055;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
      $$15 = $eh$lpad$body280$indexZ2D;
      $$1524 = $eh$lpad$body280$index89Z2D;
     }
    }
    if ((label | 0) == 255) {
     $1053 = ___cxa_find_matching_catch() | 0;
     $$15 = $1053;
     $$1524 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($974);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($969);
    $$31 = $$15;
    $$3140 = $$1524;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
    ___resumeException($$31 | 0);
   }
   $907 = $ss4 + 64 | 0;
   $908 = $ss4 + 8 | 0;
   HEAP32[$908 >> 2] = 2912;
   $909 = $ss4 + 12 | 0;
   HEAP32[$ss4 >> 2] = 2952;
   HEAP32[$907 >> 2] = 2972;
   HEAP32[$ss4 + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss4 + 64 | 0, $909 | 0);
   $912 = __THREW__;
   __THREW__ = 0;
   if ($912 & 1) {
    $925 = ___cxa_find_matching_catch() | 0;
    $$0$i252 = tempRet0;
    $$01$i251 = $925;
   } else {
    HEAP32[$ss4 + 136 >> 2] = 0;
    HEAP32[$ss4 + 140 >> 2] = -1;
    HEAP32[$ss4 >> 2] = 2892;
    HEAP32[$ss4 + 64 >> 2] = 2932;
    HEAP32[$908 >> 2] = 2912;
    __THREW__ = 0;
    invoke_vi(173, $909 | 0);
    $917 = __THREW__;
    __THREW__ = 0;
    do if ($917 & 1) {
     $927 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i249$index84Z2D = tempRet0;
     $eh$lpad$body$i249$indexZ2D = $927;
    } else {
     HEAP32[$909 >> 2] = 2988;
     $919 = $ss4 + 44 | 0;
     HEAP32[$919 >> 2] = 0;
     HEAP32[$919 + 4 >> 2] = 0;
     HEAP32[$919 + 8 >> 2] = 0;
     HEAP32[$919 + 12 >> 2] = 0;
     HEAP32[$ss4 + 60 >> 2] = 24;
     HEAP32[$6 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $909 | 0, $6 | 0);
     $921 = __THREW__;
     __THREW__ = 0;
     if ($921 & 1) {
      $923 = ___cxa_find_matching_catch() | 0;
      $924 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($919);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($909);
      $eh$lpad$body$i249$index84Z2D = $924;
      $eh$lpad$body$i249$indexZ2D = $923;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $929 = $ss4 + 8 | 0;
     __THREW__ = 0;
     $930 = invoke_iiii(29, $929 | 0, 51027, 22) | 0;
     $931 = __THREW__;
     __THREW__ = 0;
     L356 : do if ($931 & 1) label = 237; else {
      $933 = HEAP8[$63 >> 0] | 0;
      $935 = ($933 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $930 | 0, ($935 ? $63 + 1 | 0 : HEAP32[$begin + 12 >> 2] | 0) | 0, ($935 ? ($933 & 255) >>> 1 : HEAP32[$begin + 8 >> 2] | 0) | 0) | 0;
      $945 = __THREW__;
      __THREW__ = 0;
      if ($945 & 1) label = 237; else {
       $947 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $35 | 0, $909 | 0);
       $948 = __THREW__;
       __THREW__ = 0;
       L359 : do if ($948 & 1) {
        $961 = ___cxa_find_matching_catch() | 0;
        $$1322443 = tempRet0;
        $$13444 = $961;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $947 | 0, $66 | 0);
        $950 = __THREW__;
        __THREW__ = 0;
        do if ($950 & 1) $$051 = 1; else {
         $952 = $947 + 12 | 0;
         HEAP32[$952 >> 2] = HEAP32[$72 >> 2];
         HEAP32[$952 + 4 >> 2] = HEAP32[$72 + 4 >> 2];
         HEAP32[$952 + 8 >> 2] = HEAP32[$72 + 8 >> 2];
         HEAP32[$952 + 12 >> 2] = HEAP32[$72 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $947 + 28 | 0, $35 | 0);
         $954 = __THREW__;
         __THREW__ = 0;
         if ($954 & 1) {
          $956 = ___cxa_find_matching_catch() | 0;
          $957 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($947);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
          $$1322443 = $957;
          $$13444 = $956;
          break L359;
         } else {
          __THREW__ = 0;
          invoke_viii(4, $947 | 0, 8, 172);
          __THREW__ = 0;
          $$051 = 0;
          break;
         }
        } while (0);
        $963 = ___cxa_find_matching_catch() | 0;
        $964 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
        if ($$051) {
         $$1322443 = $964;
         $$13444 = $963;
        } else {
         $$14 = $963;
         $$1423 = $964;
         break L356;
        }
       } while (0);
       ___cxa_free_exception($947 | 0);
       $$14 = $$13444;
       $$1423 = $$1322443;
      }
     } while (0);
     if ((label | 0) == 237) {
      $959 = ___cxa_find_matching_catch() | 0;
      $$14 = $959;
      $$1423 = tempRet0;
     }
     HEAP32[$ss4 >> 2] = 2892;
     HEAP32[$907 >> 2] = 2932;
     HEAP32[$929 >> 2] = 2912;
     HEAP32[$909 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($919);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($909);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($907);
     $$31 = $$14;
     $$3140 = $$1423;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
     ___resumeException($$31 | 0);
    } while (0);
    $$0$i252 = $eh$lpad$body$i249$index84Z2D;
    $$01$i251 = $eh$lpad$body$i249$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($907);
   $eh$lpad$body74$index16Z2D = $$0$i252;
   $eh$lpad$body74$indexZ2D = $$01$i251;
   break;
  }
 default:
  if (!$precedence) label = 260; else label = 261;
 } while (0);
 L375 : do if ((label | 0) == 260) {
  __THREW__ = 0;
  $1058 = invoke_iii(28, $this | 0, $obj_level | 0) | 0;
  $1059 = __THREW__;
  __THREW__ = 0;
  if ($1059 & 1) label = 17; else {
   $$0 = $1058;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else if ((label | 0) == 261) {
  $1061 = $precedence + -1 | 0;
  __THREW__ = 0;
  $1062 = invoke_iiii(32, $this | 0, $1061 | 0, $obj_level | 0) | 0;
  $1063 = __THREW__;
  __THREW__ = 0;
  if ($1063 & 1) label = 17; else {
   $1065 = $37 + 4 | 0;
   $1066 = $37 + 16 | 0;
   $1067 = $37 + 28 | 0;
   $1068 = $38 + 4 | 0;
   $1069 = $38 + 16 | 0;
   $1070 = $38 + 28 | 0;
   $1071 = ($precedence | 0) == 5;
   $1072 = $39 + 4 | 0;
   $1073 = $39 + 16 | 0;
   $1074 = $39 + 28 | 0;
   $1075 = $op7 + 4 | 0;
   $1076 = $op7 + 16 | 0;
   $1077 = $op7 + 28 | 0;
   $1078 = $this + 4 | 0;
   $1079 = $53 + 12 | 0;
   $1080 = $l + 12 | 0;
   $1081 = $55 + 12 | 0;
   $1082 = $56 + 12 | 0;
   $1083 = $57 + 12 | 0;
   $1084 = $57 + 20 | 0;
   $1085 = $58 + 4 | 0;
   $1086 = $58 + 8 | 0;
   $1087 = $58 + 8 | 0;
   $1088 = $59 + 12 | 0;
   $1089 = $59 + 20 | 0;
   $1090 = $60 + 12 | 0;
   $1091 = $end + 36 | 0;
   $1092 = $43 + 12 | 0;
   $1093 = $43 + 20 | 0;
   $1094 = $end + 16 | 0;
   $1095 = $end + 4 | 0;
   $1096 = $field + 16 | 0;
   $1097 = $field + 36 | 0;
   $1098 = $field + 28 | 0;
   $1099 = $44 + 12 | 0;
   $1100 = $44 + 20 | 0;
   $1101 = $field + 4 | 0;
   $1102 = $46 + 12 | 0;
   $1103 = $46 + 20 | 0;
   $1104 = $args + 4 | 0;
   $1105 = $args + 8 | 0;
   $1106 = $48 + 4 | 0;
   $1107 = $48 + 16 | 0;
   $1108 = $48 + 28 | 0;
   $1109 = $49 + 4 | 0;
   $1110 = $49 + 16 | 0;
   $1111 = $49 + 28 | 0;
   $1112 = $end9 + 36 | 0;
   $1113 = $50 + 12 | 0;
   $1114 = $50 + 20 | 0;
   $1115 = $51 + 4 | 0;
   $1116 = $51 + 8 | 0;
   $1117 = $end9 + 16 | 0;
   $1118 = $end9 + 4 | 0;
   $1119 = $51 + 8 | 0;
   $1120 = $end10 + 36 | 0;
   $1121 = $52 + 12 | 0;
   $1122 = $52 + 20 | 0;
   $1123 = $end10 + 16 | 0;
   $1124 = $end10 + 4 | 0;
   $1125 = ($precedence | 0) == 2;
   $lhs$0 = $1062;
   L380 : while (1) {
    $this$idx57$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1126 = $this$idx57$val$idx$val + 8 | 0;
    HEAP32[$37 >> 2] = HEAP32[$1126 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1065 | 0, $this$idx57$val$idx$val + 12 | 0);
    $1129 = __THREW__;
    __THREW__ = 0;
    if ($1129 & 1) {
     label = 16;
     break;
    }
    HEAP32[$37 >> 2] = HEAP32[$1126 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1066 | 0, $this$idx57$val$idx$val + 24 | 0);
    $1133 = __THREW__;
    __THREW__ = 0;
    if ($1133 & 1) {
     label = 265;
     break;
    }
    $1137 = $this$idx57$val$idx$val + 36 | 0;
    HEAP32[$1067 >> 2] = HEAP32[$1137 >> 2];
    HEAP32[$1067 + 4 >> 2] = HEAP32[$1137 + 4 >> 2];
    HEAP32[$1067 + 8 >> 2] = HEAP32[$1137 + 8 >> 2];
    HEAP32[$1067 + 12 >> 2] = HEAP32[$1137 + 12 >> 2];
    $1138 = HEAP32[$1126 >> 2] | 0;
    HEAP32[$37 >> 2] = $1138;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1066);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1065);
    L384 : do switch ($1138 | 0) {
    case 13:
     {
      $this$idx56$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1139 = $this$idx56$val$idx$val + 8 | 0;
      HEAP32[$38 >> 2] = HEAP32[$1139 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1068 | 0, $this$idx56$val$idx$val + 12 | 0);
      $1142 = __THREW__;
      __THREW__ = 0;
      if ($1142 & 1) {
       label = 16;
       break L380;
      }
      HEAP32[$38 >> 2] = HEAP32[$1139 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1069 | 0, $this$idx56$val$idx$val + 24 | 0);
      $1146 = __THREW__;
      __THREW__ = 0;
      if ($1146 & 1) {
       label = 269;
       break L380;
      }
      $1150 = $this$idx56$val$idx$val + 36 | 0;
      HEAP32[$1070 >> 2] = HEAP32[$1150 >> 2];
      HEAP32[$1070 + 4 >> 2] = HEAP32[$1150 + 4 >> 2];
      HEAP32[$1070 + 8 >> 2] = HEAP32[$1150 + 8 >> 2];
      HEAP32[$1070 + 12 >> 2] = HEAP32[$1150 + 12 >> 2];
      HEAP32[$38 >> 2] = HEAP32[$1139 >> 2];
      $1153 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($1068, 51050) | 0) == 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1069);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1068);
      if ($1153) if ($1071) {
       $1859 = 2;
       break L384;
      } else {
       $$0 = $lhs$0;
       label = 504;
       break L380;
      }
      $this$idx55$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1154 = $this$idx55$val$idx$val + 8 | 0;
      HEAP32[$39 >> 2] = HEAP32[$1154 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1072 | 0, $this$idx55$val$idx$val + 12 | 0);
      $1157 = __THREW__;
      __THREW__ = 0;
      if ($1157 & 1) {
       label = 16;
       break L380;
      }
      HEAP32[$39 >> 2] = HEAP32[$1154 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1073 | 0, $this$idx55$val$idx$val + 24 | 0);
      $1161 = __THREW__;
      __THREW__ = 0;
      if ($1161 & 1) {
       label = 274;
       break L380;
      }
      $1165 = $this$idx55$val$idx$val + 36 | 0;
      HEAP32[$1074 >> 2] = HEAP32[$1165 >> 2];
      HEAP32[$1074 + 4 >> 2] = HEAP32[$1165 + 4 >> 2];
      HEAP32[$1074 + 8 >> 2] = HEAP32[$1165 + 8 >> 2];
      HEAP32[$1074 + 12 >> 2] = HEAP32[$1165 + 12 >> 2];
      HEAP32[$39 >> 2] = HEAP32[$1154 >> 2];
      $1167 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_(3240, $1072) | 0;
      if (($1167 | 0) == 3244) {
       $$0$i304 = 0;
       $1270 = 2;
      } else {
       $$0$i304 = 1;
       $1270 = HEAP32[$1167 + 28 >> 2] | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1073);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1072);
      if (!$$0$i304) {
       label = 278;
       break L380;
      }
      $1265 = HEAP32[805] | 0;
      do if (!$1265) {
       HEAP32[$__parent$i >> 2] = 3220;
       $$0$i7$i = 3220;
       $1288 = 3220;
       label = 320;
      } else {
       $__nd$0$i$i = $1265;
       while (1) {
        $1268 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
        if (($1270 | 0) < ($1268 | 0)) {
         $1271 = HEAP32[$__nd$0$i$i >> 2] | 0;
         if (!$1271) {
          $$lcssa1025 = $__nd$0$i$i;
          $__nd$0$i$i$lcssa1024 = $__nd$0$i$i;
          label = 313;
          break;
         } else $__nd$0$be$in$i$i = $1271;
        } else {
         if (($1268 | 0) >= ($1270 | 0)) {
          $__nd$0$i$i$lcssa = $__nd$0$i$i;
          label = 319;
          break;
         }
         $1275 = $__nd$0$i$i + 4 | 0;
         $1276 = HEAP32[$1275 >> 2] | 0;
         if (!$1276) {
          $$lcssa = $1275;
          $__nd$0$i$i$lcssa1023 = $__nd$0$i$i;
          label = 317;
          break;
         } else $__nd$0$be$in$i$i = $1276;
        }
        $__nd$0$i$i = $__nd$0$be$in$i$i;
       }
       if ((label | 0) == 313) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa1024;
        $$0$i7$i = $$lcssa1025;
        $1288 = $__nd$0$i$i$lcssa1024;
        label = 320;
        break;
       } else if ((label | 0) == 317) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa1023;
        $$0$i7$i = $$lcssa;
        $1288 = $__nd$0$i$i$lcssa1023;
        label = 320;
        break;
       } else if ((label | 0) == 319) {
        label = 0;
        HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
        if (!$__nd$0$i$i$lcssa) {
         $$0$i7$i = $__parent$i;
         $1288 = $__nd$0$i$i$lcssa;
         label = 320;
         break;
        } else {
         $__r$0$i = $__nd$0$i$i$lcssa;
         break;
        }
       }
      } while (0);
      if ((label | 0) == 320) {
       label = 0;
       __THREW__ = 0;
       $1281 = invoke_ii(67, 24) | 0;
       $1282 = __THREW__;
       __THREW__ = 0;
       if ($1282 & 1) {
        label = 16;
        break L380;
       }
       HEAP32[$1281 + 16 >> 2] = $1270;
       HEAP32[$1281 + 20 >> 2] = 0;
       HEAP32[$1281 >> 2] = 0;
       HEAP32[$1281 + 4 >> 2] = 0;
       HEAP32[$1281 + 8 >> 2] = $1288;
       HEAP32[$$0$i7$i >> 2] = $1281;
       $1290 = HEAP32[HEAP32[804] >> 2] | 0;
       if (!$1290) $1294 = $1281; else {
        HEAP32[804] = $1290;
        $1294 = HEAP32[$$0$i7$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $1294);
       HEAP32[806] = (HEAP32[806] | 0) + 1;
       $__r$0$i = $1281;
      }
      if ((HEAP32[$__r$0$i + 20 >> 2] | 0) == ($precedence | 0)) $1859 = $1270; else {
       $$0 = $lhs$0;
       label = 504;
       break L380;
      }
      break;
     }
    case 0:
    case 8:
    case 2:
    case 7:
     {
      if ($1125) $1859 = 2; else {
       $$0 = $lhs$0;
       label = 504;
       break L380;
      }
      break;
     }
    default:
     {
      $$0 = $lhs$0;
      label = 504;
      break L380;
     }
    } while (0);
    $this$idx$val$idx$val$i335 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $1300 = $this$idx$val$idx$val$i335 + 8 | 0;
    HEAP32[$op7 >> 2] = HEAP32[$1300 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1075 | 0, $this$idx$val$idx$val$i335 + 12 | 0);
    $1303 = __THREW__;
    __THREW__ = 0;
    if ($1303 & 1) {
     label = 16;
     break;
    }
    HEAP32[$op7 >> 2] = HEAP32[$1300 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $1076 | 0, $this$idx$val$idx$val$i335 + 24 | 0);
    $1307 = __THREW__;
    __THREW__ = 0;
    if ($1307 & 1) {
     label = 328;
     break;
    }
    $1311 = $this$idx$val$idx$val$i335 + 36 | 0;
    HEAP32[$1077 >> 2] = HEAP32[$1311 >> 2];
    HEAP32[$1077 + 4 >> 2] = HEAP32[$1311 + 4 >> 2];
    HEAP32[$1077 + 8 >> 2] = HEAP32[$1311 + 8 >> 2];
    HEAP32[$1077 + 12 >> 2] = HEAP32[$1311 + 12 >> 2];
    HEAP32[$op7 >> 2] = HEAP32[$1300 >> 2];
    $1313 = HEAP32[$this >> 2] | 0;
    $1315 = HEAP32[$1313 + 4 >> 2] | 0;
    $1316 = $1315 + 4 | 0;
    $1318 = HEAP32[$1315 >> 2] | 0;
    HEAP32[$1318 + 4 >> 2] = HEAP32[$1316 >> 2];
    HEAP32[HEAP32[$1316 >> 2] >> 2] = $1318;
    $1322 = $1313 + 8 | 0;
    HEAP32[$1322 >> 2] = (HEAP32[$1322 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1315 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1315 + 12 | 0);
    __ZdlPv($1315);
    L421 : do switch (HEAP32[$op7 >> 2] | 0) {
    case 2:
     {
      __THREW__ = 0;
      $1328 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
      $1329 = __THREW__;
      __THREW__ = 0;
      if ($1329 & 1) {
       label = 340;
       break L380;
      }
      __THREW__ = 0;
      invoke_viiii(12, $end | 0, $this | 0, 3, 0);
      $1331 = __THREW__;
      __THREW__ = 0;
      if ($1331 & 1) {
       label = 340;
       break L380;
      }
      $1333 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $43 | 0, $66 | 0);
      $1334 = __THREW__;
      __THREW__ = 0;
      if ($1334 & 1) {
       label = 341;
       break L380;
      }
      $1336 = $72;
      $1341 = HEAP32[$1336 + 4 >> 2] | 0;
      $1342 = $1092;
      HEAP32[$1342 >> 2] = HEAP32[$1336 >> 2];
      HEAP32[$1342 + 4 >> 2] = $1341;
      $1346 = $1091;
      $1351 = HEAP32[$1346 + 4 >> 2] | 0;
      $1352 = $1093;
      HEAP32[$1352 >> 2] = HEAP32[$1346 >> 2];
      HEAP32[$1352 + 4 >> 2] = $1351;
      __THREW__ = 0;
      $1356 = invoke_ii(67, 56) | 0;
      $1357 = __THREW__;
      __THREW__ = 0;
      if ($1357 & 1) {
       label = 342;
       break L380;
      }
      HEAP32[$1356 >> 2] = 3192;
      __THREW__ = 0;
      invoke_vii(40, $1356 + 4 | 0, $43 | 0);
      $1360 = __THREW__;
      __THREW__ = 0;
      if ($1360 & 1) {
       $$lcssa1069 = $1356;
       label = 338;
       break L380;
      }
      $1362 = $1356 + 16 | 0;
      HEAP32[$1362 >> 2] = HEAP32[$1092 >> 2];
      HEAP32[$1362 + 4 >> 2] = HEAP32[$1092 + 4 >> 2];
      HEAP32[$1362 + 8 >> 2] = HEAP32[$1092 + 8 >> 2];
      HEAP32[$1362 + 12 >> 2] = HEAP32[$1092 + 12 >> 2];
      HEAP32[$1356 + 32 >> 2] = 9;
      HEAP32[$1356 + 36 >> 2] = 0;
      HEAP32[$1356 + 40 >> 2] = 0;
      HEAP32[$1356 + 44 >> 2] = 0;
      HEAP32[$1356 >> 2] = 3356;
      HEAP32[$1356 + 48 >> 2] = $lhs$0;
      HEAP32[$1356 + 52 >> 2] = $1328;
      HEAP32[$2 >> 2] = $1356;
      $1369 = $1333 + 16 | 0;
      $1370 = HEAP32[$1369 >> 2] | 0;
      if ($1370 >>> 0 < (HEAP32[$1333 + 20 >> 2] | 0) >>> 0) {
       HEAP32[$1370 >> 2] = $1356;
       HEAP32[$1369 >> 2] = (HEAP32[$1369 >> 2] | 0) + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(50, $1333 + 12 | 0, $2 | 0);
       $1378 = __THREW__;
       __THREW__ = 0;
       if ($1378 & 1) {
        label = 342;
        break L380;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1094);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1095);
      $lhs$1 = $1356;
      break;
     }
    case 7:
     {
      __THREW__ = 0;
      invoke_viiii(12, $field | 0, $this | 0, 11, 0);
      $1388 = __THREW__;
      __THREW__ = 0;
      if ($1388 & 1) {
       label = 340;
       break L380;
      }
      $1390 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $44 | 0, $1096 | 0);
      $1391 = __THREW__;
      __THREW__ = 0;
      if ($1391 & 1) {
       label = 357;
       break L380;
      }
      $1393 = $1098;
      $1398 = HEAP32[$1393 + 4 >> 2] | 0;
      $1399 = $1099;
      HEAP32[$1399 >> 2] = HEAP32[$1393 >> 2];
      HEAP32[$1399 + 4 >> 2] = $1398;
      $1403 = $1097;
      $1408 = HEAP32[$1403 + 4 >> 2] | 0;
      $1409 = $1100;
      HEAP32[$1409 >> 2] = HEAP32[$1403 >> 2];
      HEAP32[$1409 + 4 >> 2] = $1408;
      __THREW__ = 0;
      invoke_vii(40, $45 | 0, $1101 | 0);
      $1413 = __THREW__;
      __THREW__ = 0;
      if ($1413 & 1) {
       label = 358;
       break L380;
      }
      __THREW__ = 0;
      $1415 = invoke_iiii(31, $1390 | 0, $44 | 0, $45 | 0) | 0;
      $1416 = __THREW__;
      __THREW__ = 0;
      if ($1416 & 1) {
       label = 359;
       break L380;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
      $1418 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $46 | 0, $66 | 0);
      $1419 = __THREW__;
      __THREW__ = 0;
      if ($1419 & 1) {
       label = 357;
       break L380;
      }
      $1421 = $72;
      $1426 = HEAP32[$1421 + 4 >> 2] | 0;
      $1427 = $1102;
      HEAP32[$1427 >> 2] = HEAP32[$1421 >> 2];
      HEAP32[$1427 + 4 >> 2] = $1426;
      $1431 = $1097;
      $1436 = HEAP32[$1431 + 4 >> 2] | 0;
      $1437 = $1103;
      HEAP32[$1437 >> 2] = HEAP32[$1431 >> 2];
      HEAP32[$1437 + 4 >> 2] = $1436;
      __THREW__ = 0;
      $1441 = invoke_ii(67, 56) | 0;
      $1442 = __THREW__;
      __THREW__ = 0;
      if ($1442 & 1) {
       label = 361;
       break L380;
      }
      HEAP32[$1441 >> 2] = 3192;
      __THREW__ = 0;
      invoke_vii(40, $1441 + 4 | 0, $46 | 0);
      $1445 = __THREW__;
      __THREW__ = 0;
      if ($1445 & 1) {
       $$lcssa1068 = $1441;
       label = 355;
       break L380;
      }
      $1447 = $1441 + 16 | 0;
      HEAP32[$1447 >> 2] = HEAP32[$1102 >> 2];
      HEAP32[$1447 + 4 >> 2] = HEAP32[$1102 + 4 >> 2];
      HEAP32[$1447 + 8 >> 2] = HEAP32[$1102 + 8 >> 2];
      HEAP32[$1447 + 12 >> 2] = HEAP32[$1102 + 12 >> 2];
      HEAP32[$1441 + 32 >> 2] = 9;
      HEAP32[$1441 + 36 >> 2] = 0;
      HEAP32[$1441 + 40 >> 2] = 0;
      HEAP32[$1441 + 44 >> 2] = 0;
      HEAP32[$1441 >> 2] = 3356;
      HEAP32[$1441 + 48 >> 2] = $lhs$0;
      HEAP32[$1441 + 52 >> 2] = $1415;
      HEAP32[$1 >> 2] = $1441;
      $1454 = $1418 + 16 | 0;
      $1455 = HEAP32[$1454 >> 2] | 0;
      if ($1455 >>> 0 < (HEAP32[$1418 + 20 >> 2] | 0) >>> 0) {
       HEAP32[$1455 >> 2] = $1441;
       HEAP32[$1454 >> 2] = (HEAP32[$1454 >> 2] | 0) + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(50, $1418 + 12 | 0, $1 | 0);
       $1463 = __THREW__;
       __THREW__ = 0;
       if ($1463 & 1) {
        label = 361;
        break L380;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1096);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1101);
      $lhs$1 = $1441;
      break;
     }
    case 8:
     {
      HEAP32[$args >> 2] = 0;
      HEAP32[$1104 >> 2] = 0;
      HEAP32[$1105 >> 2] = 0;
      __THREW__ = 0;
      invoke_viii(3, $47 | 0, 51076, 17);
      $1475 = __THREW__;
      __THREW__ = 0;
      if ($1475 & 1) {
       label = 374;
       break L380;
      }
      __THREW__ = 0;
      invoke_viiiii(4, $end9 | 0, $this | 0, $args | 0, $47 | 0, $obj_level | 0);
      $1477 = __THREW__;
      __THREW__ = 0;
      if ($1477 & 1) {
       label = 375;
       break L380;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
      $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $1479 = $this$idx$val$idx$val + 8 | 0;
      HEAP32[$48 >> 2] = HEAP32[$1479 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1106 | 0, $this$idx$val$idx$val + 12 | 0);
      $1482 = __THREW__;
      __THREW__ = 0;
      if ($1482 & 1) {
       label = 376;
       break L380;
      }
      HEAP32[$48 >> 2] = HEAP32[$1479 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1107 | 0, $this$idx$val$idx$val + 24 | 0);
      $1486 = __THREW__;
      __THREW__ = 0;
      if ($1486 & 1) {
       label = 368;
       break L380;
      }
      $1490 = $this$idx$val$idx$val + 36 | 0;
      HEAP32[$1108 >> 2] = HEAP32[$1490 >> 2];
      HEAP32[$1108 + 4 >> 2] = HEAP32[$1490 + 4 >> 2];
      HEAP32[$1108 + 8 >> 2] = HEAP32[$1490 + 8 >> 2];
      HEAP32[$1108 + 12 >> 2] = HEAP32[$1490 + 12 >> 2];
      $1491 = HEAP32[$1479 >> 2] | 0;
      HEAP32[$48 >> 2] = $1491;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1107);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1106);
      if (($1491 | 0) == 26) {
       $this$idx$val$idx$val$i369 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $1493 = $this$idx$val$idx$val$i369 + 8 | 0;
       HEAP32[$49 >> 2] = HEAP32[$1493 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $1109 | 0, $this$idx$val$idx$val$i369 + 12 | 0);
       $1496 = __THREW__;
       __THREW__ = 0;
       if ($1496 & 1) {
        label = 376;
        break L380;
       }
       HEAP32[$49 >> 2] = HEAP32[$1493 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $1110 | 0, $this$idx$val$idx$val$i369 + 24 | 0);
       $1500 = __THREW__;
       __THREW__ = 0;
       if ($1500 & 1) {
        label = 372;
        break L380;
       }
       $1504 = $this$idx$val$idx$val$i369 + 36 | 0;
       HEAP32[$1111 >> 2] = HEAP32[$1504 >> 2];
       HEAP32[$1111 + 4 >> 2] = HEAP32[$1504 + 4 >> 2];
       HEAP32[$1111 + 8 >> 2] = HEAP32[$1504 + 8 >> 2];
       HEAP32[$1111 + 12 >> 2] = HEAP32[$1504 + 12 >> 2];
       HEAP32[$49 >> 2] = HEAP32[$1493 >> 2];
       $1506 = HEAP32[$this >> 2] | 0;
       $1508 = HEAP32[$1506 + 4 >> 2] | 0;
       $1509 = $1508 + 4 | 0;
       $1511 = HEAP32[$1508 >> 2] | 0;
       HEAP32[$1511 + 4 >> 2] = HEAP32[$1509 >> 2];
       HEAP32[HEAP32[$1509 >> 2] >> 2] = $1511;
       $1515 = $1506 + 8 | 0;
       HEAP32[$1515 >> 2] = (HEAP32[$1515 >> 2] | 0) + -1;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1508 + 24 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1508 + 12 | 0);
       __ZdlPv($1508);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1110);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1109);
       $tailstrict$0$off0 = 1;
      } else $tailstrict$0$off0 = 0;
      $1526 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $50 | 0, $66 | 0);
      $1527 = __THREW__;
      __THREW__ = 0;
      if ($1527 & 1) {
       label = 376;
       break L380;
      }
      $1529 = $72;
      $1534 = HEAP32[$1529 + 4 >> 2] | 0;
      $1535 = $1113;
      HEAP32[$1535 >> 2] = HEAP32[$1529 >> 2];
      HEAP32[$1535 + 4 >> 2] = $1534;
      $1539 = $1112;
      $1544 = HEAP32[$1539 + 4 >> 2] | 0;
      $1545 = $1114;
      HEAP32[$1545 >> 2] = HEAP32[$1539 >> 2];
      HEAP32[$1545 + 4 >> 2] = $1544;
      HEAP32[$51 >> 2] = 0;
      HEAP32[$1115 >> 2] = 0;
      HEAP32[$1116 >> 2] = 0;
      $1553 = (HEAP32[$1104 >> 2] | 0) - (HEAP32[$args >> 2] | 0) | 0;
      $1554 = $1553 >> 2;
      if ($1554) {
       if ($1554 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(175, $51 | 0);
        $1557 = __THREW__;
        __THREW__ = 0;
        if ($1557 & 1) {
         label = 386;
         break L380;
        }
       }
       __THREW__ = 0;
       $1559 = invoke_ii(67, $1553 | 0) | 0;
       $1560 = __THREW__;
       __THREW__ = 0;
       if ($1560 & 1) {
        label = 386;
        break L380;
       }
       HEAP32[$1115 >> 2] = $1559;
       HEAP32[$51 >> 2] = $1559;
       HEAP32[$1119 >> 2] = $1559 + ($1554 << 2);
       $1563 = HEAP32[$args >> 2] | 0;
       $1564 = HEAP32[$1104 >> 2] | 0;
       if (($1563 | 0) != ($1564 | 0)) {
        $$01$i$i378 = $1563;
        $1567 = $1559;
        do {
         HEAP32[$1567 >> 2] = HEAP32[$$01$i$i378 >> 2];
         $1567 = (HEAP32[$1115 >> 2] | 0) + 4 | 0;
         HEAP32[$1115 >> 2] = $1567;
         $$01$i$i378 = $$01$i$i378 + 4 | 0;
        } while (($$01$i$i378 | 0) != ($1564 | 0));
       }
      }
      __THREW__ = 0;
      $1583 = invoke_iiiiii(21, $1526 | 0, $50 | 0, $lhs$0 | 0, $51 | 0, $tailstrict$0$off0 | 0) | 0;
      $1584 = __THREW__;
      __THREW__ = 0;
      if ($1584 & 1) {
       label = 400;
       break L380;
      }
      $1586 = HEAP32[$51 >> 2] | 0;
      $1588 = $1586;
      if ($1586) {
       $1589 = HEAP32[$1115 >> 2] | 0;
       if (($1589 | 0) != ($1586 | 0)) HEAP32[$1115 >> 2] = $1589 + (~(($1589 + -4 - $1588 | 0) >>> 2) << 2);
       __ZdlPv($1586);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1117);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1118);
      $1595 = HEAP32[$args >> 2] | 0;
      $1597 = $1595;
      if (!$1595) $lhs$1 = $1583; else {
       $1598 = HEAP32[$1104 >> 2] | 0;
       if (($1598 | 0) != ($1595 | 0)) HEAP32[$1104 >> 2] = $1598 + (~(($1598 + -4 - $1597 | 0) >>> 2) << 2);
       __ZdlPv($1595);
       $lhs$1 = $1583;
      }
      break;
     }
    case 0:
     {
      __THREW__ = 0;
      invoke_viiiii(5, $end10 | 0, $this | 0, $obj | 0, $op7 | 0, $obj_level | 0);
      $1624 = __THREW__;
      __THREW__ = 0;
      if ($1624 & 1) {
       label = 340;
       break L380;
      }
      $1626 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $52 | 0, $66 | 0);
      $1627 = __THREW__;
      __THREW__ = 0;
      if ($1627 & 1) {
       label = 419;
       break L380;
      }
      $1629 = $72;
      $1634 = HEAP32[$1629 + 4 >> 2] | 0;
      $1635 = $1121;
      HEAP32[$1635 >> 2] = HEAP32[$1629 >> 2];
      HEAP32[$1635 + 4 >> 2] = $1634;
      $1639 = $1120;
      $1644 = HEAP32[$1639 + 4 >> 2] | 0;
      $1645 = $1122;
      HEAP32[$1645 >> 2] = HEAP32[$1639 >> 2];
      HEAP32[$1645 + 4 >> 2] = $1644;
      $1649 = HEAP32[$obj >> 2] | 0;
      __THREW__ = 0;
      $1650 = invoke_ii(67, 60) | 0;
      $1651 = __THREW__;
      __THREW__ = 0;
      if ($1651 & 1) {
       label = 420;
       break L380;
      }
      HEAP32[$1650 >> 2] = 3192;
      __THREW__ = 0;
      invoke_vii(40, $1650 + 4 | 0, $52 | 0);
      $1654 = __THREW__;
      __THREW__ = 0;
      if ($1654 & 1) {
       $$lcssa1067 = $1650;
       label = 417;
       break L380;
      }
      $1656 = $1650 + 16 | 0;
      HEAP32[$1656 >> 2] = HEAP32[$1121 >> 2];
      HEAP32[$1656 + 4 >> 2] = HEAP32[$1121 + 4 >> 2];
      HEAP32[$1656 + 8 >> 2] = HEAP32[$1121 + 8 >> 2];
      HEAP32[$1656 + 12 >> 2] = HEAP32[$1121 + 12 >> 2];
      HEAP32[$1650 + 32 >> 2] = 2;
      HEAP32[$1650 + 36 >> 2] = 0;
      HEAP32[$1650 + 40 >> 2] = 0;
      HEAP32[$1650 + 44 >> 2] = 0;
      HEAP32[$1650 >> 2] = 3372;
      HEAP32[$1650 + 48 >> 2] = $lhs$0;
      HEAP32[$1650 + 52 >> 2] = 2;
      HEAP32[$1650 + 56 >> 2] = $1649;
      HEAP32[$0 >> 2] = $1650;
      $1664 = $1626 + 16 | 0;
      $1665 = HEAP32[$1664 >> 2] | 0;
      if ($1665 >>> 0 < (HEAP32[$1626 + 20 >> 2] | 0) >>> 0) {
       HEAP32[$1665 >> 2] = $1650;
       HEAP32[$1664 >> 2] = (HEAP32[$1664 >> 2] | 0) + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(50, $1626 + 12 | 0, $0 | 0);
       $1673 = __THREW__;
       __THREW__ = 0;
       if ($1673 & 1) {
        label = 420;
        break L380;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1123);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1124);
      $lhs$1 = $1650;
      break;
     }
    default:
     {
      $1682 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($1075, 51050) | 0) == 0;
      __THREW__ = 0;
      $1683 = invoke_iiii(32, $this | 0, $1061 | 0, $obj_level | 0) | 0;
      $1684 = __THREW__;
      __THREW__ = 0;
      $1685 = $1684 & 1;
      if (!$1682) {
       if ($1685) {
        label = 340;
        break L380;
       }
       $1858 = ($1859 | 0) == 11;
       $1860 = HEAP32[$1078 >> 2] | 0;
       __THREW__ = 0;
       invoke_vii(40, $59 | 0, $66 | 0);
       $1861 = __THREW__;
       __THREW__ = 0;
       if ($1861 & 1) {
        label = 340;
        break L380;
       }
       $1864 = $72;
       $1869 = HEAP32[$1864 + 4 >> 2] | 0;
       $1870 = $1088;
       HEAP32[$1870 >> 2] = HEAP32[$1864 >> 2];
       HEAP32[$1870 + 4 >> 2] = $1869;
       $1874 = $1683 + 24 | 0;
       $1879 = HEAP32[$1874 + 4 >> 2] | 0;
       $1880 = $1089;
       HEAP32[$1880 >> 2] = HEAP32[$1874 >> 2];
       HEAP32[$1880 + 4 >> 2] = $1879;
       __THREW__ = 0;
       $1884 = invoke_ii(67, 60) | 0;
       $1885 = __THREW__;
       __THREW__ = 0;
       if ($1885 & 1) {
        label = 498;
        break L380;
       }
       HEAP32[$1884 >> 2] = 3192;
       $1887 = $1884 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $1887 | 0, $59 | 0);
       $1888 = __THREW__;
       __THREW__ = 0;
       if ($1888 & 1) {
        $$lcssa1070 = $1884;
        label = 488;
        break L380;
       }
       $1890 = $1884 + 16 | 0;
       HEAP32[$1890 >> 2] = HEAP32[$1088 >> 2];
       HEAP32[$1890 + 4 >> 2] = HEAP32[$1088 + 4 >> 2];
       HEAP32[$1890 + 8 >> 2] = HEAP32[$1088 + 8 >> 2];
       HEAP32[$1890 + 12 >> 2] = HEAP32[$1088 + 12 >> 2];
       HEAP32[$1884 + 32 >> 2] = 2;
       HEAP32[$1884 + 36 >> 2] = 0;
       HEAP32[$1884 + 40 >> 2] = 0;
       HEAP32[$1884 + 44 >> 2] = 0;
       HEAP32[$1884 >> 2] = 3372;
       HEAP32[$1884 + 48 >> 2] = $lhs$0;
       HEAP32[$1884 + 52 >> 2] = $1858 ? 10 : $1859;
       HEAP32[$1884 + 56 >> 2] = $1683;
       HEAP32[$14 >> 2] = $1884;
       $1898 = $1860 + 16 | 0;
       $1899 = HEAP32[$1898 >> 2] | 0;
       if ($1899 >>> 0 < (HEAP32[$1860 + 20 >> 2] | 0) >>> 0) {
        HEAP32[$1899 >> 2] = $1884;
        HEAP32[$1898 >> 2] = (HEAP32[$1898 >> 2] | 0) + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(50, $1860 + 12 | 0, $14 | 0);
        $1907 = __THREW__;
        __THREW__ = 0;
        if ($1907 & 1) {
         label = 498;
         break L380;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
       if (!$1858) {
        $lhs$1 = $1884;
        break L421;
       }
       $1911 = HEAP32[$1078 >> 2] | 0;
       __THREW__ = 0;
       invoke_vii(40, $60 | 0, $1887 | 0);
       $1912 = __THREW__;
       __THREW__ = 0;
       if ($1912 & 1) {
        label = 340;
        break L380;
       };
       HEAP32[$1090 >> 2] = HEAP32[$1890 >> 2];
       HEAP32[$1090 + 4 >> 2] = HEAP32[$1890 + 4 >> 2];
       HEAP32[$1090 + 8 >> 2] = HEAP32[$1890 + 8 >> 2];
       HEAP32[$1090 + 12 >> 2] = HEAP32[$1890 + 12 >> 2];
       __THREW__ = 0;
       $1914 = invoke_ii(67, 56) | 0;
       $1915 = __THREW__;
       __THREW__ = 0;
       if ($1915 & 1) {
        label = 500;
        break L380;
       }
       HEAP32[$1914 >> 2] = 3192;
       __THREW__ = 0;
       invoke_vii(40, $1914 + 4 | 0, $60 | 0);
       $1918 = __THREW__;
       __THREW__ = 0;
       if ($1918 & 1) {
        $$lcssa1073 = $1914;
        label = 496;
        break L380;
       }
       $1920 = $1914 + 16 | 0;
       HEAP32[$1920 >> 2] = HEAP32[$1090 >> 2];
       HEAP32[$1920 + 4 >> 2] = HEAP32[$1090 + 4 >> 2];
       HEAP32[$1920 + 8 >> 2] = HEAP32[$1090 + 8 >> 2];
       HEAP32[$1920 + 12 >> 2] = HEAP32[$1090 + 12 >> 2];
       HEAP32[$1914 + 32 >> 2] = 19;
       HEAP32[$1914 + 36 >> 2] = 0;
       HEAP32[$1914 + 40 >> 2] = 0;
       HEAP32[$1914 + 44 >> 2] = 0;
       HEAP32[$1914 >> 2] = 3340;
       HEAP32[$1914 + 48 >> 2] = 0;
       HEAP32[$1914 + 52 >> 2] = $1884;
       HEAP32[$15 >> 2] = $1914;
       $1927 = $1911 + 16 | 0;
       $1928 = HEAP32[$1927 >> 2] | 0;
       if ($1928 >>> 0 < (HEAP32[$1911 + 20 >> 2] | 0) >>> 0) {
        HEAP32[$1928 >> 2] = $1914;
        HEAP32[$1927 >> 2] = (HEAP32[$1927 >> 2] | 0) + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(50, $1911 + 12 | 0, $15 | 0);
        $1936 = __THREW__;
        __THREW__ = 0;
        if ($1936 & 1) {
         label = 500;
         break L380;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
       $lhs$1 = $1914;
       break L421;
      }
      if ($1685) {
       label = 340;
       break L380;
      };
      HEAP32[$l >> 2] = 0;
      HEAP32[$l + 4 >> 2] = 0;
      HEAP32[$l + 8 >> 2] = 0;
      HEAP32[$l + 12 >> 2] = 0;
      HEAP32[$l + 16 >> 2] = 0;
      HEAP32[$l + 20 >> 2] = 0;
      HEAP32[$l + 24 >> 2] = 0;
      $1686 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $53 | 0, $l | 0);
      $1687 = __THREW__;
      __THREW__ = 0;
      if ($1687 & 1) {
       label = 463;
       break L380;
      };
      HEAP32[$1079 >> 2] = HEAP32[$1080 >> 2];
      HEAP32[$1079 + 4 >> 2] = HEAP32[$1080 + 4 >> 2];
      HEAP32[$1079 + 8 >> 2] = HEAP32[$1080 + 8 >> 2];
      HEAP32[$1079 + 12 >> 2] = HEAP32[$1080 + 12 >> 2];
      $1689 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_viii(3, $54 | 0, 50213, 3);
      $1690 = __THREW__;
      __THREW__ = 0;
      if ($1690 & 1) {
       label = 465;
       break L380;
      }
      $1692 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($1689, $54) | 0;
      if (($1692 | 0) == ($1689 + 4 | 0)) {
       __THREW__ = 0;
       $1697 = invoke_ii(67, 12) | 0;
       $1698 = __THREW__;
       __THREW__ = 0;
       if ($1698 & 1) {
        label = 466;
        break L380;
       }
       __THREW__ = 0;
       invoke_vii(40, $1697 | 0, $54 | 0);
       $1700 = __THREW__;
       __THREW__ = 0;
       if ($1700 & 1) {
        $$lcssa1074 = $1697;
        label = 433;
        break L380;
       }
       __THREW__ = 0;
       $1702 = invoke_iii(23, $1689 | 0, $54 | 0) | 0;
       $1703 = __THREW__;
       __THREW__ = 0;
       if ($1703 & 1) {
        label = 466;
        break L380;
       }
       HEAP32[$1702 >> 2] = $1697;
       $$0$i418 = $1697;
      } else $$0$i418 = HEAP32[$1692 + 28 >> 2] | 0;
      __THREW__ = 0;
      $1707 = invoke_ii(67, 56) | 0;
      $1708 = __THREW__;
      __THREW__ = 0;
      if ($1708 & 1) {
       label = 466;
       break L380;
      }
      HEAP32[$1707 >> 2] = 3192;
      __THREW__ = 0;
      invoke_vii(40, $1707 + 4 | 0, $53 | 0);
      $1711 = __THREW__;
      __THREW__ = 0;
      if ($1711 & 1) {
       $$lcssa1075 = $1707;
       label = 439;
       break L380;
      }
      $1713 = $1707 + 16 | 0;
      HEAP32[$1713 >> 2] = HEAP32[$1079 >> 2];
      HEAP32[$1713 + 4 >> 2] = HEAP32[$1079 + 4 >> 2];
      HEAP32[$1713 + 8 >> 2] = HEAP32[$1079 + 8 >> 2];
      HEAP32[$1713 + 12 >> 2] = HEAP32[$1079 + 12 >> 2];
      HEAP32[$1707 + 32 >> 2] = 20;
      HEAP32[$1707 + 36 >> 2] = 0;
      HEAP32[$1707 + 40 >> 2] = 0;
      HEAP32[$1707 + 44 >> 2] = 0;
      HEAP32[$1707 >> 2] = 3388;
      HEAP32[$1707 + 48 >> 2] = $$0$i418;
      HEAP32[$1707 + 52 >> 2] = $$0$i418;
      HEAP32[$$byval_copy >> 2] = $1707;
      $1720 = $1686 + 16 | 0;
      $1721 = HEAP32[$1720 >> 2] | 0;
      if ($1721 >>> 0 < (HEAP32[$1686 + 20 >> 2] | 0) >>> 0) {
       HEAP32[$1721 >> 2] = $1707;
       HEAP32[$1720 >> 2] = (HEAP32[$1720 >> 2] | 0) + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(50, $1686 + 12 | 0, $$byval_copy | 0);
       $1729 = __THREW__;
       __THREW__ = 0;
       if ($1729 & 1) {
        label = 466;
        break L380;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
      $1733 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $55 | 0, $l | 0);
      $1734 = __THREW__;
      __THREW__ = 0;
      if ($1734 & 1) {
       label = 463;
       break L380;
      };
      HEAP32[$1081 >> 2] = HEAP32[$1080 >> 2];
      HEAP32[$1081 + 4 >> 2] = HEAP32[$1080 + 4 >> 2];
      HEAP32[$1081 + 8 >> 2] = HEAP32[$1080 + 8 >> 2];
      HEAP32[$1081 + 12 >> 2] = HEAP32[$1080 + 12 >> 2];
      __THREW__ = 0;
      $1736 = invoke_iiii(34, $1733 | 0, $55 | 0, 51094) | 0;
      $1737 = __THREW__;
      __THREW__ = 0;
      if ($1737 & 1) {
       label = 469;
       break L380;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
      $1739 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $56 | 0, $l | 0);
      $1740 = __THREW__;
      __THREW__ = 0;
      if ($1740 & 1) {
       label = 463;
       break L380;
      };
      HEAP32[$1082 >> 2] = HEAP32[$1080 >> 2];
      HEAP32[$1082 + 4 >> 2] = HEAP32[$1080 + 4 >> 2];
      HEAP32[$1082 + 8 >> 2] = HEAP32[$1080 + 8 >> 2];
      HEAP32[$1082 + 12 >> 2] = HEAP32[$1080 + 12 >> 2];
      __THREW__ = 0;
      $1742 = invoke_ii(67, 56) | 0;
      $1743 = __THREW__;
      __THREW__ = 0;
      if ($1743 & 1) {
       label = 470;
       break L380;
      }
      HEAP32[$1742 >> 2] = 3192;
      __THREW__ = 0;
      invoke_vii(40, $1742 + 4 | 0, $56 | 0);
      $1746 = __THREW__;
      __THREW__ = 0;
      if ($1746 & 1) {
       $$lcssa1083 = $1742;
       label = 448;
       break L380;
      }
      $1748 = $1742 + 16 | 0;
      HEAP32[$1748 >> 2] = HEAP32[$1082 >> 2];
      HEAP32[$1748 + 4 >> 2] = HEAP32[$1082 + 4 >> 2];
      HEAP32[$1748 + 8 >> 2] = HEAP32[$1082 + 8 >> 2];
      HEAP32[$1748 + 12 >> 2] = HEAP32[$1082 + 12 >> 2];
      HEAP32[$1742 + 32 >> 2] = 9;
      HEAP32[$1742 + 36 >> 2] = 0;
      HEAP32[$1742 + 40 >> 2] = 0;
      HEAP32[$1742 + 44 >> 2] = 0;
      HEAP32[$1742 >> 2] = 3356;
      HEAP32[$1742 + 48 >> 2] = $1707;
      HEAP32[$1742 + 52 >> 2] = $1736;
      HEAP32[$3 >> 2] = $1742;
      $1755 = $1739 + 16 | 0;
      $1756 = HEAP32[$1755 >> 2] | 0;
      if ($1756 >>> 0 < (HEAP32[$1739 + 20 >> 2] | 0) >>> 0) {
       HEAP32[$1756 >> 2] = $1742;
       HEAP32[$1755 >> 2] = (HEAP32[$1755 >> 2] | 0) + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(50, $1739 + 12 | 0, $3 | 0);
       $1764 = __THREW__;
       __THREW__ = 0;
       if ($1764 & 1) {
        label = 470;
        break L380;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
      __THREW__ = 0;
      $1768 = invoke_ii(67, 8) | 0;
      $1769 = __THREW__;
      __THREW__ = 0;
      if ($1769 & 1) {
       label = 451;
       break L380;
      }
      HEAP32[$1768 >> 2] = $lhs$0;
      HEAP32[$1768 + 4 >> 2] = $1683;
      $1774 = HEAP32[$1078 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $57 | 0, $66 | 0);
      $1775 = __THREW__;
      __THREW__ = 0;
      if ($1775 & 1) {
       $$lcssa1088 = $1768;
       label = 472;
       break L380;
      }
      $1780 = $72;
      $1785 = HEAP32[$1780 + 4 >> 2] | 0;
      $1786 = $1083;
      HEAP32[$1786 >> 2] = HEAP32[$1780 >> 2];
      HEAP32[$1786 + 4 >> 2] = $1785;
      $1790 = $1683 + 24 | 0;
      $1795 = HEAP32[$1790 + 4 >> 2] | 0;
      $1796 = $1084;
      HEAP32[$1796 >> 2] = HEAP32[$1790 >> 2];
      HEAP32[$1796 + 4 >> 2] = $1795;
      HEAP32[$58 >> 2] = 0;
      HEAP32[$1085 >> 2] = 0;
      HEAP32[$1086 >> 2] = 0;
      __THREW__ = 0;
      $1800 = invoke_ii(67, 8) | 0;
      $1801 = __THREW__;
      __THREW__ = 0;
      if ($1801 & 1) {
       $$lcssa1089 = $1768;
       label = 454;
       break L380;
      }
      HEAP32[$1085 >> 2] = $1800;
      HEAP32[$58 >> 2] = $1800;
      HEAP32[$1087 >> 2] = $1800 + 8;
      HEAP32[$1800 >> 2] = HEAP32[$1768 >> 2];
      $1806 = (HEAP32[$1085 >> 2] | 0) + 4 | 0;
      HEAP32[$1085 >> 2] = $1806;
      HEAP32[$1806 >> 2] = HEAP32[$1768 + 4 >> 2];
      HEAP32[$1085 >> 2] = (HEAP32[$1085 >> 2] | 0) + 4;
      __THREW__ = 0;
      $1811 = invoke_iiiiii(21, $1774 | 0, $57 | 0, $1742 | 0, $58 | 0, 0) | 0;
      $1812 = __THREW__;
      __THREW__ = 0;
      if ($1812 & 1) {
       $$lcssa1090 = $1768;
       label = 474;
       break L380;
      }
      $1825 = HEAP32[$58 >> 2] | 0;
      $1827 = $1825;
      if ($1825) {
       $1828 = HEAP32[$1085 >> 2] | 0;
       if (($1828 | 0) != ($1825 | 0)) HEAP32[$1085 >> 2] = $1828 + (~(($1828 + -4 - $1827 | 0) >>> 2) << 2);
       __ZdlPv($1825);
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
      __ZdlPv($1768);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
      $lhs$1 = $1811;
     }
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1076);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1075);
    $lhs$0 = $lhs$1;
   }
   switch (label | 0) {
   case 16:
    {
     $160 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body74$index16Z2D = tempRet0;
     $eh$lpad$body74$indexZ2D = $160;
     break L375;
     break;
    }
   case 265:
    {
     $1135 = ___cxa_find_matching_catch() | 0;
     $1136 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1065);
     $eh$lpad$body74$index16Z2D = $1136;
     $eh$lpad$body74$indexZ2D = $1135;
     break L375;
     break;
    }
   case 269:
    {
     $1148 = ___cxa_find_matching_catch() | 0;
     $1149 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1068);
     $eh$lpad$body74$index16Z2D = $1149;
     $eh$lpad$body74$indexZ2D = $1148;
     break L375;
     break;
    }
   case 274:
    {
     $1163 = ___cxa_find_matching_catch() | 0;
     $1164 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1072);
     $eh$lpad$body74$index16Z2D = $1164;
     $eh$lpad$body74$indexZ2D = $1163;
     break L375;
     break;
    }
   case 278:
    {
     $1171 = $ss6 + 64 | 0;
     $1172 = $ss6 + 8 | 0;
     HEAP32[$1172 >> 2] = 2912;
     $1173 = $ss6 + 12 | 0;
     HEAP32[$ss6 >> 2] = 2952;
     HEAP32[$1171 >> 2] = 2972;
     HEAP32[$ss6 + 4 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(41, $ss6 + 64 | 0, $1173 | 0);
     $1176 = __THREW__;
     __THREW__ = 0;
     if ($1176 & 1) {
      $1189 = ___cxa_find_matching_catch() | 0;
      $$0$i309 = tempRet0;
      $$01$i308 = $1189;
     } else {
      HEAP32[$ss6 + 136 >> 2] = 0;
      HEAP32[$ss6 + 140 >> 2] = -1;
      HEAP32[$ss6 >> 2] = 2892;
      HEAP32[$ss6 + 64 >> 2] = 2932;
      HEAP32[$1172 >> 2] = 2912;
      __THREW__ = 0;
      invoke_vi(173, $1173 | 0);
      $1181 = __THREW__;
      __THREW__ = 0;
      do if ($1181 & 1) {
       $1191 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body$i306$index94Z2D = tempRet0;
       $eh$lpad$body$i306$indexZ2D = $1191;
      } else {
       HEAP32[$1173 >> 2] = 2988;
       $1183 = $ss6 + 44 | 0;
       HEAP32[$1183 >> 2] = 0;
       HEAP32[$1183 + 4 >> 2] = 0;
       HEAP32[$1183 + 8 >> 2] = 0;
       HEAP32[$1183 + 12 >> 2] = 0;
       HEAP32[$ss6 + 60 >> 2] = 24;
       HEAP32[$4 >> 2] = 0;
       HEAP32[$4 + 4 >> 2] = 0;
       HEAP32[$4 + 8 >> 2] = 0;
       __THREW__ = 0;
       invoke_vii(42, $1173 | 0, $4 | 0);
       $1185 = __THREW__;
       __THREW__ = 0;
       if ($1185 & 1) {
        $1187 = ___cxa_find_matching_catch() | 0;
        $1188 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1183);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1173);
        $eh$lpad$body$i306$index94Z2D = $1188;
        $eh$lpad$body$i306$indexZ2D = $1187;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
       $1193 = $ss6 + 8 | 0;
       __THREW__ = 0;
       $1194 = invoke_iiii(29, $1193 | 0, 51052, 23) | 0;
       $1195 = __THREW__;
       __THREW__ = 0;
       L612 : do if ($1195 & 1) label = 299; else {
        $this$idx54$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1197 = $this$idx54$val$idx$val + 8 | 0;
        HEAP32[$40 >> 2] = HEAP32[$1197 >> 2];
        $1199 = $40 + 4 | 0;
        __THREW__ = 0;
        invoke_vii(40, $1199 | 0, $this$idx54$val$idx$val + 12 | 0);
        $1201 = __THREW__;
        __THREW__ = 0;
        if ($1201 & 1) label = 299; else {
         HEAP32[$40 >> 2] = HEAP32[$1197 >> 2];
         $1204 = $40 + 16 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1204 | 0, $this$idx54$val$idx$val + 24 | 0);
         $1206 = __THREW__;
         __THREW__ = 0;
         if ($1206 & 1) {
          $1208 = ___cxa_find_matching_catch() | 0;
          $1209 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1199);
          $eh$lpad$body317$index99Z2D = $1209;
          $eh$lpad$body317$indexZ2D = $1208;
          label = 300;
          break;
         }
         $1210 = $40 + 28 | 0;
         $1211 = $this$idx54$val$idx$val + 36 | 0;
         HEAP32[$1210 >> 2] = HEAP32[$1211 >> 2];
         HEAP32[$1210 + 4 >> 2] = HEAP32[$1211 + 4 >> 2];
         HEAP32[$1210 + 8 >> 2] = HEAP32[$1211 + 8 >> 2];
         HEAP32[$1210 + 12 >> 2] = HEAP32[$1211 + 12 >> 2];
         HEAP32[$40 >> 2] = HEAP32[$1197 >> 2];
         $1213 = HEAP8[$1199 >> 0] | 0;
         $1215 = ($1213 & 1) == 0;
         __THREW__ = 0;
         invoke_iiii(29, $1194 | 0, ($1215 ? $1199 + 1 | 0 : HEAP32[$40 + 12 >> 2] | 0) | 0, ($1215 ? ($1213 & 255) >>> 1 : HEAP32[$40 + 8 >> 2] | 0) | 0) | 0;
         $1225 = __THREW__;
         __THREW__ = 0;
         if ($1225 & 1) {
          $1257 = ___cxa_find_matching_catch() | 0;
          $1258 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1204);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1199);
          $$18 = $1257;
          $$1827 = $1258;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1204);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1199);
         $1227 = ___cxa_allocate_exception(40) | 0;
         $this$idx53$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $1228 = $this$idx53$val$idx$val + 8 | 0;
         HEAP32[$41 >> 2] = HEAP32[$1228 >> 2];
         $1230 = $41 + 4 | 0;
         __THREW__ = 0;
         invoke_vii(40, $1230 | 0, $this$idx53$val$idx$val + 12 | 0);
         $1232 = __THREW__;
         __THREW__ = 0;
         do if ($1232 & 1) {
          $1259 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body323$index104Z2D = tempRet0;
          $eh$lpad$body323$indexZ2D = $1259;
          label = 303;
         } else {
          HEAP32[$41 >> 2] = HEAP32[$1228 >> 2];
          $1235 = $41 + 16 | 0;
          __THREW__ = 0;
          invoke_vii(40, $1235 | 0, $this$idx53$val$idx$val + 24 | 0);
          $1237 = __THREW__;
          __THREW__ = 0;
          if ($1237 & 1) {
           $1239 = ___cxa_find_matching_catch() | 0;
           $1240 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1230);
           $eh$lpad$body323$index104Z2D = $1240;
           $eh$lpad$body323$indexZ2D = $1239;
           label = 303;
           break;
          }
          $1241 = $41 + 28 | 0;
          $1242 = $this$idx53$val$idx$val + 36 | 0;
          HEAP32[$1241 >> 2] = HEAP32[$1242 >> 2];
          HEAP32[$1241 + 4 >> 2] = HEAP32[$1242 + 4 >> 2];
          HEAP32[$1241 + 8 >> 2] = HEAP32[$1242 + 8 >> 2];
          HEAP32[$1241 + 12 >> 2] = HEAP32[$1242 + 12 >> 2];
          HEAP32[$41 >> 2] = HEAP32[$1228 >> 2];
          __THREW__ = 0;
          invoke_vii(43, $42 | 0, $1173 | 0);
          $1244 = __THREW__;
          __THREW__ = 0;
          if ($1244 & 1) {
           $1261 = ___cxa_find_matching_catch() | 0;
           $$147 = 1;
           $$16 = $1261;
           $$1625 = tempRet0;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $1227 | 0, $1235 | 0);
           $1246 = __THREW__;
           __THREW__ = 0;
           do if ($1246 & 1) {
            $$046 = 1;
            label = 305;
           } else {
            $1248 = $1227 + 12 | 0;
            HEAP32[$1248 >> 2] = HEAP32[$1241 >> 2];
            HEAP32[$1248 + 4 >> 2] = HEAP32[$1241 + 4 >> 2];
            HEAP32[$1248 + 8 >> 2] = HEAP32[$1241 + 8 >> 2];
            HEAP32[$1248 + 12 >> 2] = HEAP32[$1241 + 12 >> 2];
            __THREW__ = 0;
            invoke_vii(40, $1227 + 28 | 0, $42 | 0);
            $1250 = __THREW__;
            __THREW__ = 0;
            if ($1250 & 1) {
             $1252 = ___cxa_find_matching_catch() | 0;
             $1253 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1227);
             $$046$lpad$bodyZZ2D = 1;
             $eh$lpad$body329$index109Z2D = $1253;
             $eh$lpad$body329$indexZ2D = $1252;
             break;
            } else {
             __THREW__ = 0;
             invoke_viii(4, $1227 | 0, 8, 172);
             __THREW__ = 0;
             $$046 = 0;
             label = 305;
             break;
            }
           } while (0);
           if ((label | 0) == 305) {
            $1263 = ___cxa_find_matching_catch() | 0;
            $$046$lpad$bodyZZ2D = $$046;
            $eh$lpad$body329$index109Z2D = tempRet0;
            $eh$lpad$body329$indexZ2D = $1263;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
           $$147 = $$046$lpad$bodyZZ2D;
           $$16 = $eh$lpad$body329$indexZ2D;
           $$1625 = $eh$lpad$body329$index109Z2D;
          }
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1235);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1230);
          if ($$147) {
           $$1726447 = $$1625;
           $$17448 = $$16;
          } else {
           $$18 = $$16;
           $$1827 = $$1625;
           break L612;
          }
         } while (0);
         if ((label | 0) == 303) {
          $$1726447 = $eh$lpad$body323$index104Z2D;
          $$17448 = $eh$lpad$body323$indexZ2D;
         }
         ___cxa_free_exception($1227 | 0);
         $$18 = $$17448;
         $$1827 = $$1726447;
        }
       } while (0);
       if ((label | 0) == 299) {
        $1255 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body317$index99Z2D = tempRet0;
        $eh$lpad$body317$indexZ2D = $1255;
        label = 300;
       }
       if ((label | 0) == 300) {
        $$18 = $eh$lpad$body317$indexZ2D;
        $$1827 = $eh$lpad$body317$index99Z2D;
       }
       HEAP32[$ss6 >> 2] = 2892;
       HEAP32[$1171 >> 2] = 2932;
       HEAP32[$1193 >> 2] = 2912;
       HEAP32[$1173 >> 2] = 2988;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1183);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($1173);
       __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1171);
       $$31 = $$18;
       $$3140 = $$1827;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
       ___resumeException($$31 | 0);
      } while (0);
      $$0$i309 = $eh$lpad$body$i306$index94Z2D;
      $$01$i308 = $eh$lpad$body$i306$indexZ2D;
     }
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1171);
     $eh$lpad$body74$index16Z2D = $$0$i309;
     $eh$lpad$body74$indexZ2D = $$01$i308;
     break L375;
     break;
    }
   case 328:
    {
     $1309 = ___cxa_find_matching_catch() | 0;
     $1310 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1075);
     $eh$lpad$body74$index16Z2D = $1310;
     $eh$lpad$body74$indexZ2D = $1309;
     break L375;
     break;
    }
   case 338:
    {
     $1380 = ___cxa_find_matching_catch() | 0;
     $1381 = tempRet0;
     __ZdlPv($$lcssa1069);
     $eh$lpad$body348$index114Z2D = $1381;
     $eh$lpad$body348$indexZ2D = $1380;
     label = 343;
     break;
    }
   case 340:
    {
     $$30 = ___cxa_find_matching_catch() | 0;
     $$3039 = tempRet0;
     break;
    }
   case 341:
    {
     $$19 = ___cxa_find_matching_catch() | 0;
     $$1928 = tempRet0;
     label = 344;
     break;
    }
   case 342:
    {
     $1386 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body348$index114Z2D = tempRet0;
     $eh$lpad$body348$indexZ2D = $1386;
     label = 343;
     break;
    }
   case 355:
    {
     $1465 = ___cxa_find_matching_catch() | 0;
     $1466 = tempRet0;
     __ZdlPv($$lcssa1068);
     $eh$lpad$body356$index119Z2D = $1466;
     $eh$lpad$body356$indexZ2D = $1465;
     label = 362;
     break;
    }
   case 357:
    {
     $$21 = ___cxa_find_matching_catch() | 0;
     $$2130 = tempRet0;
     label = 363;
     break;
    }
   case 358:
    {
     $$20 = ___cxa_find_matching_catch() | 0;
     $$2029 = tempRet0;
     label = 360;
     break;
    }
   case 359:
    {
     $1471 = ___cxa_find_matching_catch() | 0;
     $1472 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
     $$20 = $1471;
     $$2029 = $1472;
     label = 360;
     break;
    }
   case 361:
    {
     $1473 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body356$index119Z2D = tempRet0;
     $eh$lpad$body356$indexZ2D = $1473;
     label = 362;
     break;
    }
   case 368:
    {
     $1488 = ___cxa_find_matching_catch() | 0;
     $1489 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1106);
     $eh$lpad$body364$index125Z2D = $1489;
     $eh$lpad$body364$indexZ2D = $1488;
     label = 377;
     break;
    }
   case 372:
    {
     $1502 = ___cxa_find_matching_catch() | 0;
     $1503 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1109);
     $eh$lpad$body364$index125Z2D = $1503;
     $eh$lpad$body364$indexZ2D = $1502;
     label = 377;
     break;
    }
   case 374:
    {
     $$24 = ___cxa_find_matching_catch() | 0;
     $$2433 = tempRet0;
     label = 406;
     break;
    }
   case 375:
    {
     $1522 = ___cxa_find_matching_catch() | 0;
     $1523 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
     $$24 = $1522;
     $$2433 = $1523;
     label = 406;
     break;
    }
   case 376:
    {
     $1524 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body364$index125Z2D = tempRet0;
     $eh$lpad$body364$indexZ2D = $1524;
     label = 377;
     break;
    }
   case 386:
    {
     $1572 = ___cxa_find_matching_catch() | 0;
     $1573 = tempRet0;
     $1574 = HEAP32[$51 >> 2] | 0;
     $1576 = $1574;
     if ($1574) {
      $1577 = HEAP32[$1115 >> 2] | 0;
      if (($1577 | 0) != ($1574 | 0)) HEAP32[$1115 >> 2] = $1577 + (~(($1577 + -4 - $1576 | 0) >>> 2) << 2);
      __ZdlPv($1574);
     }
     $$22 = $1572;
     $$2231 = $1573;
     label = 404;
     break;
    }
   case 400:
    {
     $1604 = ___cxa_find_matching_catch() | 0;
     $1605 = tempRet0;
     $1606 = HEAP32[$51 >> 2] | 0;
     $1608 = $1606;
     if (!$1606) {
      $$22 = $1604;
      $$2231 = $1605;
      label = 404;
     } else {
      $1609 = HEAP32[$1115 >> 2] | 0;
      if (($1609 | 0) != ($1606 | 0)) HEAP32[$1115 >> 2] = $1609 + (~(($1609 + -4 - $1608 | 0) >>> 2) << 2);
      __ZdlPv($1606);
      $$22 = $1604;
      $$2231 = $1605;
      label = 404;
     }
     break;
    }
   case 417:
    {
     $1675 = ___cxa_find_matching_catch() | 0;
     $1676 = tempRet0;
     __ZdlPv($$lcssa1067);
     $eh$lpad$body412$index131Z2D = $1676;
     $eh$lpad$body412$indexZ2D = $1675;
     label = 421;
     break;
    }
   case 419:
    {
     $$25 = ___cxa_find_matching_catch() | 0;
     $$2534 = tempRet0;
     label = 422;
     break;
    }
   case 420:
    {
     $1679 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body412$index131Z2D = tempRet0;
     $eh$lpad$body412$indexZ2D = $1679;
     label = 421;
     break;
    }
   case 433:
    {
     $1705 = ___cxa_find_matching_catch() | 0;
     $1706 = tempRet0;
     __ZdlPv($$lcssa1074);
     $eh$lpad$body422$index142Z2D = $1706;
     $eh$lpad$body422$indexZ2D = $1705;
     label = 467;
     break;
    }
   case 439:
    {
     $1731 = ___cxa_find_matching_catch() | 0;
     $1732 = tempRet0;
     __ZdlPv($$lcssa1075);
     $eh$lpad$body422$index142Z2D = $1732;
     $eh$lpad$body422$indexZ2D = $1731;
     label = 467;
     break;
    }
   case 448:
    {
     $1766 = ___cxa_find_matching_catch() | 0;
     $1767 = tempRet0;
     __ZdlPv($$lcssa1083);
     $eh$lpad$body343$index148Z2D = $1767;
     $eh$lpad$body343$indexZ2D = $1766;
     label = 471;
     break;
    }
   case 451:
    {
     $1777 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body291$index136Z2D = tempRet0;
     $eh$lpad$body291$indexZ2D = $1777;
     label = 464;
     break;
    }
   case 454:
    {
     $1814 = ___cxa_find_matching_catch() | 0;
     $1815 = tempRet0;
     $1816 = HEAP32[$58 >> 2] | 0;
     $1818 = $1816;
     if ($1816) {
      $1819 = HEAP32[$1085 >> 2] | 0;
      if (($1819 | 0) != ($1816 | 0)) HEAP32[$1085 >> 2] = $1819 + (~(($1819 + -4 - $1818 | 0) >>> 2) << 2);
      __ZdlPv($1816);
     }
     $$27 = $1814;
     $$2736 = $1815;
     $1944 = $$lcssa1089;
     label = 478;
     break;
    }
   case 463:
    {
     $1834 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body291$index136Z2D = tempRet0;
     $eh$lpad$body291$indexZ2D = $1834;
     label = 464;
     break;
    }
   case 465:
    {
     $$26 = ___cxa_find_matching_catch() | 0;
     $$2635 = tempRet0;
     label = 468;
     break;
    }
   case 466:
    {
     $1838 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body422$index142Z2D = tempRet0;
     $eh$lpad$body422$indexZ2D = $1838;
     label = 467;
     break;
    }
   case 469:
    {
     $1840 = ___cxa_find_matching_catch() | 0;
     $1841 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     $$29 = $1840;
     $$2938 = $1841;
     label = 480;
     break;
    }
   case 470:
    {
     $1842 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body343$index148Z2D = tempRet0;
     $eh$lpad$body343$indexZ2D = $1842;
     label = 471;
     break;
    }
   case 472:
    {
     $$28 = ___cxa_find_matching_catch() | 0;
     $$2837 = tempRet0;
     $1857 = $$lcssa1088;
     label = 479;
     break;
    }
   case 474:
    {
     $1846 = ___cxa_find_matching_catch() | 0;
     $1847 = tempRet0;
     $1848 = HEAP32[$58 >> 2] | 0;
     $1850 = $1848;
     if (!$1848) {
      $$27 = $1846;
      $$2736 = $1847;
      $1944 = $$lcssa1090;
      label = 478;
     } else {
      $1851 = HEAP32[$1085 >> 2] | 0;
      if (($1851 | 0) != ($1848 | 0)) HEAP32[$1085 >> 2] = $1851 + (~(($1851 + -4 - $1850 | 0) >>> 2) << 2);
      __ZdlPv($1848);
      $$27 = $1846;
      $$2736 = $1847;
      $1944 = $$lcssa1090;
      label = 478;
     }
     break;
    }
   case 488:
    {
     $1909 = ___cxa_find_matching_catch() | 0;
     $1910 = tempRet0;
     __ZdlPv($$lcssa1070);
     $eh$lpad$body65$index153Z2D = $1910;
     $eh$lpad$body65$indexZ2D = $1909;
     label = 499;
     break;
    }
   case 496:
    {
     $1938 = ___cxa_find_matching_catch() | 0;
     $1939 = tempRet0;
     __ZdlPv($$lcssa1073);
     $eh$lpad$body$index158Z2D = $1939;
     $eh$lpad$body$indexZ2D = $1938;
     label = 501;
     break;
    }
   case 498:
    {
     $1940 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body65$index153Z2D = tempRet0;
     $eh$lpad$body65$indexZ2D = $1940;
     label = 499;
     break;
    }
   case 500:
    {
     $1942 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index158Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $1942;
     label = 501;
     break;
    }
   case 504:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
     STACKTOP = sp;
     return $$0 | 0;
    }
   }
   switch (label | 0) {
   case 343:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($43);
     $$19 = $eh$lpad$body348$indexZ2D;
     $$1928 = $eh$lpad$body348$index114Z2D;
     label = 344;
     break;
    }
   case 360:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     $$21 = $$20;
     $$2130 = $$2029;
     label = 363;
     break;
    }
   case 362:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
     $$21 = $eh$lpad$body356$indexZ2D;
     $$2130 = $eh$lpad$body356$index119Z2D;
     label = 363;
     break;
    }
   case 377:
    {
     $$23 = $eh$lpad$body364$indexZ2D;
     $$2332 = $eh$lpad$body364$index125Z2D;
     label = 405;
     break;
    }
   case 404:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     $$23 = $$22;
     $$2332 = $$2231;
     label = 405;
     break;
    }
   case 421:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$25 = $eh$lpad$body412$indexZ2D;
     $$2534 = $eh$lpad$body412$index131Z2D;
     label = 422;
     break;
    }
   case 464:
    {
     $$29 = $eh$lpad$body291$indexZ2D;
     $$2938 = $eh$lpad$body291$index136Z2D;
     label = 480;
     break;
    }
   case 467:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
     $$26 = $eh$lpad$body422$indexZ2D;
     $$2635 = $eh$lpad$body422$index142Z2D;
     label = 468;
     break;
    }
   case 471:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
     $$29 = $eh$lpad$body343$indexZ2D;
     $$2938 = $eh$lpad$body343$index148Z2D;
     label = 480;
     break;
    }
   case 478:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
     $$28 = $$27;
     $$2837 = $$2736;
     $1857 = $1944;
     label = 479;
     break;
    }
   case 499:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     $$30 = $eh$lpad$body65$indexZ2D;
     $$3039 = $eh$lpad$body65$index153Z2D;
     break;
    }
   case 501:
    {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
     $$30 = $eh$lpad$body$indexZ2D;
     $$3039 = $eh$lpad$body$index158Z2D;
     break;
    }
   }
   if ((label | 0) == 344) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1094);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1095);
    $$30 = $$19;
    $$3039 = $$1928;
   } else if ((label | 0) == 363) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1096);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1101);
    $$30 = $$21;
    $$3039 = $$2130;
   } else if ((label | 0) == 405) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1117);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1118);
    $$24 = $$23;
    $$2433 = $$2332;
    label = 406;
   } else if ((label | 0) == 422) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1123);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1124);
    $$30 = $$25;
    $$3039 = $$2534;
   } else if ((label | 0) == 468) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
    $$29 = $$26;
    $$2938 = $$2635;
    label = 480;
   } else if ((label | 0) == 479) {
    __ZdlPv($1857);
    $$29 = $$28;
    $$2938 = $$2837;
    label = 480;
   }
   if ((label | 0) == 406) {
    $1615 = HEAP32[$args >> 2] | 0;
    $1617 = $1615;
    if (!$1615) {
     $$30 = $$24;
     $$3039 = $$2433;
    } else {
     $1618 = HEAP32[$1104 >> 2] | 0;
     if (($1618 | 0) != ($1615 | 0)) HEAP32[$1104 >> 2] = $1618 + (~(($1618 + -4 - $1617 | 0) >>> 2) << 2);
     __ZdlPv($1615);
     $$30 = $$24;
     $$3039 = $$2433;
    }
   } else if ((label | 0) == 480) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
    $$30 = $$29;
    $$3039 = $$2938;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1076);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1075);
   $$31 = $$30;
   $$3140 = $$3039;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
   ___resumeException($$31 | 0);
  }
 } while (0);
 if ((label | 0) == 17) {
  $162 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body74$index16Z2D = tempRet0;
  $eh$lpad$body74$indexZ2D = $162;
 }
 $$31 = $eh$lpad$body74$indexZ2D;
 $$3140 = $eh$lpad$body74$index16Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
 ___resumeException($$31 | 0);
 return 0;
}
function __ZN12_GLOBAL__N_16Parser13parseTerminalEj($this, $obj_level) {
 $this = $this | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i253 = 0, $$0$i311 = 0, $$0$i404 = 0, $$0$i418 = 0, $$0$i90 = 0, $$01$i = 0, $$01$i$i326 = 0, $$01$i310 = 0, $$014471 = 0, $$03 = 0, $$043 = 0, $$045 = 0, $$05 = 0, $$07472 = 0, $$1024478 = 0, $$10479 = 0, $$11 = 0, $$1125 = 0, $$115474 = 0, $$12 = 0, $$1210 = 0, $$1226 = 0, $$13 = 0, $$1327 = 0, $$1411 = 0, $$1428 = 0, $$15 = 0, $$1529 = 0, $$1612483 = 0, $$1630482 = 0, $$17 = 0, $$1731 = 0, $$1813 = 0, $$1832 = 0, $$18475 = 0, $$19 = 0, $$1933 = 0, $$2 = 0, $$20 = 0, $$2034 = 0, $$21 = 0, $$2135 = 0, $$216 = 0, $$22 = 0, $$2236 = 0, $$23 = 0, $$2337 = 0, $$24 = 0, $$2438 = 0, $$25 = 0, $$2539 = 0, $$2640486 = 0, $$26487 = 0, $$27 = 0, $$2741 = 0, $$28 = 0, $$2842 = 0, $$29 = 0, $$3 = 0, $$317 = 0, $$4 = 0, $$418 = 0, $$5 = 0, $$519 = 0, $$6 = 0, $$620 = 0, $$7 = 0, $$721 = 0, $$8 = 0, $$822 = 0, $$9 = 0, $$923 = 0, $$pn = 0, $$pre$phi512Z2D = 0, $$pre$phi514Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1002 = 0, $1004 = 0, $1006 = 0, $1008 = 0, $1009 = 0, $1011 = 0, $1013 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $102 = 0, $1020 = 0, $1026 = 0, $103 = 0, $1030 = 0, $1035 = 0, $1036 = 0, $104 = 0, $1041 = 0, $1046 = 0, $1047 = 0, $105 = 0, $1051 = 0, $1057 = 0, $1058 = 0, $1061 = 0, $1063 = 0, $1064 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1072 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $1081 = 0, $1082 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1091 = 0, $1093 = 0, $1094 = 0, $11 = 0, $1100 = 0, $1103 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1114 = 0, $1120 = 0, $1123 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1132 = 0, $1137 = 0, $1138 = 0, $114 = 0, $1141 = 0, $1142 = 0, $1147 = 0, $1148 = 0, $1153 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1170 = 0.0, $1171 = 0, $1172 = 0, $1175 = 0, $1177 = 0, $118 = 0, $1183 = 0, $1184 = 0, $119 = 0, $1192 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1204 = 0, $1209 = 0, $1210 = 0, $1215 = 0, $1220 = 0, $1221 = 0, $1225 = 0, $1227 = 0, $1228 = 0, $1230 = 0, $1232 = 0, $1233 = 0, $1235 = 0, $1236 = 0, $1239 = 0, $1240 = 0, $1245 = 0, $1246 = 0, $125 = 0, $1251 = 0, $1256 = 0, $1257 = 0, $1261 = 0, $1262 = 0, $1265 = 0, $1267 = 0, $127 = 0, $1273 = 0, $1274 = 0, $1282 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1293 = 0, $1294 = 0, $1299 = 0, $13 = 0, $1300 = 0, $1305 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1315 = 0, $1316 = 0, $1319 = 0, $1321 = 0, $1327 = 0, $1328 = 0, $1336 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1343 = 0, $1344 = 0, $1347 = 0, $1348 = 0, $1353 = 0, $1354 = 0, $1359 = 0, $136 = 0, $1364 = 0, $1365 = 0, $1369 = 0, $1370 = 0, $1373 = 0, $1375 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1389 = 0, $139 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1395 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1402 = 0, $1403 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1414 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1424 = 0, $1425 = 0, $1427 = 0, $1428 = 0, $1430 = 0, $1431 = 0, $1433 = 0, $1435 = 0, $1436 = 0, $1439 = 0, $144 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1445 = 0, $1446 = 0, $1452 = 0, $1453 = 0, $146 = 0, $1461 = 0, $1463 = 0, $1466 = 0, $1468 = 0, $1470 = 0, $1473 = 0, $1476 = 0, $1477 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1486 = 0, $1487 = 0, $1492 = 0, $1497 = 0, $1498 = 0, $15 = 0, $1502 = 0, $1503 = 0, $1505 = 0, $1506 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1511 = 0, $1513 = 0, $1514 = 0, $1517 = 0, $1519 = 0, $1520 = 0, $1521 = 0, $1523 = 0, $1524 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1539 = 0, $1541 = 0, $1544 = 0, $1546 = 0, $1548 = 0, $155 = 0, $1552 = 0, $1553 = 0, $1555 = 0, $1557 = 0, $1559 = 0, $156 = 0, $1561 = 0, $1562 = 0, $1564 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1573 = 0, $1574 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1585 = 0, $1590 = 0, $1591 = 0, $1595 = 0, $1596 = 0, $1598 = 0, $16 = 0, $160 = 0, $1603 = 0, $1604 = 0, $1606 = 0, $1608 = 0, $1609 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1617 = 0, $1619 = 0, $162 = 0, $1626 = 0, $1627 = 0, $163 = 0, $1635 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $1641 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1654 = 0, $1655 = 0, $1660 = 0, $1665 = 0, $1666 = 0, $1670 = 0, $1671 = 0, $1676 = 0, $1677 = 0, $1679 = 0, $1681 = 0, $1682 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $169 = 0, $1690 = 0, $1692 = 0, $1699 = 0, $17 = 0, $1700 = 0, $1708 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1715 = 0, $1716 = 0, $1719 = 0, $1720 = 0, $1725 = 0, $1726 = 0, $1731 = 0, $1736 = 0, $1737 = 0, $1741 = 0, $1742 = 0, $1745 = 0, $1747 = 0, $175 = 0, $1752 = 0, $1753 = 0, $176 = 0, $1761 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1768 = 0, $1769 = 0, $1772 = 0, $1773 = 0, $1778 = 0, $1779 = 0, $1784 = 0, $1789 = 0, $1790 = 0, $1794 = 0, $1795 = 0, $1798 = 0, $18 = 0, $180 = 0, $1800 = 0, $1805 = 0, $1806 = 0, $1814 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1820 = 0, $1821 = 0, $1824 = 0, $1825 = 0, $1827 = 0, $1828 = 0, $1834 = 0, $1835 = 0, $1837 = 0, $1838 = 0, $1843 = 0, $1844 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $185 = 0, $1850 = 0, $186 = 0, $19 = 0, $191 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $22 = 0, $220 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $236 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $249 = 0, $25 = 0, $251 = 0, $255 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $264 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $271 = 0, $273 = 0, $274 = 0, $276 = 0, $28 = 0, $280 = 0, $285 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $295 = 0, $296 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $319 = 0, $32 = 0, $324 = 0, $325 = 0, $327 = 0, $329 = 0, $33 = 0, $330 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $338 = 0, $34 = 0, $340 = 0, $347 = 0, $348 = 0, $35 = 0, $356 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $362 = 0, $364 = 0, $365 = 0, $366 = 0, $368 = 0, $369 = 0, $37 = 0, $376 = 0, $377 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $384 = 0, $39 = 0, $390 = 0, $392 = 0, $393 = 0, $399 = 0, $4 = 0, $40 = 0, $403 = 0, $404 = 0, $406 = 0, $408 = 0, $41 = 0, $410 = 0, $413 = 0, $415 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $422 = 0, $424 = 0, $425 = 0, $427 = 0, $43 = 0, $431 = 0, $437 = 0, $438 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $444 = 0, $445 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $452 = 0, $454 = 0, $46 = 0, $461 = 0, $462 = 0, $47 = 0, $470 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $48 = 0, $480 = 0, $481 = 0, $483 = 0, $487 = 0, $49 = 0, $492 = 0, $493 = 0, $498 = 0, $5 = 0, $50 = 0, $503 = 0, $504 = 0, $508 = 0, $51 = 0, $510 = 0, $511 = 0, $517 = 0, $52 = 0, $522 = 0, $523 = 0, $525 = 0, $526 = 0, $527 = 0, $529 = 0, $53 = 0, $530 = 0, $536 = 0, $538 = 0, $539 = 0, $54 = 0, $545 = 0, $547 = 0, $549 = 0, $55 = 0, $551 = 0, $553 = 0, $555 = 0, $556 = 0, $557 = 0, $56 = 0, $560 = 0, $566 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $572 = 0, $574 = 0, $575 = 0, $576 = 0, $579 = 0, $58 = 0, $585 = 0, $586 = 0, $588 = 0, $59 = 0, $590 = 0, $592 = 0, $594 = 0, $595 = 0, $596 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $606 = 0, $607 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $613 = 0, $614 = 0, $62 = 0, $620 = 0, $622 = 0, $623 = 0, $629 = 0, $63 = 0, $630 = 0, $632 = 0, $633 = 0, $634 = 0, $636 = 0, $637 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $644 = 0, $646 = 0, $65 = 0, $653 = 0, $654 = 0, $662 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $67 = 0, $674 = 0, $675 = 0, $677 = 0, $681 = 0, $686 = 0, $687 = 0, $692 = 0, $697 = 0, $698 = 0, $7 = 0, $70 = 0, $702 = 0, $704 = 0, $705 = 0, $711 = 0, $712 = 0, $715 = 0, $72 = 0, $720 = 0, $721 = 0, $723 = 0, $724 = 0, $725 = 0, $727 = 0, $728 = 0, $734 = 0, $736 = 0, $737 = 0, $74 = 0, $745 = 0, $747 = 0, $748 = 0, $749 = 0, $752 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $762 = 0, $764 = 0, $765 = 0, $766 = 0, $769 = 0, $77 = 0, $777 = 0, $778 = 0, $779 = 0, $782 = 0, $787 = 0, $789 = 0, $79 = 0, $791 = 0, $793 = 0, $794 = 0, $795 = 0, $797 = 0, $799 = 0, $8 = 0, $800 = 0, $801 = 0, $803 = 0, $805 = 0, $806 = 0, $808 = 0, $81 = 0, $810 = 0, $812 = 0, $814 = 0, $815 = 0, $817 = 0, $819 = 0, $82 = 0, $821 = 0, $822 = 0, $825 = 0, $827 = 0, $828 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $850 = 0, $854 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $864 = 0, $872 = 0, $876 = 0, $878 = 0, $88 = 0, $881 = 0, $885 = 0, $887 = 0, $888 = 0, $889 = 0, $891 = 0, $893 = 0, $894 = 0, $896 = 0, $9 = 0, $900 = 0, $905 = 0, $908 = 0, $912 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $922 = 0, $930 = 0, $934 = 0, $936 = 0, $939 = 0, $94 = 0, $940 = 0, $942 = 0, $944 = 0, $947 = 0, $949 = 0, $95 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $956 = 0, $958 = 0, $959 = 0, $961 = 0, $965 = 0, $97 = 0, $971 = 0, $972 = 0, $974 = 0, $975 = 0, $976 = 0, $979 = 0, $984 = 0, $986 = 0, $988 = 0, $990 = 0, $991 = 0, $992 = 0, $994 = 0, $996 = 0, $997 = 0, $999 = 0, $eh$lpad$body$i$index62Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i308$index82Z2D = 0, $eh$lpad$body$i308$indexZ2D = 0, $eh$lpad$body121$index28Z2D = 0, $eh$lpad$body121$indexZ2D = 0, $eh$lpad$body130$index47Z2D = 0, $eh$lpad$body130$indexZ2D = 0, $eh$lpad$body138$index41Z2D = 0, $eh$lpad$body138$indexZ2D = 0, $eh$lpad$body201$index57Z2D = 0, $eh$lpad$body201$indexZ2D = 0, $eh$lpad$body212$index52Z2D = 0, $eh$lpad$body212$indexZ2D = 0, $eh$lpad$body275$index72Z2D = 0, $eh$lpad$body275$indexZ2D = 0, $eh$lpad$body359$index87Z2D = 0, $eh$lpad$body359$indexZ2D = 0, $eh$lpad$body367$index92Z2D = 0, $eh$lpad$body367$indexZ2D = 0, $eh$lpad$body373$index97Z2D = 0, $eh$lpad$body373$indexZ2D = 0, $eh$lpad$body380$index102Z2D = 0, $eh$lpad$body380$indexZ2D = 0, $eh$lpad$body386$index112Z2D = 0, $eh$lpad$body386$indexZ2D = 0, $eh$lpad$body392$index122Z2D = 0, $eh$lpad$body392$indexZ2D = 0, $eh$lpad$body408$index128Z2D = 0, $eh$lpad$body408$indexZ2D = 0, $eh$lpad$body422$index135Z2D = 0, $eh$lpad$body422$indexZ2D = 0, $eh$lpad$body434$index141Z2D = 0, $eh$lpad$body434$indexZ2D = 0, $eh$lpad$body440$index146Z2D = 0, $eh$lpad$body440$indexZ2D = 0, $eh$lpad$body448$index107Z2D = 0, $eh$lpad$body448$indexZ2D = 0, $eh$lpad$body456$index117Z2D = 0, $eh$lpad$body456$indexZ2D = 0, $eh$lpad$body53$index3Z2D = 0, $eh$lpad$body53$indexZ2D = 0, $eh$lpad$body60$index10Z2D = 0, $eh$lpad$body60$indexZ2D = 0, $eh$lpad$body78$index16Z2D = 0, $eh$lpad$body78$indexZ2D = 0, $eh$lpad$body83$index22Z2D = 0, $eh$lpad$body83$indexZ2D = 0, $eh$lpad$body94$index34Z2D = 0, $eh$lpad$body94$indexZ2D = 0, $elements = 0, $file = 0, $file3 = 0, $first = 0, $got_comma$0$off0 = 0, $id_token = 0, $l = 0, $last = 0, $maybe_if = 0, $next = 0, $obj = 0, $ss = 0, $ss2 = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i118 = 0, $this$idx$val$idx$val$i284 = 0, $this$idx$val$idx$val$i300 = 0, $this$idx$val$idx$val$i57 = 0, $this$idx$val$idx$val$i75 = 0, $this$idx47$val$idx$val = 0, $this$idx48$val$idx$val = 0, $this$idx49$val$idx$val = 0, $tok = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1984 | 0;
 $0 = sp + 784 | 0;
 $1 = sp + 752 | 0;
 $2 = sp + 692 | 0;
 $3 = sp + 44 | 0;
 $4 = sp + 688 | 0;
 $5 = sp + 1844 | 0;
 $6 = sp + 1932 | 0;
 $7 = sp + 160 | 0;
 $8 = sp + 164 | 0;
 $9 = sp + 168 | 0;
 $10 = sp + 172 | 0;
 $11 = sp + 176 | 0;
 $12 = sp + 188 | 0;
 $13 = sp + 200 | 0;
 $14 = sp + 204 | 0;
 $15 = sp + 208 | 0;
 $tok = sp + 212 | 0;
 $16 = sp + 256 | 0;
 $17 = sp + 268 | 0;
 $obj = sp + 280 | 0;
 $18 = sp + 284 | 0;
 $next = sp + 328 | 0;
 $19 = sp + 372 | 0;
 $20 = sp + 416 | 0;
 $21 = sp + 444 | 0;
 $first = sp + 456 | 0;
 $22 = sp + 460 | 0;
 $l = sp + 504 | 0;
 $23 = sp + 532 | 0;
 $id_token = sp + 576 | 0;
 $24 = sp + 620 | 0;
 $25 = sp + 648 | 0;
 $26 = sp + 660 | 0;
 $27 = sp + 1720 | 0;
 $28 = sp + 1744 | 0;
 $maybe_if = sp + 1800 | 0;
 $29 = sp + 1848 | 0;
 $30 = sp + 1904 | 0;
 $31 = sp + 1936 | 0;
 $32 = sp + 1964 | 0;
 $last = sp + 788 | 0;
 $33 = sp + 832 | 0;
 $34 = sp + 860 | 0;
 $35 = sp + 872 | 0;
 $36 = sp + 900 | 0;
 $37 = sp + 928 | 0;
 $38 = sp + 956 | 0;
 $ss = sp + 968 | 0;
 $39 = sp + 1112 | 0;
 $elements = sp + 1124 | 0;
 $40 = sp + 1136 | 0;
 $41 = sp + 1180 | 0;
 $42 = sp + 1224 | 0;
 $43 = sp + 1268 | 0;
 $ss2 = sp + 1312 | 0;
 $44 = sp + 1456 | 0;
 $45 = sp + 1468 | 0;
 $46 = sp + 1472 | 0;
 $47 = sp + 1500 | 0;
 $48 = sp + 1512 | 0;
 $49 = sp + 1556 | 0;
 $50 = sp + 1584 | 0;
 $51 = sp + 1612 | 0;
 $52 = sp + 1624 | 0;
 $53 = sp + 1652 | 0;
 $54 = sp + 1680 | 0;
 $file = sp + 116 | 0;
 $55 = sp + 48 | 0;
 $56 = sp + 76 | 0;
 $file3 = sp;
 $57 = sp + 88 | 0;
 $58 = sp + 1708 | 0;
 $59 = sp + 1732 | 0;
 $60 = sp + 696 | 0;
 $61 = sp + 1788 | 0;
 $62 = sp + 724 | 0;
 $63 = sp + 1876 | 0;
 $64 = sp + 756 | 0;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $65 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $67 = $tok + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($67, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $70 = $tok + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $70 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $72 = __THREW__;
 __THREW__ = 0;
 if ($72 & 1) {
  $74 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
  ___resumeException($74 | 0);
 }
 $76 = $tok + 28 | 0;
 $77 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$76 >> 2] = HEAP32[$77 >> 2];
 HEAP32[$76 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
 HEAP32[$76 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
 HEAP32[$76 + 12 >> 2] = HEAP32[$77 + 12 >> 2];
 HEAP32[$tok >> 2] = HEAP32[$65 >> 2];
 $79 = HEAP32[$this >> 2] | 0;
 $81 = HEAP32[$79 + 4 >> 2] | 0;
 $82 = $81 + 4 | 0;
 $84 = HEAP32[$81 >> 2] | 0;
 HEAP32[$84 + 4 >> 2] = HEAP32[$82 >> 2];
 HEAP32[HEAP32[$82 >> 2] >> 2] = $84;
 $88 = $79 + 8 | 0;
 HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81 + 12 | 0);
 __ZdlPv($81);
 L4 : do switch (HEAP32[$tok >> 2] | 0) {
 case 27:
 case 26:
 case 10:
 case 9:
 case 13:
 case 24:
 case 23:
 case 20:
 case 19:
 case 18:
 case 16:
 case 15:
 case 7:
 case 5:
 case 4:
 case 3:
 case 1:
  {
   $94 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 51444, 16);
   $95 = __THREW__;
   __THREW__ = 0;
   if ($95 & 1) {
    $100 = ___cxa_find_matching_catch() | 0;
    $$014471 = tempRet0;
    $$07472 = $100;
   } else {
    __THREW__ = 0;
    invoke_viii(7, $94 | 0, $tok | 0, $16 | 0);
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) $$043 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $94 | 0, 8, 172);
     __THREW__ = 0;
     $$043 = 0;
    }
    $102 = ___cxa_find_matching_catch() | 0;
    $103 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
    if ($$043) {
     $$014471 = $103;
     $$07472 = $102;
    } else {
     $$28 = $102;
     $$2842 = $103;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     ___resumeException($$28 | 0);
    }
   }
   ___cxa_free_exception($94 | 0);
   $$28 = $$07472;
   $$2842 = $$014471;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
   ___resumeException($$28 | 0);
   break;
  }
 case 31:
  {
   $104 = ___cxa_allocate_exception(40) | 0;
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 51461, 23);
   $105 = __THREW__;
   __THREW__ = 0;
   L27 : do if ($105 & 1) {
    $116 = ___cxa_find_matching_catch() | 0;
    $$115474 = tempRet0;
    $$18475 = $116;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $104 | 0, $70 | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    do if ($107 & 1) $$045 = 1; else {
     $109 = $104 + 12 | 0;
     HEAP32[$109 >> 2] = HEAP32[$76 >> 2];
     HEAP32[$109 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
     HEAP32[$109 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
     HEAP32[$109 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $104 + 28 | 0, $17 | 0);
     $111 = __THREW__;
     __THREW__ = 0;
     if ($111 & 1) {
      $113 = ___cxa_find_matching_catch() | 0;
      $114 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($104);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      $$115474 = $114;
      $$18475 = $113;
      break L27;
     } else {
      __THREW__ = 0;
      invoke_viii(4, $104 | 0, 8, 172);
      __THREW__ = 0;
      $$045 = 0;
      break;
     }
    } while (0);
    $118 = ___cxa_find_matching_catch() | 0;
    $119 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    if ($$045) {
     $$115474 = $119;
     $$18475 = $118;
    } else {
     $$28 = $118;
     $$2842 = $119;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     ___resumeException($$28 | 0);
    }
   } while (0);
   ___cxa_free_exception($104 | 0);
   $$28 = $$18475;
   $$2842 = $$115474;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
   ___resumeException($$28 | 0);
   break;
  }
 case 0:
  {
   __THREW__ = 0;
   invoke_viiiii(5, $18 | 0, $this | 0, $obj | 0, $tok | 0, $obj_level | 0);
   $120 = __THREW__;
   __THREW__ = 0;
   if ($120 & 1) label = 20; else {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18 + 4 | 0);
    $$2 = HEAP32[$obj >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    STACKTOP = sp;
    return $$2 | 0;
   }
   break;
  }
 case 2:
  {
   $this$idx49$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $127 = $this$idx49$val$idx$val + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$127 >> 2];
   $129 = $next + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $129 | 0, $this$idx49$val$idx$val + 12 | 0);
   $131 = __THREW__;
   __THREW__ = 0;
   if ($131 & 1) label = 20; else {
    HEAP32[$next >> 2] = HEAP32[$127 >> 2];
    $134 = $next + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $134 | 0, $this$idx49$val$idx$val + 24 | 0);
    $136 = __THREW__;
    __THREW__ = 0;
    if ($136 & 1) {
     $138 = ___cxa_find_matching_catch() | 0;
     $139 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
     $eh$lpad$body53$index3Z2D = $139;
     $eh$lpad$body53$indexZ2D = $138;
     break L4;
    }
    $140 = $next + 28 | 0;
    $141 = $this$idx49$val$idx$val + 36 | 0;
    HEAP32[$140 >> 2] = HEAP32[$141 >> 2];
    HEAP32[$140 + 4 >> 2] = HEAP32[$141 + 4 >> 2];
    HEAP32[$140 + 8 >> 2] = HEAP32[$141 + 8 >> 2];
    HEAP32[$140 + 12 >> 2] = HEAP32[$141 + 12 >> 2];
    $142 = HEAP32[$127 >> 2] | 0;
    HEAP32[$next >> 2] = $142;
    L47 : do if (($142 | 0) == 3) {
     $this$idx$val$idx$val$i57 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $144 = $this$idx$val$idx$val$i57 + 8 | 0;
     HEAP32[$19 >> 2] = HEAP32[$144 >> 2];
     $146 = $19 + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $146 | 0, $this$idx$val$idx$val$i57 + 12 | 0);
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) label = 32; else {
      HEAP32[$19 >> 2] = HEAP32[$144 >> 2];
      $151 = $19 + 16 | 0;
      __THREW__ = 0;
      invoke_vii(40, $151 | 0, $this$idx$val$idx$val$i57 + 24 | 0);
      $153 = __THREW__;
      __THREW__ = 0;
      if ($153 & 1) {
       $155 = ___cxa_find_matching_catch() | 0;
       $156 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($146);
       $eh$lpad$body60$index10Z2D = $156;
       $eh$lpad$body60$indexZ2D = $155;
       label = 33;
       break;
      }
      $157 = $19 + 28 | 0;
      $158 = $this$idx$val$idx$val$i57 + 36 | 0;
      HEAP32[$157 >> 2] = HEAP32[$158 >> 2];
      HEAP32[$157 + 4 >> 2] = HEAP32[$158 + 4 >> 2];
      HEAP32[$157 + 8 >> 2] = HEAP32[$158 + 8 >> 2];
      HEAP32[$157 + 12 >> 2] = HEAP32[$158 + 12 >> 2];
      HEAP32[$19 >> 2] = HEAP32[$144 >> 2];
      $160 = HEAP32[$this >> 2] | 0;
      $162 = HEAP32[$160 + 4 >> 2] | 0;
      $163 = $162 + 4 | 0;
      $165 = HEAP32[$162 >> 2] | 0;
      HEAP32[$165 + 4 >> 2] = HEAP32[$163 >> 2];
      HEAP32[HEAP32[$163 >> 2] >> 2] = $165;
      $169 = $160 + 8 | 0;
      HEAP32[$169 >> 2] = (HEAP32[$169 >> 2] | 0) + -1;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($162 + 24 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($162 + 12 | 0);
      __ZdlPv($162);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($151);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($146);
      $175 = HEAP32[$this + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $20 | 0, $70 | 0);
      $176 = __THREW__;
      __THREW__ = 0;
      if ($176 & 1) label = 32; else {
       $180 = $76;
       $185 = HEAP32[$180 + 4 >> 2] | 0;
       $186 = $20 + 12 | 0;
       HEAP32[$186 >> 2] = HEAP32[$180 >> 2];
       HEAP32[$186 + 4 >> 2] = $185;
       $191 = $next + 36 | 0;
       $196 = HEAP32[$191 + 4 >> 2] | 0;
       $197 = $20 + 20 | 0;
       HEAP32[$197 >> 2] = HEAP32[$191 >> 2];
       HEAP32[$197 + 4 >> 2] = $196;
       HEAP32[$21 >> 2] = 0;
       HEAP32[$21 + 4 >> 2] = 0;
       HEAP32[$21 + 8 >> 2] = 0;
       __THREW__ = 0;
       $203 = invoke_iiii(36, $175 | 0, $20 | 0, $21 | 0) | 0;
       $204 = __THREW__;
       __THREW__ = 0;
       if ($204 & 1) {
        $208 = ___cxa_find_matching_catch() | 0;
        $209 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
        $$20 = $208;
        $$2034 = $209;
        break;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
        $$12 = $203;
        label = 323;
        break;
       }
      }
     }
    } else {
     __THREW__ = 0;
     $210 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
     $211 = __THREW__;
     __THREW__ = 0;
     if ($211 & 1) label = 32; else {
      HEAP32[$first >> 2] = $210;
      $this$idx48$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
      $213 = $this$idx48$val$idx$val + 8 | 0;
      HEAP32[$22 >> 2] = HEAP32[$213 >> 2];
      $215 = $22 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $215 | 0, $this$idx48$val$idx$val + 12 | 0);
      $217 = __THREW__;
      __THREW__ = 0;
      if ($217 & 1) label = 32; else {
       HEAP32[$22 >> 2] = HEAP32[$213 >> 2];
       $220 = $22 + 16 | 0;
       __THREW__ = 0;
       invoke_vii(40, $220 | 0, $this$idx48$val$idx$val + 24 | 0);
       $222 = __THREW__;
       __THREW__ = 0;
       if ($222 & 1) {
        $224 = ___cxa_find_matching_catch() | 0;
        $225 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($215);
        $eh$lpad$body60$index10Z2D = $225;
        $eh$lpad$body60$indexZ2D = $224;
        label = 33;
        break;
       }
       $226 = $22 + 28 | 0;
       $227 = $this$idx48$val$idx$val + 36 | 0;
       HEAP32[$226 >> 2] = HEAP32[$227 >> 2];
       HEAP32[$226 + 4 >> 2] = HEAP32[$227 + 4 >> 2];
       HEAP32[$226 + 8 >> 2] = HEAP32[$227 + 8 >> 2];
       HEAP32[$226 + 12 >> 2] = HEAP32[$227 + 12 >> 2];
       $228 = HEAP32[$213 >> 2] | 0;
       HEAP32[$22 >> 2] = $228;
       HEAP32[$next >> 2] = $228;
       if (!(HEAP8[$129 >> 0] & 1)) {
        HEAP8[$129 + 1 >> 0] = 0;
        HEAP8[$129 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 12 >> 2] >> 0] = 0;
        HEAP32[$next + 8 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $129 | 0, 0);
       $236 = __THREW__;
       __THREW__ = 0;
       if ($236 & 1) {
        $238 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($238);
       };
       HEAP32[$129 >> 2] = HEAP32[$215 >> 2];
       HEAP32[$129 + 4 >> 2] = HEAP32[$215 + 4 >> 2];
       HEAP32[$129 + 8 >> 2] = HEAP32[$215 + 8 >> 2];
       HEAP32[$215 >> 2] = 0;
       HEAP32[$215 + 4 >> 2] = 0;
       HEAP32[$215 + 8 >> 2] = 0;
       $240 = $next + 16 | 0;
       $241 = $22 + 16 | 0;
       if (!(HEAP8[$240 >> 0] & 1)) {
        HEAP8[$240 + 1 >> 0] = 0;
        HEAP8[$240 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$next + 24 >> 2] >> 0] = 0;
        HEAP32[$next + 20 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $240 | 0, 0);
       $249 = __THREW__;
       __THREW__ = 0;
       if ($249 & 1) {
        $251 = ___cxa_find_matching_catch(0) | 0;
        ___clang_call_terminate($251);
       };
       HEAP32[$240 >> 2] = HEAP32[$241 >> 2];
       HEAP32[$240 + 4 >> 2] = HEAP32[$241 + 4 >> 2];
       HEAP32[$240 + 8 >> 2] = HEAP32[$241 + 8 >> 2];
       HEAP32[$241 >> 2] = 0;
       HEAP32[$241 + 4 >> 2] = 0;
       HEAP32[$241 + 8 >> 2] = 0;
       HEAP32[$140 >> 2] = HEAP32[$226 >> 2];
       HEAP32[$140 + 4 >> 2] = HEAP32[$226 + 4 >> 2];
       HEAP32[$140 + 8 >> 2] = HEAP32[$226 + 8 >> 2];
       HEAP32[$140 + 12 >> 2] = HEAP32[$226 + 12 >> 2];
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($220);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($215);
       if ((HEAP32[$next >> 2] | 0) != 18) {
        HEAP32[$elements >> 2] = 0;
        $825 = $elements + 4 | 0;
        HEAP32[$825 >> 2] = 0;
        HEAP32[$elements + 8 >> 2] = 0;
        $827 = $elements + 8 | 0;
        __THREW__ = 0;
        invoke_vii(56, $elements | 0, $first | 0);
        $828 = __THREW__;
        __THREW__ = 0;
        L79 : do if ($828 & 1) label = 262; else {
         $830 = $40 + 4 | 0;
         $831 = $40 + 16 | 0;
         $832 = $40 + 28 | 0;
         $833 = $129 + 1 | 0;
         $834 = $40 + 16 | 0;
         $835 = $240 + 1 | 0;
         $836 = $41 + 4 | 0;
         $837 = $41 + 16 | 0;
         $838 = $41 + 28 | 0;
         $839 = $42 + 4 | 0;
         $840 = $42 + 16 | 0;
         $841 = $42 + 28 | 0;
         $842 = $42 + 16 | 0;
         $843 = $next + 24 | 0;
         $844 = $next + 20 | 0;
         $845 = $next + 12 | 0;
         $846 = $next + 8 | 0;
         while (1) {
          $this$idx47$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
          $847 = $this$idx47$val$idx$val + 8 | 0;
          HEAP32[$40 >> 2] = HEAP32[$847 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $830 | 0, $this$idx47$val$idx$val + 12 | 0);
          $850 = __THREW__;
          __THREW__ = 0;
          if ($850 & 1) {
           label = 261;
           break;
          }
          HEAP32[$40 >> 2] = HEAP32[$847 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $831 | 0, $this$idx47$val$idx$val + 24 | 0);
          $854 = __THREW__;
          __THREW__ = 0;
          if ($854 & 1) {
           label = 232;
           break;
          }
          $858 = $this$idx47$val$idx$val + 36 | 0;
          HEAP32[$832 >> 2] = HEAP32[$858 >> 2];
          HEAP32[$832 + 4 >> 2] = HEAP32[$858 + 4 >> 2];
          HEAP32[$832 + 8 >> 2] = HEAP32[$858 + 8 >> 2];
          HEAP32[$832 + 12 >> 2] = HEAP32[$858 + 12 >> 2];
          $859 = HEAP32[$847 >> 2] | 0;
          HEAP32[$40 >> 2] = $859;
          HEAP32[$next >> 2] = $859;
          if (!(HEAP8[$129 >> 0] & 1)) {
           HEAP8[$833 >> 0] = 0;
           HEAP8[$129 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$845 >> 2] >> 0] = 0;
           HEAP32[$846 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $129 | 0, 0);
          $864 = __THREW__;
          __THREW__ = 0;
          if ($864 & 1) {
           label = 237;
           break;
          };
          HEAP32[$129 >> 2] = HEAP32[$830 >> 2];
          HEAP32[$129 + 4 >> 2] = HEAP32[$830 + 4 >> 2];
          HEAP32[$129 + 8 >> 2] = HEAP32[$830 + 8 >> 2];
          HEAP32[$830 >> 2] = 0;
          HEAP32[$830 + 4 >> 2] = 0;
          HEAP32[$830 + 8 >> 2] = 0;
          if (!(HEAP8[$240 >> 0] & 1)) {
           HEAP8[$835 >> 0] = 0;
           HEAP8[$240 >> 0] = 0;
          } else {
           HEAP8[HEAP32[$843 >> 2] >> 0] = 0;
           HEAP32[$844 >> 2] = 0;
          }
          __THREW__ = 0;
          invoke_vii(45, $240 | 0, 0);
          $872 = __THREW__;
          __THREW__ = 0;
          if ($872 & 1) {
           label = 242;
           break;
          };
          HEAP32[$240 >> 2] = HEAP32[$834 >> 2];
          HEAP32[$240 + 4 >> 2] = HEAP32[$834 + 4 >> 2];
          HEAP32[$240 + 8 >> 2] = HEAP32[$834 + 8 >> 2];
          HEAP32[$834 >> 2] = 0;
          HEAP32[$834 + 4 >> 2] = 0;
          HEAP32[$834 + 8 >> 2] = 0;
          HEAP32[$140 >> 2] = HEAP32[$832 >> 2];
          HEAP32[$140 + 4 >> 2] = HEAP32[$832 + 4 >> 2];
          HEAP32[$140 + 8 >> 2] = HEAP32[$832 + 8 >> 2];
          HEAP32[$140 + 12 >> 2] = HEAP32[$832 + 12 >> 2];
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($831);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($830);
          $876 = HEAP32[$next >> 2] | 0;
          if (($876 | 0) == 5) {
           $this$idx$val$idx$val$i284 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $878 = $this$idx$val$idx$val$i284 + 8 | 0;
           HEAP32[$41 >> 2] = HEAP32[$878 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $836 | 0, $this$idx$val$idx$val$i284 + 12 | 0);
           $881 = __THREW__;
           __THREW__ = 0;
           if ($881 & 1) {
            label = 261;
            break;
           }
           HEAP32[$41 >> 2] = HEAP32[$878 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $837 | 0, $this$idx$val$idx$val$i284 + 24 | 0);
           $885 = __THREW__;
           __THREW__ = 0;
           if ($885 & 1) {
            label = 246;
            break;
           }
           $889 = $this$idx$val$idx$val$i284 + 36 | 0;
           HEAP32[$838 >> 2] = HEAP32[$889 >> 2];
           HEAP32[$838 + 4 >> 2] = HEAP32[$889 + 4 >> 2];
           HEAP32[$838 + 8 >> 2] = HEAP32[$889 + 8 >> 2];
           HEAP32[$838 + 12 >> 2] = HEAP32[$889 + 12 >> 2];
           HEAP32[$41 >> 2] = HEAP32[$878 >> 2];
           $891 = HEAP32[$this >> 2] | 0;
           $893 = HEAP32[$891 + 4 >> 2] | 0;
           $894 = $893 + 4 | 0;
           $896 = HEAP32[$893 >> 2] | 0;
           HEAP32[$896 + 4 >> 2] = HEAP32[$894 >> 2];
           HEAP32[HEAP32[$894 >> 2] >> 2] = $896;
           $900 = $891 + 8 | 0;
           HEAP32[$900 >> 2] = (HEAP32[$900 >> 2] | 0) + -1;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($893 + 24 | 0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($893 + 12 | 0);
           __ZdlPv($893);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($837);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($836);
           $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $905 = $this$idx$val$idx$val + 8 | 0;
           HEAP32[$42 >> 2] = HEAP32[$905 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $839 | 0, $this$idx$val$idx$val + 12 | 0);
           $908 = __THREW__;
           __THREW__ = 0;
           if ($908 & 1) {
            label = 261;
            break;
           }
           HEAP32[$42 >> 2] = HEAP32[$905 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $840 | 0, $this$idx$val$idx$val + 24 | 0);
           $912 = __THREW__;
           __THREW__ = 0;
           if ($912 & 1) {
            label = 249;
            break;
           }
           $916 = $this$idx$val$idx$val + 36 | 0;
           HEAP32[$841 >> 2] = HEAP32[$916 >> 2];
           HEAP32[$841 + 4 >> 2] = HEAP32[$916 + 4 >> 2];
           HEAP32[$841 + 8 >> 2] = HEAP32[$916 + 8 >> 2];
           HEAP32[$841 + 12 >> 2] = HEAP32[$916 + 12 >> 2];
           $917 = HEAP32[$905 >> 2] | 0;
           HEAP32[$42 >> 2] = $917;
           HEAP32[$next >> 2] = $917;
           if (!(HEAP8[$129 >> 0] & 1)) {
            HEAP8[$833 >> 0] = 0;
            HEAP8[$129 >> 0] = 0;
           } else {
            HEAP8[HEAP32[$845 >> 2] >> 0] = 0;
            HEAP32[$846 >> 2] = 0;
           }
           __THREW__ = 0;
           invoke_vii(45, $129 | 0, 0);
           $922 = __THREW__;
           __THREW__ = 0;
           if ($922 & 1) {
            label = 254;
            break;
           };
           HEAP32[$129 >> 2] = HEAP32[$839 >> 2];
           HEAP32[$129 + 4 >> 2] = HEAP32[$839 + 4 >> 2];
           HEAP32[$129 + 8 >> 2] = HEAP32[$839 + 8 >> 2];
           HEAP32[$839 >> 2] = 0;
           HEAP32[$839 + 4 >> 2] = 0;
           HEAP32[$839 + 8 >> 2] = 0;
           if (!(HEAP8[$240 >> 0] & 1)) {
            HEAP8[$835 >> 0] = 0;
            HEAP8[$240 >> 0] = 0;
           } else {
            HEAP8[HEAP32[$843 >> 2] >> 0] = 0;
            HEAP32[$844 >> 2] = 0;
           }
           __THREW__ = 0;
           invoke_vii(45, $240 | 0, 0);
           $930 = __THREW__;
           __THREW__ = 0;
           if ($930 & 1) {
            label = 259;
            break;
           };
           HEAP32[$240 >> 2] = HEAP32[$842 >> 2];
           HEAP32[$240 + 4 >> 2] = HEAP32[$842 + 4 >> 2];
           HEAP32[$240 + 8 >> 2] = HEAP32[$842 + 8 >> 2];
           HEAP32[$842 >> 2] = 0;
           HEAP32[$842 + 4 >> 2] = 0;
           HEAP32[$842 + 8 >> 2] = 0;
           HEAP32[$140 >> 2] = HEAP32[$841 >> 2];
           HEAP32[$140 + 4 >> 2] = HEAP32[$841 + 4 >> 2];
           HEAP32[$140 + 8 >> 2] = HEAP32[$841 + 8 >> 2];
           HEAP32[$140 + 12 >> 2] = HEAP32[$841 + 12 >> 2];
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($840);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($839);
           $939 = HEAP32[$next >> 2] | 0;
           $got_comma$0$off0 = 1;
          } else {
           $939 = $876;
           $got_comma$0$off0 = 0;
          }
          if (($939 | 0) == 3) {
           label = 265;
           break;
          }
          if (!$got_comma$0$off0) {
           label = 270;
           break;
          }
          __THREW__ = 0;
          $1017 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
          $1018 = __THREW__;
          __THREW__ = 0;
          if ($1018 & 1) {
           label = 261;
           break;
          }
          HEAP32[$45 >> 2] = $1017;
          $1020 = HEAP32[$825 >> 2] | 0;
          if ($1020 >>> 0 < (HEAP32[$827 >> 2] | 0) >>> 0) {
           HEAP32[$1020 >> 2] = $1017;
           HEAP32[$825 >> 2] = (HEAP32[$825 >> 2] | 0) + 4;
           continue;
          } else {
           __THREW__ = 0;
           invoke_vii(50, $elements | 0, $45 | 0);
           $1026 = __THREW__;
           __THREW__ = 0;
           if ($1026 & 1) {
            label = 261;
            break;
           } else continue;
          }
         }
         switch (label | 0) {
         case 232:
          {
           $856 = ___cxa_find_matching_catch() | 0;
           $857 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($830);
           $eh$lpad$body275$index72Z2D = $857;
           $eh$lpad$body275$indexZ2D = $856;
           label = 263;
           break L79;
           break;
          }
         case 237:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 242:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 246:
          {
           $887 = ___cxa_find_matching_catch() | 0;
           $888 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($836);
           $eh$lpad$body275$index72Z2D = $888;
           $eh$lpad$body275$indexZ2D = $887;
           label = 263;
           break L79;
           break;
          }
         case 249:
          {
           $914 = ___cxa_find_matching_catch() | 0;
           $915 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($839);
           $eh$lpad$body275$index72Z2D = $915;
           $eh$lpad$body275$indexZ2D = $914;
           label = 263;
           break L79;
           break;
          }
         case 254:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 259:
          {
           ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
           break;
          }
         case 261:
          {
           $934 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body275$index72Z2D = tempRet0;
           $eh$lpad$body275$indexZ2D = $934;
           label = 263;
           break L79;
           break;
          }
         case 265:
          {
           $this$idx$val$idx$val$i300 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
           $940 = $this$idx$val$idx$val$i300 + 8 | 0;
           HEAP32[$43 >> 2] = HEAP32[$940 >> 2];
           $942 = $43 + 4 | 0;
           __THREW__ = 0;
           invoke_vii(40, $942 | 0, $this$idx$val$idx$val$i300 + 12 | 0);
           $944 = __THREW__;
           __THREW__ = 0;
           if ($944 & 1) {
            label = 262;
            break L79;
           }
           HEAP32[$43 >> 2] = HEAP32[$940 >> 2];
           $947 = $43 + 16 | 0;
           __THREW__ = 0;
           invoke_vii(40, $947 | 0, $this$idx$val$idx$val$i300 + 24 | 0);
           $949 = __THREW__;
           __THREW__ = 0;
           if ($949 & 1) {
            $951 = ___cxa_find_matching_catch() | 0;
            $952 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($942);
            $eh$lpad$body275$index72Z2D = $952;
            $eh$lpad$body275$indexZ2D = $951;
            label = 263;
            break L79;
           }
           $953 = $43 + 28 | 0;
           $954 = $this$idx$val$idx$val$i300 + 36 | 0;
           HEAP32[$953 >> 2] = HEAP32[$954 >> 2];
           HEAP32[$953 + 4 >> 2] = HEAP32[$954 + 4 >> 2];
           HEAP32[$953 + 8 >> 2] = HEAP32[$954 + 8 >> 2];
           HEAP32[$953 + 12 >> 2] = HEAP32[$954 + 12 >> 2];
           HEAP32[$43 >> 2] = HEAP32[$940 >> 2];
           $956 = HEAP32[$this >> 2] | 0;
           $958 = HEAP32[$956 + 4 >> 2] | 0;
           $959 = $958 + 4 | 0;
           $961 = HEAP32[$958 >> 2] | 0;
           HEAP32[$961 + 4 >> 2] = HEAP32[$959 >> 2];
           HEAP32[HEAP32[$959 >> 2] >> 2] = $961;
           $965 = $956 + 8 | 0;
           HEAP32[$965 >> 2] = (HEAP32[$965 >> 2] | 0) + -1;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($958 + 24 | 0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($958 + 12 | 0);
           __ZdlPv($958);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($947);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($942);
           $971 = HEAP32[$this + 4 >> 2] | 0;
           __THREW__ = 0;
           invoke_vii(40, $46 | 0, $70 | 0);
           $972 = __THREW__;
           __THREW__ = 0;
           if ($972 & 1) {
            label = 262;
            break L79;
           }
           $1030 = $76;
           $1035 = HEAP32[$1030 + 4 >> 2] | 0;
           $1036 = $46 + 12 | 0;
           HEAP32[$1036 >> 2] = HEAP32[$1030 >> 2];
           HEAP32[$1036 + 4 >> 2] = $1035;
           $1041 = $next + 36 | 0;
           $1046 = HEAP32[$1041 + 4 >> 2] | 0;
           $1047 = $46 + 20 | 0;
           HEAP32[$1047 >> 2] = HEAP32[$1041 >> 2];
           HEAP32[$1047 + 4 >> 2] = $1046;
           HEAP32[$47 >> 2] = 0;
           $1051 = $47 + 4 | 0;
           HEAP32[$1051 >> 2] = 0;
           HEAP32[$47 + 8 >> 2] = 0;
           $1057 = (HEAP32[$825 >> 2] | 0) - (HEAP32[$elements >> 2] | 0) | 0;
           $1058 = $1057 >> 2;
           L152 : do if (!$1058) label = 304; else {
            if ($1058 >>> 0 > 1073741823) {
             __THREW__ = 0;
             invoke_vi(175, $47 | 0);
             $1061 = __THREW__;
             __THREW__ = 0;
             if (!($1061 & 1)) label = 296;
            } else label = 296;
            do if ((label | 0) == 296) {
             __THREW__ = 0;
             $1063 = invoke_ii(67, $1057 | 0) | 0;
             $1064 = __THREW__;
             __THREW__ = 0;
             if ($1064 & 1) break;
             HEAP32[$1051 >> 2] = $1063;
             HEAP32[$47 >> 2] = $1063;
             HEAP32[$47 + 8 >> 2] = $1063 + ($1058 << 2);
             $1068 = HEAP32[$elements >> 2] | 0;
             $1069 = HEAP32[$825 >> 2] | 0;
             if (($1068 | 0) == ($1069 | 0)) {
              label = 304;
              break L152;
             }
             $$01$i$i326 = $1068;
             $1072 = $1063;
             while (1) {
              HEAP32[$1072 >> 2] = HEAP32[$$01$i$i326 >> 2];
              $1072 = (HEAP32[$1051 >> 2] | 0) + 4 | 0;
              HEAP32[$1051 >> 2] = $1072;
              $$01$i$i326 = $$01$i$i326 + 4 | 0;
              if (($$01$i$i326 | 0) == ($1069 | 0)) {
               label = 304;
               break L152;
              }
             }
            } while (0);
            $1077 = ___cxa_find_matching_catch() | 0;
            $1078 = tempRet0;
            $1079 = HEAP32[$47 >> 2] | 0;
            $1081 = $1079;
            if ($1079) {
             $1082 = HEAP32[$1051 >> 2] | 0;
             if (($1082 | 0) != ($1079 | 0)) HEAP32[$1051 >> 2] = $1082 + (~(($1082 + -4 - $1081 | 0) >>> 2) << 2);
             __ZdlPv($1079);
            }
            $$1813 = $1077;
            $$1832 = $1078;
           } while (0);
           do if ((label | 0) == 304) {
            __THREW__ = 0;
            $1088 = invoke_iiii(36, $971 | 0, $46 | 0, $47 | 0) | 0;
            $1089 = __THREW__;
            __THREW__ = 0;
            if ($1089 & 1) {
             $1109 = ___cxa_find_matching_catch() | 0;
             $1110 = tempRet0;
             $1111 = HEAP32[$47 >> 2] | 0;
             if (!$1111) {
              $$1813 = $1109;
              $$1832 = $1110;
              break;
             }
             $1114 = HEAP32[$1051 >> 2] | 0;
             if (($1114 | 0) != ($1111 | 0)) HEAP32[$1051 >> 2] = $1114 + (~(($1114 + -4 - $1111 | 0) >>> 2) << 2);
             __ZdlPv($1111);
             $$1813 = $1109;
             $$1832 = $1110;
             break;
            }
            $1091 = HEAP32[$47 >> 2] | 0;
            $1093 = $1091;
            if ($1091) {
             $1094 = HEAP32[$1051 >> 2] | 0;
             if (($1094 | 0) != ($1091 | 0)) HEAP32[$1051 >> 2] = $1094 + (~(($1094 + -4 - $1093 | 0) >>> 2) << 2);
             __ZdlPv($1091);
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
            $1100 = HEAP32[$elements >> 2] | 0;
            if (!$1100) {
             $$12 = $1088;
             label = 323;
             break L47;
            }
            $1103 = HEAP32[$825 >> 2] | 0;
            if (($1103 | 0) != ($1100 | 0)) HEAP32[$825 >> 2] = $1103 + (~(($1103 + -4 - $1100 | 0) >>> 2) << 2);
            __ZdlPv($1100);
            $$12 = $1088;
            label = 323;
            break L47;
           } while (0);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
           $$19 = $$1813;
           $$1933 = $$1832;
           break L79;
           break;
          }
         case 270:
          {
           $974 = $ss2 + 64 | 0;
           $975 = $ss2 + 8 | 0;
           HEAP32[$975 >> 2] = 2912;
           $976 = $ss2 + 12 | 0;
           HEAP32[$ss2 >> 2] = 2952;
           HEAP32[$974 >> 2] = 2972;
           HEAP32[$ss2 + 4 >> 2] = 0;
           __THREW__ = 0;
           invoke_vii(41, $ss2 + 64 | 0, $976 | 0);
           $979 = __THREW__;
           __THREW__ = 0;
           if ($979 & 1) {
            $992 = ___cxa_find_matching_catch() | 0;
            $$0$i311 = tempRet0;
            $$01$i310 = $992;
           } else {
            HEAP32[$ss2 + 136 >> 2] = 0;
            HEAP32[$ss2 + 140 >> 2] = -1;
            HEAP32[$ss2 >> 2] = 2892;
            HEAP32[$ss2 + 64 >> 2] = 2932;
            HEAP32[$975 >> 2] = 2912;
            __THREW__ = 0;
            invoke_vi(173, $976 | 0);
            $984 = __THREW__;
            __THREW__ = 0;
            do if ($984 & 1) {
             $994 = ___cxa_find_matching_catch() | 0;
             $eh$lpad$body$i308$index82Z2D = tempRet0;
             $eh$lpad$body$i308$indexZ2D = $994;
            } else {
             HEAP32[$976 >> 2] = 2988;
             $986 = $ss2 + 44 | 0;
             HEAP32[$986 >> 2] = 0;
             HEAP32[$986 + 4 >> 2] = 0;
             HEAP32[$986 + 8 >> 2] = 0;
             HEAP32[$986 + 12 >> 2] = 0;
             HEAP32[$ss2 + 60 >> 2] = 24;
             HEAP32[$11 >> 2] = 0;
             HEAP32[$11 + 4 >> 2] = 0;
             HEAP32[$11 + 8 >> 2] = 0;
             __THREW__ = 0;
             invoke_vii(42, $976 | 0, $11 | 0);
             $988 = __THREW__;
             __THREW__ = 0;
             if ($988 & 1) {
              $990 = ___cxa_find_matching_catch() | 0;
              $991 = tempRet0;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($986);
              __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($976);
              $eh$lpad$body$i308$index82Z2D = $991;
              $eh$lpad$body$i308$indexZ2D = $990;
              break;
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
             $996 = $ss2 + 8 | 0;
             __THREW__ = 0;
             invoke_iiii(29, $996 | 0, 51540, 43) | 0;
             $997 = __THREW__;
             __THREW__ = 0;
             L130 : do if ($997 & 1) {
              $1011 = ___cxa_find_matching_catch() | 0;
              $$17 = $1011;
              $$1731 = tempRet0;
             } else {
              $999 = ___cxa_allocate_exception(40) | 0;
              __THREW__ = 0;
              invoke_vii(43, $44 | 0, $976 | 0);
              $1000 = __THREW__;
              __THREW__ = 0;
              L133 : do if ($1000 & 1) {
               $1013 = ___cxa_find_matching_catch() | 0;
               $$1612483 = $1013;
               $$1630482 = tempRet0;
              } else {
               __THREW__ = 0;
               invoke_vii(40, $999 | 0, $240 | 0);
               $1002 = __THREW__;
               __THREW__ = 0;
               do if ($1002 & 1) $$03 = 1; else {
                $1004 = $999 + 12 | 0;
                HEAP32[$1004 >> 2] = HEAP32[$140 >> 2];
                HEAP32[$1004 + 4 >> 2] = HEAP32[$140 + 4 >> 2];
                HEAP32[$1004 + 8 >> 2] = HEAP32[$140 + 8 >> 2];
                HEAP32[$1004 + 12 >> 2] = HEAP32[$140 + 12 >> 2];
                __THREW__ = 0;
                invoke_vii(40, $999 + 28 | 0, $44 | 0);
                $1006 = __THREW__;
                __THREW__ = 0;
                if ($1006 & 1) {
                 $1008 = ___cxa_find_matching_catch() | 0;
                 $1009 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($999);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
                 $$1612483 = $1008;
                 $$1630482 = $1009;
                 break L133;
                } else {
                 __THREW__ = 0;
                 invoke_viii(4, $999 | 0, 8, 172);
                 __THREW__ = 0;
                 $$03 = 0;
                 break;
                }
               } while (0);
               $1015 = ___cxa_find_matching_catch() | 0;
               $1016 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
               if ($$03) {
                $$1612483 = $1015;
                $$1630482 = $1016;
               } else {
                $$17 = $1015;
                $$1731 = $1016;
                break L130;
               }
              } while (0);
              ___cxa_free_exception($999 | 0);
              $$17 = $$1612483;
              $$1731 = $$1630482;
             } while (0);
             HEAP32[$ss2 >> 2] = 2892;
             HEAP32[$974 >> 2] = 2932;
             HEAP32[$996 >> 2] = 2912;
             HEAP32[$976 >> 2] = 2988;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($986);
             __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($976);
             __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($974);
             $$19 = $$17;
             $$1933 = $$1731;
             break L79;
            } while (0);
            $$0$i311 = $eh$lpad$body$i308$index82Z2D;
            $$01$i310 = $eh$lpad$body$i308$indexZ2D;
           }
           __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($974);
           $eh$lpad$body275$index72Z2D = $$0$i311;
           $eh$lpad$body275$indexZ2D = $$01$i310;
           label = 263;
           break L79;
           break;
          }
         }
        } while (0);
        if ((label | 0) == 262) {
         $936 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body275$index72Z2D = tempRet0;
         $eh$lpad$body275$indexZ2D = $936;
         label = 263;
        }
        if ((label | 0) == 263) {
         $$19 = $eh$lpad$body275$indexZ2D;
         $$1933 = $eh$lpad$body275$index72Z2D;
        }
        $1120 = HEAP32[$elements >> 2] | 0;
        if (!$1120) {
         $$20 = $$19;
         $$2034 = $$1933;
         break;
        }
        $1123 = HEAP32[$825 >> 2] | 0;
        if (($1123 | 0) != ($1120 | 0)) HEAP32[$825 >> 2] = $1123 + (~(($1123 + -4 - $1120 | 0) >>> 2) << 2);
        __ZdlPv($1120);
        $$20 = $$19;
        $$2034 = $$1933;
        break;
       };
       HEAP32[$l >> 2] = 0;
       HEAP32[$l + 4 >> 2] = 0;
       HEAP32[$l + 8 >> 2] = 0;
       HEAP32[$l + 12 >> 2] = 0;
       HEAP32[$l + 16 >> 2] = 0;
       HEAP32[$l + 20 >> 2] = 0;
       HEAP32[$l + 24 >> 2] = 0;
       $this$idx$val$idx$val$i75 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $255 = $this$idx$val$idx$val$i75 + 8 | 0;
       HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
       $257 = $23 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $257 | 0, $this$idx$val$idx$val$i75 + 12 | 0);
       $259 = __THREW__;
       __THREW__ = 0;
       do if ($259 & 1) label = 118; else {
        HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
        $262 = $23 + 16 | 0;
        __THREW__ = 0;
        invoke_vii(40, $262 | 0, $this$idx$val$idx$val$i75 + 24 | 0);
        $264 = __THREW__;
        __THREW__ = 0;
        if ($264 & 1) {
         $266 = ___cxa_find_matching_catch() | 0;
         $267 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($257);
         $eh$lpad$body78$index16Z2D = $267;
         $eh$lpad$body78$indexZ2D = $266;
         label = 119;
         break;
        }
        $268 = $23 + 28 | 0;
        $269 = $this$idx$val$idx$val$i75 + 36 | 0;
        HEAP32[$268 >> 2] = HEAP32[$269 >> 2];
        HEAP32[$268 + 4 >> 2] = HEAP32[$269 + 4 >> 2];
        HEAP32[$268 + 8 >> 2] = HEAP32[$269 + 8 >> 2];
        HEAP32[$268 + 12 >> 2] = HEAP32[$269 + 12 >> 2];
        HEAP32[$23 >> 2] = HEAP32[$255 >> 2];
        $271 = HEAP32[$this >> 2] | 0;
        $273 = HEAP32[$271 + 4 >> 2] | 0;
        $274 = $273 + 4 | 0;
        $276 = HEAP32[$273 >> 2] | 0;
        HEAP32[$276 + 4 >> 2] = HEAP32[$274 >> 2];
        HEAP32[HEAP32[$274 >> 2] >> 2] = $276;
        $280 = $271 + 8 | 0;
        HEAP32[$280 >> 2] = (HEAP32[$280 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($273 + 12 | 0);
        __ZdlPv($273);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($262);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($257);
        __THREW__ = 0;
        invoke_viiii(12, $id_token | 0, $this | 0, 11, 0);
        $285 = __THREW__;
        __THREW__ = 0;
        if ($285 & 1) label = 118; else {
         $287 = $this + 4 | 0;
         $288 = HEAP32[$287 >> 2] | 0;
         $289 = $id_token + 4 | 0;
         $290 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($288, $289) | 0;
         L212 : do if (($290 | 0) == ($288 + 4 | 0)) {
          __THREW__ = 0;
          $295 = invoke_ii(67, 12) | 0;
          $296 = __THREW__;
          __THREW__ = 0;
          do if (!($296 & 1)) {
           __THREW__ = 0;
           invoke_vii(40, $295 | 0, $289 | 0);
           $298 = __THREW__;
           __THREW__ = 0;
           if ($298 & 1) {
            $303 = ___cxa_find_matching_catch() | 0;
            $304 = tempRet0;
            __ZdlPv($295);
            $eh$lpad$body83$index22Z2D = $304;
            $eh$lpad$body83$indexZ2D = $303;
            label = 121;
            break L212;
           }
           __THREW__ = 0;
           $300 = invoke_iii(23, $288 | 0, $289 | 0) | 0;
           $301 = __THREW__;
           __THREW__ = 0;
           if ($301 & 1) break;
           HEAP32[$300 >> 2] = $295;
           $$0$i = $295;
           label = 61;
           break L212;
          } while (0);
          $547 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body83$index22Z2D = tempRet0;
          $eh$lpad$body83$indexZ2D = $547;
          label = 121;
         } else {
          $$0$i = HEAP32[$290 + 28 >> 2] | 0;
          label = 61;
         } while (0);
         do if ((label | 0) == 61) {
          __THREW__ = 0;
          $305 = invoke_ii(67, 4) | 0;
          $306 = __THREW__;
          __THREW__ = 0;
          if ($306 & 1) {
           $312 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body83$index22Z2D = tempRet0;
           $eh$lpad$body83$indexZ2D = $312;
           label = 121;
           break;
          }
          HEAP32[$305 >> 2] = $$0$i;
          $309 = HEAP32[$287 >> 2] | 0;
          __THREW__ = 0;
          invoke_vii(40, $24 | 0, $l | 0);
          $310 = __THREW__;
          __THREW__ = 0;
          L227 : do if ($310 & 1) label = 122; else {
           $314 = $24 + 12 | 0;
           $315 = $l + 12 | 0;
           HEAP32[$314 >> 2] = HEAP32[$315 >> 2];
           HEAP32[$314 + 4 >> 2] = HEAP32[$315 + 4 >> 2];
           HEAP32[$314 + 8 >> 2] = HEAP32[$315 + 8 >> 2];
           HEAP32[$314 + 12 >> 2] = HEAP32[$315 + 12 >> 2];
           $316 = HEAP32[$287 >> 2] | 0;
           __THREW__ = 0;
           invoke_viii(3, $25 | 0, 50213, 3);
           $317 = __THREW__;
           __THREW__ = 0;
           if ($317 & 1) {
            $551 = ___cxa_find_matching_catch() | 0;
            $$216 = tempRet0;
            $$29 = $551;
           } else {
            $319 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($316, $25) | 0;
            do if (($319 | 0) == ($316 + 4 | 0)) {
             __THREW__ = 0;
             $324 = invoke_ii(67, 12) | 0;
             $325 = __THREW__;
             __THREW__ = 0;
             if ($325 & 1) {
              label = 125;
              break;
             }
             __THREW__ = 0;
             invoke_vii(40, $324 | 0, $25 | 0);
             $327 = __THREW__;
             __THREW__ = 0;
             if ($327 & 1) {
              $332 = ___cxa_find_matching_catch() | 0;
              $333 = tempRet0;
              __ZdlPv($324);
              $eh$lpad$body94$index34Z2D = $333;
              $eh$lpad$body94$indexZ2D = $332;
              break;
             }
             __THREW__ = 0;
             $329 = invoke_iii(23, $316 | 0, $25 | 0) | 0;
             $330 = __THREW__;
             __THREW__ = 0;
             if ($330 & 1) {
              label = 125;
              break;
             }
             HEAP32[$329 >> 2] = $324;
             $$0$i90 = $324;
             label = 72;
            } else {
             $$0$i90 = HEAP32[$319 + 28 >> 2] | 0;
             label = 72;
            } while (0);
            do if ((label | 0) == 72) {
             __THREW__ = 0;
             $334 = invoke_ii(67, 56) | 0;
             $335 = __THREW__;
             __THREW__ = 0;
             if ($335 & 1) {
              label = 125;
              break;
             }
             HEAP32[$334 >> 2] = 3192;
             __THREW__ = 0;
             invoke_vii(40, $334 + 4 | 0, $24 | 0);
             $338 = __THREW__;
             __THREW__ = 0;
             if ($338 & 1) {
              $358 = ___cxa_find_matching_catch() | 0;
              $359 = tempRet0;
              __ZdlPv($334);
              $eh$lpad$body94$index34Z2D = $359;
              $eh$lpad$body94$indexZ2D = $358;
              break;
             }
             $340 = $334 + 16 | 0;
             HEAP32[$340 >> 2] = HEAP32[$314 >> 2];
             HEAP32[$340 + 4 >> 2] = HEAP32[$314 + 4 >> 2];
             HEAP32[$340 + 8 >> 2] = HEAP32[$314 + 8 >> 2];
             HEAP32[$340 + 12 >> 2] = HEAP32[$314 + 12 >> 2];
             HEAP32[$334 + 32 >> 2] = 20;
             HEAP32[$334 + 36 >> 2] = 0;
             HEAP32[$334 + 40 >> 2] = 0;
             HEAP32[$334 + 44 >> 2] = 0;
             HEAP32[$334 >> 2] = 3388;
             HEAP32[$334 + 48 >> 2] = $$0$i90;
             HEAP32[$334 + 52 >> 2] = $$0$i90;
             HEAP32[$15 >> 2] = $334;
             $347 = $309 + 16 | 0;
             $348 = HEAP32[$347 >> 2] | 0;
             if ($348 >>> 0 < (HEAP32[$309 + 20 >> 2] | 0) >>> 0) {
              HEAP32[$348 >> 2] = $334;
              HEAP32[$347 >> 2] = (HEAP32[$347 >> 2] | 0) + 4;
             } else {
              __THREW__ = 0;
              invoke_vii(50, $309 + 12 | 0, $15 | 0);
              $356 = __THREW__;
              __THREW__ = 0;
              if ($356 & 1) {
               label = 125;
               break;
              }
             }
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
             $360 = HEAP32[$287 >> 2] | 0;
             __THREW__ = 0;
             invoke_vii(40, $26 | 0, $210 + 4 | 0);
             $362 = __THREW__;
             __THREW__ = 0;
             if ($362 & 1) {
              label = 122;
              break L227;
             }
             $364 = $26 + 12 | 0;
             $365 = $210 + 16 | 0;
             HEAP32[$364 >> 2] = HEAP32[$365 >> 2];
             HEAP32[$364 + 4 >> 2] = HEAP32[$365 + 4 >> 2];
             HEAP32[$364 + 8 >> 2] = HEAP32[$365 + 8 >> 2];
             HEAP32[$364 + 12 >> 2] = HEAP32[$365 + 12 >> 2];
             HEAP32[$27 >> 2] = 0;
             $366 = $27 + 4 | 0;
             HEAP32[$366 >> 2] = 0;
             HEAP32[$27 + 8 >> 2] = 0;
             __THREW__ = 0;
             $368 = invoke_ii(67, 4) | 0;
             $369 = __THREW__;
             __THREW__ = 0;
             do if ($369 & 1) {
              $379 = ___cxa_find_matching_catch() | 0;
              $380 = tempRet0;
              $381 = HEAP32[$27 >> 2] | 0;
              $383 = $381;
              if ($381) {
               $384 = HEAP32[$366 >> 2] | 0;
               if (($384 | 0) != ($381 | 0)) HEAP32[$366 >> 2] = $384 + (~(($384 + -4 - $383 | 0) >>> 2) << 2);
               __ZdlPv($381);
              }
              $$3 = $379;
              $$317 = $380;
             } else {
              HEAP32[$366 >> 2] = $368;
              HEAP32[$27 >> 2] = $368;
              HEAP32[$27 + 8 >> 2] = $368 + 4;
              HEAP32[$368 >> 2] = HEAP32[$305 >> 2];
              HEAP32[$366 >> 2] = (HEAP32[$366 >> 2] | 0) + 4;
              __THREW__ = 0;
              $376 = invoke_iiiii(6, $360 | 0, $26 | 0, $27 | 0, $210 | 0) | 0;
              $377 = __THREW__;
              __THREW__ = 0;
              if ($377 & 1) {
               $555 = ___cxa_find_matching_catch() | 0;
               $556 = tempRet0;
               $557 = HEAP32[$27 >> 2] | 0;
               if (!$557) {
                $$3 = $555;
                $$317 = $556;
                break;
               }
               $560 = HEAP32[$366 >> 2] | 0;
               if (($560 | 0) != ($557 | 0)) HEAP32[$366 >> 2] = $560 + (~(($560 + -4 - $557 | 0) >>> 2) << 2);
               __ZdlPv($557);
               $$3 = $555;
               $$317 = $556;
               break;
              }
              $390 = HEAP32[$27 >> 2] | 0;
              $392 = $390;
              if ($390) {
               $393 = HEAP32[$366 >> 2] | 0;
               if (($393 | 0) != ($390 | 0)) HEAP32[$366 >> 2] = $393 + (~(($393 + -4 - $392 | 0) >>> 2) << 2);
               __ZdlPv($390);
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
              __THREW__ = 0;
              invoke_viiii(12, $28 | 0, $this | 0, 23, 0);
              $399 = __THREW__;
              __THREW__ = 0;
              if ($399 & 1) {
               label = 122;
               break L227;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28 + 16 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28 + 4 | 0);
              __THREW__ = 0;
              $403 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
              $404 = __THREW__;
              __THREW__ = 0;
              if ($404 & 1) {
               label = 122;
               break L227;
              }
              $this$idx$val$idx$val$i118 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
              $406 = $this$idx$val$idx$val$i118 + 8 | 0;
              HEAP32[$maybe_if >> 2] = HEAP32[$406 >> 2];
              $408 = $maybe_if + 4 | 0;
              __THREW__ = 0;
              invoke_vii(40, $408 | 0, $this$idx$val$idx$val$i118 + 12 | 0);
              $410 = __THREW__;
              __THREW__ = 0;
              if ($410 & 1) {
               label = 122;
               break L227;
              }
              HEAP32[$maybe_if >> 2] = HEAP32[$406 >> 2];
              $413 = $maybe_if + 16 | 0;
              __THREW__ = 0;
              invoke_vii(40, $413 | 0, $this$idx$val$idx$val$i118 + 24 | 0);
              $415 = __THREW__;
              __THREW__ = 0;
              if ($415 & 1) {
               $417 = ___cxa_find_matching_catch() | 0;
               $418 = tempRet0;
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($408);
               $eh$lpad$body121$index28Z2D = $418;
               $eh$lpad$body121$indexZ2D = $417;
               label = 123;
               break L227;
              }
              $419 = $maybe_if + 28 | 0;
              $420 = $this$idx$val$idx$val$i118 + 36 | 0;
              HEAP32[$419 >> 2] = HEAP32[$420 >> 2];
              HEAP32[$419 + 4 >> 2] = HEAP32[$420 + 4 >> 2];
              HEAP32[$419 + 8 >> 2] = HEAP32[$420 + 8 >> 2];
              HEAP32[$419 + 12 >> 2] = HEAP32[$420 + 12 >> 2];
              HEAP32[$maybe_if >> 2] = HEAP32[$406 >> 2];
              $422 = HEAP32[$this >> 2] | 0;
              $424 = HEAP32[$422 + 4 >> 2] | 0;
              $425 = $424 + 4 | 0;
              $427 = HEAP32[$424 >> 2] | 0;
              HEAP32[$427 + 4 >> 2] = HEAP32[$425 >> 2];
              HEAP32[HEAP32[$425 >> 2] >> 2] = $427;
              $431 = $422 + 8 | 0;
              HEAP32[$431 >> 2] = (HEAP32[$431 >> 2] | 0) + -1;
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($424 + 24 | 0);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($424 + 12 | 0);
              __ZdlPv($424);
              L279 : do switch (HEAP32[$maybe_if >> 2] | 0) {
              case 3:
               {
                $437 = HEAP32[$287 >> 2] | 0;
                __THREW__ = 0;
                invoke_vii(40, $29 | 0, $l | 0);
                $438 = __THREW__;
                __THREW__ = 0;
                if ($438 & 1) {
                 label = 134;
                 break L279;
                }
                $440 = $29 + 12 | 0;
                HEAP32[$440 >> 2] = HEAP32[$315 >> 2];
                HEAP32[$440 + 4 >> 2] = HEAP32[$315 + 4 >> 2];
                HEAP32[$440 + 8 >> 2] = HEAP32[$315 + 8 >> 2];
                HEAP32[$440 + 12 >> 2] = HEAP32[$315 + 12 >> 2];
                __THREW__ = 0;
                $441 = invoke_iiii(34, $437 | 0, $29 | 0, 51485) | 0;
                $442 = __THREW__;
                __THREW__ = 0;
                if ($442 & 1) {
                 $568 = ___cxa_find_matching_catch() | 0;
                 $569 = tempRet0;
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
                 $$1210 = $568;
                 $$1226 = $569;
                 break L279;
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
                $444 = HEAP32[$287 >> 2] | 0;
                __THREW__ = 0;
                invoke_vii(40, $30 | 0, $l | 0);
                $445 = __THREW__;
                __THREW__ = 0;
                if ($445 & 1) {
                 label = 134;
                 break L279;
                }
                $447 = $30 + 12 | 0;
                HEAP32[$447 >> 2] = HEAP32[$315 >> 2];
                HEAP32[$447 + 4 >> 2] = HEAP32[$315 + 4 >> 2];
                HEAP32[$447 + 8 >> 2] = HEAP32[$315 + 8 >> 2];
                HEAP32[$447 + 12 >> 2] = HEAP32[$315 + 12 >> 2];
                __THREW__ = 0;
                $448 = invoke_ii(67, 56) | 0;
                $449 = __THREW__;
                __THREW__ = 0;
                do if ($449 & 1) label = 137; else {
                 HEAP32[$448 >> 2] = 3192;
                 __THREW__ = 0;
                 invoke_vii(40, $448 + 4 | 0, $30 | 0);
                 $452 = __THREW__;
                 __THREW__ = 0;
                 if ($452 & 1) {
                  $472 = ___cxa_find_matching_catch() | 0;
                  $473 = tempRet0;
                  __ZdlPv($448);
                  $eh$lpad$body130$index47Z2D = $473;
                  $eh$lpad$body130$indexZ2D = $472;
                  break;
                 }
                 $454 = $448 + 16 | 0;
                 HEAP32[$454 >> 2] = HEAP32[$447 >> 2];
                 HEAP32[$454 + 4 >> 2] = HEAP32[$447 + 4 >> 2];
                 HEAP32[$454 + 8 >> 2] = HEAP32[$447 + 8 >> 2];
                 HEAP32[$454 + 12 >> 2] = HEAP32[$447 + 12 >> 2];
                 HEAP32[$448 + 32 >> 2] = 9;
                 HEAP32[$448 + 36 >> 2] = 0;
                 HEAP32[$448 + 40 >> 2] = 0;
                 HEAP32[$448 + 44 >> 2] = 0;
                 HEAP32[$448 >> 2] = 3356;
                 HEAP32[$448 + 48 >> 2] = $334;
                 HEAP32[$448 + 52 >> 2] = $441;
                 HEAP32[$14 >> 2] = $448;
                 $461 = $444 + 16 | 0;
                 $462 = HEAP32[$461 >> 2] | 0;
                 if ($462 >>> 0 < (HEAP32[$444 + 20 >> 2] | 0) >>> 0) {
                  HEAP32[$462 >> 2] = $448;
                  HEAP32[$461 >> 2] = (HEAP32[$461 >> 2] | 0) + 4;
                 } else {
                  __THREW__ = 0;
                  invoke_vii(50, $444 + 12 | 0, $14 | 0);
                  $470 = __THREW__;
                  __THREW__ = 0;
                  if ($470 & 1) {
                   label = 137;
                   break;
                  }
                 }
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
                 __THREW__ = 0;
                 $474 = invoke_ii(67, 8) | 0;
                 $475 = __THREW__;
                 __THREW__ = 0;
                 if ($475 & 1) {
                  $483 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body138$index41Z2D = tempRet0;
                  $eh$lpad$body138$indexZ2D = $483;
                  label = 135;
                  break L279;
                 }
                 HEAP32[$474 >> 2] = $376;
                 HEAP32[$474 + 4 >> 2] = $403;
                 $480 = HEAP32[$287 >> 2] | 0;
                 __THREW__ = 0;
                 invoke_vii(40, $31 | 0, $70 | 0);
                 $481 = __THREW__;
                 __THREW__ = 0;
                 if ($481 & 1) {
                  $572 = ___cxa_find_matching_catch() | 0;
                  $$5 = $572;
                  $$519 = tempRet0;
                 } else {
                  $487 = $76;
                  $492 = HEAP32[$487 + 4 >> 2] | 0;
                  $493 = $31 + 12 | 0;
                  HEAP32[$493 >> 2] = HEAP32[$487 >> 2];
                  HEAP32[$493 + 4 >> 2] = $492;
                  $498 = $maybe_if + 36 | 0;
                  $503 = HEAP32[$498 + 4 >> 2] | 0;
                  $504 = $31 + 20 | 0;
                  HEAP32[$504 >> 2] = HEAP32[$498 >> 2];
                  HEAP32[$504 + 4 >> 2] = $503;
                  HEAP32[$32 >> 2] = 0;
                  $508 = $32 + 4 | 0;
                  HEAP32[$508 >> 2] = 0;
                  HEAP32[$32 + 8 >> 2] = 0;
                  __THREW__ = 0;
                  $510 = invoke_ii(67, 8) | 0;
                  $511 = __THREW__;
                  __THREW__ = 0;
                  do if ($511 & 1) {
                   $525 = ___cxa_find_matching_catch() | 0;
                   $526 = tempRet0;
                   $527 = HEAP32[$32 >> 2] | 0;
                   $529 = $527;
                   if ($527) {
                    $530 = HEAP32[$508 >> 2] | 0;
                    if (($530 | 0) != ($527 | 0)) HEAP32[$508 >> 2] = $530 + (~(($530 + -4 - $529 | 0) >>> 2) << 2);
                    __ZdlPv($527);
                   }
                   $$4 = $525;
                   $$418 = $526;
                  } else {
                   HEAP32[$508 >> 2] = $510;
                   HEAP32[$32 >> 2] = $510;
                   HEAP32[$32 + 8 >> 2] = $510 + 8;
                   HEAP32[$510 >> 2] = HEAP32[$474 >> 2];
                   $517 = (HEAP32[$508 >> 2] | 0) + 4 | 0;
                   HEAP32[$508 >> 2] = $517;
                   HEAP32[$517 >> 2] = HEAP32[$474 + 4 >> 2];
                   HEAP32[$508 >> 2] = (HEAP32[$508 >> 2] | 0) + 4;
                   __THREW__ = 0;
                   $522 = invoke_iiiiii(21, $480 | 0, $31 | 0, $448 | 0, $32 | 0, 0) | 0;
                   $523 = __THREW__;
                   __THREW__ = 0;
                   if ($523 & 1) {
                    $574 = ___cxa_find_matching_catch() | 0;
                    $575 = tempRet0;
                    $576 = HEAP32[$32 >> 2] | 0;
                    if (!$576) {
                     $$4 = $574;
                     $$418 = $575;
                     break;
                    }
                    $579 = HEAP32[$508 >> 2] | 0;
                    if (($579 | 0) != ($576 | 0)) HEAP32[$508 >> 2] = $579 + (~(($579 + -4 - $576 | 0) >>> 2) << 2);
                    __ZdlPv($576);
                    $$4 = $574;
                    $$418 = $575;
                    break;
                   }
                   $536 = HEAP32[$32 >> 2] | 0;
                   $538 = $536;
                   if ($536) {
                    $539 = HEAP32[$508 >> 2] | 0;
                    if (($539 | 0) != ($536 | 0)) HEAP32[$508 >> 2] = $539 + (~(($539 + -4 - $538 | 0) >>> 2) << 2);
                    __ZdlPv($536);
                   }
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
                   __ZdlPv($474);
                   $$pn = $522;
                   label = 223;
                   break L279;
                  } while (0);
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
                  $$5 = $$4;
                  $$519 = $$418;
                 }
                 __ZdlPv($474);
                 $$1210 = $$5;
                 $$1226 = $$519;
                 break L279;
                } while (0);
                if ((label | 0) == 137) {
                 $570 = ___cxa_find_matching_catch() | 0;
                 $eh$lpad$body130$index47Z2D = tempRet0;
                 $eh$lpad$body130$indexZ2D = $570;
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
                $$1210 = $eh$lpad$body130$indexZ2D;
                $$1226 = $eh$lpad$body130$index47Z2D;
                break;
               }
              case 20:
               {
                __THREW__ = 0;
                $585 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
                $586 = __THREW__;
                __THREW__ = 0;
                if ($586 & 1) {
                 label = 134;
                 break L279;
                }
                __THREW__ = 0;
                invoke_viiii(12, $last | 0, $this | 0, 3, 0);
                $588 = __THREW__;
                __THREW__ = 0;
                if ($588 & 1) {
                 label = 134;
                 break L279;
                }
                $590 = HEAP32[$287 >> 2] | 0;
                __THREW__ = 0;
                invoke_vii(40, $33 | 0, $585 + 4 | 0);
                $592 = __THREW__;
                __THREW__ = 0;
                L359 : do if ($592 & 1) label = 183; else {
                 $594 = $33 + 12 | 0;
                 $595 = $585 + 16 | 0;
                 HEAP32[$594 >> 2] = HEAP32[$595 >> 2];
                 HEAP32[$594 + 4 >> 2] = HEAP32[$595 + 4 >> 2];
                 HEAP32[$594 + 8 >> 2] = HEAP32[$595 + 8 >> 2];
                 HEAP32[$594 + 12 >> 2] = HEAP32[$595 + 12 >> 2];
                 HEAP32[$34 >> 2] = 0;
                 $596 = $34 + 4 | 0;
                 HEAP32[$596 >> 2] = 0;
                 HEAP32[$34 + 8 >> 2] = 0;
                 __THREW__ = 0;
                 $598 = invoke_ii(67, 4) | 0;
                 $599 = __THREW__;
                 __THREW__ = 0;
                 do if ($599 & 1) {
                  $609 = ___cxa_find_matching_catch() | 0;
                  $610 = tempRet0;
                  $611 = HEAP32[$34 >> 2] | 0;
                  $613 = $611;
                  if ($611) {
                   $614 = HEAP32[$596 >> 2] | 0;
                   if (($614 | 0) != ($611 | 0)) HEAP32[$596 >> 2] = $614 + (~(($614 + -4 - $613 | 0) >>> 2) << 2);
                   __ZdlPv($611);
                  }
                  $$6 = $609;
                  $$620 = $610;
                 } else {
                  HEAP32[$596 >> 2] = $598;
                  HEAP32[$34 >> 2] = $598;
                  HEAP32[$34 + 8 >> 2] = $598 + 4;
                  HEAP32[$598 >> 2] = HEAP32[$305 >> 2];
                  HEAP32[$596 >> 2] = (HEAP32[$596 >> 2] | 0) + 4;
                  __THREW__ = 0;
                  $606 = invoke_iiiii(6, $590 | 0, $33 | 0, $34 | 0, $585 | 0) | 0;
                  $607 = __THREW__;
                  __THREW__ = 0;
                  if ($607 & 1) {
                   $747 = ___cxa_find_matching_catch() | 0;
                   $748 = tempRet0;
                   $749 = HEAP32[$34 >> 2] | 0;
                   if (!$749) {
                    $$6 = $747;
                    $$620 = $748;
                    break;
                   }
                   $752 = HEAP32[$596 >> 2] | 0;
                   if (($752 | 0) != ($749 | 0)) HEAP32[$596 >> 2] = $752 + (~(($752 + -4 - $749 | 0) >>> 2) << 2);
                   __ZdlPv($749);
                   $$6 = $747;
                   $$620 = $748;
                   break;
                  }
                  $620 = HEAP32[$34 >> 2] | 0;
                  $622 = $620;
                  if ($620) {
                   $623 = HEAP32[$596 >> 2] | 0;
                   if (($623 | 0) != ($620 | 0)) HEAP32[$596 >> 2] = $623 + (~(($623 + -4 - $622 | 0) >>> 2) << 2);
                   __ZdlPv($620);
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
                  $629 = HEAP32[$287 >> 2] | 0;
                  __THREW__ = 0;
                  invoke_vii(40, $35 | 0, $l | 0);
                  $630 = __THREW__;
                  __THREW__ = 0;
                  if ($630 & 1) {
                   label = 183;
                   break L359;
                  }
                  $632 = $35 + 12 | 0;
                  HEAP32[$632 >> 2] = HEAP32[$315 >> 2];
                  HEAP32[$632 + 4 >> 2] = HEAP32[$315 + 4 >> 2];
                  HEAP32[$632 + 8 >> 2] = HEAP32[$315 + 8 >> 2];
                  HEAP32[$632 + 12 >> 2] = HEAP32[$315 + 12 >> 2];
                  __THREW__ = 0;
                  $633 = invoke_iiii(34, $629 | 0, $35 | 0, 51489) | 0;
                  $634 = __THREW__;
                  __THREW__ = 0;
                  if ($634 & 1) {
                   $758 = ___cxa_find_matching_catch() | 0;
                   $759 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
                   $$9 = $758;
                   $$923 = $759;
                   break L359;
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($35);
                  $636 = HEAP32[$287 >> 2] | 0;
                  __THREW__ = 0;
                  invoke_vii(40, $36 | 0, $l | 0);
                  $637 = __THREW__;
                  __THREW__ = 0;
                  if ($637 & 1) {
                   label = 183;
                   break L359;
                  }
                  $639 = $36 + 12 | 0;
                  HEAP32[$639 >> 2] = HEAP32[$315 >> 2];
                  HEAP32[$639 + 4 >> 2] = HEAP32[$315 + 4 >> 2];
                  HEAP32[$639 + 8 >> 2] = HEAP32[$315 + 8 >> 2];
                  HEAP32[$639 + 12 >> 2] = HEAP32[$315 + 12 >> 2];
                  __THREW__ = 0;
                  $640 = invoke_ii(67, 56) | 0;
                  $641 = __THREW__;
                  __THREW__ = 0;
                  do if ($641 & 1) label = 192; else {
                   HEAP32[$640 >> 2] = 3192;
                   __THREW__ = 0;
                   invoke_vii(40, $640 + 4 | 0, $36 | 0);
                   $644 = __THREW__;
                   __THREW__ = 0;
                   if ($644 & 1) {
                    $664 = ___cxa_find_matching_catch() | 0;
                    $665 = tempRet0;
                    __ZdlPv($640);
                    $eh$lpad$body201$index57Z2D = $665;
                    $eh$lpad$body201$indexZ2D = $664;
                    break;
                   }
                   $646 = $640 + 16 | 0;
                   HEAP32[$646 >> 2] = HEAP32[$639 >> 2];
                   HEAP32[$646 + 4 >> 2] = HEAP32[$639 + 4 >> 2];
                   HEAP32[$646 + 8 >> 2] = HEAP32[$639 + 8 >> 2];
                   HEAP32[$646 + 12 >> 2] = HEAP32[$639 + 12 >> 2];
                   HEAP32[$640 + 32 >> 2] = 9;
                   HEAP32[$640 + 36 >> 2] = 0;
                   HEAP32[$640 + 40 >> 2] = 0;
                   HEAP32[$640 + 44 >> 2] = 0;
                   HEAP32[$640 >> 2] = 3356;
                   HEAP32[$640 + 48 >> 2] = $334;
                   HEAP32[$640 + 52 >> 2] = $633;
                   HEAP32[$13 >> 2] = $640;
                   $653 = $636 + 16 | 0;
                   $654 = HEAP32[$653 >> 2] | 0;
                   if ($654 >>> 0 < (HEAP32[$636 + 20 >> 2] | 0) >>> 0) {
                    HEAP32[$654 >> 2] = $640;
                    HEAP32[$653 >> 2] = (HEAP32[$653 >> 2] | 0) + 4;
                   } else {
                    __THREW__ = 0;
                    invoke_vii(50, $636 + 12 | 0, $13 | 0);
                    $662 = __THREW__;
                    __THREW__ = 0;
                    if ($662 & 1) {
                     label = 192;
                     break;
                    }
                   }
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
                   __THREW__ = 0;
                   $666 = invoke_ii(67, 12) | 0;
                   $667 = __THREW__;
                   __THREW__ = 0;
                   if ($667 & 1) {
                    $677 = ___cxa_find_matching_catch() | 0;
                    $eh$lpad$body212$index52Z2D = tempRet0;
                    $eh$lpad$body212$indexZ2D = $677;
                    label = 184;
                    break L359;
                   }
                   HEAP32[$666 >> 2] = $606;
                   HEAP32[$666 + 4 >> 2] = $376;
                   HEAP32[$666 + 8 >> 2] = $403;
                   $674 = HEAP32[$287 >> 2] | 0;
                   __THREW__ = 0;
                   invoke_vii(40, $37 | 0, $70 | 0);
                   $675 = __THREW__;
                   __THREW__ = 0;
                   if ($675 & 1) {
                    $762 = ___cxa_find_matching_catch() | 0;
                    $$8 = $762;
                    $$822 = tempRet0;
                   } else {
                    $681 = $76;
                    $686 = HEAP32[$681 + 4 >> 2] | 0;
                    $687 = $37 + 12 | 0;
                    HEAP32[$687 >> 2] = HEAP32[$681 >> 2];
                    HEAP32[$687 + 4 >> 2] = $686;
                    $692 = $last + 36 | 0;
                    $697 = HEAP32[$692 + 4 >> 2] | 0;
                    $698 = $37 + 20 | 0;
                    HEAP32[$698 >> 2] = HEAP32[$692 >> 2];
                    HEAP32[$698 + 4 >> 2] = $697;
                    HEAP32[$38 >> 2] = 0;
                    $702 = $38 + 4 | 0;
                    HEAP32[$702 >> 2] = 0;
                    HEAP32[$38 + 8 >> 2] = 0;
                    __THREW__ = 0;
                    $704 = invoke_ii(67, 12) | 0;
                    $705 = __THREW__;
                    __THREW__ = 0;
                    do if ($705 & 1) {
                     $723 = ___cxa_find_matching_catch() | 0;
                     $724 = tempRet0;
                     $725 = HEAP32[$38 >> 2] | 0;
                     $727 = $725;
                     if ($725) {
                      $728 = HEAP32[$702 >> 2] | 0;
                      if (($728 | 0) != ($725 | 0)) HEAP32[$702 >> 2] = $728 + (~(($728 + -4 - $727 | 0) >>> 2) << 2);
                      __ZdlPv($725);
                     }
                     $$7 = $723;
                     $$721 = $724;
                    } else {
                     HEAP32[$702 >> 2] = $704;
                     HEAP32[$38 >> 2] = $704;
                     HEAP32[$38 + 8 >> 2] = $704 + 12;
                     HEAP32[$704 >> 2] = HEAP32[$666 >> 2];
                     $711 = (HEAP32[$702 >> 2] | 0) + 4 | 0;
                     HEAP32[$702 >> 2] = $711;
                     $712 = $666 + 4 | 0;
                     HEAP32[$711 >> 2] = HEAP32[$712 >> 2];
                     $715 = (HEAP32[$702 >> 2] | 0) + 4 | 0;
                     HEAP32[$702 >> 2] = $715;
                     HEAP32[$715 >> 2] = HEAP32[$712 + 4 >> 2];
                     HEAP32[$702 >> 2] = (HEAP32[$702 >> 2] | 0) + 4;
                     __THREW__ = 0;
                     $720 = invoke_iiiiii(21, $674 | 0, $37 | 0, $640 | 0, $38 | 0, 0) | 0;
                     $721 = __THREW__;
                     __THREW__ = 0;
                     if ($721 & 1) {
                      $764 = ___cxa_find_matching_catch() | 0;
                      $765 = tempRet0;
                      $766 = HEAP32[$38 >> 2] | 0;
                      if (!$766) {
                       $$7 = $764;
                       $$721 = $765;
                       break;
                      }
                      $769 = HEAP32[$702 >> 2] | 0;
                      if (($769 | 0) != ($766 | 0)) HEAP32[$702 >> 2] = $769 + (~(($769 + -4 - $766 | 0) >>> 2) << 2);
                      __ZdlPv($766);
                      $$7 = $764;
                      $$721 = $765;
                      break;
                     }
                     $734 = HEAP32[$38 >> 2] | 0;
                     $736 = $734;
                     if ($734) {
                      $737 = HEAP32[$702 >> 2] | 0;
                      if (($737 | 0) != ($734 | 0)) HEAP32[$702 >> 2] = $737 + (~(($737 + -4 - $736 | 0) >>> 2) << 2);
                      __ZdlPv($734);
                     }
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
                     __ZdlPv($666);
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 16 | 0);
                     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 4 | 0);
                     $$pn = $720;
                     label = 223;
                     break L279;
                    } while (0);
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($37);
                    $$8 = $$7;
                    $$822 = $$721;
                   }
                   __ZdlPv($666);
                   $$9 = $$8;
                   $$923 = $$822;
                   break L359;
                  } while (0);
                  if ((label | 0) == 192) {
                   $760 = ___cxa_find_matching_catch() | 0;
                   $eh$lpad$body201$index57Z2D = tempRet0;
                   $eh$lpad$body201$indexZ2D = $760;
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
                  $$9 = $eh$lpad$body201$indexZ2D;
                  $$923 = $eh$lpad$body201$index57Z2D;
                  break L359;
                 } while (0);
                 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
                 $$9 = $$6;
                 $$923 = $$620;
                } while (0);
                if ((label | 0) == 183) {
                 $745 = ___cxa_find_matching_catch() | 0;
                 $eh$lpad$body212$index52Z2D = tempRet0;
                 $eh$lpad$body212$indexZ2D = $745;
                 label = 184;
                }
                if ((label | 0) == 184) {
                 $$9 = $eh$lpad$body212$indexZ2D;
                 $$923 = $eh$lpad$body212$index52Z2D;
                }
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 16 | 0);
                __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($last + 4 | 0);
                $$1210 = $$9;
                $$1226 = $$923;
                break;
               }
              default:
               {
                $777 = $ss + 64 | 0;
                $778 = $ss + 8 | 0;
                HEAP32[$778 >> 2] = 2912;
                $779 = $ss + 12 | 0;
                HEAP32[$ss >> 2] = 2952;
                HEAP32[$777 >> 2] = 2972;
                HEAP32[$ss + 4 >> 2] = 0;
                __THREW__ = 0;
                invoke_vii(41, $ss + 64 | 0, $779 | 0);
                $782 = __THREW__;
                __THREW__ = 0;
                if ($782 & 1) {
                 $795 = ___cxa_find_matching_catch() | 0;
                 $$0$i253 = tempRet0;
                 $$01$i = $795;
                } else {
                 HEAP32[$ss + 136 >> 2] = 0;
                 HEAP32[$ss + 140 >> 2] = -1;
                 HEAP32[$ss >> 2] = 2892;
                 HEAP32[$ss + 64 >> 2] = 2932;
                 HEAP32[$778 >> 2] = 2912;
                 __THREW__ = 0;
                 invoke_vi(173, $779 | 0);
                 $787 = __THREW__;
                 __THREW__ = 0;
                 do if ($787 & 1) {
                  $797 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body$i$index62Z2D = tempRet0;
                  $eh$lpad$body$i$indexZ2D = $797;
                 } else {
                  HEAP32[$779 >> 2] = 2988;
                  $789 = $ss + 44 | 0;
                  HEAP32[$789 >> 2] = 0;
                  HEAP32[$789 + 4 >> 2] = 0;
                  HEAP32[$789 + 8 >> 2] = 0;
                  HEAP32[$789 + 12 >> 2] = 0;
                  HEAP32[$ss + 60 >> 2] = 24;
                  HEAP32[$12 >> 2] = 0;
                  HEAP32[$12 + 4 >> 2] = 0;
                  HEAP32[$12 + 8 >> 2] = 0;
                  __THREW__ = 0;
                  invoke_vii(42, $779 | 0, $12 | 0);
                  $791 = __THREW__;
                  __THREW__ = 0;
                  if ($791 & 1) {
                   $793 = ___cxa_find_matching_catch() | 0;
                   $794 = tempRet0;
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
                   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($789);
                   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($779);
                   $eh$lpad$body$i$index62Z2D = $794;
                   $eh$lpad$body$i$indexZ2D = $793;
                   break;
                  }
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
                  $799 = $ss + 8 | 0;
                  __THREW__ = 0;
                  $800 = invoke_iiii(29, $799 | 0, 51499, 40) | 0;
                  $801 = __THREW__;
                  __THREW__ = 0;
                  L290 : do if ($801 & 1) label = 218; else {
                   __THREW__ = 0;
                   invoke_vii(51, $800 | 0, $maybe_if | 0);
                   $803 = __THREW__;
                   __THREW__ = 0;
                   if ($803 & 1) {
                    label = 218;
                    break;
                   }
                   $805 = ___cxa_allocate_exception(40) | 0;
                   __THREW__ = 0;
                   invoke_vii(43, $39 | 0, $779 | 0);
                   $806 = __THREW__;
                   __THREW__ = 0;
                   L293 : do if ($806 & 1) {
                    $819 = ___cxa_find_matching_catch() | 0;
                    $$1024478 = tempRet0;
                    $$10479 = $819;
                   } else {
                    __THREW__ = 0;
                    invoke_vii(40, $805 | 0, $240 | 0);
                    $808 = __THREW__;
                    __THREW__ = 0;
                    do if ($808 & 1) $$05 = 1; else {
                     $810 = $805 + 12 | 0;
                     HEAP32[$810 >> 2] = HEAP32[$140 >> 2];
                     HEAP32[$810 + 4 >> 2] = HEAP32[$140 + 4 >> 2];
                     HEAP32[$810 + 8 >> 2] = HEAP32[$140 + 8 >> 2];
                     HEAP32[$810 + 12 >> 2] = HEAP32[$140 + 12 >> 2];
                     __THREW__ = 0;
                     invoke_vii(40, $805 + 28 | 0, $39 | 0);
                     $812 = __THREW__;
                     __THREW__ = 0;
                     if ($812 & 1) {
                      $814 = ___cxa_find_matching_catch() | 0;
                      $815 = tempRet0;
                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($805);
                      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
                      $$1024478 = $815;
                      $$10479 = $814;
                      break L293;
                     } else {
                      __THREW__ = 0;
                      invoke_viii(4, $805 | 0, 8, 172);
                      __THREW__ = 0;
                      $$05 = 0;
                      break;
                     }
                    } while (0);
                    $821 = ___cxa_find_matching_catch() | 0;
                    $822 = tempRet0;
                    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
                    if ($$05) {
                     $$1024478 = $822;
                     $$10479 = $821;
                    } else {
                     $$11 = $821;
                     $$1125 = $822;
                     break L290;
                    }
                   } while (0);
                   ___cxa_free_exception($805 | 0);
                   $$11 = $$10479;
                   $$1125 = $$1024478;
                  } while (0);
                  if ((label | 0) == 218) {
                   $817 = ___cxa_find_matching_catch() | 0;
                   $$11 = $817;
                   $$1125 = tempRet0;
                  }
                  HEAP32[$ss >> 2] = 2892;
                  HEAP32[$777 >> 2] = 2932;
                  HEAP32[$799 >> 2] = 2912;
                  HEAP32[$779 >> 2] = 2988;
                  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($789);
                  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($779);
                  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($777);
                  $$1210 = $$11;
                  $$1226 = $$1125;
                  break L279;
                 } while (0);
                 $$0$i253 = $eh$lpad$body$i$index62Z2D;
                 $$01$i = $eh$lpad$body$i$indexZ2D;
                }
                __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($777);
                $eh$lpad$body138$index41Z2D = $$0$i253;
                $eh$lpad$body138$indexZ2D = $$01$i;
                label = 135;
               }
              } while (0);
              if ((label | 0) == 134) {
               $566 = ___cxa_find_matching_catch() | 0;
               $eh$lpad$body138$index41Z2D = tempRet0;
               $eh$lpad$body138$indexZ2D = $566;
               label = 135;
              } else if ((label | 0) == 223) {
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($413);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($408);
               __ZdlPv($305);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id_token + 16 | 0);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($289);
               __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
               $$12 = $$pn;
               label = 323;
               break L47;
              }
              if ((label | 0) == 135) {
               $$1210 = $eh$lpad$body138$indexZ2D;
               $$1226 = $eh$lpad$body138$index41Z2D;
              }
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($413);
              __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($408);
              $$13 = $$1210;
              $$1327 = $$1226;
              break L227;
             } while (0);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
             $$13 = $$3;
             $$1327 = $$317;
             break L227;
            } while (0);
            if ((label | 0) == 125) {
             $553 = ___cxa_find_matching_catch() | 0;
             $eh$lpad$body94$index34Z2D = tempRet0;
             $eh$lpad$body94$indexZ2D = $553;
            }
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
            $$216 = $eh$lpad$body94$index34Z2D;
            $$29 = $eh$lpad$body94$indexZ2D;
           }
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
           $$13 = $$29;
           $$1327 = $$216;
          } while (0);
          if ((label | 0) == 122) {
           $549 = ___cxa_find_matching_catch() | 0;
           $eh$lpad$body121$index28Z2D = tempRet0;
           $eh$lpad$body121$indexZ2D = $549;
           label = 123;
          }
          if ((label | 0) == 123) {
           $$13 = $eh$lpad$body121$indexZ2D;
           $$1327 = $eh$lpad$body121$index28Z2D;
          }
          __ZdlPv($305);
          $$1411 = $$13;
          $$1428 = $$1327;
         } while (0);
         if ((label | 0) == 121) {
          $$1411 = $eh$lpad$body83$indexZ2D;
          $$1428 = $eh$lpad$body83$index22Z2D;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id_token + 16 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($289);
         $$15 = $$1411;
         $$1529 = $$1428;
        }
       } while (0);
       if ((label | 0) == 118) {
        $545 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body78$index16Z2D = tempRet0;
        $eh$lpad$body78$indexZ2D = $545;
        label = 119;
       }
       if ((label | 0) == 119) {
        $$15 = $eh$lpad$body78$indexZ2D;
        $$1529 = $eh$lpad$body78$index16Z2D;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
       $$20 = $$15;
       $$2034 = $$1529;
      }
     }
    } while (0);
    if ((label | 0) == 32) {
     $206 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body60$index10Z2D = tempRet0;
     $eh$lpad$body60$indexZ2D = $206;
     label = 33;
    } else if ((label | 0) == 323) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
     $$2 = $$12;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    }
    if ((label | 0) == 33) {
     $$20 = $eh$lpad$body60$indexZ2D;
     $$2034 = $eh$lpad$body60$index10Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($134);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
    $$28 = $$20;
    $$2842 = $$2034;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 8:
  {
   __THREW__ = 0;
   $1129 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
   $1130 = __THREW__;
   __THREW__ = 0;
   if ($1130 & 1) label = 20; else {
    __THREW__ = 0;
    invoke_viiii(12, $48 | 0, $this | 0, 9, 0);
    $1132 = __THREW__;
    __THREW__ = 0;
    if ($1132 & 1) label = 20; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48 + 4 | 0);
     $$2 = $1129;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    }
   }
   break;
  }
 case 12:
  {
   $1137 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $49 | 0, $70 | 0);
   $1138 = __THREW__;
   __THREW__ = 0;
   if ($1138 & 1) label = 20; else {
    $1141 = $49 + 12 | 0;
    $1142 = $76;
    $1147 = HEAP32[$1142 + 4 >> 2] | 0;
    $1148 = $1141;
    HEAP32[$1148 >> 2] = HEAP32[$1142 >> 2];
    HEAP32[$1148 + 4 >> 2] = $1147;
    $1153 = $tok + 36 | 0;
    $1158 = HEAP32[$1153 + 4 >> 2] | 0;
    $1159 = $49 + 20 | 0;
    HEAP32[$1159 >> 2] = HEAP32[$1153 >> 2];
    HEAP32[$1159 + 4 >> 2] = $1158;
    $1170 = +_strtod((HEAP8[$67 >> 0] & 1) == 0 ? $67 + 1 | 0 : HEAP32[$tok + 12 >> 2] | 0, 0);
    __THREW__ = 0;
    $1171 = invoke_ii(67, 56) | 0;
    $1172 = __THREW__;
    __THREW__ = 0;
    do if ($1172 & 1) label = 336; else {
     HEAP32[$1171 >> 2] = 3192;
     __THREW__ = 0;
     invoke_vii(40, $1171 + 4 | 0, $49 | 0);
     $1175 = __THREW__;
     __THREW__ = 0;
     if ($1175 & 1) {
      $1194 = ___cxa_find_matching_catch() | 0;
      $1195 = tempRet0;
      __ZdlPv($1171);
      $eh$lpad$body359$index87Z2D = $1195;
      $eh$lpad$body359$indexZ2D = $1194;
      break;
     }
     $1177 = $1171 + 16 | 0;
     HEAP32[$1177 >> 2] = HEAP32[$1141 >> 2];
     HEAP32[$1177 + 4 >> 2] = HEAP32[$1141 + 4 >> 2];
     HEAP32[$1177 + 8 >> 2] = HEAP32[$1141 + 8 >> 2];
     HEAP32[$1177 + 12 >> 2] = HEAP32[$1141 + 12 >> 2];
     HEAP32[$1171 + 32 >> 2] = 13;
     HEAP32[$1171 + 36 >> 2] = 0;
     HEAP32[$1171 + 40 >> 2] = 0;
     HEAP32[$1171 + 44 >> 2] = 0;
     HEAP32[$1171 >> 2] = 3484;
     HEAPF64[$1171 + 48 >> 3] = $1170;
     HEAP32[$10 >> 2] = $1171;
     $1183 = $1137 + 16 | 0;
     $1184 = HEAP32[$1183 >> 2] | 0;
     if ($1184 >>> 0 < (HEAP32[$1137 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$1184 >> 2] = $1171;
      HEAP32[$1183 >> 2] = (HEAP32[$1183 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $1137 + 12 | 0, $10 | 0);
      $1192 = __THREW__;
      __THREW__ = 0;
      if ($1192 & 1) {
       label = 336;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
     $$2 = $1171;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 336) {
     $1196 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body359$index87Z2D = tempRet0;
     $eh$lpad$body359$indexZ2D = $1196;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($49);
    $$28 = $eh$lpad$body359$indexZ2D;
    $$2842 = $eh$lpad$body359$index87Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 14:
  {
   $1199 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $50 | 0, $70 | 0);
   $1200 = __THREW__;
   __THREW__ = 0;
   if ($1200 & 1) label = 20; else {
    $1204 = $76;
    $1209 = HEAP32[$1204 + 4 >> 2] | 0;
    $1210 = $50 + 12 | 0;
    HEAP32[$1210 >> 2] = HEAP32[$1204 >> 2];
    HEAP32[$1210 + 4 >> 2] = $1209;
    $1215 = $tok + 36 | 0;
    $1220 = HEAP32[$1215 + 4 >> 2] | 0;
    $1221 = $50 + 20 | 0;
    HEAP32[$1221 >> 2] = HEAP32[$1215 >> 2];
    HEAP32[$1221 + 4 >> 2] = $1220;
    __THREW__ = 0;
    invoke_vii(40, $51 | 0, $67 | 0);
    $1225 = __THREW__;
    __THREW__ = 0;
    do if ($1225 & 1) {
     $1230 = ___cxa_find_matching_catch() | 0;
     $$21 = $1230;
     $$2135 = tempRet0;
    } else {
     __THREW__ = 0;
     $1227 = invoke_iiii(31, $1199 | 0, $50 | 0, $51 | 0) | 0;
     $1228 = __THREW__;
     __THREW__ = 0;
     if ($1228 & 1) {
      $1232 = ___cxa_find_matching_catch() | 0;
      $1233 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
      $$21 = $1232;
      $$2135 = $1233;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($51);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
     $$2 = $1227;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
    $$28 = $$21;
    $$2842 = $$2135;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 17:
  {
   $1235 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $52 | 0, $70 | 0);
   $1236 = __THREW__;
   __THREW__ = 0;
   if ($1236 & 1) label = 20; else {
    $1239 = $52 + 12 | 0;
    $1240 = $76;
    $1245 = HEAP32[$1240 + 4 >> 2] | 0;
    $1246 = $1239;
    HEAP32[$1246 >> 2] = HEAP32[$1240 >> 2];
    HEAP32[$1246 + 4 >> 2] = $1245;
    $1251 = $tok + 36 | 0;
    $1256 = HEAP32[$1251 + 4 >> 2] | 0;
    $1257 = $52 + 20 | 0;
    HEAP32[$1257 >> 2] = HEAP32[$1251 >> 2];
    HEAP32[$1257 + 4 >> 2] = $1256;
    __THREW__ = 0;
    $1261 = invoke_ii(67, 52) | 0;
    $1262 = __THREW__;
    __THREW__ = 0;
    do if ($1262 & 1) label = 353; else {
     HEAP32[$1261 >> 2] = 3192;
     __THREW__ = 0;
     invoke_vii(40, $1261 + 4 | 0, $52 | 0);
     $1265 = __THREW__;
     __THREW__ = 0;
     if ($1265 & 1) {
      $1284 = ___cxa_find_matching_catch() | 0;
      $1285 = tempRet0;
      __ZdlPv($1261);
      $eh$lpad$body367$index92Z2D = $1285;
      $eh$lpad$body367$indexZ2D = $1284;
      break;
     }
     $1267 = $1261 + 16 | 0;
     HEAP32[$1267 >> 2] = HEAP32[$1239 >> 2];
     HEAP32[$1267 + 4 >> 2] = HEAP32[$1239 + 4 >> 2];
     HEAP32[$1267 + 8 >> 2] = HEAP32[$1239 + 8 >> 2];
     HEAP32[$1267 + 12 >> 2] = HEAP32[$1239 + 12 >> 2];
     HEAP32[$1261 + 32 >> 2] = 11;
     HEAP32[$1261 + 36 >> 2] = 0;
     HEAP32[$1261 + 40 >> 2] = 0;
     HEAP32[$1261 + 44 >> 2] = 0;
     HEAP32[$1261 >> 2] = 3500;
     HEAP8[$1261 + 48 >> 0] = 0;
     HEAP32[$9 >> 2] = $1261;
     $1273 = $1235 + 16 | 0;
     $1274 = HEAP32[$1273 >> 2] | 0;
     if ($1274 >>> 0 < (HEAP32[$1235 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$1274 >> 2] = $1261;
      HEAP32[$1273 >> 2] = (HEAP32[$1273 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $1235 + 12 | 0, $9 | 0);
      $1282 = __THREW__;
      __THREW__ = 0;
      if ($1282 & 1) {
       label = 353;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
     $$2 = $1261;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 353) {
     $1286 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body367$index92Z2D = tempRet0;
     $eh$lpad$body367$indexZ2D = $1286;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
    $$28 = $eh$lpad$body367$indexZ2D;
    $$2842 = $eh$lpad$body367$index92Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 30:
  {
   $1289 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $53 | 0, $70 | 0);
   $1290 = __THREW__;
   __THREW__ = 0;
   if ($1290 & 1) label = 20; else {
    $1293 = $53 + 12 | 0;
    $1294 = $76;
    $1299 = HEAP32[$1294 + 4 >> 2] | 0;
    $1300 = $1293;
    HEAP32[$1300 >> 2] = HEAP32[$1294 >> 2];
    HEAP32[$1300 + 4 >> 2] = $1299;
    $1305 = $tok + 36 | 0;
    $1310 = HEAP32[$1305 + 4 >> 2] | 0;
    $1311 = $53 + 20 | 0;
    HEAP32[$1311 >> 2] = HEAP32[$1305 >> 2];
    HEAP32[$1311 + 4 >> 2] = $1310;
    __THREW__ = 0;
    $1315 = invoke_ii(67, 52) | 0;
    $1316 = __THREW__;
    __THREW__ = 0;
    do if ($1316 & 1) label = 363; else {
     HEAP32[$1315 >> 2] = 3192;
     __THREW__ = 0;
     invoke_vii(40, $1315 + 4 | 0, $53 | 0);
     $1319 = __THREW__;
     __THREW__ = 0;
     if ($1319 & 1) {
      $1338 = ___cxa_find_matching_catch() | 0;
      $1339 = tempRet0;
      __ZdlPv($1315);
      $eh$lpad$body373$index97Z2D = $1339;
      $eh$lpad$body373$indexZ2D = $1338;
      break;
     }
     $1321 = $1315 + 16 | 0;
     HEAP32[$1321 >> 2] = HEAP32[$1293 >> 2];
     HEAP32[$1321 + 4 >> 2] = HEAP32[$1293 + 4 >> 2];
     HEAP32[$1321 + 8 >> 2] = HEAP32[$1293 + 8 >> 2];
     HEAP32[$1321 + 12 >> 2] = HEAP32[$1293 + 12 >> 2];
     HEAP32[$1315 + 32 >> 2] = 11;
     HEAP32[$1315 + 36 >> 2] = 0;
     HEAP32[$1315 + 40 >> 2] = 0;
     HEAP32[$1315 + 44 >> 2] = 0;
     HEAP32[$1315 >> 2] = 3500;
     HEAP8[$1315 + 48 >> 0] = 1;
     HEAP32[$8 >> 2] = $1315;
     $1327 = $1289 + 16 | 0;
     $1328 = HEAP32[$1327 >> 2] | 0;
     if ($1328 >>> 0 < (HEAP32[$1289 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$1328 >> 2] = $1315;
      HEAP32[$1327 >> 2] = (HEAP32[$1327 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $1289 + 12 | 0, $8 | 0);
      $1336 = __THREW__;
      __THREW__ = 0;
      if ($1336 & 1) {
       label = 363;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
     $$2 = $1315;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 363) {
     $1340 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body373$index97Z2D = tempRet0;
     $eh$lpad$body373$indexZ2D = $1340;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($53);
    $$28 = $eh$lpad$body373$indexZ2D;
    $$2842 = $eh$lpad$body373$index97Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 25:
  {
   $1343 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $54 | 0, $70 | 0);
   $1344 = __THREW__;
   __THREW__ = 0;
   if ($1344 & 1) label = 20; else {
    $1347 = $54 + 12 | 0;
    $1348 = $76;
    $1353 = HEAP32[$1348 + 4 >> 2] | 0;
    $1354 = $1347;
    HEAP32[$1354 >> 2] = HEAP32[$1348 >> 2];
    HEAP32[$1354 + 4 >> 2] = $1353;
    $1359 = $tok + 36 | 0;
    $1364 = HEAP32[$1359 + 4 >> 2] | 0;
    $1365 = $54 + 20 | 0;
    HEAP32[$1365 >> 2] = HEAP32[$1359 >> 2];
    HEAP32[$1365 + 4 >> 2] = $1364;
    __THREW__ = 0;
    $1369 = invoke_ii(67, 48) | 0;
    $1370 = __THREW__;
    __THREW__ = 0;
    do if ($1370 & 1) label = 373; else {
     HEAP32[$1369 >> 2] = 3192;
     __THREW__ = 0;
     invoke_vii(40, $1369 + 4 | 0, $54 | 0);
     $1373 = __THREW__;
     __THREW__ = 0;
     if ($1373 & 1) {
      $1391 = ___cxa_find_matching_catch() | 0;
      $1392 = tempRet0;
      __ZdlPv($1369);
      $eh$lpad$body380$index102Z2D = $1392;
      $eh$lpad$body380$indexZ2D = $1391;
      break;
     }
     $1375 = $1369 + 16 | 0;
     HEAP32[$1375 >> 2] = HEAP32[$1347 >> 2];
     HEAP32[$1375 + 4 >> 2] = HEAP32[$1347 + 4 >> 2];
     HEAP32[$1375 + 8 >> 2] = HEAP32[$1347 + 8 >> 2];
     HEAP32[$1375 + 12 >> 2] = HEAP32[$1347 + 12 >> 2];
     HEAP32[$1369 + 32 >> 2] = 12;
     HEAP32[$1369 + 36 >> 2] = 0;
     HEAP32[$1369 + 40 >> 2] = 0;
     HEAP32[$1369 + 44 >> 2] = 0;
     HEAP32[$1369 >> 2] = 3308;
     HEAP32[$7 >> 2] = $1369;
     $1380 = $1343 + 16 | 0;
     $1381 = HEAP32[$1380 >> 2] | 0;
     if ($1381 >>> 0 < (HEAP32[$1343 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$1381 >> 2] = $1369;
      HEAP32[$1380 >> 2] = (HEAP32[$1380 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $1343 + 12 | 0, $7 | 0);
      $1389 = __THREW__;
      __THREW__ = 0;
      if ($1389 & 1) {
       label = 373;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
     $$2 = $1369;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 373) {
     $1393 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body380$index102Z2D = tempRet0;
     $eh$lpad$body380$indexZ2D = $1393;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54);
    $$28 = $eh$lpad$body380$indexZ2D;
    $$2842 = $eh$lpad$body380$index102Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 21:
  {
   __THREW__ = 0;
   invoke_viiii(12, $file | 0, $this | 0, 14, 0);
   $1395 = __THREW__;
   __THREW__ = 0;
   if ($1395 & 1) label = 20; else {
    $1398 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $55 | 0, $70 | 0);
    $1399 = __THREW__;
    __THREW__ = 0;
    if ($1399 & 1) {
     $1466 = ___cxa_find_matching_catch() | 0;
     $$23 = $1466;
     $$2337 = tempRet0;
     $$pre$phi512Z2D = $file + 4 | 0;
    } else {
     $1402 = $55 + 12 | 0;
     $1403 = $76;
     $1408 = HEAP32[$1403 + 4 >> 2] | 0;
     $1409 = $1402;
     HEAP32[$1409 >> 2] = HEAP32[$1403 >> 2];
     HEAP32[$1409 + 4 >> 2] = $1408;
     $1414 = $file + 36 | 0;
     $1419 = HEAP32[$1414 + 4 >> 2] | 0;
     $1420 = $55 + 20 | 0;
     HEAP32[$1420 >> 2] = HEAP32[$1414 >> 2];
     HEAP32[$1420 + 4 >> 2] = $1419;
     $1424 = $file + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $56 | 0, $1424 | 0);
     $1425 = __THREW__;
     __THREW__ = 0;
     if ($1425 & 1) {
      $1468 = ___cxa_find_matching_catch() | 0;
      $$22 = $1468;
      $$2236 = tempRet0;
     } else {
      __THREW__ = 0;
      $1427 = invoke_ii(67, 60) | 0;
      $1428 = __THREW__;
      __THREW__ = 0;
      L555 : do if ($1428 & 1) label = 394; else {
       HEAP32[$1427 >> 2] = 3192;
       $1430 = $1427 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $1430 | 0, $55 | 0);
       $1431 = __THREW__;
       __THREW__ = 0;
       do if ($1431 & 1) {
        $1463 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body448$index107Z2D = tempRet0;
        $eh$lpad$body448$indexZ2D = $1463;
       } else {
        $1433 = $1427 + 16 | 0;
        HEAP32[$1433 >> 2] = HEAP32[$1402 >> 2];
        HEAP32[$1433 + 4 >> 2] = HEAP32[$1402 + 4 >> 2];
        HEAP32[$1433 + 8 >> 2] = HEAP32[$1402 + 8 >> 2];
        HEAP32[$1433 + 12 >> 2] = HEAP32[$1402 + 12 >> 2];
        HEAP32[$1427 + 32 >> 2] = 7;
        $1435 = $1427 + 36 | 0;
        HEAP32[$1435 >> 2] = 0;
        $1436 = $1427 + 40 | 0;
        HEAP32[$1436 >> 2] = 0;
        HEAP32[$1427 + 44 >> 2] = 0;
        HEAP32[$1427 >> 2] = 3516;
        __THREW__ = 0;
        invoke_vii(40, $1427 + 48 | 0, $56 | 0);
        $1439 = __THREW__;
        __THREW__ = 0;
        if ($1439 & 1) {
         $1441 = ___cxa_find_matching_catch() | 0;
         $1442 = tempRet0;
         HEAP32[$1427 >> 2] = 3192;
         $1443 = HEAP32[$1435 >> 2] | 0;
         $1445 = $1443;
         if ($1443) {
          $1446 = HEAP32[$1436 >> 2] | 0;
          if (($1446 | 0) != ($1443 | 0)) HEAP32[$1436 >> 2] = $1446 + (~(($1446 + -4 - $1445 | 0) >>> 2) << 2);
          __ZdlPv($1443);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1430);
         $eh$lpad$body448$index107Z2D = $1442;
         $eh$lpad$body448$indexZ2D = $1441;
         break;
        } else {
         HEAP32[$6 >> 2] = $1427;
         $1452 = $1398 + 16 | 0;
         $1453 = HEAP32[$1452 >> 2] | 0;
         if ($1453 >>> 0 < (HEAP32[$1398 + 20 >> 2] | 0) >>> 0) {
          HEAP32[$1453 >> 2] = $1427;
          HEAP32[$1452 >> 2] = (HEAP32[$1452 >> 2] | 0) + 4;
         } else {
          __THREW__ = 0;
          invoke_vii(50, $1398 + 12 | 0, $6 | 0);
          $1461 = __THREW__;
          __THREW__ = 0;
          if ($1461 & 1) {
           label = 394;
           break L555;
          }
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file + 16 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1424);
         $$2 = $1427;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
         STACKTOP = sp;
         return $$2 | 0;
        }
       } while (0);
       __ZdlPv($1427);
       $eh$lpad$body386$index112Z2D = $eh$lpad$body448$index107Z2D;
       $eh$lpad$body386$indexZ2D = $eh$lpad$body448$indexZ2D;
      } while (0);
      if ((label | 0) == 394) {
       $1470 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body386$index112Z2D = tempRet0;
       $eh$lpad$body386$indexZ2D = $1470;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($56);
      $$22 = $eh$lpad$body386$indexZ2D;
      $$2236 = $eh$lpad$body386$index112Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     $$23 = $$22;
     $$2337 = $$2236;
     $$pre$phi512Z2D = $1424;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phi512Z2D);
    $$28 = $$23;
    $$2842 = $$2337;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 22:
  {
   __THREW__ = 0;
   invoke_viiii(12, $file3 | 0, $this | 0, 14, 0);
   $1473 = __THREW__;
   __THREW__ = 0;
   if ($1473 & 1) label = 20; else {
    $1476 = HEAP32[$this + 4 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $57 | 0, $70 | 0);
    $1477 = __THREW__;
    __THREW__ = 0;
    if ($1477 & 1) {
     $1544 = ___cxa_find_matching_catch() | 0;
     $$25 = $1544;
     $$2539 = tempRet0;
     $$pre$phi514Z2D = $file3 + 4 | 0;
    } else {
     $1480 = $57 + 12 | 0;
     $1481 = $76;
     $1486 = HEAP32[$1481 + 4 >> 2] | 0;
     $1487 = $1480;
     HEAP32[$1487 >> 2] = HEAP32[$1481 >> 2];
     HEAP32[$1487 + 4 >> 2] = $1486;
     $1492 = $file3 + 36 | 0;
     $1497 = HEAP32[$1492 + 4 >> 2] | 0;
     $1498 = $57 + 20 | 0;
     HEAP32[$1498 >> 2] = HEAP32[$1492 >> 2];
     HEAP32[$1498 + 4 >> 2] = $1497;
     $1502 = $file3 + 4 | 0;
     __THREW__ = 0;
     invoke_vii(40, $58 | 0, $1502 | 0);
     $1503 = __THREW__;
     __THREW__ = 0;
     if ($1503 & 1) {
      $1546 = ___cxa_find_matching_catch() | 0;
      $$24 = $1546;
      $$2438 = tempRet0;
     } else {
      __THREW__ = 0;
      $1505 = invoke_ii(67, 60) | 0;
      $1506 = __THREW__;
      __THREW__ = 0;
      L589 : do if ($1506 & 1) label = 417; else {
       HEAP32[$1505 >> 2] = 3192;
       $1508 = $1505 + 4 | 0;
       __THREW__ = 0;
       invoke_vii(40, $1508 | 0, $57 | 0);
       $1509 = __THREW__;
       __THREW__ = 0;
       do if ($1509 & 1) {
        $1541 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body456$index117Z2D = tempRet0;
        $eh$lpad$body456$indexZ2D = $1541;
       } else {
        $1511 = $1505 + 16 | 0;
        HEAP32[$1511 >> 2] = HEAP32[$1480 >> 2];
        HEAP32[$1511 + 4 >> 2] = HEAP32[$1480 + 4 >> 2];
        HEAP32[$1511 + 8 >> 2] = HEAP32[$1480 + 8 >> 2];
        HEAP32[$1511 + 12 >> 2] = HEAP32[$1480 + 12 >> 2];
        HEAP32[$1505 + 32 >> 2] = 8;
        $1513 = $1505 + 36 | 0;
        HEAP32[$1513 >> 2] = 0;
        $1514 = $1505 + 40 | 0;
        HEAP32[$1514 >> 2] = 0;
        HEAP32[$1505 + 44 >> 2] = 0;
        HEAP32[$1505 >> 2] = 3532;
        __THREW__ = 0;
        invoke_vii(40, $1505 + 48 | 0, $58 | 0);
        $1517 = __THREW__;
        __THREW__ = 0;
        if ($1517 & 1) {
         $1519 = ___cxa_find_matching_catch() | 0;
         $1520 = tempRet0;
         HEAP32[$1505 >> 2] = 3192;
         $1521 = HEAP32[$1513 >> 2] | 0;
         $1523 = $1521;
         if ($1521) {
          $1524 = HEAP32[$1514 >> 2] | 0;
          if (($1524 | 0) != ($1521 | 0)) HEAP32[$1514 >> 2] = $1524 + (~(($1524 + -4 - $1523 | 0) >>> 2) << 2);
          __ZdlPv($1521);
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1508);
         $eh$lpad$body456$index117Z2D = $1520;
         $eh$lpad$body456$indexZ2D = $1519;
         break;
        } else {
         HEAP32[$5 >> 2] = $1505;
         $1530 = $1476 + 16 | 0;
         $1531 = HEAP32[$1530 >> 2] | 0;
         if ($1531 >>> 0 < (HEAP32[$1476 + 20 >> 2] | 0) >>> 0) {
          HEAP32[$1531 >> 2] = $1505;
          HEAP32[$1530 >> 2] = (HEAP32[$1530 >> 2] | 0) + 4;
         } else {
          __THREW__ = 0;
          invoke_vii(50, $1476 + 12 | 0, $5 | 0);
          $1539 = __THREW__;
          __THREW__ = 0;
          if ($1539 & 1) {
           label = 417;
           break L589;
          }
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file3 + 16 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1502);
         $$2 = $1505;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
         STACKTOP = sp;
         return $$2 | 0;
        }
       } while (0);
       __ZdlPv($1505);
       $eh$lpad$body392$index122Z2D = $eh$lpad$body456$index117Z2D;
       $eh$lpad$body392$indexZ2D = $eh$lpad$body456$indexZ2D;
      } while (0);
      if ((label | 0) == 417) {
       $1548 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body392$index122Z2D = tempRet0;
       $eh$lpad$body392$indexZ2D = $1548;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($58);
      $$24 = $eh$lpad$body392$indexZ2D;
      $$2438 = $eh$lpad$body392$index122Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($57);
     $$25 = $$24;
     $$2539 = $$2438;
     $$pre$phi514Z2D = $1502;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($file3 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phi514Z2D);
    $$28 = $$25;
    $$2842 = $$2539;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 6:
  {
   if (!$obj_level) {
    $1552 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $59 | 0, 51584, 26);
    $1553 = __THREW__;
    __THREW__ = 0;
    L618 : do if ($1553 & 1) {
     $1564 = ___cxa_find_matching_catch() | 0;
     $$2640486 = tempRet0;
     $$26487 = $1564;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $1552 | 0, $70 | 0);
     $1555 = __THREW__;
     __THREW__ = 0;
     do if ($1555 & 1) $$0 = 1; else {
      $1557 = $1552 + 12 | 0;
      HEAP32[$1557 >> 2] = HEAP32[$76 >> 2];
      HEAP32[$1557 + 4 >> 2] = HEAP32[$76 + 4 >> 2];
      HEAP32[$1557 + 8 >> 2] = HEAP32[$76 + 8 >> 2];
      HEAP32[$1557 + 12 >> 2] = HEAP32[$76 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $1552 + 28 | 0, $59 | 0);
      $1559 = __THREW__;
      __THREW__ = 0;
      if ($1559 & 1) {
       $1561 = ___cxa_find_matching_catch() | 0;
       $1562 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1552);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
       $$2640486 = $1562;
       $$26487 = $1561;
       break L618;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $1552 | 0, 8, 172);
       __THREW__ = 0;
       $$0 = 0;
       break;
      }
     } while (0);
     $1566 = ___cxa_find_matching_catch() | 0;
     $1567 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($59);
     if ($$0) {
      $$2640486 = $1567;
      $$26487 = $1566;
     } else {
      $$28 = $1566;
      $$2842 = $1567;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
      ___resumeException($$28 | 0);
     }
    } while (0);
    ___cxa_free_exception($1552 | 0);
    $$28 = $$26487;
    $$2842 = $$2640486;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   $1568 = $this + 4 | 0;
   $1569 = HEAP32[$1568 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $60 | 0, $70 | 0);
   $1570 = __THREW__;
   __THREW__ = 0;
   if ($1570 & 1) label = 20; else {
    $1573 = $60 + 12 | 0;
    $1574 = $76;
    $1579 = HEAP32[$1574 + 4 >> 2] | 0;
    $1580 = $1573;
    HEAP32[$1580 >> 2] = HEAP32[$1574 >> 2];
    HEAP32[$1580 + 4 >> 2] = $1579;
    $1585 = $tok + 36 | 0;
    $1590 = HEAP32[$1585 + 4 >> 2] | 0;
    $1591 = $60 + 20 | 0;
    HEAP32[$1591 >> 2] = HEAP32[$1585 >> 2];
    HEAP32[$1591 + 4 >> 2] = $1590;
    $1595 = HEAP32[$1568 >> 2] | 0;
    __THREW__ = 0;
    invoke_viii(3, $61 | 0, 51098, 1);
    $1596 = __THREW__;
    __THREW__ = 0;
    if ($1596 & 1) {
     $1639 = ___cxa_find_matching_catch() | 0;
     $$27 = $1639;
     $$2741 = tempRet0;
    } else {
     $1598 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($1595, $61) | 0;
     do if (($1598 | 0) == ($1595 + 4 | 0)) {
      __THREW__ = 0;
      $1603 = invoke_ii(67, 12) | 0;
      $1604 = __THREW__;
      __THREW__ = 0;
      if ($1604 & 1) label = 447; else {
       __THREW__ = 0;
       invoke_vii(40, $1603 | 0, $61 | 0);
       $1606 = __THREW__;
       __THREW__ = 0;
       if ($1606 & 1) {
        $1611 = ___cxa_find_matching_catch() | 0;
        $1612 = tempRet0;
        __ZdlPv($1603);
        $eh$lpad$body408$index128Z2D = $1612;
        $eh$lpad$body408$indexZ2D = $1611;
        break;
       }
       __THREW__ = 0;
       $1608 = invoke_iii(23, $1595 | 0, $61 | 0) | 0;
       $1609 = __THREW__;
       __THREW__ = 0;
       if ($1609 & 1) label = 447; else {
        HEAP32[$1608 >> 2] = $1603;
        $$0$i404 = $1603;
        label = 439;
       }
      }
     } else {
      $$0$i404 = HEAP32[$1598 + 28 >> 2] | 0;
      label = 439;
     } while (0);
     do if ((label | 0) == 439) {
      __THREW__ = 0;
      $1613 = invoke_ii(67, 56) | 0;
      $1614 = __THREW__;
      __THREW__ = 0;
      if ($1614 & 1) label = 447; else {
       HEAP32[$1613 >> 2] = 3192;
       __THREW__ = 0;
       invoke_vii(40, $1613 + 4 | 0, $60 | 0);
       $1617 = __THREW__;
       __THREW__ = 0;
       if ($1617 & 1) {
        $1637 = ___cxa_find_matching_catch() | 0;
        $1638 = tempRet0;
        __ZdlPv($1613);
        $eh$lpad$body408$index128Z2D = $1638;
        $eh$lpad$body408$indexZ2D = $1637;
        break;
       }
       $1619 = $1613 + 16 | 0;
       HEAP32[$1619 >> 2] = HEAP32[$1573 >> 2];
       HEAP32[$1619 + 4 >> 2] = HEAP32[$1573 + 4 >> 2];
       HEAP32[$1619 + 8 >> 2] = HEAP32[$1573 + 8 >> 2];
       HEAP32[$1619 + 12 >> 2] = HEAP32[$1573 + 12 >> 2];
       HEAP32[$1613 + 32 >> 2] = 20;
       HEAP32[$1613 + 36 >> 2] = 0;
       HEAP32[$1613 + 40 >> 2] = 0;
       HEAP32[$1613 + 44 >> 2] = 0;
       HEAP32[$1613 >> 2] = 3388;
       HEAP32[$1613 + 48 >> 2] = $$0$i404;
       HEAP32[$1613 + 52 >> 2] = $$0$i404;
       HEAP32[$4 >> 2] = $1613;
       $1626 = $1569 + 16 | 0;
       $1627 = HEAP32[$1626 >> 2] | 0;
       if ($1627 >>> 0 < (HEAP32[$1569 + 20 >> 2] | 0) >>> 0) {
        HEAP32[$1627 >> 2] = $1613;
        HEAP32[$1626 >> 2] = (HEAP32[$1626 >> 2] | 0) + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(50, $1569 + 12 | 0, $4 | 0);
        $1635 = __THREW__;
        __THREW__ = 0;
        if ($1635 & 1) {
         label = 447;
         break;
        }
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
       $$2 = $1613;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
       STACKTOP = sp;
       return $$2 | 0;
      }
     } while (0);
     if ((label | 0) == 447) {
      $1641 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body408$index128Z2D = tempRet0;
      $eh$lpad$body408$indexZ2D = $1641;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     $$27 = $eh$lpad$body408$indexZ2D;
     $$2741 = $eh$lpad$body408$index128Z2D;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($60);
    $$28 = $$27;
    $$2842 = $$2741;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 11:
  {
   $1643 = $this + 4 | 0;
   $1644 = HEAP32[$1643 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $62 | 0, $70 | 0);
   $1645 = __THREW__;
   __THREW__ = 0;
   if ($1645 & 1) label = 20; else {
    $1648 = $62 + 12 | 0;
    $1649 = $76;
    $1654 = HEAP32[$1649 + 4 >> 2] | 0;
    $1655 = $1648;
    HEAP32[$1655 >> 2] = HEAP32[$1649 >> 2];
    HEAP32[$1655 + 4 >> 2] = $1654;
    $1660 = $tok + 36 | 0;
    $1665 = HEAP32[$1660 + 4 >> 2] | 0;
    $1666 = $62 + 20 | 0;
    HEAP32[$1666 >> 2] = HEAP32[$1660 >> 2];
    HEAP32[$1666 + 4 >> 2] = $1665;
    $1670 = HEAP32[$1643 >> 2] | 0;
    $1671 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($1670, $67) | 0;
    do if (($1671 | 0) == ($1670 + 4 | 0)) {
     __THREW__ = 0;
     $1676 = invoke_ii(67, 12) | 0;
     $1677 = __THREW__;
     __THREW__ = 0;
     if ($1677 & 1) label = 465; else {
      __THREW__ = 0;
      invoke_vii(40, $1676 | 0, $67 | 0);
      $1679 = __THREW__;
      __THREW__ = 0;
      if ($1679 & 1) {
       $1684 = ___cxa_find_matching_catch() | 0;
       $1685 = tempRet0;
       __ZdlPv($1676);
       $eh$lpad$body422$index135Z2D = $1685;
       $eh$lpad$body422$indexZ2D = $1684;
       break;
      }
      __THREW__ = 0;
      $1681 = invoke_iii(23, $1670 | 0, $67 | 0) | 0;
      $1682 = __THREW__;
      __THREW__ = 0;
      if ($1682 & 1) label = 465; else {
       HEAP32[$1681 >> 2] = $1676;
       $$0$i418 = $1676;
       label = 458;
      }
     }
    } else {
     $$0$i418 = HEAP32[$1671 + 28 >> 2] | 0;
     label = 458;
    } while (0);
    do if ((label | 0) == 458) {
     __THREW__ = 0;
     $1686 = invoke_ii(67, 56) | 0;
     $1687 = __THREW__;
     __THREW__ = 0;
     if ($1687 & 1) label = 465; else {
      HEAP32[$1686 >> 2] = 3192;
      __THREW__ = 0;
      invoke_vii(40, $1686 + 4 | 0, $62 | 0);
      $1690 = __THREW__;
      __THREW__ = 0;
      if ($1690 & 1) {
       $1710 = ___cxa_find_matching_catch() | 0;
       $1711 = tempRet0;
       __ZdlPv($1686);
       $eh$lpad$body422$index135Z2D = $1711;
       $eh$lpad$body422$indexZ2D = $1710;
       break;
      }
      $1692 = $1686 + 16 | 0;
      HEAP32[$1692 >> 2] = HEAP32[$1648 >> 2];
      HEAP32[$1692 + 4 >> 2] = HEAP32[$1648 + 4 >> 2];
      HEAP32[$1692 + 8 >> 2] = HEAP32[$1648 + 8 >> 2];
      HEAP32[$1692 + 12 >> 2] = HEAP32[$1648 + 12 >> 2];
      HEAP32[$1686 + 32 >> 2] = 20;
      HEAP32[$1686 + 36 >> 2] = 0;
      HEAP32[$1686 + 40 >> 2] = 0;
      HEAP32[$1686 + 44 >> 2] = 0;
      HEAP32[$1686 >> 2] = 3388;
      HEAP32[$1686 + 48 >> 2] = $$0$i418;
      HEAP32[$1686 + 52 >> 2] = $$0$i418;
      HEAP32[$3 >> 2] = $1686;
      $1699 = $1644 + 16 | 0;
      $1700 = HEAP32[$1699 >> 2] | 0;
      if ($1700 >>> 0 < (HEAP32[$1644 + 20 >> 2] | 0) >>> 0) {
       HEAP32[$1700 >> 2] = $1686;
       HEAP32[$1699 >> 2] = (HEAP32[$1699 >> 2] | 0) + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(50, $1644 + 12 | 0, $3 | 0);
       $1708 = __THREW__;
       __THREW__ = 0;
       if ($1708 & 1) {
        label = 465;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
      $$2 = $1686;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
      STACKTOP = sp;
      return $$2 | 0;
     }
    } while (0);
    if ((label | 0) == 465) {
     $1712 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body422$index135Z2D = tempRet0;
     $eh$lpad$body422$indexZ2D = $1712;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($62);
    $$28 = $eh$lpad$body422$indexZ2D;
    $$2842 = $eh$lpad$body422$index135Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 28:
  {
   $1715 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $63 | 0, $70 | 0);
   $1716 = __THREW__;
   __THREW__ = 0;
   if ($1716 & 1) label = 20; else {
    $1719 = $63 + 12 | 0;
    $1720 = $76;
    $1725 = HEAP32[$1720 + 4 >> 2] | 0;
    $1726 = $1719;
    HEAP32[$1726 >> 2] = HEAP32[$1720 >> 2];
    HEAP32[$1726 + 4 >> 2] = $1725;
    $1731 = $tok + 36 | 0;
    $1736 = HEAP32[$1731 + 4 >> 2] | 0;
    $1737 = $63 + 20 | 0;
    HEAP32[$1737 >> 2] = HEAP32[$1731 >> 2];
    HEAP32[$1737 + 4 >> 2] = $1736;
    __THREW__ = 0;
    $1741 = invoke_ii(67, 48) | 0;
    $1742 = __THREW__;
    __THREW__ = 0;
    do if ($1742 & 1) label = 475; else {
     HEAP32[$1741 >> 2] = 3192;
     __THREW__ = 0;
     invoke_vii(40, $1741 + 4 | 0, $63 | 0);
     $1745 = __THREW__;
     __THREW__ = 0;
     if ($1745 & 1) {
      $1763 = ___cxa_find_matching_catch() | 0;
      $1764 = tempRet0;
      __ZdlPv($1741);
      $eh$lpad$body434$index141Z2D = $1764;
      $eh$lpad$body434$indexZ2D = $1763;
      break;
     }
     $1747 = $1741 + 16 | 0;
     HEAP32[$1747 >> 2] = HEAP32[$1719 >> 2];
     HEAP32[$1747 + 4 >> 2] = HEAP32[$1719 + 4 >> 2];
     HEAP32[$1747 + 8 >> 2] = HEAP32[$1719 + 8 >> 2];
     HEAP32[$1747 + 12 >> 2] = HEAP32[$1719 + 12 >> 2];
     HEAP32[$1741 + 32 >> 2] = 17;
     HEAP32[$1741 + 36 >> 2] = 0;
     HEAP32[$1741 + 40 >> 2] = 0;
     HEAP32[$1741 + 44 >> 2] = 0;
     HEAP32[$1741 >> 2] = 3404;
     HEAP32[$2 >> 2] = $1741;
     $1752 = $1715 + 16 | 0;
     $1753 = HEAP32[$1752 >> 2] | 0;
     if ($1753 >>> 0 < (HEAP32[$1715 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$1753 >> 2] = $1741;
      HEAP32[$1752 >> 2] = (HEAP32[$1752 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $1715 + 12 | 0, $2 | 0);
      $1761 = __THREW__;
      __THREW__ = 0;
      if ($1761 & 1) {
       label = 475;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
     $$2 = $1741;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 475) {
     $1765 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body434$index141Z2D = tempRet0;
     $eh$lpad$body434$indexZ2D = $1765;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($63);
    $$28 = $eh$lpad$body434$indexZ2D;
    $$2842 = $eh$lpad$body434$index141Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 case 29:
  {
   $1768 = HEAP32[$this + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(40, $64 | 0, $70 | 0);
   $1769 = __THREW__;
   __THREW__ = 0;
   if ($1769 & 1) label = 20; else {
    $1772 = $64 + 12 | 0;
    $1773 = $76;
    $1778 = HEAP32[$1773 + 4 >> 2] | 0;
    $1779 = $1772;
    HEAP32[$1779 >> 2] = HEAP32[$1773 >> 2];
    HEAP32[$1779 + 4 >> 2] = $1778;
    $1784 = $tok + 36 | 0;
    $1789 = HEAP32[$1784 + 4 >> 2] | 0;
    $1790 = $64 + 20 | 0;
    HEAP32[$1790 >> 2] = HEAP32[$1784 >> 2];
    HEAP32[$1790 + 4 >> 2] = $1789;
    __THREW__ = 0;
    $1794 = invoke_ii(67, 48) | 0;
    $1795 = __THREW__;
    __THREW__ = 0;
    do if ($1795 & 1) label = 485; else {
     HEAP32[$1794 >> 2] = 3192;
     __THREW__ = 0;
     invoke_vii(40, $1794 + 4 | 0, $64 | 0);
     $1798 = __THREW__;
     __THREW__ = 0;
     if ($1798 & 1) {
      $1816 = ___cxa_find_matching_catch() | 0;
      $1817 = tempRet0;
      __ZdlPv($1794);
      $eh$lpad$body440$index146Z2D = $1817;
      $eh$lpad$body440$indexZ2D = $1816;
      break;
     }
     $1800 = $1794 + 16 | 0;
     HEAP32[$1800 >> 2] = HEAP32[$1772 >> 2];
     HEAP32[$1800 + 4 >> 2] = HEAP32[$1772 + 4 >> 2];
     HEAP32[$1800 + 8 >> 2] = HEAP32[$1772 + 8 >> 2];
     HEAP32[$1800 + 12 >> 2] = HEAP32[$1772 + 12 >> 2];
     HEAP32[$1794 + 32 >> 2] = 18;
     HEAP32[$1794 + 36 >> 2] = 0;
     HEAP32[$1794 + 40 >> 2] = 0;
     HEAP32[$1794 + 44 >> 2] = 0;
     HEAP32[$1794 >> 2] = 3436;
     HEAP32[$1 >> 2] = $1794;
     $1805 = $1768 + 16 | 0;
     $1806 = HEAP32[$1805 >> 2] | 0;
     if ($1806 >>> 0 < (HEAP32[$1768 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$1806 >> 2] = $1794;
      HEAP32[$1805 >> 2] = (HEAP32[$1805 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $1768 + 12 | 0, $1 | 0);
      $1814 = __THREW__;
      __THREW__ = 0;
      if ($1814 & 1) {
       label = 485;
       break;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
     $$2 = $1794;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
     STACKTOP = sp;
     return $$2 | 0;
    } while (0);
    if ((label | 0) == 485) {
     $1818 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body440$index146Z2D = tempRet0;
     $eh$lpad$body440$indexZ2D = $1818;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($64);
    $$28 = $eh$lpad$body440$indexZ2D;
    $$2842 = $eh$lpad$body440$index146Z2D;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
    ___resumeException($$28 | 0);
   }
   break;
  }
 default:
  {
   __THREW__ = 0;
   $1820 = invoke_iiii(29, 8580, 51611, 34) | 0;
   $1821 = __THREW__;
   __THREW__ = 0;
   if ($1821 & 1) label = 20; else {
    __THREW__ = 0;
    $1824 = invoke_ii(70, HEAP32[$tok >> 2] | 0) | 0;
    $1825 = __THREW__;
    __THREW__ = 0;
    if ($1825 & 1) label = 20; else {
     $1827 = _strlen($1824) | 0;
     __THREW__ = 0;
     invoke_iiii(29, $1820 | 0, $1824 | 0, $1827 | 0) | 0;
     $1828 = __THREW__;
     __THREW__ = 0;
     if ($1828 & 1) label = 20; else {
      __THREW__ = 0;
      $1834 = invoke_ii(68, $1820 + (HEAP32[(HEAP32[$1820 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
      $1835 = __THREW__;
      __THREW__ = 0;
      if ($1835 & 1) label = 20; else {
       HEAP32[$0 >> 2] = $1834;
       __THREW__ = 0;
       $1837 = invoke_iii(22, $0 | 0, 11164) | 0;
       $1838 = __THREW__;
       __THREW__ = 0;
       if (!($1838 & 1)) {
        __THREW__ = 0;
        $1843 = invoke_iii(HEAP32[(HEAP32[$1837 >> 2] | 0) + 28 >> 2] | 0, $1837 | 0, 10) | 0;
        $1844 = __THREW__;
        __THREW__ = 0;
        if (!($1844 & 1)) {
         __ZNSt3__16localeD2Ev($0);
         __THREW__ = 0;
         invoke_iii(25, $1820 | 0, $1843 | 0) | 0;
         $1848 = __THREW__;
         __THREW__ = 0;
         if ($1848 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_ii(69, $1820 | 0) | 0;
         $1850 = __THREW__;
         __THREW__ = 0;
         if ($1850 & 1) {
          label = 20;
          break L4;
         }
         __THREW__ = 0;
         invoke_v(3);
         __THREW__ = 0;
         label = 20;
         break L4;
        }
       }
       $1846 = ___cxa_find_matching_catch() | 0;
       $1847 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body53$index3Z2D = $1847;
       $eh$lpad$body53$indexZ2D = $1846;
      }
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 20) {
  $125 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body53$index3Z2D = tempRet0;
  $eh$lpad$body53$indexZ2D = $125;
 }
 $$28 = $eh$lpad$body53$indexZ2D;
 $$2842 = $eh$lpad$body53$index3Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
 ___resumeException($$28 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj($agg$result, $this, $obj, $tok, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $obj = $obj | 0;
 $tok = $tok | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i128 = 0, $$0$i$i$i$i$i130 = 0, $$0$i157 = 0, $$0$i7$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i133 = 0, $$031 = 0, $$033 = 0, $$036 = 0, $$038 = 0, $$04 = 0, $$040 = 0, $$042 = 0, $$043 = 0, $$045 = 0, $$1019349 = 0, $$10350 = 0, $$110 = 0, $$1120359 = 0, $$11360 = 0, $$12 = 0, $$1221363 = 0, $$123364 = 0, $$13 = 0, $$1322 = 0, $$14 = 0, $$1423 = 0, $$15 = 0, $$1524 = 0, $$17 = 0, $$1726 = 0, $$1928367 = 0, $$19368 = 0, $$2 = 0, $$20 = 0, $$2029 = 0, $$21 = 0, $$211 = 0, $$2130 = 0, $$312333 = 0, $$3334 = 0, $$413337 = 0, $$4338 = 0, $$5 = 0, $$514 = 0, $$615341 = 0, $$6342 = 0, $$716345 = 0, $$7346 = 0, $$8 = 0, $$817 = 0, $$9 = 0, $$918 = 0, $$byval_copy = 0, $$byval_copy102 = 0, $$byval_copy105 = 0, $$lcssa = 0, $$lcssa$i$i = 0, $$lcssa925 = 0, $$lcssa927 = 0, $$lcssa929 = 0, $$lcssa930 = 0, $$lcssa931 = 0, $$lcssa932 = 0, $$lcssa933 = 0, $$lcssa934 = 0, $$lcssa935 = 0, $$lcssa936 = 0, $$lcssa937 = 0, $$lcssa939 = 0, $$lcssa940 = 0, $$lcssa941 = 0, $$lcssa942 = 0, $$lcssa943 = 0, $$lcssa944 = 0, $$lcssa945 = 0, $$lcssa946 = 0, $$lcssa947 = 0, $$lcssa948 = 0, $$lcssa949 = 0, $$lcssa950 = 0, $$lcssa951 = 0, $$lcssa952 = 0, $$lcssa953 = 0, $$lcssa954 = 0, $$lcssa955 = 0, $$lcssa956 = 0, $$lcssa957 = 0, $$lcssa961 = 0, $$lcssa964 = 0, $$lcssa967 = 0, $$lcssa968 = 0, $$pre$phi781Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1002 = 0, $1003 = 0, $1009 = 0, $101 = 0, $1011 = 0, $1018 = 0, $102 = 0, $1020 = 0, $1022 = 0, $1024 = 0, $1026 = 0, $1027 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1035 = 0, $1038 = 0, $104 = 0, $1042 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1049 = 0, $105 = 0, $1052 = 0, $1056 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1062 = 0, $1064 = 0, $1065 = 0, $1067 = 0, $107 = 0, $1071 = 0, $1076 = 0, $1079 = 0, $108 = 0, $1083 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $109 = 0, $1090 = 0, $1093 = 0, $1097 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1103 = 0, $1105 = 0, $1106 = 0, $1108 = 0, $111 = 0, $1112 = 0, $1117 = 0, $112 = 0, $1121 = 0, $1122 = 0, $1128 = 0, $113 = 0, $1130 = 0, $1137 = 0, $1139 = 0, $114 = 0, $1141 = 0, $1143 = 0, $1145 = 0, $1146 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1155 = 0, $1157 = 0, $1158 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1164 = 0, $1165 = 0, $1167 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1178 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1186 = 0, $119 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1195 = 0, $1196 = 0, $12 = 0, $120 = 0, $1202 = 0, $1203 = 0, $1205 = 0, $1206 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1223 = 0, $1224 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1233 = 0, $1235 = 0, $1236 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1246 = 0, $1248 = 0, $125 = 0, $1253 = 0, $1254 = 0, $126 = 0, $1262 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $127 = 0, $1270 = 0, $1272 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1288 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1296 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1303 = 0, $1305 = 0, $131 = 0, $1313 = 0, $1314 = 0, $1318 = 0, $132 = 0, $1322 = 0, $1324 = 0, $1325 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1332 = 0, $1334 = 0, $1335 = 0, $1339 = 0, $134 = 0, $1341 = 0, $1343 = 0, $135 = 0, $1350 = 0, $1352 = 0, $1354 = 0, $1355 = 0, $1357 = 0, $1358 = 0, $136 = 0, $1360 = 0, $1362 = 0, $1365 = 0, $1369 = 0, $137 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1376 = 0, $1379 = 0, $138 = 0, $1383 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1389 = 0, $139 = 0, $1391 = 0, $1392 = 0, $1394 = 0, $1398 = 0, $14 = 0, $140 = 0, $1403 = 0, $1406 = 0, $141 = 0, $1410 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1417 = 0, $142 = 0, $1420 = 0, $1424 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $143 = 0, $1430 = 0, $1432 = 0, $1433 = 0, $1435 = 0, $1439 = 0, $144 = 0, $1444 = 0, $1445 = 0, $1447 = 0, $1448 = 0, $145 = 0, $1453 = 0, $1456 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1463 = 0, $1466 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1473 = 0, $1475 = 0, $1477 = 0, $148 = 0, $1485 = 0, $1489 = 0, $149 = 0, $1491 = 0, $1493 = 0, $15 = 0, $150 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $181 = 0, $186 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $192 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $202 = 0, $204 = 0, $205 = 0, $21 = 0, $210 = 0, $211 = 0, $219 = 0, $22 = 0, $221 = 0, $222 = 0, $223 = 0, $226 = 0, $228 = 0, $23 = 0, $232 = 0, $233 = 0, $239 = 0, $24 = 0, $240 = 0, $246 = 0, $248 = 0, $25 = 0, $252 = 0, $256 = 0, $258 = 0, $26 = 0, $260 = 0, $262 = 0, $264 = 0, $267 = 0, $27 = 0, $271 = 0, $273 = 0, $274 = 0, $275 = 0, $277 = 0, $279 = 0, $28 = 0, $280 = 0, $282 = 0, $286 = 0, $29 = 0, $291 = 0, $293 = 0, $296 = 0, $3 = 0, $30 = 0, $300 = 0, $302 = 0, $303 = 0, $304 = 0, $306 = 0, $308 = 0, $309 = 0, $31 = 0, $311 = 0, $315 = 0, $32 = 0, $325 = 0, $33 = 0, $333 = 0, $337 = 0, $339 = 0, $34 = 0, $342 = 0, $344 = 0, $345 = 0, $346 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $352 = 0, $356 = 0, $359 = 0, $36 = 0, $361 = 0, $362 = 0, $365 = 0, $368 = 0, $37 = 0, $373 = 0, $377 = 0, $38 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $393 = 0, $395 = 0, $396 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $402 = 0, $403 = 0, $404 = 0, $409 = 0, $41 = 0, $410 = 0, $414 = 0, $415 = 0, $417 = 0, $42 = 0, $421 = 0, $425 = 0, $43 = 0, $430 = 0, $431 = 0, $433 = 0, $436 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $444 = 0, $446 = 0, $447 = 0, $45 = 0, $455 = 0, $457 = 0, $458 = 0, $46 = 0, $460 = 0, $461 = 0, $467 = 0, $47 = 0, $471 = 0, $476 = 0, $48 = 0, $481 = 0, $482 = 0, $484 = 0, $487 = 0, $488 = 0, $49 = 0, $490 = 0, $495 = 0, $496 = 0, $5 = 0, $50 = 0, $500 = 0, $505 = 0, $506 = 0, $51 = 0, $510 = 0, $514 = 0, $516 = 0, $517 = 0, $518 = 0, $52 = 0, $520 = 0, $523 = 0, $525 = 0, $53 = 0, $530 = 0, $531 = 0, $533 = 0, $534 = 0, $536 = 0, $54 = 0, $544 = 0, $545 = 0, $547 = 0, $549 = 0, $55 = 0, $550 = 0, $558 = 0, $560 = 0, $561 = 0, $564 = 0, $566 = 0, $568 = 0, $576 = 0, $579 = 0, $58 = 0, $581 = 0, $583 = 0, $59 = 0, $591 = 0, $595 = 0, $597 = 0, $599 = 0, $6 = 0, $60 = 0, $609 = 0, $61 = 0, $611 = 0, $613 = 0, $62 = 0, $623 = 0, $624 = 0, $626 = 0, $628 = 0, $63 = 0, $630 = 0, $632 = 0, $633 = 0, $635 = 0, $637 = 0, $638 = 0, $639 = 0, $640 = 0, $642 = 0, $644 = 0, $646 = 0, $648 = 0, $649 = 0, $65 = 0, $651 = 0, $653 = 0, $654 = 0, $655 = 0, $657 = 0, $659 = 0, $66 = 0, $661 = 0, $664 = 0, $666 = 0, $668 = 0, $669 = 0, $67 = 0, $671 = 0, $672 = 0, $675 = 0, $676 = 0, $677 = 0, $68 = 0, $682 = 0, $683 = 0, $687 = 0, $688 = 0, $69 = 0, $690 = 0, $694 = 0, $698 = 0, $7 = 0, $70 = 0, $703 = 0, $704 = 0, $706 = 0, $709 = 0, $71 = 0, $713 = 0, $714 = 0, $716 = 0, $718 = 0, $719 = 0, $72 = 0, $727 = 0, $729 = 0, $73 = 0, $730 = 0, $732 = 0, $733 = 0, $735 = 0, $739 = 0, $74 = 0, $740 = 0, $742 = 0, $744 = 0, $746 = 0, $748 = 0, $749 = 0, $75 = 0, $751 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $758 = 0, $76 = 0, $760 = 0, $762 = 0, $764 = 0, $765 = 0, $767 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $773 = 0, $774 = 0, $779 = 0, $78 = 0, $780 = 0, $782 = 0, $784 = 0, $785 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $791 = 0, $792 = 0, $794 = 0, $796 = 0, $797 = 0, $799 = 0, $8 = 0, $80 = 0, $804 = 0, $805 = 0, $809 = 0, $81 = 0, $814 = 0, $815 = 0, $819 = 0, $82 = 0, $820 = 0, $823 = 0, $825 = 0, $83 = 0, $834 = 0, $835 = 0, $84 = 0, $843 = 0, $845 = 0, $846 = 0, $847 = 0, $85 = 0, $851 = 0, $854 = 0, $855 = 0, $857 = 0, $859 = 0, $86 = 0, $861 = 0, $863 = 0, $864 = 0, $866 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $873 = 0, $877 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $884 = 0, $887 = 0, $89 = 0, $891 = 0, $893 = 0, $894 = 0, $895 = 0, $897 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $902 = 0, $906 = 0, $91 = 0, $911 = 0, $913 = 0, $915 = 0, $916 = 0, $917 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $924 = 0, $928 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $935 = 0, $938 = 0, $94 = 0, $942 = 0, $944 = 0, $945 = 0, $946 = 0, $949 = 0, $95 = 0, $950 = 0, $953 = 0, $957 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $967 = 0, $97 = 0, $971 = 0, $974 = 0, $978 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $984 = 0, $986 = 0, $988 = 0, $99 = 0, $990 = 0, $991 = 0, $993 = 0, $997 = 0, $__f$01$i$i = 0, $__f$01$i$i$i = 0, $__f$01$i$i102 = 0, $__f$01$i$i105 = 0, $__f$01$i$i326 = 0, $__f$01$i$i329 = 0, $__f$01$i$i99 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa965 = 0, $__nd$0$i$i$lcssa966 = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body$index9Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body142$index47Z2D = 0, $eh$lpad$body142$indexZ2D = 0, $eh$lpad$body161$index52Z2D = 0, $eh$lpad$body161$indexZ2D = 0, $eh$lpad$body168$index57Z2D = 0, $eh$lpad$body168$indexZ2D = 0, $eh$lpad$body177$index63Z2D = 0, $eh$lpad$body177$indexZ2D = 0, $eh$lpad$body192$index75Z2D = 0, $eh$lpad$body192$indexZ2D = 0, $eh$lpad$body196$index86Z2D = 0, $eh$lpad$body196$indexZ2D = 0, $eh$lpad$body277$index92Z2D = 0, $eh$lpad$body277$indexZ2D = 0, $eh$lpad$body287$index98Z2D = 0, $eh$lpad$body287$indexZ2D = 0, $eh$lpad$body65$index14Z2D = 0, $eh$lpad$body65$indexZ2D = 0, $eh$lpad$body69$index3Z2D = 0, $eh$lpad$body69$indexZ2D = 0, $eh$lpad$body76$index23Z2D = 0, $eh$lpad$body76$indexZ2D = 0, $eh$lpad$body88$index37Z2D = 0, $eh$lpad$body88$indexZ2D = 0, $eh$lpad$body97$index42Z2D = 0, $eh$lpad$body97$indexZ2D = 0, $fields = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $id_tok = 0, $is_method$0$off0 = 0, $last_was_local$0$off0 = 0, $last_was_local$2$off0 = 0, $let_binds = 0, $literal_fields = 0, $lpad$phi$index = 0, $lpad$phi$index32 = 0, $next = 0, $plus_loc = 0, $plus_sugar$0$off0357 = 0, $r = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i181 = 0, $this$idx$val$idx$val$i207 = 0, $this$idx$val$idx$val$i225 = 0, $this$idx$val$idx$val$i237 = 0, $this$idx$val$idx$val$i306 = 0, $this$idx$val$idx$val$i318 = 0, $this$idx$val$idx$val$i73 = 0, $this$idx54$val$idx$val = 0, $this$idx55$val$idx$val = 0, $this$idx56$val$idx$val = 0, $this$idx57$val$idx$val = 0, $this$idx58$val$idx$val = 0, $this$idx59$val$idx$val = 0, $this$idx60$val$idx$val = 0, $value$0 = 0, label = 0, sp = 0, $520$looptemp = 0, $__f$01$i$i$looptemp = 0, $__f$01$i$i99$looptemp = 0, $__f$01$i$i$i$looptemp = 0, $__f$01$i$i326$looptemp = 0, $__f$01$i$i102$looptemp = 0, $__f$01$i$i105$looptemp = 0, $__f$01$i$i329$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1568 | 0;
 $$byval_copy105 = sp + 1536 | 0;
 $$byval_copy102 = sp + 1488 | 0;
 $$byval_copy = sp + 1440 | 0;
 $0 = sp + 632 | 0;
 $1 = sp + 640 | 0;
 $2 = sp + 644 | 0;
 $3 = sp + 1424 | 0;
 $4 = sp + 216 | 0;
 $5 = sp + 220 | 0;
 $6 = sp + 224 | 0;
 $7 = sp + 228 | 0;
 $__parent$i = sp + 232 | 0;
 $8 = sp + 236 | 0;
 $literal_fields = sp + 240 | 0;
 $fields = sp + 252 | 0;
 $let_binds = sp + 264 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 288 | 0;
 $next = sp + 316 | 0;
 $11 = sp + 360 | 0;
 $r = sp + 404 | 0;
 $12 = sp + 416 | 0;
 $13 = sp + 444 | 0;
 $14 = sp + 456 | 0;
 $15 = sp + 484 | 0;
 $16 = sp + 496 | 0;
 $17 = sp + 508 | 0;
 $18 = sp + 520 | 0;
 $19 = sp + 1356 | 0;
 $20 = sp + 1412 | 0;
 $21 = sp + 1428 | 0;
 $id_tok = sp + 1444 | 0;
 $22 = sp + 1492 | 0;
 $23 = sp + 1540 | 0;
 $24 = sp + 648 | 0;
 $25 = sp + 660 | 0;
 $26 = sp + 704 | 0;
 $27 = sp + 748 | 0;
 $28 = sp + 760 | 0;
 $plus_loc = sp + 772 | 0;
 $29 = sp + 800 | 0;
 $30 = sp + 844 | 0;
 $31 = sp + 888 | 0;
 $32 = sp + 932 | 0;
 $33 = sp + 976 | 0;
 $34 = sp + 988 | 0;
 $35 = sp + 1032 | 0;
 $36 = sp + 1076 | 0;
 $37 = sp + 1120 | 0;
 $38 = sp + 1164 | 0;
 $39 = sp + 1208 | 0;
 $40 = sp + 1220 | 0;
 $41 = sp + 1248 | 0;
 $42 = sp + 1260 | 0;
 $43 = sp + 1288 | 0;
 $44 = sp + 188 | 0;
 $45 = sp + 176 | 0;
 $46 = sp + 1300 | 0;
 $47 = sp + 548 | 0;
 $48 = sp + 1328 | 0;
 $49 = sp + 132 | 0;
 $50 = sp;
 $51 = sp + 576 | 0;
 $52 = sp + 1368 | 0;
 $53 = sp + 88 | 0;
 $54 = sp + 44 | 0;
 $55 = sp + 620 | 0;
 HEAP32[$literal_fields + 4 >> 2] = 0;
 HEAP32[$literal_fields + 8 >> 2] = 0;
 $58 = $literal_fields + 4 | 0;
 HEAP32[$literal_fields >> 2] = $58;
 HEAP32[$fields >> 2] = $fields;
 $59 = $fields + 4 | 0;
 HEAP32[$59 >> 2] = $fields;
 $60 = $fields + 8 | 0;
 HEAP32[$60 >> 2] = 0;
 $61 = $let_binds + 4 | 0;
 HEAP32[$61 >> 2] = 0;
 $62 = $let_binds + 8 | 0;
 HEAP32[$62 >> 2] = 0;
 $63 = $let_binds + 4 | 0;
 HEAP32[$let_binds >> 2] = $63;
 $65 = $this + 4 | 0;
 L1 : do if (!$obj_level) {
  $178 = HEAP32[$65 >> 2] | 0;
  __THREW__ = 0;
  invoke_viii(3, $9 | 0, 51098, 1);
  $179 = __THREW__;
  __THREW__ = 0;
  if ($179 & 1) {
   $258 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body69$index3Z2D = tempRet0;
   $eh$lpad$body69$indexZ2D = $258;
   label = 34;
   break;
  }
  $181 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($178, $9) | 0;
  L6 : do if (($181 | 0) == ($178 + 4 | 0)) {
   __THREW__ = 0;
   $186 = invoke_ii(67, 12) | 0;
   $187 = __THREW__;
   __THREW__ = 0;
   do if ($187 & 1) label = 35; else {
    __THREW__ = 0;
    invoke_vii(40, $186 | 0, $9 | 0);
    $189 = __THREW__;
    __THREW__ = 0;
    if ($189 & 1) {
     $194 = ___cxa_find_matching_catch() | 0;
     $195 = tempRet0;
     __ZdlPv($186);
     $eh$lpad$body$index9Z2D = $195;
     $eh$lpad$body$indexZ2D = $194;
     break;
    }
    __THREW__ = 0;
    $191 = invoke_iii(23, $178 | 0, $9 | 0) | 0;
    $192 = __THREW__;
    __THREW__ = 0;
    if ($192 & 1) label = 35; else {
     HEAP32[$191 >> 2] = $186;
     $$0$i = $186;
     break L6;
    }
   } while (0);
   if ((label | 0) == 35) {
    $260 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index9Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $260;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $$21 = $eh$lpad$body$indexZ2D;
   $$2130 = $eh$lpad$body$index9Z2D;
   break L1;
  } else $$0$i = HEAP32[$181 + 28 >> 2] | 0; while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
  $196 = $$0$i;
  $197 = HEAP32[$65 >> 2] | 0;
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  HEAP32[$10 + 12 >> 2] = 0;
  HEAP32[$10 + 16 >> 2] = 0;
  HEAP32[$10 + 20 >> 2] = 0;
  HEAP32[$10 + 24 >> 2] = 0;
  __THREW__ = 0;
  $198 = invoke_ii(67, 48) | 0;
  $199 = __THREW__;
  __THREW__ = 0;
  do if ($199 & 1) label = 37; else {
   HEAP32[$198 >> 2] = 3192;
   __THREW__ = 0;
   invoke_vii(40, $198 + 4 | 0, $10 | 0);
   $202 = __THREW__;
   __THREW__ = 0;
   if ($202 & 1) {
    $221 = ___cxa_find_matching_catch() | 0;
    $222 = tempRet0;
    __ZdlPv($198);
    $$pre$phiZ2D = $10;
    $eh$lpad$body65$index14Z2D = $222;
    $eh$lpad$body65$indexZ2D = $221;
    break;
   }
   $204 = $198 + 16 | 0;
   $205 = $10 + 12 | 0;
   HEAP32[$204 >> 2] = HEAP32[$205 >> 2];
   HEAP32[$204 + 4 >> 2] = HEAP32[$205 + 4 >> 2];
   HEAP32[$204 + 8 >> 2] = HEAP32[$205 + 8 >> 2];
   HEAP32[$204 + 12 >> 2] = HEAP32[$205 + 12 >> 2];
   HEAP32[$198 + 32 >> 2] = 17;
   HEAP32[$198 + 36 >> 2] = 0;
   HEAP32[$198 + 40 >> 2] = 0;
   HEAP32[$198 + 44 >> 2] = 0;
   HEAP32[$198 >> 2] = 3404;
   HEAP32[$8 >> 2] = $198;
   $210 = $197 + 16 | 0;
   $211 = HEAP32[$210 >> 2] | 0;
   if ($211 >>> 0 < (HEAP32[$197 + 20 >> 2] | 0) >>> 0) {
    HEAP32[$211 >> 2] = $198;
    HEAP32[$210 >> 2] = (HEAP32[$210 >> 2] | 0) + 4;
   } else {
    __THREW__ = 0;
    invoke_vii(50, $197 + 12 | 0, $8 | 0);
    $219 = __THREW__;
    __THREW__ = 0;
    if ($219 & 1) {
     label = 37;
     break;
    }
   }
   $223 = HEAP32[$63 >> 2] | 0;
   do if (!$223) {
    HEAP32[$__parent$i >> 2] = $63;
    $$0$i7$i = $63;
    $246 = $63;
    label = 27;
   } else {
    $__nd$0$i$i = $223;
    while (1) {
     $226 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
     if ($$0$i >>> 0 < $226 >>> 0) {
      $228 = HEAP32[$__nd$0$i$i >> 2] | 0;
      if (!$228) {
       $$lcssa968 = $__nd$0$i$i;
       $__nd$0$i$i$lcssa966 = $__nd$0$i$i;
       label = 20;
       break;
      } else $__nd$0$be$in$i$i = $228;
     } else {
      if ($226 >>> 0 >= $$0$i >>> 0) {
       $__nd$0$i$i$lcssa = $__nd$0$i$i;
       label = 26;
       break;
      }
      $232 = $__nd$0$i$i + 4 | 0;
      $233 = HEAP32[$232 >> 2] | 0;
      if (!$233) {
       $$lcssa967 = $232;
       $__nd$0$i$i$lcssa965 = $__nd$0$i$i;
       label = 24;
       break;
      } else $__nd$0$be$in$i$i = $233;
     }
     $__nd$0$i$i = $__nd$0$be$in$i$i;
    }
    if ((label | 0) == 20) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa966;
     $$0$i7$i = $$lcssa968;
     $246 = $__nd$0$i$i$lcssa966;
     label = 27;
     break;
    } else if ((label | 0) == 24) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa965;
     $$0$i7$i = $$lcssa967;
     $246 = $__nd$0$i$i$lcssa965;
     label = 27;
     break;
    } else if ((label | 0) == 26) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
     if (!$__nd$0$i$i$lcssa) {
      $$0$i7$i = $__parent$i;
      $246 = $__nd$0$i$i$lcssa;
      label = 27;
      break;
     } else {
      $__r$0$i = $__nd$0$i$i$lcssa;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 27) {
    __THREW__ = 0;
    $239 = invoke_ii(67, 24) | 0;
    $240 = __THREW__;
    __THREW__ = 0;
    if ($240 & 1) {
     label = 37;
     break;
    }
    HEAP32[$239 + 16 >> 2] = $196;
    HEAP32[$239 + 20 >> 2] = 0;
    HEAP32[$239 >> 2] = 0;
    HEAP32[$239 + 4 >> 2] = 0;
    HEAP32[$239 + 8 >> 2] = $246;
    HEAP32[$$0$i7$i >> 2] = $239;
    $248 = HEAP32[HEAP32[$let_binds >> 2] >> 2] | 0;
    if (!$248) $252 = $239; else {
     HEAP32[$let_binds >> 2] = $248;
     $252 = HEAP32[$$0$i7$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$61 >> 2] | 0, $252);
    HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 1;
    $__r$0$i = $239;
   }
   HEAP32[$__r$0$i + 20 >> 2] = $198;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
   label = 2;
   break L1;
  } while (0);
  if ((label | 0) == 37) {
   $262 = ___cxa_find_matching_catch() | 0;
   $$pre$phiZ2D = $10;
   $eh$lpad$body65$index14Z2D = tempRet0;
   $eh$lpad$body65$indexZ2D = $262;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$pre$phiZ2D);
  $$21 = $eh$lpad$body65$indexZ2D;
  $$2130 = $eh$lpad$body65$index14Z2D;
 } else label = 2; while (0);
 L51 : do if ((label | 0) == 2) {
  $66 = $next + 4 | 0;
  $67 = $next + 16 | 0;
  $68 = $next + 28 | 0;
  $69 = $25 + 4 | 0;
  $70 = $25 + 16 | 0;
  $71 = $25 + 28 | 0;
  $72 = $26 + 4 | 0;
  $73 = $26 + 16 | 0;
  $74 = $26 + 28 | 0;
  $75 = $27 + 4 | 0;
  $76 = $27 + 8 | 0;
  $77 = $29 + 4 | 0;
  $78 = $29 + 16 | 0;
  $79 = $29 + 28 | 0;
  $80 = $30 + 4 | 0;
  $81 = $30 + 16 | 0;
  $82 = $30 + 28 | 0;
  $83 = $31 + 4 | 0;
  $84 = $31 + 16 | 0;
  $85 = $31 + 28 | 0;
  $86 = $31 + 16 | 0;
  $87 = $plus_loc + 1 | 0;
  $88 = $plus_loc + 12 | 0;
  $89 = $32 + 4 | 0;
  $90 = $32 + 16 | 0;
  $91 = $32 + 28 | 0;
  $92 = $plus_loc + 8 | 0;
  $93 = $plus_loc + 4 | 0;
  $94 = $34 + 16 | 0;
  $95 = $34 + 4 | 0;
  $96 = $35 + 4 | 0;
  $97 = $35 + 16 | 0;
  $98 = $35 + 28 | 0;
  $99 = $36 + 4 | 0;
  $100 = $36 + 16 | 0;
  $101 = $36 + 28 | 0;
  $102 = $37 + 4 | 0;
  $103 = $37 + 16 | 0;
  $104 = $37 + 28 | 0;
  $105 = $38 + 4 | 0;
  $106 = $38 + 16 | 0;
  $107 = $38 + 28 | 0;
  $108 = $0 + 4 | 0;
  $109 = $40 + 12 | 0;
  $110 = $obj_level + 1 | 0;
  $111 = $42 + 12 | 0;
  $112 = $43 + 4 | 0;
  $113 = $43 + 8 | 0;
  $114 = $43 + 8 | 0;
  $115 = $44 + 12 | 0;
  $116 = $46 + 12 | 0;
  $117 = $47 + 12 | 0;
  $118 = $48 + 12 | 0;
  $119 = $49 + 16 | 0;
  $120 = $49 + 4 | 0;
  $121 = $50 + 16 | 0;
  $122 = $50 + 4 | 0;
  $123 = $51 + 4 | 0;
  $124 = $51 + 16 | 0;
  $125 = $51 + 28 | 0;
  $126 = $52 + 4 | 0;
  $127 = $52 + 16 | 0;
  $128 = $52 + 28 | 0;
  $129 = $53 + 4 | 0;
  $130 = $53 + 16 | 0;
  $131 = $53 + 28 | 0;
  $132 = $54 + 4 | 0;
  $133 = $54 + 16 | 0;
  $134 = $54 + 28 | 0;
  $135 = $r + 4 | 0;
  $136 = $r + 8 | 0;
  $137 = $r;
  $138 = $fields;
  $139 = $tok + 16 | 0;
  $140 = $next + 36 | 0;
  $141 = $tok + 28 | 0;
  $142 = $14 + 12 | 0;
  $143 = $14 + 20 | 0;
  $144 = $15 + 4 | 0;
  $145 = $15 + 8 | 0;
  $146 = $agg$result + 4 | 0;
  $147 = $agg$result + 16 | 0;
  $148 = $next + 16 | 0;
  $149 = $agg$result + 28 | 0;
  $150 = $12 + 12 | 0;
  $151 = $13 + 4 | 0;
  $152 = $13 + 8 | 0;
  $153 = $13 + 4 | 0;
  $154 = $153;
  $155 = $id_tok + 4 | 0;
  $156 = $22 + 16 | 0;
  $157 = $22 + 4 | 0;
  $158 = $agg$result + 36 | 0;
  $159 = $23 + 12 | 0;
  $160 = $23 + 20 | 0;
  $161 = $id_tok + 16 | 0;
  $162 = $18 + 12 | 0;
  $163 = $19 + 4 | 0;
  $164 = $19 + 8 | 0;
  $165 = $19 + 4 | 0;
  $166 = $165;
  $167 = $11 + 4 | 0;
  $168 = $11 + 16 | 0;
  $169 = $11 + 28 | 0;
  $170 = $66 + 1 | 0;
  $171 = $11 + 16 | 0;
  $172 = $148 + 1 | 0;
  $173 = $next + 24 | 0;
  $174 = $next + 20 | 0;
  $175 = $next + 12 | 0;
  $176 = $next + 8 | 0;
  $177 = $r;
  $got_comma$0$off0 = 1;
  $last_was_local$0$off0 = 0;
  L53 : while (1) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $264 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$next >> 2] = HEAP32[$264 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $66 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $267 = __THREW__;
   __THREW__ = 0;
   if ($267 & 1) {
    label = 32;
    break;
   }
   HEAP32[$next >> 2] = HEAP32[$264 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $67 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $271 = __THREW__;
   __THREW__ = 0;
   if ($271 & 1) {
    label = 41;
    break;
   }
   $275 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$68 >> 2] = HEAP32[$275 >> 2];
   HEAP32[$68 + 4 >> 2] = HEAP32[$275 + 4 >> 2];
   HEAP32[$68 + 8 >> 2] = HEAP32[$275 + 8 >> 2];
   HEAP32[$68 + 12 >> 2] = HEAP32[$275 + 12 >> 2];
   HEAP32[$next >> 2] = HEAP32[$264 >> 2];
   $277 = HEAP32[$this >> 2] | 0;
   $279 = HEAP32[$277 + 4 >> 2] | 0;
   $280 = $279 + 4 | 0;
   $282 = HEAP32[$279 >> 2] | 0;
   HEAP32[$282 + 4 >> 2] = HEAP32[$280 >> 2];
   HEAP32[HEAP32[$280 >> 2] >> 2] = $282;
   $286 = $277 + 8 | 0;
   HEAP32[$286 >> 2] = (HEAP32[$286 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($279 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($279 + 12 | 0);
   __ZdlPv($279);
   if ($got_comma$0$off0) label = 60; else {
    $291 = HEAP32[$next >> 2] | 0;
    if (($291 | 0) == 5) {
     $this$idx$val$idx$val$i73 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
     $293 = $this$idx$val$idx$val$i73 + 8 | 0;
     HEAP32[$11 >> 2] = HEAP32[$293 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $167 | 0, $this$idx$val$idx$val$i73 + 12 | 0);
     $296 = __THREW__;
     __THREW__ = 0;
     if ($296 & 1) {
      label = 58;
      break;
     }
     HEAP32[$11 >> 2] = HEAP32[$293 >> 2];
     __THREW__ = 0;
     invoke_vii(40, $168 | 0, $this$idx$val$idx$val$i73 + 24 | 0);
     $300 = __THREW__;
     __THREW__ = 0;
     if ($300 & 1) {
      label = 46;
      break;
     }
     $304 = $this$idx$val$idx$val$i73 + 36 | 0;
     HEAP32[$169 >> 2] = HEAP32[$304 >> 2];
     HEAP32[$169 + 4 >> 2] = HEAP32[$304 + 4 >> 2];
     HEAP32[$169 + 8 >> 2] = HEAP32[$304 + 8 >> 2];
     HEAP32[$169 + 12 >> 2] = HEAP32[$304 + 12 >> 2];
     HEAP32[$11 >> 2] = HEAP32[$293 >> 2];
     $306 = HEAP32[$this >> 2] | 0;
     $308 = HEAP32[$306 + 4 >> 2] | 0;
     $309 = $308 + 4 | 0;
     $311 = HEAP32[$308 >> 2] | 0;
     HEAP32[$311 + 4 >> 2] = HEAP32[$309 >> 2];
     HEAP32[HEAP32[$309 >> 2] >> 2] = $311;
     $315 = $306 + 8 | 0;
     HEAP32[$315 >> 2] = (HEAP32[$315 >> 2] | 0) + -1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($308 + 24 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($308 + 12 | 0);
     __ZdlPv($308);
     HEAP32[$next >> 2] = HEAP32[$11 >> 2];
     if (!(HEAP8[$66 >> 0] & 1)) {
      HEAP8[$170 >> 0] = 0;
      HEAP8[$66 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$175 >> 2] >> 0] = 0;
      HEAP32[$176 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $66 | 0, 0);
     $325 = __THREW__;
     __THREW__ = 0;
     if ($325 & 1) {
      label = 51;
      break;
     };
     HEAP32[$66 >> 2] = HEAP32[$167 >> 2];
     HEAP32[$66 + 4 >> 2] = HEAP32[$167 + 4 >> 2];
     HEAP32[$66 + 8 >> 2] = HEAP32[$167 + 8 >> 2];
     HEAP32[$167 >> 2] = 0;
     HEAP32[$167 + 4 >> 2] = 0;
     HEAP32[$167 + 8 >> 2] = 0;
     if (!(HEAP8[$148 >> 0] & 1)) {
      HEAP8[$172 >> 0] = 0;
      HEAP8[$148 >> 0] = 0;
     } else {
      HEAP8[HEAP32[$173 >> 2] >> 0] = 0;
      HEAP32[$174 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $148 | 0, 0);
     $333 = __THREW__;
     __THREW__ = 0;
     if ($333 & 1) {
      label = 56;
      break;
     };
     HEAP32[$148 >> 2] = HEAP32[$171 >> 2];
     HEAP32[$148 + 4 >> 2] = HEAP32[$171 + 4 >> 2];
     HEAP32[$148 + 8 >> 2] = HEAP32[$171 + 8 >> 2];
     HEAP32[$171 >> 2] = 0;
     HEAP32[$171 + 4 >> 2] = 0;
     HEAP32[$171 + 8 >> 2] = 0;
     HEAP32[$68 >> 2] = HEAP32[$169 >> 2];
     HEAP32[$68 + 4 >> 2] = HEAP32[$169 + 4 >> 2];
     HEAP32[$68 + 8 >> 2] = HEAP32[$169 + 8 >> 2];
     HEAP32[$68 + 12 >> 2] = HEAP32[$169 + 12 >> 2];
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($168);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
     label = 60;
    } else {
     $339 = $291;
     $got_comma$1$off0 = 0;
    }
   }
   if ((label | 0) == 60) {
    label = 0;
    $339 = HEAP32[$next >> 2] | 0;
    $got_comma$1$off0 = 1;
   }
   L75 : do switch ($339 | 0) {
   case 1:
    {
     HEAP32[$r >> 2] = $r;
     HEAP32[$135 >> 2] = $r;
     HEAP32[$136 >> 2] = 0;
     $342 = HEAP32[$59 >> 2] | 0;
     if (!(HEAP32[$62 >> 2] | 0)) {
      $344 = $342;
      L198 : do if (($342 | 0) == ($fields | 0)) {
       $$lcssa$i$i = $177;
       $361 = $344;
      } else {
       $1502 = $344;
       $346 = $177;
       $350 = $342;
       $352 = $342;
       while (1) {
        $345 = $346;
        if (($345 | 0) == ($r | 0)) {
         $$lcssa$i$i = $346;
         $361 = $1502;
         break L198;
        }
        $348 = $345 + 8 | 0;
        $349 = $350 + 8 | 0;
        HEAP32[$348 >> 2] = HEAP32[$349 >> 2];
        HEAP32[$348 + 4 >> 2] = HEAP32[$349 + 4 >> 2];
        HEAP32[$348 + 8 >> 2] = HEAP32[$349 + 8 >> 2];
        $352 = HEAP32[$352 + 4 >> 2] | 0;
        $356 = HEAP32[$346 + 4 >> 2] | 0;
        $350 = $352;
        if (($350 | 0) == ($fields | 0)) {
         $$lcssa$i$i = $356;
         $361 = $352;
         break;
        } else {
         $1502 = $352;
         $346 = $356;
        }
       }
      } while (0);
      $359 = $$lcssa$i$i;
      if (($359 | 0) == ($r | 0)) {
       HEAP32[$5 >> 2] = $137;
       HEAP32[$6 >> 2] = $361;
       HEAP32[$7 >> 2] = $138;
       __THREW__ = 0;
       HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
       HEAP32[$$byval_copy102 >> 2] = HEAP32[$6 >> 2];
       HEAP32[$$byval_copy105 >> 2] = HEAP32[$7 >> 2];
       invoke_iiiiii(22, $r | 0, $$byval_copy | 0, $$byval_copy102 | 0, $$byval_copy105 | 0, 0) | 0;
       $362 = __THREW__;
       __THREW__ = 0;
       if ($362 & 1) {
        label = 73;
        break L53;
       }
      } else {
       $365 = (HEAP32[$r >> 2] | 0) + 4 | 0;
       $368 = HEAP32[$$lcssa$i$i >> 2] | 0;
       HEAP32[$368 + 4 >> 2] = HEAP32[$365 >> 2];
       HEAP32[HEAP32[$365 >> 2] >> 2] = $368;
       $373 = $359;
       $377 = $359;
       do {
        $373 = HEAP32[$373 + 4 >> 2] | 0;
        HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + -1;
        __ZdlPv($377);
        $377 = $373;
       } while (($377 | 0) != ($r | 0));
      }
     } else if (($342 | 0) != ($fields | 0)) {
      $388 = $342;
      $476 = $342;
      do {
       $387 = $388 + 8 | 0;
       $389 = HEAP32[$65 >> 2] | 0;
       $390 = $388 + 16 | 0;
       $391 = HEAP32[$390 >> 2] | 0;
       __THREW__ = 0;
       invoke_vii(40, $12 | 0, $391 + 4 | 0);
       $393 = __THREW__;
       __THREW__ = 0;
       if ($393 & 1) {
        label = 72;
        break L53;
       }
       $395 = $391 + 16 | 0;
       HEAP32[$150 >> 2] = HEAP32[$395 >> 2];
       HEAP32[$150 + 4 >> 2] = HEAP32[$395 + 4 >> 2];
       HEAP32[$150 + 8 >> 2] = HEAP32[$395 + 8 >> 2];
       HEAP32[$150 + 12 >> 2] = HEAP32[$395 + 12 >> 2];
       HEAP32[$151 >> 2] = 0;
       HEAP32[$152 >> 2] = 0;
       HEAP32[$13 >> 2] = $153;
       $396 = HEAP32[$let_binds >> 2] | 0;
       if (($396 | 0) != ($63 | 0)) {
        $402 = $396;
        $430 = $396;
        while (1) {
         __THREW__ = 0;
         $398 = invoke_ii(67, 24) | 0;
         $399 = __THREW__;
         __THREW__ = 0;
         if ($399 & 1) {
          label = 99;
          break L53;
         }
         $403 = $398 + 16 | 0;
         $404 = $402 + 16 | 0;
         $409 = HEAP32[$404 + 4 >> 2] | 0;
         $410 = $403;
         HEAP32[$410 >> 2] = HEAP32[$404 >> 2];
         HEAP32[$410 + 4 >> 2] = $409;
         HEAP32[$$byval_copy >> 2] = $154;
         HEAP32[$$byval_copy105 >> 2] = HEAP32[$$byval_copy >> 2];
         $414 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($13, $$byval_copy105, $$byval_copy102, $403) | 0;
         $415 = HEAP32[$414 >> 2] | 0;
         if (!$415) {
          $417 = HEAP32[$$byval_copy102 >> 2] | 0;
          HEAP32[$398 >> 2] = 0;
          HEAP32[$398 + 4 >> 2] = 0;
          HEAP32[$398 + 8 >> 2] = $417;
          HEAP32[$414 >> 2] = $398;
          $421 = HEAP32[HEAP32[$13 >> 2] >> 2] | 0;
          if (!$421) $425 = $398; else {
           HEAP32[$13 >> 2] = $421;
           $425 = HEAP32[$414 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$151 >> 2] | 0, $425);
          HEAP32[$152 >> 2] = (HEAP32[$152 >> 2] | 0) + 1;
         } else if (($415 | 0) != ($398 | 0)) __ZdlPv($398);
         $431 = HEAP32[$430 + 4 >> 2] | 0;
         if (!$431) {
          $$0$i$i$i$i$i = $430;
          while (1) {
           $436 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
           if ((HEAP32[$436 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
            $$01$i$i$i$i$i = $436;
            break;
           } else $$0$i$i$i$i$i = $436;
          }
         } else {
          $$0$i$i$i$i$i$i = $431;
          while (1) {
           $433 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$433) {
            $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $433;
          }
         }
         if (($$01$i$i$i$i$i | 0) == ($63 | 0)) break; else {
          $402 = $$01$i$i$i$i$i;
          $430 = $$01$i$i$i$i$i;
         }
        }
       }
       $440 = HEAP32[$390 >> 2] | 0;
       __THREW__ = 0;
       $441 = invoke_ii(67, 64) | 0;
       $442 = __THREW__;
       __THREW__ = 0;
       if ($442 & 1) {
        label = 100;
        break L53;
       }
       __THREW__ = 0;
       invoke_viiii(11, $441 | 0, $12 | 0, $13 | 0, $440 | 0);
       $444 = __THREW__;
       __THREW__ = 0;
       if ($444 & 1) {
        $$lcssa = $441;
        label = 96;
        break L53;
       }
       HEAP32[$4 >> 2] = $441;
       $446 = $389 + 16 | 0;
       $447 = HEAP32[$446 >> 2] | 0;
       if ($447 >>> 0 < (HEAP32[$389 + 20 >> 2] | 0) >>> 0) {
        HEAP32[$447 >> 2] = $441;
        HEAP32[$446 >> 2] = (HEAP32[$446 >> 2] | 0) + 4;
       } else {
        __THREW__ = 0;
        invoke_vii(50, $389 + 12 | 0, $4 | 0);
        $455 = __THREW__;
        __THREW__ = 0;
        if ($455 & 1) {
         label = 100;
         break L53;
        }
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($13, HEAP32[$153 >> 2] | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
       __THREW__ = 0;
       $460 = invoke_ii(67, 20) | 0;
       $461 = __THREW__;
       __THREW__ = 0;
       if ($461 & 1) {
        label = 72;
        break L53;
       }
       $467 = HEAP32[$388 + 12 >> 2] | 0;
       HEAP32[$460 + 8 >> 2] = HEAP32[$387 >> 2];
       HEAP32[$460 + 12 >> 2] = $467;
       HEAP32[$460 + 16 >> 2] = $441;
       HEAP32[$460 + 4 >> 2] = $r;
       $471 = HEAP32[$r >> 2] | 0;
       HEAP32[$460 >> 2] = $471;
       HEAP32[$471 + 4 >> 2] = $460;
       HEAP32[$r >> 2] = $460;
       HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + 1;
       $476 = HEAP32[$476 + 4 >> 2] | 0;
       $388 = $476;
      } while (($388 | 0) != ($fields | 0));
     }
     $487 = HEAP32[$65 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $14 | 0, $139 | 0);
     $488 = __THREW__;
     __THREW__ = 0;
     if ($488 & 1) {
      label = 73;
      break L53;
     }
     $490 = $141;
     $495 = HEAP32[$490 + 4 >> 2] | 0;
     $496 = $142;
     HEAP32[$496 >> 2] = HEAP32[$490 >> 2];
     HEAP32[$496 + 4 >> 2] = $495;
     $500 = $140;
     $505 = HEAP32[$500 + 4 >> 2] | 0;
     $506 = $143;
     HEAP32[$506 >> 2] = HEAP32[$500 >> 2];
     HEAP32[$506 + 4 >> 2] = $505;
     HEAP32[$15 >> 2] = $15;
     HEAP32[$144 >> 2] = $15;
     HEAP32[$145 >> 2] = 0;
     $510 = HEAP32[$135 >> 2] | 0;
     if (($510 | 0) != ($r | 0)) {
      $517 = $510;
      $520 = $15;
      $523 = 0;
      $525 = $510;
      do {
       __THREW__ = 0;
       $520$looptemp = $520;
       $520 = invoke_ii(67, 20) | 0;
       $514 = __THREW__;
       __THREW__ = 0;
       if ($514 & 1) {
        $$lcssa925 = $520$looptemp;
        $$lcssa927 = $523;
        label = 108;
        break L53;
       }
       $516 = $517 + 8 | 0;
       $518 = $520 + 8 | 0;
       HEAP32[$518 >> 2] = HEAP32[$516 >> 2];
       HEAP32[$518 + 4 >> 2] = HEAP32[$516 + 4 >> 2];
       HEAP32[$518 + 8 >> 2] = HEAP32[$516 + 8 >> 2];
       HEAP32[$520 + 4 >> 2] = $15;
       HEAP32[$520 >> 2] = $520$looptemp;
       HEAP32[$520$looptemp + 4 >> 2] = $520;
       HEAP32[$15 >> 2] = $520;
       $523 = $523 + 1 | 0;
       HEAP32[$145 >> 2] = $523;
       $525 = HEAP32[$525 + 4 >> 2] | 0;
       $517 = $525;
      } while (($517 | 0) != ($r | 0));
     }
     __THREW__ = 0;
     $544 = invoke_ii(67, 60) | 0;
     $545 = __THREW__;
     __THREW__ = 0;
     if ($545 & 1) {
      label = 124;
      break L53;
     }
     __THREW__ = 0;
     invoke_viii(8, $544 | 0, $14 | 0, $15 | 0);
     $547 = __THREW__;
     __THREW__ = 0;
     if ($547 & 1) {
      $$lcssa932 = $544;
      label = 116;
      break L53;
     }
     HEAP32[$3 >> 2] = $544;
     $549 = $487 + 16 | 0;
     $550 = HEAP32[$549 >> 2] | 0;
     if ($550 >>> 0 < (HEAP32[$487 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$550 >> 2] = $544;
      HEAP32[$549 >> 2] = (HEAP32[$549 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $487 + 12 | 0, $3 | 0);
      $558 = __THREW__;
      __THREW__ = 0;
      if ($558 & 1) {
       label = 124;
       break L53;
      }
     }
     HEAP32[$obj >> 2] = $544;
     if (HEAP32[$145 >> 2] | 0) {
      $564 = HEAP32[$144 >> 2] | 0;
      $566 = (HEAP32[$15 >> 2] | 0) + 4 | 0;
      $568 = HEAP32[$564 >> 2] | 0;
      HEAP32[$568 + 4 >> 2] = HEAP32[$566 >> 2];
      HEAP32[HEAP32[$566 >> 2] >> 2] = $568;
      HEAP32[$145 >> 2] = 0;
      if (($564 | 0) != ($15 | 0)) {
       $__f$01$i$i = $564;
       do {
        $__f$01$i$i$looptemp = $__f$01$i$i;
        $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
        __ZdlPv($__f$01$i$i$looptemp);
       } while (($__f$01$i$i | 0) != ($15 | 0));
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     $576 = HEAP32[$next >> 2] | 0;
     HEAP32[$146 >> 2] = HEAP32[$66 >> 2];
     HEAP32[$146 + 4 >> 2] = HEAP32[$66 + 4 >> 2];
     HEAP32[$146 + 8 >> 2] = HEAP32[$66 + 8 >> 2];
     HEAP32[$66 >> 2] = 0;
     HEAP32[$66 + 4 >> 2] = 0;
     HEAP32[$66 + 8 >> 2] = 0;
     HEAP32[$147 >> 2] = HEAP32[$148 >> 2];
     HEAP32[$147 + 4 >> 2] = HEAP32[$148 + 4 >> 2];
     HEAP32[$147 + 8 >> 2] = HEAP32[$148 + 8 >> 2];
     HEAP32[$148 >> 2] = 0;
     HEAP32[$148 + 4 >> 2] = 0;
     HEAP32[$148 + 8 >> 2] = 0;
     HEAP32[$149 >> 2] = HEAP32[$68 >> 2];
     HEAP32[$149 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
     HEAP32[$149 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
     HEAP32[$149 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
     HEAP32[$agg$result >> 2] = $576;
     if (!(HEAP32[$136 >> 2] | 0)) {
      $$042 = 0;
      $got_comma$2$off0 = $got_comma$1$off0;
      $last_was_local$2$off0 = $last_was_local$0$off0;
     } else {
      $579 = HEAP32[$135 >> 2] | 0;
      $581 = (HEAP32[$r >> 2] | 0) + 4 | 0;
      $583 = HEAP32[$579 >> 2] | 0;
      HEAP32[$583 + 4 >> 2] = HEAP32[$581 >> 2];
      HEAP32[HEAP32[$581 >> 2] >> 2] = $583;
      HEAP32[$136 >> 2] = 0;
      if (($579 | 0) == ($r | 0)) {
       $$042 = 0;
       $got_comma$2$off0 = $got_comma$1$off0;
       $last_was_local$2$off0 = $last_was_local$0$off0;
      } else {
       $__f$01$i$i99 = $579;
       do {
        $__f$01$i$i99$looptemp = $__f$01$i$i99;
        $__f$01$i$i99 = HEAP32[$__f$01$i$i99 + 4 >> 2] | 0;
        __ZdlPv($__f$01$i$i99$looptemp);
       } while (($__f$01$i$i99 | 0) != ($r | 0));
       $$042 = 0;
       $got_comma$2$off0 = $got_comma$1$off0;
       $last_was_local$2$off0 = $last_was_local$0$off0;
      }
     }
     break;
    }
   case 18:
    {
     if ((HEAP32[$60 >> 2] | 0) != 1) {
      label = 133;
      break L53;
     }
     if ($last_was_local$0$off0) {
      label = 142;
      break L53;
     }
     $655 = HEAP32[$59 >> 2] | 0;
     $657 = HEAP32[$655 + 8 >> 2] | 0;
     $659 = HEAP32[$655 + 12 >> 2] | 0;
     $661 = HEAP32[$655 + 16 >> 2] | 0;
     if (!(HEAP32[$62 >> 2] | 0)) $value$0 = $661; else {
      $664 = HEAP32[$65 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $18 | 0, $661 + 4 | 0);
      $666 = __THREW__;
      __THREW__ = 0;
      if ($666 & 1) {
       label = 58;
       break L53;
      }
      $668 = $661 + 16 | 0;
      HEAP32[$162 >> 2] = HEAP32[$668 >> 2];
      HEAP32[$162 + 4 >> 2] = HEAP32[$668 + 4 >> 2];
      HEAP32[$162 + 8 >> 2] = HEAP32[$668 + 8 >> 2];
      HEAP32[$162 + 12 >> 2] = HEAP32[$668 + 12 >> 2];
      HEAP32[$163 >> 2] = 0;
      HEAP32[$164 >> 2] = 0;
      HEAP32[$19 >> 2] = $165;
      $669 = HEAP32[$let_binds >> 2] | 0;
      if (($669 | 0) != ($63 | 0)) {
       $675 = $669;
       $703 = $669;
       while (1) {
        __THREW__ = 0;
        $671 = invoke_ii(67, 24) | 0;
        $672 = __THREW__;
        __THREW__ = 0;
        if ($672 & 1) {
         label = 172;
         break L53;
        }
        $676 = $671 + 16 | 0;
        $677 = $675 + 16 | 0;
        $682 = HEAP32[$677 + 4 >> 2] | 0;
        $683 = $676;
        HEAP32[$683 >> 2] = HEAP32[$677 >> 2];
        HEAP32[$683 + 4 >> 2] = $682;
        HEAP32[$$byval_copy >> 2] = $166;
        HEAP32[$$byval_copy105 >> 2] = HEAP32[$$byval_copy >> 2];
        $687 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($19, $$byval_copy105, $$byval_copy102, $676) | 0;
        $688 = HEAP32[$687 >> 2] | 0;
        if (!$688) {
         $690 = HEAP32[$$byval_copy102 >> 2] | 0;
         HEAP32[$671 >> 2] = 0;
         HEAP32[$671 + 4 >> 2] = 0;
         HEAP32[$671 + 8 >> 2] = $690;
         HEAP32[$687 >> 2] = $671;
         $694 = HEAP32[HEAP32[$19 >> 2] >> 2] | 0;
         if (!$694) $698 = $671; else {
          HEAP32[$19 >> 2] = $694;
          $698 = HEAP32[$687 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$163 >> 2] | 0, $698);
         HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + 1;
        } else if (($688 | 0) != ($671 | 0)) __ZdlPv($671);
        $704 = HEAP32[$703 + 4 >> 2] | 0;
        if (!$704) {
         $$0$i$i$i$i$i130 = $703;
         while (1) {
          $709 = HEAP32[$$0$i$i$i$i$i130 + 8 >> 2] | 0;
          if ((HEAP32[$709 >> 2] | 0) == ($$0$i$i$i$i$i130 | 0)) {
           $$01$i$i$i$i$i133 = $709;
           break;
          } else $$0$i$i$i$i$i130 = $709;
         }
        } else {
         $$0$i$i$i$i$i$i128 = $704;
         while (1) {
          $706 = HEAP32[$$0$i$i$i$i$i$i128 >> 2] | 0;
          if (!$706) {
           $$01$i$i$i$i$i133 = $$0$i$i$i$i$i$i128;
           break;
          } else $$0$i$i$i$i$i$i128 = $706;
         }
        }
        if (($$01$i$i$i$i$i133 | 0) == ($63 | 0)) break; else {
         $675 = $$01$i$i$i$i$i133;
         $703 = $$01$i$i$i$i$i133;
        }
       }
      }
      __THREW__ = 0;
      $713 = invoke_ii(67, 64) | 0;
      $714 = __THREW__;
      __THREW__ = 0;
      if ($714 & 1) {
       label = 173;
       break L53;
      }
      __THREW__ = 0;
      invoke_viiii(11, $713 | 0, $18 | 0, $19 | 0, $661 | 0);
      $716 = __THREW__;
      __THREW__ = 0;
      if ($716 & 1) {
       $$lcssa929 = $713;
       label = 170;
       break L53;
      }
      HEAP32[$2 >> 2] = $713;
      $718 = $664 + 16 | 0;
      $719 = HEAP32[$718 >> 2] | 0;
      if ($719 >>> 0 < (HEAP32[$664 + 20 >> 2] | 0) >>> 0) {
       HEAP32[$719 >> 2] = $713;
       HEAP32[$718 >> 2] = (HEAP32[$718 >> 2] | 0) + 4;
      } else {
       __THREW__ = 0;
       invoke_vii(50, $664 + 12 | 0, $2 | 0);
       $727 = __THREW__;
       __THREW__ = 0;
       if ($727 & 1) {
        label = 173;
        break L53;
       }
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($19, HEAP32[$165 >> 2] | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
      $value$0 = $713;
     }
     if ($659) {
      label = 177;
      break L53;
     }
     if ($got_comma$1$off0) {
      label = 186;
      break L53;
     }
     __THREW__ = 0;
     invoke_viiii(12, $id_tok | 0, $this | 0, 11, 0);
     $771 = __THREW__;
     __THREW__ = 0;
     if ($771 & 1) {
      label = 58;
      break L53;
     }
     $773 = HEAP32[$65 >> 2] | 0;
     $774 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($773, $155) | 0;
     if (($774 | 0) == ($773 + 4 | 0)) {
      __THREW__ = 0;
      $779 = invoke_ii(67, 12) | 0;
      $780 = __THREW__;
      __THREW__ = 0;
      if ($780 & 1) {
       label = 213;
       break L53;
      }
      __THREW__ = 0;
      invoke_vii(40, $779 | 0, $155 | 0);
      $782 = __THREW__;
      __THREW__ = 0;
      if ($782 & 1) {
       $$lcssa930 = $779;
       label = 201;
       break L53;
      }
      __THREW__ = 0;
      $784 = invoke_iii(23, $773 | 0, $155 | 0) | 0;
      $785 = __THREW__;
      __THREW__ = 0;
      if ($785 & 1) {
       label = 213;
       break L53;
      }
      HEAP32[$784 >> 2] = $779;
      $$0$i157 = $779;
     } else $$0$i157 = HEAP32[$774 + 28 >> 2] | 0;
     __THREW__ = 0;
     invoke_viiii(12, $22 | 0, $this | 0, 23, 0);
     $789 = __THREW__;
     __THREW__ = 0;
     if ($789 & 1) {
      label = 213;
      break L53;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($156);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($157);
     __THREW__ = 0;
     $791 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
     $792 = __THREW__;
     __THREW__ = 0;
     if ($792 & 1) {
      label = 213;
      break L53;
     }
     __THREW__ = 0;
     invoke_viiii(12, $agg$result | 0, $this | 0, 1, 0);
     $794 = __THREW__;
     __THREW__ = 0;
     if ($794 & 1) {
      label = 213;
      break L53;
     }
     $796 = HEAP32[$65 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(40, $23 | 0, $139 | 0);
     $797 = __THREW__;
     __THREW__ = 0;
     if ($797 & 1) {
      label = 215;
      break L53;
     }
     $799 = $141;
     $804 = HEAP32[$799 + 4 >> 2] | 0;
     $805 = $159;
     HEAP32[$805 >> 2] = HEAP32[$799 >> 2];
     HEAP32[$805 + 4 >> 2] = $804;
     $809 = $158;
     $814 = HEAP32[$809 + 4 >> 2] | 0;
     $815 = $160;
     HEAP32[$815 >> 2] = HEAP32[$809 >> 2];
     HEAP32[$815 + 4 >> 2] = $814;
     __THREW__ = 0;
     $819 = invoke_ii(67, 64) | 0;
     $820 = __THREW__;
     __THREW__ = 0;
     if ($820 & 1) {
      label = 216;
      break L53;
     }
     HEAP32[$819 >> 2] = 3192;
     __THREW__ = 0;
     invoke_vii(40, $819 + 4 | 0, $23 | 0);
     $823 = __THREW__;
     __THREW__ = 0;
     if ($823 & 1) {
      $$lcssa931 = $819;
      label = 211;
      break L53;
     }
     $825 = $819 + 16 | 0;
     HEAP32[$825 >> 2] = HEAP32[$159 >> 2];
     HEAP32[$825 + 4 >> 2] = HEAP32[$159 + 4 >> 2];
     HEAP32[$825 + 8 >> 2] = HEAP32[$159 + 8 >> 2];
     HEAP32[$825 + 12 >> 2] = HEAP32[$159 + 12 >> 2];
     HEAP32[$819 + 32 >> 2] = 16;
     HEAP32[$819 + 36 >> 2] = 0;
     HEAP32[$819 + 40 >> 2] = 0;
     HEAP32[$819 + 44 >> 2] = 0;
     HEAP32[$819 >> 2] = 3420;
     HEAP32[$819 + 48 >> 2] = $657;
     HEAP32[$819 + 52 >> 2] = $value$0;
     HEAP32[$819 + 56 >> 2] = $$0$i157;
     HEAP32[$819 + 60 >> 2] = $791;
     HEAP32[$1 >> 2] = $819;
     $834 = $796 + 16 | 0;
     $835 = HEAP32[$834 >> 2] | 0;
     if ($835 >>> 0 < (HEAP32[$796 + 20 >> 2] | 0) >>> 0) {
      HEAP32[$835 >> 2] = $819;
      HEAP32[$834 >> 2] = (HEAP32[$834 >> 2] | 0) + 4;
     } else {
      __THREW__ = 0;
      invoke_vii(50, $796 + 12 | 0, $1 | 0);
      $843 = __THREW__;
      __THREW__ = 0;
      if ($843 & 1) {
       label = 216;
       break L53;
      }
     }
     HEAP32[$obj >> 2] = $819;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
     $$042 = 0;
     $got_comma$2$off0 = 0;
     $last_was_local$2$off0 = 0;
     break;
    }
   default:
    {
     if (!$got_comma$1$off0) {
      label = 221;
      break L53;
     }
     switch ($339 | 0) {
     case 14:
     case 11:
      {
       $this$idx60$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $870 = $this$idx60$val$idx$val + 8 | 0;
       HEAP32[$25 >> 2] = HEAP32[$870 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $69 | 0, $this$idx60$val$idx$val + 12 | 0);
       $873 = __THREW__;
       __THREW__ = 0;
       if ($873 & 1) {
        label = 240;
        break L53;
       }
       HEAP32[$25 >> 2] = HEAP32[$870 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $70 | 0, $this$idx60$val$idx$val + 24 | 0);
       $877 = __THREW__;
       __THREW__ = 0;
       if ($877 & 1) {
        label = 232;
        break L53;
       }
       $881 = $this$idx60$val$idx$val + 36 | 0;
       HEAP32[$71 >> 2] = HEAP32[$881 >> 2];
       HEAP32[$71 + 4 >> 2] = HEAP32[$881 + 4 >> 2];
       HEAP32[$71 + 8 >> 2] = HEAP32[$881 + 8 >> 2];
       HEAP32[$71 + 12 >> 2] = HEAP32[$881 + 12 >> 2];
       $882 = HEAP32[$870 >> 2] | 0;
       HEAP32[$25 >> 2] = $882;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($70);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
       if (($882 | 0) == 8) {
        $this$idx$val$idx$val$i181 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $884 = $this$idx$val$idx$val$i181 + 8 | 0;
        HEAP32[$26 >> 2] = HEAP32[$884 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $72 | 0, $this$idx$val$idx$val$i181 + 12 | 0);
        $887 = __THREW__;
        __THREW__ = 0;
        if ($887 & 1) {
         label = 240;
         break L53;
        }
        HEAP32[$26 >> 2] = HEAP32[$884 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $73 | 0, $this$idx$val$idx$val$i181 + 24 | 0);
        $891 = __THREW__;
        __THREW__ = 0;
        if ($891 & 1) {
         label = 236;
         break L53;
        }
        $895 = $this$idx$val$idx$val$i181 + 36 | 0;
        HEAP32[$74 >> 2] = HEAP32[$895 >> 2];
        HEAP32[$74 + 4 >> 2] = HEAP32[$895 + 4 >> 2];
        HEAP32[$74 + 8 >> 2] = HEAP32[$895 + 8 >> 2];
        HEAP32[$74 + 12 >> 2] = HEAP32[$895 + 12 >> 2];
        HEAP32[$26 >> 2] = HEAP32[$884 >> 2];
        $897 = HEAP32[$this >> 2] | 0;
        $899 = HEAP32[$897 + 4 >> 2] | 0;
        $900 = $899 + 4 | 0;
        $902 = HEAP32[$899 >> 2] | 0;
        HEAP32[$902 + 4 >> 2] = HEAP32[$900 >> 2];
        HEAP32[HEAP32[$900 >> 2] >> 2] = $902;
        $906 = $897 + 8 | 0;
        HEAP32[$906 >> 2] = (HEAP32[$906 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($899 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($899 + 12 | 0);
        __ZdlPv($899);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
        __THREW__ = 0;
        invoke_viii(3, $28 | 0, 51322, 16);
        $911 = __THREW__;
        __THREW__ = 0;
        if ($911 & 1) {
         label = 240;
         break L53;
        }
        __THREW__ = 0;
        invoke_viiii(14, $27 | 0, $this | 0, $28 | 0, $obj_level | 0);
        $913 = __THREW__;
        __THREW__ = 0;
        if ($913 & 1) {
         label = 242;
         break L53;
        }
        $915 = HEAP32[$27 >> 2] | 0;
        $916 = HEAP32[$75 >> 2] | 0;
        HEAP32[$76 >> 2] = 0;
        HEAP32[$75 >> 2] = 0;
        HEAP32[$27 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
        $1171 = $916;
        $1173 = $915;
        $is_method$0$off0 = 1;
       } else {
        $1171 = 0;
        $1173 = 0;
        $is_method$0$off0 = 0;
       };
       HEAP32[$plus_loc >> 2] = 0;
       HEAP32[$plus_loc + 4 >> 2] = 0;
       HEAP32[$plus_loc + 8 >> 2] = 0;
       HEAP32[$plus_loc + 12 >> 2] = 0;
       HEAP32[$plus_loc + 16 >> 2] = 0;
       HEAP32[$plus_loc + 20 >> 2] = 0;
       HEAP32[$plus_loc + 24 >> 2] = 0;
       $this$idx59$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $921 = $this$idx59$val$idx$val + 8 | 0;
       HEAP32[$29 >> 2] = HEAP32[$921 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $77 | 0, $this$idx59$val$idx$val + 12 | 0);
       $924 = __THREW__;
       __THREW__ = 0;
       if ($924 & 1) {
        $$lcssa933 = $1173;
        label = 262;
        break L53;
       }
       HEAP32[$29 >> 2] = HEAP32[$921 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $78 | 0, $this$idx59$val$idx$val + 24 | 0);
       $928 = __THREW__;
       __THREW__ = 0;
       if ($928 & 1) {
        $$lcssa934 = $1173;
        label = 245;
        break L53;
       }
       $932 = $this$idx59$val$idx$val + 36 | 0;
       HEAP32[$79 >> 2] = HEAP32[$932 >> 2];
       HEAP32[$79 + 4 >> 2] = HEAP32[$932 + 4 >> 2];
       HEAP32[$79 + 8 >> 2] = HEAP32[$932 + 8 >> 2];
       HEAP32[$79 + 12 >> 2] = HEAP32[$932 + 12 >> 2];
       $933 = HEAP32[$921 >> 2] | 0;
       HEAP32[$29 >> 2] = $933;
       if (($933 | 0) == 13) {
        $this$idx58$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $935 = $this$idx58$val$idx$val + 8 | 0;
        HEAP32[$30 >> 2] = HEAP32[$935 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $80 | 0, $this$idx58$val$idx$val + 12 | 0);
        $938 = __THREW__;
        __THREW__ = 0;
        if ($938 & 1) {
         $$lcssa935 = $1173;
         label = 264;
         break L53;
        }
        HEAP32[$30 >> 2] = HEAP32[$935 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $81 | 0, $this$idx58$val$idx$val + 24 | 0);
        $942 = __THREW__;
        __THREW__ = 0;
        if ($942 & 1) {
         $$lcssa936 = $1173;
         label = 249;
         break L53;
        }
        $946 = $this$idx58$val$idx$val + 36 | 0;
        HEAP32[$82 >> 2] = HEAP32[$946 >> 2];
        HEAP32[$82 + 4 >> 2] = HEAP32[$946 + 4 >> 2];
        HEAP32[$82 + 8 >> 2] = HEAP32[$946 + 8 >> 2];
        HEAP32[$82 + 12 >> 2] = HEAP32[$946 + 12 >> 2];
        HEAP32[$30 >> 2] = HEAP32[$935 >> 2];
        $949 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($80, 54196) | 0) == 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($81);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($78);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
        if ($949) {
         $this$idx57$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $950 = $this$idx57$val$idx$val + 8 | 0;
         HEAP32[$31 >> 2] = HEAP32[$950 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $83 | 0, $this$idx57$val$idx$val + 12 | 0);
         $953 = __THREW__;
         __THREW__ = 0;
         if ($953 & 1) {
          $$lcssa933 = $1173;
          label = 262;
          break L53;
         }
         HEAP32[$31 >> 2] = HEAP32[$950 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $84 | 0, $this$idx57$val$idx$val + 24 | 0);
         $957 = __THREW__;
         __THREW__ = 0;
         if ($957 & 1) {
          $$lcssa937 = $1173;
          label = 253;
          break L53;
         }
         $961 = $this$idx57$val$idx$val + 36 | 0;
         HEAP32[$85 >> 2] = HEAP32[$961 >> 2];
         HEAP32[$85 + 4 >> 2] = HEAP32[$961 + 4 >> 2];
         HEAP32[$85 + 8 >> 2] = HEAP32[$961 + 8 >> 2];
         HEAP32[$85 + 12 >> 2] = HEAP32[$961 + 12 >> 2];
         HEAP32[$31 >> 2] = HEAP32[$950 >> 2];
         if (!(HEAP8[$plus_loc >> 0] & 1)) {
          HEAP8[$87 >> 0] = 0;
          HEAP8[$plus_loc >> 0] = 0;
         } else {
          HEAP8[HEAP32[$92 >> 2] >> 0] = 0;
          HEAP32[$93 >> 2] = 0;
         }
         __THREW__ = 0;
         invoke_vii(45, $plus_loc | 0, 0);
         $967 = __THREW__;
         __THREW__ = 0;
         if ($967 & 1) {
          label = 258;
          break L53;
         };
         HEAP32[$plus_loc >> 2] = HEAP32[$86 >> 2];
         HEAP32[$plus_loc + 4 >> 2] = HEAP32[$86 + 4 >> 2];
         HEAP32[$plus_loc + 8 >> 2] = HEAP32[$86 + 8 >> 2];
         HEAP32[$86 >> 2] = 0;
         HEAP32[$86 + 4 >> 2] = 0;
         HEAP32[$86 + 8 >> 2] = 0;
         HEAP32[$88 >> 2] = HEAP32[$85 >> 2];
         HEAP32[$88 + 4 >> 2] = HEAP32[$85 + 4 >> 2];
         HEAP32[$88 + 8 >> 2] = HEAP32[$85 + 8 >> 2];
         HEAP32[$88 + 12 >> 2] = HEAP32[$85 + 12 >> 2];
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($84);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($83);
         $this$idx$val$idx$val$i207 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
         $971 = $this$idx$val$idx$val$i207 + 8 | 0;
         HEAP32[$32 >> 2] = HEAP32[$971 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $89 | 0, $this$idx$val$idx$val$i207 + 12 | 0);
         $974 = __THREW__;
         __THREW__ = 0;
         if ($974 & 1) {
          $$lcssa933 = $1173;
          label = 262;
          break L53;
         }
         HEAP32[$32 >> 2] = HEAP32[$971 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $90 | 0, $this$idx$val$idx$val$i207 + 24 | 0);
         $978 = __THREW__;
         __THREW__ = 0;
         if ($978 & 1) {
          $$lcssa939 = $1173;
          label = 261;
          break L53;
         }
         $986 = $this$idx$val$idx$val$i207 + 36 | 0;
         HEAP32[$91 >> 2] = HEAP32[$986 >> 2];
         HEAP32[$91 + 4 >> 2] = HEAP32[$986 + 4 >> 2];
         HEAP32[$91 + 8 >> 2] = HEAP32[$986 + 8 >> 2];
         HEAP32[$91 + 12 >> 2] = HEAP32[$986 + 12 >> 2];
         HEAP32[$32 >> 2] = HEAP32[$971 >> 2];
         $988 = HEAP32[$this >> 2] | 0;
         $990 = HEAP32[$988 + 4 >> 2] | 0;
         $991 = $990 + 4 | 0;
         $993 = HEAP32[$990 >> 2] | 0;
         HEAP32[$993 + 4 >> 2] = HEAP32[$991 >> 2];
         HEAP32[HEAP32[$991 >> 2] >> 2] = $993;
         $997 = $988 + 8 | 0;
         HEAP32[$997 >> 2] = (HEAP32[$997 >> 2] | 0) + -1;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($990 + 24 | 0);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($990 + 12 | 0);
         __ZdlPv($990);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($90);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
         if ($is_method$0$off0) {
          $$lcssa940 = $1173;
          label = 267;
          break L53;
         } else $plus_sugar$0$off0357 = 1;
        } else $plus_sugar$0$off0357 = 0;
       } else {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($78);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
        $plus_sugar$0$off0357 = 0;
       }
       __THREW__ = 0;
       invoke_viiii(12, $34 | 0, $this | 0, 4, 0);
       $1033 = __THREW__;
       __THREW__ = 0;
       if ($1033 & 1) {
        $$lcssa933 = $1173;
        label = 262;
        break L53;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($94);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($95);
       $this$idx56$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $1035 = $this$idx56$val$idx$val + 8 | 0;
       HEAP32[$35 >> 2] = HEAP32[$1035 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $96 | 0, $this$idx56$val$idx$val + 12 | 0);
       $1038 = __THREW__;
       __THREW__ = 0;
       if ($1038 & 1) {
        $$lcssa933 = $1173;
        label = 262;
        break L53;
       }
       HEAP32[$35 >> 2] = HEAP32[$1035 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $97 | 0, $this$idx56$val$idx$val + 24 | 0);
       $1042 = __THREW__;
       __THREW__ = 0;
       if ($1042 & 1) {
        $$lcssa941 = $1173;
        label = 280;
        break L53;
       }
       $1046 = $this$idx56$val$idx$val + 36 | 0;
       HEAP32[$98 >> 2] = HEAP32[$1046 >> 2];
       HEAP32[$98 + 4 >> 2] = HEAP32[$1046 + 4 >> 2];
       HEAP32[$98 + 8 >> 2] = HEAP32[$1046 + 8 >> 2];
       HEAP32[$98 + 12 >> 2] = HEAP32[$1046 + 12 >> 2];
       $1047 = HEAP32[$1035 >> 2] | 0;
       HEAP32[$35 >> 2] = $1047;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($97);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($96);
       do if (($1047 | 0) == 4) {
        $this$idx$val$idx$val$i225 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1049 = $this$idx$val$idx$val$i225 + 8 | 0;
        HEAP32[$36 >> 2] = HEAP32[$1049 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $99 | 0, $this$idx$val$idx$val$i225 + 12 | 0);
        $1052 = __THREW__;
        __THREW__ = 0;
        if ($1052 & 1) {
         $$lcssa933 = $1173;
         label = 262;
         break L53;
        }
        HEAP32[$36 >> 2] = HEAP32[$1049 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $100 | 0, $this$idx$val$idx$val$i225 + 24 | 0);
        $1056 = __THREW__;
        __THREW__ = 0;
        if ($1056 & 1) {
         $$lcssa942 = $1173;
         label = 284;
         break L53;
        }
        $1060 = $this$idx$val$idx$val$i225 + 36 | 0;
        HEAP32[$101 >> 2] = HEAP32[$1060 >> 2];
        HEAP32[$101 + 4 >> 2] = HEAP32[$1060 + 4 >> 2];
        HEAP32[$101 + 8 >> 2] = HEAP32[$1060 + 8 >> 2];
        HEAP32[$101 + 12 >> 2] = HEAP32[$1060 + 12 >> 2];
        HEAP32[$36 >> 2] = HEAP32[$1049 >> 2];
        $1062 = HEAP32[$this >> 2] | 0;
        $1064 = HEAP32[$1062 + 4 >> 2] | 0;
        $1065 = $1064 + 4 | 0;
        $1067 = HEAP32[$1064 >> 2] | 0;
        HEAP32[$1067 + 4 >> 2] = HEAP32[$1065 >> 2];
        HEAP32[HEAP32[$1065 >> 2] >> 2] = $1067;
        $1071 = $1062 + 8 | 0;
        HEAP32[$1071 >> 2] = (HEAP32[$1071 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1064 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1064 + 12 | 0);
        __ZdlPv($1064);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($100);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
        $this$idx55$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1076 = $this$idx55$val$idx$val + 8 | 0;
        HEAP32[$37 >> 2] = HEAP32[$1076 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $102 | 0, $this$idx55$val$idx$val + 12 | 0);
        $1079 = __THREW__;
        __THREW__ = 0;
        if ($1079 & 1) {
         $$lcssa933 = $1173;
         label = 262;
         break L53;
        }
        HEAP32[$37 >> 2] = HEAP32[$1076 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $103 | 0, $this$idx55$val$idx$val + 24 | 0);
        $1083 = __THREW__;
        __THREW__ = 0;
        if ($1083 & 1) {
         $$lcssa943 = $1173;
         label = 287;
         break L53;
        }
        $1087 = $this$idx55$val$idx$val + 36 | 0;
        HEAP32[$104 >> 2] = HEAP32[$1087 >> 2];
        HEAP32[$104 + 4 >> 2] = HEAP32[$1087 + 4 >> 2];
        HEAP32[$104 + 8 >> 2] = HEAP32[$1087 + 8 >> 2];
        HEAP32[$104 + 12 >> 2] = HEAP32[$1087 + 12 >> 2];
        $1088 = HEAP32[$1076 >> 2] | 0;
        HEAP32[$37 >> 2] = $1088;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($103);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102);
        if (($1088 | 0) != 4) {
         $1339 = 1;
         break;
        }
        $this$idx$val$idx$val$i237 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1090 = $this$idx$val$idx$val$i237 + 8 | 0;
        HEAP32[$38 >> 2] = HEAP32[$1090 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $105 | 0, $this$idx$val$idx$val$i237 + 12 | 0);
        $1093 = __THREW__;
        __THREW__ = 0;
        if ($1093 & 1) {
         $$lcssa933 = $1173;
         label = 262;
         break L53;
        }
        HEAP32[$38 >> 2] = HEAP32[$1090 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $106 | 0, $this$idx$val$idx$val$i237 + 24 | 0);
        $1097 = __THREW__;
        __THREW__ = 0;
        if ($1097 & 1) {
         $$lcssa944 = $1173;
         label = 291;
         break L53;
        }
        $1101 = $this$idx$val$idx$val$i237 + 36 | 0;
        HEAP32[$107 >> 2] = HEAP32[$1101 >> 2];
        HEAP32[$107 + 4 >> 2] = HEAP32[$1101 + 4 >> 2];
        HEAP32[$107 + 8 >> 2] = HEAP32[$1101 + 8 >> 2];
        HEAP32[$107 + 12 >> 2] = HEAP32[$1101 + 12 >> 2];
        HEAP32[$38 >> 2] = HEAP32[$1090 >> 2];
        $1103 = HEAP32[$this >> 2] | 0;
        $1105 = HEAP32[$1103 + 4 >> 2] | 0;
        $1106 = $1105 + 4 | 0;
        $1108 = HEAP32[$1105 >> 2] | 0;
        HEAP32[$1108 + 4 >> 2] = HEAP32[$1106 >> 2];
        HEAP32[HEAP32[$1106 >> 2] >> 2] = $1108;
        $1112 = $1103 + 8 | 0;
        HEAP32[$1112 >> 2] = (HEAP32[$1112 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1105 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1105 + 12 | 0);
        __ZdlPv($1105);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($106);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
        $1339 = 2;
       } else $1339 = 0; while (0);
       __THREW__ = 0;
       invoke_viii(9, $0 | 0, $literal_fields | 0, $66 | 0);
       $1117 = __THREW__;
       __THREW__ = 0;
       if ($1117 & 1) {
        $$lcssa933 = $1173;
        label = 262;
        break L53;
       }
       if (!(HEAP8[$108 >> 0] | 0)) {
        $$lcssa945 = $1173;
        label = 295;
        break L53;
       }
       $1152 = HEAP32[$65 >> 2] | 0;
       __THREW__ = 0;
       invoke_vii(40, $40 | 0, $67 | 0);
       $1153 = __THREW__;
       __THREW__ = 0;
       if ($1153 & 1) {
        $$lcssa933 = $1173;
        label = 262;
        break L53;
       };
       HEAP32[$109 >> 2] = HEAP32[$68 >> 2];
       HEAP32[$109 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
       HEAP32[$109 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
       HEAP32[$109 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $41 | 0, $66 | 0);
       $1155 = __THREW__;
       __THREW__ = 0;
       if ($1155 & 1) {
        $$lcssa946 = $1173;
        label = 327;
        break L53;
       }
       __THREW__ = 0;
       $1157 = invoke_iiii(31, $1152 | 0, $40 | 0, $41 | 0) | 0;
       $1158 = __THREW__;
       __THREW__ = 0;
       if ($1158 & 1) {
        $$lcssa947 = $1173;
        label = 328;
        break L53;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
       $1160 = $1157;
       __THREW__ = 0;
       $1161 = invoke_iiii(32, $this | 0, 15, $110 | 0) | 0;
       $1162 = __THREW__;
       __THREW__ = 0;
       if ($1162 & 1) {
        $$lcssa933 = $1173;
        label = 262;
        break L53;
       }
       $1164 = $1161;
       if ($is_method$0$off0) {
        $1165 = HEAP32[$65 >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(40, $42 | 0, $1161 + 4 | 0);
        $1167 = __THREW__;
        __THREW__ = 0;
        if ($1167 & 1) {
         $$lcssa933 = $1173;
         label = 262;
         break L53;
        }
        $1169 = $1161 + 16 | 0;
        HEAP32[$111 >> 2] = HEAP32[$1169 >> 2];
        HEAP32[$111 + 4 >> 2] = HEAP32[$1169 + 4 >> 2];
        HEAP32[$111 + 8 >> 2] = HEAP32[$1169 + 8 >> 2];
        HEAP32[$111 + 12 >> 2] = HEAP32[$1169 + 12 >> 2];
        HEAP32[$43 >> 2] = 0;
        HEAP32[$112 >> 2] = 0;
        HEAP32[$113 >> 2] = 0;
        $1170 = $1171;
        $1172 = $1173;
        $1174 = $1171 - $1173 | 0;
        $1175 = $1174 >> 2;
        do if ($1175) {
         if ($1175 >>> 0 > 1073741823) {
          __THREW__ = 0;
          invoke_vi(175, $43 | 0);
          $1178 = __THREW__;
          __THREW__ = 0;
          if ($1178 & 1) {
           $$lcssa948 = $1173;
           label = 317;
           break L53;
          }
         }
         __THREW__ = 0;
         $1180 = invoke_ii(67, $1174 | 0) | 0;
         $1181 = __THREW__;
         __THREW__ = 0;
         if ($1181 & 1) {
          $$lcssa948 = $1173;
          label = 317;
          break L53;
         }
         HEAP32[$112 >> 2] = $1180;
         HEAP32[$43 >> 2] = $1180;
         HEAP32[$114 >> 2] = $1180 + ($1175 << 2);
         if (($1172 | 0) == ($1170 | 0)) break;
         $$01$i$i = $1172;
         $1186 = $1180;
         do {
          HEAP32[$1186 >> 2] = HEAP32[$$01$i$i >> 2];
          $1186 = (HEAP32[$112 >> 2] | 0) + 4 | 0;
          HEAP32[$112 >> 2] = $1186;
          $$01$i$i = $$01$i$i + 4 | 0;
         } while (($$01$i$i | 0) != ($1170 | 0));
        } while (0);
        __THREW__ = 0;
        $1202 = invoke_iiiii(6, $1165 | 0, $42 | 0, $43 | 0, $1161 | 0) | 0;
        $1203 = __THREW__;
        __THREW__ = 0;
        if ($1203 & 1) {
         $$lcssa949 = $1173;
         label = 331;
         break L53;
        }
        $1205 = $1202;
        $1206 = HEAP32[$43 >> 2] | 0;
        $1208 = $1206;
        if ($1206) {
         $1209 = HEAP32[$112 >> 2] | 0;
         if (($1209 | 0) != ($1206 | 0)) HEAP32[$112 >> 2] = $1209 + (~(($1209 + -4 - $1208 | 0) >>> 2) << 2);
         __ZdlPv($1206);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
        $1294 = $1205;
       } else $1294 = $1164;
       if ($plus_sugar$0$off0357) {
        $1230 = HEAP32[$65 >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(40, $44 | 0, $plus_loc | 0);
        $1231 = __THREW__;
        __THREW__ = 0;
        if ($1231 & 1) {
         $$lcssa933 = $1173;
         label = 262;
         break L53;
        };
        HEAP32[$115 >> 2] = HEAP32[$88 >> 2];
        HEAP32[$115 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
        HEAP32[$115 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
        HEAP32[$115 + 12 >> 2] = HEAP32[$88 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $45 | 0, $66 | 0);
        $1233 = __THREW__;
        __THREW__ = 0;
        if ($1233 & 1) {
         $$lcssa950 = $1173;
         label = 362;
         break L53;
        }
        __THREW__ = 0;
        $1235 = invoke_iiii(31, $1230 | 0, $44 | 0, $45 | 0) | 0;
        $1236 = __THREW__;
        __THREW__ = 0;
        if ($1236 & 1) {
         $$lcssa951 = $1173;
         label = 363;
         break L53;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
        $1238 = HEAP32[$65 >> 2] | 0;
        __THREW__ = 0;
        invoke_vii(40, $46 | 0, $plus_loc | 0);
        $1239 = __THREW__;
        __THREW__ = 0;
        if ($1239 & 1) {
         $$lcssa933 = $1173;
         label = 262;
         break L53;
        };
        HEAP32[$116 >> 2] = HEAP32[$88 >> 2];
        HEAP32[$116 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
        HEAP32[$116 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
        HEAP32[$116 + 12 >> 2] = HEAP32[$88 + 12 >> 2];
        $1241 = HEAP32[$65 >> 2] | 0;
        HEAP32[$47 >> 2] = 0;
        HEAP32[$47 + 4 >> 2] = 0;
        HEAP32[$47 + 8 >> 2] = 0;
        HEAP32[$47 + 12 >> 2] = 0;
        HEAP32[$47 + 16 >> 2] = 0;
        HEAP32[$47 + 20 >> 2] = 0;
        HEAP32[$47 + 24 >> 2] = 0;
        __THREW__ = 0;
        $1242 = invoke_ii(67, 48) | 0;
        $1243 = __THREW__;
        __THREW__ = 0;
        if ($1243 & 1) {
         $$lcssa952 = $1173;
         label = 365;
         break L53;
        }
        HEAP32[$1242 >> 2] = 3192;
        __THREW__ = 0;
        invoke_vii(40, $1242 + 4 | 0, $47 | 0);
        $1246 = __THREW__;
        __THREW__ = 0;
        if ($1246 & 1) {
         $$lcssa953 = $1173;
         $$lcssa957 = $1242;
         label = 346;
         break L53;
        }
        $1248 = $1242 + 16 | 0;
        HEAP32[$1248 >> 2] = HEAP32[$117 >> 2];
        HEAP32[$1248 + 4 >> 2] = HEAP32[$117 + 4 >> 2];
        HEAP32[$1248 + 8 >> 2] = HEAP32[$117 + 8 >> 2];
        HEAP32[$1248 + 12 >> 2] = HEAP32[$117 + 12 >> 2];
        HEAP32[$1242 + 32 >> 2] = 18;
        HEAP32[$1242 + 36 >> 2] = 0;
        HEAP32[$1242 + 40 >> 2] = 0;
        HEAP32[$1242 + 44 >> 2] = 0;
        HEAP32[$1242 >> 2] = 3436;
        HEAP32[$$byval_copy >> 2] = $1242;
        $1253 = $1241 + 16 | 0;
        $1254 = HEAP32[$1253 >> 2] | 0;
        if ($1254 >>> 0 < (HEAP32[$1241 + 20 >> 2] | 0) >>> 0) {
         HEAP32[$1254 >> 2] = $1242;
         HEAP32[$1253 >> 2] = (HEAP32[$1253 >> 2] | 0) + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(50, $1241 + 12 | 0, $$byval_copy | 0);
         $1262 = __THREW__;
         __THREW__ = 0;
         if ($1262 & 1) {
          $$lcssa952 = $1173;
          label = 365;
          break L53;
         }
        }
        __THREW__ = 0;
        $1266 = invoke_ii(67, 56) | 0;
        $1267 = __THREW__;
        __THREW__ = 0;
        if ($1267 & 1) {
         $$lcssa952 = $1173;
         label = 365;
         break L53;
        }
        HEAP32[$1266 >> 2] = 3192;
        __THREW__ = 0;
        invoke_vii(40, $1266 + 4 | 0, $46 | 0);
        $1270 = __THREW__;
        __THREW__ = 0;
        if ($1270 & 1) {
         $$lcssa954 = $1173;
         $$lcssa961 = $1266;
         label = 352;
         break L53;
        }
        $1272 = $1266 + 16 | 0;
        HEAP32[$1272 >> 2] = HEAP32[$116 >> 2];
        HEAP32[$1272 + 4 >> 2] = HEAP32[$116 + 4 >> 2];
        HEAP32[$1272 + 8 >> 2] = HEAP32[$116 + 8 >> 2];
        HEAP32[$1272 + 12 >> 2] = HEAP32[$116 + 12 >> 2];
        HEAP32[$1266 + 32 >> 2] = 9;
        HEAP32[$1266 + 36 >> 2] = 0;
        HEAP32[$1266 + 40 >> 2] = 0;
        HEAP32[$1266 + 44 >> 2] = 0;
        HEAP32[$1266 >> 2] = 3356;
        HEAP32[$1266 + 48 >> 2] = $1242;
        HEAP32[$1266 + 52 >> 2] = $1235;
        HEAP32[$$byval_copy102 >> 2] = $1266;
        $1279 = $1238 + 16 | 0;
        $1280 = HEAP32[$1279 >> 2] | 0;
        if ($1280 >>> 0 < (HEAP32[$1238 + 20 >> 2] | 0) >>> 0) {
         HEAP32[$1280 >> 2] = $1266;
         HEAP32[$1279 >> 2] = (HEAP32[$1279 >> 2] | 0) + 4;
        } else {
         __THREW__ = 0;
         invoke_vii(50, $1238 + 12 | 0, $$byval_copy102 | 0);
         $1288 = __THREW__;
         __THREW__ = 0;
         if ($1288 & 1) {
          $$lcssa952 = $1173;
          label = 365;
          break L53;
         }
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
        $1292 = HEAP32[$65 >> 2] | 0;
        $1293 = $1294;
        __THREW__ = 0;
        invoke_vii(40, $48 | 0, $1293 + 4 | 0);
        $1296 = __THREW__;
        __THREW__ = 0;
        if ($1296 & 1) {
         $$lcssa933 = $1173;
         label = 262;
         break L53;
        }
        $1298 = $1293 + 16 | 0;
        HEAP32[$118 >> 2] = HEAP32[$1298 >> 2];
        HEAP32[$118 + 4 >> 2] = HEAP32[$1298 + 4 >> 2];
        HEAP32[$118 + 8 >> 2] = HEAP32[$1298 + 8 >> 2];
        HEAP32[$118 + 12 >> 2] = HEAP32[$1298 + 12 >> 2];
        __THREW__ = 0;
        $1299 = invoke_ii(67, 60) | 0;
        $1300 = __THREW__;
        __THREW__ = 0;
        if ($1300 & 1) {
         $$lcssa955 = $1173;
         label = 367;
         break L53;
        }
        HEAP32[$1299 >> 2] = 3192;
        __THREW__ = 0;
        invoke_vii(40, $1299 + 4 | 0, $48 | 0);
        $1303 = __THREW__;
        __THREW__ = 0;
        if ($1303 & 1) {
         $$lcssa956 = $1173;
         $$lcssa964 = $1299;
         label = 360;
         break L53;
        }
        $1305 = $1299 + 16 | 0;
        HEAP32[$1305 >> 2] = HEAP32[$118 >> 2];
        HEAP32[$1305 + 4 >> 2] = HEAP32[$118 + 4 >> 2];
        HEAP32[$1305 + 8 >> 2] = HEAP32[$118 + 8 >> 2];
        HEAP32[$1305 + 12 >> 2] = HEAP32[$118 + 12 >> 2];
        HEAP32[$1299 + 32 >> 2] = 2;
        HEAP32[$1299 + 36 >> 2] = 0;
        HEAP32[$1299 + 40 >> 2] = 0;
        HEAP32[$1299 + 44 >> 2] = 0;
        HEAP32[$1299 >> 2] = 3372;
        HEAP32[$1299 + 48 >> 2] = $1266;
        HEAP32[$1299 + 52 >> 2] = 2;
        HEAP32[$1299 + 56 >> 2] = $1293;
        HEAP32[$$byval_copy105 >> 2] = $1299;
        $1313 = $1292 + 16 | 0;
        $1314 = HEAP32[$1313 >> 2] | 0;
        if ($1314 >>> 0 < (HEAP32[$1292 + 20 >> 2] | 0) >>> 0) {
         $1318 = $1299;
         HEAP32[$1314 >> 2] = $1318;
         HEAP32[$1313 >> 2] = (HEAP32[$1313 >> 2] | 0) + 4;
         $$pre$phi781Z2D = $1318;
        } else {
         __THREW__ = 0;
         invoke_vii(50, $1292 + 12 | 0, $$byval_copy105 | 0);
         $1322 = __THREW__;
         __THREW__ = 0;
         if ($1322 & 1) {
          $$lcssa955 = $1173;
          label = 367;
          break L53;
         }
         $$pre$phi781Z2D = $1299;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
        $1341 = $$pre$phi781Z2D;
       } else $1341 = $1294;
       __THREW__ = 0;
       $1334 = invoke_ii(67, 20) | 0;
       $1335 = __THREW__;
       __THREW__ = 0;
       if ($1335 & 1) {
        $$lcssa933 = $1173;
        label = 262;
        break L53;
       }
       HEAP32[$1334 + 8 >> 2] = $1160;
       HEAP32[$1334 + 12 >> 2] = $1339;
       HEAP32[$1334 + 16 >> 2] = $1341;
       HEAP32[$1334 + 4 >> 2] = $fields;
       $1343 = HEAP32[$fields >> 2] | 0;
       HEAP32[$1334 >> 2] = $1343;
       HEAP32[$1343 + 4 >> 2] = $1334;
       HEAP32[$fields >> 2] = $1334;
       HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 1;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($plus_loc);
       if (!$1173) {
        $$042 = 1;
        $got_comma$2$off0 = 0;
        $last_was_local$2$off0 = 0;
        break L75;
       }
       __ZdlPv($1173);
       $$042 = 1;
       $got_comma$2$off0 = 0;
       $last_was_local$2$off0 = 0;
       break L75;
       break;
      }
     case 24:
      {
       __THREW__ = 0;
       invoke_viii(6, $this | 0, $let_binds | 0, $obj_level | 0);
       $1352 = __THREW__;
       __THREW__ = 0;
       if ($1352 & 1) {
        label = 58;
        break L53;
       } else {
        $$042 = 1;
        $got_comma$2$off0 = 0;
        $last_was_local$2$off0 = 1;
        break L75;
       }
       break;
      }
     case 2:
      {
       __THREW__ = 0;
       $1354 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
       $1355 = __THREW__;
       __THREW__ = 0;
       if ($1355 & 1) {
        label = 58;
        break L53;
       }
       $1357 = $1354;
       __THREW__ = 0;
       invoke_viiii(12, $49 | 0, $this | 0, 3, 0);
       $1358 = __THREW__;
       __THREW__ = 0;
       if ($1358 & 1) {
        label = 58;
        break L53;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($119);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($120);
       __THREW__ = 0;
       invoke_viiii(12, $50 | 0, $this | 0, 4, 0);
       $1360 = __THREW__;
       __THREW__ = 0;
       if ($1360 & 1) {
        label = 58;
        break L53;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($121);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($122);
       $this$idx54$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
       $1362 = $this$idx54$val$idx$val + 8 | 0;
       HEAP32[$51 >> 2] = HEAP32[$1362 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $123 | 0, $this$idx54$val$idx$val + 12 | 0);
       $1365 = __THREW__;
       __THREW__ = 0;
       if ($1365 & 1) {
        label = 58;
        break L53;
       }
       HEAP32[$51 >> 2] = HEAP32[$1362 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $124 | 0, $this$idx54$val$idx$val + 24 | 0);
       $1369 = __THREW__;
       __THREW__ = 0;
       if ($1369 & 1) {
        label = 380;
        break L53;
       }
       $1373 = $this$idx54$val$idx$val + 36 | 0;
       HEAP32[$125 >> 2] = HEAP32[$1373 >> 2];
       HEAP32[$125 + 4 >> 2] = HEAP32[$1373 + 4 >> 2];
       HEAP32[$125 + 8 >> 2] = HEAP32[$1373 + 8 >> 2];
       HEAP32[$125 + 12 >> 2] = HEAP32[$1373 + 12 >> 2];
       $1374 = HEAP32[$1362 >> 2] | 0;
       HEAP32[$51 >> 2] = $1374;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($124);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
       do if (($1374 | 0) == 4) {
        $this$idx$val$idx$val$i306 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1376 = $this$idx$val$idx$val$i306 + 8 | 0;
        HEAP32[$52 >> 2] = HEAP32[$1376 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $126 | 0, $this$idx$val$idx$val$i306 + 12 | 0);
        $1379 = __THREW__;
        __THREW__ = 0;
        if ($1379 & 1) {
         label = 58;
         break L53;
        }
        HEAP32[$52 >> 2] = HEAP32[$1376 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $127 | 0, $this$idx$val$idx$val$i306 + 24 | 0);
        $1383 = __THREW__;
        __THREW__ = 0;
        if ($1383 & 1) {
         label = 384;
         break L53;
        }
        $1387 = $this$idx$val$idx$val$i306 + 36 | 0;
        HEAP32[$128 >> 2] = HEAP32[$1387 >> 2];
        HEAP32[$128 + 4 >> 2] = HEAP32[$1387 + 4 >> 2];
        HEAP32[$128 + 8 >> 2] = HEAP32[$1387 + 8 >> 2];
        HEAP32[$128 + 12 >> 2] = HEAP32[$1387 + 12 >> 2];
        HEAP32[$52 >> 2] = HEAP32[$1376 >> 2];
        $1389 = HEAP32[$this >> 2] | 0;
        $1391 = HEAP32[$1389 + 4 >> 2] | 0;
        $1392 = $1391 + 4 | 0;
        $1394 = HEAP32[$1391 >> 2] | 0;
        HEAP32[$1394 + 4 >> 2] = HEAP32[$1392 >> 2];
        HEAP32[HEAP32[$1392 >> 2] >> 2] = $1394;
        $1398 = $1389 + 8 | 0;
        HEAP32[$1398 >> 2] = (HEAP32[$1398 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1391 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1391 + 12 | 0);
        __ZdlPv($1391);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($127);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($126);
        $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1403 = $this$idx$val$idx$val + 8 | 0;
        HEAP32[$53 >> 2] = HEAP32[$1403 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $129 | 0, $this$idx$val$idx$val + 12 | 0);
        $1406 = __THREW__;
        __THREW__ = 0;
        if ($1406 & 1) {
         label = 58;
         break L53;
        }
        HEAP32[$53 >> 2] = HEAP32[$1403 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $130 | 0, $this$idx$val$idx$val + 24 | 0);
        $1410 = __THREW__;
        __THREW__ = 0;
        if ($1410 & 1) {
         label = 387;
         break L53;
        }
        $1414 = $this$idx$val$idx$val + 36 | 0;
        HEAP32[$131 >> 2] = HEAP32[$1414 >> 2];
        HEAP32[$131 + 4 >> 2] = HEAP32[$1414 + 4 >> 2];
        HEAP32[$131 + 8 >> 2] = HEAP32[$1414 + 8 >> 2];
        HEAP32[$131 + 12 >> 2] = HEAP32[$1414 + 12 >> 2];
        $1415 = HEAP32[$1403 >> 2] | 0;
        HEAP32[$53 >> 2] = $1415;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($130);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
        if (($1415 | 0) != 4) {
         $1453 = 1;
         break;
        }
        $this$idx$val$idx$val$i318 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
        $1417 = $this$idx$val$idx$val$i318 + 8 | 0;
        HEAP32[$54 >> 2] = HEAP32[$1417 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $132 | 0, $this$idx$val$idx$val$i318 + 12 | 0);
        $1420 = __THREW__;
        __THREW__ = 0;
        if ($1420 & 1) {
         label = 58;
         break L53;
        }
        HEAP32[$54 >> 2] = HEAP32[$1417 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $133 | 0, $this$idx$val$idx$val$i318 + 24 | 0);
        $1424 = __THREW__;
        __THREW__ = 0;
        if ($1424 & 1) {
         label = 391;
         break L53;
        }
        $1428 = $this$idx$val$idx$val$i318 + 36 | 0;
        HEAP32[$134 >> 2] = HEAP32[$1428 >> 2];
        HEAP32[$134 + 4 >> 2] = HEAP32[$1428 + 4 >> 2];
        HEAP32[$134 + 8 >> 2] = HEAP32[$1428 + 8 >> 2];
        HEAP32[$134 + 12 >> 2] = HEAP32[$1428 + 12 >> 2];
        HEAP32[$54 >> 2] = HEAP32[$1417 >> 2];
        $1430 = HEAP32[$this >> 2] | 0;
        $1432 = HEAP32[$1430 + 4 >> 2] | 0;
        $1433 = $1432 + 4 | 0;
        $1435 = HEAP32[$1432 >> 2] | 0;
        HEAP32[$1435 + 4 >> 2] = HEAP32[$1433 >> 2];
        HEAP32[HEAP32[$1433 >> 2] >> 2] = $1435;
        $1439 = $1430 + 8 | 0;
        HEAP32[$1439 >> 2] = (HEAP32[$1439 >> 2] | 0) + -1;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1432 + 24 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1432 + 12 | 0);
        __ZdlPv($1432);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($133);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($132);
        $1453 = 2;
       } else $1453 = 0; while (0);
       __THREW__ = 0;
       $1444 = invoke_iiii(32, $this | 0, 15, $110 | 0) | 0;
       $1445 = __THREW__;
       __THREW__ = 0;
       if ($1445 & 1) {
        label = 58;
        break L53;
       }
       __THREW__ = 0;
       $1447 = invoke_ii(67, 20) | 0;
       $1448 = __THREW__;
       __THREW__ = 0;
       if ($1448 & 1) {
        label = 58;
        break L53;
       }
       HEAP32[$1447 + 8 >> 2] = $1357;
       HEAP32[$1447 + 12 >> 2] = $1453;
       HEAP32[$1447 + 16 >> 2] = $1444;
       HEAP32[$1447 + 4 >> 2] = $fields;
       $1456 = HEAP32[$fields >> 2] | 0;
       HEAP32[$1447 >> 2] = $1456;
       HEAP32[$1456 + 4 >> 2] = $1447;
       HEAP32[$fields >> 2] = $1447;
       HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 1;
       $$042 = 1;
       $got_comma$2$off0 = 0;
       $last_was_local$2$off0 = 0;
       break L75;
       break;
      }
     default:
      {
       label = 396;
       break L53;
      }
     }
    }
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
   if ($$042) {
    $got_comma$0$off0 = $got_comma$2$off0;
    $last_was_local$0$off0 = $last_was_local$2$off0;
   } else {
    label = 404;
    break;
   }
  }
  L318 : switch (label | 0) {
  case 32:
   {
    $256 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body69$index3Z2D = tempRet0;
    $eh$lpad$body69$indexZ2D = $256;
    label = 34;
    break L51;
    break;
   }
  case 41:
   {
    $273 = ___cxa_find_matching_catch() | 0;
    $274 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
    $eh$lpad$body69$index3Z2D = $274;
    $eh$lpad$body69$indexZ2D = $273;
    label = 34;
    break L51;
    break;
   }
  case 46:
   {
    $302 = ___cxa_find_matching_catch() | 0;
    $303 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($167);
    $eh$lpad$body76$index23Z2D = $303;
    $eh$lpad$body76$indexZ2D = $302;
    label = 59;
    break;
   }
  case 51:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 56:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 58:
   {
    $337 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body76$index23Z2D = tempRet0;
    $eh$lpad$body76$indexZ2D = $337;
    label = 59;
    break;
   }
  case 72:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index32 = tempRet0;
    label = 74;
    break;
   }
  case 73:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index32 = tempRet0;
    label = 74;
    break;
   }
  case 96:
   {
    $457 = ___cxa_find_matching_catch() | 0;
    $458 = tempRet0;
    __ZdlPv($$lcssa);
    $eh$lpad$body88$index37Z2D = $458;
    $eh$lpad$body88$indexZ2D = $457;
    label = 101;
    break;
   }
  case 99:
   {
    $481 = ___cxa_find_matching_catch() | 0;
    $482 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($13, HEAP32[$153 >> 2] | 0);
    $$01 = $481;
    $$04 = $482;
    label = 102;
    break;
   }
  case 100:
   {
    $484 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body88$index37Z2D = tempRet0;
    $eh$lpad$body88$indexZ2D = $484;
    label = 101;
    break;
   }
  case 108:
   {
    $530 = ___cxa_find_matching_catch() | 0;
    $531 = tempRet0;
    if ($$lcssa927) {
     $533 = HEAP32[$144 >> 2] | 0;
     $534 = $$lcssa925 + 4 | 0;
     $536 = HEAP32[$533 >> 2] | 0;
     HEAP32[$536 + 4 >> 2] = HEAP32[$534 >> 2];
     HEAP32[HEAP32[$534 >> 2] >> 2] = $536;
     HEAP32[$145 >> 2] = 0;
     if (($533 | 0) != ($15 | 0)) {
      $__f$01$i$i$i = $533;
      do {
       $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
       $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i$i$looptemp);
      } while (($__f$01$i$i$i | 0) != ($15 | 0));
     }
    }
    $$110 = $531;
    $$12 = $530;
    label = 128;
    break;
   }
  case 116:
   {
    $560 = ___cxa_find_matching_catch() | 0;
    $561 = tempRet0;
    __ZdlPv($$lcssa932);
    $eh$lpad$body97$index42Z2D = $561;
    $eh$lpad$body97$indexZ2D = $560;
    label = 125;
    break;
   }
  case 124:
   {
    $591 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body97$index42Z2D = tempRet0;
    $eh$lpad$body97$indexZ2D = $591;
    label = 125;
    break;
   }
  case 133:
   {
    $623 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $16 | 0, 51100, 54);
    $624 = __THREW__;
    __THREW__ = 0;
    L461 : do if ($624 & 1) {
     $635 = ___cxa_find_matching_catch() | 0;
     $$312333 = tempRet0;
     $$3334 = $635;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $623 | 0, $67 | 0);
     $626 = __THREW__;
     __THREW__ = 0;
     do if ($626 & 1) $$043 = 1; else {
      $628 = $623 + 12 | 0;
      HEAP32[$628 >> 2] = HEAP32[$68 >> 2];
      HEAP32[$628 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$628 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$628 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $623 + 28 | 0, $16 | 0);
      $630 = __THREW__;
      __THREW__ = 0;
      if ($630 & 1) {
       $632 = ___cxa_find_matching_catch() | 0;
       $633 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($623);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
       $$312333 = $633;
       $$3334 = $632;
       break L461;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $623 | 0, 8, 172);
       __THREW__ = 0;
       $$043 = 0;
       break;
      }
     } while (0);
     $637 = ___cxa_find_matching_catch() | 0;
     $638 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     if ($$043) {
      $$312333 = $638;
      $$3334 = $637;
     } else {
      $$20 = $637;
      $$2029 = $638;
      break L318;
     }
    } while (0);
    ___cxa_free_exception($623 | 0);
    $$20 = $$3334;
    $$2029 = $$312333;
    break;
   }
  case 142:
   {
    $639 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $17 | 0, 51155, 52);
    $640 = __THREW__;
    __THREW__ = 0;
    L447 : do if ($640 & 1) {
     $651 = ___cxa_find_matching_catch() | 0;
     $$413337 = tempRet0;
     $$4338 = $651;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $639 | 0, $67 | 0);
     $642 = __THREW__;
     __THREW__ = 0;
     do if ($642 & 1) $$045 = 1; else {
      $644 = $639 + 12 | 0;
      HEAP32[$644 >> 2] = HEAP32[$68 >> 2];
      HEAP32[$644 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$644 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$644 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $639 + 28 | 0, $17 | 0);
      $646 = __THREW__;
      __THREW__ = 0;
      if ($646 & 1) {
       $648 = ___cxa_find_matching_catch() | 0;
       $649 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($639);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
       $$413337 = $649;
       $$4338 = $648;
       break L447;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $639 | 0, 8, 172);
       __THREW__ = 0;
       $$045 = 0;
       break;
      }
     } while (0);
     $653 = ___cxa_find_matching_catch() | 0;
     $654 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     if ($$045) {
      $$413337 = $654;
      $$4338 = $653;
     } else {
      $$20 = $653;
      $$2029 = $654;
      break L318;
     }
    } while (0);
    ___cxa_free_exception($639 | 0);
    $$20 = $$4338;
    $$2029 = $$413337;
    break;
   }
  case 170:
   {
    $729 = ___cxa_find_matching_catch() | 0;
    $730 = tempRet0;
    __ZdlPv($$lcssa929);
    $eh$lpad$body142$index47Z2D = $730;
    $eh$lpad$body142$indexZ2D = $729;
    label = 174;
    break;
   }
  case 172:
   {
    $732 = ___cxa_find_matching_catch() | 0;
    $733 = tempRet0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($19, HEAP32[$165 >> 2] | 0);
    $$5 = $732;
    $$514 = $733;
    label = 175;
    break;
   }
  case 173:
   {
    $735 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body142$index47Z2D = tempRet0;
    $eh$lpad$body142$indexZ2D = $735;
    label = 174;
    break;
   }
  case 177:
   {
    $739 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $20 | 0, 51208, 48);
    $740 = __THREW__;
    __THREW__ = 0;
    L421 : do if ($740 & 1) {
     $751 = ___cxa_find_matching_catch() | 0;
     $$615341 = tempRet0;
     $$6342 = $751;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $739 | 0, $67 | 0);
     $742 = __THREW__;
     __THREW__ = 0;
     do if ($742 & 1) $$040 = 1; else {
      $744 = $739 + 12 | 0;
      HEAP32[$744 >> 2] = HEAP32[$68 >> 2];
      HEAP32[$744 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$744 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$744 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $739 + 28 | 0, $20 | 0);
      $746 = __THREW__;
      __THREW__ = 0;
      if ($746 & 1) {
       $748 = ___cxa_find_matching_catch() | 0;
       $749 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($739);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
       $$615341 = $749;
       $$6342 = $748;
       break L421;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $739 | 0, 8, 172);
       __THREW__ = 0;
       $$040 = 0;
       break;
      }
     } while (0);
     $753 = ___cxa_find_matching_catch() | 0;
     $754 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
     if ($$040) {
      $$615341 = $754;
      $$6342 = $753;
     } else {
      $$20 = $753;
      $$2029 = $754;
      break L318;
     }
    } while (0);
    ___cxa_free_exception($739 | 0);
    $$20 = $$6342;
    $$2029 = $$615341;
    break;
   }
  case 186:
   {
    $755 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $21 | 0, 51257, 28);
    $756 = __THREW__;
    __THREW__ = 0;
    L409 : do if ($756 & 1) {
     $767 = ___cxa_find_matching_catch() | 0;
     $$716345 = tempRet0;
     $$7346 = $767;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $755 | 0, $67 | 0);
     $758 = __THREW__;
     __THREW__ = 0;
     do if ($758 & 1) $$038 = 1; else {
      $760 = $755 + 12 | 0;
      HEAP32[$760 >> 2] = HEAP32[$68 >> 2];
      HEAP32[$760 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$760 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$760 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $755 + 28 | 0, $21 | 0);
      $762 = __THREW__;
      __THREW__ = 0;
      if ($762 & 1) {
       $764 = ___cxa_find_matching_catch() | 0;
       $765 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($755);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
       $$716345 = $765;
       $$7346 = $764;
       break L409;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $755 | 0, 8, 172);
       __THREW__ = 0;
       $$038 = 0;
       break;
      }
     } while (0);
     $769 = ___cxa_find_matching_catch() | 0;
     $770 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
     if ($$038) {
      $$716345 = $770;
      $$7346 = $769;
     } else {
      $$20 = $769;
      $$2029 = $770;
      break L318;
     }
    } while (0);
    ___cxa_free_exception($755 | 0);
    $$20 = $$7346;
    $$2029 = $$716345;
    break;
   }
  case 201:
   {
    $787 = ___cxa_find_matching_catch() | 0;
    $788 = tempRet0;
    __ZdlPv($$lcssa930);
    $eh$lpad$body161$index52Z2D = $788;
    $eh$lpad$body161$indexZ2D = $787;
    label = 214;
    break;
   }
  case 211:
   {
    $845 = ___cxa_find_matching_catch() | 0;
    $846 = tempRet0;
    __ZdlPv($$lcssa931);
    $eh$lpad$body168$index57Z2D = $846;
    $eh$lpad$body168$indexZ2D = $845;
    label = 217;
    break;
   }
  case 213:
   {
    $847 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body161$index52Z2D = tempRet0;
    $eh$lpad$body161$indexZ2D = $847;
    label = 214;
    break;
   }
  case 215:
   {
    $$8 = ___cxa_find_matching_catch() | 0;
    $$817 = tempRet0;
    label = 218;
    break;
   }
  case 216:
   {
    $851 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body168$index57Z2D = tempRet0;
    $eh$lpad$body168$indexZ2D = $851;
    label = 217;
    break;
   }
  case 221:
   {
    $854 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $24 | 0, 51286, 35);
    $855 = __THREW__;
    __THREW__ = 0;
    L342 : do if ($855 & 1) {
     $866 = ___cxa_find_matching_catch() | 0;
     $$1019349 = tempRet0;
     $$10350 = $866;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $854 | 0, $67 | 0);
     $857 = __THREW__;
     __THREW__ = 0;
     do if ($857 & 1) $$036 = 1; else {
      $859 = $854 + 12 | 0;
      HEAP32[$859 >> 2] = HEAP32[$68 >> 2];
      HEAP32[$859 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$859 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      HEAP32[$859 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $854 + 28 | 0, $24 | 0);
      $861 = __THREW__;
      __THREW__ = 0;
      if ($861 & 1) {
       $863 = ___cxa_find_matching_catch() | 0;
       $864 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($854);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
       $$1019349 = $864;
       $$10350 = $863;
       break L342;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $854 | 0, 8, 172);
       __THREW__ = 0;
       $$036 = 0;
       break;
      }
     } while (0);
     $868 = ___cxa_find_matching_catch() | 0;
     $869 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
     if ($$036) {
      $$1019349 = $869;
      $$10350 = $868;
     } else {
      $$20 = $868;
      $$2029 = $869;
      break L318;
     }
    } while (0);
    ___cxa_free_exception($854 | 0);
    $$20 = $$10350;
    $$2029 = $$1019349;
    break;
   }
  case 232:
   {
    $879 = ___cxa_find_matching_catch() | 0;
    $880 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($69);
    $eh$lpad$body177$index63Z2D = $880;
    $eh$lpad$body177$indexZ2D = $879;
    label = 241;
    break;
   }
  case 236:
   {
    $893 = ___cxa_find_matching_catch() | 0;
    $894 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($72);
    $eh$lpad$body177$index63Z2D = $894;
    $eh$lpad$body177$indexZ2D = $893;
    label = 241;
    break;
   }
  case 240:
   {
    $917 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body177$index63Z2D = tempRet0;
    $eh$lpad$body177$indexZ2D = $917;
    label = 241;
    break;
   }
  case 242:
   {
    $919 = ___cxa_find_matching_catch() | 0;
    $920 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $$20 = $919;
    $$2029 = $920;
    break;
   }
  case 245:
   {
    $930 = ___cxa_find_matching_catch() | 0;
    $931 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
    $1503 = $$lcssa934;
    $eh$lpad$body192$index75Z2D = $931;
    $eh$lpad$body192$indexZ2D = $930;
    label = 263;
    break;
   }
  case 249:
   {
    $944 = ___cxa_find_matching_catch() | 0;
    $945 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($80);
    $1504 = $$lcssa936;
    $eh$lpad$body196$index86Z2D = $945;
    $eh$lpad$body196$indexZ2D = $944;
    label = 265;
    break;
   }
  case 253:
   {
    $959 = ___cxa_find_matching_catch() | 0;
    $960 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($83);
    $1503 = $$lcssa937;
    $eh$lpad$body192$index75Z2D = $960;
    $eh$lpad$body192$indexZ2D = $959;
    label = 263;
    break;
   }
  case 258:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 261:
   {
    $980 = ___cxa_find_matching_catch() | 0;
    $981 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
    $1503 = $$lcssa939;
    $eh$lpad$body192$index75Z2D = $981;
    $eh$lpad$body192$indexZ2D = $980;
    label = 263;
    break;
   }
  case 262:
   {
    $982 = ___cxa_find_matching_catch() | 0;
    $1503 = $$lcssa933;
    $eh$lpad$body192$index75Z2D = tempRet0;
    $eh$lpad$body192$indexZ2D = $982;
    label = 263;
    break;
   }
  case 264:
   {
    $984 = ___cxa_find_matching_catch() | 0;
    $1504 = $$lcssa935;
    $eh$lpad$body196$index86Z2D = tempRet0;
    $eh$lpad$body196$indexZ2D = $984;
    label = 265;
    break;
   }
  case 267:
   {
    $1002 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$33 >> 2] = 0;
    HEAP32[$33 + 4 >> 2] = 0;
    HEAP32[$33 + 8 >> 2] = 0;
    $1003 = HEAP8[$66 >> 0] | 0;
    $1009 = ($1003 & 1) == 0 ? ($1003 & 255) >>> 1 : HEAP32[$176 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(13, $33 | 0, 51339, 40, $1009 + 40 | 0);
    $1011 = __THREW__;
    __THREW__ = 0;
    L433 : do if ($1011 & 1) label = 273; else {
     __THREW__ = 0;
     invoke_iiii(35, $33 | 0, ((HEAP8[$66 >> 0] & 1) == 0 ? $170 : HEAP32[$175 >> 2] | 0) | 0, $1009 | 0) | 0;
     $1018 = __THREW__;
     __THREW__ = 0;
     if ($1018 & 1) label = 273; else {
      __THREW__ = 0;
      invoke_vii(40, $1002 | 0, $67 | 0);
      $1020 = __THREW__;
      __THREW__ = 0;
      do if ($1020 & 1) $$033 = 1; else {
       $1022 = $1002 + 12 | 0;
       HEAP32[$1022 >> 2] = HEAP32[$68 >> 2];
       HEAP32[$1022 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
       HEAP32[$1022 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
       HEAP32[$1022 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $1002 + 28 | 0, $33 | 0);
       $1024 = __THREW__;
       __THREW__ = 0;
       if ($1024 & 1) {
        $1026 = ___cxa_find_matching_catch() | 0;
        $1027 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1002);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
        $$1120359 = $1027;
        $$11360 = $1026;
        break L433;
       } else {
        __THREW__ = 0;
        invoke_viii(4, $1002 | 0, 8, 172);
        __THREW__ = 0;
        $$033 = 0;
        break;
       }
      } while (0);
      $1031 = ___cxa_find_matching_catch() | 0;
      $1032 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
      if ($$033) {
       $$1120359 = $1032;
       $$11360 = $1031;
      } else {
       $$17 = $1031;
       $$1726 = $1032;
       $1350 = $$lcssa940;
       label = 372;
       break L318;
      }
     }
    } while (0);
    if ((label | 0) == 273) {
     $1029 = ___cxa_find_matching_catch() | 0;
     $1030 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($33);
     $$1120359 = $1030;
     $$11360 = $1029;
    }
    ___cxa_free_exception($1002 | 0);
    $$17 = $$11360;
    $$1726 = $$1120359;
    $1350 = $$lcssa940;
    label = 372;
    break;
   }
  case 280:
   {
    $1044 = ___cxa_find_matching_catch() | 0;
    $1045 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($96);
    $1503 = $$lcssa941;
    $eh$lpad$body192$index75Z2D = $1045;
    $eh$lpad$body192$indexZ2D = $1044;
    label = 263;
    break;
   }
  case 284:
   {
    $1058 = ___cxa_find_matching_catch() | 0;
    $1059 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
    $1503 = $$lcssa942;
    $eh$lpad$body192$index75Z2D = $1059;
    $eh$lpad$body192$indexZ2D = $1058;
    label = 263;
    break;
   }
  case 287:
   {
    $1085 = ___cxa_find_matching_catch() | 0;
    $1086 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($102);
    $1503 = $$lcssa943;
    $eh$lpad$body192$index75Z2D = $1086;
    $eh$lpad$body192$indexZ2D = $1085;
    label = 263;
    break;
   }
  case 291:
   {
    $1099 = ___cxa_find_matching_catch() | 0;
    $1100 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($105);
    $1503 = $$lcssa944;
    $eh$lpad$body192$index75Z2D = $1100;
    $eh$lpad$body192$indexZ2D = $1099;
    label = 263;
    break;
   }
  case 295:
   {
    $1121 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$39 >> 2] = 0;
    HEAP32[$39 + 4 >> 2] = 0;
    HEAP32[$39 + 8 >> 2] = 0;
    $1122 = HEAP8[$66 >> 0] | 0;
    $1128 = ($1122 & 1) == 0 ? ($1122 & 255) >>> 1 : HEAP32[$176 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(13, $39 | 0, 51380, 17, $1128 + 17 | 0);
    $1130 = __THREW__;
    __THREW__ = 0;
    L386 : do if ($1130 & 1) label = 301; else {
     __THREW__ = 0;
     invoke_iiii(35, $39 | 0, ((HEAP8[$66 >> 0] & 1) == 0 ? $170 : HEAP32[$175 >> 2] | 0) | 0, $1128 | 0) | 0;
     $1137 = __THREW__;
     __THREW__ = 0;
     if ($1137 & 1) label = 301; else {
      __THREW__ = 0;
      invoke_vii(40, $1121 | 0, $67 | 0);
      $1139 = __THREW__;
      __THREW__ = 0;
      do if ($1139 & 1) $$031 = 1; else {
       $1141 = $1121 + 12 | 0;
       HEAP32[$1141 >> 2] = HEAP32[$68 >> 2];
       HEAP32[$1141 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
       HEAP32[$1141 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
       HEAP32[$1141 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $1121 + 28 | 0, $39 | 0);
       $1143 = __THREW__;
       __THREW__ = 0;
       if ($1143 & 1) {
        $1145 = ___cxa_find_matching_catch() | 0;
        $1146 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1121);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
        $$1221363 = $1146;
        $$123364 = $1145;
        break L386;
       } else {
        __THREW__ = 0;
        invoke_viii(4, $1121 | 0, 8, 172);
        __THREW__ = 0;
        $$031 = 0;
        break;
       }
      } while (0);
      $1150 = ___cxa_find_matching_catch() | 0;
      $1151 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
      if ($$031) {
       $$1221363 = $1151;
       $$123364 = $1150;
      } else {
       $$17 = $1150;
       $$1726 = $1151;
       $1350 = $$lcssa945;
       label = 372;
       break L318;
      }
     }
    } while (0);
    if ((label | 0) == 301) {
     $1148 = ___cxa_find_matching_catch() | 0;
     $1149 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($39);
     $$1221363 = $1149;
     $$123364 = $1148;
    }
    ___cxa_free_exception($1121 | 0);
    $$17 = $$123364;
    $$1726 = $$1221363;
    $1350 = $$lcssa945;
    label = 372;
    break;
   }
  case 317:
   {
    $1191 = ___cxa_find_matching_catch() | 0;
    $1192 = tempRet0;
    $1193 = HEAP32[$43 >> 2] | 0;
    $1195 = $1193;
    if ($1193) {
     $1196 = HEAP32[$112 >> 2] | 0;
     if (($1196 | 0) != ($1193 | 0)) HEAP32[$112 >> 2] = $1196 + (~(($1196 + -4 - $1195 | 0) >>> 2) << 2);
     __ZdlPv($1193);
    }
    $$14 = $1191;
    $$1423 = $1192;
    $1506 = $$lcssa948;
    label = 335;
    break;
   }
  case 327:
   {
    $$13 = ___cxa_find_matching_catch() | 0;
    $$1322 = tempRet0;
    $1505 = $$lcssa946;
    label = 329;
    break;
   }
  case 328:
   {
    $1217 = ___cxa_find_matching_catch() | 0;
    $1218 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
    $$13 = $1217;
    $$1322 = $1218;
    $1505 = $$lcssa947;
    label = 329;
    break;
   }
  case 331:
   {
    $1219 = ___cxa_find_matching_catch() | 0;
    $1220 = tempRet0;
    $1221 = HEAP32[$43 >> 2] | 0;
    $1223 = $1221;
    if (!$1221) {
     $$14 = $1219;
     $$1423 = $1220;
     $1506 = $$lcssa949;
     label = 335;
    } else {
     $1224 = HEAP32[$112 >> 2] | 0;
     if (($1224 | 0) != ($1221 | 0)) HEAP32[$112 >> 2] = $1224 + (~(($1224 + -4 - $1223 | 0) >>> 2) << 2);
     __ZdlPv($1221);
     $$14 = $1219;
     $$1423 = $1220;
     $1506 = $$lcssa949;
     label = 335;
    }
    break;
   }
  case 346:
   {
    $1264 = ___cxa_find_matching_catch() | 0;
    $1265 = tempRet0;
    __ZdlPv($$lcssa957);
    $1507 = $$lcssa953;
    $eh$lpad$body277$index92Z2D = $1265;
    $eh$lpad$body277$indexZ2D = $1264;
    label = 366;
    break;
   }
  case 352:
   {
    $1290 = ___cxa_find_matching_catch() | 0;
    $1291 = tempRet0;
    __ZdlPv($$lcssa961);
    $1507 = $$lcssa954;
    $eh$lpad$body277$index92Z2D = $1291;
    $eh$lpad$body277$indexZ2D = $1290;
    label = 366;
    break;
   }
  case 360:
   {
    $1324 = ___cxa_find_matching_catch() | 0;
    $1325 = tempRet0;
    __ZdlPv($$lcssa964);
    $1508 = $$lcssa956;
    $eh$lpad$body287$index98Z2D = $1325;
    $eh$lpad$body287$indexZ2D = $1324;
    label = 368;
    break;
   }
  case 362:
   {
    $$15 = ___cxa_find_matching_catch() | 0;
    $$1524 = tempRet0;
    $1509 = $$lcssa950;
    label = 364;
    break;
   }
  case 363:
   {
    $1328 = ___cxa_find_matching_catch() | 0;
    $1329 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45);
    $$15 = $1328;
    $$1524 = $1329;
    $1509 = $$lcssa951;
    label = 364;
    break;
   }
  case 365:
   {
    $1330 = ___cxa_find_matching_catch() | 0;
    $1507 = $$lcssa952;
    $eh$lpad$body277$index92Z2D = tempRet0;
    $eh$lpad$body277$indexZ2D = $1330;
    label = 366;
    break;
   }
  case 367:
   {
    $1332 = ___cxa_find_matching_catch() | 0;
    $1508 = $$lcssa955;
    $eh$lpad$body287$index98Z2D = tempRet0;
    $eh$lpad$body287$indexZ2D = $1332;
    label = 368;
    break;
   }
  case 380:
   {
    $1371 = ___cxa_find_matching_catch() | 0;
    $1372 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($123);
    $eh$lpad$body76$index23Z2D = $1372;
    $eh$lpad$body76$indexZ2D = $1371;
    label = 59;
    break;
   }
  case 384:
   {
    $1385 = ___cxa_find_matching_catch() | 0;
    $1386 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($126);
    $eh$lpad$body76$index23Z2D = $1386;
    $eh$lpad$body76$indexZ2D = $1385;
    label = 59;
    break;
   }
  case 387:
   {
    $1412 = ___cxa_find_matching_catch() | 0;
    $1413 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($129);
    $eh$lpad$body76$index23Z2D = $1413;
    $eh$lpad$body76$indexZ2D = $1412;
    label = 59;
    break;
   }
  case 391:
   {
    $1426 = ___cxa_find_matching_catch() | 0;
    $1427 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($132);
    $eh$lpad$body76$index23Z2D = $1427;
    $eh$lpad$body76$indexZ2D = $1426;
    label = 59;
    break;
   }
  case 396:
   {
    $1460 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $55 | 0, 51398, 24);
    $1461 = __THREW__;
    __THREW__ = 0;
    if ($1461 & 1) {
     $1466 = ___cxa_find_matching_catch() | 0;
     $$1928367 = tempRet0;
     $$19368 = $1466;
    } else {
     __THREW__ = 0;
     invoke_viii(7, $1460 | 0, $next | 0, $55 | 0);
     $1463 = __THREW__;
     __THREW__ = 0;
     if ($1463 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $1460 | 0, 8, 172);
      __THREW__ = 0;
      $$0 = 0;
     }
     $1468 = ___cxa_find_matching_catch() | 0;
     $1469 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($55);
     if ($$0) {
      $$1928367 = $1469;
      $$19368 = $1468;
     } else {
      $$20 = $1468;
      $$2029 = $1469;
      break;
     }
    }
    ___cxa_free_exception($1460 | 0);
    $$20 = $$19368;
    $$2029 = $$1928367;
    break;
   }
  case 404:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$63 >> 2] | 0);
    if (!(HEAP32[$60 >> 2] | 0)) {
     $1485 = HEAP32[$58 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1485);
     STACKTOP = sp;
     return;
    }
    $1473 = HEAP32[$59 >> 2] | 0;
    $1475 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
    $1477 = HEAP32[$1473 >> 2] | 0;
    HEAP32[$1477 + 4 >> 2] = HEAP32[$1475 >> 2];
    HEAP32[HEAP32[$1475 >> 2] >> 2] = $1477;
    HEAP32[$60 >> 2] = 0;
    if (($1473 | 0) == ($fields | 0)) {
     $1485 = HEAP32[$58 >> 2] | 0;
     __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1485);
     STACKTOP = sp;
     return;
    } else $__f$01$i$i326 = $1473;
    do {
     $__f$01$i$i326$looptemp = $__f$01$i$i326;
     $__f$01$i$i326 = HEAP32[$__f$01$i$i326 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i326$looptemp);
    } while (($__f$01$i$i326 | 0) != ($fields | 0));
    $1485 = HEAP32[$58 >> 2] | 0;
    __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1485);
    STACKTOP = sp;
    return;
   }
  }
  switch (label | 0) {
  case 59:
   {
    $$20 = $eh$lpad$body76$indexZ2D;
    $$2029 = $eh$lpad$body76$index23Z2D;
    break;
   }
  case 74:
   {
    $$2 = $lpad$phi$index;
    $$211 = $lpad$phi$index32;
    label = 129;
    break;
   }
  case 101:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($13, HEAP32[$153 >> 2] | 0);
    $$01 = $eh$lpad$body88$indexZ2D;
    $$04 = $eh$lpad$body88$index37Z2D;
    label = 102;
    break;
   }
  case 125:
   {
    if (!(HEAP32[$145 >> 2] | 0)) {
     $$110 = $eh$lpad$body97$index42Z2D;
     $$12 = $eh$lpad$body97$indexZ2D;
     label = 128;
    } else {
     $595 = HEAP32[$144 >> 2] | 0;
     $597 = (HEAP32[$15 >> 2] | 0) + 4 | 0;
     $599 = HEAP32[$595 >> 2] | 0;
     HEAP32[$599 + 4 >> 2] = HEAP32[$597 >> 2];
     HEAP32[HEAP32[$597 >> 2] >> 2] = $599;
     HEAP32[$145 >> 2] = 0;
     if (($595 | 0) == ($15 | 0)) {
      $$110 = $eh$lpad$body97$index42Z2D;
      $$12 = $eh$lpad$body97$indexZ2D;
      label = 128;
     } else {
      $__f$01$i$i102 = $595;
      do {
       $__f$01$i$i102$looptemp = $__f$01$i$i102;
       $__f$01$i$i102 = HEAP32[$__f$01$i$i102 + 4 >> 2] | 0;
       __ZdlPv($__f$01$i$i102$looptemp);
      } while (($__f$01$i$i102 | 0) != ($15 | 0));
      $$110 = $eh$lpad$body97$index42Z2D;
      $$12 = $eh$lpad$body97$indexZ2D;
      label = 128;
     }
    }
    break;
   }
  case 174:
   {
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($19, HEAP32[$165 >> 2] | 0);
    $$5 = $eh$lpad$body142$indexZ2D;
    $$514 = $eh$lpad$body142$index47Z2D;
    label = 175;
    break;
   }
  case 214:
   {
    $$9 = $eh$lpad$body161$indexZ2D;
    $$918 = $eh$lpad$body161$index52Z2D;
    label = 219;
    break;
   }
  case 217:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
    $$8 = $eh$lpad$body168$indexZ2D;
    $$817 = $eh$lpad$body168$index57Z2D;
    label = 218;
    break;
   }
  case 241:
   {
    $$20 = $eh$lpad$body177$indexZ2D;
    $$2029 = $eh$lpad$body177$index63Z2D;
    break;
   }
  case 263:
   {
    $$17 = $eh$lpad$body192$indexZ2D;
    $$1726 = $eh$lpad$body192$index75Z2D;
    $1350 = $1503;
    label = 372;
    break;
   }
  case 265:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($78);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($77);
    $$17 = $eh$lpad$body196$indexZ2D;
    $$1726 = $eh$lpad$body196$index86Z2D;
    $1350 = $1504;
    label = 372;
    break;
   }
  case 329:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
    $$17 = $$13;
    $$1726 = $$1322;
    $1350 = $1505;
    label = 372;
    break;
   }
  case 335:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
    $$17 = $$14;
    $$1726 = $$1423;
    $1350 = $1506;
    label = 372;
    break;
   }
  case 364:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    $$17 = $$15;
    $$1726 = $$1524;
    $1350 = $1509;
    label = 372;
    break;
   }
  case 366:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($47);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
    $$17 = $eh$lpad$body277$indexZ2D;
    $$1726 = $eh$lpad$body277$index92Z2D;
    $1350 = $1507;
    label = 372;
    break;
   }
  case 368:
   {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($48);
    $$17 = $eh$lpad$body287$indexZ2D;
    $$1726 = $eh$lpad$body287$index98Z2D;
    $1350 = $1508;
    label = 372;
    break;
   }
  }
  if ((label | 0) == 102) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
   $$2 = $$01;
   $$211 = $$04;
   label = 129;
  } else if ((label | 0) == 128) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   $$2 = $$12;
   $$211 = $$110;
   label = 129;
  } else if ((label | 0) == 175) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
   $$20 = $$5;
   $$2029 = $$514;
  } else if ((label | 0) == 218) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result + 16 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($146);
   $$9 = $$8;
   $$918 = $$817;
   label = 219;
  } else if ((label | 0) == 372) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($plus_loc);
   if (!$1350) {
    $$20 = $$17;
    $$2029 = $$1726;
   } else {
    __ZdlPv($1350);
    $$20 = $$17;
    $$2029 = $$1726;
   }
  }
  if ((label | 0) == 129) if (!(HEAP32[$136 >> 2] | 0)) {
   $$20 = $$2;
   $$2029 = $$211;
  } else {
   $609 = HEAP32[$135 >> 2] | 0;
   $611 = (HEAP32[$r >> 2] | 0) + 4 | 0;
   $613 = HEAP32[$609 >> 2] | 0;
   HEAP32[$613 + 4 >> 2] = HEAP32[$611 >> 2];
   HEAP32[HEAP32[$611 >> 2] >> 2] = $613;
   HEAP32[$136 >> 2] = 0;
   if (($609 | 0) == ($r | 0)) {
    $$20 = $$2;
    $$2029 = $$211;
   } else {
    $__f$01$i$i105 = $609;
    do {
     $__f$01$i$i105$looptemp = $__f$01$i$i105;
     $__f$01$i$i105 = HEAP32[$__f$01$i$i105 + 4 >> 2] | 0;
     __ZdlPv($__f$01$i$i105$looptemp);
    } while (($__f$01$i$i105 | 0) != ($r | 0));
    $$20 = $$2;
    $$2029 = $$211;
   }
  } else if ((label | 0) == 219) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($161);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($155);
   $$20 = $$9;
   $$2029 = $$918;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($66);
  $$21 = $$20;
  $$2130 = $$2029;
 } while (0);
 if ((label | 0) == 34) {
  $$21 = $eh$lpad$body69$indexZ2D;
  $$2130 = $eh$lpad$body69$index3Z2D;
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($let_binds, HEAP32[$63 >> 2] | 0);
 if (!(HEAP32[$60 >> 2] | 0)) {
  $1501 = HEAP32[$58 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1501);
  ___resumeException($$21 | 0);
 }
 $1489 = HEAP32[$59 >> 2] | 0;
 $1491 = (HEAP32[$fields >> 2] | 0) + 4 | 0;
 $1493 = HEAP32[$1489 >> 2] | 0;
 HEAP32[$1493 + 4 >> 2] = HEAP32[$1491 >> 2];
 HEAP32[HEAP32[$1491 >> 2] >> 2] = $1493;
 HEAP32[$60 >> 2] = 0;
 if (($1489 | 0) == ($fields | 0)) {
  $1501 = HEAP32[$58 >> 2] | 0;
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1501);
  ___resumeException($$21 | 0);
 } else $__f$01$i$i329 = $1489;
 do {
  $__f$01$i$i329$looptemp = $__f$01$i$i329;
  $__f$01$i$i329 = HEAP32[$__f$01$i$i329 + 4 >> 2] | 0;
  __ZdlPv($__f$01$i$i329$looptemp);
 } while (($__f$01$i$i329 | 0) != ($fields | 0));
 $1501 = HEAP32[$58 >> 2] | 0;
 __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($literal_fields, $1501);
 ___resumeException($$21 | 0);
}
function __GLOBAL__sub_I_parser_cpp() {
 var $$0$i$i = 0, $$0$i$i45 = 0, $$0$i7$i10$i$i = 0, $$0$i7$i106$i$i = 0, $$0$i7$i122$i$i = 0, $$0$i7$i138$i$i = 0, $$0$i7$i154$i$i = 0, $$0$i7$i170$i$i = 0, $$0$i7$i186$i$i = 0, $$0$i7$i202$i$i = 0, $$0$i7$i218$i$i = 0, $$0$i7$i234$i$i = 0, $$0$i7$i250$i$i = 0, $$0$i7$i26$i$i = 0, $$0$i7$i42$i$i = 0, $$0$i7$i58$i$i = 0, $$0$i7$i74$i$i = 0, $$0$i7$i90$i$i = 0, $$01$i$i = 0, $$01$i$i44 = 0, $$lcssa = 0, $$lcssa366 = 0, $$lcssa369 = 0, $$lcssa370 = 0, $$lcssa373 = 0, $$lcssa374 = 0, $$lcssa377 = 0, $$lcssa378 = 0, $$lcssa381 = 0, $$lcssa382 = 0, $$lcssa385 = 0, $$lcssa386 = 0, $$lcssa389 = 0, $$lcssa390 = 0, $$lcssa393 = 0, $$lcssa394 = 0, $$lcssa397 = 0, $$lcssa398 = 0, $$lcssa401 = 0, $$lcssa402 = 0, $$lcssa405 = 0, $$lcssa406 = 0, $$lcssa409 = 0, $$lcssa410 = 0, $$lcssa413 = 0, $$lcssa414 = 0, $$lcssa417 = 0, $$lcssa418 = 0, $$lcssa421 = 0, $$lcssa422 = 0, $$lcssa426 = 0, $$lcssa427 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1001 = 0, $1005 = 0, $1008 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $107 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $126 = 0, $127 = 0, $13 = 0, $132 = 0, $133 = 0, $139 = 0, $14 = 0, $141 = 0, $145 = 0, $15 = 0, $150 = 0, $152 = 0, $154 = 0, $158 = 0, $159 = 0, $16 = 0, $164 = 0, $165 = 0, $17 = 0, $171 = 0, $173 = 0, $177 = 0, $18 = 0, $182 = 0, $184 = 0, $186 = 0, $190 = 0, $191 = 0, $196 = 0, $197 = 0, $2 = 0, $203 = 0, $205 = 0, $209 = 0, $214 = 0, $216 = 0, $218 = 0, $222 = 0, $223 = 0, $228 = 0, $229 = 0, $235 = 0, $237 = 0, $241 = 0, $246 = 0, $248 = 0, $250 = 0, $254 = 0, $255 = 0, $260 = 0, $261 = 0, $267 = 0, $269 = 0, $27 = 0, $273 = 0, $278 = 0, $280 = 0, $282 = 0, $286 = 0, $287 = 0, $29 = 0, $292 = 0, $293 = 0, $299 = 0, $3 = 0, $301 = 0, $305 = 0, $310 = 0, $312 = 0, $314 = 0, $318 = 0, $319 = 0, $32 = 0, $324 = 0, $325 = 0, $33 = 0, $331 = 0, $333 = 0, $337 = 0, $342 = 0, $344 = 0, $346 = 0, $350 = 0, $351 = 0, $356 = 0, $357 = 0, $36 = 0, $363 = 0, $365 = 0, $369 = 0, $37 = 0, $374 = 0, $376 = 0, $378 = 0, $382 = 0, $383 = 0, $388 = 0, $389 = 0, $395 = 0, $397 = 0, $4 = 0, $401 = 0, $406 = 0, $408 = 0, $410 = 0, $414 = 0, $415 = 0, $420 = 0, $421 = 0, $427 = 0, $429 = 0, $433 = 0, $438 = 0, $440 = 0, $442 = 0, $446 = 0, $447 = 0, $45 = 0, $452 = 0, $453 = 0, $459 = 0, $461 = 0, $465 = 0, $470 = 0, $472 = 0, $474 = 0, $478 = 0, $479 = 0, $484 = 0, $485 = 0, $49 = 0, $491 = 0, $493 = 0, $497 = 0, $5 = 0, $502 = 0, $504 = 0, $506 = 0, $510 = 0, $511 = 0, $516 = 0, $517 = 0, $523 = 0, $525 = 0, $529 = 0, $532 = 0, $533 = 0, $534 = 0, $536 = 0, $538 = 0, $539 = 0, $54 = 0, $541 = 0, $542 = 0, $544 = 0, $546 = 0, $550 = 0, $554 = 0, $558 = 0, $56 = 0, $560 = 0, $561 = 0, $563 = 0, $564 = 0, $566 = 0, $568 = 0, $572 = 0, $576 = 0, $58 = 0, $580 = 0, $582 = 0, $583 = 0, $585 = 0, $586 = 0, $588 = 0, $590 = 0, $594 = 0, $598 = 0, $6 = 0, $602 = 0, $604 = 0, $605 = 0, $607 = 0, $608 = 0, $610 = 0, $612 = 0, $616 = 0, $62 = 0, $620 = 0, $623 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $635 = 0, $637 = 0, $638 = 0, $640 = 0, $641 = 0, $643 = 0, $645 = 0, $649 = 0, $653 = 0, $657 = 0, $659 = 0, $660 = 0, $662 = 0, $663 = 0, $665 = 0, $667 = 0, $671 = 0, $675 = 0, $679 = 0, $68 = 0, $681 = 0, $682 = 0, $684 = 0, $685 = 0, $687 = 0, $689 = 0, $69 = 0, $693 = 0, $697 = 0, $7 = 0, $701 = 0, $703 = 0, $704 = 0, $706 = 0, $707 = 0, $709 = 0, $711 = 0, $715 = 0, $719 = 0, $723 = 0, $725 = 0, $726 = 0, $728 = 0, $729 = 0, $731 = 0, $733 = 0, $737 = 0, $741 = 0, $745 = 0, $747 = 0, $748 = 0, $75 = 0, $750 = 0, $751 = 0, $753 = 0, $755 = 0, $759 = 0, $763 = 0, $767 = 0, $769 = 0, $77 = 0, $770 = 0, $772 = 0, $773 = 0, $775 = 0, $777 = 0, $781 = 0, $785 = 0, $789 = 0, $791 = 0, $792 = 0, $794 = 0, $795 = 0, $797 = 0, $799 = 0, $8 = 0, $803 = 0, $807 = 0, $81 = 0, $811 = 0, $813 = 0, $814 = 0, $816 = 0, $817 = 0, $819 = 0, $821 = 0, $825 = 0, $829 = 0, $833 = 0, $835 = 0, $836 = 0, $838 = 0, $839 = 0, $841 = 0, $843 = 0, $847 = 0, $851 = 0, $855 = 0, $857 = 0, $858 = 0, $86 = 0, $860 = 0, $861 = 0, $863 = 0, $865 = 0, $869 = 0, $873 = 0, $877 = 0, $879 = 0, $88 = 0, $880 = 0, $882 = 0, $883 = 0, $885 = 0, $887 = 0, $891 = 0, $895 = 0, $899 = 0, $9 = 0, $90 = 0, $901 = 0, $902 = 0, $904 = 0, $905 = 0, $907 = 0, $909 = 0, $913 = 0, $917 = 0, $921 = 0, $923 = 0, $924 = 0, $926 = 0, $927 = 0, $929 = 0, $931 = 0, $935 = 0, $939 = 0, $94 = 0, $943 = 0, $945 = 0, $946 = 0, $948 = 0, $949 = 0, $95 = 0, $951 = 0, $953 = 0, $957 = 0, $961 = 0, $965 = 0, $967 = 0, $968 = 0, $970 = 0, $971 = 0, $973 = 0, $975 = 0, $979 = 0, $983 = 0, $987 = 0, $989 = 0, $990 = 0, $992 = 0, $993 = 0, $995 = 0, $997 = 0, $__nd$0$be$in$i$i100$i$i = 0, $__nd$0$be$in$i$i116$i$i = 0, $__nd$0$be$in$i$i132$i$i = 0, $__nd$0$be$in$i$i148$i$i = 0, $__nd$0$be$in$i$i164$i$i = 0, $__nd$0$be$in$i$i180$i$i = 0, $__nd$0$be$in$i$i196$i$i = 0, $__nd$0$be$in$i$i20$i$i = 0, $__nd$0$be$in$i$i212$i$i = 0, $__nd$0$be$in$i$i228$i$i = 0, $__nd$0$be$in$i$i244$i$i = 0, $__nd$0$be$in$i$i36$i$i = 0, $__nd$0$be$in$i$i4$i$i = 0, $__nd$0$be$in$i$i52$i$i = 0, $__nd$0$be$in$i$i68$i$i = 0, $__nd$0$be$in$i$i84$i$i = 0, $__nd$0$i$i115$i$i = 0, $__nd$0$i$i115$i$i$lcssa = 0, $__nd$0$i$i115$i$i$lcssa395 = 0, $__nd$0$i$i115$i$i$lcssa396 = 0, $__nd$0$i$i131$i$i = 0, $__nd$0$i$i131$i$i$lcssa = 0, $__nd$0$i$i131$i$i$lcssa391 = 0, $__nd$0$i$i131$i$i$lcssa392 = 0, $__nd$0$i$i147$i$i = 0, $__nd$0$i$i147$i$i$lcssa = 0, $__nd$0$i$i147$i$i$lcssa387 = 0, $__nd$0$i$i147$i$i$lcssa388 = 0, $__nd$0$i$i163$i$i = 0, $__nd$0$i$i163$i$i$lcssa = 0, $__nd$0$i$i163$i$i$lcssa383 = 0, $__nd$0$i$i163$i$i$lcssa384 = 0, $__nd$0$i$i179$i$i = 0, $__nd$0$i$i179$i$i$lcssa = 0, $__nd$0$i$i179$i$i$lcssa379 = 0, $__nd$0$i$i179$i$i$lcssa380 = 0, $__nd$0$i$i19$i$i = 0, $__nd$0$i$i19$i$i$lcssa = 0, $__nd$0$i$i19$i$i$lcssa419 = 0, $__nd$0$i$i19$i$i$lcssa420 = 0, $__nd$0$i$i195$i$i = 0, $__nd$0$i$i195$i$i$lcssa = 0, $__nd$0$i$i195$i$i$lcssa375 = 0, $__nd$0$i$i195$i$i$lcssa376 = 0, $__nd$0$i$i211$i$i = 0, $__nd$0$i$i211$i$i$lcssa = 0, $__nd$0$i$i211$i$i$lcssa371 = 0, $__nd$0$i$i211$i$i$lcssa372 = 0, $__nd$0$i$i227$i$i = 0, $__nd$0$i$i227$i$i$lcssa = 0, $__nd$0$i$i227$i$i$lcssa367 = 0, $__nd$0$i$i227$i$i$lcssa368 = 0, $__nd$0$i$i243$i$i = 0, $__nd$0$i$i243$i$i$lcssa = 0, $__nd$0$i$i243$i$i$lcssa364 = 0, $__nd$0$i$i243$i$i$lcssa365 = 0, $__nd$0$i$i3$i$i = 0, $__nd$0$i$i3$i$i$lcssa = 0, $__nd$0$i$i3$i$i$lcssa423 = 0, $__nd$0$i$i3$i$i$lcssa424 = 0, $__nd$0$i$i3$i$i425 = 0, $__nd$0$i$i35$i$i = 0, $__nd$0$i$i35$i$i$lcssa = 0, $__nd$0$i$i35$i$i$lcssa415 = 0, $__nd$0$i$i35$i$i$lcssa416 = 0, $__nd$0$i$i51$i$i = 0, $__nd$0$i$i51$i$i$lcssa = 0, $__nd$0$i$i51$i$i$lcssa411 = 0, $__nd$0$i$i51$i$i$lcssa412 = 0, $__nd$0$i$i67$i$i = 0, $__nd$0$i$i67$i$i$lcssa = 0, $__nd$0$i$i67$i$i$lcssa407 = 0, $__nd$0$i$i67$i$i$lcssa408 = 0, $__nd$0$i$i83$i$i = 0, $__nd$0$i$i83$i$i$lcssa = 0, $__nd$0$i$i83$i$i$lcssa403 = 0, $__nd$0$i$i83$i$i$lcssa404 = 0, $__nd$0$i$i99$i$i = 0, $__nd$0$i$i99$i$i$lcssa = 0, $__nd$0$i$i99$i$i$lcssa399 = 0, $__nd$0$i$i99$i$i$lcssa400 = 0, $__parent$i$i$i7 = 0, $__parent$i107$i$i = 0, $__parent$i11$i$i5 = 0, $__parent$i115$i$i = 0, $__parent$i123$i$i = 0, $__parent$i19$i$i4 = 0, $__parent$i27$i$i = 0, $__parent$i3$i$i6 = 0, $__parent$i35$i$i = 0, $__parent$i43$i$i = 0, $__parent$i51$i$i = 0, $__parent$i59$i$i = 0, $__parent$i67$i$i = 0, $__parent$i75$i$i = 0, $__parent$i83$i$i = 0, $__parent$i91$i$i = 0, $__parent$i99$i$i = 0, $__r$0$i$i$i = 0, $__r$0$i$i$i11 = 0, $__r$0$i102$i$i = 0, $__r$0$i110$i$i = 0, $__r$0$i110$i$i41 = 0, $__r$0$i118$i$i = 0, $__r$0$i126$i$i = 0, $__r$0$i126$i$i46 = 0, $__r$0$i14$i$i = 0, $__r$0$i14$i$i19 = 0, $__r$0$i14$i$i3 = 0, $__r$0$i142$i$i = 0, $__r$0$i158$i$i = 0, $__r$0$i174$i$i = 0, $__r$0$i190$i$i = 0, $__r$0$i206$i$i = 0, $__r$0$i22$i$i = 0, $__r$0$i22$i$i23 = 0, $__r$0$i222$i$i = 0, $__r$0$i238$i$i = 0, $__r$0$i254$i$i = 0, $__r$0$i30$i$i = 0, $__r$0$i30$i$i26 = 0, $__r$0$i38$i$i = 0, $__r$0$i46$i$i = 0, $__r$0$i46$i$i29 = 0, $__r$0$i54$i$i = 0, $__r$0$i6$i$i = 0, $__r$0$i6$i$i15 = 0, $__r$0$i62$i$i = 0, $__r$0$i62$i$i32 = 0, $__r$0$i70$i$i = 0, $__r$0$i78$i$i = 0, $__r$0$i78$i$i35 = 0, $__r$0$i86$i$i = 0, $__r$0$i94$i$i = 0, $__r$0$i94$i$i38 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__parent$i123$i$i = sp + 112 | 0;
 $__parent$i115$i$i = sp + 188 | 0;
 $__parent$i107$i$i = sp + 228 | 0;
 $__parent$i99$i$i = sp + 252 | 0;
 $__parent$i91$i$i = sp + 276 | 0;
 $__parent$i83$i$i = sp + 24 | 0;
 $__parent$i75$i$i = sp + 36 | 0;
 $__parent$i67$i$i = sp + 192 | 0;
 $__parent$i59$i$i = sp + 48 | 0;
 $__parent$i51$i$i = sp + 52 | 0;
 $__parent$i43$i$i = sp + 56 | 0;
 $__parent$i35$i$i = sp + 60 | 0;
 $__parent$i27$i$i = sp + 232 | 0;
 $__parent$i19$i$i4 = sp + 248 | 0;
 $__parent$i11$i$i5 = sp + 256 | 0;
 $__parent$i3$i$i6 = sp + 272 | 0;
 $__parent$i$i$i7 = sp + 288 | 0;
 $0 = sp + 292 | 0;
 $1 = sp + 116 | 0;
 $2 = sp + 128 | 0;
 $3 = sp + 140 | 0;
 $4 = sp + 152 | 0;
 $5 = sp + 164 | 0;
 $6 = sp + 176 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 $9 = sp + 216 | 0;
 $10 = sp + 204 | 0;
 $11 = sp + 64 | 0;
 $12 = sp + 76 | 0;
 $13 = sp + 236 | 0;
 $14 = sp + 88 | 0;
 $15 = sp + 260 | 0;
 $16 = sp + 100 | 0;
 HEAP32[805] = 0;
 HEAP32[806] = 0;
 HEAP32[804] = 3220;
 __THREW__ = 0;
 $17 = invoke_ii(67, 24) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 if ($18 & 1) {
  $534 = 0;
  $532 = ___cxa_find_matching_catch() | 0;
  $533 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
  ___resumeException($532 | 0);
 }
 HEAP32[$17 + 16 >> 2] = 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 3220;
 HEAP32[805] = $17;
 HEAP32[804] = $17;
 HEAP8[$17 + 12 >> 0] = 1;
 HEAP32[806] = 1;
 HEAP32[$17 + 20 >> 2] = 5;
 $__nd$0$i$i3$i$i = $17;
 while (1) {
  $27 = HEAP32[$__nd$0$i$i3$i$i + 16 >> 2] | 0;
  if (($27 | 0) > 1) {
   $29 = HEAP32[$__nd$0$i$i3$i$i >> 2] | 0;
   if (!$29) {
    $$lcssa427 = $__nd$0$i$i3$i$i;
    $__nd$0$i$i3$i$i$lcssa424 = $__nd$0$i$i3$i$i;
    label = 5;
    break;
   } else $__nd$0$be$in$i$i4$i$i = $29;
  } else {
   if (($27 | 0) >= 1) {
    $__nd$0$i$i3$i$i$lcssa = $__nd$0$i$i3$i$i;
    label = 10;
    break;
   }
   $32 = $__nd$0$i$i3$i$i + 4 | 0;
   $33 = HEAP32[$32 >> 2] | 0;
   if (!$33) {
    $$lcssa426 = $32;
    $__nd$0$i$i3$i$i$lcssa423 = $__nd$0$i$i3$i$i;
    label = 9;
    break;
   } else $__nd$0$be$in$i$i4$i$i = $33;
  }
  $__nd$0$i$i3$i$i = $__nd$0$be$in$i$i4$i$i;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent$i3$i$i6 >> 2] = $__nd$0$i$i3$i$i$lcssa424;
  $$0$i7$i10$i$i = $$lcssa427;
  $__nd$0$i$i3$i$i425 = $__nd$0$i$i3$i$i$lcssa424;
  label = 11;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent$i3$i$i6 >> 2] = $__nd$0$i$i3$i$i$lcssa423;
  $$0$i7$i10$i$i = $$lcssa426;
  $__nd$0$i$i3$i$i425 = $__nd$0$i$i3$i$i$lcssa423;
  label = 11;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent$i3$i$i6 >> 2] = $__nd$0$i$i3$i$i$lcssa;
  if (!$__nd$0$i$i3$i$i$lcssa) {
   $$0$i7$i10$i$i = $__parent$i3$i$i6;
   $__nd$0$i$i3$i$i425 = $__nd$0$i$i3$i$i$lcssa;
   label = 11;
  } else {
   $54 = $17;
   $__r$0$i14$i$i = $__nd$0$i$i3$i$i$lcssa;
  }
 }
 if ((label | 0) == 11) {
  __THREW__ = 0;
  $36 = invoke_ii(67, 24) | 0;
  $37 = __THREW__;
  __THREW__ = 0;
  if ($37 & 1) {
   $534 = $17;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$36 + 16 >> 2] = 1;
  HEAP32[$36 + 20 >> 2] = 0;
  HEAP32[$36 >> 2] = 0;
  HEAP32[$36 + 4 >> 2] = 0;
  HEAP32[$36 + 8 >> 2] = $__nd$0$i$i3$i$i425;
  HEAP32[$$0$i7$i10$i$i >> 2] = $36;
  $45 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$45) $49 = $36; else {
   HEAP32[804] = $45;
   $49 = HEAP32[$$0$i7$i10$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $49);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $54 = HEAP32[805] | 0;
  $__r$0$i14$i$i = $36;
 }
 HEAP32[$__r$0$i14$i$i + 20 >> 2] = 5;
 do if (!$54) {
  HEAP32[$__parent$i11$i$i5 >> 2] = 3220;
  $$0$i7$i26$i$i = 3220;
  $75 = 3220;
  label = 25;
 } else {
  $__nd$0$i$i19$i$i = $54;
  while (1) {
   $56 = HEAP32[$__nd$0$i$i19$i$i + 16 >> 2] | 0;
   if (($56 | 0) > 2) {
    $58 = HEAP32[$__nd$0$i$i19$i$i >> 2] | 0;
    if (!$58) {
     $$lcssa422 = $__nd$0$i$i19$i$i;
     $__nd$0$i$i19$i$i$lcssa420 = $__nd$0$i$i19$i$i;
     label = 18;
     break;
    } else $__nd$0$be$in$i$i20$i$i = $58;
   } else {
    if (($56 | 0) >= 2) {
     $__nd$0$i$i19$i$i$lcssa = $__nd$0$i$i19$i$i;
     label = 24;
     break;
    }
    $62 = $__nd$0$i$i19$i$i + 4 | 0;
    $63 = HEAP32[$62 >> 2] | 0;
    if (!$63) {
     $$lcssa421 = $62;
     $__nd$0$i$i19$i$i$lcssa419 = $__nd$0$i$i19$i$i;
     label = 22;
     break;
    } else $__nd$0$be$in$i$i20$i$i = $63;
   }
   $__nd$0$i$i19$i$i = $__nd$0$be$in$i$i20$i$i;
  }
  if ((label | 0) == 18) {
   HEAP32[$__parent$i11$i$i5 >> 2] = $__nd$0$i$i19$i$i$lcssa420;
   $$0$i7$i26$i$i = $$lcssa422;
   $75 = $__nd$0$i$i19$i$i$lcssa420;
   label = 25;
   break;
  } else if ((label | 0) == 22) {
   HEAP32[$__parent$i11$i$i5 >> 2] = $__nd$0$i$i19$i$i$lcssa419;
   $$0$i7$i26$i$i = $$lcssa421;
   $75 = $__nd$0$i$i19$i$i$lcssa419;
   label = 25;
   break;
  } else if ((label | 0) == 24) {
   HEAP32[$__parent$i11$i$i5 >> 2] = $__nd$0$i$i19$i$i$lcssa;
   if (!$__nd$0$i$i19$i$i$lcssa) {
    $$0$i7$i26$i$i = $__parent$i11$i$i5;
    $75 = $__nd$0$i$i19$i$i$lcssa;
    label = 25;
    break;
   } else {
    $86 = $54;
    $__r$0$i30$i$i = $__nd$0$i$i19$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 25) {
  __THREW__ = 0;
  $68 = invoke_ii(67, 24) | 0;
  $69 = __THREW__;
  __THREW__ = 0;
  if ($69 & 1) {
   $534 = $54;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$68 + 16 >> 2] = 2;
  HEAP32[$68 + 20 >> 2] = 0;
  HEAP32[$68 >> 2] = 0;
  HEAP32[$68 + 4 >> 2] = 0;
  HEAP32[$68 + 8 >> 2] = $75;
  HEAP32[$$0$i7$i26$i$i >> 2] = $68;
  $77 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$77) $81 = $68; else {
   HEAP32[804] = $77;
   $81 = HEAP32[$$0$i7$i26$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $81);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $86 = HEAP32[805] | 0;
  $__r$0$i30$i$i = $68;
 }
 HEAP32[$__r$0$i30$i$i + 20 >> 2] = 6;
 do if (!$86) {
  HEAP32[$__parent$i19$i$i4 >> 2] = 3220;
  $$0$i7$i42$i$i = 3220;
  $107 = 3220;
  label = 39;
 } else {
  $__nd$0$i$i35$i$i = $86;
  while (1) {
   $88 = HEAP32[$__nd$0$i$i35$i$i + 16 >> 2] | 0;
   if (($88 | 0) > 3) {
    $90 = HEAP32[$__nd$0$i$i35$i$i >> 2] | 0;
    if (!$90) {
     $$lcssa418 = $__nd$0$i$i35$i$i;
     $__nd$0$i$i35$i$i$lcssa416 = $__nd$0$i$i35$i$i;
     label = 32;
     break;
    } else $__nd$0$be$in$i$i36$i$i = $90;
   } else {
    if (($88 | 0) >= 3) {
     $__nd$0$i$i35$i$i$lcssa = $__nd$0$i$i35$i$i;
     label = 38;
     break;
    }
    $94 = $__nd$0$i$i35$i$i + 4 | 0;
    $95 = HEAP32[$94 >> 2] | 0;
    if (!$95) {
     $$lcssa417 = $94;
     $__nd$0$i$i35$i$i$lcssa415 = $__nd$0$i$i35$i$i;
     label = 36;
     break;
    } else $__nd$0$be$in$i$i36$i$i = $95;
   }
   $__nd$0$i$i35$i$i = $__nd$0$be$in$i$i36$i$i;
  }
  if ((label | 0) == 32) {
   HEAP32[$__parent$i19$i$i4 >> 2] = $__nd$0$i$i35$i$i$lcssa416;
   $$0$i7$i42$i$i = $$lcssa418;
   $107 = $__nd$0$i$i35$i$i$lcssa416;
   label = 39;
   break;
  } else if ((label | 0) == 36) {
   HEAP32[$__parent$i19$i$i4 >> 2] = $__nd$0$i$i35$i$i$lcssa415;
   $$0$i7$i42$i$i = $$lcssa417;
   $107 = $__nd$0$i$i35$i$i$lcssa415;
   label = 39;
   break;
  } else if ((label | 0) == 38) {
   HEAP32[$__parent$i19$i$i4 >> 2] = $__nd$0$i$i35$i$i$lcssa;
   if (!$__nd$0$i$i35$i$i$lcssa) {
    $$0$i7$i42$i$i = $__parent$i19$i$i4;
    $107 = $__nd$0$i$i35$i$i$lcssa;
    label = 39;
    break;
   } else {
    $118 = $86;
    $__r$0$i46$i$i = $__nd$0$i$i35$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 39) {
  __THREW__ = 0;
  $100 = invoke_ii(67, 24) | 0;
  $101 = __THREW__;
  __THREW__ = 0;
  if ($101 & 1) {
   $534 = $86;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$100 + 16 >> 2] = 3;
  HEAP32[$100 + 20 >> 2] = 0;
  HEAP32[$100 >> 2] = 0;
  HEAP32[$100 + 4 >> 2] = 0;
  HEAP32[$100 + 8 >> 2] = $107;
  HEAP32[$$0$i7$i42$i$i >> 2] = $100;
  $109 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$109) $113 = $100; else {
   HEAP32[804] = $109;
   $113 = HEAP32[$$0$i7$i42$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $113);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $118 = HEAP32[805] | 0;
  $__r$0$i46$i$i = $100;
 }
 HEAP32[$__r$0$i46$i$i + 20 >> 2] = 6;
 do if (!$118) {
  HEAP32[$__parent$i27$i$i >> 2] = 3220;
  $$0$i7$i58$i$i = 3220;
  $139 = 3220;
  label = 53;
 } else {
  $__nd$0$i$i51$i$i = $118;
  while (1) {
   $120 = HEAP32[$__nd$0$i$i51$i$i + 16 >> 2] | 0;
   if (($120 | 0) > 4) {
    $122 = HEAP32[$__nd$0$i$i51$i$i >> 2] | 0;
    if (!$122) {
     $$lcssa414 = $__nd$0$i$i51$i$i;
     $__nd$0$i$i51$i$i$lcssa412 = $__nd$0$i$i51$i$i;
     label = 46;
     break;
    } else $__nd$0$be$in$i$i52$i$i = $122;
   } else {
    if (($120 | 0) >= 4) {
     $__nd$0$i$i51$i$i$lcssa = $__nd$0$i$i51$i$i;
     label = 52;
     break;
    }
    $126 = $__nd$0$i$i51$i$i + 4 | 0;
    $127 = HEAP32[$126 >> 2] | 0;
    if (!$127) {
     $$lcssa413 = $126;
     $__nd$0$i$i51$i$i$lcssa411 = $__nd$0$i$i51$i$i;
     label = 50;
     break;
    } else $__nd$0$be$in$i$i52$i$i = $127;
   }
   $__nd$0$i$i51$i$i = $__nd$0$be$in$i$i52$i$i;
  }
  if ((label | 0) == 46) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i51$i$i$lcssa412;
   $$0$i7$i58$i$i = $$lcssa414;
   $139 = $__nd$0$i$i51$i$i$lcssa412;
   label = 53;
   break;
  } else if ((label | 0) == 50) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i51$i$i$lcssa411;
   $$0$i7$i58$i$i = $$lcssa413;
   $139 = $__nd$0$i$i51$i$i$lcssa411;
   label = 53;
   break;
  } else if ((label | 0) == 52) {
   HEAP32[$__parent$i27$i$i >> 2] = $__nd$0$i$i51$i$i$lcssa;
   if (!$__nd$0$i$i51$i$i$lcssa) {
    $$0$i7$i58$i$i = $__parent$i27$i$i;
    $139 = $__nd$0$i$i51$i$i$lcssa;
    label = 53;
    break;
   } else {
    $150 = $118;
    $__r$0$i62$i$i = $__nd$0$i$i51$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 53) {
  __THREW__ = 0;
  $132 = invoke_ii(67, 24) | 0;
  $133 = __THREW__;
  __THREW__ = 0;
  if ($133 & 1) {
   $534 = $118;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$132 + 16 >> 2] = 4;
  HEAP32[$132 + 20 >> 2] = 0;
  HEAP32[$132 >> 2] = 0;
  HEAP32[$132 + 4 >> 2] = 0;
  HEAP32[$132 + 8 >> 2] = $139;
  HEAP32[$$0$i7$i58$i$i >> 2] = $132;
  $141 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$141) $145 = $132; else {
   HEAP32[804] = $141;
   $145 = HEAP32[$$0$i7$i58$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $145);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $150 = HEAP32[805] | 0;
  $__r$0$i62$i$i = $132;
 }
 HEAP32[$__r$0$i62$i$i + 20 >> 2] = 7;
 do if (!$150) {
  HEAP32[$__parent$i35$i$i >> 2] = 3220;
  $$0$i7$i74$i$i = 3220;
  $171 = 3220;
  label = 67;
 } else {
  $__nd$0$i$i67$i$i = $150;
  while (1) {
   $152 = HEAP32[$__nd$0$i$i67$i$i + 16 >> 2] | 0;
   if (($152 | 0) > 5) {
    $154 = HEAP32[$__nd$0$i$i67$i$i >> 2] | 0;
    if (!$154) {
     $$lcssa410 = $__nd$0$i$i67$i$i;
     $__nd$0$i$i67$i$i$lcssa408 = $__nd$0$i$i67$i$i;
     label = 60;
     break;
    } else $__nd$0$be$in$i$i68$i$i = $154;
   } else {
    if (($152 | 0) >= 5) {
     $__nd$0$i$i67$i$i$lcssa = $__nd$0$i$i67$i$i;
     label = 66;
     break;
    }
    $158 = $__nd$0$i$i67$i$i + 4 | 0;
    $159 = HEAP32[$158 >> 2] | 0;
    if (!$159) {
     $$lcssa409 = $158;
     $__nd$0$i$i67$i$i$lcssa407 = $__nd$0$i$i67$i$i;
     label = 64;
     break;
    } else $__nd$0$be$in$i$i68$i$i = $159;
   }
   $__nd$0$i$i67$i$i = $__nd$0$be$in$i$i68$i$i;
  }
  if ((label | 0) == 60) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i67$i$i$lcssa408;
   $$0$i7$i74$i$i = $$lcssa410;
   $171 = $__nd$0$i$i67$i$i$lcssa408;
   label = 67;
   break;
  } else if ((label | 0) == 64) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i67$i$i$lcssa407;
   $$0$i7$i74$i$i = $$lcssa409;
   $171 = $__nd$0$i$i67$i$i$lcssa407;
   label = 67;
   break;
  } else if ((label | 0) == 66) {
   HEAP32[$__parent$i35$i$i >> 2] = $__nd$0$i$i67$i$i$lcssa;
   if (!$__nd$0$i$i67$i$i$lcssa) {
    $$0$i7$i74$i$i = $__parent$i35$i$i;
    $171 = $__nd$0$i$i67$i$i$lcssa;
    label = 67;
    break;
   } else {
    $182 = $150;
    $__r$0$i78$i$i = $__nd$0$i$i67$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 67) {
  __THREW__ = 0;
  $164 = invoke_ii(67, 24) | 0;
  $165 = __THREW__;
  __THREW__ = 0;
  if ($165 & 1) {
   $534 = $150;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$164 + 16 >> 2] = 5;
  HEAP32[$164 + 20 >> 2] = 0;
  HEAP32[$164 >> 2] = 0;
  HEAP32[$164 + 4 >> 2] = 0;
  HEAP32[$164 + 8 >> 2] = $171;
  HEAP32[$$0$i7$i74$i$i >> 2] = $164;
  $173 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$173) $177 = $164; else {
   HEAP32[804] = $173;
   $177 = HEAP32[$$0$i7$i74$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $177);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $182 = HEAP32[805] | 0;
  $__r$0$i78$i$i = $164;
 }
 HEAP32[$__r$0$i78$i$i + 20 >> 2] = 7;
 do if (!$182) {
  HEAP32[$__parent$i43$i$i >> 2] = 3220;
  $$0$i7$i90$i$i = 3220;
  $203 = 3220;
  label = 81;
 } else {
  $__nd$0$i$i83$i$i = $182;
  while (1) {
   $184 = HEAP32[$__nd$0$i$i83$i$i + 16 >> 2] | 0;
   if (($184 | 0) > 6) {
    $186 = HEAP32[$__nd$0$i$i83$i$i >> 2] | 0;
    if (!$186) {
     $$lcssa406 = $__nd$0$i$i83$i$i;
     $__nd$0$i$i83$i$i$lcssa404 = $__nd$0$i$i83$i$i;
     label = 74;
     break;
    } else $__nd$0$be$in$i$i84$i$i = $186;
   } else {
    if (($184 | 0) >= 6) {
     $__nd$0$i$i83$i$i$lcssa = $__nd$0$i$i83$i$i;
     label = 80;
     break;
    }
    $190 = $__nd$0$i$i83$i$i + 4 | 0;
    $191 = HEAP32[$190 >> 2] | 0;
    if (!$191) {
     $$lcssa405 = $190;
     $__nd$0$i$i83$i$i$lcssa403 = $__nd$0$i$i83$i$i;
     label = 78;
     break;
    } else $__nd$0$be$in$i$i84$i$i = $191;
   }
   $__nd$0$i$i83$i$i = $__nd$0$be$in$i$i84$i$i;
  }
  if ((label | 0) == 74) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i83$i$i$lcssa404;
   $$0$i7$i90$i$i = $$lcssa406;
   $203 = $__nd$0$i$i83$i$i$lcssa404;
   label = 81;
   break;
  } else if ((label | 0) == 78) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i83$i$i$lcssa403;
   $$0$i7$i90$i$i = $$lcssa405;
   $203 = $__nd$0$i$i83$i$i$lcssa403;
   label = 81;
   break;
  } else if ((label | 0) == 80) {
   HEAP32[$__parent$i43$i$i >> 2] = $__nd$0$i$i83$i$i$lcssa;
   if (!$__nd$0$i$i83$i$i$lcssa) {
    $$0$i7$i90$i$i = $__parent$i43$i$i;
    $203 = $__nd$0$i$i83$i$i$lcssa;
    label = 81;
    break;
   } else {
    $214 = $182;
    $__r$0$i94$i$i = $__nd$0$i$i83$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 81) {
  __THREW__ = 0;
  $196 = invoke_ii(67, 24) | 0;
  $197 = __THREW__;
  __THREW__ = 0;
  if ($197 & 1) {
   $534 = $182;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$196 + 16 >> 2] = 6;
  HEAP32[$196 + 20 >> 2] = 0;
  HEAP32[$196 >> 2] = 0;
  HEAP32[$196 + 4 >> 2] = 0;
  HEAP32[$196 + 8 >> 2] = $203;
  HEAP32[$$0$i7$i90$i$i >> 2] = $196;
  $205 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$205) $209 = $196; else {
   HEAP32[804] = $205;
   $209 = HEAP32[$$0$i7$i90$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $209);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $214 = HEAP32[805] | 0;
  $__r$0$i94$i$i = $196;
 }
 HEAP32[$__r$0$i94$i$i + 20 >> 2] = 8;
 do if (!$214) {
  HEAP32[$__parent$i51$i$i >> 2] = 3220;
  $$0$i7$i106$i$i = 3220;
  $235 = 3220;
  label = 95;
 } else {
  $__nd$0$i$i99$i$i = $214;
  while (1) {
   $216 = HEAP32[$__nd$0$i$i99$i$i + 16 >> 2] | 0;
   if (($216 | 0) > 7) {
    $218 = HEAP32[$__nd$0$i$i99$i$i >> 2] | 0;
    if (!$218) {
     $$lcssa402 = $__nd$0$i$i99$i$i;
     $__nd$0$i$i99$i$i$lcssa400 = $__nd$0$i$i99$i$i;
     label = 88;
     break;
    } else $__nd$0$be$in$i$i100$i$i = $218;
   } else {
    if (($216 | 0) >= 7) {
     $__nd$0$i$i99$i$i$lcssa = $__nd$0$i$i99$i$i;
     label = 94;
     break;
    }
    $222 = $__nd$0$i$i99$i$i + 4 | 0;
    $223 = HEAP32[$222 >> 2] | 0;
    if (!$223) {
     $$lcssa401 = $222;
     $__nd$0$i$i99$i$i$lcssa399 = $__nd$0$i$i99$i$i;
     label = 92;
     break;
    } else $__nd$0$be$in$i$i100$i$i = $223;
   }
   $__nd$0$i$i99$i$i = $__nd$0$be$in$i$i100$i$i;
  }
  if ((label | 0) == 88) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i99$i$i$lcssa400;
   $$0$i7$i106$i$i = $$lcssa402;
   $235 = $__nd$0$i$i99$i$i$lcssa400;
   label = 95;
   break;
  } else if ((label | 0) == 92) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i99$i$i$lcssa399;
   $$0$i7$i106$i$i = $$lcssa401;
   $235 = $__nd$0$i$i99$i$i$lcssa399;
   label = 95;
   break;
  } else if ((label | 0) == 94) {
   HEAP32[$__parent$i51$i$i >> 2] = $__nd$0$i$i99$i$i$lcssa;
   if (!$__nd$0$i$i99$i$i$lcssa) {
    $$0$i7$i106$i$i = $__parent$i51$i$i;
    $235 = $__nd$0$i$i99$i$i$lcssa;
    label = 95;
    break;
   } else {
    $246 = $214;
    $__r$0$i110$i$i = $__nd$0$i$i99$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 95) {
  __THREW__ = 0;
  $228 = invoke_ii(67, 24) | 0;
  $229 = __THREW__;
  __THREW__ = 0;
  if ($229 & 1) {
   $534 = $214;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$228 + 16 >> 2] = 7;
  HEAP32[$228 + 20 >> 2] = 0;
  HEAP32[$228 >> 2] = 0;
  HEAP32[$228 + 4 >> 2] = 0;
  HEAP32[$228 + 8 >> 2] = $235;
  HEAP32[$$0$i7$i106$i$i >> 2] = $228;
  $237 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$237) $241 = $228; else {
   HEAP32[804] = $237;
   $241 = HEAP32[$$0$i7$i106$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $241);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $246 = HEAP32[805] | 0;
  $__r$0$i110$i$i = $228;
 }
 HEAP32[$__r$0$i110$i$i + 20 >> 2] = 8;
 do if (!$246) {
  HEAP32[$__parent$i59$i$i >> 2] = 3220;
  $$0$i7$i122$i$i = 3220;
  $267 = 3220;
  label = 109;
 } else {
  $__nd$0$i$i115$i$i = $246;
  while (1) {
   $248 = HEAP32[$__nd$0$i$i115$i$i + 16 >> 2] | 0;
   if (($248 | 0) > 8) {
    $250 = HEAP32[$__nd$0$i$i115$i$i >> 2] | 0;
    if (!$250) {
     $$lcssa398 = $__nd$0$i$i115$i$i;
     $__nd$0$i$i115$i$i$lcssa396 = $__nd$0$i$i115$i$i;
     label = 102;
     break;
    } else $__nd$0$be$in$i$i116$i$i = $250;
   } else {
    if (($248 | 0) >= 8) {
     $__nd$0$i$i115$i$i$lcssa = $__nd$0$i$i115$i$i;
     label = 108;
     break;
    }
    $254 = $__nd$0$i$i115$i$i + 4 | 0;
    $255 = HEAP32[$254 >> 2] | 0;
    if (!$255) {
     $$lcssa397 = $254;
     $__nd$0$i$i115$i$i$lcssa395 = $__nd$0$i$i115$i$i;
     label = 106;
     break;
    } else $__nd$0$be$in$i$i116$i$i = $255;
   }
   $__nd$0$i$i115$i$i = $__nd$0$be$in$i$i116$i$i;
  }
  if ((label | 0) == 102) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i115$i$i$lcssa396;
   $$0$i7$i122$i$i = $$lcssa398;
   $267 = $__nd$0$i$i115$i$i$lcssa396;
   label = 109;
   break;
  } else if ((label | 0) == 106) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i115$i$i$lcssa395;
   $$0$i7$i122$i$i = $$lcssa397;
   $267 = $__nd$0$i$i115$i$i$lcssa395;
   label = 109;
   break;
  } else if ((label | 0) == 108) {
   HEAP32[$__parent$i59$i$i >> 2] = $__nd$0$i$i115$i$i$lcssa;
   if (!$__nd$0$i$i115$i$i$lcssa) {
    $$0$i7$i122$i$i = $__parent$i59$i$i;
    $267 = $__nd$0$i$i115$i$i$lcssa;
    label = 109;
    break;
   } else {
    $278 = $246;
    $__r$0$i126$i$i = $__nd$0$i$i115$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 109) {
  __THREW__ = 0;
  $260 = invoke_ii(67, 24) | 0;
  $261 = __THREW__;
  __THREW__ = 0;
  if ($261 & 1) {
   $534 = $246;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$260 + 16 >> 2] = 8;
  HEAP32[$260 + 20 >> 2] = 0;
  HEAP32[$260 >> 2] = 0;
  HEAP32[$260 + 4 >> 2] = 0;
  HEAP32[$260 + 8 >> 2] = $267;
  HEAP32[$$0$i7$i122$i$i >> 2] = $260;
  $269 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$269) $273 = $260; else {
   HEAP32[804] = $269;
   $273 = HEAP32[$$0$i7$i122$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $273);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $278 = HEAP32[805] | 0;
  $__r$0$i126$i$i = $260;
 }
 HEAP32[$__r$0$i126$i$i + 20 >> 2] = 8;
 do if (!$278) {
  HEAP32[$__parent$i67$i$i >> 2] = 3220;
  $$0$i7$i138$i$i = 3220;
  $299 = 3220;
  label = 123;
 } else {
  $__nd$0$i$i131$i$i = $278;
  while (1) {
   $280 = HEAP32[$__nd$0$i$i131$i$i + 16 >> 2] | 0;
   if (($280 | 0) > 9) {
    $282 = HEAP32[$__nd$0$i$i131$i$i >> 2] | 0;
    if (!$282) {
     $$lcssa394 = $__nd$0$i$i131$i$i;
     $__nd$0$i$i131$i$i$lcssa392 = $__nd$0$i$i131$i$i;
     label = 116;
     break;
    } else $__nd$0$be$in$i$i132$i$i = $282;
   } else {
    if (($280 | 0) >= 9) {
     $__nd$0$i$i131$i$i$lcssa = $__nd$0$i$i131$i$i;
     label = 122;
     break;
    }
    $286 = $__nd$0$i$i131$i$i + 4 | 0;
    $287 = HEAP32[$286 >> 2] | 0;
    if (!$287) {
     $$lcssa393 = $286;
     $__nd$0$i$i131$i$i$lcssa391 = $__nd$0$i$i131$i$i;
     label = 120;
     break;
    } else $__nd$0$be$in$i$i132$i$i = $287;
   }
   $__nd$0$i$i131$i$i = $__nd$0$be$in$i$i132$i$i;
  }
  if ((label | 0) == 116) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i131$i$i$lcssa392;
   $$0$i7$i138$i$i = $$lcssa394;
   $299 = $__nd$0$i$i131$i$i$lcssa392;
   label = 123;
   break;
  } else if ((label | 0) == 120) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i131$i$i$lcssa391;
   $$0$i7$i138$i$i = $$lcssa393;
   $299 = $__nd$0$i$i131$i$i$lcssa391;
   label = 123;
   break;
  } else if ((label | 0) == 122) {
   HEAP32[$__parent$i67$i$i >> 2] = $__nd$0$i$i131$i$i$lcssa;
   if (!$__nd$0$i$i131$i$i$lcssa) {
    $$0$i7$i138$i$i = $__parent$i67$i$i;
    $299 = $__nd$0$i$i131$i$i$lcssa;
    label = 123;
    break;
   } else {
    $310 = $278;
    $__r$0$i142$i$i = $__nd$0$i$i131$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 123) {
  __THREW__ = 0;
  $292 = invoke_ii(67, 24) | 0;
  $293 = __THREW__;
  __THREW__ = 0;
  if ($293 & 1) {
   $534 = $278;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$292 + 16 >> 2] = 9;
  HEAP32[$292 + 20 >> 2] = 0;
  HEAP32[$292 >> 2] = 0;
  HEAP32[$292 + 4 >> 2] = 0;
  HEAP32[$292 + 8 >> 2] = $299;
  HEAP32[$$0$i7$i138$i$i >> 2] = $292;
  $301 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$301) $305 = $292; else {
   HEAP32[804] = $301;
   $305 = HEAP32[$$0$i7$i138$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $305);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $310 = HEAP32[805] | 0;
  $__r$0$i142$i$i = $292;
 }
 HEAP32[$__r$0$i142$i$i + 20 >> 2] = 8;
 do if (!$310) {
  HEAP32[$__parent$i75$i$i >> 2] = 3220;
  $$0$i7$i154$i$i = 3220;
  $331 = 3220;
  label = 137;
 } else {
  $__nd$0$i$i147$i$i = $310;
  while (1) {
   $312 = HEAP32[$__nd$0$i$i147$i$i + 16 >> 2] | 0;
   if (($312 | 0) > 10) {
    $314 = HEAP32[$__nd$0$i$i147$i$i >> 2] | 0;
    if (!$314) {
     $$lcssa390 = $__nd$0$i$i147$i$i;
     $__nd$0$i$i147$i$i$lcssa388 = $__nd$0$i$i147$i$i;
     label = 130;
     break;
    } else $__nd$0$be$in$i$i148$i$i = $314;
   } else {
    if (($312 | 0) >= 10) {
     $__nd$0$i$i147$i$i$lcssa = $__nd$0$i$i147$i$i;
     label = 136;
     break;
    }
    $318 = $__nd$0$i$i147$i$i + 4 | 0;
    $319 = HEAP32[$318 >> 2] | 0;
    if (!$319) {
     $$lcssa389 = $318;
     $__nd$0$i$i147$i$i$lcssa387 = $__nd$0$i$i147$i$i;
     label = 134;
     break;
    } else $__nd$0$be$in$i$i148$i$i = $319;
   }
   $__nd$0$i$i147$i$i = $__nd$0$be$in$i$i148$i$i;
  }
  if ((label | 0) == 130) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i147$i$i$lcssa388;
   $$0$i7$i154$i$i = $$lcssa390;
   $331 = $__nd$0$i$i147$i$i$lcssa388;
   label = 137;
   break;
  } else if ((label | 0) == 134) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i147$i$i$lcssa387;
   $$0$i7$i154$i$i = $$lcssa389;
   $331 = $__nd$0$i$i147$i$i$lcssa387;
   label = 137;
   break;
  } else if ((label | 0) == 136) {
   HEAP32[$__parent$i75$i$i >> 2] = $__nd$0$i$i147$i$i$lcssa;
   if (!$__nd$0$i$i147$i$i$lcssa) {
    $$0$i7$i154$i$i = $__parent$i75$i$i;
    $331 = $__nd$0$i$i147$i$i$lcssa;
    label = 137;
    break;
   } else {
    $342 = $310;
    $__r$0$i158$i$i = $__nd$0$i$i147$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 137) {
  __THREW__ = 0;
  $324 = invoke_ii(67, 24) | 0;
  $325 = __THREW__;
  __THREW__ = 0;
  if ($325 & 1) {
   $534 = $310;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$324 + 16 >> 2] = 10;
  HEAP32[$324 + 20 >> 2] = 0;
  HEAP32[$324 >> 2] = 0;
  HEAP32[$324 + 4 >> 2] = 0;
  HEAP32[$324 + 8 >> 2] = $331;
  HEAP32[$$0$i7$i154$i$i >> 2] = $324;
  $333 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$333) $337 = $324; else {
   HEAP32[804] = $333;
   $337 = HEAP32[$$0$i7$i154$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $337);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $342 = HEAP32[805] | 0;
  $__r$0$i158$i$i = $324;
 }
 HEAP32[$__r$0$i158$i$i + 20 >> 2] = 9;
 do if (!$342) {
  HEAP32[$__parent$i83$i$i >> 2] = 3220;
  $$0$i7$i170$i$i = 3220;
  $363 = 3220;
  label = 151;
 } else {
  $__nd$0$i$i163$i$i = $342;
  while (1) {
   $344 = HEAP32[$__nd$0$i$i163$i$i + 16 >> 2] | 0;
   if (($344 | 0) > 11) {
    $346 = HEAP32[$__nd$0$i$i163$i$i >> 2] | 0;
    if (!$346) {
     $$lcssa386 = $__nd$0$i$i163$i$i;
     $__nd$0$i$i163$i$i$lcssa384 = $__nd$0$i$i163$i$i;
     label = 144;
     break;
    } else $__nd$0$be$in$i$i164$i$i = $346;
   } else {
    if (($344 | 0) >= 11) {
     $__nd$0$i$i163$i$i$lcssa = $__nd$0$i$i163$i$i;
     label = 150;
     break;
    }
    $350 = $__nd$0$i$i163$i$i + 4 | 0;
    $351 = HEAP32[$350 >> 2] | 0;
    if (!$351) {
     $$lcssa385 = $350;
     $__nd$0$i$i163$i$i$lcssa383 = $__nd$0$i$i163$i$i;
     label = 148;
     break;
    } else $__nd$0$be$in$i$i164$i$i = $351;
   }
   $__nd$0$i$i163$i$i = $__nd$0$be$in$i$i164$i$i;
  }
  if ((label | 0) == 144) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i163$i$i$lcssa384;
   $$0$i7$i170$i$i = $$lcssa386;
   $363 = $__nd$0$i$i163$i$i$lcssa384;
   label = 151;
   break;
  } else if ((label | 0) == 148) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i163$i$i$lcssa383;
   $$0$i7$i170$i$i = $$lcssa385;
   $363 = $__nd$0$i$i163$i$i$lcssa383;
   label = 151;
   break;
  } else if ((label | 0) == 150) {
   HEAP32[$__parent$i83$i$i >> 2] = $__nd$0$i$i163$i$i$lcssa;
   if (!$__nd$0$i$i163$i$i$lcssa) {
    $$0$i7$i170$i$i = $__parent$i83$i$i;
    $363 = $__nd$0$i$i163$i$i$lcssa;
    label = 151;
    break;
   } else {
    $374 = $342;
    $__r$0$i174$i$i = $__nd$0$i$i163$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 151) {
  __THREW__ = 0;
  $356 = invoke_ii(67, 24) | 0;
  $357 = __THREW__;
  __THREW__ = 0;
  if ($357 & 1) {
   $534 = $342;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$356 + 16 >> 2] = 11;
  HEAP32[$356 + 20 >> 2] = 0;
  HEAP32[$356 >> 2] = 0;
  HEAP32[$356 + 4 >> 2] = 0;
  HEAP32[$356 + 8 >> 2] = $363;
  HEAP32[$$0$i7$i170$i$i >> 2] = $356;
  $365 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$365) $369 = $356; else {
   HEAP32[804] = $365;
   $369 = HEAP32[$$0$i7$i170$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $369);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $374 = HEAP32[805] | 0;
  $__r$0$i174$i$i = $356;
 }
 HEAP32[$__r$0$i174$i$i + 20 >> 2] = 9;
 do if (!$374) {
  HEAP32[$__parent$i91$i$i >> 2] = 3220;
  $$0$i7$i186$i$i = 3220;
  $395 = 3220;
  label = 165;
 } else {
  $__nd$0$i$i179$i$i = $374;
  while (1) {
   $376 = HEAP32[$__nd$0$i$i179$i$i + 16 >> 2] | 0;
   if (($376 | 0) > 12) {
    $378 = HEAP32[$__nd$0$i$i179$i$i >> 2] | 0;
    if (!$378) {
     $$lcssa382 = $__nd$0$i$i179$i$i;
     $__nd$0$i$i179$i$i$lcssa380 = $__nd$0$i$i179$i$i;
     label = 158;
     break;
    } else $__nd$0$be$in$i$i180$i$i = $378;
   } else {
    if (($376 | 0) >= 12) {
     $__nd$0$i$i179$i$i$lcssa = $__nd$0$i$i179$i$i;
     label = 164;
     break;
    }
    $382 = $__nd$0$i$i179$i$i + 4 | 0;
    $383 = HEAP32[$382 >> 2] | 0;
    if (!$383) {
     $$lcssa381 = $382;
     $__nd$0$i$i179$i$i$lcssa379 = $__nd$0$i$i179$i$i;
     label = 162;
     break;
    } else $__nd$0$be$in$i$i180$i$i = $383;
   }
   $__nd$0$i$i179$i$i = $__nd$0$be$in$i$i180$i$i;
  }
  if ((label | 0) == 158) {
   HEAP32[$__parent$i91$i$i >> 2] = $__nd$0$i$i179$i$i$lcssa380;
   $$0$i7$i186$i$i = $$lcssa382;
   $395 = $__nd$0$i$i179$i$i$lcssa380;
   label = 165;
   break;
  } else if ((label | 0) == 162) {
   HEAP32[$__parent$i91$i$i >> 2] = $__nd$0$i$i179$i$i$lcssa379;
   $$0$i7$i186$i$i = $$lcssa381;
   $395 = $__nd$0$i$i179$i$i$lcssa379;
   label = 165;
   break;
  } else if ((label | 0) == 164) {
   HEAP32[$__parent$i91$i$i >> 2] = $__nd$0$i$i179$i$i$lcssa;
   if (!$__nd$0$i$i179$i$i$lcssa) {
    $$0$i7$i186$i$i = $__parent$i91$i$i;
    $395 = $__nd$0$i$i179$i$i$lcssa;
    label = 165;
    break;
   } else {
    $406 = $374;
    $__r$0$i190$i$i = $__nd$0$i$i179$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 165) {
  __THREW__ = 0;
  $388 = invoke_ii(67, 24) | 0;
  $389 = __THREW__;
  __THREW__ = 0;
  if ($389 & 1) {
   $534 = $374;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$388 + 16 >> 2] = 12;
  HEAP32[$388 + 20 >> 2] = 0;
  HEAP32[$388 >> 2] = 0;
  HEAP32[$388 + 4 >> 2] = 0;
  HEAP32[$388 + 8 >> 2] = $395;
  HEAP32[$$0$i7$i186$i$i >> 2] = $388;
  $397 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$397) $401 = $388; else {
   HEAP32[804] = $397;
   $401 = HEAP32[$$0$i7$i186$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $401);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $406 = HEAP32[805] | 0;
  $__r$0$i190$i$i = $388;
 }
 HEAP32[$__r$0$i190$i$i + 20 >> 2] = 10;
 do if (!$406) {
  HEAP32[$__parent$i99$i$i >> 2] = 3220;
  $$0$i7$i202$i$i = 3220;
  $427 = 3220;
  label = 179;
 } else {
  $__nd$0$i$i195$i$i = $406;
  while (1) {
   $408 = HEAP32[$__nd$0$i$i195$i$i + 16 >> 2] | 0;
   if (($408 | 0) > 13) {
    $410 = HEAP32[$__nd$0$i$i195$i$i >> 2] | 0;
    if (!$410) {
     $$lcssa378 = $__nd$0$i$i195$i$i;
     $__nd$0$i$i195$i$i$lcssa376 = $__nd$0$i$i195$i$i;
     label = 172;
     break;
    } else $__nd$0$be$in$i$i196$i$i = $410;
   } else {
    if (($408 | 0) >= 13) {
     $__nd$0$i$i195$i$i$lcssa = $__nd$0$i$i195$i$i;
     label = 178;
     break;
    }
    $414 = $__nd$0$i$i195$i$i + 4 | 0;
    $415 = HEAP32[$414 >> 2] | 0;
    if (!$415) {
     $$lcssa377 = $414;
     $__nd$0$i$i195$i$i$lcssa375 = $__nd$0$i$i195$i$i;
     label = 176;
     break;
    } else $__nd$0$be$in$i$i196$i$i = $415;
   }
   $__nd$0$i$i195$i$i = $__nd$0$be$in$i$i196$i$i;
  }
  if ((label | 0) == 172) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i195$i$i$lcssa376;
   $$0$i7$i202$i$i = $$lcssa378;
   $427 = $__nd$0$i$i195$i$i$lcssa376;
   label = 179;
   break;
  } else if ((label | 0) == 176) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i195$i$i$lcssa375;
   $$0$i7$i202$i$i = $$lcssa377;
   $427 = $__nd$0$i$i195$i$i$lcssa375;
   label = 179;
   break;
  } else if ((label | 0) == 178) {
   HEAP32[$__parent$i99$i$i >> 2] = $__nd$0$i$i195$i$i$lcssa;
   if (!$__nd$0$i$i195$i$i$lcssa) {
    $$0$i7$i202$i$i = $__parent$i99$i$i;
    $427 = $__nd$0$i$i195$i$i$lcssa;
    label = 179;
    break;
   } else {
    $438 = $406;
    $__r$0$i206$i$i = $__nd$0$i$i195$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 179) {
  __THREW__ = 0;
  $420 = invoke_ii(67, 24) | 0;
  $421 = __THREW__;
  __THREW__ = 0;
  if ($421 & 1) {
   $534 = $406;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$420 + 16 >> 2] = 13;
  HEAP32[$420 + 20 >> 2] = 0;
  HEAP32[$420 >> 2] = 0;
  HEAP32[$420 + 4 >> 2] = 0;
  HEAP32[$420 + 8 >> 2] = $427;
  HEAP32[$$0$i7$i202$i$i >> 2] = $420;
  $429 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$429) $433 = $420; else {
   HEAP32[804] = $429;
   $433 = HEAP32[$$0$i7$i202$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $433);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $438 = HEAP32[805] | 0;
  $__r$0$i206$i$i = $420;
 }
 HEAP32[$__r$0$i206$i$i + 20 >> 2] = 11;
 do if (!$438) {
  HEAP32[$__parent$i107$i$i >> 2] = 3220;
  $$0$i7$i218$i$i = 3220;
  $459 = 3220;
  label = 193;
 } else {
  $__nd$0$i$i211$i$i = $438;
  while (1) {
   $440 = HEAP32[$__nd$0$i$i211$i$i + 16 >> 2] | 0;
   if (($440 | 0) > 14) {
    $442 = HEAP32[$__nd$0$i$i211$i$i >> 2] | 0;
    if (!$442) {
     $$lcssa374 = $__nd$0$i$i211$i$i;
     $__nd$0$i$i211$i$i$lcssa372 = $__nd$0$i$i211$i$i;
     label = 186;
     break;
    } else $__nd$0$be$in$i$i212$i$i = $442;
   } else {
    if (($440 | 0) >= 14) {
     $__nd$0$i$i211$i$i$lcssa = $__nd$0$i$i211$i$i;
     label = 192;
     break;
    }
    $446 = $__nd$0$i$i211$i$i + 4 | 0;
    $447 = HEAP32[$446 >> 2] | 0;
    if (!$447) {
     $$lcssa373 = $446;
     $__nd$0$i$i211$i$i$lcssa371 = $__nd$0$i$i211$i$i;
     label = 190;
     break;
    } else $__nd$0$be$in$i$i212$i$i = $447;
   }
   $__nd$0$i$i211$i$i = $__nd$0$be$in$i$i212$i$i;
  }
  if ((label | 0) == 186) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i211$i$i$lcssa372;
   $$0$i7$i218$i$i = $$lcssa374;
   $459 = $__nd$0$i$i211$i$i$lcssa372;
   label = 193;
   break;
  } else if ((label | 0) == 190) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i211$i$i$lcssa371;
   $$0$i7$i218$i$i = $$lcssa373;
   $459 = $__nd$0$i$i211$i$i$lcssa371;
   label = 193;
   break;
  } else if ((label | 0) == 192) {
   HEAP32[$__parent$i107$i$i >> 2] = $__nd$0$i$i211$i$i$lcssa;
   if (!$__nd$0$i$i211$i$i$lcssa) {
    $$0$i7$i218$i$i = $__parent$i107$i$i;
    $459 = $__nd$0$i$i211$i$i$lcssa;
    label = 193;
    break;
   } else {
    $470 = $438;
    $__r$0$i222$i$i = $__nd$0$i$i211$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 193) {
  __THREW__ = 0;
  $452 = invoke_ii(67, 24) | 0;
  $453 = __THREW__;
  __THREW__ = 0;
  if ($453 & 1) {
   $534 = $438;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$452 + 16 >> 2] = 14;
  HEAP32[$452 + 20 >> 2] = 0;
  HEAP32[$452 >> 2] = 0;
  HEAP32[$452 + 4 >> 2] = 0;
  HEAP32[$452 + 8 >> 2] = $459;
  HEAP32[$$0$i7$i218$i$i >> 2] = $452;
  $461 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$461) $465 = $452; else {
   HEAP32[804] = $461;
   $465 = HEAP32[$$0$i7$i218$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $465);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $470 = HEAP32[805] | 0;
  $__r$0$i222$i$i = $452;
 }
 HEAP32[$__r$0$i222$i$i + 20 >> 2] = 12;
 do if (!$470) {
  HEAP32[$__parent$i115$i$i >> 2] = 3220;
  $$0$i7$i234$i$i = 3220;
  $491 = 3220;
  label = 207;
 } else {
  $__nd$0$i$i227$i$i = $470;
  while (1) {
   $472 = HEAP32[$__nd$0$i$i227$i$i + 16 >> 2] | 0;
   if (($472 | 0) > 15) {
    $474 = HEAP32[$__nd$0$i$i227$i$i >> 2] | 0;
    if (!$474) {
     $$lcssa370 = $__nd$0$i$i227$i$i;
     $__nd$0$i$i227$i$i$lcssa368 = $__nd$0$i$i227$i$i;
     label = 200;
     break;
    } else $__nd$0$be$in$i$i228$i$i = $474;
   } else {
    if (($472 | 0) >= 15) {
     $__nd$0$i$i227$i$i$lcssa = $__nd$0$i$i227$i$i;
     label = 206;
     break;
    }
    $478 = $__nd$0$i$i227$i$i + 4 | 0;
    $479 = HEAP32[$478 >> 2] | 0;
    if (!$479) {
     $$lcssa369 = $478;
     $__nd$0$i$i227$i$i$lcssa367 = $__nd$0$i$i227$i$i;
     label = 204;
     break;
    } else $__nd$0$be$in$i$i228$i$i = $479;
   }
   $__nd$0$i$i227$i$i = $__nd$0$be$in$i$i228$i$i;
  }
  if ((label | 0) == 200) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i227$i$i$lcssa368;
   $$0$i7$i234$i$i = $$lcssa370;
   $491 = $__nd$0$i$i227$i$i$lcssa368;
   label = 207;
   break;
  } else if ((label | 0) == 204) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i227$i$i$lcssa367;
   $$0$i7$i234$i$i = $$lcssa369;
   $491 = $__nd$0$i$i227$i$i$lcssa367;
   label = 207;
   break;
  } else if ((label | 0) == 206) {
   HEAP32[$__parent$i115$i$i >> 2] = $__nd$0$i$i227$i$i$lcssa;
   if (!$__nd$0$i$i227$i$i$lcssa) {
    $$0$i7$i234$i$i = $__parent$i115$i$i;
    $491 = $__nd$0$i$i227$i$i$lcssa;
    label = 207;
    break;
   } else {
    $502 = $470;
    $__r$0$i238$i$i = $__nd$0$i$i227$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 207) {
  __THREW__ = 0;
  $484 = invoke_ii(67, 24) | 0;
  $485 = __THREW__;
  __THREW__ = 0;
  if ($485 & 1) {
   $534 = $470;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$484 + 16 >> 2] = 15;
  HEAP32[$484 + 20 >> 2] = 0;
  HEAP32[$484 >> 2] = 0;
  HEAP32[$484 + 4 >> 2] = 0;
  HEAP32[$484 + 8 >> 2] = $491;
  HEAP32[$$0$i7$i234$i$i >> 2] = $484;
  $493 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$493) $497 = $484; else {
   HEAP32[804] = $493;
   $497 = HEAP32[$$0$i7$i234$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $497);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $502 = HEAP32[805] | 0;
  $__r$0$i238$i$i = $484;
 }
 HEAP32[$__r$0$i238$i$i + 20 >> 2] = 13;
 do if (!$502) {
  HEAP32[$__parent$i123$i$i >> 2] = 3220;
  $$0$i7$i250$i$i = 3220;
  $523 = 3220;
  label = 221;
 } else {
  $__nd$0$i$i243$i$i = $502;
  while (1) {
   $504 = HEAP32[$__nd$0$i$i243$i$i + 16 >> 2] | 0;
   if (($504 | 0) > 16) {
    $506 = HEAP32[$__nd$0$i$i243$i$i >> 2] | 0;
    if (!$506) {
     $$lcssa366 = $__nd$0$i$i243$i$i;
     $__nd$0$i$i243$i$i$lcssa365 = $__nd$0$i$i243$i$i;
     label = 214;
     break;
    } else $__nd$0$be$in$i$i244$i$i = $506;
   } else {
    if (($504 | 0) >= 16) {
     $__nd$0$i$i243$i$i$lcssa = $__nd$0$i$i243$i$i;
     label = 220;
     break;
    }
    $510 = $__nd$0$i$i243$i$i + 4 | 0;
    $511 = HEAP32[$510 >> 2] | 0;
    if (!$511) {
     $$lcssa = $510;
     $__nd$0$i$i243$i$i$lcssa364 = $__nd$0$i$i243$i$i;
     label = 218;
     break;
    } else $__nd$0$be$in$i$i244$i$i = $511;
   }
   $__nd$0$i$i243$i$i = $__nd$0$be$in$i$i244$i$i;
  }
  if ((label | 0) == 214) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i243$i$i$lcssa365;
   $$0$i7$i250$i$i = $$lcssa366;
   $523 = $__nd$0$i$i243$i$i$lcssa365;
   label = 221;
   break;
  } else if ((label | 0) == 218) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i243$i$i$lcssa364;
   $$0$i7$i250$i$i = $$lcssa;
   $523 = $__nd$0$i$i243$i$i$lcssa364;
   label = 221;
   break;
  } else if ((label | 0) == 220) {
   HEAP32[$__parent$i123$i$i >> 2] = $__nd$0$i$i243$i$i$lcssa;
   if (!$__nd$0$i$i243$i$i$lcssa) {
    $$0$i7$i250$i$i = $__parent$i123$i$i;
    $523 = $__nd$0$i$i243$i$i$lcssa;
    label = 221;
    break;
   } else {
    $__r$0$i254$i$i = $__nd$0$i$i243$i$i$lcssa;
    break;
   }
  }
 } while (0);
 if ((label | 0) == 221) {
  __THREW__ = 0;
  $516 = invoke_ii(67, 24) | 0;
  $517 = __THREW__;
  __THREW__ = 0;
  if ($517 & 1) {
   $534 = $502;
   $532 = ___cxa_find_matching_catch() | 0;
   $533 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(3216, $534);
   ___resumeException($532 | 0);
  }
  HEAP32[$516 + 16 >> 2] = 16;
  HEAP32[$516 + 20 >> 2] = 0;
  HEAP32[$516 >> 2] = 0;
  HEAP32[$516 + 4 >> 2] = 0;
  HEAP32[$516 + 8 >> 2] = $523;
  HEAP32[$$0$i7$i250$i$i >> 2] = $516;
  $525 = HEAP32[HEAP32[804] >> 2] | 0;
  if (!$525) $529 = $516; else {
   HEAP32[804] = $525;
   $529 = HEAP32[$$0$i7$i250$i$i >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[805] | 0, $529);
  HEAP32[806] = (HEAP32[806] | 0) + 1;
  $__r$0$i254$i$i = $516;
 }
 HEAP32[$__r$0$i254$i$i + 20 >> 2] = 14;
 ___cxa_atexit(176, 3216, ___dso_handle | 0) | 0;
 HEAP32[808] = 0;
 HEAP32[809] = 0;
 HEAP32[807] = 3232;
 __THREW__ = 0;
 invoke_viii(3, $__parent$i91$i$i | 0, 54200, 1);
 $536 = __THREW__;
 __THREW__ = 0;
 do if (!($536 & 1)) {
  $538 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3228, $__parent$i99$i$i, $__parent$i91$i$i) | 0;
  $539 = HEAP32[$538 >> 2] | 0;
  if (!$539) {
   __THREW__ = 0;
   $541 = invoke_ii(67, 32) | 0;
   $542 = __THREW__;
   __THREW__ = 0;
   if ($542 & 1) {
    $625 = ___cxa_find_matching_catch() | 0;
    $626 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i91$i$i);
    $$0$i$i = $626;
    $$01$i$i = $625;
    $633 = HEAP32[808] | 0;
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3228, $633);
    ___resumeException($$01$i$i | 0);
   }
   $544 = $541 + 16 | 0;
   HEAP32[$544 >> 2] = HEAP32[$__parent$i91$i$i >> 2];
   HEAP32[$544 + 4 >> 2] = HEAP32[$__parent$i91$i$i + 4 >> 2];
   HEAP32[$544 + 8 >> 2] = HEAP32[$__parent$i91$i$i + 8 >> 2];
   HEAP32[$__parent$i91$i$i >> 2] = 0;
   HEAP32[$__parent$i91$i$i + 4 >> 2] = 0;
   HEAP32[$__parent$i91$i$i + 8 >> 2] = 0;
   HEAP32[$541 + 28 >> 2] = 0;
   $546 = HEAP32[$__parent$i99$i$i >> 2] | 0;
   HEAP32[$541 >> 2] = 0;
   HEAP32[$541 + 4 >> 2] = 0;
   HEAP32[$541 + 8 >> 2] = $546;
   HEAP32[$538 >> 2] = $541;
   $550 = HEAP32[HEAP32[807] >> 2] | 0;
   if (!$550) $554 = $541; else {
    HEAP32[807] = $550;
    $554 = HEAP32[$538 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[808] | 0, $554);
   HEAP32[809] = (HEAP32[809] | 0) + 1;
   $__r$0$i$i$i = $541;
  } else $__r$0$i$i$i = $539;
  HEAP32[$__r$0$i$i$i + 28 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i91$i$i);
  __THREW__ = 0;
  invoke_viii(3, $__parent$i83$i$i | 0, 54198, 1);
  $558 = __THREW__;
  __THREW__ = 0;
  if (!($558 & 1)) {
   $560 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3228, $__parent$i107$i$i, $__parent$i83$i$i) | 0;
   $561 = HEAP32[$560 >> 2] | 0;
   if (!$561) {
    __THREW__ = 0;
    $563 = invoke_ii(67, 32) | 0;
    $564 = __THREW__;
    __THREW__ = 0;
    if ($564 & 1) {
     $627 = ___cxa_find_matching_catch() | 0;
     $628 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i83$i$i);
     $$0$i$i = $628;
     $$01$i$i = $627;
     $633 = HEAP32[808] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3228, $633);
     ___resumeException($$01$i$i | 0);
    }
    $566 = $563 + 16 | 0;
    HEAP32[$566 >> 2] = HEAP32[$__parent$i83$i$i >> 2];
    HEAP32[$566 + 4 >> 2] = HEAP32[$__parent$i83$i$i + 4 >> 2];
    HEAP32[$566 + 8 >> 2] = HEAP32[$__parent$i83$i$i + 8 >> 2];
    HEAP32[$__parent$i83$i$i >> 2] = 0;
    HEAP32[$__parent$i83$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i83$i$i + 8 >> 2] = 0;
    HEAP32[$563 + 28 >> 2] = 0;
    $568 = HEAP32[$__parent$i107$i$i >> 2] | 0;
    HEAP32[$563 >> 2] = 0;
    HEAP32[$563 + 4 >> 2] = 0;
    HEAP32[$563 + 8 >> 2] = $568;
    HEAP32[$560 >> 2] = $563;
    $572 = HEAP32[HEAP32[807] >> 2] | 0;
    if (!$572) $576 = $563; else {
     HEAP32[807] = $572;
     $576 = HEAP32[$560 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[808] | 0, $576);
    HEAP32[809] = (HEAP32[809] | 0) + 1;
    $__r$0$i6$i$i = $563;
   } else $__r$0$i6$i$i = $561;
   HEAP32[$__r$0$i6$i$i + 28 >> 2] = 1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i83$i$i);
   __THREW__ = 0;
   invoke_viii(3, $__parent$i75$i$i | 0, 54196, 1);
   $580 = __THREW__;
   __THREW__ = 0;
   if ($580 & 1) break;
   $582 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3228, $__parent$i115$i$i, $__parent$i75$i$i) | 0;
   $583 = HEAP32[$582 >> 2] | 0;
   if (!$583) {
    __THREW__ = 0;
    $585 = invoke_ii(67, 32) | 0;
    $586 = __THREW__;
    __THREW__ = 0;
    if ($586 & 1) {
     $629 = ___cxa_find_matching_catch() | 0;
     $630 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i75$i$i);
     $$0$i$i = $630;
     $$01$i$i = $629;
     $633 = HEAP32[808] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3228, $633);
     ___resumeException($$01$i$i | 0);
    }
    $588 = $585 + 16 | 0;
    HEAP32[$588 >> 2] = HEAP32[$__parent$i75$i$i >> 2];
    HEAP32[$588 + 4 >> 2] = HEAP32[$__parent$i75$i$i + 4 >> 2];
    HEAP32[$588 + 8 >> 2] = HEAP32[$__parent$i75$i$i + 8 >> 2];
    HEAP32[$__parent$i75$i$i >> 2] = 0;
    HEAP32[$__parent$i75$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i75$i$i + 8 >> 2] = 0;
    HEAP32[$585 + 28 >> 2] = 0;
    $590 = HEAP32[$__parent$i115$i$i >> 2] | 0;
    HEAP32[$585 >> 2] = 0;
    HEAP32[$585 + 4 >> 2] = 0;
    HEAP32[$585 + 8 >> 2] = $590;
    HEAP32[$582 >> 2] = $585;
    $594 = HEAP32[HEAP32[807] >> 2] | 0;
    if (!$594) $598 = $585; else {
     HEAP32[807] = $594;
     $598 = HEAP32[$582 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[808] | 0, $598);
    HEAP32[809] = (HEAP32[809] | 0) + 1;
    $__r$0$i14$i$i3 = $585;
   } else $__r$0$i14$i$i3 = $583;
   HEAP32[$__r$0$i14$i$i3 + 28 >> 2] = 2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i75$i$i);
   __THREW__ = 0;
   invoke_viii(3, $__parent$i67$i$i | 0, 54787, 1);
   $602 = __THREW__;
   __THREW__ = 0;
   if ($602 & 1) break;
   $604 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3228, $__parent$i123$i$i, $__parent$i67$i$i) | 0;
   $605 = HEAP32[$604 >> 2] | 0;
   if (!$605) {
    __THREW__ = 0;
    $607 = invoke_ii(67, 32) | 0;
    $608 = __THREW__;
    __THREW__ = 0;
    if ($608 & 1) {
     $631 = ___cxa_find_matching_catch() | 0;
     $632 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i67$i$i);
     $$0$i$i = $632;
     $$01$i$i = $631;
     $633 = HEAP32[808] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3228, $633);
     ___resumeException($$01$i$i | 0);
    }
    $610 = $607 + 16 | 0;
    HEAP32[$610 >> 2] = HEAP32[$__parent$i67$i$i >> 2];
    HEAP32[$610 + 4 >> 2] = HEAP32[$__parent$i67$i$i + 4 >> 2];
    HEAP32[$610 + 8 >> 2] = HEAP32[$__parent$i67$i$i + 8 >> 2];
    HEAP32[$__parent$i67$i$i >> 2] = 0;
    HEAP32[$__parent$i67$i$i + 4 >> 2] = 0;
    HEAP32[$__parent$i67$i$i + 8 >> 2] = 0;
    HEAP32[$607 + 28 >> 2] = 0;
    $612 = HEAP32[$__parent$i123$i$i >> 2] | 0;
    HEAP32[$607 >> 2] = 0;
    HEAP32[$607 + 4 >> 2] = 0;
    HEAP32[$607 + 8 >> 2] = $612;
    HEAP32[$604 >> 2] = $607;
    $616 = HEAP32[HEAP32[807] >> 2] | 0;
    if (!$616) $620 = $607; else {
     HEAP32[807] = $616;
     $620 = HEAP32[$604 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[808] | 0, $620);
    HEAP32[809] = (HEAP32[809] | 0) + 1;
    $__r$0$i22$i$i = $607;
   } else $__r$0$i22$i$i = $605;
   HEAP32[$__r$0$i22$i$i + 28 >> 2] = 3;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__parent$i67$i$i);
   ___cxa_atexit(177, 3228, ___dso_handle | 0) | 0;
   HEAP32[811] = 0;
   HEAP32[812] = 0;
   HEAP32[810] = 3244;
   __THREW__ = 0;
   invoke_viii(3, $0 | 0, 54320, 1);
   $635 = __THREW__;
   __THREW__ = 0;
   do if (!($635 & 1)) {
    $637 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i$i$i7, $0) | 0;
    $638 = HEAP32[$637 >> 2] | 0;
    if (!$638) {
     __THREW__ = 0;
     $640 = invoke_ii(67, 32) | 0;
     $641 = __THREW__;
     __THREW__ = 0;
     if ($641 & 1) {
      $1010 = ___cxa_find_matching_catch() | 0;
      $1011 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $$0$i$i45 = $1011;
      $$01$i$i44 = $1010;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $643 = $640 + 16 | 0;
     HEAP32[$643 >> 2] = HEAP32[$0 >> 2];
     HEAP32[$643 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
     HEAP32[$643 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
     HEAP32[$0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     HEAP32[$640 + 28 >> 2] = 0;
     $645 = HEAP32[$__parent$i$i$i7 >> 2] | 0;
     HEAP32[$640 >> 2] = 0;
     HEAP32[$640 + 4 >> 2] = 0;
     HEAP32[$640 + 8 >> 2] = $645;
     HEAP32[$637 >> 2] = $640;
     $649 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$649) $653 = $640; else {
      HEAP32[810] = $649;
      $653 = HEAP32[$637 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $653);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i$i$i11 = $640;
    } else $__r$0$i$i$i11 = $638;
    HEAP32[$__r$0$i$i$i11 + 28 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __THREW__ = 0;
    invoke_viii(3, $1 | 0, 54322, 1);
    $657 = __THREW__;
    __THREW__ = 0;
    if ($657 & 1) break;
    $659 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i3$i$i6, $1) | 0;
    $660 = HEAP32[$659 >> 2] | 0;
    if (!$660) {
     __THREW__ = 0;
     $662 = invoke_ii(67, 32) | 0;
     $663 = __THREW__;
     __THREW__ = 0;
     if ($663 & 1) {
      $1012 = ___cxa_find_matching_catch() | 0;
      $1013 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$0$i$i45 = $1013;
      $$01$i$i44 = $1012;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $665 = $662 + 16 | 0;
     HEAP32[$665 >> 2] = HEAP32[$1 >> 2];
     HEAP32[$665 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
     HEAP32[$665 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
     HEAP32[$1 >> 2] = 0;
     HEAP32[$1 + 4 >> 2] = 0;
     HEAP32[$1 + 8 >> 2] = 0;
     HEAP32[$662 + 28 >> 2] = 0;
     $667 = HEAP32[$__parent$i3$i$i6 >> 2] | 0;
     HEAP32[$662 >> 2] = 0;
     HEAP32[$662 + 4 >> 2] = 0;
     HEAP32[$662 + 8 >> 2] = $667;
     HEAP32[$659 >> 2] = $662;
     $671 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$671) $675 = $662; else {
      HEAP32[810] = $671;
      $675 = HEAP32[$659 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $675);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i6$i$i15 = $662;
    } else $__r$0$i6$i$i15 = $660;
    HEAP32[$__r$0$i6$i$i15 + 28 >> 2] = 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __THREW__ = 0;
    invoke_viii(3, $2 | 0, 54196, 1);
    $679 = __THREW__;
    __THREW__ = 0;
    if ($679 & 1) break;
    $681 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i11$i$i5, $2) | 0;
    $682 = HEAP32[$681 >> 2] | 0;
    if (!$682) {
     __THREW__ = 0;
     $684 = invoke_ii(67, 32) | 0;
     $685 = __THREW__;
     __THREW__ = 0;
     if ($685 & 1) {
      $1014 = ___cxa_find_matching_catch() | 0;
      $1015 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      $$0$i$i45 = $1015;
      $$01$i$i44 = $1014;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $687 = $684 + 16 | 0;
     HEAP32[$687 >> 2] = HEAP32[$2 >> 2];
     HEAP32[$687 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
     HEAP32[$687 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
     HEAP32[$2 >> 2] = 0;
     HEAP32[$2 + 4 >> 2] = 0;
     HEAP32[$2 + 8 >> 2] = 0;
     HEAP32[$684 + 28 >> 2] = 0;
     $689 = HEAP32[$__parent$i11$i$i5 >> 2] | 0;
     HEAP32[$684 >> 2] = 0;
     HEAP32[$684 + 4 >> 2] = 0;
     HEAP32[$684 + 8 >> 2] = $689;
     HEAP32[$681 >> 2] = $684;
     $693 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$693) $697 = $684; else {
      HEAP32[810] = $693;
      $697 = HEAP32[$681 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $697);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i14$i$i19 = $684;
    } else $__r$0$i14$i$i19 = $682;
    HEAP32[$__r$0$i14$i$i19 + 28 >> 2] = 2;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 54787, 1);
    $701 = __THREW__;
    __THREW__ = 0;
    if ($701 & 1) break;
    $703 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i19$i$i4, $3) | 0;
    $704 = HEAP32[$703 >> 2] | 0;
    if (!$704) {
     __THREW__ = 0;
     $706 = invoke_ii(67, 32) | 0;
     $707 = __THREW__;
     __THREW__ = 0;
     if ($707 & 1) {
      $1016 = ___cxa_find_matching_catch() | 0;
      $1017 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$0$i$i45 = $1017;
      $$01$i$i44 = $1016;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $709 = $706 + 16 | 0;
     HEAP32[$709 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$709 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$709 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     HEAP32[$3 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     HEAP32[$706 + 28 >> 2] = 0;
     $711 = HEAP32[$__parent$i19$i$i4 >> 2] | 0;
     HEAP32[$706 >> 2] = 0;
     HEAP32[$706 + 4 >> 2] = 0;
     HEAP32[$706 + 8 >> 2] = $711;
     HEAP32[$703 >> 2] = $706;
     $715 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$715) $719 = $706; else {
      HEAP32[810] = $715;
      $719 = HEAP32[$703 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $719);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i22$i$i23 = $706;
    } else $__r$0$i22$i$i23 = $704;
    HEAP32[$__r$0$i22$i$i23 + 28 >> 2] = 3;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    invoke_viii(3, $4 | 0, 54324, 2);
    $723 = __THREW__;
    __THREW__ = 0;
    if ($723 & 1) break;
    $725 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i27$i$i, $4) | 0;
    $726 = HEAP32[$725 >> 2] | 0;
    if (!$726) {
     __THREW__ = 0;
     $728 = invoke_ii(67, 32) | 0;
     $729 = __THREW__;
     __THREW__ = 0;
     if ($729 & 1) {
      $1018 = ___cxa_find_matching_catch() | 0;
      $1019 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$0$i$i45 = $1019;
      $$01$i$i44 = $1018;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $731 = $728 + 16 | 0;
     HEAP32[$731 >> 2] = HEAP32[$4 >> 2];
     HEAP32[$731 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
     HEAP32[$731 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
     HEAP32[$4 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     HEAP32[$728 + 28 >> 2] = 0;
     $733 = HEAP32[$__parent$i27$i$i >> 2] | 0;
     HEAP32[$728 >> 2] = 0;
     HEAP32[$728 + 4 >> 2] = 0;
     HEAP32[$728 + 8 >> 2] = $733;
     HEAP32[$725 >> 2] = $728;
     $737 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$737) $741 = $728; else {
      HEAP32[810] = $737;
      $741 = HEAP32[$725 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $741);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i30$i$i26 = $728;
    } else $__r$0$i30$i$i26 = $726;
    HEAP32[$__r$0$i30$i$i26 + 28 >> 2] = 4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    __THREW__ = 0;
    invoke_viii(3, $5 | 0, 54327, 2);
    $745 = __THREW__;
    __THREW__ = 0;
    if ($745 & 1) break;
    $747 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i35$i$i, $5) | 0;
    $748 = HEAP32[$747 >> 2] | 0;
    if (!$748) {
     __THREW__ = 0;
     $750 = invoke_ii(67, 32) | 0;
     $751 = __THREW__;
     __THREW__ = 0;
     if ($751 & 1) {
      $1020 = ___cxa_find_matching_catch() | 0;
      $1021 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      $$0$i$i45 = $1021;
      $$01$i$i44 = $1020;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $753 = $750 + 16 | 0;
     HEAP32[$753 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$753 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$753 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     HEAP32[$5 >> 2] = 0;
     HEAP32[$5 + 4 >> 2] = 0;
     HEAP32[$5 + 8 >> 2] = 0;
     HEAP32[$750 + 28 >> 2] = 0;
     $755 = HEAP32[$__parent$i35$i$i >> 2] | 0;
     HEAP32[$750 >> 2] = 0;
     HEAP32[$750 + 4 >> 2] = 0;
     HEAP32[$750 + 8 >> 2] = $755;
     HEAP32[$747 >> 2] = $750;
     $759 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$759) $763 = $750; else {
      HEAP32[810] = $759;
      $763 = HEAP32[$747 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $763);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i38$i$i = $750;
    } else $__r$0$i38$i$i = $748;
    HEAP32[$__r$0$i38$i$i + 28 >> 2] = 5;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    __THREW__ = 0;
    invoke_viii(3, $6 | 0, 52377, 1);
    $767 = __THREW__;
    __THREW__ = 0;
    if ($767 & 1) break;
    $769 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i43$i$i, $6) | 0;
    $770 = HEAP32[$769 >> 2] | 0;
    if (!$770) {
     __THREW__ = 0;
     $772 = invoke_ii(67, 32) | 0;
     $773 = __THREW__;
     __THREW__ = 0;
     if ($773 & 1) {
      $1022 = ___cxa_find_matching_catch() | 0;
      $1023 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      $$0$i$i45 = $1023;
      $$01$i$i44 = $1022;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $775 = $772 + 16 | 0;
     HEAP32[$775 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$775 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$775 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     HEAP32[$6 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     HEAP32[$772 + 28 >> 2] = 0;
     $777 = HEAP32[$__parent$i43$i$i >> 2] | 0;
     HEAP32[$772 >> 2] = 0;
     HEAP32[$772 + 4 >> 2] = 0;
     HEAP32[$772 + 8 >> 2] = $777;
     HEAP32[$769 >> 2] = $772;
     $781 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$781) $785 = $772; else {
      HEAP32[810] = $781;
      $785 = HEAP32[$769 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $785);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i46$i$i29 = $772;
    } else $__r$0$i46$i$i29 = $770;
    HEAP32[$__r$0$i46$i$i29 + 28 >> 2] = 6;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __THREW__ = 0;
    invoke_viii(3, $7 | 0, 54330, 2);
    $789 = __THREW__;
    __THREW__ = 0;
    if ($789 & 1) break;
    $791 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i51$i$i, $7) | 0;
    $792 = HEAP32[$791 >> 2] | 0;
    if (!$792) {
     __THREW__ = 0;
     $794 = invoke_ii(67, 32) | 0;
     $795 = __THREW__;
     __THREW__ = 0;
     if ($795 & 1) {
      $1024 = ___cxa_find_matching_catch() | 0;
      $1025 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$0$i$i45 = $1025;
      $$01$i$i44 = $1024;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $797 = $794 + 16 | 0;
     HEAP32[$797 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$797 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$797 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     HEAP32[$7 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     HEAP32[$794 + 28 >> 2] = 0;
     $799 = HEAP32[$__parent$i51$i$i >> 2] | 0;
     HEAP32[$794 >> 2] = 0;
     HEAP32[$794 + 4 >> 2] = 0;
     HEAP32[$794 + 8 >> 2] = $799;
     HEAP32[$791 >> 2] = $794;
     $803 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$803) $807 = $794; else {
      HEAP32[810] = $803;
      $807 = HEAP32[$791 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $807);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i54$i$i = $794;
    } else $__r$0$i54$i$i = $792;
    HEAP32[$__r$0$i54$i$i + 28 >> 2] = 7;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    __THREW__ = 0;
    invoke_viii(3, $8 | 0, 54333, 1);
    $811 = __THREW__;
    __THREW__ = 0;
    if ($811 & 1) break;
    $813 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i59$i$i, $8) | 0;
    $814 = HEAP32[$813 >> 2] | 0;
    if (!$814) {
     __THREW__ = 0;
     $816 = invoke_ii(67, 32) | 0;
     $817 = __THREW__;
     __THREW__ = 0;
     if ($817 & 1) {
      $1026 = ___cxa_find_matching_catch() | 0;
      $1027 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $$0$i$i45 = $1027;
      $$01$i$i44 = $1026;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $819 = $816 + 16 | 0;
     HEAP32[$819 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$819 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$819 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     HEAP32[$8 >> 2] = 0;
     HEAP32[$8 + 4 >> 2] = 0;
     HEAP32[$8 + 8 >> 2] = 0;
     HEAP32[$816 + 28 >> 2] = 0;
     $821 = HEAP32[$__parent$i59$i$i >> 2] | 0;
     HEAP32[$816 >> 2] = 0;
     HEAP32[$816 + 4 >> 2] = 0;
     HEAP32[$816 + 8 >> 2] = $821;
     HEAP32[$813 >> 2] = $816;
     $825 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$825) $829 = $816; else {
      HEAP32[810] = $825;
      $829 = HEAP32[$813 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $829);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i62$i$i32 = $816;
    } else $__r$0$i62$i$i32 = $814;
    HEAP32[$__r$0$i62$i$i32 + 28 >> 2] = 8;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    __THREW__ = 0;
    invoke_viii(3, $9 | 0, 54335, 2);
    $833 = __THREW__;
    __THREW__ = 0;
    if ($833 & 1) break;
    $835 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i67$i$i, $9) | 0;
    $836 = HEAP32[$835 >> 2] | 0;
    if (!$836) {
     __THREW__ = 0;
     $838 = invoke_ii(67, 32) | 0;
     $839 = __THREW__;
     __THREW__ = 0;
     if ($839 & 1) {
      $1028 = ___cxa_find_matching_catch() | 0;
      $1029 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      $$0$i$i45 = $1029;
      $$01$i$i44 = $1028;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $841 = $838 + 16 | 0;
     HEAP32[$841 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$841 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$841 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     HEAP32[$9 >> 2] = 0;
     HEAP32[$9 + 4 >> 2] = 0;
     HEAP32[$9 + 8 >> 2] = 0;
     HEAP32[$838 + 28 >> 2] = 0;
     $843 = HEAP32[$__parent$i67$i$i >> 2] | 0;
     HEAP32[$838 >> 2] = 0;
     HEAP32[$838 + 4 >> 2] = 0;
     HEAP32[$838 + 8 >> 2] = $843;
     HEAP32[$835 >> 2] = $838;
     $847 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$847) $851 = $838; else {
      HEAP32[810] = $847;
      $851 = HEAP32[$835 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $851);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i70$i$i = $838;
    } else $__r$0$i70$i$i = $836;
    HEAP32[$__r$0$i70$i$i + 28 >> 2] = 9;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __THREW__ = 0;
    invoke_viii(3, $10 | 0, 54338, 2);
    $855 = __THREW__;
    __THREW__ = 0;
    if ($855 & 1) break;
    $857 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i75$i$i, $10) | 0;
    $858 = HEAP32[$857 >> 2] | 0;
    if (!$858) {
     __THREW__ = 0;
     $860 = invoke_ii(67, 32) | 0;
     $861 = __THREW__;
     __THREW__ = 0;
     if ($861 & 1) {
      $1030 = ___cxa_find_matching_catch() | 0;
      $1031 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
      $$0$i$i45 = $1031;
      $$01$i$i44 = $1030;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $863 = $860 + 16 | 0;
     HEAP32[$863 >> 2] = HEAP32[$10 >> 2];
     HEAP32[$863 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
     HEAP32[$863 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
     HEAP32[$10 >> 2] = 0;
     HEAP32[$10 + 4 >> 2] = 0;
     HEAP32[$10 + 8 >> 2] = 0;
     HEAP32[$860 + 28 >> 2] = 0;
     $865 = HEAP32[$__parent$i75$i$i >> 2] | 0;
     HEAP32[$860 >> 2] = 0;
     HEAP32[$860 + 4 >> 2] = 0;
     HEAP32[$860 + 8 >> 2] = $865;
     HEAP32[$857 >> 2] = $860;
     $869 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$869) $873 = $860; else {
      HEAP32[810] = $869;
      $873 = HEAP32[$857 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $873);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i78$i$i35 = $860;
    } else $__r$0$i78$i$i35 = $858;
    HEAP32[$__r$0$i78$i$i35 + 28 >> 2] = 10;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    __THREW__ = 0;
    invoke_viii(3, $11 | 0, 54341, 2);
    $877 = __THREW__;
    __THREW__ = 0;
    if ($877 & 1) break;
    $879 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i83$i$i, $11) | 0;
    $880 = HEAP32[$879 >> 2] | 0;
    if (!$880) {
     __THREW__ = 0;
     $882 = invoke_ii(67, 32) | 0;
     $883 = __THREW__;
     __THREW__ = 0;
     if ($883 & 1) {
      $1032 = ___cxa_find_matching_catch() | 0;
      $1033 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
      $$0$i$i45 = $1033;
      $$01$i$i44 = $1032;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $885 = $882 + 16 | 0;
     HEAP32[$885 >> 2] = HEAP32[$11 >> 2];
     HEAP32[$885 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
     HEAP32[$885 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
     HEAP32[$11 >> 2] = 0;
     HEAP32[$11 + 4 >> 2] = 0;
     HEAP32[$11 + 8 >> 2] = 0;
     HEAP32[$882 + 28 >> 2] = 0;
     $887 = HEAP32[$__parent$i83$i$i >> 2] | 0;
     HEAP32[$882 >> 2] = 0;
     HEAP32[$882 + 4 >> 2] = 0;
     HEAP32[$882 + 8 >> 2] = $887;
     HEAP32[$879 >> 2] = $882;
     $891 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$891) $895 = $882; else {
      HEAP32[810] = $891;
      $895 = HEAP32[$879 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $895);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i86$i$i = $882;
    } else $__r$0$i86$i$i = $880;
    HEAP32[$__r$0$i86$i$i + 28 >> 2] = 11;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    __THREW__ = 0;
    invoke_viii(3, $12 | 0, 54344, 1);
    $899 = __THREW__;
    __THREW__ = 0;
    if ($899 & 1) break;
    $901 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i91$i$i, $12) | 0;
    $902 = HEAP32[$901 >> 2] | 0;
    if (!$902) {
     __THREW__ = 0;
     $904 = invoke_ii(67, 32) | 0;
     $905 = __THREW__;
     __THREW__ = 0;
     if ($905 & 1) {
      $1034 = ___cxa_find_matching_catch() | 0;
      $1035 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
      $$0$i$i45 = $1035;
      $$01$i$i44 = $1034;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $907 = $904 + 16 | 0;
     HEAP32[$907 >> 2] = HEAP32[$12 >> 2];
     HEAP32[$907 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
     HEAP32[$907 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
     HEAP32[$12 >> 2] = 0;
     HEAP32[$12 + 4 >> 2] = 0;
     HEAP32[$12 + 8 >> 2] = 0;
     HEAP32[$904 + 28 >> 2] = 0;
     $909 = HEAP32[$__parent$i91$i$i >> 2] | 0;
     HEAP32[$904 >> 2] = 0;
     HEAP32[$904 + 4 >> 2] = 0;
     HEAP32[$904 + 8 >> 2] = $909;
     HEAP32[$901 >> 2] = $904;
     $913 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$913) $917 = $904; else {
      HEAP32[810] = $913;
      $917 = HEAP32[$901 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $917);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i94$i$i38 = $904;
    } else $__r$0$i94$i$i38 = $902;
    HEAP32[$__r$0$i94$i$i38 + 28 >> 2] = 12;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    __THREW__ = 0;
    invoke_viii(3, $13 | 0, 54346, 1);
    $921 = __THREW__;
    __THREW__ = 0;
    if ($921 & 1) break;
    $923 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i99$i$i, $13) | 0;
    $924 = HEAP32[$923 >> 2] | 0;
    if (!$924) {
     __THREW__ = 0;
     $926 = invoke_ii(67, 32) | 0;
     $927 = __THREW__;
     __THREW__ = 0;
     if ($927 & 1) {
      $1036 = ___cxa_find_matching_catch() | 0;
      $1037 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
      $$0$i$i45 = $1037;
      $$01$i$i44 = $1036;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $929 = $926 + 16 | 0;
     HEAP32[$929 >> 2] = HEAP32[$13 >> 2];
     HEAP32[$929 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
     HEAP32[$929 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
     HEAP32[$13 >> 2] = 0;
     HEAP32[$13 + 4 >> 2] = 0;
     HEAP32[$13 + 8 >> 2] = 0;
     HEAP32[$926 + 28 >> 2] = 0;
     $931 = HEAP32[$__parent$i99$i$i >> 2] | 0;
     HEAP32[$926 >> 2] = 0;
     HEAP32[$926 + 4 >> 2] = 0;
     HEAP32[$926 + 8 >> 2] = $931;
     HEAP32[$923 >> 2] = $926;
     $935 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$935) $939 = $926; else {
      HEAP32[810] = $935;
      $939 = HEAP32[$923 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $939);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i102$i$i = $926;
    } else $__r$0$i102$i$i = $924;
    HEAP32[$__r$0$i102$i$i + 28 >> 2] = 13;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 54348, 1);
    $943 = __THREW__;
    __THREW__ = 0;
    if ($943 & 1) break;
    $945 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i107$i$i, $14) | 0;
    $946 = HEAP32[$945 >> 2] | 0;
    if (!$946) {
     __THREW__ = 0;
     $948 = invoke_ii(67, 32) | 0;
     $949 = __THREW__;
     __THREW__ = 0;
     if ($949 & 1) {
      $1038 = ___cxa_find_matching_catch() | 0;
      $1039 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
      $$0$i$i45 = $1039;
      $$01$i$i44 = $1038;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $951 = $948 + 16 | 0;
     HEAP32[$951 >> 2] = HEAP32[$14 >> 2];
     HEAP32[$951 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
     HEAP32[$951 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
     HEAP32[$14 >> 2] = 0;
     HEAP32[$14 + 4 >> 2] = 0;
     HEAP32[$14 + 8 >> 2] = 0;
     HEAP32[$948 + 28 >> 2] = 0;
     $953 = HEAP32[$__parent$i107$i$i >> 2] | 0;
     HEAP32[$948 >> 2] = 0;
     HEAP32[$948 + 4 >> 2] = 0;
     HEAP32[$948 + 8 >> 2] = $953;
     HEAP32[$945 >> 2] = $948;
     $957 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$957) $961 = $948; else {
      HEAP32[810] = $957;
      $961 = HEAP32[$945 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $961);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i110$i$i41 = $948;
    } else $__r$0$i110$i$i41 = $946;
    HEAP32[$__r$0$i110$i$i41 + 28 >> 2] = 14;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
    __THREW__ = 0;
    invoke_viii(3, $15 | 0, 54350, 2);
    $965 = __THREW__;
    __THREW__ = 0;
    if ($965 & 1) break;
    $967 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i115$i$i, $15) | 0;
    $968 = HEAP32[$967 >> 2] | 0;
    if (!$968) {
     __THREW__ = 0;
     $970 = invoke_ii(67, 32) | 0;
     $971 = __THREW__;
     __THREW__ = 0;
     if ($971 & 1) {
      $1040 = ___cxa_find_matching_catch() | 0;
      $1041 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      $$0$i$i45 = $1041;
      $$01$i$i44 = $1040;
      $1044 = HEAP32[811] | 0;
      __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
      ___resumeException($$01$i$i44 | 0);
     }
     $973 = $970 + 16 | 0;
     HEAP32[$973 >> 2] = HEAP32[$15 >> 2];
     HEAP32[$973 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
     HEAP32[$973 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
     HEAP32[$15 >> 2] = 0;
     HEAP32[$15 + 4 >> 2] = 0;
     HEAP32[$15 + 8 >> 2] = 0;
     HEAP32[$970 + 28 >> 2] = 0;
     $975 = HEAP32[$__parent$i115$i$i >> 2] | 0;
     HEAP32[$970 >> 2] = 0;
     HEAP32[$970 + 4 >> 2] = 0;
     HEAP32[$970 + 8 >> 2] = $975;
     HEAP32[$967 >> 2] = $970;
     $979 = HEAP32[HEAP32[810] >> 2] | 0;
     if (!$979) $983 = $970; else {
      HEAP32[810] = $979;
      $983 = HEAP32[$967 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $983);
     HEAP32[812] = (HEAP32[812] | 0) + 1;
     $__r$0$i118$i$i = $970;
    } else $__r$0$i118$i$i = $968;
    HEAP32[$__r$0$i118$i$i + 28 >> 2] = 15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    __THREW__ = 0;
    invoke_viii(3, $16 | 0, 54353, 2);
    $987 = __THREW__;
    __THREW__ = 0;
    if ($987 & 1) break;
    $989 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_(3240, $__parent$i123$i$i, $16) | 0;
    $990 = HEAP32[$989 >> 2] | 0;
    if ($990) {
     $__r$0$i126$i$i46 = $990;
     $1045 = $__r$0$i126$i$i46 + 28 | 0;
     HEAP32[$1045 >> 2] = 16;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     ___cxa_atexit(178, 3240, ___dso_handle | 0) | 0;
     STACKTOP = sp;
     return;
    }
    __THREW__ = 0;
    $992 = invoke_ii(67, 32) | 0;
    $993 = __THREW__;
    __THREW__ = 0;
    if ($993 & 1) {
     $1042 = ___cxa_find_matching_catch() | 0;
     $1043 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     $$0$i$i45 = $1043;
     $$01$i$i44 = $1042;
     $1044 = HEAP32[811] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
     ___resumeException($$01$i$i44 | 0);
    }
    $995 = $992 + 16 | 0;
    HEAP32[$995 >> 2] = HEAP32[$16 >> 2];
    HEAP32[$995 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
    HEAP32[$995 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
    HEAP32[$16 >> 2] = 0;
    HEAP32[$16 + 4 >> 2] = 0;
    HEAP32[$16 + 8 >> 2] = 0;
    HEAP32[$992 + 28 >> 2] = 0;
    $997 = HEAP32[$__parent$i123$i$i >> 2] | 0;
    HEAP32[$992 >> 2] = 0;
    HEAP32[$992 + 4 >> 2] = 0;
    HEAP32[$992 + 8 >> 2] = $997;
    HEAP32[$989 >> 2] = $992;
    $1001 = HEAP32[HEAP32[810] >> 2] | 0;
    if (!$1001) $1005 = $992; else {
     HEAP32[810] = $1001;
     $1005 = HEAP32[$989 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[811] | 0, $1005);
    HEAP32[812] = (HEAP32[812] | 0) + 1;
    $__r$0$i126$i$i46 = $992;
    $1045 = $__r$0$i126$i$i46 + 28 | 0;
    HEAP32[$1045 >> 2] = 16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
    ___cxa_atexit(178, 3240, ___dso_handle | 0) | 0;
    STACKTOP = sp;
    return;
   } while (0);
   $1008 = ___cxa_find_matching_catch() | 0;
   $$0$i$i45 = tempRet0;
   $$01$i$i44 = $1008;
   $1044 = HEAP32[811] | 0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3240, $1044);
   ___resumeException($$01$i$i44 | 0);
  }
 } while (0);
 $623 = ___cxa_find_matching_catch() | 0;
 $$0$i$i = tempRet0;
 $$01$i$i = $623;
 $633 = HEAP32[808] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE(3228, $633);
 ___resumeException($$01$i$i | 0);
}
function __ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE($agg$result, $ast_, $in_object, $vars) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 $in_object = $in_object | 0;
 $vars = $vars | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i122 = 0, $$0$i$i$i$i$i$i193 = 0, $$0$i$i$i$i$i124 = 0, $$0$i$i$i$i$i160 = 0, $$0$i$i$i$i$i195 = 0, $$0$i$i$i$i$i62 = 0, $$0$i$i$i$i$i95 = 0, $$0$i$i$i$i106 = 0, $$0$i$i$i$i132 = 0, $$0$i$i$i$i162 = 0, $$0$i$i$i$i86 = 0, $$0$i$i$i$i97 = 0, $$0$i$i$i108 = 0, $$0$i$i$i134 = 0, $$0$i$i$i177 = 0, $$0$i$i$i34 = 0, $$0$i$i$i42 = 0, $$0$i$i$i79 = 0, $$0$i$i$i87 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i119 = 0, $$0$ph$lcssa$i$i$i$i190 = 0, $$0$ph$lcssa$i$i$i150 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i$i = 0, $$0$ph6$i$i$i$i114 = 0, $$0$ph6$i$i$i$i185 = 0, $$0$ph6$i$i$i145 = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i127 = 0, $$01$i$i$i$i$i198 = 0, $$01$i$i$i$i100 = 0, $$01$i$i$i$i165 = 0, $$01$i$i$i111 = 0, $$01$i$i$i137 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i$i = 0, $$01$ph5$i$i$i$i115 = 0, $$01$ph5$i$i$i$i186 = 0, $$01$ph5$i$i$i146 = 0, $$013$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$013$i$i$i$i117 = 0, $$013$i$i$i$i117$lcssa = 0, $$013$i$i$i$i188 = 0, $$013$i$i$i$i188$lcssa = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i148 = 0, $$013$i$i$i148$lcssa = 0, $$014 = 0, $$016 = 0, $$018 = 0, $$02 = 0, $$0234 = 0, $$04233 = 0, $$1 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $$3 = 0, $$37 = 0, $$4 = 0, $$48 = 0, $$5 = 0, $$59 = 0, $$610259 = 0, $$6260 = 0, $$711265 = 0, $$7266 = 0, $$812273 = 0, $$8274 = 0, $$9 = 0, $$913 = 0, $$byval_copy34 = 0, $$lcssa = 0, $$lcssa546 = 0, $$lcssa551 = 0, $$lcssa552 = 0, $$lcssa559 = 0, $$lcssa560 = 0, $$lcssa563 = 0, $$lcssa564 = 0, $$lcssa565 = 0, $$lcssa568 = 0, $$pre$phi400Z2D = 0, $$pre$phi401Z2D = 0, $$pre398 = 0, $0 = 0, $1 = 0, $10 = 0, $1001 = 0, $1004 = 0, $1008 = 0, $1009 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $105 = 0, $107 = 0, $11 = 0, $111 = 0, $112 = 0, $115 = 0, $116 = 0, $12 = 0, $121 = 0, $125 = 0, $127 = 0, $13 = 0, $133 = 0, $135 = 0, $14 = 0, $141 = 0, $143 = 0, $147 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $155 = 0, $156 = 0, $159 = 0, $16 = 0, $163 = 0, $165 = 0, $169 = 0, $17 = 0, $170 = 0, $173 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $187 = 0, $188 = 0, $19 = 0, $192 = 0, $196 = 0, $2 = 0, $20 = 0, $200 = 0, $204 = 0, $205 = 0, $207 = 0, $21 = 0, $210 = 0, $214 = 0, $215 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $23 = 0, $230 = 0, $231 = 0, $24 = 0, $244 = 0, $245 = 0, $246 = 0, $25 = 0, $253 = 0, $255 = 0, $26 = 0, $265 = 0, $268 = 0, $27 = 0, $270 = 0, $271 = 0, $273 = 0, $275 = 0, $276 = 0, $278 = 0, $28 = 0, $280 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $287 = 0, $289 = 0, $29 = 0, $291 = 0, $295 = 0, $296 = 0, $3 = 0, $302 = 0, $303 = 0, $308 = 0, $31 = 0, $310 = 0, $314 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $327 = 0, $328 = 0, $334 = 0, $335 = 0, $340 = 0, $342 = 0, $346 = 0, $349 = 0, $35 = 0, $353 = 0, $355 = 0, $356 = 0, $358 = 0, $359 = 0, $360 = 0, $363 = 0, $364 = 0, $37 = 0, $378 = 0, $380 = 0, $383 = 0, $393 = 0, $394 = 0, $397 = 0, $4 = 0, $409 = 0, $413 = 0, $415 = 0, $42 = 0, $421 = 0, $423 = 0, $427 = 0, $428 = 0, $431 = 0, $432 = 0, $435 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $444 = 0, $445 = 0, $446 = 0, $448 = 0, $449 = 0, $451 = 0, $453 = 0, $457 = 0, $458 = 0, $46 = 0, $464 = 0, $465 = 0, $471 = 0, $473 = 0, $477 = 0, $48 = 0, $481 = 0, $483 = 0, $486 = 0, $49 = 0, $490 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $498 = 0, $499 = 0, $5 = 0, $500 = 0, $501 = 0, $504 = 0, $505 = 0, $509 = 0, $51 = 0, $513 = 0, $517 = 0, $521 = 0, $522 = 0, $524 = 0, $527 = 0, $531 = 0, $532 = 0, $534 = 0, $537 = 0, $538 = 0, $539 = 0, $541 = 0, $543 = 0, $545 = 0, $547 = 0, $551 = 0, $553 = 0, $556 = 0, $56 = 0, $560 = 0, $562 = 0, $564 = 0, $566 = 0, $567 = 0, $571 = 0, $573 = 0, $577 = 0, $579 = 0, $58 = 0, $582 = 0, $583 = 0, $597 = 0, $599 = 0, $6 = 0, $60 = 0, $602 = 0, $611 = 0, $613 = 0, $616 = 0, $62 = 0, $620 = 0, $621 = 0, $624 = 0, $64 = 0, $640 = 0, $642 = 0, $644 = 0, $647 = 0, $648 = 0, $650 = 0, $653 = 0, $654 = 0, $656 = 0, $659 = 0, $66 = 0, $661 = 0, $665 = 0, $67 = 0, $670 = 0, $671 = 0, $673 = 0, $674 = 0, $676 = 0, $678 = 0, $679 = 0, $680 = 0, $681 = 0, $682 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $691 = 0, $692 = 0, $696 = 0, $7 = 0, $70 = 0, $700 = 0, $704 = 0, $708 = 0, $709 = 0, $71 = 0, $711 = 0, $714 = 0, $718 = 0, $719 = 0, $721 = 0, $723 = 0, $725 = 0, $727 = 0, $73 = 0, $731 = 0, $732 = 0, $739 = 0, $740 = 0, $744 = 0, $747 = 0, $749 = 0, $753 = 0, $758 = 0, $76 = 0, $760 = 0, $766 = 0, $768 = 0, $772 = 0, $774 = 0, $775 = 0, $78 = 0, $789 = 0, $791 = 0, $794 = 0, $8 = 0, $80 = 0, $804 = 0, $806 = 0, $811 = 0, $813 = 0, $814 = 0, $817 = 0, $818 = 0, $82 = 0, $821 = 0, $822 = 0, $828 = 0, $829 = 0, $83 = 0, $832 = 0, $834 = 0, $835 = 0, $837 = 0, $839 = 0, $840 = 0, $842 = 0, $844 = 0, $845 = 0, $848 = 0, $849 = 0, $85 = 0, $852 = 0, $854 = 0, $855 = 0, $857 = 0, $859 = 0, $860 = 0, $862 = 0, $864 = 0, $865 = 0, $866 = 0, $870 = 0, $872 = 0, $876 = 0, $877 = 0, $880 = 0, $882 = 0, $883 = 0, $884 = 0, $886 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $908 = 0, $91 = 0, $910 = 0, $919 = 0, $922 = 0, $924 = 0, $925 = 0, $927 = 0, $929 = 0, $93 = 0, $930 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $939 = 0, $940 = 0, $947 = 0, $951 = 0, $954 = 0, $955 = 0, $957 = 0, $958 = 0, $964 = 0, $965 = 0, $967 = 0, $968 = 0, $97 = 0, $973 = 0, $974 = 0, $976 = 0, $977 = 0, $978 = 0, $980 = 0, $983 = 0, $985 = 0, $986 = 0, $987 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $996 = 0, $999 = 0, $__nd$0$be$in$i$i$i = 0, $__nd$0$be$in$i$i$i174 = 0, $__nd$0$be$in$i$i$i39 = 0, $__nd$0$be$in$i$i$i76 = 0, $__nd$0$i$i$i = 0, $__nd$0$i$i$i$lcssa = 0, $__nd$0$i$i$i$lcssa557 = 0, $__nd$0$i$i$i$lcssa558 = 0, $__nd$0$i$i$i173 = 0, $__nd$0$i$i$i173$lcssa = 0, $__nd$0$i$i$i173$lcssa544 = 0, $__nd$0$i$i$i173$lcssa545 = 0, $__nd$0$i$i$i38 = 0, $__nd$0$i$i$i38$lcssa = 0, $__nd$0$i$i$i38$lcssa561 = 0, $__nd$0$i$i$i38$lcssa562 = 0, $__nd$0$i$i$i75 = 0, $__nd$0$i$i$i75$lcssa = 0, $__nd$0$i$i$i75$lcssa549 = 0, $__nd$0$i$i$i75$lcssa550 = 0, $__parent$i$i = 0, $__parent$i$i$i = 0, $__parent$i$i$i154 = 0, $__parent$i$i$i89 = 0, $__parent$i$i36 = 0, $__parent$i$i73 = 0, $ast_vars = 0, $eh$lpad$body$index8Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body104$index24Z2D = 0, $eh$lpad$body104$indexZ2D = 0, $fv = 0, $fvs = 0, $id = 0, $lpad$phi293$index = 0, $lpad$phi293$index29 = 0, $lpad$phi303$index = 0, $lpad$phi303$index19 = 0, $new_vars = 0, $new_vars21 = 0, $new_vars35 = 0, $params = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $$byval_copy34 = sp + 136 | 0;
 $__parent$i$i$i154 = sp + 132 | 0;
 $0 = sp;
 $__parent$i$i$i89 = sp + 364 | 0;
 $1 = sp + 380 | 0;
 $__parent$i$i73 = sp + 128 | 0;
 $__parent$i$i36 = sp + 28 | 0;
 $__parent$i$i = sp + 272 | 0;
 $2 = sp + 32 | 0;
 $__parent$i$i$i = sp + 36 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 44 | 0;
 $5 = sp + 56 | 0;
 $6 = sp + 68 | 0;
 $7 = sp + 80 | 0;
 $8 = sp + 260 | 0;
 $9 = sp + 304 | 0;
 $10 = sp + 328 | 0;
 $11 = sp + 352 | 0;
 $12 = sp + 368 | 0;
 $new_vars = sp + 384 | 0;
 $params = sp + 396 | 0;
 $13 = sp + 140 | 0;
 $fv = sp + 152 | 0;
 $14 = sp + 164 | 0;
 $15 = sp + 176 | 0;
 $ast_vars = sp + 188 | 0;
 $new_vars21 = sp + 200 | 0;
 $fvs = sp + 212 | 0;
 $16 = sp + 224 | 0;
 $17 = sp + 236 | 0;
 $18 = sp + 248 | 0;
 $19 = sp + 4 | 0;
 $new_vars35 = sp + 292 | 0;
 $20 = sp + 92 | 0;
 $21 = sp + 16 | 0;
 $22 = sp + 104 | 0;
 $23 = sp + 316 | 0;
 $24 = sp + 116 | 0;
 $25 = sp + 340 | 0;
 $26 = sp + 280 | 0;
 $id = sp + 276 | 0;
 $27 = $agg$result + 4 | 0;
 HEAP32[$27 >> 2] = 0;
 $28 = $agg$result + 8 | 0;
 HEAP32[$28 >> 2] = 0;
 $29 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $29;
 L1 : do if (!$ast_) label = 355; else {
  $31 = ___dynamic_cast($ast_, 48, 72, 0) | 0;
  L3 : do if (!$31) {
   $73 = ___dynamic_cast($ast_, 48, 88, 0) | 0;
   if ($73) {
    $76 = HEAP32[$73 + 48 >> 2] | 0;
    $78 = HEAP32[$73 + 52 >> 2] | 0;
    if (($76 | 0) == ($78 | 0)) break;
    $80 = $6 + 4 | 0;
    $82 = $76;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(15, $6 | 0, HEAP32[$82 >> 2] | 0, $in_object | 0, $vars | 0);
     $83 = __THREW__;
     __THREW__ = 0;
     if ($83 & 1) {
      label = 12;
      break;
     }
     __THREW__ = 0;
     invoke_vii(58, $agg$result | 0, $6 | 0);
     $85 = __THREW__;
     __THREW__ = 0;
     if ($85 & 1) break;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$80 >> 2] | 0);
     $82 = $82 + 4 | 0;
     if (($82 | 0) == ($78 | 0)) break L3;
    }
    if ((label | 0) == 12) {
     $60 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $60;
     break L1;
    }
    $90 = ___cxa_find_matching_catch() | 0;
    $91 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($6, HEAP32[$80 >> 2] | 0);
    $$9 = $90;
    $$913 = $91;
    $1008 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
    ___resumeException($$9 | 0);
   }
   $93 = ___dynamic_cast($ast_, 48, 104, 0) | 0;
   if ($93) {
    __THREW__ = 0;
    invoke_viiii(15, $7 | 0, HEAP32[$93 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
    $97 = __THREW__;
    __THREW__ = 0;
    if ($97 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(58, $agg$result | 0, $7 | 0);
    $99 = __THREW__;
    __THREW__ = 0;
    if ($99 & 1) {
     $111 = ___cxa_find_matching_catch() | 0;
     $112 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$7 + 4 >> 2] | 0);
     $$9 = $111;
     $$913 = $112;
     $1008 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($7, HEAP32[$7 + 4 >> 2] | 0);
    __THREW__ = 0;
    invoke_viiii(15, $8 | 0, HEAP32[$93 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
    $105 = __THREW__;
    __THREW__ = 0;
    if ($105 & 1) {
     label = 14;
     break L1;
    }
    __THREW__ = 0;
    invoke_vii(58, $agg$result | 0, $8 | 0);
    $107 = __THREW__;
    __THREW__ = 0;
    if (!($107 & 1)) {
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$8 + 4 >> 2] | 0);
     break;
    }
    $115 = ___cxa_find_matching_catch() | 0;
    $116 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($8, HEAP32[$8 + 4 >> 2] | 0);
    $$9 = $115;
    $$913 = $116;
    $1008 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
    ___resumeException($$9 | 0);
   }
   if (!(___dynamic_cast($ast_, 48, 120, 0) | 0)) {
    $121 = ___dynamic_cast($ast_, 48, 136, 0) | 0;
    if ($121) {
     __THREW__ = 0;
     invoke_viiii(15, $9 | 0, HEAP32[$121 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $125 = __THREW__;
     __THREW__ = 0;
     if ($125 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(58, $agg$result | 0, $9 | 0);
     $127 = __THREW__;
     __THREW__ = 0;
     if ($127 & 1) {
      $147 = ___cxa_find_matching_catch() | 0;
      $148 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
      $$9 = $147;
      $$913 = $148;
      $1008 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($9, HEAP32[$9 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(15, $10 | 0, HEAP32[$121 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
     $133 = __THREW__;
     __THREW__ = 0;
     if ($133 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(58, $agg$result | 0, $10 | 0);
     $135 = __THREW__;
     __THREW__ = 0;
     if ($135 & 1) {
      $151 = ___cxa_find_matching_catch() | 0;
      $152 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
      $$9 = $151;
      $$913 = $152;
      $1008 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
      ___resumeException($$9 | 0);
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($10, HEAP32[$10 + 4 >> 2] | 0);
     __THREW__ = 0;
     invoke_viiii(15, $11 | 0, HEAP32[$121 + 56 >> 2] | 0, $in_object | 0, $vars | 0);
     $141 = __THREW__;
     __THREW__ = 0;
     if ($141 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(58, $agg$result | 0, $11 | 0);
     $143 = __THREW__;
     __THREW__ = 0;
     if (!($143 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
      break;
     }
     $155 = ___cxa_find_matching_catch() | 0;
     $156 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($11, HEAP32[$11 + 4 >> 2] | 0);
     $$9 = $155;
     $$913 = $156;
     $1008 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
     ___resumeException($$9 | 0);
    }
    $159 = ___dynamic_cast($ast_, 48, 152, 0) | 0;
    if ($159) {
     __THREW__ = 0;
     invoke_viiii(15, $12 | 0, HEAP32[$159 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
     $163 = __THREW__;
     __THREW__ = 0;
     if ($163 & 1) {
      label = 14;
      break L1;
     }
     __THREW__ = 0;
     invoke_vii(58, $agg$result | 0, $12 | 0);
     $165 = __THREW__;
     __THREW__ = 0;
     if (!($165 & 1)) {
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
      break;
     }
     $169 = ___cxa_find_matching_catch() | 0;
     $170 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($12, HEAP32[$12 + 4 >> 2] | 0);
     $$9 = $169;
     $$913 = $170;
     $1008 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
     ___resumeException($$9 | 0);
    }
    $173 = ___dynamic_cast($ast_, 48, 168, 0) | 0;
    if ($173) {
     $175 = $new_vars + 4 | 0;
     HEAP32[$175 >> 2] = 0;
     $176 = $new_vars + 8 | 0;
     HEAP32[$176 >> 2] = 0;
     $177 = $new_vars + 4 | 0;
     HEAP32[$new_vars >> 2] = $177;
     $178 = HEAP32[$vars >> 2] | 0;
     $179 = $vars + 4 | 0;
     L59 : do if (($178 | 0) != ($179 | 0)) {
      $181 = $177;
      $183 = $178;
      $204 = $178;
      while (1) {
       $182 = $183 + 16 | 0;
       HEAP32[$3 >> 2] = $181;
       HEAP32[$$byval_copy34 >> 2] = HEAP32[$3 >> 2];
       $184 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars, $$byval_copy34, $__parent$i$i$i, $182) | 0;
       if (!(HEAP32[$184 >> 2] | 0)) {
        __THREW__ = 0;
        $187 = invoke_ii(67, 20) | 0;
        $188 = __THREW__;
        __THREW__ = 0;
        if ($188 & 1) break;
        HEAP32[$187 + 16 >> 2] = HEAP32[$182 >> 2];
        $192 = HEAP32[$__parent$i$i$i >> 2] | 0;
        HEAP32[$187 >> 2] = 0;
        HEAP32[$187 + 4 >> 2] = 0;
        HEAP32[$187 + 8 >> 2] = $192;
        HEAP32[$184 >> 2] = $187;
        $196 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$196) $200 = $187; else {
         HEAP32[$new_vars >> 2] = $196;
         $200 = HEAP32[$184 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$175 >> 2] | 0, $200);
        HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
       }
       $205 = HEAP32[$204 + 4 >> 2] | 0;
       if (!$205) {
        $$0$i$i$i$i = $204;
        while (1) {
         $210 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$210 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
          $$01$i$i$i$i = $210;
          break;
         } else $$0$i$i$i$i = $210;
        }
       } else {
        $$0$i$i$i$i$i = $205;
        while (1) {
         $207 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
         if (!$207) {
          $$01$i$i$i$i = $$0$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i = $207;
        }
       }
       if (($$01$i$i$i$i | 0) == ($179 | 0)) break L59; else {
        $183 = $$01$i$i$i$i;
        $204 = $$01$i$i$i$i;
       }
      }
      $214 = ___cxa_find_matching_catch() | 0;
      $215 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
      $eh$lpad$body$index8Z2D = $215;
      $eh$lpad$body$indexZ2D = $214;
      break L1;
     } while (0);
     $217 = $params + 4 | 0;
     HEAP32[$217 >> 2] = 0;
     $218 = $params + 8 | 0;
     HEAP32[$218 >> 2] = 0;
     $219 = $params + 4 | 0;
     HEAP32[$params >> 2] = $219;
     $220 = $173 + 48 | 0;
     $221 = HEAP32[$220 >> 2] | 0;
     $222 = $173 + 52 | 0;
     $223 = HEAP32[$222 >> 2] | 0;
     L78 : do if (($221 | 0) == ($223 | 0)) label = 119; else {
      $225 = $219;
      $226 = $177;
      $228 = $221;
      $230 = 0;
      while (1) {
       $227 = HEAP32[$228 >> 2] | 0;
       if ($230) {
        $231 = $227;
        $$0$ph6$i$i$i = $219;
        $$01$ph5$i$i$i = $230;
        L84 : while (1) {
         $$013$i$i$i = $$01$ph5$i$i$i;
         while (1) {
          if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $231 >>> 0) {
           $$013$i$i$i$lcssa = $$013$i$i$i;
           break;
          }
          $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
          if (!$$013$i$i$i) {
           $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i;
           break L84;
          }
         }
         $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i) {
          $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa;
          break;
         } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i | 0) != ($219 | 0)) if ($231 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
         $$lcssa565 = $227;
         $$lcssa568 = $231;
         break;
        }
       }
       do if (!$230) {
        HEAP32[$__parent$i$i >> 2] = $219;
        $$0$i$i$i34 = $219;
        $308 = $225;
       } else {
        $287 = $227;
        $__nd$0$i$i$i = $230;
        while (1) {
         $289 = HEAP32[$__nd$0$i$i$i + 16 >> 2] | 0;
         if ($287 >>> 0 < $289 >>> 0) {
          $291 = HEAP32[$__nd$0$i$i$i >> 2] | 0;
          if (!$291) {
           $$lcssa560 = $__nd$0$i$i$i;
           $__nd$0$i$i$i$lcssa558 = $__nd$0$i$i$i;
           label = 89;
           break;
          } else $__nd$0$be$in$i$i$i = $291;
         } else {
          if ($289 >>> 0 >= $287 >>> 0) {
           $__nd$0$i$i$i$lcssa = $__nd$0$i$i$i;
           label = 94;
           break;
          }
          $295 = $__nd$0$i$i$i + 4 | 0;
          $296 = HEAP32[$295 >> 2] | 0;
          if (!$296) {
           $$lcssa559 = $295;
           $__nd$0$i$i$i$lcssa557 = $__nd$0$i$i$i;
           label = 93;
           break;
          } else $__nd$0$be$in$i$i$i = $296;
         }
         $__nd$0$i$i$i = $__nd$0$be$in$i$i$i;
        }
        if ((label | 0) == 89) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa558;
         $$0$i$i$i34 = $$lcssa560;
         $308 = $__nd$0$i$i$i$lcssa558;
         break;
        } else if ((label | 0) == 93) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa557;
         $$0$i$i$i34 = $$lcssa559;
         $308 = $__nd$0$i$i$i$lcssa557;
         break;
        } else if ((label | 0) == 94) {
         label = 0;
         HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa;
         $$0$i$i$i34 = $__parent$i$i;
         $308 = $__nd$0$i$i$i$lcssa;
         break;
        }
       } while (0);
       if (!(HEAP32[$$0$i$i$i34 >> 2] | 0)) {
        __THREW__ = 0;
        $302 = invoke_ii(67, 20) | 0;
        $303 = __THREW__;
        __THREW__ = 0;
        if ($303 & 1) {
         label = 79;
         break;
        }
        HEAP32[$302 + 16 >> 2] = $227;
        HEAP32[$302 >> 2] = 0;
        HEAP32[$302 + 4 >> 2] = 0;
        HEAP32[$302 + 8 >> 2] = $308;
        HEAP32[$$0$i$i$i34 >> 2] = $302;
        $310 = HEAP32[HEAP32[$params >> 2] >> 2] | 0;
        if (!$310) $314 = $302; else {
         HEAP32[$params >> 2] = $310;
         $314 = HEAP32[$$0$i$i$i34 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$217 >> 2] | 0, $314);
        HEAP32[$218 >> 2] = (HEAP32[$218 >> 2] | 0) + 1;
       }
       $317 = HEAP32[$177 >> 2] | 0;
       do if (!$317) {
        HEAP32[$__parent$i$i36 >> 2] = $177;
        $$0$i$i$i42 = $177;
        $340 = $226;
       } else {
        $319 = $227;
        $__nd$0$i$i$i38 = $317;
        while (1) {
         $321 = HEAP32[$__nd$0$i$i$i38 + 16 >> 2] | 0;
         if ($319 >>> 0 < $321 >>> 0) {
          $323 = HEAP32[$__nd$0$i$i$i38 >> 2] | 0;
          if (!$323) {
           $$lcssa564 = $__nd$0$i$i$i38;
           $__nd$0$i$i$i38$lcssa562 = $__nd$0$i$i$i38;
           label = 105;
           break;
          } else $__nd$0$be$in$i$i$i39 = $323;
         } else {
          if ($321 >>> 0 >= $319 >>> 0) {
           $__nd$0$i$i$i38$lcssa = $__nd$0$i$i$i38;
           label = 110;
           break;
          }
          $327 = $__nd$0$i$i$i38 + 4 | 0;
          $328 = HEAP32[$327 >> 2] | 0;
          if (!$328) {
           $$lcssa563 = $327;
           $__nd$0$i$i$i38$lcssa561 = $__nd$0$i$i$i38;
           label = 109;
           break;
          } else $__nd$0$be$in$i$i$i39 = $328;
         }
         $__nd$0$i$i$i38 = $__nd$0$be$in$i$i$i39;
        }
        if ((label | 0) == 105) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa562;
         $$0$i$i$i42 = $$lcssa564;
         $340 = $__nd$0$i$i$i38$lcssa562;
         break;
        } else if ((label | 0) == 109) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa561;
         $$0$i$i$i42 = $$lcssa563;
         $340 = $__nd$0$i$i$i38$lcssa561;
         break;
        } else if ((label | 0) == 110) {
         label = 0;
         HEAP32[$__parent$i$i36 >> 2] = $__nd$0$i$i$i38$lcssa;
         $$0$i$i$i42 = $__parent$i$i36;
         $340 = $__nd$0$i$i$i38$lcssa;
         break;
        }
       } while (0);
       if (!(HEAP32[$$0$i$i$i42 >> 2] | 0)) {
        __THREW__ = 0;
        $334 = invoke_ii(67, 20) | 0;
        $335 = __THREW__;
        __THREW__ = 0;
        if ($335 & 1) {
         label = 79;
         break;
        }
        HEAP32[$334 + 16 >> 2] = $227;
        HEAP32[$334 >> 2] = 0;
        HEAP32[$334 + 4 >> 2] = 0;
        HEAP32[$334 + 8 >> 2] = $340;
        HEAP32[$$0$i$i$i42 >> 2] = $334;
        $342 = HEAP32[HEAP32[$new_vars >> 2] >> 2] | 0;
        if (!$342) $346 = $334; else {
         HEAP32[$new_vars >> 2] = $342;
         $346 = HEAP32[$$0$i$i$i42 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$175 >> 2] | 0, $346);
        HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
       }
       $349 = $228 + 4 | 0;
       if (($349 | 0) == ($223 | 0)) {
        label = 119;
        break L78;
       }
       $228 = $349;
       $230 = HEAP32[$219 >> 2] | 0;
      }
      if ((label | 0) == 79) {
       $278 = ___cxa_find_matching_catch() | 0;
       $lpad$phi303$index = $278;
       $lpad$phi303$index19 = tempRet0;
       label = 81;
       break;
      }
      $244 = ___cxa_allocate_exception(40) | 0;
      HEAP32[$13 >> 2] = 0;
      HEAP32[$13 + 4 >> 2] = 0;
      HEAP32[$13 + 8 >> 2] = 0;
      $245 = $$lcssa565;
      $246 = HEAP8[$245 >> 0] | 0;
      $253 = ($246 & 1) == 0 ? ($246 & 255) >>> 1 : HEAP32[$$lcssa568 + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_viiii(13, $13 | 0, 51745, 30, $253 + 30 | 0);
      $255 = __THREW__;
      __THREW__ = 0;
      L141 : do if ($255 & 1) label = 82; else {
       __THREW__ = 0;
       invoke_iiii(35, $13 | 0, ((HEAP8[$245 >> 0] & 1) == 0 ? $$lcssa565 + 1 | 0 : HEAP32[$$lcssa568 + 8 >> 2] | 0) | 0, $253 | 0) | 0;
       $265 = __THREW__;
       __THREW__ = 0;
       if ($265 & 1) label = 82; else {
        __THREW__ = 0;
        invoke_vii(40, $244 | 0, $ast_ + 4 | 0);
        $268 = __THREW__;
        __THREW__ = 0;
        do if ($268 & 1) $$014 = 1; else {
         $270 = $244 + 12 | 0;
         $271 = $ast_ + 16 | 0;
         HEAP32[$270 >> 2] = HEAP32[$271 >> 2];
         HEAP32[$270 + 4 >> 2] = HEAP32[$271 + 4 >> 2];
         HEAP32[$270 + 8 >> 2] = HEAP32[$271 + 8 >> 2];
         HEAP32[$270 + 12 >> 2] = HEAP32[$271 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $244 + 28 | 0, $13 | 0);
         $273 = __THREW__;
         __THREW__ = 0;
         if ($273 & 1) {
          $275 = ___cxa_find_matching_catch() | 0;
          $276 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($244);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          $$0234 = $275;
          $$04233 = $276;
          break L141;
         } else {
          __THREW__ = 0;
          invoke_viii(4, $244 | 0, 8, 172);
          __THREW__ = 0;
          $$014 = 0;
          break;
         }
        } while (0);
        $284 = ___cxa_find_matching_catch() | 0;
        $285 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        if ($$014) {
         $$0234 = $284;
         $$04233 = $285;
        } else {
         $$1 = $284;
         $$15 = $285;
         break L78;
        }
       }
      } while (0);
      if ((label | 0) == 82) {
       $282 = ___cxa_find_matching_catch() | 0;
       $283 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
       $$0234 = $282;
       $$04233 = $283;
      }
      ___cxa_free_exception($244 | 0);
      $$1 = $$0234;
      $$15 = $$04233;
     } while (0);
     do if ((label | 0) == 119) {
      __THREW__ = 0;
      invoke_viiii(15, $fv | 0, HEAP32[$173 + 60 >> 2] | 0, $in_object | 0, $new_vars | 0);
      $353 = __THREW__;
      __THREW__ = 0;
      if ($353 & 1) {
       $280 = ___cxa_find_matching_catch() | 0;
       $lpad$phi303$index = $280;
       $lpad$phi303$index19 = tempRet0;
       label = 81;
       break;
      }
      $355 = HEAP32[$220 >> 2] | 0;
      $356 = HEAP32[$222 >> 2] | 0;
      if (($355 | 0) != ($356 | 0)) {
       $358 = $fv + 4 | 0;
       $359 = $fv + 8 | 0;
       $363 = $355;
       do {
        $360 = HEAP32[$358 >> 2] | 0;
        do if ($360) {
         $364 = HEAP32[$363 >> 2] | 0;
         $$0$ph6$i$i$i$i = $358;
         $$01$ph5$i$i$i$i = $360;
         L164 : while (1) {
          $$013$i$i$i$i = $$01$ph5$i$i$i$i;
          while (1) {
           if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $364 >>> 0) {
            $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
            break;
           }
           $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
           if (!$$013$i$i$i$i) {
            $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i;
            break L164;
           }
          }
          $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i$i) {
           $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa;
           break;
          } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
         }
         if (($$0$ph$lcssa$i$i$i$i | 0) == ($358 | 0)) break;
         if ($364 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0) break;
         $378 = HEAP32[$$0$ph$lcssa$i$i$i$i + 4 >> 2] | 0;
         if (!$378) {
          $$0$i$i$i$i$i62 = $$0$ph$lcssa$i$i$i$i;
          while (1) {
           $383 = HEAP32[$$0$i$i$i$i$i62 + 8 >> 2] | 0;
           if ((HEAP32[$383 >> 2] | 0) == ($$0$i$i$i$i$i62 | 0)) {
            $$01$i$i$i$i$i = $383;
            break;
           } else $$0$i$i$i$i$i62 = $383;
          }
         } else {
          $$0$i$i$i$i$i$i = $378;
          while (1) {
           $380 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
           if (!$380) {
            $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i = $380;
          }
         }
         if ((HEAP32[$fv >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i | 0)) HEAP32[$fv >> 2] = $$01$i$i$i$i$i;
         HEAP32[$359 >> 2] = (HEAP32[$359 >> 2] | 0) + -1;
         __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($360, $$0$ph$lcssa$i$i$i$i);
         __ZdlPv($$0$ph$lcssa$i$i$i$i);
        } while (0);
        $363 = $363 + 4 | 0;
       } while (($363 | 0) != ($356 | 0));
      }
      __THREW__ = 0;
      invoke_vii(58, $agg$result | 0, $fv | 0);
      $397 = __THREW__;
      __THREW__ = 0;
      if ($397 & 1) {
       $393 = ___cxa_find_matching_catch() | 0;
       $394 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       $$1 = $393;
       $$15 = $394;
       break;
      } else {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fv, HEAP32[$fv + 4 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$219 >> 2] | 0);
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
       break L3;
      }
     } while (0);
     if ((label | 0) == 81) {
      $$1 = $lpad$phi303$index;
      $$15 = $lpad$phi303$index19;
     }
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($params, HEAP32[$219 >> 2] | 0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars, HEAP32[$177 >> 2] | 0);
     $$9 = $$1;
     $$913 = $$15;
     $1008 = HEAP32[$29 >> 2] | 0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
     ___resumeException($$9 | 0);
    }
    if (!(___dynamic_cast($ast_, 48, 184, 0) | 0)) if (!(___dynamic_cast($ast_, 48, 200, 0) | 0)) {
     $409 = ___dynamic_cast($ast_, 48, 216, 0) | 0;
     if ($409) {
      __THREW__ = 0;
      invoke_viiii(15, $14 | 0, HEAP32[$409 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
      $413 = __THREW__;
      __THREW__ = 0;
      if ($413 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(58, $agg$result | 0, $14 | 0);
      $415 = __THREW__;
      __THREW__ = 0;
      if ($415 & 1) {
       $427 = ___cxa_find_matching_catch() | 0;
       $428 = tempRet0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
       $$9 = $427;
       $$913 = $428;
       $1008 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
       ___resumeException($$9 | 0);
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($14, HEAP32[$14 + 4 >> 2] | 0);
      __THREW__ = 0;
      invoke_viiii(15, $15 | 0, HEAP32[$409 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
      $421 = __THREW__;
      __THREW__ = 0;
      if ($421 & 1) {
       label = 14;
       break L1;
      }
      __THREW__ = 0;
      invoke_vii(58, $agg$result | 0, $15 | 0);
      $423 = __THREW__;
      __THREW__ = 0;
      if (!($423 & 1)) {
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($15, HEAP32[$15 + 4 >> 2] | 0);
       break;
      }
      $431 = ___cxa_find_matching_catch() | 0;
      $432 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($15, HEAP32[$15 + 4 >> 2] | 0);
      $$9 = $431;
      $$913 = $432;
      $1008 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
      ___resumeException($$9 | 0);
     }
     $435 = ___dynamic_cast($ast_, 48, 56, 0) | 0;
     if ($435) {
      $437 = $ast_vars + 4 | 0;
      HEAP32[$437 >> 2] = 0;
      $438 = $ast_vars + 8 | 0;
      HEAP32[$438 >> 2] = 0;
      $439 = $ast_vars + 4 | 0;
      HEAP32[$ast_vars >> 2] = $439;
      $440 = $435 + 48 | 0;
      $441 = HEAP32[$440 >> 2] | 0;
      $442 = $435 + 52 | 0;
      L210 : do if (($441 | 0) == ($442 | 0)) label = 179; else {
       $444 = $439;
       $446 = $441;
       $448 = 0;
       while (1) {
        $445 = $446 + 16 | 0;
        do if (!$448) {
         HEAP32[$__parent$i$i73 >> 2] = $439;
         $$0$i$i$i79 = $439;
         $471 = $444;
        } else {
         $449 = HEAP32[$445 >> 2] | 0;
         $__nd$0$i$i$i75 = $448;
         while (1) {
          $451 = HEAP32[$__nd$0$i$i$i75 + 16 >> 2] | 0;
          if ($449 >>> 0 < $451 >>> 0) {
           $453 = HEAP32[$__nd$0$i$i$i75 >> 2] | 0;
           if (!$453) {
            $$lcssa552 = $__nd$0$i$i$i75;
            $__nd$0$i$i$i75$lcssa550 = $__nd$0$i$i$i75;
            label = 159;
            break;
           } else $__nd$0$be$in$i$i$i76 = $453;
          } else {
           if ($451 >>> 0 >= $449 >>> 0) {
            $__nd$0$i$i$i75$lcssa = $__nd$0$i$i$i75;
            label = 164;
            break;
           }
           $457 = $__nd$0$i$i$i75 + 4 | 0;
           $458 = HEAP32[$457 >> 2] | 0;
           if (!$458) {
            $$lcssa551 = $457;
            $__nd$0$i$i$i75$lcssa549 = $__nd$0$i$i$i75;
            label = 163;
            break;
           } else $__nd$0$be$in$i$i$i76 = $458;
          }
          $__nd$0$i$i$i75 = $__nd$0$be$in$i$i$i76;
         }
         if ((label | 0) == 159) {
          label = 0;
          HEAP32[$__parent$i$i73 >> 2] = $__nd$0$i$i$i75$lcssa550;
          $$0$i$i$i79 = $$lcssa552;
          $471 = $__nd$0$i$i$i75$lcssa550;
          break;
         } else if ((label | 0) == 163) {
          label = 0;
          HEAP32[$__parent$i$i73 >> 2] = $__nd$0$i$i$i75$lcssa549;
          $$0$i$i$i79 = $$lcssa551;
          $471 = $__nd$0$i$i$i75$lcssa549;
          break;
         } else if ((label | 0) == 164) {
          label = 0;
          HEAP32[$__parent$i$i73 >> 2] = $__nd$0$i$i$i75$lcssa;
          $$0$i$i$i79 = $__parent$i$i73;
          $471 = $__nd$0$i$i$i75$lcssa;
          break;
         }
        } while (0);
        if (!(HEAP32[$$0$i$i$i79 >> 2] | 0)) {
         __THREW__ = 0;
         $464 = invoke_ii(67, 20) | 0;
         $465 = __THREW__;
         __THREW__ = 0;
         if ($465 & 1) break;
         HEAP32[$464 + 16 >> 2] = HEAP32[$445 >> 2];
         HEAP32[$464 >> 2] = 0;
         HEAP32[$464 + 4 >> 2] = 0;
         HEAP32[$464 + 8 >> 2] = $471;
         HEAP32[$$0$i$i$i79 >> 2] = $464;
         $473 = HEAP32[HEAP32[$ast_vars >> 2] >> 2] | 0;
         if (!$473) $477 = $464; else {
          HEAP32[$ast_vars >> 2] = $473;
          $477 = HEAP32[$$0$i$i$i79 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$437 >> 2] | 0, $477);
         HEAP32[$438 >> 2] = (HEAP32[$438 >> 2] | 0) + 1;
        }
        $481 = HEAP32[$446 + 4 >> 2] | 0;
        if (!$481) {
         $$0$i$i$i87 = $446;
         while (1) {
          $486 = HEAP32[$$0$i$i$i87 + 8 >> 2] | 0;
          if ((HEAP32[$486 >> 2] | 0) == ($$0$i$i$i87 | 0)) {
           $$01$i$i$i = $486;
           break;
          } else $$0$i$i$i87 = $486;
         }
        } else {
         $$0$i$i$i$i86 = $481;
         while (1) {
          $483 = HEAP32[$$0$i$i$i$i86 >> 2] | 0;
          if (!$483) {
           $$01$i$i$i = $$0$i$i$i$i86;
           break;
          } else $$0$i$i$i$i86 = $483;
         }
        }
        if (($$01$i$i$i | 0) == ($442 | 0)) {
         label = 179;
         break L210;
        }
        $446 = $$01$i$i$i;
        $448 = HEAP32[$439 >> 2] | 0;
       }
       $490 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body104$index24Z2D = tempRet0;
       $eh$lpad$body104$indexZ2D = $490;
       label = 178;
      } while (0);
      L245 : do if ((label | 0) == 179) {
       $492 = $new_vars21 + 4 | 0;
       HEAP32[$492 >> 2] = 0;
       $493 = $new_vars21 + 8 | 0;
       HEAP32[$493 >> 2] = 0;
       $494 = $new_vars21 + 4 | 0;
       HEAP32[$new_vars21 >> 2] = $494;
       $495 = HEAP32[$vars >> 2] | 0;
       $496 = $vars + 4 | 0;
       L247 : do if (($495 | 0) != ($496 | 0)) {
        $498 = $494;
        $500 = $495;
        $521 = $495;
        while (1) {
         $499 = $500 + 16 | 0;
         HEAP32[$1 >> 2] = $498;
         HEAP32[$$byval_copy34 >> 2] = HEAP32[$1 >> 2];
         $501 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars21, $$byval_copy34, $__parent$i$i$i89, $499) | 0;
         if (!(HEAP32[$501 >> 2] | 0)) {
          __THREW__ = 0;
          $504 = invoke_ii(67, 20) | 0;
          $505 = __THREW__;
          __THREW__ = 0;
          if ($505 & 1) break;
          HEAP32[$504 + 16 >> 2] = HEAP32[$499 >> 2];
          $509 = HEAP32[$__parent$i$i$i89 >> 2] | 0;
          HEAP32[$504 >> 2] = 0;
          HEAP32[$504 + 4 >> 2] = 0;
          HEAP32[$504 + 8 >> 2] = $509;
          HEAP32[$501 >> 2] = $504;
          $513 = HEAP32[HEAP32[$new_vars21 >> 2] >> 2] | 0;
          if (!$513) $517 = $504; else {
           HEAP32[$new_vars21 >> 2] = $513;
           $517 = HEAP32[$501 >> 2] | 0;
          }
          __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$492 >> 2] | 0, $517);
          HEAP32[$493 >> 2] = (HEAP32[$493 >> 2] | 0) + 1;
         }
         $522 = HEAP32[$521 + 4 >> 2] | 0;
         if (!$522) {
          $$0$i$i$i$i97 = $521;
          while (1) {
           $527 = HEAP32[$$0$i$i$i$i97 + 8 >> 2] | 0;
           if ((HEAP32[$527 >> 2] | 0) == ($$0$i$i$i$i97 | 0)) {
            $$01$i$i$i$i100 = $527;
            break;
           } else $$0$i$i$i$i97 = $527;
          }
         } else {
          $$0$i$i$i$i$i95 = $522;
          while (1) {
           $524 = HEAP32[$$0$i$i$i$i$i95 >> 2] | 0;
           if (!$524) {
            $$01$i$i$i$i100 = $$0$i$i$i$i$i95;
            break;
           } else $$0$i$i$i$i$i95 = $524;
          }
         }
         if (($$01$i$i$i$i100 | 0) == ($496 | 0)) break L247; else {
          $500 = $$01$i$i$i$i100;
          $521 = $$01$i$i$i$i100;
         }
        }
        $531 = ___cxa_find_matching_catch() | 0;
        $532 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$494 >> 2] | 0);
        $eh$lpad$body104$index24Z2D = $532;
        $eh$lpad$body104$indexZ2D = $531;
        label = 178;
        break L245;
       } while (0);
       __THREW__ = 0;
       invoke_vii(58, $new_vars21 | 0, $ast_vars | 0);
       $534 = __THREW__;
       __THREW__ = 0;
       if ($534 & 1) {
        $560 = ___cxa_find_matching_catch() | 0;
        $$3 = $560;
        $$37 = tempRet0;
       } else {
        HEAP32[$fvs + 4 >> 2] = 0;
        $537 = $fvs + 8 | 0;
        HEAP32[$537 >> 2] = 0;
        $538 = $fvs + 4 | 0;
        HEAP32[$fvs >> 2] = $538;
        $539 = HEAP32[$440 >> 2] | 0;
        L269 : do if (($539 | 0) == ($442 | 0)) label = 206; else {
         $541 = $16 + 4 | 0;
         $543 = $539;
         while (1) {
          __THREW__ = 0;
          invoke_viiii(15, $16 | 0, HEAP32[$543 + 20 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
          $545 = __THREW__;
          __THREW__ = 0;
          if ($545 & 1) {
           label = 202;
           break;
          }
          __THREW__ = 0;
          invoke_vii(58, $fvs | 0, $16 | 0);
          $547 = __THREW__;
          __THREW__ = 0;
          if ($547 & 1) {
           label = 205;
           break;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$541 >> 2] | 0);
          $551 = HEAP32[$543 + 4 >> 2] | 0;
          if (!$551) {
           $$0$i$i$i108 = $543;
           while (1) {
            $556 = HEAP32[$$0$i$i$i108 + 8 >> 2] | 0;
            if ((HEAP32[$556 >> 2] | 0) == ($$0$i$i$i108 | 0)) {
             $$01$i$i$i111 = $556;
             break;
            } else $$0$i$i$i108 = $556;
           }
          } else {
           $$0$i$i$i$i106 = $551;
           while (1) {
            $553 = HEAP32[$$0$i$i$i$i106 >> 2] | 0;
            if (!$553) {
             $$01$i$i$i111 = $$0$i$i$i$i106;
             break;
            } else $$0$i$i$i$i106 = $553;
           }
          }
          if (($$01$i$i$i111 | 0) == ($442 | 0)) {
           label = 206;
           break L269;
          } else $543 = $$01$i$i$i111;
         }
         if ((label | 0) == 202) {
          $562 = ___cxa_find_matching_catch() | 0;
          $lpad$phi293$index = $562;
          $lpad$phi293$index29 = tempRet0;
          label = 204;
          break;
         } else if ((label | 0) == 205) {
          $566 = ___cxa_find_matching_catch() | 0;
          $567 = tempRet0;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($16, HEAP32[$541 >> 2] | 0);
          $$2 = $566;
          $$26 = $567;
          break;
         }
        } while (0);
        L285 : do if ((label | 0) == 206) {
         __THREW__ = 0;
         invoke_viiii(15, $17 | 0, HEAP32[$435 + 60 >> 2] | 0, $in_object | 0, $new_vars21 | 0);
         $571 = __THREW__;
         __THREW__ = 0;
         do if (!($571 & 1)) {
          __THREW__ = 0;
          invoke_vii(58, $fvs | 0, $17 | 0);
          $573 = __THREW__;
          __THREW__ = 0;
          if ($573 & 1) {
           $620 = ___cxa_find_matching_catch() | 0;
           $621 = tempRet0;
           __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
           $$2 = $620;
           $$26 = $621;
           break L285;
          }
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($17, HEAP32[$17 + 4 >> 2] | 0);
          $577 = HEAP32[$440 >> 2] | 0;
          if (($577 | 0) != ($442 | 0)) {
           $582 = $577;
           while (1) {
            $579 = HEAP32[$538 >> 2] | 0;
            do if ($579) {
             $583 = HEAP32[$582 + 16 >> 2] | 0;
             $$0$ph6$i$i$i$i114 = $538;
             $$01$ph5$i$i$i$i115 = $579;
             L298 : while (1) {
              $$013$i$i$i$i117 = $$01$ph5$i$i$i$i115;
              while (1) {
               if ((HEAP32[$$013$i$i$i$i117 + 16 >> 2] | 0) >>> 0 >= $583 >>> 0) {
                $$013$i$i$i$i117$lcssa = $$013$i$i$i$i117;
                break;
               }
               $$013$i$i$i$i117 = HEAP32[$$013$i$i$i$i117 + 4 >> 2] | 0;
               if (!$$013$i$i$i$i117) {
                $$0$ph$lcssa$i$i$i$i119 = $$0$ph6$i$i$i$i114;
                break L298;
               }
              }
              $$01$ph5$i$i$i$i115 = HEAP32[$$013$i$i$i$i117$lcssa >> 2] | 0;
              if (!$$01$ph5$i$i$i$i115) {
               $$0$ph$lcssa$i$i$i$i119 = $$013$i$i$i$i117$lcssa;
               break;
              } else $$0$ph6$i$i$i$i114 = $$013$i$i$i$i117$lcssa;
             }
             if (($$0$ph$lcssa$i$i$i$i119 | 0) == ($538 | 0)) break;
             if ($583 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i119 + 16 >> 2] | 0) >>> 0) break;
             $597 = HEAP32[$$0$ph$lcssa$i$i$i$i119 + 4 >> 2] | 0;
             if (!$597) {
              $$0$i$i$i$i$i124 = $$0$ph$lcssa$i$i$i$i119;
              while (1) {
               $602 = HEAP32[$$0$i$i$i$i$i124 + 8 >> 2] | 0;
               if ((HEAP32[$602 >> 2] | 0) == ($$0$i$i$i$i$i124 | 0)) {
                $$01$i$i$i$i$i127 = $602;
                break;
               } else $$0$i$i$i$i$i124 = $602;
              }
             } else {
              $$0$i$i$i$i$i$i122 = $597;
              while (1) {
               $599 = HEAP32[$$0$i$i$i$i$i$i122 >> 2] | 0;
               if (!$599) {
                $$01$i$i$i$i$i127 = $$0$i$i$i$i$i$i122;
                break;
               } else $$0$i$i$i$i$i$i122 = $599;
              }
             }
             if ((HEAP32[$fvs >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i119 | 0)) HEAP32[$fvs >> 2] = $$01$i$i$i$i$i127;
             HEAP32[$537 >> 2] = (HEAP32[$537 >> 2] | 0) + -1;
             __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($579, $$0$ph$lcssa$i$i$i$i119);
             __ZdlPv($$0$ph$lcssa$i$i$i$i119);
            } while (0);
            $611 = HEAP32[$582 + 4 >> 2] | 0;
            if (!$611) {
             $$0$i$i$i134 = $582;
             while (1) {
              $616 = HEAP32[$$0$i$i$i134 + 8 >> 2] | 0;
              if ((HEAP32[$616 >> 2] | 0) == ($$0$i$i$i134 | 0)) {
               $$01$i$i$i137 = $616;
               break;
              } else $$0$i$i$i134 = $616;
             }
            } else {
             $$0$i$i$i$i132 = $611;
             while (1) {
              $613 = HEAP32[$$0$i$i$i$i132 >> 2] | 0;
              if (!$613) {
               $$01$i$i$i137 = $$0$i$i$i$i132;
               break;
              } else $$0$i$i$i$i132 = $613;
             }
            }
            if (($$01$i$i$i137 | 0) == ($442 | 0)) break; else $582 = $$01$i$i$i137;
           }
          }
          __THREW__ = 0;
          invoke_vii(58, $agg$result | 0, $fvs | 0);
          $624 = __THREW__;
          __THREW__ = 0;
          if ($624 & 1) break;
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$538 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$494 >> 2] | 0);
          __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$439 >> 2] | 0);
          break L3;
         } while (0);
         $564 = ___cxa_find_matching_catch() | 0;
         $lpad$phi293$index = $564;
         $lpad$phi293$index29 = tempRet0;
         label = 204;
        } while (0);
        if ((label | 0) == 204) {
         $$2 = $lpad$phi293$index;
         $$26 = $lpad$phi293$index29;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fvs, HEAP32[$538 >> 2] | 0);
        $$3 = $$2;
        $$37 = $$26;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars21, HEAP32[$494 >> 2] | 0);
       $$4 = $$3;
       $$48 = $$37;
      } while (0);
      if ((label | 0) == 178) {
       $$4 = $eh$lpad$body104$indexZ2D;
       $$48 = $eh$lpad$body104$index24Z2D;
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($ast_vars, HEAP32[$439 >> 2] | 0);
      $$9 = $$4;
      $$913 = $$48;
      $1008 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
      ___resumeException($$9 | 0);
     }
     if (!(___dynamic_cast($ast_, 48, 232, 0) | 0)) if (!(___dynamic_cast($ast_, 48, 248, 0) | 0)) if (!(___dynamic_cast($ast_, 48, 264, 0) | 0)) if (!(___dynamic_cast($ast_, 48, 280, 0) | 0)) {
      $640 = ___dynamic_cast($ast_, 48, 296, 0) | 0;
      if ($640) {
       $642 = $640 + 48 | 0;
       $644 = HEAP32[$640 + 52 >> 2] | 0;
       if (($644 | 0) == ($642 | 0)) break;
       $647 = $18 + 4 | 0;
       $648 = $19 + 4 | 0;
       $650 = $644;
       $665 = $644;
       while (1) {
        $653 = HEAP32[$650 + 16 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(15, $18 | 0, HEAP32[$650 + 8 >> 2] | 0, $in_object | 0, $vars | 0);
        $654 = __THREW__;
        __THREW__ = 0;
        if ($654 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(58, $agg$result | 0, $18 | 0);
        $656 = __THREW__;
        __THREW__ = 0;
        if ($656 & 1) {
         label = 248;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$647 >> 2] | 0);
        __THREW__ = 0;
        invoke_viiii(15, $19 | 0, $653 | 0, 1, $vars | 0);
        $659 = __THREW__;
        __THREW__ = 0;
        if ($659 & 1) {
         label = 11;
         break;
        }
        __THREW__ = 0;
        invoke_vii(58, $agg$result | 0, $19 | 0);
        $661 = __THREW__;
        __THREW__ = 0;
        if ($661 & 1) {
         label = 249;
         break;
        }
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$648 >> 2] | 0);
        $665 = HEAP32[$665 + 4 >> 2] | 0;
        $650 = $665;
        if (($650 | 0) == ($642 | 0)) break L3;
       }
       if ((label | 0) == 11) {
        $58 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body$index8Z2D = tempRet0;
        $eh$lpad$body$indexZ2D = $58;
        break L1;
       } else if ((label | 0) == 248) {
        $670 = ___cxa_find_matching_catch() | 0;
        $671 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($18, HEAP32[$647 >> 2] | 0);
        $$9 = $670;
        $$913 = $671;
        $1008 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
        ___resumeException($$9 | 0);
       } else if ((label | 0) == 249) {
        $673 = ___cxa_find_matching_catch() | 0;
        $674 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($19, HEAP32[$648 >> 2] | 0);
        $$9 = $673;
        $$913 = $674;
        $1008 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
        ___resumeException($$9 | 0);
       }
      }
      $676 = ___dynamic_cast($ast_, 48, 312, 0) | 0;
      if (!$676) {
       if (___dynamic_cast($ast_, 48, 328, 0) | 0) {
        if ($in_object) break;
        $828 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_viii(3, $23 | 0, 51776, 36);
        $829 = __THREW__;
        __THREW__ = 0;
        L362 : do if ($829 & 1) {
         $842 = ___cxa_find_matching_catch() | 0;
         $$610259 = tempRet0;
         $$6260 = $842;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $828 | 0, $ast_ + 4 | 0);
         $832 = __THREW__;
         __THREW__ = 0;
         do if ($832 & 1) $$018 = 1; else {
          $834 = $828 + 12 | 0;
          $835 = $ast_ + 16 | 0;
          HEAP32[$834 >> 2] = HEAP32[$835 >> 2];
          HEAP32[$834 + 4 >> 2] = HEAP32[$835 + 4 >> 2];
          HEAP32[$834 + 8 >> 2] = HEAP32[$835 + 8 >> 2];
          HEAP32[$834 + 12 >> 2] = HEAP32[$835 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $828 + 28 | 0, $23 | 0);
          $837 = __THREW__;
          __THREW__ = 0;
          if ($837 & 1) {
           $839 = ___cxa_find_matching_catch() | 0;
           $840 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($828);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
           $$610259 = $840;
           $$6260 = $839;
           break L362;
          } else {
           __THREW__ = 0;
           invoke_viii(4, $828 | 0, 8, 172);
           __THREW__ = 0;
           $$018 = 0;
           break;
          }
         } while (0);
         $844 = ___cxa_find_matching_catch() | 0;
         $845 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
         if ($$018) {
          $$610259 = $845;
          $$6260 = $844;
          break;
         } else {
          $$9 = $844;
          $$913 = $845;
         }
         $1008 = HEAP32[$29 >> 2] | 0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
         ___resumeException($$9 | 0);
        } while (0);
        ___cxa_free_exception($828 | 0);
        $$9 = $$6260;
        $$913 = $$610259;
        $1008 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
        ___resumeException($$9 | 0);
       }
       if (___dynamic_cast($ast_, 48, 344, 0) | 0) {
        if ($in_object) break;
        $848 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_viii(3, $24 | 0, 51813, 37);
        $849 = __THREW__;
        __THREW__ = 0;
        L378 : do if ($849 & 1) {
         $862 = ___cxa_find_matching_catch() | 0;
         $$711265 = tempRet0;
         $$7266 = $862;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $848 | 0, $ast_ + 4 | 0);
         $852 = __THREW__;
         __THREW__ = 0;
         do if ($852 & 1) $$016 = 1; else {
          $854 = $848 + 12 | 0;
          $855 = $ast_ + 16 | 0;
          HEAP32[$854 >> 2] = HEAP32[$855 >> 2];
          HEAP32[$854 + 4 >> 2] = HEAP32[$855 + 4 >> 2];
          HEAP32[$854 + 8 >> 2] = HEAP32[$855 + 8 >> 2];
          HEAP32[$854 + 12 >> 2] = HEAP32[$855 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $848 + 28 | 0, $24 | 0);
          $857 = __THREW__;
          __THREW__ = 0;
          if ($857 & 1) {
           $859 = ___cxa_find_matching_catch() | 0;
           $860 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($848);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
           $$711265 = $860;
           $$7266 = $859;
           break L378;
          } else {
           __THREW__ = 0;
           invoke_viii(4, $848 | 0, 8, 172);
           __THREW__ = 0;
           $$016 = 0;
           break;
          }
         } while (0);
         $864 = ___cxa_find_matching_catch() | 0;
         $865 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
         if ($$016) {
          $$711265 = $865;
          $$7266 = $864;
          break;
         } else {
          $$9 = $864;
          $$913 = $865;
         }
         $1008 = HEAP32[$29 >> 2] | 0;
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
         ___resumeException($$9 | 0);
        } while (0);
        ___cxa_free_exception($848 | 0);
        $$9 = $$7266;
        $$913 = $$711265;
        $1008 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
        ___resumeException($$9 | 0);
       }
       $866 = ___dynamic_cast($ast_, 48, 360, 0) | 0;
       if ($866) {
        __THREW__ = 0;
        invoke_viiii(15, $25 | 0, HEAP32[$866 + 52 >> 2] | 0, $in_object | 0, $vars | 0);
        $870 = __THREW__;
        __THREW__ = 0;
        if ($870 & 1) {
         label = 14;
         break L1;
        }
        __THREW__ = 0;
        invoke_vii(58, $agg$result | 0, $25 | 0);
        $872 = __THREW__;
        __THREW__ = 0;
        if (!($872 & 1)) {
         __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($25, HEAP32[$25 + 4 >> 2] | 0);
         break;
        }
        $876 = ___cxa_find_matching_catch() | 0;
        $877 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($25, HEAP32[$25 + 4 >> 2] | 0);
        $$9 = $876;
        $$913 = $877;
        $1008 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
        ___resumeException($$9 | 0);
       }
       $880 = ___dynamic_cast($ast_, 48, 376, 0) | 0;
       if (!$880) {
        label = 355;
        break L1;
       }
       $882 = $880 + 48 | 0;
       $883 = $vars + 4 | 0;
       $884 = HEAP32[$883 >> 2] | 0;
       do if ($884) {
        $886 = HEAP32[$882 >> 2] | 0;
        $$0$ph6$i$i$i145 = $883;
        $$01$ph5$i$i$i146 = $884;
        L402 : while (1) {
         $$013$i$i$i148 = $$01$ph5$i$i$i146;
         while (1) {
          if ((HEAP32[$$013$i$i$i148 + 16 >> 2] | 0) >>> 0 >= $886 >>> 0) {
           $$013$i$i$i148$lcssa = $$013$i$i$i148;
           break;
          }
          $$013$i$i$i148 = HEAP32[$$013$i$i$i148 + 4 >> 2] | 0;
          if (!$$013$i$i$i148) {
           $$0$ph$lcssa$i$i$i150 = $$0$ph6$i$i$i145;
           break L402;
          }
         }
         $$01$ph5$i$i$i146 = HEAP32[$$013$i$i$i148$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i146) {
          $$0$ph$lcssa$i$i$i150 = $$013$i$i$i148$lcssa;
          break;
         } else $$0$ph6$i$i$i145 = $$013$i$i$i148$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i150 | 0) == ($883 | 0)) break;
        if ($886 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i150 + 16 >> 2] | 0) >>> 0) break;
        if (HEAP32[$29 >> 2] | 0) break L3;
        __THREW__ = 0;
        $939 = invoke_ii(67, 20) | 0;
        $940 = __THREW__;
        __THREW__ = 0;
        if ($940 & 1) {
         label = 14;
         break L1;
        }
        HEAP32[$939 + 16 >> 2] = HEAP32[$882 >> 2];
        HEAP32[$939 >> 2] = 0;
        HEAP32[$939 + 4 >> 2] = 0;
        HEAP32[$939 + 8 >> 2] = $29;
        HEAP32[$29 >> 2] = $939;
        $947 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
        if (!$947) $951 = $939; else {
         HEAP32[$agg$result >> 2] = $947;
         $951 = HEAP32[$29 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$27 >> 2] | 0, $951);
        HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
        break L3;
       } while (0);
       $899 = ___cxa_allocate_exception(40) | 0;
       $900 = HEAP32[$882 >> 2] | 0;
       HEAP32[$26 >> 2] = 0;
       HEAP32[$26 + 4 >> 2] = 0;
       HEAP32[$26 + 8 >> 2] = 0;
       $901 = HEAP8[$900 >> 0] | 0;
       $908 = ($901 & 1) == 0 ? ($901 & 255) >>> 1 : HEAP32[$900 + 4 >> 2] | 0;
       __THREW__ = 0;
       invoke_viiii(13, $26 | 0, 51851, 18, $908 + 18 | 0);
       $910 = __THREW__;
       __THREW__ = 0;
       L417 : do if ($910 & 1) label = 347; else {
        __THREW__ = 0;
        invoke_iiii(35, $26 | 0, ((HEAP8[$900 >> 0] & 1) == 0 ? $900 + 1 | 0 : HEAP32[$900 + 8 >> 2] | 0) | 0, $908 | 0) | 0;
        $919 = __THREW__;
        __THREW__ = 0;
        if ($919 & 1) {
         label = 347;
         break;
        }
        __THREW__ = 0;
        invoke_vii(40, $899 | 0, $880 + 4 | 0);
        $922 = __THREW__;
        __THREW__ = 0;
        do if ($922 & 1) $$02 = 1; else {
         $924 = $899 + 12 | 0;
         $925 = $880 + 16 | 0;
         HEAP32[$924 >> 2] = HEAP32[$925 >> 2];
         HEAP32[$924 + 4 >> 2] = HEAP32[$925 + 4 >> 2];
         HEAP32[$924 + 8 >> 2] = HEAP32[$925 + 8 >> 2];
         HEAP32[$924 + 12 >> 2] = HEAP32[$925 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $899 + 28 | 0, $26 | 0);
         $927 = __THREW__;
         __THREW__ = 0;
         if ($927 & 1) {
          $929 = ___cxa_find_matching_catch() | 0;
          $930 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($899);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
          $$812273 = $930;
          $$8274 = $929;
          break L417;
         } else {
          __THREW__ = 0;
          invoke_viii(4, $899 | 0, 8, 172);
          __THREW__ = 0;
          $$02 = 0;
          break;
         }
        } while (0);
        $934 = ___cxa_find_matching_catch() | 0;
        $935 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        if ($$02) {
         $$812273 = $935;
         $$8274 = $934;
         break;
        } else {
         $$9 = $934;
         $$913 = $935;
        }
        $1008 = HEAP32[$29 >> 2] | 0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
        ___resumeException($$9 | 0);
       } while (0);
       if ((label | 0) == 347) {
        $932 = ___cxa_find_matching_catch() | 0;
        $933 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
        $$812273 = $933;
        $$8274 = $932;
       }
       ___cxa_free_exception($899 | 0);
       $$9 = $$8274;
       $$913 = $$812273;
       $1008 = HEAP32[$29 >> 2] | 0;
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
       ___resumeException($$9 | 0);
      }
      $678 = $new_vars35 + 4 | 0;
      HEAP32[$678 >> 2] = 0;
      $679 = $new_vars35 + 8 | 0;
      HEAP32[$679 >> 2] = 0;
      $680 = $new_vars35 + 4 | 0;
      HEAP32[$new_vars35 >> 2] = $680;
      $681 = HEAP32[$vars >> 2] | 0;
      $682 = $vars + 4 | 0;
      do if (($681 | 0) == ($682 | 0)) {
       $684 = $676 + 56 | 0;
       $$pre$phi401Z2D = $680;
       $1009 = $$byval_copy34;
       $1010 = $684;
       $1011 = $684;
       label = 274;
      } else {
       $685 = $680;
       $687 = $681;
       $708 = $681;
       while (1) {
        $686 = $687 + 16 | 0;
        HEAP32[$0 >> 2] = $685;
        HEAP32[$$byval_copy34 >> 2] = HEAP32[$0 >> 2];
        $688 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($new_vars35, $$byval_copy34, $__parent$i$i$i154, $686) | 0;
        if (!(HEAP32[$688 >> 2] | 0)) {
         __THREW__ = 0;
         $691 = invoke_ii(67, 20) | 0;
         $692 = __THREW__;
         __THREW__ = 0;
         if ($692 & 1) {
          label = 263;
          break;
         }
         HEAP32[$691 + 16 >> 2] = HEAP32[$686 >> 2];
         $696 = HEAP32[$__parent$i$i$i154 >> 2] | 0;
         HEAP32[$691 >> 2] = 0;
         HEAP32[$691 + 4 >> 2] = 0;
         HEAP32[$691 + 8 >> 2] = $696;
         HEAP32[$688 >> 2] = $691;
         $700 = HEAP32[HEAP32[$new_vars35 >> 2] >> 2] | 0;
         if (!$700) $704 = $691; else {
          HEAP32[$new_vars35 >> 2] = $700;
          $704 = HEAP32[$688 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$678 >> 2] | 0, $704);
         HEAP32[$679 >> 2] = (HEAP32[$679 >> 2] | 0) + 1;
        }
        $709 = HEAP32[$708 + 4 >> 2] | 0;
        if (!$709) {
         $$0$i$i$i$i162 = $708;
         while (1) {
          $714 = HEAP32[$$0$i$i$i$i162 + 8 >> 2] | 0;
          if ((HEAP32[$714 >> 2] | 0) == ($$0$i$i$i$i162 | 0)) {
           $$01$i$i$i$i165 = $714;
           break;
          } else $$0$i$i$i$i162 = $714;
         }
        } else {
         $$0$i$i$i$i$i160 = $709;
         while (1) {
          $711 = HEAP32[$$0$i$i$i$i$i160 >> 2] | 0;
          if (!$711) {
           $$01$i$i$i$i165 = $$0$i$i$i$i$i160;
           break;
          } else $$0$i$i$i$i$i160 = $711;
         }
        }
        if (($$01$i$i$i$i165 | 0) == ($682 | 0)) break; else {
         $687 = $$01$i$i$i$i165;
         $708 = $$01$i$i$i$i165;
        }
       }
       if ((label | 0) == 263) {
        $718 = ___cxa_find_matching_catch() | 0;
        $719 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$680 >> 2] | 0);
        $eh$lpad$body$index8Z2D = $719;
        $eh$lpad$body$indexZ2D = $718;
        break L1;
       }
       $$pre398 = HEAP32[$680 >> 2] | 0;
       $721 = $676 + 56 | 0;
       if (!$$pre398) {
        $$pre$phi401Z2D = $680;
        $1009 = $$byval_copy34;
        $1010 = $721;
        $1011 = $721;
        label = 274;
        break;
       }
       $723 = HEAP32[$721 >> 2] | 0;
       $__nd$0$i$i$i173 = $$pre398;
       while (1) {
        $725 = HEAP32[$__nd$0$i$i$i173 + 16 >> 2] | 0;
        if ($723 >>> 0 < $725 >>> 0) {
         $727 = HEAP32[$__nd$0$i$i$i173 >> 2] | 0;
         if (!$727) {
          $$lcssa546 = $__nd$0$i$i$i173;
          $__nd$0$i$i$i173$lcssa545 = $__nd$0$i$i$i173;
          label = 268;
          break;
         } else $__nd$0$be$in$i$i$i174 = $727;
        } else {
         if ($725 >>> 0 >= $723 >>> 0) {
          $__nd$0$i$i$i173$lcssa = $__nd$0$i$i$i173;
          label = 273;
          break;
         }
         $731 = $__nd$0$i$i$i173 + 4 | 0;
         $732 = HEAP32[$731 >> 2] | 0;
         if (!$732) {
          $$lcssa = $731;
          $__nd$0$i$i$i173$lcssa544 = $__nd$0$i$i$i173;
          label = 272;
          break;
         } else $__nd$0$be$in$i$i$i174 = $732;
        }
        $__nd$0$i$i$i173 = $__nd$0$be$in$i$i$i174;
       }
       if ((label | 0) == 268) {
        HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i173$lcssa545;
        $$0$i$i$i177 = $$lcssa546;
        $$pre$phi400Z2D = $680;
        $1012 = $$byval_copy34;
        $744 = $721;
        $747 = $__nd$0$i$i$i173$lcssa545;
        $775 = $721;
        break;
       } else if ((label | 0) == 272) {
        HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i173$lcssa544;
        $$0$i$i$i177 = $$lcssa;
        $$pre$phi400Z2D = $680;
        $1012 = $$byval_copy34;
        $744 = $721;
        $747 = $__nd$0$i$i$i173$lcssa544;
        $775 = $721;
        break;
       } else if ((label | 0) == 273) {
        HEAP32[$$byval_copy34 >> 2] = $__nd$0$i$i$i173$lcssa;
        $$0$i$i$i177 = $$byval_copy34;
        $$pre$phi400Z2D = $680;
        $1012 = $$byval_copy34;
        $744 = $721;
        $747 = $__nd$0$i$i$i173$lcssa;
        $775 = $721;
        break;
       }
      } while (0);
      if ((label | 0) == 274) {
       HEAP32[$$byval_copy34 >> 2] = $680;
       $$0$i$i$i177 = $680;
       $$pre$phi400Z2D = $$pre$phi401Z2D;
       $1012 = $1009;
       $744 = $1011;
       $747 = $680;
       $775 = $1010;
      }
      do if (!(HEAP32[$$0$i$i$i177 >> 2] | 0)) {
       __THREW__ = 0;
       $739 = invoke_ii(67, 20) | 0;
       $740 = __THREW__;
       __THREW__ = 0;
       if ($740 & 1) {
        label = 302;
        break;
       }
       HEAP32[$739 + 16 >> 2] = HEAP32[$744 >> 2];
       HEAP32[$739 >> 2] = 0;
       HEAP32[$739 + 4 >> 2] = 0;
       HEAP32[$739 + 8 >> 2] = $747;
       HEAP32[$$0$i$i$i177 >> 2] = $739;
       $749 = HEAP32[HEAP32[$new_vars35 >> 2] >> 2] | 0;
       if (!$749) $753 = $739; else {
        HEAP32[$new_vars35 >> 2] = $749;
        $753 = HEAP32[$$0$i$i$i177 >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$678 >> 2] | 0, $753);
       HEAP32[$679 >> 2] = (HEAP32[$679 >> 2] | 0) + 1;
       label = 280;
      } else label = 280; while (0);
      do if ((label | 0) == 280) {
       __THREW__ = 0;
       invoke_viiii(15, $20 | 0, HEAP32[$676 + 48 >> 2] | 0, 0, $new_vars35 | 0);
       $758 = __THREW__;
       __THREW__ = 0;
       if ($758 & 1) {
        label = 302;
        break;
       }
       __THREW__ = 0;
       invoke_vii(58, $agg$result | 0, $20 | 0);
       $760 = __THREW__;
       __THREW__ = 0;
       if ($760 & 1) {
        $813 = ___cxa_find_matching_catch() | 0;
        $814 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$20 + 4 >> 2] | 0);
        $$5 = $813;
        $$59 = $814;
        break;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($20, HEAP32[$20 + 4 >> 2] | 0);
       __THREW__ = 0;
       invoke_viiii(15, $21 | 0, HEAP32[$676 + 52 >> 2] | 0, 1, $new_vars35 | 0);
       $766 = __THREW__;
       __THREW__ = 0;
       if ($766 & 1) {
        label = 302;
        break;
       }
       __THREW__ = 0;
       invoke_vii(58, $agg$result | 0, $21 | 0);
       $768 = __THREW__;
       __THREW__ = 0;
       if ($768 & 1) {
        $817 = ___cxa_find_matching_catch() | 0;
        $818 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$21 + 4 >> 2] | 0);
        $$5 = $817;
        $$59 = $818;
        break;
       }
       __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($21, HEAP32[$21 + 4 >> 2] | 0);
       $772 = HEAP32[$29 >> 2] | 0;
       do if ($772) {
        $774 = HEAP32[$775 >> 2] | 0;
        $$0$ph6$i$i$i$i185 = $29;
        $$01$ph5$i$i$i$i186 = $772;
        L486 : while (1) {
         $$013$i$i$i$i188 = $$01$ph5$i$i$i$i186;
         while (1) {
          if ((HEAP32[$$013$i$i$i$i188 + 16 >> 2] | 0) >>> 0 >= $774 >>> 0) {
           $$013$i$i$i$i188$lcssa = $$013$i$i$i$i188;
           break;
          }
          $$013$i$i$i$i188 = HEAP32[$$013$i$i$i$i188 + 4 >> 2] | 0;
          if (!$$013$i$i$i$i188) {
           $$0$ph$lcssa$i$i$i$i190 = $$0$ph6$i$i$i$i185;
           break L486;
          }
         }
         $$01$ph5$i$i$i$i186 = HEAP32[$$013$i$i$i$i188$lcssa >> 2] | 0;
         if (!$$01$ph5$i$i$i$i186) {
          $$0$ph$lcssa$i$i$i$i190 = $$013$i$i$i$i188$lcssa;
          break;
         } else $$0$ph6$i$i$i$i185 = $$013$i$i$i$i188$lcssa;
        }
        if (($$0$ph$lcssa$i$i$i$i190 | 0) == ($29 | 0)) break;
        if ($774 >>> 0 < (HEAP32[$$0$ph$lcssa$i$i$i$i190 + 16 >> 2] | 0) >>> 0) break;
        $789 = HEAP32[$$0$ph$lcssa$i$i$i$i190 + 4 >> 2] | 0;
        if (!$789) {
         $$0$i$i$i$i$i195 = $$0$ph$lcssa$i$i$i$i190;
         while (1) {
          $794 = HEAP32[$$0$i$i$i$i$i195 + 8 >> 2] | 0;
          if ((HEAP32[$794 >> 2] | 0) == ($$0$i$i$i$i$i195 | 0)) {
           $$01$i$i$i$i$i198 = $794;
           break;
          } else $$0$i$i$i$i$i195 = $794;
         }
        } else {
         $$0$i$i$i$i$i$i193 = $789;
         while (1) {
          $791 = HEAP32[$$0$i$i$i$i$i$i193 >> 2] | 0;
          if (!$791) {
           $$01$i$i$i$i$i198 = $$0$i$i$i$i$i$i193;
           break;
          } else $$0$i$i$i$i$i$i193 = $791;
         }
        }
        if ((HEAP32[$agg$result >> 2] | 0) == ($$0$ph$lcssa$i$i$i$i190 | 0)) HEAP32[$agg$result >> 2] = $$01$i$i$i$i$i198;
        HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + -1;
        __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($772, $$0$ph$lcssa$i$i$i$i190);
        __ZdlPv($$0$ph$lcssa$i$i$i$i190);
       } while (0);
       __THREW__ = 0;
       invoke_viiii(15, $22 | 0, HEAP32[$676 + 60 >> 2] | 0, $in_object | 0, $vars | 0);
       $804 = __THREW__;
       __THREW__ = 0;
       if ($804 & 1) {
        label = 302;
        break;
       }
       __THREW__ = 0;
       invoke_vii(58, $agg$result | 0, $22 | 0);
       $806 = __THREW__;
       __THREW__ = 0;
       if ($806 & 1) {
        $821 = ___cxa_find_matching_catch() | 0;
        $822 = tempRet0;
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
        $$5 = $821;
        $$59 = $822;
        break;
       } else {
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($22, HEAP32[$22 + 4 >> 2] | 0);
        __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$$pre$phi400Z2D >> 2] | 0);
        break L3;
       }
      } while (0);
      if ((label | 0) == 302) {
       $811 = ___cxa_find_matching_catch() | 0;
       $$5 = $811;
       $$59 = tempRet0;
      }
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($new_vars35, HEAP32[$$pre$phi400Z2D >> 2] | 0);
      $$9 = $$5;
      $$913 = $$59;
      $1008 = HEAP32[$29 >> 2] | 0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
      ___resumeException($$9 | 0);
     }
    }
   }
  } else {
   __THREW__ = 0;
   invoke_viiii(15, $4 | 0, HEAP32[$31 + 48 >> 2] | 0, $in_object | 0, $vars | 0);
   $35 = __THREW__;
   __THREW__ = 0;
   if ($35 & 1) {
    label = 14;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(58, $agg$result | 0, $4 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if ($37 & 1) {
    $66 = ___cxa_find_matching_catch() | 0;
    $67 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
    $$9 = $66;
    $$913 = $67;
    $1008 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
    ___resumeException($$9 | 0);
   }
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$4 + 4 >> 2] | 0);
   $42 = HEAP32[$31 + 52 >> 2] | 0;
   $44 = HEAP32[$31 + 56 >> 2] | 0;
   if (($42 | 0) != ($44 | 0)) {
    $46 = $5 + 4 | 0;
    $48 = $42;
    while (1) {
     __THREW__ = 0;
     invoke_viiii(15, $5 | 0, HEAP32[$48 >> 2] | 0, $in_object | 0, $vars | 0);
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) {
      label = 13;
      break;
     }
     __THREW__ = 0;
     invoke_vii(58, $agg$result | 0, $5 | 0);
     $51 = __THREW__;
     __THREW__ = 0;
     if ($51 & 1) break;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($5, HEAP32[$46 >> 2] | 0);
     $48 = $48 + 4 | 0;
     if (($48 | 0) == ($44 | 0)) break L3;
    }
    if ((label | 0) == 13) {
     $62 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index8Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $62;
     break L1;
    }
    $70 = ___cxa_find_matching_catch() | 0;
    $71 = tempRet0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($5, HEAP32[$46 >> 2] | 0);
    $$9 = $70;
    $$913 = $71;
    $1008 = HEAP32[$29 >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
    ___resumeException($$9 | 0);
   }
  } while (0);
  $983 = HEAP32[$agg$result >> 2] | 0;
  if (($983 | 0) == ($29 | 0)) {
   STACKTOP = sp;
   return;
  }
  $985 = $ast_ + 40 | 0;
  $986 = $ast_ + 44 | 0;
  $987 = $ast_ + 36 | 0;
  $989 = $983;
  while (1) {
   $990 = HEAP32[$989 + 16 >> 2] | 0;
   HEAP32[$id >> 2] = $990;
   $991 = HEAP32[$985 >> 2] | 0;
   if (($991 | 0) == (HEAP32[$986 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_vii(54, $987 | 0, $id | 0);
    $996 = __THREW__;
    __THREW__ = 0;
    if ($996 & 1) {
     label = 10;
     break;
    }
   } else {
    HEAP32[$991 >> 2] = $990;
    HEAP32[$985 >> 2] = (HEAP32[$985 >> 2] | 0) + 4;
   }
   $999 = HEAP32[$989 + 4 >> 2] | 0;
   if (!$999) {
    $$0$i$i = $989;
    while (1) {
     $1004 = HEAP32[$$0$i$i + 8 >> 2] | 0;
     if ((HEAP32[$1004 >> 2] | 0) == ($$0$i$i | 0)) {
      $$01$i$i = $1004;
      break;
     } else $$0$i$i = $1004;
    }
   } else {
    $$0$i$i$i = $999;
    while (1) {
     $1001 = HEAP32[$$0$i$i$i >> 2] | 0;
     if (!$1001) {
      $$01$i$i = $$0$i$i$i;
      break;
     } else $$0$i$i$i = $1001;
    }
   }
   if (($$01$i$i | 0) == ($29 | 0)) {
    label = 374;
    break;
   } else $989 = $$01$i$i;
  }
  if ((label | 0) == 10) {
   $56 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index8Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $56;
   break;
  } else if ((label | 0) == 374) {
   STACKTOP = sp;
   return;
  }
 } while (0);
 do if ((label | 0) == 355) {
  __THREW__ = 0;
  $954 = invoke_iiii(29, 8580, 52763, 29) | 0;
  $955 = __THREW__;
  __THREW__ = 0;
  if ($955 & 1) label = 14; else {
   __THREW__ = 0;
   $957 = invoke_iii(26, $954 | 0, $ast_ | 0) | 0;
   $958 = __THREW__;
   __THREW__ = 0;
   if ($958 & 1) label = 14; else {
    __THREW__ = 0;
    $964 = invoke_ii(68, $957 + (HEAP32[(HEAP32[$957 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
    $965 = __THREW__;
    __THREW__ = 0;
    if ($965 & 1) label = 14; else {
     HEAP32[$2 >> 2] = $964;
     __THREW__ = 0;
     $967 = invoke_iii(22, $2 | 0, 11164) | 0;
     $968 = __THREW__;
     __THREW__ = 0;
     if (!($968 & 1)) {
      __THREW__ = 0;
      $973 = invoke_iii(HEAP32[(HEAP32[$967 >> 2] | 0) + 28 >> 2] | 0, $967 | 0, 10) | 0;
      $974 = __THREW__;
      __THREW__ = 0;
      if (!($974 & 1)) {
       __ZNSt3__16localeD2Ev($2);
       __THREW__ = 0;
       invoke_iii(25, $957 | 0, $973 | 0) | 0;
       $978 = __THREW__;
       __THREW__ = 0;
       if ($978 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_ii(69, $957 | 0) | 0;
       $980 = __THREW__;
       __THREW__ = 0;
       if ($980 & 1) {
        label = 14;
        break;
       }
       __THREW__ = 0;
       invoke_v(3);
       __THREW__ = 0;
       label = 14;
       break;
      }
     }
     $976 = ___cxa_find_matching_catch() | 0;
     $977 = tempRet0;
     __ZNSt3__16localeD2Ev($2);
     $eh$lpad$body$index8Z2D = $977;
     $eh$lpad$body$indexZ2D = $976;
    }
   }
  }
 } while (0);
 if ((label | 0) == 14) {
  $64 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index8Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $64;
 }
 $$9 = $eh$lpad$body$indexZ2D;
 $$913 = $eh$lpad$body$index8Z2D;
 $1008 = HEAP32[$29 >> 2] | 0;
 __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $1008);
 ___resumeException($$9 | 0);
}

function __Z21jsonlang_builtin_declm($agg$result, $builtin) {
 $agg$result = $agg$result | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$03 = 0, $$034 = 0, $$035 = 0, $$036 = 0, $$1 = 0, $$10 = 0, $$11 = 0, $$110 = 0, $$12 = 0, $$1221 = 0, $$13 = 0, $$1322 = 0, $$14 = 0, $$15 = 0, $$16 = 0, $$17 = 0, $$18 = 0, $$19 = 0, $$2 = 0, $$20 = 0, $$21 = 0, $$22 = 0, $$2231 = 0, $$23 = 0, $$24 = 0, $$2433 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$pre = 0, $$pre676 = 0, $$pre677 = 0, $$pre678 = 0, $$pre679 = 0, $$pre680 = 0, $$pre681 = 0, $$pre682 = 0, $$pre683 = 0, $$pre684 = 0, $$pre685 = 0, $$pre686 = 0, $$pre687 = 0, $$pre688 = 0, $$pre689 = 0, $$pre690 = 0, $$pre691 = 0, $$pre692 = 0, $$pre693 = 0, $$pre694 = 0, $$pre695 = 0, $$pre696 = 0, $$pre697 = 0, $$pre698 = 0, $$sink$index23 = 0, $$sink746$index35 = 0, $$sink747$index47 = 0, $$sink748$index59 = 0, $$sink749$index71 = 0, $$sink750$index83 = 0, $$sink751$index95 = 0, $$sink752$index107 = 0, $$sink753$index119 = 0, $$sink754$index131 = 0, $$sink755$index157 = 0, $$sink756$index169 = 0, $$sink757$index181 = 0, $$sink758$index193 = 0, $$sink759$index205 = 0, $$sink760$index217 = 0, $$sink761$index229 = 0, $$sink762$index241 = 0, $$sink763$index260 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $103 = 0, $105 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $113 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $122 = 0, $124 = 0, $125 = 0, $128 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $134 = 0, $136 = 0, $137 = 0, $14 = 0, $141 = 0, $145 = 0, $147 = 0, $148 = 0, $15 = 0, $150 = 0, $152 = 0, $153 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $161 = 0, $162 = 0, $164 = 0, $165 = 0, $169 = 0, $17 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $18 = 0, $180 = 0, $181 = 0, $184 = 0, $185 = 0, $187 = 0, $189 = 0, $19 = 0, $190 = 0, $192 = 0, $193 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $21 = 0, $212 = 0, $213 = 0, $215 = 0, $217 = 0, $218 = 0, $22 = 0, $220 = 0, $221 = 0, $225 = 0, $229 = 0, $23 = 0, $231 = 0, $232 = 0, $234 = 0, $236 = 0, $237 = 0, $24 = 0, $240 = 0, $241 = 0, $243 = 0, $245 = 0, $246 = 0, $248 = 0, $249 = 0, $25 = 0, $253 = 0, $257 = 0, $259 = 0, $26 = 0, $260 = 0, $262 = 0, $264 = 0, $265 = 0, $268 = 0, $269 = 0, $271 = 0, $273 = 0, $274 = 0, $276 = 0, $277 = 0, $28 = 0, $281 = 0, $285 = 0, $287 = 0, $288 = 0, $29 = 0, $290 = 0, $292 = 0, $293 = 0, $296 = 0, $297 = 0, $299 = 0, $3 = 0, $301 = 0, $302 = 0, $304 = 0, $305 = 0, $309 = 0, $31 = 0, $313 = 0, $315 = 0, $316 = 0, $318 = 0, $320 = 0, $321 = 0, $324 = 0, $325 = 0, $327 = 0, $329 = 0, $33 = 0, $330 = 0, $332 = 0, $333 = 0, $337 = 0, $34 = 0, $341 = 0, $343 = 0, $344 = 0, $346 = 0, $348 = 0, $349 = 0, $352 = 0, $353 = 0, $355 = 0, $357 = 0, $358 = 0, $360 = 0, $361 = 0, $365 = 0, $369 = 0, $371 = 0, $372 = 0, $374 = 0, $376 = 0, $377 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $384 = 0, $386 = 0, $387 = 0, $389 = 0, $391 = 0, $392 = 0, $396 = 0, $399 = 0, $4 = 0, $401 = 0, $403 = 0, $405 = 0, $406 = 0, $408 = 0, $41 = 0, $410 = 0, $411 = 0, $414 = 0, $415 = 0, $416 = 0, $419 = 0, $422 = 0, $423 = 0, $425 = 0, $426 = 0, $428 = 0, $43 = 0, $430 = 0, $431 = 0, $435 = 0, $438 = 0, $440 = 0, $442 = 0, $444 = 0, $445 = 0, $447 = 0, $449 = 0, $45 = 0, $450 = 0, $453 = 0, $454 = 0, $455 = 0, $458 = 0, $461 = 0, $463 = 0, $464 = 0, $466 = 0, $467 = 0, $47 = 0, $471 = 0, $475 = 0, $477 = 0, $478 = 0, $48 = 0, $480 = 0, $482 = 0, $483 = 0, $486 = 0, $487 = 0, $489 = 0, $491 = 0, $492 = 0, $494 = 0, $495 = 0, $499 = 0, $5 = 0, $50 = 0, $503 = 0, $505 = 0, $506 = 0, $508 = 0, $510 = 0, $511 = 0, $514 = 0, $515 = 0, $517 = 0, $519 = 0, $52 = 0, $520 = 0, $522 = 0, $523 = 0, $527 = 0, $53 = 0, $531 = 0, $533 = 0, $534 = 0, $536 = 0, $538 = 0, $539 = 0, $542 = 0, $543 = 0, $545 = 0, $547 = 0, $548 = 0, $550 = 0, $551 = 0, $555 = 0, $559 = 0, $56 = 0, $561 = 0, $562 = 0, $564 = 0, $566 = 0, $567 = 0, $57 = 0, $570 = 0, $571 = 0, $573 = 0, $575 = 0, $576 = 0, $578 = 0, $579 = 0, $58 = 0, $583 = 0, $587 = 0, $589 = 0, $590 = 0, $592 = 0, $594 = 0, $595 = 0, $598 = 0, $599 = 0, $6 = 0, $601 = 0, $603 = 0, $604 = 0, $606 = 0, $607 = 0, $61 = 0, $611 = 0, $615 = 0, $617 = 0, $618 = 0, $620 = 0, $622 = 0, $623 = 0, $626 = 0, $627 = 0, $629 = 0, $631 = 0, $632 = 0, $634 = 0, $635 = 0, $639 = 0, $64 = 0, $643 = 0, $645 = 0, $646 = 0, $648 = 0, $65 = 0, $650 = 0, $651 = 0, $654 = 0, $655 = 0, $657 = 0, $659 = 0, $660 = 0, $662 = 0, $663 = 0, $667 = 0, $67 = 0, $671 = 0, $673 = 0, $674 = 0, $676 = 0, $678 = 0, $679 = 0, $68 = 0, $682 = 0, $683 = 0, $685 = 0, $686 = 0, $688 = 0, $689 = 0, $691 = 0, $693 = 0, $694 = 0, $698 = 0, $7 = 0, $70 = 0, $701 = 0, $703 = 0, $705 = 0, $707 = 0, $708 = 0, $710 = 0, $712 = 0, $713 = 0, $716 = 0, $717 = 0, $718 = 0, $72 = 0, $721 = 0, $724 = 0, $726 = 0, $727 = 0, $729 = 0, $73 = 0, $730 = 0, $734 = 0, $738 = 0, $740 = 0, $741 = 0, $743 = 0, $745 = 0, $746 = 0, $749 = 0, $750 = 0, $753 = 0, $759 = 0, $760 = 0, $765 = 0, $766 = 0, $768 = 0, $769 = 0, $77 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $96 = 0, $97 = 0, $lpad$phi$i105707$index = 0, $lpad$phi$i105707$index41 = 0, $lpad$phi$i124709$index = 0, $lpad$phi$i124709$index53 = 0, $lpad$phi$i143711$index = 0, $lpad$phi$i143711$index65 = 0, $lpad$phi$i162713$index = 0, $lpad$phi$i162713$index77 = 0, $lpad$phi$i181715$index = 0, $lpad$phi$i181715$index89 = 0, $lpad$phi$i200717$index = 0, $lpad$phi$i200717$index101 = 0, $lpad$phi$i219719$index = 0, $lpad$phi$i219719$index113 = 0, $lpad$phi$i238721$index = 0, $lpad$phi$i238721$index125 = 0, $lpad$phi$i258723$index = 0, $lpad$phi$i258723$index137 = 0, $lpad$phi$i278725$index = 0, $lpad$phi$i278725$index144 = 0, $lpad$phi$i297727$index = 0, $lpad$phi$i297727$index151 = 0, $lpad$phi$i316729$index = 0, $lpad$phi$i316729$index163 = 0, $lpad$phi$i335731$index = 0, $lpad$phi$i335731$index175 = 0, $lpad$phi$i354733$index = 0, $lpad$phi$i354733$index187 = 0, $lpad$phi$i373735$index = 0, $lpad$phi$i373735$index199 = 0, $lpad$phi$i392737$index = 0, $lpad$phi$i392737$index211 = 0, $lpad$phi$i411739$index = 0, $lpad$phi$i411739$index223 = 0, $lpad$phi$i430741$index = 0, $lpad$phi$i430741$index235 = 0, $lpad$phi$i450743$index = 0, $lpad$phi$i450743$index247 = 0, $lpad$phi$i469745$index = 0, $lpad$phi$i469745$index254 = 0, $lpad$phi$i48701$index = 0, $lpad$phi$i48701$index10 = 0, $lpad$phi$i67703$index = 0, $lpad$phi$i67703$index17 = 0, $lpad$phi$i699$index = 0, $lpad$phi$i699$index3 = 0, $lpad$phi$i86705$index = 0, $lpad$phi$i86705$index29 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 368 | 0;
 $0 = sp + 348 | 0;
 $1 = sp + 312 | 0;
 $2 = sp + 88 | 0;
 $3 = sp + 112 | 0;
 $4 = sp + 224 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 200 | 0;
 $8 = sp + 48 | 0;
 $9 = sp + 260 | 0;
 $10 = sp + 296 | 0;
 $11 = sp + 336 | 0;
 $12 = sp + 352 | 0;
 $13 = sp + 128 | 0;
 $14 = sp + 152 | 0;
 $15 = sp + 188 | 0;
 $16 = sp + 176 | 0;
 $17 = sp + 212 | 0;
 $18 = sp + 236 | 0;
 $19 = sp + 12 | 0;
 $20 = sp + 60 | 0;
 $21 = sp + 248 | 0;
 $22 = sp + 72 | 0;
 $23 = sp + 272 | 0;
 $24 = sp;
 do switch ($builtin | 0) {
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16173, 9);
   $25 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $1 | 0, 16183, 2);
   $26 = __THREW__;
   __THREW__ = 0;
   if ($26 & 1) {
    $$0 = $1;
    label = 13;
   } else {
    $28 = $1 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $28 | 0, 16186, 4);
    $29 = __THREW__;
    __THREW__ = 0;
    if ($29 & 1) {
     $$0 = $28;
     label = 13;
    } else {
     HEAP32[$25 >> 2] = 0;
     $31 = $agg$result + 16 | 0;
     HEAP32[$31 >> 2] = 0;
     HEAP32[$agg$result + 20 >> 2] = 0;
     __THREW__ = 0;
     $33 = invoke_ii(67, 24) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if ($34 & 1) {
      $45 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i699$index = $45;
      $lpad$phi$i699$index3 = tempRet0;
     } else {
      HEAP32[$31 >> 2] = $33;
      HEAP32[$25 >> 2] = $33;
      HEAP32[$agg$result + 20 >> 2] = $33 + 24;
      __THREW__ = 0;
      invoke_vii(40, $33 | 0, $1 | 0);
      $38 = __THREW__;
      __THREW__ = 0;
      if (!($38 & 1)) {
       $41 = (HEAP32[$31 >> 2] | 0) + 12 | 0;
       HEAP32[$31 >> 2] = $41;
       __THREW__ = 0;
       invoke_vii(40, $41 | 0, $1 + 12 | 0);
       $43 = __THREW__;
       __THREW__ = 0;
       if (!($43 & 1)) {
        HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        STACKTOP = sp;
        return;
       }
      }
      $47 = ___cxa_find_matching_catch() | 0;
      $48 = tempRet0;
      $$pre698 = HEAP32[$25 >> 2] | 0;
      if (!$$pre698) {
       $lpad$phi$i699$index = $47;
       $lpad$phi$i699$index3 = $48;
      } else {
       $50 = HEAP32[$31 >> 2] | 0;
       if (($50 | 0) == ($$pre698 | 0)) $56 = $$pre698; else {
        $53 = $50;
        do {
         $52 = $53 + -12 | 0;
         HEAP32[$31 >> 2] = $52;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
         $53 = HEAP32[$31 >> 2] | 0;
        } while (($53 | 0) != ($$pre698 | 0));
        $56 = HEAP32[$25 >> 2] | 0;
       }
       __ZdlPv($56);
       $lpad$phi$i699$index = $47;
       $lpad$phi$i699$index3 = $48;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     $$02 = $lpad$phi$i699$index;
     $$03 = $lpad$phi$i699$index3;
    }
   }
   if ((label | 0) == 13) {
    $57 = ___cxa_find_matching_catch() | 0;
    $58 = tempRet0;
    if (($1 | 0) == ($$0 | 0)) {
     $$02 = $57;
     $$03 = $58;
    } else {
     $61 = $$0;
     do {
      $61 = $61 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($61);
     } while (($61 | 0) != ($1 | 0));
     $$02 = $57;
     $$03 = $58;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$02;
   $$2433 = $$03;
   ___resumeException($$24 | 0);
   break;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16191, 3);
   $64 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $2 | 0, 16195, 1);
   $65 = __THREW__;
   __THREW__ = 0;
   if ($65 & 1) {
    $$034 = $2;
    label = 28;
   } else {
    $67 = $2 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $67 | 0, 16197, 1);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     $$034 = $67;
     label = 28;
    } else {
     HEAP32[$64 >> 2] = 0;
     $70 = $agg$result + 16 | 0;
     HEAP32[$70 >> 2] = 0;
     HEAP32[$agg$result + 20 >> 2] = 0;
     __THREW__ = 0;
     $72 = invoke_ii(67, 24) | 0;
     $73 = __THREW__;
     __THREW__ = 0;
     if ($73 & 1) {
      $84 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i48701$index = $84;
      $lpad$phi$i48701$index10 = tempRet0;
     } else {
      HEAP32[$70 >> 2] = $72;
      HEAP32[$64 >> 2] = $72;
      HEAP32[$agg$result + 20 >> 2] = $72 + 24;
      __THREW__ = 0;
      invoke_vii(40, $72 | 0, $2 | 0);
      $77 = __THREW__;
      __THREW__ = 0;
      if (!($77 & 1)) {
       $80 = (HEAP32[$70 >> 2] | 0) + 12 | 0;
       HEAP32[$70 >> 2] = $80;
       __THREW__ = 0;
       invoke_vii(40, $80 | 0, $2 + 12 | 0);
       $82 = __THREW__;
       __THREW__ = 0;
       if (!($82 & 1)) {
        HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        STACKTOP = sp;
        return;
       }
      }
      $86 = ___cxa_find_matching_catch() | 0;
      $87 = tempRet0;
      $$pre697 = HEAP32[$64 >> 2] | 0;
      if (!$$pre697) {
       $lpad$phi$i48701$index = $86;
       $lpad$phi$i48701$index10 = $87;
      } else {
       $89 = HEAP32[$70 >> 2] | 0;
       if (($89 | 0) == ($$pre697 | 0)) $95 = $$pre697; else {
        $92 = $89;
        do {
         $91 = $92 + -12 | 0;
         HEAP32[$70 >> 2] = $91;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($91);
         $92 = HEAP32[$70 >> 2] | 0;
        } while (($92 | 0) != ($$pre697 | 0));
        $95 = HEAP32[$64 >> 2] | 0;
       }
       __ZdlPv($95);
       $lpad$phi$i48701$index = $86;
       $lpad$phi$i48701$index10 = $87;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     $$1 = $lpad$phi$i48701$index;
     $$110 = $lpad$phi$i48701$index10;
    }
   }
   if ((label | 0) == 28) {
    $96 = ___cxa_find_matching_catch() | 0;
    $97 = tempRet0;
    if (($2 | 0) == ($$034 | 0)) {
     $$1 = $96;
     $$110 = $97;
    } else {
     $100 = $$034;
     do {
      $100 = $100 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($100);
     } while (($100 | 0) != ($2 | 0));
     $$1 = $96;
     $$110 = $97;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$1;
   $$2433 = $$110;
   ___resumeException($$24 | 0);
   break;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16199, 5);
   __THREW__ = 0;
   invoke_viii(3, $3 | 0, 16195, 1);
   $103 = __THREW__;
   __THREW__ = 0;
   if ($103 & 1) {
    $129 = ___cxa_find_matching_catch() | 0;
    $$2 = $129;
    $$sink$index23 = tempRet0;
   } else {
    $105 = $agg$result + 12 | 0;
    HEAP32[$105 >> 2] = 0;
    $106 = $agg$result + 16 | 0;
    HEAP32[$106 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $108 = invoke_ii(67, 12) | 0;
    $109 = __THREW__;
    __THREW__ = 0;
    if ($109 & 1) {
     $117 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i67703$index = $117;
     $lpad$phi$i67703$index17 = tempRet0;
    } else {
     HEAP32[$106 >> 2] = $108;
     HEAP32[$105 >> 2] = $108;
     HEAP32[$agg$result + 20 >> 2] = $108 + 12;
     __THREW__ = 0;
     invoke_vii(40, $108 | 0, $3 | 0);
     $113 = __THREW__;
     __THREW__ = 0;
     if (!($113 & 1)) {
      HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      STACKTOP = sp;
      return;
     }
     $119 = ___cxa_find_matching_catch() | 0;
     $120 = tempRet0;
     $$pre696 = HEAP32[$105 >> 2] | 0;
     if (!$$pre696) {
      $lpad$phi$i67703$index = $119;
      $lpad$phi$i67703$index17 = $120;
     } else {
      $122 = HEAP32[$106 >> 2] | 0;
      if (($122 | 0) == ($$pre696 | 0)) $128 = $$pre696; else {
       $125 = $122;
       do {
        $124 = $125 + -12 | 0;
        HEAP32[$106 >> 2] = $124;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($124);
        $125 = HEAP32[$106 >> 2] | 0;
       } while (($125 | 0) != ($$pre696 | 0));
       $128 = HEAP32[$105 >> 2] | 0;
      }
      __ZdlPv($128);
      $lpad$phi$i67703$index = $119;
      $lpad$phi$i67703$index17 = $120;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$2 = $lpad$phi$i67703$index;
    $$sink$index23 = $lpad$phi$i67703$index17;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$2;
   $$2433 = $$sink$index23;
   ___resumeException($$24 | 0);
   break;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16205, 4);
   __THREW__ = 0;
   invoke_viii(3, $4 | 0, 16195, 1);
   $131 = __THREW__;
   __THREW__ = 0;
   if ($131 & 1) {
    $157 = ___cxa_find_matching_catch() | 0;
    $$3 = $157;
    $$sink746$index35 = tempRet0;
   } else {
    $133 = $agg$result + 12 | 0;
    HEAP32[$133 >> 2] = 0;
    $134 = $agg$result + 16 | 0;
    HEAP32[$134 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $136 = invoke_ii(67, 12) | 0;
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     $145 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i86705$index = $145;
     $lpad$phi$i86705$index29 = tempRet0;
    } else {
     HEAP32[$134 >> 2] = $136;
     HEAP32[$133 >> 2] = $136;
     HEAP32[$agg$result + 20 >> 2] = $136 + 12;
     __THREW__ = 0;
     invoke_vii(40, $136 | 0, $4 | 0);
     $141 = __THREW__;
     __THREW__ = 0;
     if (!($141 & 1)) {
      HEAP32[$134 >> 2] = (HEAP32[$134 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      STACKTOP = sp;
      return;
     }
     $147 = ___cxa_find_matching_catch() | 0;
     $148 = tempRet0;
     $$pre695 = HEAP32[$133 >> 2] | 0;
     if (!$$pre695) {
      $lpad$phi$i86705$index = $147;
      $lpad$phi$i86705$index29 = $148;
     } else {
      $150 = HEAP32[$134 >> 2] | 0;
      if (($150 | 0) == ($$pre695 | 0)) $156 = $$pre695; else {
       $153 = $150;
       do {
        $152 = $153 + -12 | 0;
        HEAP32[$134 >> 2] = $152;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($152);
        $153 = HEAP32[$134 >> 2] | 0;
       } while (($153 | 0) != ($$pre695 | 0));
       $156 = HEAP32[$133 >> 2] | 0;
      }
      __ZdlPv($156);
      $lpad$phi$i86705$index = $147;
      $lpad$phi$i86705$index29 = $148;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
    $$3 = $lpad$phi$i86705$index;
    $$sink746$index35 = $lpad$phi$i86705$index29;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$3;
   $$2433 = $$sink746$index35;
   ___resumeException($$24 | 0);
   break;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16210, 4);
   __THREW__ = 0;
   invoke_viii(3, $5 | 0, 16195, 1);
   $159 = __THREW__;
   __THREW__ = 0;
   if ($159 & 1) {
    $185 = ___cxa_find_matching_catch() | 0;
    $$4 = $185;
    $$sink747$index47 = tempRet0;
   } else {
    $161 = $agg$result + 12 | 0;
    HEAP32[$161 >> 2] = 0;
    $162 = $agg$result + 16 | 0;
    HEAP32[$162 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $164 = invoke_ii(67, 12) | 0;
    $165 = __THREW__;
    __THREW__ = 0;
    if ($165 & 1) {
     $173 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i105707$index = $173;
     $lpad$phi$i105707$index41 = tempRet0;
    } else {
     HEAP32[$162 >> 2] = $164;
     HEAP32[$161 >> 2] = $164;
     HEAP32[$agg$result + 20 >> 2] = $164 + 12;
     __THREW__ = 0;
     invoke_vii(40, $164 | 0, $5 | 0);
     $169 = __THREW__;
     __THREW__ = 0;
     if (!($169 & 1)) {
      HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      STACKTOP = sp;
      return;
     }
     $175 = ___cxa_find_matching_catch() | 0;
     $176 = tempRet0;
     $$pre694 = HEAP32[$161 >> 2] | 0;
     if (!$$pre694) {
      $lpad$phi$i105707$index = $175;
      $lpad$phi$i105707$index41 = $176;
     } else {
      $178 = HEAP32[$162 >> 2] | 0;
      if (($178 | 0) == ($$pre694 | 0)) $184 = $$pre694; else {
       $181 = $178;
       do {
        $180 = $181 + -12 | 0;
        HEAP32[$162 >> 2] = $180;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($180);
        $181 = HEAP32[$162 >> 2] | 0;
       } while (($181 | 0) != ($$pre694 | 0));
       $184 = HEAP32[$161 >> 2] | 0;
      }
      __ZdlPv($184);
      $lpad$phi$i105707$index = $175;
      $lpad$phi$i105707$index41 = $176;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $$4 = $lpad$phi$i105707$index;
    $$sink747$index47 = $lpad$phi$i105707$index41;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$4;
   $$2433 = $$sink747$index47;
   ___resumeException($$24 | 0);
   break;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16215, 3);
   __THREW__ = 0;
   invoke_viii(3, $6 | 0, 16195, 1);
   $187 = __THREW__;
   __THREW__ = 0;
   if ($187 & 1) {
    $213 = ___cxa_find_matching_catch() | 0;
    $$5 = $213;
    $$sink748$index59 = tempRet0;
   } else {
    $189 = $agg$result + 12 | 0;
    HEAP32[$189 >> 2] = 0;
    $190 = $agg$result + 16 | 0;
    HEAP32[$190 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $192 = invoke_ii(67, 12) | 0;
    $193 = __THREW__;
    __THREW__ = 0;
    if ($193 & 1) {
     $201 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i124709$index = $201;
     $lpad$phi$i124709$index53 = tempRet0;
    } else {
     HEAP32[$190 >> 2] = $192;
     HEAP32[$189 >> 2] = $192;
     HEAP32[$agg$result + 20 >> 2] = $192 + 12;
     __THREW__ = 0;
     invoke_vii(40, $192 | 0, $6 | 0);
     $197 = __THREW__;
     __THREW__ = 0;
     if (!($197 & 1)) {
      HEAP32[$190 >> 2] = (HEAP32[$190 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
      STACKTOP = sp;
      return;
     }
     $203 = ___cxa_find_matching_catch() | 0;
     $204 = tempRet0;
     $$pre693 = HEAP32[$189 >> 2] | 0;
     if (!$$pre693) {
      $lpad$phi$i124709$index = $203;
      $lpad$phi$i124709$index53 = $204;
     } else {
      $206 = HEAP32[$190 >> 2] | 0;
      if (($206 | 0) == ($$pre693 | 0)) $212 = $$pre693; else {
       $209 = $206;
       do {
        $208 = $209 + -12 | 0;
        HEAP32[$190 >> 2] = $208;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($208);
        $209 = HEAP32[$190 >> 2] | 0;
       } while (($209 | 0) != ($$pre693 | 0));
       $212 = HEAP32[$189 >> 2] | 0;
      }
      __ZdlPv($212);
      $lpad$phi$i124709$index = $203;
      $lpad$phi$i124709$index53 = $204;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    $$5 = $lpad$phi$i124709$index;
    $$sink748$index59 = $lpad$phi$i124709$index53;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$5;
   $$2433 = $$sink748$index59;
   ___resumeException($$24 | 0);
   break;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16219, 3);
   __THREW__ = 0;
   invoke_viii(3, $7 | 0, 16195, 1);
   $215 = __THREW__;
   __THREW__ = 0;
   if ($215 & 1) {
    $241 = ___cxa_find_matching_catch() | 0;
    $$6 = $241;
    $$sink749$index71 = tempRet0;
   } else {
    $217 = $agg$result + 12 | 0;
    HEAP32[$217 >> 2] = 0;
    $218 = $agg$result + 16 | 0;
    HEAP32[$218 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $220 = invoke_ii(67, 12) | 0;
    $221 = __THREW__;
    __THREW__ = 0;
    if ($221 & 1) {
     $229 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i143711$index = $229;
     $lpad$phi$i143711$index65 = tempRet0;
    } else {
     HEAP32[$218 >> 2] = $220;
     HEAP32[$217 >> 2] = $220;
     HEAP32[$agg$result + 20 >> 2] = $220 + 12;
     __THREW__ = 0;
     invoke_vii(40, $220 | 0, $7 | 0);
     $225 = __THREW__;
     __THREW__ = 0;
     if (!($225 & 1)) {
      HEAP32[$218 >> 2] = (HEAP32[$218 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      STACKTOP = sp;
      return;
     }
     $231 = ___cxa_find_matching_catch() | 0;
     $232 = tempRet0;
     $$pre692 = HEAP32[$217 >> 2] | 0;
     if (!$$pre692) {
      $lpad$phi$i143711$index = $231;
      $lpad$phi$i143711$index65 = $232;
     } else {
      $234 = HEAP32[$218 >> 2] | 0;
      if (($234 | 0) == ($$pre692 | 0)) $240 = $$pre692; else {
       $237 = $234;
       do {
        $236 = $237 + -12 | 0;
        HEAP32[$218 >> 2] = $236;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($236);
        $237 = HEAP32[$218 >> 2] | 0;
       } while (($237 | 0) != ($$pre692 | 0));
       $240 = HEAP32[$217 >> 2] | 0;
      }
      __ZdlPv($240);
      $lpad$phi$i143711$index = $231;
      $lpad$phi$i143711$index65 = $232;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    $$6 = $lpad$phi$i143711$index;
    $$sink749$index71 = $lpad$phi$i143711$index65;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$6;
   $$2433 = $$sink749$index71;
   ___resumeException($$24 | 0);
   break;
  }
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16223, 3);
   __THREW__ = 0;
   invoke_viii(3, $8 | 0, 16195, 1);
   $243 = __THREW__;
   __THREW__ = 0;
   if ($243 & 1) {
    $269 = ___cxa_find_matching_catch() | 0;
    $$7 = $269;
    $$sink750$index83 = tempRet0;
   } else {
    $245 = $agg$result + 12 | 0;
    HEAP32[$245 >> 2] = 0;
    $246 = $agg$result + 16 | 0;
    HEAP32[$246 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $248 = invoke_ii(67, 12) | 0;
    $249 = __THREW__;
    __THREW__ = 0;
    if ($249 & 1) {
     $257 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i162713$index = $257;
     $lpad$phi$i162713$index77 = tempRet0;
    } else {
     HEAP32[$246 >> 2] = $248;
     HEAP32[$245 >> 2] = $248;
     HEAP32[$agg$result + 20 >> 2] = $248 + 12;
     __THREW__ = 0;
     invoke_vii(40, $248 | 0, $8 | 0);
     $253 = __THREW__;
     __THREW__ = 0;
     if (!($253 & 1)) {
      HEAP32[$246 >> 2] = (HEAP32[$246 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      STACKTOP = sp;
      return;
     }
     $259 = ___cxa_find_matching_catch() | 0;
     $260 = tempRet0;
     $$pre691 = HEAP32[$245 >> 2] | 0;
     if (!$$pre691) {
      $lpad$phi$i162713$index = $259;
      $lpad$phi$i162713$index77 = $260;
     } else {
      $262 = HEAP32[$246 >> 2] | 0;
      if (($262 | 0) == ($$pre691 | 0)) $268 = $$pre691; else {
       $265 = $262;
       do {
        $264 = $265 + -12 | 0;
        HEAP32[$246 >> 2] = $264;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($264);
        $265 = HEAP32[$246 >> 2] | 0;
       } while (($265 | 0) != ($$pre691 | 0));
       $268 = HEAP32[$245 >> 2] | 0;
      }
      __ZdlPv($268);
      $lpad$phi$i162713$index = $259;
      $lpad$phi$i162713$index77 = $260;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    $$7 = $lpad$phi$i162713$index;
    $$sink750$index83 = $lpad$phi$i162713$index77;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$7;
   $$2433 = $$sink750$index83;
   ___resumeException($$24 | 0);
   break;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16227, 4);
   __THREW__ = 0;
   invoke_viii(3, $9 | 0, 16195, 1);
   $271 = __THREW__;
   __THREW__ = 0;
   if ($271 & 1) {
    $297 = ___cxa_find_matching_catch() | 0;
    $$8 = $297;
    $$sink751$index95 = tempRet0;
   } else {
    $273 = $agg$result + 12 | 0;
    HEAP32[$273 >> 2] = 0;
    $274 = $agg$result + 16 | 0;
    HEAP32[$274 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $276 = invoke_ii(67, 12) | 0;
    $277 = __THREW__;
    __THREW__ = 0;
    if ($277 & 1) {
     $285 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i181715$index = $285;
     $lpad$phi$i181715$index89 = tempRet0;
    } else {
     HEAP32[$274 >> 2] = $276;
     HEAP32[$273 >> 2] = $276;
     HEAP32[$agg$result + 20 >> 2] = $276 + 12;
     __THREW__ = 0;
     invoke_vii(40, $276 | 0, $9 | 0);
     $281 = __THREW__;
     __THREW__ = 0;
     if (!($281 & 1)) {
      HEAP32[$274 >> 2] = (HEAP32[$274 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      STACKTOP = sp;
      return;
     }
     $287 = ___cxa_find_matching_catch() | 0;
     $288 = tempRet0;
     $$pre690 = HEAP32[$273 >> 2] | 0;
     if (!$$pre690) {
      $lpad$phi$i181715$index = $287;
      $lpad$phi$i181715$index89 = $288;
     } else {
      $290 = HEAP32[$274 >> 2] | 0;
      if (($290 | 0) == ($$pre690 | 0)) $296 = $$pre690; else {
       $293 = $290;
       do {
        $292 = $293 + -12 | 0;
        HEAP32[$274 >> 2] = $292;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($292);
        $293 = HEAP32[$274 >> 2] | 0;
       } while (($293 | 0) != ($$pre690 | 0));
       $296 = HEAP32[$273 >> 2] | 0;
      }
      __ZdlPv($296);
      $lpad$phi$i181715$index = $287;
      $lpad$phi$i181715$index89 = $288;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    $$8 = $lpad$phi$i181715$index;
    $$sink751$index95 = $lpad$phi$i181715$index89;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$8;
   $$2433 = $$sink751$index95;
   ___resumeException($$24 | 0);
   break;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16232, 4);
   __THREW__ = 0;
   invoke_viii(3, $10 | 0, 16195, 1);
   $299 = __THREW__;
   __THREW__ = 0;
   if ($299 & 1) {
    $325 = ___cxa_find_matching_catch() | 0;
    $$9 = $325;
    $$sink752$index107 = tempRet0;
   } else {
    $301 = $agg$result + 12 | 0;
    HEAP32[$301 >> 2] = 0;
    $302 = $agg$result + 16 | 0;
    HEAP32[$302 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $304 = invoke_ii(67, 12) | 0;
    $305 = __THREW__;
    __THREW__ = 0;
    if ($305 & 1) {
     $313 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i200717$index = $313;
     $lpad$phi$i200717$index101 = tempRet0;
    } else {
     HEAP32[$302 >> 2] = $304;
     HEAP32[$301 >> 2] = $304;
     HEAP32[$agg$result + 20 >> 2] = $304 + 12;
     __THREW__ = 0;
     invoke_vii(40, $304 | 0, $10 | 0);
     $309 = __THREW__;
     __THREW__ = 0;
     if (!($309 & 1)) {
      HEAP32[$302 >> 2] = (HEAP32[$302 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
      STACKTOP = sp;
      return;
     }
     $315 = ___cxa_find_matching_catch() | 0;
     $316 = tempRet0;
     $$pre689 = HEAP32[$301 >> 2] | 0;
     if (!$$pre689) {
      $lpad$phi$i200717$index = $315;
      $lpad$phi$i200717$index101 = $316;
     } else {
      $318 = HEAP32[$302 >> 2] | 0;
      if (($318 | 0) == ($$pre689 | 0)) $324 = $$pre689; else {
       $321 = $318;
       do {
        $320 = $321 + -12 | 0;
        HEAP32[$302 >> 2] = $320;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($320);
        $321 = HEAP32[$302 >> 2] | 0;
       } while (($321 | 0) != ($$pre689 | 0));
       $324 = HEAP32[$301 >> 2] | 0;
      }
      __ZdlPv($324);
      $lpad$phi$i200717$index = $315;
      $lpad$phi$i200717$index101 = $316;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    $$9 = $lpad$phi$i200717$index;
    $$sink752$index107 = $lpad$phi$i200717$index101;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$9;
   $$2433 = $$sink752$index107;
   ___resumeException($$24 | 0);
   break;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16237, 4);
   __THREW__ = 0;
   invoke_viii(3, $11 | 0, 16195, 1);
   $327 = __THREW__;
   __THREW__ = 0;
   if ($327 & 1) {
    $353 = ___cxa_find_matching_catch() | 0;
    $$10 = $353;
    $$sink753$index119 = tempRet0;
   } else {
    $329 = $agg$result + 12 | 0;
    HEAP32[$329 >> 2] = 0;
    $330 = $agg$result + 16 | 0;
    HEAP32[$330 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $332 = invoke_ii(67, 12) | 0;
    $333 = __THREW__;
    __THREW__ = 0;
    if ($333 & 1) {
     $341 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i219719$index = $341;
     $lpad$phi$i219719$index113 = tempRet0;
    } else {
     HEAP32[$330 >> 2] = $332;
     HEAP32[$329 >> 2] = $332;
     HEAP32[$agg$result + 20 >> 2] = $332 + 12;
     __THREW__ = 0;
     invoke_vii(40, $332 | 0, $11 | 0);
     $337 = __THREW__;
     __THREW__ = 0;
     if (!($337 & 1)) {
      HEAP32[$330 >> 2] = (HEAP32[$330 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
      STACKTOP = sp;
      return;
     }
     $343 = ___cxa_find_matching_catch() | 0;
     $344 = tempRet0;
     $$pre688 = HEAP32[$329 >> 2] | 0;
     if (!$$pre688) {
      $lpad$phi$i219719$index = $343;
      $lpad$phi$i219719$index113 = $344;
     } else {
      $346 = HEAP32[$330 >> 2] | 0;
      if (($346 | 0) == ($$pre688 | 0)) $352 = $$pre688; else {
       $349 = $346;
       do {
        $348 = $349 + -12 | 0;
        HEAP32[$330 >> 2] = $348;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($348);
        $349 = HEAP32[$330 >> 2] | 0;
       } while (($349 | 0) != ($$pre688 | 0));
       $352 = HEAP32[$329 >> 2] | 0;
      }
      __ZdlPv($352);
      $lpad$phi$i219719$index = $343;
      $lpad$phi$i219719$index113 = $344;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
    $$10 = $lpad$phi$i219719$index;
    $$sink753$index119 = $lpad$phi$i219719$index113;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$10;
   $$2433 = $$sink753$index119;
   ___resumeException($$24 | 0);
   break;
  }
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16242, 4);
   __THREW__ = 0;
   invoke_viii(3, $12 | 0, 16195, 1);
   $355 = __THREW__;
   __THREW__ = 0;
   if ($355 & 1) {
    $381 = ___cxa_find_matching_catch() | 0;
    $$11 = $381;
    $$sink754$index131 = tempRet0;
   } else {
    $357 = $agg$result + 12 | 0;
    HEAP32[$357 >> 2] = 0;
    $358 = $agg$result + 16 | 0;
    HEAP32[$358 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $360 = invoke_ii(67, 12) | 0;
    $361 = __THREW__;
    __THREW__ = 0;
    if ($361 & 1) {
     $369 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i238721$index = $369;
     $lpad$phi$i238721$index125 = tempRet0;
    } else {
     HEAP32[$358 >> 2] = $360;
     HEAP32[$357 >> 2] = $360;
     HEAP32[$agg$result + 20 >> 2] = $360 + 12;
     __THREW__ = 0;
     invoke_vii(40, $360 | 0, $12 | 0);
     $365 = __THREW__;
     __THREW__ = 0;
     if (!($365 & 1)) {
      HEAP32[$358 >> 2] = (HEAP32[$358 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
      STACKTOP = sp;
      return;
     }
     $371 = ___cxa_find_matching_catch() | 0;
     $372 = tempRet0;
     $$pre687 = HEAP32[$357 >> 2] | 0;
     if (!$$pre687) {
      $lpad$phi$i238721$index = $371;
      $lpad$phi$i238721$index125 = $372;
     } else {
      $374 = HEAP32[$358 >> 2] | 0;
      if (($374 | 0) == ($$pre687 | 0)) $380 = $$pre687; else {
       $377 = $374;
       do {
        $376 = $377 + -12 | 0;
        HEAP32[$358 >> 2] = $376;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($376);
        $377 = HEAP32[$358 >> 2] | 0;
       } while (($377 | 0) != ($$pre687 | 0));
       $380 = HEAP32[$357 >> 2] | 0;
      }
      __ZdlPv($380);
      $lpad$phi$i238721$index = $371;
      $lpad$phi$i238721$index125 = $372;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
    $$11 = $lpad$phi$i238721$index;
    $$sink754$index131 = $lpad$phi$i238721$index125;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$11;
   $$2433 = $$sink754$index131;
   ___resumeException($$24 | 0);
   break;
  }
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16247, 6);
   $383 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $13 | 0, 16186, 4);
   $384 = __THREW__;
   __THREW__ = 0;
   if ($384 & 1) {
    $$036 = $13;
    label = 173;
   } else {
    $386 = $13 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $386 | 0, 16254, 3);
    $387 = __THREW__;
    __THREW__ = 0;
    if ($387 & 1) {
     $$036 = $386;
     label = 173;
    } else {
     HEAP32[$383 >> 2] = 0;
     $389 = $agg$result + 16 | 0;
     HEAP32[$389 >> 2] = 0;
     HEAP32[$agg$result + 20 >> 2] = 0;
     __THREW__ = 0;
     $391 = invoke_ii(67, 24) | 0;
     $392 = __THREW__;
     __THREW__ = 0;
     if ($392 & 1) {
      $403 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i258723$index = $403;
      $lpad$phi$i258723$index137 = tempRet0;
     } else {
      HEAP32[$389 >> 2] = $391;
      HEAP32[$383 >> 2] = $391;
      HEAP32[$agg$result + 20 >> 2] = $391 + 24;
      __THREW__ = 0;
      invoke_vii(40, $391 | 0, $13 | 0);
      $396 = __THREW__;
      __THREW__ = 0;
      if (!($396 & 1)) {
       $399 = (HEAP32[$389 >> 2] | 0) + 12 | 0;
       HEAP32[$389 >> 2] = $399;
       __THREW__ = 0;
       invoke_vii(40, $399 | 0, $13 + 12 | 0);
       $401 = __THREW__;
       __THREW__ = 0;
       if (!($401 & 1)) {
        HEAP32[$389 >> 2] = (HEAP32[$389 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
        STACKTOP = sp;
        return;
       }
      }
      $405 = ___cxa_find_matching_catch() | 0;
      $406 = tempRet0;
      $$pre686 = HEAP32[$383 >> 2] | 0;
      if (!$$pre686) {
       $lpad$phi$i258723$index = $405;
       $lpad$phi$i258723$index137 = $406;
      } else {
       $408 = HEAP32[$389 >> 2] | 0;
       if (($408 | 0) == ($$pre686 | 0)) $414 = $$pre686; else {
        $411 = $408;
        do {
         $410 = $411 + -12 | 0;
         HEAP32[$389 >> 2] = $410;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($410);
         $411 = HEAP32[$389 >> 2] | 0;
        } while (($411 | 0) != ($$pre686 | 0));
        $414 = HEAP32[$383 >> 2] | 0;
       }
       __ZdlPv($414);
       $lpad$phi$i258723$index = $405;
       $lpad$phi$i258723$index137 = $406;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     $$12 = $lpad$phi$i258723$index;
     $$1221 = $lpad$phi$i258723$index137;
    }
   }
   if ((label | 0) == 173) {
    $415 = ___cxa_find_matching_catch() | 0;
    $416 = tempRet0;
    if (($13 | 0) == ($$036 | 0)) {
     $$12 = $415;
     $$1221 = $416;
    } else {
     $419 = $$036;
     do {
      $419 = $419 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($419);
     } while (($419 | 0) != ($13 | 0));
     $$12 = $415;
     $$1221 = $416;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$12;
   $$2433 = $$1221;
   ___resumeException($$24 | 0);
   break;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16258, 9);
   $422 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $14 | 0, 16268, 3);
   $423 = __THREW__;
   __THREW__ = 0;
   if ($423 & 1) {
    $$035 = $14;
    label = 188;
   } else {
    $425 = $14 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $425 | 0, 16272, 1);
    $426 = __THREW__;
    __THREW__ = 0;
    if ($426 & 1) {
     $$035 = $425;
     label = 188;
    } else {
     HEAP32[$422 >> 2] = 0;
     $428 = $agg$result + 16 | 0;
     HEAP32[$428 >> 2] = 0;
     HEAP32[$agg$result + 20 >> 2] = 0;
     __THREW__ = 0;
     $430 = invoke_ii(67, 24) | 0;
     $431 = __THREW__;
     __THREW__ = 0;
     if ($431 & 1) {
      $442 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i278725$index = $442;
      $lpad$phi$i278725$index144 = tempRet0;
     } else {
      HEAP32[$428 >> 2] = $430;
      HEAP32[$422 >> 2] = $430;
      HEAP32[$agg$result + 20 >> 2] = $430 + 24;
      __THREW__ = 0;
      invoke_vii(40, $430 | 0, $14 | 0);
      $435 = __THREW__;
      __THREW__ = 0;
      if (!($435 & 1)) {
       $438 = (HEAP32[$428 >> 2] | 0) + 12 | 0;
       HEAP32[$428 >> 2] = $438;
       __THREW__ = 0;
       invoke_vii(40, $438 | 0, $14 + 12 | 0);
       $440 = __THREW__;
       __THREW__ = 0;
       if (!($440 & 1)) {
        HEAP32[$428 >> 2] = (HEAP32[$428 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
        STACKTOP = sp;
        return;
       }
      }
      $444 = ___cxa_find_matching_catch() | 0;
      $445 = tempRet0;
      $$pre685 = HEAP32[$422 >> 2] | 0;
      if (!$$pre685) {
       $lpad$phi$i278725$index = $444;
       $lpad$phi$i278725$index144 = $445;
      } else {
       $447 = HEAP32[$428 >> 2] | 0;
       if (($447 | 0) == ($$pre685 | 0)) $453 = $$pre685; else {
        $450 = $447;
        do {
         $449 = $450 + -12 | 0;
         HEAP32[$428 >> 2] = $449;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($449);
         $450 = HEAP32[$428 >> 2] | 0;
        } while (($450 | 0) != ($$pre685 | 0));
        $453 = HEAP32[$422 >> 2] | 0;
       }
       __ZdlPv($453);
       $lpad$phi$i278725$index = $444;
       $lpad$phi$i278725$index144 = $445;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     $$13 = $lpad$phi$i278725$index;
     $$1322 = $lpad$phi$i278725$index144;
    }
   }
   if ((label | 0) == 188) {
    $454 = ___cxa_find_matching_catch() | 0;
    $455 = tempRet0;
    if (($14 | 0) == ($$035 | 0)) {
     $$13 = $454;
     $$1322 = $455;
    } else {
     $458 = $$035;
     do {
      $458 = $458 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($458);
     } while (($458 | 0) != ($14 | 0));
     $$13 = $454;
     $$1322 = $455;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$13;
   $$2433 = $$1322;
   ___resumeException($$24 | 0);
   break;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16274, 6);
   __THREW__ = 0;
   invoke_viii(3, $15 | 0, 16195, 1);
   $461 = __THREW__;
   __THREW__ = 0;
   if ($461 & 1) {
    $487 = ___cxa_find_matching_catch() | 0;
    $$14 = $487;
    $$sink755$index157 = tempRet0;
   } else {
    $463 = $agg$result + 12 | 0;
    HEAP32[$463 >> 2] = 0;
    $464 = $agg$result + 16 | 0;
    HEAP32[$464 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $466 = invoke_ii(67, 12) | 0;
    $467 = __THREW__;
    __THREW__ = 0;
    if ($467 & 1) {
     $475 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i297727$index = $475;
     $lpad$phi$i297727$index151 = tempRet0;
    } else {
     HEAP32[$464 >> 2] = $466;
     HEAP32[$463 >> 2] = $466;
     HEAP32[$agg$result + 20 >> 2] = $466 + 12;
     __THREW__ = 0;
     invoke_vii(40, $466 | 0, $15 | 0);
     $471 = __THREW__;
     __THREW__ = 0;
     if (!($471 & 1)) {
      HEAP32[$464 >> 2] = (HEAP32[$464 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      STACKTOP = sp;
      return;
     }
     $477 = ___cxa_find_matching_catch() | 0;
     $478 = tempRet0;
     $$pre684 = HEAP32[$463 >> 2] | 0;
     if (!$$pre684) {
      $lpad$phi$i297727$index = $477;
      $lpad$phi$i297727$index151 = $478;
     } else {
      $480 = HEAP32[$464 >> 2] | 0;
      if (($480 | 0) == ($$pre684 | 0)) $486 = $$pre684; else {
       $483 = $480;
       do {
        $482 = $483 + -12 | 0;
        HEAP32[$464 >> 2] = $482;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($482);
        $483 = HEAP32[$464 >> 2] | 0;
       } while (($483 | 0) != ($$pre684 | 0));
       $486 = HEAP32[$463 >> 2] | 0;
      }
      __ZdlPv($486);
      $lpad$phi$i297727$index = $477;
      $lpad$phi$i297727$index151 = $478;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    $$14 = $lpad$phi$i297727$index;
    $$sink755$index157 = $lpad$phi$i297727$index151;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$14;
   $$2433 = $$sink755$index157;
   ___resumeException($$24 | 0);
   break;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16281, 12);
   __THREW__ = 0;
   invoke_viii(3, $16 | 0, 16268, 3);
   $489 = __THREW__;
   __THREW__ = 0;
   if ($489 & 1) {
    $515 = ___cxa_find_matching_catch() | 0;
    $$15 = $515;
    $$sink756$index169 = tempRet0;
   } else {
    $491 = $agg$result + 12 | 0;
    HEAP32[$491 >> 2] = 0;
    $492 = $agg$result + 16 | 0;
    HEAP32[$492 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $494 = invoke_ii(67, 12) | 0;
    $495 = __THREW__;
    __THREW__ = 0;
    if ($495 & 1) {
     $503 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i316729$index = $503;
     $lpad$phi$i316729$index163 = tempRet0;
    } else {
     HEAP32[$492 >> 2] = $494;
     HEAP32[$491 >> 2] = $494;
     HEAP32[$agg$result + 20 >> 2] = $494 + 12;
     __THREW__ = 0;
     invoke_vii(40, $494 | 0, $16 | 0);
     $499 = __THREW__;
     __THREW__ = 0;
     if (!($499 & 1)) {
      HEAP32[$492 >> 2] = (HEAP32[$492 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
      STACKTOP = sp;
      return;
     }
     $505 = ___cxa_find_matching_catch() | 0;
     $506 = tempRet0;
     $$pre683 = HEAP32[$491 >> 2] | 0;
     if (!$$pre683) {
      $lpad$phi$i316729$index = $505;
      $lpad$phi$i316729$index163 = $506;
     } else {
      $508 = HEAP32[$492 >> 2] | 0;
      if (($508 | 0) == ($$pre683 | 0)) $514 = $$pre683; else {
       $511 = $508;
       do {
        $510 = $511 + -12 | 0;
        HEAP32[$492 >> 2] = $510;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($510);
        $511 = HEAP32[$492 >> 2] | 0;
       } while (($511 | 0) != ($$pre683 | 0));
       $514 = HEAP32[$491 >> 2] | 0;
      }
      __ZdlPv($514);
      $lpad$phi$i316729$index = $505;
      $lpad$phi$i316729$index163 = $506;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
    $$15 = $lpad$phi$i316729$index;
    $$sink756$index169 = $lpad$phi$i316729$index163;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$15;
   $$2433 = $$sink756$index169;
   ___resumeException($$24 | 0);
   break;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16294, 9);
   __THREW__ = 0;
   invoke_viii(3, $17 | 0, 16304, 3);
   $517 = __THREW__;
   __THREW__ = 0;
   if ($517 & 1) {
    $543 = ___cxa_find_matching_catch() | 0;
    $$16 = $543;
    $$sink757$index181 = tempRet0;
   } else {
    $519 = $agg$result + 12 | 0;
    HEAP32[$519 >> 2] = 0;
    $520 = $agg$result + 16 | 0;
    HEAP32[$520 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $522 = invoke_ii(67, 12) | 0;
    $523 = __THREW__;
    __THREW__ = 0;
    if ($523 & 1) {
     $531 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i335731$index = $531;
     $lpad$phi$i335731$index175 = tempRet0;
    } else {
     HEAP32[$520 >> 2] = $522;
     HEAP32[$519 >> 2] = $522;
     HEAP32[$agg$result + 20 >> 2] = $522 + 12;
     __THREW__ = 0;
     invoke_vii(40, $522 | 0, $17 | 0);
     $527 = __THREW__;
     __THREW__ = 0;
     if (!($527 & 1)) {
      HEAP32[$520 >> 2] = (HEAP32[$520 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      STACKTOP = sp;
      return;
     }
     $533 = ___cxa_find_matching_catch() | 0;
     $534 = tempRet0;
     $$pre682 = HEAP32[$519 >> 2] | 0;
     if (!$$pre682) {
      $lpad$phi$i335731$index = $533;
      $lpad$phi$i335731$index175 = $534;
     } else {
      $536 = HEAP32[$520 >> 2] | 0;
      if (($536 | 0) == ($$pre682 | 0)) $542 = $$pre682; else {
       $539 = $536;
       do {
        $538 = $539 + -12 | 0;
        HEAP32[$520 >> 2] = $538;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($538);
        $539 = HEAP32[$520 >> 2] | 0;
       } while (($539 | 0) != ($$pre682 | 0));
       $542 = HEAP32[$519 >> 2] | 0;
      }
      __ZdlPv($542);
      $lpad$phi$i335731$index = $533;
      $lpad$phi$i335731$index175 = $534;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    $$16 = $lpad$phi$i335731$index;
    $$sink757$index181 = $lpad$phi$i335731$index175;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$16;
   $$2433 = $$sink757$index181;
   ___resumeException($$24 | 0);
   break;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16308, 4);
   __THREW__ = 0;
   invoke_viii(3, $18 | 0, 16197, 1);
   $545 = __THREW__;
   __THREW__ = 0;
   if ($545 & 1) {
    $571 = ___cxa_find_matching_catch() | 0;
    $$17 = $571;
    $$sink758$index193 = tempRet0;
   } else {
    $547 = $agg$result + 12 | 0;
    HEAP32[$547 >> 2] = 0;
    $548 = $agg$result + 16 | 0;
    HEAP32[$548 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $550 = invoke_ii(67, 12) | 0;
    $551 = __THREW__;
    __THREW__ = 0;
    if ($551 & 1) {
     $559 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i354733$index = $559;
     $lpad$phi$i354733$index187 = tempRet0;
    } else {
     HEAP32[$548 >> 2] = $550;
     HEAP32[$547 >> 2] = $550;
     HEAP32[$agg$result + 20 >> 2] = $550 + 12;
     __THREW__ = 0;
     invoke_vii(40, $550 | 0, $18 | 0);
     $555 = __THREW__;
     __THREW__ = 0;
     if (!($555 & 1)) {
      HEAP32[$548 >> 2] = (HEAP32[$548 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
      STACKTOP = sp;
      return;
     }
     $561 = ___cxa_find_matching_catch() | 0;
     $562 = tempRet0;
     $$pre681 = HEAP32[$547 >> 2] | 0;
     if (!$$pre681) {
      $lpad$phi$i354733$index = $561;
      $lpad$phi$i354733$index187 = $562;
     } else {
      $564 = HEAP32[$548 >> 2] | 0;
      if (($564 | 0) == ($$pre681 | 0)) $570 = $$pre681; else {
       $567 = $564;
       do {
        $566 = $567 + -12 | 0;
        HEAP32[$548 >> 2] = $566;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($566);
        $567 = HEAP32[$548 >> 2] | 0;
       } while (($567 | 0) != ($$pre681 | 0));
       $570 = HEAP32[$547 >> 2] | 0;
      }
      __ZdlPv($570);
      $lpad$phi$i354733$index = $561;
      $lpad$phi$i354733$index187 = $562;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    $$17 = $lpad$phi$i354733$index;
    $$sink758$index193 = $lpad$phi$i354733$index187;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$17;
   $$2433 = $$sink758$index193;
   ___resumeException($$24 | 0);
   break;
  }
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16313, 3);
   __THREW__ = 0;
   invoke_viii(3, $19 | 0, 16197, 1);
   $573 = __THREW__;
   __THREW__ = 0;
   if ($573 & 1) {
    $599 = ___cxa_find_matching_catch() | 0;
    $$18 = $599;
    $$sink759$index205 = tempRet0;
   } else {
    $575 = $agg$result + 12 | 0;
    HEAP32[$575 >> 2] = 0;
    $576 = $agg$result + 16 | 0;
    HEAP32[$576 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $578 = invoke_ii(67, 12) | 0;
    $579 = __THREW__;
    __THREW__ = 0;
    if ($579 & 1) {
     $587 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i373735$index = $587;
     $lpad$phi$i373735$index199 = tempRet0;
    } else {
     HEAP32[$576 >> 2] = $578;
     HEAP32[$575 >> 2] = $578;
     HEAP32[$agg$result + 20 >> 2] = $578 + 12;
     __THREW__ = 0;
     invoke_vii(40, $578 | 0, $19 | 0);
     $583 = __THREW__;
     __THREW__ = 0;
     if (!($583 & 1)) {
      HEAP32[$576 >> 2] = (HEAP32[$576 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
      STACKTOP = sp;
      return;
     }
     $589 = ___cxa_find_matching_catch() | 0;
     $590 = tempRet0;
     $$pre680 = HEAP32[$575 >> 2] | 0;
     if (!$$pre680) {
      $lpad$phi$i373735$index = $589;
      $lpad$phi$i373735$index199 = $590;
     } else {
      $592 = HEAP32[$576 >> 2] | 0;
      if (($592 | 0) == ($$pre680 | 0)) $598 = $$pre680; else {
       $595 = $592;
       do {
        $594 = $595 + -12 | 0;
        HEAP32[$576 >> 2] = $594;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($594);
        $595 = HEAP32[$576 >> 2] | 0;
       } while (($595 | 0) != ($$pre680 | 0));
       $598 = HEAP32[$575 >> 2] | 0;
      }
      __ZdlPv($598);
      $lpad$phi$i373735$index = $589;
      $lpad$phi$i373735$index199 = $590;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
    $$18 = $lpad$phi$i373735$index;
    $$sink759$index205 = $lpad$phi$i373735$index199;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$18;
   $$2433 = $$sink759$index205;
   ___resumeException($$24 | 0);
   break;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16317, 3);
   __THREW__ = 0;
   invoke_viii(3, $20 | 0, 16197, 1);
   $601 = __THREW__;
   __THREW__ = 0;
   if ($601 & 1) {
    $627 = ___cxa_find_matching_catch() | 0;
    $$19 = $627;
    $$sink760$index217 = tempRet0;
   } else {
    $603 = $agg$result + 12 | 0;
    HEAP32[$603 >> 2] = 0;
    $604 = $agg$result + 16 | 0;
    HEAP32[$604 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $606 = invoke_ii(67, 12) | 0;
    $607 = __THREW__;
    __THREW__ = 0;
    if ($607 & 1) {
     $615 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i392737$index = $615;
     $lpad$phi$i392737$index211 = tempRet0;
    } else {
     HEAP32[$604 >> 2] = $606;
     HEAP32[$603 >> 2] = $606;
     HEAP32[$agg$result + 20 >> 2] = $606 + 12;
     __THREW__ = 0;
     invoke_vii(40, $606 | 0, $20 | 0);
     $611 = __THREW__;
     __THREW__ = 0;
     if (!($611 & 1)) {
      HEAP32[$604 >> 2] = (HEAP32[$604 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
      STACKTOP = sp;
      return;
     }
     $617 = ___cxa_find_matching_catch() | 0;
     $618 = tempRet0;
     $$pre679 = HEAP32[$603 >> 2] | 0;
     if (!$$pre679) {
      $lpad$phi$i392737$index = $617;
      $lpad$phi$i392737$index211 = $618;
     } else {
      $620 = HEAP32[$604 >> 2] | 0;
      if (($620 | 0) == ($$pre679 | 0)) $626 = $$pre679; else {
       $623 = $620;
       do {
        $622 = $623 + -12 | 0;
        HEAP32[$604 >> 2] = $622;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($622);
        $623 = HEAP32[$604 >> 2] | 0;
       } while (($623 | 0) != ($$pre679 | 0));
       $626 = HEAP32[$603 >> 2] | 0;
      }
      __ZdlPv($626);
      $lpad$phi$i392737$index = $617;
      $lpad$phi$i392737$index211 = $618;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
    $$19 = $lpad$phi$i392737$index;
    $$sink760$index217 = $lpad$phi$i392737$index211;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$19;
   $$2433 = $$sink760$index217;
   ___resumeException($$24 | 0);
   break;
  }
 case 20:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16321, 8);
   __THREW__ = 0;
   invoke_viii(3, $21 | 0, 16197, 1);
   $629 = __THREW__;
   __THREW__ = 0;
   if ($629 & 1) {
    $655 = ___cxa_find_matching_catch() | 0;
    $$20 = $655;
    $$sink761$index229 = tempRet0;
   } else {
    $631 = $agg$result + 12 | 0;
    HEAP32[$631 >> 2] = 0;
    $632 = $agg$result + 16 | 0;
    HEAP32[$632 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $634 = invoke_ii(67, 12) | 0;
    $635 = __THREW__;
    __THREW__ = 0;
    if ($635 & 1) {
     $643 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i411739$index = $643;
     $lpad$phi$i411739$index223 = tempRet0;
    } else {
     HEAP32[$632 >> 2] = $634;
     HEAP32[$631 >> 2] = $634;
     HEAP32[$agg$result + 20 >> 2] = $634 + 12;
     __THREW__ = 0;
     invoke_vii(40, $634 | 0, $21 | 0);
     $639 = __THREW__;
     __THREW__ = 0;
     if (!($639 & 1)) {
      HEAP32[$632 >> 2] = (HEAP32[$632 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
      STACKTOP = sp;
      return;
     }
     $645 = ___cxa_find_matching_catch() | 0;
     $646 = tempRet0;
     $$pre678 = HEAP32[$631 >> 2] | 0;
     if (!$$pre678) {
      $lpad$phi$i411739$index = $645;
      $lpad$phi$i411739$index223 = $646;
     } else {
      $648 = HEAP32[$632 >> 2] | 0;
      if (($648 | 0) == ($$pre678 | 0)) $654 = $$pre678; else {
       $651 = $648;
       do {
        $650 = $651 + -12 | 0;
        HEAP32[$632 >> 2] = $650;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($650);
        $651 = HEAP32[$632 >> 2] | 0;
       } while (($651 | 0) != ($$pre678 | 0));
       $654 = HEAP32[$631 >> 2] | 0;
      }
      __ZdlPv($654);
      $lpad$phi$i411739$index = $645;
      $lpad$phi$i411739$index223 = $646;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
    $$20 = $lpad$phi$i411739$index;
    $$sink761$index229 = $lpad$phi$i411739$index223;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$20;
   $$2433 = $$sink761$index229;
   ___resumeException($$24 | 0);
   break;
  }
 case 21:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16330, 8);
   __THREW__ = 0;
   invoke_viii(3, $22 | 0, 16197, 1);
   $657 = __THREW__;
   __THREW__ = 0;
   if ($657 & 1) {
    $683 = ___cxa_find_matching_catch() | 0;
    $$21 = $683;
    $$sink762$index241 = tempRet0;
   } else {
    $659 = $agg$result + 12 | 0;
    HEAP32[$659 >> 2] = 0;
    $660 = $agg$result + 16 | 0;
    HEAP32[$660 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $662 = invoke_ii(67, 12) | 0;
    $663 = __THREW__;
    __THREW__ = 0;
    if ($663 & 1) {
     $671 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i430741$index = $671;
     $lpad$phi$i430741$index235 = tempRet0;
    } else {
     HEAP32[$660 >> 2] = $662;
     HEAP32[$659 >> 2] = $662;
     HEAP32[$agg$result + 20 >> 2] = $662 + 12;
     __THREW__ = 0;
     invoke_vii(40, $662 | 0, $22 | 0);
     $667 = __THREW__;
     __THREW__ = 0;
     if (!($667 & 1)) {
      HEAP32[$660 >> 2] = (HEAP32[$660 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
      STACKTOP = sp;
      return;
     }
     $673 = ___cxa_find_matching_catch() | 0;
     $674 = tempRet0;
     $$pre677 = HEAP32[$659 >> 2] | 0;
     if (!$$pre677) {
      $lpad$phi$i430741$index = $673;
      $lpad$phi$i430741$index235 = $674;
     } else {
      $676 = HEAP32[$660 >> 2] | 0;
      if (($676 | 0) == ($$pre677 | 0)) $682 = $$pre677; else {
       $679 = $676;
       do {
        $678 = $679 + -12 | 0;
        HEAP32[$660 >> 2] = $678;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($678);
        $679 = HEAP32[$660 >> 2] | 0;
       } while (($679 | 0) != ($$pre677 | 0));
       $682 = HEAP32[$659 >> 2] | 0;
      }
      __ZdlPv($682);
      $lpad$phi$i430741$index = $673;
      $lpad$phi$i430741$index235 = $674;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
    $$21 = $lpad$phi$i430741$index;
    $$sink762$index241 = $lpad$phi$i430741$index235;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$21;
   $$2433 = $$sink762$index241;
   ___resumeException($$24 | 0);
   break;
  }
 case 22:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16339, 6);
   $685 = $agg$result + 12 | 0;
   __THREW__ = 0;
   invoke_viii(3, $23 | 0, 16346, 1);
   $686 = __THREW__;
   __THREW__ = 0;
   if ($686 & 1) {
    $$01 = $23;
    label = 307;
   } else {
    $688 = $23 + 12 | 0;
    __THREW__ = 0;
    invoke_viii(3, $688 | 0, 16348, 1);
    $689 = __THREW__;
    __THREW__ = 0;
    if ($689 & 1) {
     $$01 = $688;
     label = 307;
    } else {
     HEAP32[$685 >> 2] = 0;
     $691 = $agg$result + 16 | 0;
     HEAP32[$691 >> 2] = 0;
     HEAP32[$agg$result + 20 >> 2] = 0;
     __THREW__ = 0;
     $693 = invoke_ii(67, 24) | 0;
     $694 = __THREW__;
     __THREW__ = 0;
     if ($694 & 1) {
      $705 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$i450743$index = $705;
      $lpad$phi$i450743$index247 = tempRet0;
     } else {
      HEAP32[$691 >> 2] = $693;
      HEAP32[$685 >> 2] = $693;
      HEAP32[$agg$result + 20 >> 2] = $693 + 24;
      __THREW__ = 0;
      invoke_vii(40, $693 | 0, $23 | 0);
      $698 = __THREW__;
      __THREW__ = 0;
      if (!($698 & 1)) {
       $701 = (HEAP32[$691 >> 2] | 0) + 12 | 0;
       HEAP32[$691 >> 2] = $701;
       __THREW__ = 0;
       invoke_vii(40, $701 | 0, $23 + 12 | 0);
       $703 = __THREW__;
       __THREW__ = 0;
       if (!($703 & 1)) {
        HEAP32[$691 >> 2] = (HEAP32[$691 >> 2] | 0) + 12;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23 + 12 | 0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
        STACKTOP = sp;
        return;
       }
      }
      $707 = ___cxa_find_matching_catch() | 0;
      $708 = tempRet0;
      $$pre676 = HEAP32[$685 >> 2] | 0;
      if (!$$pre676) {
       $lpad$phi$i450743$index = $707;
       $lpad$phi$i450743$index247 = $708;
      } else {
       $710 = HEAP32[$691 >> 2] | 0;
       if (($710 | 0) == ($$pre676 | 0)) $716 = $$pre676; else {
        $713 = $710;
        do {
         $712 = $713 + -12 | 0;
         HEAP32[$691 >> 2] = $712;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($712);
         $713 = HEAP32[$691 >> 2] | 0;
        } while (($713 | 0) != ($$pre676 | 0));
        $716 = HEAP32[$685 >> 2] | 0;
       }
       __ZdlPv($716);
       $lpad$phi$i450743$index = $707;
       $lpad$phi$i450743$index247 = $708;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23 + 12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
     $$22 = $lpad$phi$i450743$index;
     $$2231 = $lpad$phi$i450743$index247;
    }
   }
   if ((label | 0) == 307) {
    $717 = ___cxa_find_matching_catch() | 0;
    $718 = tempRet0;
    if (($23 | 0) == ($$01 | 0)) {
     $$22 = $717;
     $$2231 = $718;
    } else {
     $721 = $$01;
     do {
      $721 = $721 + -12 | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($721);
     } while (($721 | 0) != ($23 | 0));
     $$22 = $717;
     $$2231 = $718;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$22;
   $$2433 = $$2231;
   ___resumeException($$24 | 0);
   break;
  }
 case 23:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 16350, 6);
   __THREW__ = 0;
   invoke_viii(3, $24 | 0, 16195, 1);
   $724 = __THREW__;
   __THREW__ = 0;
   if ($724 & 1) {
    $750 = ___cxa_find_matching_catch() | 0;
    $$23 = $750;
    $$sink763$index260 = tempRet0;
   } else {
    $726 = $agg$result + 12 | 0;
    HEAP32[$726 >> 2] = 0;
    $727 = $agg$result + 16 | 0;
    HEAP32[$727 >> 2] = 0;
    HEAP32[$agg$result + 20 >> 2] = 0;
    __THREW__ = 0;
    $729 = invoke_ii(67, 12) | 0;
    $730 = __THREW__;
    __THREW__ = 0;
    if ($730 & 1) {
     $738 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i469745$index = $738;
     $lpad$phi$i469745$index254 = tempRet0;
    } else {
     HEAP32[$727 >> 2] = $729;
     HEAP32[$726 >> 2] = $729;
     HEAP32[$agg$result + 20 >> 2] = $729 + 12;
     __THREW__ = 0;
     invoke_vii(40, $729 | 0, $24 | 0);
     $734 = __THREW__;
     __THREW__ = 0;
     if (!($734 & 1)) {
      HEAP32[$727 >> 2] = (HEAP32[$727 >> 2] | 0) + 12;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
      STACKTOP = sp;
      return;
     }
     $740 = ___cxa_find_matching_catch() | 0;
     $741 = tempRet0;
     $$pre = HEAP32[$726 >> 2] | 0;
     if (!$$pre) {
      $lpad$phi$i469745$index = $740;
      $lpad$phi$i469745$index254 = $741;
     } else {
      $743 = HEAP32[$727 >> 2] | 0;
      if (($743 | 0) == ($$pre | 0)) $749 = $$pre; else {
       $746 = $743;
       do {
        $745 = $746 + -12 | 0;
        HEAP32[$727 >> 2] = $745;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($745);
        $746 = HEAP32[$727 >> 2] | 0;
       } while (($746 | 0) != ($$pre | 0));
       $749 = HEAP32[$726 >> 2] | 0;
      }
      __ZdlPv($749);
      $lpad$phi$i469745$index = $740;
      $lpad$phi$i469745$index254 = $741;
     }
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
    $$23 = $lpad$phi$i469745$index;
    $$sink763$index260 = $lpad$phi$i469745$index254;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$24 = $$23;
   $$2433 = $$sink763$index260;
   ___resumeException($$24 | 0);
   break;
  }
 default:
  {
   $753 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 16357, 47) | 0, $builtin) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($753 + (HEAP32[(HEAP32[$753 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $759 = invoke_iii(22, $0 | 0, 11164) | 0;
   $760 = __THREW__;
   __THREW__ = 0;
   if ($760 & 1) {
    $768 = ___cxa_find_matching_catch() | 0;
    $769 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($768 | 0);
   }
   __THREW__ = 0;
   $765 = invoke_iii(HEAP32[(HEAP32[$759 >> 2] | 0) + 28 >> 2] | 0, $759 | 0, 10) | 0;
   $766 = __THREW__;
   __THREW__ = 0;
   if ($766 & 1) {
    $768 = ___cxa_find_matching_catch() | 0;
    $769 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($768 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($753, $765) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($753) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZL7unparsePK3AST($agg$result, $ast_) {
 $agg$result = $agg$result | 0;
 $ast_ = $ast_ | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $$4 = 0, $$45 = 0, $$5 = 0, $$56 = 0, $$6 = 0, $$67 = 0, $$7 = 0, $$78 = 0, $$8 = 0, $$89 = 0, $$9 = 0, $$910 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1004 = 0, $1005 = 0, $1007 = 0, $101 = 0, $1017 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1022 = 0, $1023 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1032 = 0, $1033 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1045 = 0, $1048 = 0, $1050 = 0, $1051 = 0, $1053 = 0, $1054 = 0, $1057 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $108 = 0, $11 = 0, $110 = 0, $117 = 0, $12 = 0, $121 = 0, $122 = 0, $123 = 0, $125 = 0, $129 = 0, $13 = 0, $130 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $138 = 0, $139 = 0, $14 = 0, $142 = 0, $143 = 0, $145 = 0, $147 = 0, $15 = 0, $154 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $162 = 0, $166 = 0, $169 = 0, $17 = 0, $171 = 0, $18 = 0, $181 = 0, $182 = 0, $184 = 0, $185 = 0, $188 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $195 = 0, $197 = 0, $199 = 0, $2 = 0, $20 = 0, $201 = 0, $203 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $224 = 0, $226 = 0, $227 = 0, $23 = 0, $233 = 0, $234 = 0, $236 = 0, $237 = 0, $24 = 0, $242 = 0, $243 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $25 = 0, $252 = 0, $254 = 0, $26 = 0, $264 = 0, $265 = 0, $267 = 0, $268 = 0, $27 = 0, $272 = 0, $274 = 0, $276 = 0, $28 = 0, $286 = 0, $288 = 0, $29 = 0, $290 = 0, $292 = 0, $293 = 0, $296 = 0, $297 = 0, $3 = 0, $30 = 0, $303 = 0, $304 = 0, $306 = 0, $307 = 0, $31 = 0, $312 = 0, $313 = 0, $315 = 0, $316 = 0, $317 = 0, $319 = 0, $32 = 0, $322 = 0, $325 = 0, $326 = 0, $33 = 0, $330 = 0, $332 = 0, $334 = 0, $34 = 0, $344 = 0, $345 = 0, $347 = 0, $348 = 0, $352 = 0, $354 = 0, $356 = 0, $366 = 0, $367 = 0, $369 = 0, $37 = 0, $370 = 0, $374 = 0, $376 = 0, $378 = 0, $388 = 0, $390 = 0, $392 = 0, $394 = 0, $395 = 0, $396 = 0, $399 = 0, $4 = 0, $400 = 0, $404 = 0, $406 = 0, $408 = 0, $418 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $424 = 0, $425 = 0, $428 = 0, $430 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $438 = 0, $44 = 0, $440 = 0, $450 = 0, $454 = 0, $455 = 0, $459 = 0, $46 = 0, $461 = 0, $463 = 0, $473 = 0, $475 = 0, $476 = 0, $477 = 0, $48 = 0, $480 = 0, $481 = 0, $484 = 0, $486 = 0, $488 = 0, $49 = 0, $498 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $505 = 0, $506 = 0, $509 = 0, $511 = 0, $513 = 0, $52 = 0, $523 = 0, $525 = 0, $526 = 0, $527 = 0, $531 = 0, $534 = 0, $536 = 0, $546 = 0, $547 = 0, $549 = 0, $55 = 0, $550 = 0, $554 = 0, $556 = 0, $558 = 0, $568 = 0, $569 = 0, $57 = 0, $571 = 0, $573 = 0, $575 = 0, $576 = 0, $577 = 0, $580 = 0, $581 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $592 = 0, $593 = 0, $594 = 0, $596 = 0, $6 = 0, $60 = 0, $606 = 0, $607 = 0, $609 = 0, $610 = 0, $614 = 0, $616 = 0, $618 = 0, $62 = 0, $625 = 0, $628 = 0, $630 = 0, $633 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $644 = 0, $646 = 0, $648 = 0, $658 = 0, $660 = 0, $661 = 0, $662 = 0, $667 = 0, $670 = 0, $672 = 0, $677 = 0, $679 = 0, $682 = 0, $685 = 0, $687 = 0, $697 = 0, $699 = 0, $7 = 0, $700 = 0, $704 = 0, $706 = 0, $712 = 0, $714 = 0, $716 = 0, $718 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $729 = 0, $730 = 0, $732 = 0, $733 = 0, $736 = 0, $737 = 0, $74 = 0, $743 = 0, $744 = 0, $746 = 0, $747 = 0, $752 = 0, $753 = 0, $755 = 0, $756 = 0, $757 = 0, $759 = 0, $761 = 0, $762 = 0, $766 = 0, $768 = 0, $770 = 0, $777 = 0, $778 = 0, $78 = 0, $780 = 0, $781 = 0, $783 = 0, $784 = 0, $785 = 0, $787 = 0, $788 = 0, $79 = 0, $792 = 0, $794 = 0, $796 = 0, $8 = 0, $803 = 0, $806 = 0, $81 = 0, $811 = 0, $813 = 0, $814 = 0, $815 = 0, $817 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $825 = 0, $827 = 0, $829 = 0, $83 = 0, $839 = 0, $84 = 0, $840 = 0, $842 = 0, $843 = 0, $847 = 0, $849 = 0, $851 = 0, $86 = 0, $861 = 0, $863 = 0, $864 = 0, $867 = 0, $868 = 0, $870 = 0, $88 = 0, $880 = 0, $881 = 0, $883 = 0, $884 = 0, $888 = 0, $890 = 0, $892 = 0, $9 = 0, $90 = 0, $902 = 0, $904 = 0, $906 = 0, $908 = 0, $909 = 0, $910 = 0, $911 = 0, $915 = 0, $919 = 0, $92 = 0, $921 = 0, $924 = 0, $925 = 0, $927 = 0, $929 = 0, $931 = 0, $933 = 0, $934 = 0, $936 = 0, $937 = 0, $94 = 0, $943 = 0, $944 = 0, $946 = 0, $947 = 0, $952 = 0, $953 = 0, $955 = 0, $956 = 0, $957 = 0, $959 = 0, $96 = 0, $963 = 0, $965 = 0, $975 = 0, $976 = 0, $98 = 0, $980 = 0, $982 = 0, $984 = 0, $99 = 0, $994 = 0, $996 = 0, $998 = 0, $999 = 0, $colons$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index28Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body55$index15Z2D = 0, $eh$lpad$body55$indexZ2D = 0, $prefix$0271 = 0, $prefix10$0264 = 0, $prefix19$0259 = 0, $prefix2$0267 = 0, $prefix27$0258 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496 | 0;
 $0 = sp + 472 | 0;
 $1 = sp + 432 | 0;
 $2 = sp + 228 | 0;
 $3 = sp + 332 | 0;
 $4 = sp + 256 | 0;
 $ss = sp + 24 | 0;
 $5 = sp + 168 | 0;
 $6 = sp + 336 | 0;
 $7 = sp + 180 | 0;
 $8 = sp + 192 | 0;
 $9 = sp + 204 | 0;
 $10 = sp + 216 | 0;
 $11 = sp + 396 | 0;
 $12 = sp + 420 | 0;
 $13 = sp + 436 | 0;
 $14 = sp + 460 | 0;
 $15 = sp + 484 | 0;
 $16 = sp + 260 | 0;
 $17 = sp + 272 | 0;
 $18 = sp + 284 | 0;
 $19 = sp + 296 | 0;
 $20 = sp + 308 | 0;
 $21 = sp + 320 | 0;
 $22 = sp + 12 | 0;
 $23 = sp;
 $24 = sp + 360 | 0;
 $25 = sp + 348 | 0;
 $26 = sp + 372 | 0;
 $27 = sp + 384 | 0;
 $28 = sp + 232 | 0;
 $29 = sp + 408 | 0;
 $30 = sp + 244 | 0;
 $31 = sp + 448 | 0;
 $32 = $ss + 64 | 0;
 $33 = $ss + 8 | 0;
 HEAP32[$33 >> 2] = 2912;
 $34 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$32 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $34 | 0);
 $37 = __THREW__;
 __THREW__ = 0;
 if ($37 & 1) {
  $50 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $50;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 2892;
 HEAP32[$ss + 64 >> 2] = 2932;
 HEAP32[$33 >> 2] = 2912;
 __THREW__ = 0;
 invoke_vi(173, $34 | 0);
 $42 = __THREW__;
 __THREW__ = 0;
 do if ($42 & 1) {
  $52 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $52;
 } else {
  HEAP32[$34 >> 2] = 2988;
  $44 = $ss + 44 | 0;
  HEAP32[$44 >> 2] = 0;
  HEAP32[$44 + 4 >> 2] = 0;
  HEAP32[$44 + 8 >> 2] = 0;
  HEAP32[$44 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $34 | 0, $0 | 0);
  $46 = __THREW__;
  __THREW__ = 0;
  if ($46 & 1) {
   $48 = ___cxa_find_matching_catch() | 0;
   $49 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
   $eh$lpad$body$i$index2Z2D = $49;
   $eh$lpad$body$i$indexZ2D = $48;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  L11 : do if (!$ast_) label = 252; else {
   $55 = ___dynamic_cast($ast_, 48, 72, 0) | 0;
   L13 : do if (!$55) {
    $125 = ___dynamic_cast($ast_, 48, 88, 0) | 0;
    if ($125) {
     $129 = HEAP32[$125 + 52 >> 2] | 0;
     $130 = HEAP32[$125 + 48 >> 2] | 0;
     $132 = $ss + 8 | 0;
     if (($129 | 0) == ($130 | 0)) {
      __THREW__ = 0;
      invoke_iiii(29, $132 | 0, 52562, 3) | 0;
      $136 = __THREW__;
      __THREW__ = 0;
      if ($136 & 1) {
       label = 21;
       break L11;
      } else break;
     }
     $133 = $7 + 8 | 0;
     $134 = $7 + 1 | 0;
     $135 = $7 + 4 | 0;
     $142 = $130;
     $prefix2$0267 = 52569;
     while (1) {
      $138 = _strlen($prefix2$0267) | 0;
      __THREW__ = 0;
      invoke_iiii(29, $132 | 0, $prefix2$0267 | 0, $138 | 0) | 0;
      $139 = __THREW__;
      __THREW__ = 0;
      if ($139 & 1) {
       label = 19;
       break;
      }
      __THREW__ = 0;
      invoke_vii(52, $7 | 0, HEAP32[$142 >> 2] | 0);
      $143 = __THREW__;
      __THREW__ = 0;
      if ($143 & 1) {
       label = 19;
       break;
      }
      $145 = HEAP8[$7 >> 0] | 0;
      $147 = ($145 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $132 | 0, ($147 ? $134 : HEAP32[$133 >> 2] | 0) | 0, ($147 ? ($145 & 255) >>> 1 : HEAP32[$135 >> 2] | 0) | 0) | 0;
      $154 = __THREW__;
      __THREW__ = 0;
      if ($154 & 1) {
       label = 38;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $142 = $142 + 4 | 0;
      if (($142 | 0) == ($129 | 0)) {
       label = 39;
       break;
      } else $prefix2$0267 = 51927;
     }
     if ((label | 0) == 19) {
      $92 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body55$index15Z2D = tempRet0;
      $eh$lpad$body55$indexZ2D = $92;
      break L11;
     } else if ((label | 0) == 38) {
      $158 = ___cxa_find_matching_catch() | 0;
      $159 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      $$9 = $158;
      $$910 = $159;
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$32 >> 2] = 2932;
      $1061 = $ss + 8 | 0;
      HEAP32[$1061 >> 2] = 2912;
      HEAP32[$34 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } else if ((label | 0) == 39) {
      __THREW__ = 0;
      invoke_iiii(29, $132 | 0, 52578, 1) | 0;
      $160 = __THREW__;
      __THREW__ = 0;
      if ($160 & 1) {
       label = 21;
       break L11;
      } else break;
     }
    }
    $162 = ___dynamic_cast($ast_, 48, 104, 0) | 0;
    if ($162) {
     __THREW__ = 0;
     invoke_vii(52, $8 | 0, HEAP32[$162 + 48 >> 2] | 0);
     $166 = __THREW__;
     __THREW__ = 0;
     if ($166 & 1) {
      label = 21;
      break L11;
     }
     $169 = HEAP8[$8 >> 0] | 0;
     $171 = ($169 & 1) == 0;
     __THREW__ = 0;
     $181 = invoke_iiii(29, $ss + 8 | 0, ($171 ? $8 + 1 | 0 : HEAP32[$8 + 8 >> 2] | 0) | 0, ($171 ? ($169 & 255) >>> 1 : HEAP32[$8 + 4 >> 2] | 0) | 0) | 0;
     $182 = __THREW__;
     __THREW__ = 0;
     L34 : do if ($182 & 1) label = 76; else {
      __THREW__ = 0;
      $184 = invoke_iiii(29, $181 | 0, 54762, 1) | 0;
      $185 = __THREW__;
      __THREW__ = 0;
      if ($185 & 1) label = 76; else {
       $188 = HEAP32[$162 + 52 >> 2] | 0;
       do switch ($188 | 0) {
       case 0:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54320, 1);
         $189 = __THREW__;
         __THREW__ = 0;
         if ($189 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 1:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54322, 1);
         $191 = __THREW__;
         __THREW__ = 0;
         if ($191 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 2:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54196, 1);
         $193 = __THREW__;
         __THREW__ = 0;
         if ($193 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 3:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54787, 1);
         $195 = __THREW__;
         __THREW__ = 0;
         if ($195 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 4:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54324, 2);
         $197 = __THREW__;
         __THREW__ = 0;
         if ($197 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 5:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54327, 2);
         $199 = __THREW__;
         __THREW__ = 0;
         if ($199 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 6:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 52377, 1);
         $201 = __THREW__;
         __THREW__ = 0;
         if ($201 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 7:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54330, 2);
         $203 = __THREW__;
         __THREW__ = 0;
         if ($203 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 8:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54333, 1);
         $205 = __THREW__;
         __THREW__ = 0;
         if ($205 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 9:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54335, 2);
         $207 = __THREW__;
         __THREW__ = 0;
         if ($207 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 10:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54338, 2);
         $209 = __THREW__;
         __THREW__ = 0;
         if ($209 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 11:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54341, 2);
         $211 = __THREW__;
         __THREW__ = 0;
         if ($211 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 12:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54344, 1);
         $213 = __THREW__;
         __THREW__ = 0;
         if ($213 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 13:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54346, 1);
         $215 = __THREW__;
         __THREW__ = 0;
         if ($215 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 14:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54348, 1);
         $217 = __THREW__;
         __THREW__ = 0;
         if ($217 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 15:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54350, 2);
         $219 = __THREW__;
         __THREW__ = 0;
         if ($219 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       case 16:
        {
         __THREW__ = 0;
         invoke_viii(3, $9 | 0, 54353, 2);
         $221 = __THREW__;
         __THREW__ = 0;
         if ($221 & 1) {
          label = 76;
          break L34;
         }
         break;
        }
       default:
        {
         __THREW__ = 0;
         $223 = invoke_iiii(29, 8580, 54356, 46) | 0;
         $224 = __THREW__;
         __THREW__ = 0;
         if ($224 & 1) {
          label = 76;
          break L34;
         }
         __THREW__ = 0;
         $226 = invoke_iii(21, $223 | 0, $188 | 0) | 0;
         $227 = __THREW__;
         __THREW__ = 0;
         if ($227 & 1) {
          label = 76;
          break L34;
         }
         __THREW__ = 0;
         $233 = invoke_ii(68, $226 + (HEAP32[(HEAP32[$226 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
         $234 = __THREW__;
         __THREW__ = 0;
         if ($234 & 1) {
          label = 76;
          break L34;
         }
         HEAP32[$4 >> 2] = $233;
         __THREW__ = 0;
         $236 = invoke_iii(22, $4 | 0, 11164) | 0;
         $237 = __THREW__;
         __THREW__ = 0;
         do if (!($237 & 1)) {
          __THREW__ = 0;
          $242 = invoke_iii(HEAP32[(HEAP32[$236 >> 2] | 0) + 28 >> 2] | 0, $236 | 0, 10) | 0;
          $243 = __THREW__;
          __THREW__ = 0;
          if ($243 & 1) break;
          __ZNSt3__16localeD2Ev($4);
          __THREW__ = 0;
          invoke_iii(25, $226 | 0, $242 | 0) | 0;
          $247 = __THREW__;
          __THREW__ = 0;
          if ($247 & 1) {
           label = 76;
           break L34;
          }
          __THREW__ = 0;
          invoke_ii(69, $226 | 0) | 0;
          $249 = __THREW__;
          __THREW__ = 0;
          if ($249 & 1) {
           label = 76;
           break L34;
          }
          __THREW__ = 0;
          invoke_v(3);
          __THREW__ = 0;
          label = 76;
          break L34;
         } while (0);
         $245 = ___cxa_find_matching_catch() | 0;
         $246 = tempRet0;
         __ZNSt3__16localeD2Ev($4);
         $eh$lpad$body$index28Z2D = $246;
         $eh$lpad$body$indexZ2D = $245;
         label = 77;
         break L34;
        }
       } while (0);
       $252 = HEAP8[$9 >> 0] | 0;
       $254 = ($252 & 1) == 0;
       __THREW__ = 0;
       $264 = invoke_iiii(29, $184 | 0, ($254 ? $9 + 1 | 0 : HEAP32[$9 + 8 >> 2] | 0) | 0, ($254 ? ($252 & 255) >>> 1 : HEAP32[$9 + 4 >> 2] | 0) | 0) | 0;
       $265 = __THREW__;
       __THREW__ = 0;
       do if ($265 & 1) label = 78; else {
        __THREW__ = 0;
        $267 = invoke_iiii(29, $264 | 0, 54762, 1) | 0;
        $268 = __THREW__;
        __THREW__ = 0;
        if ($268 & 1) label = 78; else {
         __THREW__ = 0;
         invoke_vii(52, $10 | 0, HEAP32[$162 + 56 >> 2] | 0);
         $272 = __THREW__;
         __THREW__ = 0;
         if ($272 & 1) label = 78; else {
          $274 = HEAP8[$10 >> 0] | 0;
          $276 = ($274 & 1) == 0;
          __THREW__ = 0;
          invoke_iiii(29, $267 | 0, ($276 ? $10 + 1 | 0 : HEAP32[$10 + 8 >> 2] | 0) | 0, ($276 ? ($274 & 255) >>> 1 : HEAP32[$10 + 4 >> 2] | 0) | 0) | 0;
          $286 = __THREW__;
          __THREW__ = 0;
          if ($286 & 1) {
           $292 = ___cxa_find_matching_catch() | 0;
           $293 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
           $$0 = $292;
           $$01 = $293;
           break;
          } else {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
           break L13;
          }
         }
        }
       } while (0);
       if ((label | 0) == 78) {
        $290 = ___cxa_find_matching_catch() | 0;
        $$0 = $290;
        $$01 = tempRet0;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       $$1 = $$0;
       $$12 = $$01;
      }
     } while (0);
     if ((label | 0) == 76) {
      $288 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index28Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $288;
      label = 77;
     }
     if ((label | 0) == 77) {
      $$1 = $eh$lpad$body$indexZ2D;
      $$12 = $eh$lpad$body$index28Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     $$9 = $$1;
     $$910 = $$12;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 48, 120, 0) | 0) {
     __THREW__ = 0;
     $296 = invoke_iiii(29, 8580, 50320, 43) | 0;
     $297 = __THREW__;
     __THREW__ = 0;
     if ($297 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     $303 = invoke_ii(68, $296 + (HEAP32[(HEAP32[$296 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
     $304 = __THREW__;
     __THREW__ = 0;
     if ($304 & 1) {
      label = 21;
      break L11;
     }
     HEAP32[$3 >> 2] = $303;
     __THREW__ = 0;
     $306 = invoke_iii(22, $3 | 0, 11164) | 0;
     $307 = __THREW__;
     __THREW__ = 0;
     if (!($307 & 1)) {
      __THREW__ = 0;
      $312 = invoke_iii(HEAP32[(HEAP32[$306 >> 2] | 0) + 28 >> 2] | 0, $306 | 0, 10) | 0;
      $313 = __THREW__;
      __THREW__ = 0;
      if (!($313 & 1)) {
       __ZNSt3__16localeD2Ev($3);
       __THREW__ = 0;
       invoke_iii(25, $296 | 0, $312 | 0) | 0;
       $317 = __THREW__;
       __THREW__ = 0;
       if ($317 & 1) {
        label = 21;
        break L11;
       }
       __THREW__ = 0;
       invoke_ii(69, $296 | 0) | 0;
       $319 = __THREW__;
       __THREW__ = 0;
       if ($319 & 1) {
        label = 21;
        break L11;
       }
       __THREW__ = 0;
       invoke_v(3);
       __THREW__ = 0;
       label = 21;
       break L11;
      }
     }
     $315 = ___cxa_find_matching_catch() | 0;
     $316 = tempRet0;
     __ZNSt3__16localeD2Ev($3);
     $eh$lpad$body55$index15Z2D = $316;
     $eh$lpad$body55$indexZ2D = $315;
     break L11;
    }
    $322 = ___dynamic_cast($ast_, 48, 136, 0) | 0;
    if ($322) {
     __THREW__ = 0;
     $325 = invoke_iiii(29, $ss + 8 | 0, 50364, 3) | 0;
     $326 = __THREW__;
     __THREW__ = 0;
     if ($326 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(52, $11 | 0, HEAP32[$322 + 48 >> 2] | 0);
     $330 = __THREW__;
     __THREW__ = 0;
     if ($330 & 1) {
      label = 21;
      break L11;
     }
     $332 = HEAP8[$11 >> 0] | 0;
     $334 = ($332 & 1) == 0;
     __THREW__ = 0;
     $344 = invoke_iiii(29, $325 | 0, ($334 ? $11 + 1 | 0 : HEAP32[$11 + 8 >> 2] | 0) | 0, ($334 ? ($332 & 255) >>> 1 : HEAP32[$11 + 4 >> 2] | 0) | 0) | 0;
     $345 = __THREW__;
     __THREW__ = 0;
     if ($345 & 1) label = 102; else {
      __THREW__ = 0;
      $347 = invoke_iiii(29, $344 | 0, 50368, 6) | 0;
      $348 = __THREW__;
      __THREW__ = 0;
      if ($348 & 1) label = 102; else {
       __THREW__ = 0;
       invoke_vii(52, $12 | 0, HEAP32[$322 + 52 >> 2] | 0);
       $352 = __THREW__;
       __THREW__ = 0;
       if ($352 & 1) label = 102; else {
        $354 = HEAP8[$12 >> 0] | 0;
        $356 = ($354 & 1) == 0;
        __THREW__ = 0;
        $366 = invoke_iiii(29, $347 | 0, ($356 ? $12 + 1 | 0 : HEAP32[$12 + 8 >> 2] | 0) | 0, ($356 ? ($354 & 255) >>> 1 : HEAP32[$12 + 4 >> 2] | 0) | 0) | 0;
        $367 = __THREW__;
        __THREW__ = 0;
        do if ($367 & 1) label = 103; else {
         __THREW__ = 0;
         $369 = invoke_iiii(29, $366 | 0, 50375, 6) | 0;
         $370 = __THREW__;
         __THREW__ = 0;
         if ($370 & 1) {
          label = 103;
          break;
         }
         __THREW__ = 0;
         invoke_vii(52, $13 | 0, HEAP32[$322 + 56 >> 2] | 0);
         $374 = __THREW__;
         __THREW__ = 0;
         if ($374 & 1) {
          label = 103;
          break;
         }
         $376 = HEAP8[$13 >> 0] | 0;
         $378 = ($376 & 1) == 0;
         __THREW__ = 0;
         invoke_iiii(29, $369 | 0, ($378 ? $13 + 1 | 0 : HEAP32[$13 + 8 >> 2] | 0) | 0, ($378 ? ($376 & 255) >>> 1 : HEAP32[$13 + 4 >> 2] | 0) | 0) | 0;
         $388 = __THREW__;
         __THREW__ = 0;
         if ($388 & 1) {
          $394 = ___cxa_find_matching_catch() | 0;
          $395 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          $$2 = $394;
          $$23 = $395;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
          break L13;
         }
        } while (0);
        if ((label | 0) == 103) {
         $392 = ___cxa_find_matching_catch() | 0;
         $$2 = $392;
         $$23 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
        $$3 = $$2;
        $$34 = $$23;
       }
      }
     }
     if ((label | 0) == 102) {
      $390 = ___cxa_find_matching_catch() | 0;
      $$3 = $390;
      $$34 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     $$9 = $$3;
     $$910 = $$34;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $396 = ___dynamic_cast($ast_, 48, 152, 0) | 0;
    if ($396) {
     __THREW__ = 0;
     $399 = invoke_iiii(29, $ss + 8 | 0, 50382, 6) | 0;
     $400 = __THREW__;
     __THREW__ = 0;
     if ($400 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(52, $14 | 0, HEAP32[$396 + 48 >> 2] | 0);
     $404 = __THREW__;
     __THREW__ = 0;
     if ($404 & 1) {
      label = 21;
      break L11;
     }
     $406 = HEAP8[$14 >> 0] | 0;
     $408 = ($406 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $399 | 0, ($408 ? $14 + 1 | 0 : HEAP32[$14 + 8 >> 2] | 0) | 0, ($408 ? ($406 & 255) >>> 1 : HEAP32[$14 + 4 >> 2] | 0) | 0) | 0;
     $418 = __THREW__;
     __THREW__ = 0;
     if (!($418 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
      break;
     }
     $420 = ___cxa_find_matching_catch() | 0;
     $421 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     $$9 = $420;
     $$910 = $421;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $422 = ___dynamic_cast($ast_, 48, 168, 0) | 0;
    if ($422) {
     $424 = $ss + 8 | 0;
     __THREW__ = 0;
     invoke_iiii(29, $424 | 0, 50389, 9) | 0;
     $425 = __THREW__;
     __THREW__ = 0;
     if ($425 & 1) {
      label = 21;
      break L11;
     }
     $428 = HEAP32[$422 + 48 >> 2] | 0;
     $430 = HEAP32[$422 + 52 >> 2] | 0;
     L129 : do if (($428 | 0) != ($430 | 0)) {
      $433 = $428;
      $prefix10$0264 = 54789;
      while (1) {
       $432 = HEAP32[$433 >> 2] | 0;
       $434 = _strlen($prefix10$0264) | 0;
       __THREW__ = 0;
       $435 = invoke_iiii(29, $424 | 0, $prefix10$0264 | 0, $434 | 0) | 0;
       $436 = __THREW__;
       __THREW__ = 0;
       if ($436 & 1) break;
       $438 = HEAP8[$432 >> 0] | 0;
       $440 = ($438 & 1) == 0;
       __THREW__ = 0;
       invoke_iiii(29, $435 | 0, ($440 ? $432 + 1 | 0 : HEAP32[$432 + 8 >> 2] | 0) | 0, ($440 ? ($438 & 255) >>> 1 : HEAP32[$432 + 4 >> 2] | 0) | 0) | 0;
       $450 = __THREW__;
       __THREW__ = 0;
       if ($450 & 1) break;
       $433 = $433 + 4 | 0;
       if (($433 | 0) == ($430 | 0)) break L129; else $prefix10$0264 = 51927;
      }
      $90 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body55$index15Z2D = tempRet0;
      $eh$lpad$body55$indexZ2D = $90;
      break L11;
     } while (0);
     __THREW__ = 0;
     $454 = invoke_iiii(29, $424 | 0, 50399, 2) | 0;
     $455 = __THREW__;
     __THREW__ = 0;
     if ($455 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(52, $15 | 0, HEAP32[$422 + 60 >> 2] | 0);
     $459 = __THREW__;
     __THREW__ = 0;
     if ($459 & 1) {
      label = 21;
      break L11;
     }
     $461 = HEAP8[$15 >> 0] | 0;
     $463 = ($461 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $454 | 0, ($463 ? $15 + 1 | 0 : HEAP32[$15 + 8 >> 2] | 0) | 0, ($463 ? ($461 & 255) >>> 1 : HEAP32[$15 + 4 >> 2] | 0) | 0) | 0;
     $473 = __THREW__;
     __THREW__ = 0;
     if (!($473 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
      break;
     }
     $475 = ___cxa_find_matching_catch() | 0;
     $476 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
     $$9 = $475;
     $$910 = $476;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $477 = ___dynamic_cast($ast_, 48, 184, 0) | 0;
    if ($477) {
     __THREW__ = 0;
     $480 = invoke_iiii(29, $ss + 8 | 0, 50402, 7) | 0;
     $481 = __THREW__;
     __THREW__ = 0;
     if ($481 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(53, $16 | 0, $477 + 48 | 0);
     $484 = __THREW__;
     __THREW__ = 0;
     if ($484 & 1) {
      label = 21;
      break L11;
     }
     $486 = HEAP8[$16 >> 0] | 0;
     $488 = ($486 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $480 | 0, ($488 ? $16 + 1 | 0 : HEAP32[$16 + 8 >> 2] | 0) | 0, ($488 ? ($486 & 255) >>> 1 : HEAP32[$16 + 4 >> 2] | 0) | 0) | 0;
     $498 = __THREW__;
     __THREW__ = 0;
     if (!($498 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
      break;
     }
     $500 = ___cxa_find_matching_catch() | 0;
     $501 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
     $$9 = $500;
     $$910 = $501;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $502 = ___dynamic_cast($ast_, 48, 200, 0) | 0;
    if ($502) {
     __THREW__ = 0;
     $505 = invoke_iiii(29, $ss + 8 | 0, 50410, 10) | 0;
     $506 = __THREW__;
     __THREW__ = 0;
     if ($506 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(53, $17 | 0, $502 + 48 | 0);
     $509 = __THREW__;
     __THREW__ = 0;
     if ($509 & 1) {
      label = 21;
      break L11;
     }
     $511 = HEAP8[$17 >> 0] | 0;
     $513 = ($511 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $505 | 0, ($513 ? $17 + 1 | 0 : HEAP32[$17 + 8 >> 2] | 0) | 0, ($513 ? ($511 & 255) >>> 1 : HEAP32[$17 + 4 >> 2] | 0) | 0) | 0;
     $523 = __THREW__;
     __THREW__ = 0;
     if (!($523 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
      break;
     }
     $525 = ___cxa_find_matching_catch() | 0;
     $526 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
     $$9 = $525;
     $$910 = $526;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $527 = ___dynamic_cast($ast_, 48, 216, 0) | 0;
    if ($527) {
     __THREW__ = 0;
     invoke_vii(52, $18 | 0, HEAP32[$527 + 48 >> 2] | 0);
     $531 = __THREW__;
     __THREW__ = 0;
     if ($531 & 1) {
      label = 21;
      break L11;
     }
     $534 = HEAP8[$18 >> 0] | 0;
     $536 = ($534 & 1) == 0;
     __THREW__ = 0;
     $546 = invoke_iiii(29, $ss + 8 | 0, ($536 ? $18 + 1 | 0 : HEAP32[$18 + 8 >> 2] | 0) | 0, ($536 ? ($534 & 255) >>> 1 : HEAP32[$18 + 4 >> 2] | 0) | 0) | 0;
     $547 = __THREW__;
     __THREW__ = 0;
     do if ($547 & 1) label = 144; else {
      __THREW__ = 0;
      $549 = invoke_iiii(29, $546 | 0, 52569, 1) | 0;
      $550 = __THREW__;
      __THREW__ = 0;
      if ($550 & 1) {
       label = 144;
       break;
      }
      __THREW__ = 0;
      invoke_vii(52, $19 | 0, HEAP32[$527 + 52 >> 2] | 0);
      $554 = __THREW__;
      __THREW__ = 0;
      if ($554 & 1) {
       label = 144;
       break;
      }
      $556 = HEAP8[$19 >> 0] | 0;
      $558 = ($556 & 1) == 0;
      __THREW__ = 0;
      $568 = invoke_iiii(29, $549 | 0, ($558 ? $19 + 1 | 0 : HEAP32[$19 + 8 >> 2] | 0) | 0, ($558 ? ($556 & 255) >>> 1 : HEAP32[$19 + 4 >> 2] | 0) | 0) | 0;
      $569 = __THREW__;
      __THREW__ = 0;
      do if (!($569 & 1)) {
       __THREW__ = 0;
       invoke_iiii(29, $568 | 0, 52578, 1) | 0;
       $571 = __THREW__;
       __THREW__ = 0;
       if ($571 & 1) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
       break L13;
      } while (0);
      $575 = ___cxa_find_matching_catch() | 0;
      $576 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
      $$4 = $575;
      $$45 = $576;
     } while (0);
     if ((label | 0) == 144) {
      $573 = ___cxa_find_matching_catch() | 0;
      $$4 = $573;
      $$45 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     $$9 = $$4;
     $$910 = $$45;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $577 = ___dynamic_cast($ast_, 48, 56, 0) | 0;
    if ($577) {
     $580 = HEAP32[$577 + 48 >> 2] | 0;
     $581 = $577 + 52 | 0;
     $583 = $ss + 8 | 0;
     L179 : do if (($580 | 0) != ($581 | 0)) {
      $584 = $20 + 8 | 0;
      $585 = $20 + 1 | 0;
      $586 = $20 + 4 | 0;
      $592 = $580;
      $prefix19$0259 = 50421;
      while (1) {
       $587 = _strlen($prefix19$0259) | 0;
       __THREW__ = 0;
       $588 = invoke_iiii(29, $583 | 0, $prefix19$0259 | 0, $587 | 0) | 0;
       $589 = __THREW__;
       __THREW__ = 0;
       if ($589 & 1) {
        label = 17;
        break;
       }
       $593 = HEAP32[$592 + 16 >> 2] | 0;
       $594 = HEAP8[$593 >> 0] | 0;
       $596 = ($594 & 1) == 0;
       __THREW__ = 0;
       $606 = invoke_iiii(29, $588 | 0, ($596 ? $593 + 1 | 0 : HEAP32[$593 + 8 >> 2] | 0) | 0, ($596 ? ($594 & 255) >>> 1 : HEAP32[$593 + 4 >> 2] | 0) | 0) | 0;
       $607 = __THREW__;
       __THREW__ = 0;
       if ($607 & 1) {
        label = 17;
        break;
       }
       __THREW__ = 0;
       $609 = invoke_iiii(29, $606 | 0, 50428, 3) | 0;
       $610 = __THREW__;
       __THREW__ = 0;
       if ($610 & 1) {
        label = 17;
        break;
       }
       __THREW__ = 0;
       invoke_vii(52, $20 | 0, HEAP32[$592 + 20 >> 2] | 0);
       $614 = __THREW__;
       __THREW__ = 0;
       if ($614 & 1) {
        label = 17;
        break;
       }
       $616 = HEAP8[$20 >> 0] | 0;
       $618 = ($616 & 1) == 0;
       __THREW__ = 0;
       invoke_iiii(29, $609 | 0, ($618 ? $585 : HEAP32[$584 >> 2] | 0) | 0, ($618 ? ($616 & 255) >>> 1 : HEAP32[$586 >> 2] | 0) | 0) | 0;
       $625 = __THREW__;
       __THREW__ = 0;
       if ($625 & 1) break;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
       $628 = HEAP32[$592 + 4 >> 2] | 0;
       if (!$628) {
        $$0$i$i$i = $592;
        while (1) {
         $633 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$633 >> 2] | 0) == ($$0$i$i$i | 0)) {
          $$01$i$i$i = $633;
          break;
         } else $$0$i$i$i = $633;
        }
       } else {
        $$0$i$i$i$i = $628;
        while (1) {
         $630 = HEAP32[$$0$i$i$i$i >> 2] | 0;
         if (!$630) {
          $$01$i$i$i = $$0$i$i$i$i;
          break;
         } else $$0$i$i$i$i = $630;
        }
       }
       if (($$01$i$i$i | 0) == ($581 | 0)) break L179; else {
        $592 = $$01$i$i$i;
        $prefix19$0259 = 51927;
       }
      }
      if ((label | 0) == 17) {
       $88 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body55$index15Z2D = tempRet0;
       $eh$lpad$body55$indexZ2D = $88;
       break L11;
      }
      $637 = ___cxa_find_matching_catch() | 0;
      $638 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
      $$9 = $637;
      $$910 = $638;
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$32 >> 2] = 2932;
      $1061 = $ss + 8 | 0;
      HEAP32[$1061 >> 2] = 2912;
      HEAP32[$34 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     __THREW__ = 0;
     $639 = invoke_iiii(29, $583 | 0, 50432, 2) | 0;
     $640 = __THREW__;
     __THREW__ = 0;
     if ($640 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(52, $21 | 0, HEAP32[$577 + 60 >> 2] | 0);
     $644 = __THREW__;
     __THREW__ = 0;
     if ($644 & 1) {
      label = 21;
      break L11;
     }
     $646 = HEAP8[$21 >> 0] | 0;
     $648 = ($646 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $639 | 0, ($648 ? $21 + 1 | 0 : HEAP32[$21 + 8 >> 2] | 0) | 0, ($648 ? ($646 & 255) >>> 1 : HEAP32[$21 + 4 >> 2] | 0) | 0) | 0;
     $658 = __THREW__;
     __THREW__ = 0;
     if (!($658 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
      break;
     }
     $660 = ___cxa_find_matching_catch() | 0;
     $661 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
     $$9 = $660;
     $$910 = $661;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    $662 = ___dynamic_cast($ast_, 48, 232, 0) | 0;
    if ($662) {
     $667 = (HEAP8[$662 + 48 >> 0] | 0) != 0;
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, ($667 ? 62974 : 62979) | 0, ($667 ? 4 : 5) | 0) | 0;
     $670 = __THREW__;
     __THREW__ = 0;
     if ($670 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    $672 = ___dynamic_cast($ast_, 48, 248, 0) | 0;
    if ($672) {
     __THREW__ = 0;
     invoke_iid(1, $ss + 8 | 0, +(+HEAPF64[$672 + 48 >> 3])) | 0;
     $677 = __THREW__;
     __THREW__ = 0;
     if ($677 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    $679 = ___dynamic_cast($ast_, 48, 264, 0) | 0;
    if ($679) {
     __THREW__ = 0;
     invoke_vii(53, $22 | 0, $679 + 48 | 0);
     $682 = __THREW__;
     __THREW__ = 0;
     if ($682 & 1) {
      label = 21;
      break L11;
     }
     $685 = HEAP8[$22 >> 0] | 0;
     $687 = ($685 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, ($687 ? $22 + 1 | 0 : HEAP32[$22 + 8 >> 2] | 0) | 0, ($687 ? ($685 & 255) >>> 1 : HEAP32[$22 + 4 >> 2] | 0) | 0) | 0;
     $697 = __THREW__;
     __THREW__ = 0;
     if (!($697 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
      break;
     }
     $699 = ___cxa_find_matching_catch() | 0;
     $700 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
     $$9 = $699;
     $$910 = $700;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 48, 280, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, 52444, 4) | 0;
     $704 = __THREW__;
     __THREW__ = 0;
     if ($704 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    $706 = ___dynamic_cast($ast_, 48, 296, 0) | 0;
    if ($706) {
     if (!(HEAP32[$706 + 56 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(29, $ss + 8 | 0, 52623, 3) | 0;
      $712 = __THREW__;
      __THREW__ = 0;
      if ($712 & 1) {
       label = 21;
       break L11;
      } else break;
     }
     $714 = $706 + 48 | 0;
     $716 = HEAP32[$706 + 52 >> 2] | 0;
     $718 = $ss + 8 | 0;
     L229 : do if (($716 | 0) != ($714 | 0)) {
      $720 = $23 + 8 | 0;
      $721 = $23 + 1 | 0;
      $722 = $23 + 4 | 0;
      $723 = $24 + 8 | 0;
      $724 = $24 + 1 | 0;
      $725 = $24 + 4 | 0;
      $730 = $716;
      $806 = $716;
      $prefix27$0258 = 52630;
      L231 : while (1) {
       $726 = _strlen($prefix27$0258) | 0;
       __THREW__ = 0;
       invoke_iiii(29, $718 | 0, $prefix27$0258 | 0, $726 | 0) | 0;
       $727 = __THREW__;
       __THREW__ = 0;
       if ($727 & 1) {
        label = 16;
        break;
       }
       $729 = $730 + 12 | 0;
       switch (HEAP32[$729 >> 2] | 0) {
       case 0:
        {
         $colons$0 = 54760;
         break;
        }
       case 1:
        {
         $colons$0 = 50475;
         break;
        }
       case 2:
        {
         $colons$0 = 50471;
         break;
        }
       default:
        {
         __THREW__ = 0;
         $732 = invoke_iiii(29, 8580, 50435, 35) | 0;
         $733 = __THREW__;
         __THREW__ = 0;
         if ($733 & 1) {
          label = 16;
          break L231;
         }
         __THREW__ = 0;
         $736 = invoke_iii(21, $732 | 0, HEAP32[$729 >> 2] | 0) | 0;
         $737 = __THREW__;
         __THREW__ = 0;
         if ($737 & 1) {
          label = 16;
          break L231;
         }
         __THREW__ = 0;
         $743 = invoke_ii(68, $736 + (HEAP32[(HEAP32[$736 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
         $744 = __THREW__;
         __THREW__ = 0;
         if ($744 & 1) {
          label = 16;
          break L231;
         }
         HEAP32[$0 >> 2] = $743;
         __THREW__ = 0;
         $746 = invoke_iii(22, $0 | 0, 11164) | 0;
         $747 = __THREW__;
         __THREW__ = 0;
         if ($747 & 1) {
          label = 191;
          break L231;
         }
         __THREW__ = 0;
         $752 = invoke_iii(HEAP32[(HEAP32[$746 >> 2] | 0) + 28 >> 2] | 0, $746 | 0, 10) | 0;
         $753 = __THREW__;
         __THREW__ = 0;
         if ($753 & 1) {
          label = 191;
          break L231;
         }
         __ZNSt3__16localeD2Ev($0);
         __THREW__ = 0;
         invoke_iii(25, $736 | 0, $752 | 0) | 0;
         $757 = __THREW__;
         __THREW__ = 0;
         if ($757 & 1) {
          label = 16;
          break L231;
         }
         __THREW__ = 0;
         invoke_ii(69, $736 | 0) | 0;
         $759 = __THREW__;
         __THREW__ = 0;
         if ($759 & 1) {
          label = 16;
          break L231;
         } else $colons$0 = 0;
        }
       }
       __THREW__ = 0;
       $761 = invoke_iiii(29, $718 | 0, 52569, 1) | 0;
       $762 = __THREW__;
       __THREW__ = 0;
       if ($762 & 1) {
        label = 16;
        break;
       }
       __THREW__ = 0;
       invoke_vii(52, $23 | 0, HEAP32[$730 + 8 >> 2] | 0);
       $766 = __THREW__;
       __THREW__ = 0;
       if ($766 & 1) {
        label = 16;
        break;
       }
       $768 = HEAP8[$23 >> 0] | 0;
       $770 = ($768 & 1) == 0;
       __THREW__ = 0;
       $777 = invoke_iiii(29, $761 | 0, ($770 ? $721 : HEAP32[$720 >> 2] | 0) | 0, ($770 ? ($768 & 255) >>> 1 : HEAP32[$722 >> 2] | 0) | 0) | 0;
       $778 = __THREW__;
       __THREW__ = 0;
       if ($778 & 1) {
        label = 203;
        break;
       }
       __THREW__ = 0;
       $780 = invoke_iiii(29, $777 | 0, 52578, 1) | 0;
       $781 = __THREW__;
       __THREW__ = 0;
       if ($781 & 1) {
        label = 203;
        break;
       }
       $783 = _strlen($colons$0) | 0;
       __THREW__ = 0;
       $784 = invoke_iiii(29, $780 | 0, $colons$0 | 0, $783 | 0) | 0;
       $785 = __THREW__;
       __THREW__ = 0;
       if ($785 & 1) {
        label = 203;
        break;
       }
       __THREW__ = 0;
       $787 = invoke_iiii(29, $784 | 0, 54762, 1) | 0;
       $788 = __THREW__;
       __THREW__ = 0;
       if ($788 & 1) {
        label = 203;
        break;
       }
       __THREW__ = 0;
       invoke_vii(52, $24 | 0, HEAP32[$730 + 16 >> 2] | 0);
       $792 = __THREW__;
       __THREW__ = 0;
       if ($792 & 1) {
        label = 203;
        break;
       }
       $794 = HEAP8[$24 >> 0] | 0;
       $796 = ($794 & 1) == 0;
       __THREW__ = 0;
       invoke_iiii(29, $787 | 0, ($796 ? $724 : HEAP32[$723 >> 2] | 0) | 0, ($796 ? ($794 & 255) >>> 1 : HEAP32[$725 >> 2] | 0) | 0) | 0;
       $803 = __THREW__;
       __THREW__ = 0;
       if ($803 & 1) {
        label = 204;
        break;
       }
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
       $806 = HEAP32[$806 + 4 >> 2] | 0;
       $730 = $806;
       if (($730 | 0) == ($714 | 0)) break L229; else $prefix27$0258 = 51927;
      }
      if ((label | 0) == 16) {
       $86 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body55$index15Z2D = tempRet0;
       $eh$lpad$body55$indexZ2D = $86;
       break L11;
      } else if ((label | 0) == 191) {
       $755 = ___cxa_find_matching_catch() | 0;
       $756 = tempRet0;
       __ZNSt3__16localeD2Ev($0);
       $eh$lpad$body55$index15Z2D = $756;
       $eh$lpad$body55$indexZ2D = $755;
       break L11;
      } else if ((label | 0) == 203) {
       $811 = ___cxa_find_matching_catch() | 0;
       $$5 = $811;
       $$56 = tempRet0;
      } else if ((label | 0) == 204) {
       $813 = ___cxa_find_matching_catch() | 0;
       $814 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($24);
       $$5 = $813;
       $$56 = $814;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
      $$9 = $$5;
      $$910 = $$56;
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$32 >> 2] = 2932;
      $1061 = $ss + 8 | 0;
      HEAP32[$1061 >> 2] = 2912;
      HEAP32[$34 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     __THREW__ = 0;
     invoke_iiii(29, $718 | 0, 52638, 1) | 0;
     $815 = __THREW__;
     __THREW__ = 0;
     if ($815 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    $817 = ___dynamic_cast($ast_, 48, 312, 0) | 0;
    if ($817) {
     $819 = $ss + 8 | 0;
     __THREW__ = 0;
     $820 = invoke_iiii(29, $819 | 0, 50478, 2) | 0;
     $821 = __THREW__;
     __THREW__ = 0;
     if ($821 & 1) {
      label = 21;
      break L11;
     }
     __THREW__ = 0;
     invoke_vii(52, $25 | 0, HEAP32[$817 + 48 >> 2] | 0);
     $825 = __THREW__;
     __THREW__ = 0;
     if ($825 & 1) {
      label = 21;
      break L11;
     }
     $827 = HEAP8[$25 >> 0] | 0;
     $829 = ($827 & 1) == 0;
     __THREW__ = 0;
     $839 = invoke_iiii(29, $820 | 0, ($829 ? $25 + 1 | 0 : HEAP32[$25 + 8 >> 2] | 0) | 0, ($829 ? ($827 & 255) >>> 1 : HEAP32[$25 + 4 >> 2] | 0) | 0) | 0;
     $840 = __THREW__;
     __THREW__ = 0;
     do if ($840 & 1) label = 220; else {
      __THREW__ = 0;
      $842 = invoke_iiii(29, $839 | 0, 50481, 3) | 0;
      $843 = __THREW__;
      __THREW__ = 0;
      if ($843 & 1) {
       label = 220;
       break;
      }
      __THREW__ = 0;
      invoke_vii(52, $26 | 0, HEAP32[$817 + 52 >> 2] | 0);
      $847 = __THREW__;
      __THREW__ = 0;
      if ($847 & 1) {
       label = 220;
       break;
      }
      $849 = HEAP8[$26 >> 0] | 0;
      $851 = ($849 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $842 | 0, ($851 ? $26 + 1 | 0 : HEAP32[$26 + 8 >> 2] | 0) | 0, ($851 ? ($849 & 255) >>> 1 : HEAP32[$26 + 4 >> 2] | 0) | 0) | 0;
      $861 = __THREW__;
      __THREW__ = 0;
      if ($861 & 1) {
       $908 = ___cxa_find_matching_catch() | 0;
       $909 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
       $$6 = $908;
       $$67 = $909;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($26);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
      __THREW__ = 0;
      $863 = invoke_iiii(29, $819 | 0, 50485, 5) | 0;
      $864 = __THREW__;
      __THREW__ = 0;
      if ($864 & 1) {
       label = 21;
       break L11;
      }
      $867 = HEAP32[$817 + 56 >> 2] | 0;
      $868 = HEAP8[$867 >> 0] | 0;
      $870 = ($868 & 1) == 0;
      __THREW__ = 0;
      $880 = invoke_iiii(29, $863 | 0, ($870 ? $867 + 1 | 0 : HEAP32[$867 + 8 >> 2] | 0) | 0, ($870 ? ($868 & 255) >>> 1 : HEAP32[$867 + 4 >> 2] | 0) | 0) | 0;
      $881 = __THREW__;
      __THREW__ = 0;
      if ($881 & 1) {
       label = 21;
       break L11;
      }
      __THREW__ = 0;
      $883 = invoke_iiii(29, $880 | 0, 50491, 4) | 0;
      $884 = __THREW__;
      __THREW__ = 0;
      if ($884 & 1) {
       label = 21;
       break L11;
      }
      __THREW__ = 0;
      invoke_vii(52, $27 | 0, HEAP32[$817 + 60 >> 2] | 0);
      $888 = __THREW__;
      __THREW__ = 0;
      if ($888 & 1) {
       label = 21;
       break L11;
      }
      $890 = HEAP8[$27 >> 0] | 0;
      $892 = ($890 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $883 | 0, ($892 ? $27 + 1 | 0 : HEAP32[$27 + 8 >> 2] | 0) | 0, ($892 ? ($890 & 255) >>> 1 : HEAP32[$27 + 4 >> 2] | 0) | 0) | 0;
      $902 = __THREW__;
      __THREW__ = 0;
      if (!($902 & 1)) {
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
       __THREW__ = 0;
       invoke_iiii(29, $819 | 0, 52638, 1) | 0;
       $904 = __THREW__;
       __THREW__ = 0;
       if ($904 & 1) {
        label = 21;
        break L11;
       } else break L13;
      }
      $910 = ___cxa_find_matching_catch() | 0;
      $911 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
      $$9 = $910;
      $$910 = $911;
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$32 >> 2] = 2932;
      $1061 = $ss + 8 | 0;
      HEAP32[$1061 >> 2] = 2912;
      HEAP32[$34 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      ___resumeException($$9 | 0);
     } while (0);
     if ((label | 0) == 220) {
      $906 = ___cxa_find_matching_catch() | 0;
      $$6 = $906;
      $$67 = tempRet0;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($25);
     $$9 = $$6;
     $$910 = $$67;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    if (___dynamic_cast($ast_, 48, 328, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, 50496, 4) | 0;
     $915 = __THREW__;
     __THREW__ = 0;
     if ($915 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    if (___dynamic_cast($ast_, 48, 344, 0) | 0) {
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, 50501, 5) | 0;
     $919 = __THREW__;
     __THREW__ = 0;
     if ($919 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    $921 = ___dynamic_cast($ast_, 48, 360, 0) | 0;
    if (!$921) {
     $1000 = ___dynamic_cast($ast_, 48, 376, 0) | 0;
     if (!$1000) {
      label = 252;
      break L11;
     }
     $1004 = HEAP32[$1000 + 48 >> 2] | 0;
     $1005 = HEAP8[$1004 >> 0] | 0;
     $1007 = ($1005 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, ($1007 ? $1004 + 1 | 0 : HEAP32[$1004 + 8 >> 2] | 0) | 0, ($1007 ? ($1005 & 255) >>> 1 : HEAP32[$1004 + 4 >> 2] | 0) | 0) | 0;
     $1017 = __THREW__;
     __THREW__ = 0;
     if ($1017 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    $924 = HEAP32[$921 + 48 >> 2] | 0;
    switch ($924 | 0) {
    case 2:
     {
      __THREW__ = 0;
      invoke_viii(3, $28 | 0, 54196, 1);
      $925 = __THREW__;
      __THREW__ = 0;
      if ($925 & 1) {
       label = 21;
       break L11;
      }
      break;
     }
    case 3:
     {
      __THREW__ = 0;
      invoke_viii(3, $28 | 0, 54787, 1);
      $927 = __THREW__;
      __THREW__ = 0;
      if ($927 & 1) {
       label = 21;
       break L11;
      }
      break;
     }
    case 1:
     {
      __THREW__ = 0;
      invoke_viii(3, $28 | 0, 54198, 1);
      $929 = __THREW__;
      __THREW__ = 0;
      if ($929 & 1) {
       label = 21;
       break L11;
      }
      break;
     }
    case 0:
     {
      __THREW__ = 0;
      invoke_viii(3, $28 | 0, 54200, 1);
      $931 = __THREW__;
      __THREW__ = 0;
      if ($931 & 1) {
       label = 21;
       break L11;
      }
      break;
     }
    default:
     {
      __THREW__ = 0;
      $933 = invoke_iiii(29, 8580, 54202, 45) | 0;
      $934 = __THREW__;
      __THREW__ = 0;
      if ($934 & 1) {
       label = 21;
       break L11;
      }
      __THREW__ = 0;
      $936 = invoke_iii(21, $933 | 0, $924 | 0) | 0;
      $937 = __THREW__;
      __THREW__ = 0;
      if ($937 & 1) {
       label = 21;
       break L11;
      }
      __THREW__ = 0;
      $943 = invoke_ii(68, $936 + (HEAP32[(HEAP32[$936 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
      $944 = __THREW__;
      __THREW__ = 0;
      if ($944 & 1) {
       label = 21;
       break L11;
      }
      HEAP32[$1 >> 2] = $943;
      __THREW__ = 0;
      $946 = invoke_iii(22, $1 | 0, 11164) | 0;
      $947 = __THREW__;
      __THREW__ = 0;
      do if (!($947 & 1)) {
       __THREW__ = 0;
       $952 = invoke_iii(HEAP32[(HEAP32[$946 >> 2] | 0) + 28 >> 2] | 0, $946 | 0, 10) | 0;
       $953 = __THREW__;
       __THREW__ = 0;
       if ($953 & 1) break;
       __ZNSt3__16localeD2Ev($1);
       __THREW__ = 0;
       invoke_iii(25, $936 | 0, $952 | 0) | 0;
       $957 = __THREW__;
       __THREW__ = 0;
       if ($957 & 1) {
        label = 21;
        break L11;
       }
       __THREW__ = 0;
       invoke_ii(69, $936 | 0) | 0;
       $959 = __THREW__;
       __THREW__ = 0;
       if ($959 & 1) {
        label = 21;
        break L11;
       }
       __THREW__ = 0;
       invoke_v(3);
       __THREW__ = 0;
       label = 21;
       break L11;
      } while (0);
      $955 = ___cxa_find_matching_catch() | 0;
      $956 = tempRet0;
      __ZNSt3__16localeD2Ev($1);
      $eh$lpad$body55$index15Z2D = $956;
      $eh$lpad$body55$indexZ2D = $955;
      break L11;
     }
    }
    $963 = HEAP8[$28 >> 0] | 0;
    $965 = ($963 & 1) == 0;
    __THREW__ = 0;
    $975 = invoke_iiii(29, $ss + 8 | 0, ($965 ? $28 + 1 | 0 : HEAP32[$28 + 8 >> 2] | 0) | 0, ($965 ? ($963 & 255) >>> 1 : HEAP32[$28 + 4 >> 2] | 0) | 0) | 0;
    $976 = __THREW__;
    __THREW__ = 0;
    do if ($976 & 1) label = 247; else {
     __THREW__ = 0;
     invoke_vii(52, $29 | 0, HEAP32[$921 + 52 >> 2] | 0);
     $980 = __THREW__;
     __THREW__ = 0;
     if ($980 & 1) {
      label = 247;
      break;
     }
     $982 = HEAP8[$29 >> 0] | 0;
     $984 = ($982 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $975 | 0, ($984 ? $29 + 1 | 0 : HEAP32[$29 + 8 >> 2] | 0) | 0, ($984 ? ($982 & 255) >>> 1 : HEAP32[$29 + 4 >> 2] | 0) | 0) | 0;
     $994 = __THREW__;
     __THREW__ = 0;
     if ($994 & 1) {
      $998 = ___cxa_find_matching_catch() | 0;
      $999 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      $$7 = $998;
      $$78 = $999;
      break;
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
      break L13;
     }
    } while (0);
    if ((label | 0) == 247) {
     $996 = ___cxa_find_matching_catch() | 0;
     $$7 = $996;
     $$78 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $$9 = $$7;
    $$910 = $$78;
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$32 >> 2] = 2932;
    $1061 = $ss + 8 | 0;
    HEAP32[$1061 >> 2] = 2912;
    HEAP32[$34 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   } else {
    $57 = $ss + 8 | 0;
    __THREW__ = 0;
    invoke_vii(52, $5 | 0, HEAP32[$55 + 48 >> 2] | 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 21;
     break L11;
    }
    $62 = HEAP8[$5 >> 0] | 0;
    $64 = ($62 & 1) == 0;
    __THREW__ = 0;
    invoke_iiii(29, $57 | 0, ($64 ? $5 + 1 | 0 : HEAP32[$5 + 8 >> 2] | 0) | 0, ($64 ? ($62 & 255) >>> 1 : HEAP32[$5 + 4 >> 2] | 0) | 0) | 0;
    $74 = __THREW__;
    __THREW__ = 0;
    if ($74 & 1) {
     $98 = ___cxa_find_matching_catch() | 0;
     $99 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$9 = $98;
     $$910 = $99;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $78 = HEAP32[$55 + 56 >> 2] | 0;
    $79 = HEAP32[$55 + 52 >> 2] | 0;
    if (($78 | 0) == ($79 | 0)) {
     __THREW__ = 0;
     invoke_iiii(29, $57 | 0, 50317, 2) | 0;
     $84 = __THREW__;
     __THREW__ = 0;
     if ($84 & 1) {
      label = 21;
      break L11;
     } else break;
    }
    $81 = $6 + 8 | 0;
    $82 = $6 + 1 | 0;
    $83 = $6 + 4 | 0;
    $101 = $79;
    $prefix$0271 = 54789;
    while (1) {
     $100 = HEAP32[$101 >> 2] | 0;
     $102 = _strlen($prefix$0271) | 0;
     __THREW__ = 0;
     $103 = invoke_iiii(29, $57 | 0, $prefix$0271 | 0, $102 | 0) | 0;
     $104 = __THREW__;
     __THREW__ = 0;
     if ($104 & 1) {
      label = 20;
      break;
     }
     __THREW__ = 0;
     invoke_vii(52, $6 | 0, $100 | 0);
     $106 = __THREW__;
     __THREW__ = 0;
     if ($106 & 1) {
      label = 20;
      break;
     }
     $108 = HEAP8[$6 >> 0] | 0;
     $110 = ($108 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $103 | 0, ($110 ? $82 : HEAP32[$81 >> 2] | 0) | 0, ($110 ? ($108 & 255) >>> 1 : HEAP32[$83 >> 2] | 0) | 0) | 0;
     $117 = __THREW__;
     __THREW__ = 0;
     if ($117 & 1) {
      label = 28;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $101 = $101 + 4 | 0;
     if (($101 | 0) == ($78 | 0)) {
      label = 29;
      break;
     } else $prefix$0271 = 51927;
    }
    if ((label | 0) == 20) {
     $94 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body55$index15Z2D = tempRet0;
     $eh$lpad$body55$indexZ2D = $94;
     break L11;
    } else if ((label | 0) == 28) {
     $121 = ___cxa_find_matching_catch() | 0;
     $122 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $$9 = $121;
     $$910 = $122;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$32 >> 2] = 2932;
     $1061 = $ss + 8 | 0;
     HEAP32[$1061 >> 2] = 2912;
     HEAP32[$34 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
     ___resumeException($$9 | 0);
    } else if ((label | 0) == 29) {
     __THREW__ = 0;
     invoke_iiii(29, $57 | 0, 54795, 1) | 0;
     $123 = __THREW__;
     __THREW__ = 0;
     if ($123 & 1) {
      label = 21;
      break L11;
     } else break;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(43, $31 | 0, $34 | 0);
   $1048 = __THREW__;
   __THREW__ = 0;
   if ($1048 & 1) label = 21; else {
    __THREW__ = 0;
    $1050 = invoke_iiii(33, $31 | 0, 0, 54789) | 0;
    $1051 = __THREW__;
    __THREW__ = 0;
    do if ($1051 & 1) {
     $1057 = ___cxa_find_matching_catch() | 0;
     $$8 = $1057;
     $$89 = tempRet0;
    } else {
     HEAP32[$30 >> 2] = HEAP32[$1050 >> 2];
     HEAP32[$30 + 4 >> 2] = HEAP32[$1050 + 4 >> 2];
     HEAP32[$30 + 8 >> 2] = HEAP32[$1050 + 8 >> 2];
     HEAP32[$1050 >> 2] = 0;
     HEAP32[$1050 + 4 >> 2] = 0;
     HEAP32[$1050 + 8 >> 2] = 0;
     __THREW__ = 0;
     $1053 = invoke_iii(27, $30 | 0, 54795) | 0;
     $1054 = __THREW__;
     __THREW__ = 0;
     if ($1054 & 1) {
      $1059 = ___cxa_find_matching_catch() | 0;
      $1060 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      $$8 = $1059;
      $$89 = $1060;
      break;
     } else {
      HEAP32[$agg$result >> 2] = HEAP32[$1053 >> 2];
      HEAP32[$agg$result + 4 >> 2] = HEAP32[$1053 + 4 >> 2];
      HEAP32[$agg$result + 8 >> 2] = HEAP32[$1053 + 8 >> 2];
      HEAP32[$1053 >> 2] = 0;
      HEAP32[$1053 + 4 >> 2] = 0;
      HEAP32[$1053 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($30);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$32 >> 2] = 2932;
      HEAP32[$ss + 8 >> 2] = 2912;
      HEAP32[$34 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
      STACKTOP = sp;
      return;
     }
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
    $$9 = $$8;
    $$910 = $$89;
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$32 >> 2] = 2932;
    $1061 = $ss + 8 | 0;
    HEAP32[$1061 >> 2] = 2912;
    HEAP32[$34 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
    ___resumeException($$9 | 0);
   }
  } while (0);
  do if ((label | 0) == 252) {
   __THREW__ = 0;
   $1019 = invoke_iiii(29, 8580, 52763, 29) | 0;
   $1020 = __THREW__;
   __THREW__ = 0;
   if ($1020 & 1) label = 21; else {
    __THREW__ = 0;
    $1022 = invoke_iii(26, $1019 | 0, $ast_ | 0) | 0;
    $1023 = __THREW__;
    __THREW__ = 0;
    if ($1023 & 1) label = 21; else {
     __THREW__ = 0;
     $1029 = invoke_ii(68, $1022 + (HEAP32[(HEAP32[$1022 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
     $1030 = __THREW__;
     __THREW__ = 0;
     if ($1030 & 1) label = 21; else {
      HEAP32[$2 >> 2] = $1029;
      __THREW__ = 0;
      $1032 = invoke_iii(22, $2 | 0, 11164) | 0;
      $1033 = __THREW__;
      __THREW__ = 0;
      if (!($1033 & 1)) {
       __THREW__ = 0;
       $1038 = invoke_iii(HEAP32[(HEAP32[$1032 >> 2] | 0) + 28 >> 2] | 0, $1032 | 0, 10) | 0;
       $1039 = __THREW__;
       __THREW__ = 0;
       if (!($1039 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(25, $1022 | 0, $1038 | 0) | 0;
        $1043 = __THREW__;
        __THREW__ = 0;
        if ($1043 & 1) {
         label = 21;
         break;
        }
        __THREW__ = 0;
        invoke_ii(69, $1022 | 0) | 0;
        $1045 = __THREW__;
        __THREW__ = 0;
        if ($1045 & 1) {
         label = 21;
         break;
        }
        __THREW__ = 0;
        invoke_v(3);
        __THREW__ = 0;
        label = 21;
        break;
       }
      }
      $1041 = ___cxa_find_matching_catch() | 0;
      $1042 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body55$index15Z2D = $1042;
      $eh$lpad$body55$indexZ2D = $1041;
     }
    }
   }
  } while (0);
  if ((label | 0) == 21) {
   $96 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body55$index15Z2D = tempRet0;
   $eh$lpad$body55$indexZ2D = $96;
  }
  $$9 = $eh$lpad$body55$indexZ2D;
  $$910 = $eh$lpad$body55$index15Z2D;
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$32 >> 2] = 2932;
  $1061 = $ss + 8 | 0;
  HEAP32[$1061 >> 2] = 2912;
  HEAP32[$34 >> 2] = 2988;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($34);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
  ___resumeException($$9 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($32);
 ___resumeException($$01$i | 0);
}

function __Z12jsonlang_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($agg$result, $filename, $input) {
 $agg$result = $agg$result | 0;
 $filename = $filename | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i = 0, $$0$i107 = 0, $$0$i145 = 0, $$01 = 0, $$01$i = 0, $$01$i106 = 0, $$01$i144 = 0, $$011 = 0, $$013181 = 0, $$018 = 0, $$020180 = 0, $$03 = 0, $$037 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$10215 = 0, $$1030214 = 0, $$11 = 0, $$1131 = 0, $$114185 = 0, $$121184 = 0, $$1215 = 0, $$1232 = 0, $$13 = 0, $$1333 = 0, $$1416 = 0, $$1434 = 0, $$15 = 0, $$1535 = 0, $$1617 = 0, $$1636 = 0, $$2189 = 0, $$222188 = 0, $$3193 = 0, $$323192 = 0, $$4 = 0, $$424 = 0, $$5197 = 0, $$525196 = 0, $$6201 = 0, $$626200 = 0, $$7205 = 0, $$727204 = 0, $$8 = 0, $$828 = 0, $$9211 = 0, $$929210 = 0, $$lcssa = 0, $$lcssa319 = 0, $$lcssa438 = 0, $$lcssa441 = 0, $$lcssa442 = 0, $$pn = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $136 = 0, $139 = 0, $14 = 0, $144 = 0, $145 = 0, $15 = 0, $150 = 0, $155 = 0, $156 = 0, $16 = 0, $161 = 0, $163 = 0, $164 = 0, $166 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $176 = 0, $18 = 0, $181 = 0, $182 = 0, $187 = 0, $19 = 0, $192 = 0, $193 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $203 = 0, $205 = 0, $206 = 0, $21 = 0, $213 = 0, $214 = 0, $215 = 0, $218 = 0, $22 = 0, $223 = 0, $225 = 0, $227 = 0, $229 = 0, $230 = 0, $231 = 0, $233 = 0, $235 = 0, $236 = 0, $237 = 0, $239 = 0, $240 = 0, $242 = 0, $243 = 0, $245 = 0, $247 = 0, $248 = 0, $25 = 0, $250 = 0, $253 = 0, $258 = 0, $259 = 0, $26 = 0, $264 = 0, $269 = 0, $27 = 0, $270 = 0, $275 = 0, $277 = 0, $278 = 0, $28 = 0, $280 = 0, $282 = 0, $284 = 0, $285 = 0, $287 = 0, $288 = 0, $29 = 0, $290 = 0, $291 = 0, $293 = 0, $294 = 0, $296 = 0, $299 = 0, $3 = 0, $30 = 0, $304 = 0, $305 = 0, $31 = 0, $310 = 0, $315 = 0, $316 = 0, $32 = 0, $321 = 0, $323 = 0, $324 = 0, $326 = 0, $328 = 0, $329 = 0, $33 = 0, $332 = 0, $333 = 0, $335 = 0, $338 = 0, $34 = 0, $343 = 0, $344 = 0, $349 = 0, $35 = 0, $354 = 0, $355 = 0, $36 = 0, $360 = 0, $362 = 0, $363 = 0, $365 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $374 = 0, $379 = 0, $38 = 0, $381 = 0, $383 = 0, $385 = 0, $386 = 0, $387 = 0, $389 = 0, $39 = 0, $391 = 0, $392 = 0, $393 = 0, $397 = 0, $398 = 0, $4 = 0, $400 = 0, $402 = 0, $403 = 0, $405 = 0, $408 = 0, $413 = 0, $414 = 0, $419 = 0, $424 = 0, $425 = 0, $43 = 0, $430 = 0, $432 = 0, $433 = 0, $435 = 0, $437 = 0, $439 = 0, $440 = 0, $443 = 0, $445 = 0, $451 = 0, $453 = 0, $46 = 0, $462 = 0, $465 = 0, $469 = 0, $48 = 0, $5 = 0, $50 = 0, $502 = 0, $507 = 0, $508 = 0, $509 = 0, $511 = 0, $512 = 0, $513 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $524 = 0, $526 = 0, $527 = 0, $529 = 0, $532 = 0, $537 = 0, $538 = 0, $54 = 0, $543 = 0, $548 = 0, $549 = 0, $554 = 0, $556 = 0, $557 = 0, $559 = 0, $56 = 0, $561 = 0, $562 = 0, $565 = 0, $566 = 0, $569 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $579 = 0, $58 = 0, $584 = 0, $586 = 0, $588 = 0, $590 = 0, $591 = 0, $592 = 0, $594 = 0, $596 = 0, $597 = 0, $6 = 0, $60 = 0, $602 = 0, $603 = 0, $608 = 0, $610 = 0, $612 = 0, $613 = 0, $617 = 0, $618 = 0, $62 = 0, $620 = 0, $622 = 0, $623 = 0, $625 = 0, $628 = 0, $633 = 0, $634 = 0, $639 = 0, $644 = 0, $645 = 0, $650 = 0, $652 = 0, $653 = 0, $655 = 0, $657 = 0, $658 = 0, $659 = 0, $660 = 0, $666 = 0, $671 = 0, $672 = 0, $676 = 0, $68 = 0, $680 = 0, $682 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $695 = 0, $7 = 0, $706 = 0, $707 = 0, $709 = 0, $710 = 0, $711 = 0, $713 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $72 = 0, $722 = 0, $724 = 0, $728 = 0, $729 = 0, $73 = 0, $731 = 0, $732 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $74 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $747 = 0, $751 = 0, $753 = 0, $755 = 0, $756 = 0, $759 = 0, $76 = 0, $761 = 0, $763 = 0, $780 = 0, $782 = 0, $783 = 0, $79 = 0, $791 = 0, $793 = 0, $794 = 0, $8 = 0, $803 = 0, $804 = 0, $84 = 0, $85 = 0, $9 = 0, $90 = 0, $95 = 0, $96 = 0, $__f$01$i$i = 0, $begin = 0, $c = 0, $data = 0, $digit$0 = 0, $digit$0$1 = 0, $digit$0$2 = 0, $digit$0$3 = 0, $eh$lpad$body$i$index15Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i104$index20Z2D = 0, $eh$lpad$body$i104$indexZ2D = 0, $eh$lpad$body$i142$index30Z2D = 0, $eh$lpad$body$i142$indexZ2D = 0, $eh$lpad$body168$index35Z2D = 0, $eh$lpad$body168$indexZ2D = 0, $eh$lpad$body176$index40Z2D = 0, $eh$lpad$body176$indexZ2D = 0, $eh$lpad$body77$index6Z2D = 0, $eh$lpad$body77$indexZ2D = 0, $id = 0, $kind$0 = 0, $kind$1 = 0, $line_number$0$lcssa = 0, $line_number$0312 = 0, $line_number$1 = 0, $line_number$2 = 0, $line_number$3 = 0, $line_number$3$lcssa440 = 0, $line_number$5 = 0, $line_number$6 = 0, $line_number$6$lcssa = 0, $line_start$0311 = 0, $line_start$1 = 0, $line_start$2 = 0, $line_start$3 = 0, $line_start$3$lcssa439 = 0, $line_start$5 = 0, $line_start$6 = 0, $lpad$phi$index = 0, $lpad$phi$index25 = 0, $ss = 0, $ss4 = 0, $ss6 = 0, $storemerge40 = 0, label = 0, sp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 784 | 0;
 $0 = sp + 782 | 0;
 $1 = sp + 72 | 0;
 $2 = sp + 780 | 0;
 $3 = sp + 732 | 0;
 $4 = sp + 781 | 0;
 $5 = sp + 20 | 0;
 $c = sp + 32 | 0;
 $begin = sp;
 $data = sp + 300 | 0;
 $6 = sp + 664 | 0;
 $7 = sp + 720 | 0;
 $8 = sp + 744 | 0;
 $9 = sp + 756 | 0;
 $ss = sp + 112 | 0;
 $10 = sp + 768 | 0;
 $11 = sp + 324 | 0;
 $12 = sp + 312 | 0;
 $ss4 = sp + 336 | 0;
 $13 = sp + 508 | 0;
 $id = sp + 36 | 0;
 $14 = sp + 48 | 0;
 $ss6 = sp + 520 | 0;
 $15 = sp + 60 | 0;
 $16 = sp + 676 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 256 | 0;
 $19 = sp + 8 | 0;
 $20 = sp + 480 | 0;
 HEAP32[$agg$result >> 2] = $agg$result;
 $21 = $agg$result + 4 | 0;
 HEAP32[$21 >> 2] = $agg$result;
 $22 = $agg$result + 8 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$c >> 2] = $input;
 L1 : do if (!(HEAP8[$input >> 0] | 0)) {
  $717 = 0;
  $722 = 1;
  $line_number$0$lcssa = 1;
  label = 234;
 } else {
  $25 = $begin + 4 | 0;
  $26 = $17 + 12 | 0;
  $27 = $17 + 20 | 0;
  $28 = $16 + 4 | 0;
  $29 = $16 + 16 | 0;
  $30 = $16 + 28 | 0;
  $31 = $16 + 16 | 0;
  $32 = $data + 1 | 0;
  $33 = $data + 8 | 0;
  $34 = $data + 4 | 0;
  $35 = 1;
  $37 = $input;
  $line_number$0312 = 1;
  $line_start$0311 = $input;
  L3 : while (1) {
   HEAP32[$begin >> 2] = $line_number$0312;
   HEAP32[$25 >> 2] = $35;
   HEAP32[$data >> 2] = 0;
   HEAP32[$data + 4 >> 2] = 0;
   HEAP32[$data + 8 >> 2] = 0;
   $36 = HEAP8[$37 >> 0] | 0;
   $38 = $36 << 24 >> 24;
   L5 : do switch ($38 | 0) {
   case 13:
   case 9:
   case 32:
    {
     $line_number$6 = $line_number$0312;
     $line_start$6 = $line_start$0311;
     break;
    }
   case 10:
    {
     $line_number$6 = $line_number$0312 + 1 | 0;
     $line_start$6 = $37 + 1 | 0;
     break;
    }
   case 123:
    {
     $kind$1 = 0;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 125:
    {
     $kind$1 = 1;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 91:
    {
     $kind$1 = 2;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 93:
    {
     $kind$1 = 3;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 58:
    {
     $kind$1 = 4;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 44:
    {
     $kind$1 = 5;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 36:
    {
     $kind$1 = 6;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 46:
    {
     $kind$1 = 7;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 40:
    {
     $kind$1 = 8;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 41:
    {
     $kind$1 = 9;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 59:
    {
     $kind$1 = 10;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 33:
    {
     $43 = $37 + 1 | 0;
     if ((HEAP8[$43 >> 0] | 0) == 61) {
      HEAP32[$c >> 2] = $43;
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 54341) | 0;
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) {
       label = 20;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$5 = $line_number$0312;
       $line_start$5 = $line_start$0311;
       label = 221;
       break L5;
      }
     } else {
      __THREW__ = 0;
      invoke_iii(19, $data | 0, 54200) | 0;
      $54 = __THREW__;
      __THREW__ = 0;
      if ($54 & 1) {
       label = 20;
       break L3;
      } else {
       $kind$1 = 13;
       $line_number$5 = $line_number$0312;
       $line_start$5 = $line_start$0311;
       label = 221;
       break L5;
      }
     }
     break;
    }
   case 126:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 54198) | 0;
     $56 = __THREW__;
     __THREW__ = 0;
     if ($56 & 1) {
      label = 20;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0312;
      $line_start$5 = $line_start$0311;
      label = 221;
     }
     break;
    }
   case 43:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 54196) | 0;
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 20;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0312;
      $line_start$5 = $line_start$0311;
      label = 221;
     }
     break;
    }
   case 45:
    {
     __THREW__ = 0;
     invoke_iii(19, $data | 0, 54787) | 0;
     $60 = __THREW__;
     __THREW__ = 0;
     if ($60 & 1) {
      label = 20;
      break L3;
     } else {
      $kind$1 = 13;
      $line_number$5 = $line_number$0312;
      $line_start$5 = $line_start$0311;
      label = 221;
     }
     break;
    }
   case 57:
   case 56:
   case 55:
   case 54:
   case 53:
   case 52:
   case 51:
   case 50:
   case 49:
   case 48:
    {
     __THREW__ = 0;
     invoke_viiii(10, $6 | 0, $c | 0, $filename | 0, $begin | 0);
     $62 = __THREW__;
     __THREW__ = 0;
     if ($62 & 1) {
      label = 20;
      break L3;
     }
     if (!(HEAP8[$data >> 0] & 1)) {
      HEAP8[$32 >> 0] = 0;
      HEAP8[$data >> 0] = 0;
     } else {
      HEAP8[HEAP32[$33 >> 2] >> 0] = 0;
      HEAP32[$34 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $data | 0, 0);
     $68 = __THREW__;
     __THREW__ = 0;
     if ($68 & 1) {
      label = 31;
      break L3;
     };
     HEAP32[$data >> 2] = HEAP32[$6 >> 2];
     HEAP32[$data + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$data + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     HEAP32[$6 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $kind$1 = 12;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
     break;
    }
   case 34:
    {
     $$pn = $37;
     $line_number$1 = $line_number$0312;
     $line_start$1 = $line_start$0311;
     while (1) {
      $storemerge40 = $$pn + 1 | 0;
      HEAP32[$c >> 2] = $storemerge40;
      $72 = HEAP8[$storemerge40 >> 0] | 0;
      switch ($72 << 24 >> 24) {
      case 0:
       {
        label = 34;
        break L3;
        break;
       }
      case 34:
       {
        $kind$1 = 14;
        $line_number$5 = $line_number$1;
        $line_start$5 = $line_start$1;
        label = 221;
        break L5;
        break;
       }
      default:
       {}
      }
      L93 : do switch ($72 << 24 >> 24 | 0) {
      case 92:
       {
        $111 = $$pn + 2 | 0;
        HEAP32[$c >> 2] = $111;
        $112 = HEAP8[$111 >> 0] | 0;
        switch ($112 << 24 >> 24 | 0) {
        case 0:
         {
          label = 108;
          break L3;
          break;
         }
        case 34:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, $112 | 0);
          $114 = __THREW__;
          __THREW__ = 0;
          if ($114 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 92:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, $112 | 0);
          $116 = __THREW__;
          __THREW__ = 0;
          if ($116 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 47:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, $112 | 0);
          $118 = __THREW__;
          __THREW__ = 0;
          if ($118 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 98:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, 8);
          $120 = __THREW__;
          __THREW__ = 0;
          if ($120 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 102:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, 12);
          $122 = __THREW__;
          __THREW__ = 0;
          if ($122 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 110:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, 10);
          $124 = __THREW__;
          __THREW__ = 0;
          if ($124 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 114:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, 13);
          $126 = __THREW__;
          __THREW__ = 0;
          if ($126 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 116:
         {
          __THREW__ = 0;
          invoke_vii(44, $data | 0, 9);
          $128 = __THREW__;
          __THREW__ = 0;
          if ($128 & 1) {
           label = 19;
           break L3;
          } else {
           $line_number$2 = $line_number$1;
           $line_start$2 = $line_start$1;
           break L93;
          }
          break;
         }
        case 117:
         {
          $130 = $$pn + 3 | 0;
          HEAP32[$c >> 2] = $130;
          $131 = HEAP8[$130 >> 0] | 0;
          $132 = $131 & 255;
          switch ($131 << 24 >> 24) {
          case 0:
           {
            label = 53;
            break L3;
            break;
           }
          case 34:
           {
            label = 61;
            break L3;
            break;
           }
          default:
           {}
          }
          do if (($131 + -48 & 255) < 10) $digit$0 = $132 + -48 | 0; else {
           if (($131 + -97 & 255) < 6) {
            $digit$0 = $132 + -87 | 0;
            break;
           }
           if (($131 + -65 & 255) >= 6) {
            $$lcssa319 = $131;
            label = 75;
            break L3;
           }
           $digit$0 = $132 + -55 | 0;
          } while (0);
          $287 = HEAP8[$$pn + 4 >> 0] | 0;
          $288 = $287 & 255;
          switch ($287 << 24 >> 24) {
          case 0:
           {
            label = 53;
            break L3;
            break;
           }
          case 34:
           {
            label = 61;
            break L3;
            break;
           }
          default:
           {}
          }
          do if (($287 + -48 & 255) < 10) $digit$0$1 = $288 + -48 | 0; else {
           if (($287 + -97 & 255) < 6) {
            $digit$0$1 = $288 + -87 | 0;
            break;
           }
           if (($287 + -65 & 255) >= 6) {
            $$lcssa319 = $287;
            label = 75;
            break L3;
           }
           $digit$0$1 = $288 + -55 | 0;
          } while (0);
          $780 = $digit$0$1 + ($digit$0 << 4) | 0;
          $782 = HEAP8[$$pn + 5 >> 0] | 0;
          $783 = $782 & 255;
          switch ($782 << 24 >> 24) {
          case 0:
           {
            label = 53;
            break L3;
            break;
           }
          case 34:
           {
            label = 61;
            break L3;
            break;
           }
          default:
           {}
          }
          do if (($782 + -48 & 255) < 10) $digit$0$2 = $783 + -48 | 0; else {
           if (($782 + -97 & 255) < 6) {
            $digit$0$2 = $783 + -87 | 0;
            break;
           }
           if (($782 + -65 & 255) >= 6) {
            $$lcssa319 = $782;
            label = 75;
            break L3;
           }
           $digit$0$2 = $783 + -55 | 0;
          } while (0);
          $791 = $digit$0$2 + ($780 << 4) | 0;
          $793 = HEAP8[$$pn + 6 >> 0] | 0;
          $794 = $793 & 255;
          switch ($793 << 24 >> 24) {
          case 0:
           {
            label = 53;
            break L3;
            break;
           }
          case 34:
           {
            label = 61;
            break L3;
            break;
           }
          default:
           {}
          }
          do if (($793 + -48 & 255) < 10) $digit$0$3 = $794 + -48 | 0; else {
           if (($793 + -97 & 255) < 6) {
            $digit$0$3 = $794 + -87 | 0;
            break;
           }
           if (($793 + -65 & 255) >= 6) {
            $$lcssa319 = $793;
            label = 75;
            break L3;
           }
           $digit$0$3 = $794 + -55 | 0;
          } while (0);
          $290 = $digit$0$3 + ($791 << 4) | 0;
          if ($290 >>> 0 >= 128) {
           label = 99;
           break L3;
          }
          __THREW__ = 0;
          invoke_vii(44, $data | 0, $290 & 255 | 0);
          $291 = __THREW__;
          __THREW__ = 0;
          if ($291 & 1) {
           label = 19;
           break L3;
          }
          HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 3;
          $line_number$2 = $line_number$1;
          $line_start$2 = $line_start$1;
          break L93;
          break;
         }
        default:
         {
          label = 116;
          break L3;
         }
        }
        break;
       }
      case 10:
       {
        __THREW__ = 0;
        invoke_vii(44, $data | 0, $72 | 0);
        $443 = __THREW__;
        __THREW__ = 0;
        if ($443 & 1) {
         label = 19;
         break L3;
        } else {
         $line_number$2 = $line_number$1 + 1 | 0;
         $line_start$2 = $$pn + 2 | 0;
        }
        break;
       }
      default:
       {
        __THREW__ = 0;
        invoke_vii(44, $data | 0, $72 | 0);
        $445 = __THREW__;
        __THREW__ = 0;
        if ($445 & 1) {
         label = 19;
         break L3;
        } else {
         $line_number$2 = $line_number$1;
         $line_start$2 = $line_start$1;
        }
       }
      } while (0);
      $$pn = HEAP32[$c >> 2] | 0;
      $line_number$1 = $line_number$2;
      $line_start$1 = $line_start$2;
     }
     break;
    }
   default:
    {
     if (($36 + -65 & 255) >= 26) if (!($36 << 24 >> 24 == 95 | ($36 + -97 & 255) < 26)) {
      switch ($38 | 0) {
      case 35:
      case 37:
      case 47:
      case 42:
      case 62:
      case 60:
      case 61:
      case 94:
      case 124:
      case 38:
       break;
      default:
       {
        label = 196;
        break L3;
       }
      }
      switch ($36 << 24 >> 24) {
      case 47:
       {
        label = 170;
        break;
       }
      case 35:
       {
        $511 = 35;
        $513 = $37;
        L12 : while (1) {
         switch ($511 << 24 >> 24) {
         case 0:
         case 10:
          {
           $$lcssa = $513;
           break L12;
           break;
          }
         default:
          {}
         }
         $512 = $513 + 1 | 0;
         HEAP32[$c >> 2] = $512;
         $511 = HEAP8[$512 >> 0] | 0;
         $513 = $512;
        }
        HEAP32[$c >> 2] = $$lcssa + -1;
        $line_number$6 = $line_number$0312;
        $line_start$6 = $line_start$0311;
        break L5;
        break;
       }
      case 0:
       {
        $573 = $37;
        break;
       }
      default:
       {
        $565 = $36;
        $804 = $37;
        label = 192;
       }
      }
      if ((label | 0) == 170) {
       label = 0;
       if ((HEAP8[$37 + 1 >> 0] | 0) == 47) {
        $507 = 47;
        $509 = $37;
        L19 : while (1) {
         switch ($507 << 24 >> 24) {
         case 0:
         case 10:
          {
           $$lcssa441 = $509;
           break L19;
           break;
          }
         default:
          {}
         }
         $508 = $509 + 1 | 0;
         HEAP32[$c >> 2] = $508;
         $507 = HEAP8[$508 >> 0] | 0;
         $509 = $508;
        }
        HEAP32[$c >> 2] = $$lcssa441 + -1;
        $line_number$6 = $line_number$0312;
        $line_start$6 = $line_start$0311;
        break L5;
       }
       if ((HEAP8[$37 + 1 >> 0] | 0) == 42) {
        $519 = $37 + 2 | 0;
        $line_number$3 = $line_number$0312;
        $line_start$3 = $line_start$0311;
        L25 : while (1) {
         HEAP32[$c >> 2] = $519;
         $520 = HEAP8[$519 >> 0] | 0;
         switch ($520 << 24 >> 24) {
         case 0:
          {
           label = 183;
           break L3;
           break;
          }
         case 42:
          {
           $521 = $519 + 1 | 0;
           if ((HEAP8[$521 >> 0] | 0) == 47) {
            $$lcssa438 = $519;
            $line_number$3$lcssa440 = $line_number$3;
            $line_start$3$lcssa439 = $line_start$3;
            break L25;
           } else $$pre$phiZ2D = $521;
           break;
          }
         default:
          $$pre$phiZ2D = $519 + 1 | 0;
         }
         $524 = $520 << 24 >> 24 == 10;
         $519 = $$pre$phiZ2D;
         $line_number$3 = ($524 & 1) + $line_number$3 | 0;
         $line_start$3 = $524 ? $$pre$phiZ2D : $line_start$3;
        }
        HEAP32[$c >> 2] = $$lcssa438 + 1;
        $line_number$6 = $line_number$3$lcssa440;
        $line_start$6 = $line_start$3$lcssa439;
        break L5;
       } else {
        $565 = 47;
        $804 = $37;
        label = 192;
       }
      }
      L32 : do if ((label | 0) == 192) while (1) {
       label = 0;
       switch ($565 << 24 >> 24 | 0) {
       case 35:
       case 37:
       case 47:
       case 42:
       case 62:
       case 60:
       case 61:
       case 94:
       case 124:
       case 38:
        break;
       default:
        {
         $573 = $804;
         break L32;
        }
       }
       __THREW__ = 0;
       invoke_vii(44, $data | 0, $565 | 0);
       $566 = __THREW__;
       __THREW__ = 0;
       if ($566 & 1) {
        label = 18;
        break L3;
       }
       $569 = (HEAP32[$c >> 2] | 0) + 1 | 0;
       HEAP32[$c >> 2] = $569;
       $565 = HEAP8[$569 >> 0] | 0;
       if (!($565 << 24 >> 24)) {
        $573 = $569;
        break L32;
       } else {
        $804 = $569;
        label = 192;
       }
      } while (0);
      HEAP32[$c >> 2] = $573 + -1;
      $kind$1 = 13;
      $line_number$5 = $line_number$0312;
      $line_start$5 = $line_start$0311;
      label = 221;
      break L5;
     };
     HEAP32[$id >> 2] = 0;
     HEAP32[$id + 4 >> 2] = 0;
     HEAP32[$id + 8 >> 2] = 0;
     $451 = HEAP8[$37 >> 0] | 0;
     L39 : do if (!($451 << 24 >> 24)) $469 = $37; else {
      $453 = $451;
      $803 = $37;
      while (1) {
       if (($453 + -65 & 255) >= 26) if (!(($453 + -48 & 255) < 10 | ($453 << 24 >> 24 == 95 | ($453 + -97 & 255) < 26))) {
        $469 = $803;
        break L39;
       }
       __THREW__ = 0;
       invoke_vii(44, $id | 0, $453 | 0);
       $462 = __THREW__;
       __THREW__ = 0;
       if ($462 & 1) {
        label = 145;
        break L3;
       }
       $465 = (HEAP32[$c >> 2] | 0) + 1 | 0;
       HEAP32[$c >> 2] = $465;
       $453 = HEAP8[$465 >> 0] | 0;
       if (!($453 << 24 >> 24)) {
        $469 = $465;
        break;
       } else $803 = $465;
      }
     } while (0);
     HEAP32[$c >> 2] = $469 + -1;
     do if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50860) | 0)) $kind$0 = 15; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50854) | 0)) $kind$0 = 16; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 62979) | 0)) $kind$0 = 17; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50850) | 0)) $kind$0 = 18; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 52470) | 0)) $kind$0 = 19; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50847) | 0)) $kind$0 = 20; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50840) | 0)) $kind$0 = 21; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50830) | 0)) $kind$0 = 22; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50827) | 0)) $kind$0 = 23; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50821) | 0)) $kind$0 = 24; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 52444) | 0)) $kind$0 = 25; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50496) | 0)) $kind$0 = 28; else if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50501) | 0)) $kind$0 = 29; else {
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50810) | 0)) {
       $kind$0 = 26;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 50805) | 0)) {
       $kind$0 = 27;
       break;
      }
      if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($id, 62974) | 0)) {
       $kind$0 = 30;
       break;
      }
      __THREW__ = 0;
      invoke_iii(20, $data | 0, $id | 0) | 0;
      $502 = __THREW__;
      __THREW__ = 0;
      if ($502 & 1) {
       label = 146;
       break L3;
      } else $kind$0 = 11;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id);
     $kind$1 = $kind$0;
     $line_number$5 = $line_number$0312;
     $line_start$5 = $line_start$0311;
     label = 221;
    }
   } while (0);
   if ((label | 0) == 221) {
    label = 0;
    $659 = HEAP32[$c >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(40, $17 | 0, $filename | 0);
    $660 = __THREW__;
    __THREW__ = 0;
    if ($660 & 1) {
     label = 20;
     break;
    }
    $666 = $begin;
    $671 = HEAP32[$666 + 4 >> 2] | 0;
    $672 = $26;
    HEAP32[$672 >> 2] = HEAP32[$666 >> 2];
    HEAP32[$672 + 4 >> 2] = $671;
    $676 = $27;
    HEAP32[$676 >> 2] = $line_number$5;
    HEAP32[$676 + 4 >> 2] = 1 - $line_start$5 + $659;
    HEAP32[$16 >> 2] = $kind$1;
    __THREW__ = 0;
    invoke_vii(40, $28 | 0, $data | 0);
    $680 = __THREW__;
    __THREW__ = 0;
    if ($680 & 1) {
     label = 228;
     break;
    }
    __THREW__ = 0;
    invoke_vii(40, $29 | 0, $17 | 0);
    $682 = __THREW__;
    __THREW__ = 0;
    if ($682 & 1) {
     label = 224;
     break;
    };
    HEAP32[$30 >> 2] = HEAP32[$26 >> 2];
    HEAP32[$30 + 4 >> 2] = HEAP32[$26 + 4 >> 2];
    HEAP32[$30 + 8 >> 2] = HEAP32[$26 + 8 >> 2];
    HEAP32[$30 + 12 >> 2] = HEAP32[$26 + 12 >> 2];
    __THREW__ = 0;
    $686 = invoke_ii(67, 52) | 0;
    $687 = __THREW__;
    __THREW__ = 0;
    if ($687 & 1) {
     label = 230;
     break;
    }
    $690 = HEAP32[$16 >> 2] | 0;
    $691 = $686 + 12 | 0;
    HEAP32[$691 >> 2] = HEAP32[$28 >> 2];
    HEAP32[$691 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
    HEAP32[$691 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
    HEAP32[$28 >> 2] = 0;
    HEAP32[$28 + 4 >> 2] = 0;
    HEAP32[$28 + 8 >> 2] = 0;
    $692 = $686 + 24 | 0;
    HEAP32[$692 >> 2] = HEAP32[$31 >> 2];
    HEAP32[$692 + 4 >> 2] = HEAP32[$31 + 4 >> 2];
    HEAP32[$692 + 8 >> 2] = HEAP32[$31 + 8 >> 2];
    HEAP32[$31 >> 2] = 0;
    HEAP32[$31 + 4 >> 2] = 0;
    HEAP32[$31 + 8 >> 2] = 0;
    $693 = $686 + 36 | 0;
    HEAP32[$693 >> 2] = HEAP32[$30 >> 2];
    HEAP32[$693 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
    HEAP32[$693 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
    HEAP32[$693 + 12 >> 2] = HEAP32[$30 + 12 >> 2];
    HEAP32[$686 + 8 >> 2] = $690;
    HEAP32[$686 + 4 >> 2] = $agg$result;
    $695 = HEAP32[$agg$result >> 2] | 0;
    HEAP32[$686 >> 2] = $695;
    HEAP32[$695 + 4 >> 2] = $686;
    HEAP32[$agg$result >> 2] = $686;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
    $line_number$6 = $line_number$5;
    $line_start$6 = $line_start$5;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($data);
   $37 = (HEAP32[$c >> 2] | 0) + 1 | 0;
   HEAP32[$c >> 2] = $37;
   $706 = $37 - $line_start$6 + 1 | 0;
   if (!(HEAP8[$37 >> 0] | 0)) {
    $$lcssa442 = $706;
    $line_number$6$lcssa = $line_number$6;
    label = 233;
    break;
   } else {
    $35 = $706;
    $line_number$0312 = $line_number$6;
    $line_start$0311 = $line_start$6;
   }
  }
  L153 : switch (label | 0) {
  case 18:
   {
    $48 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body77$index6Z2D = tempRet0;
    $eh$lpad$body77$indexZ2D = $48;
    label = 21;
    break;
   }
  case 19:
   {
    $50 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body77$index6Z2D = tempRet0;
    $eh$lpad$body77$indexZ2D = $50;
    label = 21;
    break;
   }
  case 20:
   {
    $52 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body77$index6Z2D = tempRet0;
    $eh$lpad$body77$indexZ2D = $52;
    label = 21;
    break;
   }
  case 31:
   {
    ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
    break;
   }
  case 34:
   {
    $73 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $7 | 0, 15698, 19);
    $74 = __THREW__;
    __THREW__ = 0;
    L205 : do if ($74 & 1) {
     $106 = ___cxa_find_matching_catch() | 0;
     $$013181 = $106;
     $$020180 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $73 | 0, $filename | 0);
     $76 = __THREW__;
     __THREW__ = 0;
     do if ($76 & 1) $$037 = 1; else {
      $79 = $begin;
      $84 = HEAP32[$79 + 4 >> 2] | 0;
      $85 = $73 + 12 | 0;
      HEAP32[$85 >> 2] = HEAP32[$79 >> 2];
      HEAP32[$85 + 4 >> 2] = $84;
      $90 = $begin;
      $95 = HEAP32[$90 + 4 >> 2] | 0;
      $96 = $73 + 20 | 0;
      HEAP32[$96 >> 2] = HEAP32[$90 >> 2];
      HEAP32[$96 + 4 >> 2] = $95;
      __THREW__ = 0;
      invoke_vii(40, $73 + 28 | 0, $7 | 0);
      $101 = __THREW__;
      __THREW__ = 0;
      if ($101 & 1) {
       $103 = ___cxa_find_matching_catch() | 0;
       $104 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($73);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
       $$013181 = $103;
       $$020180 = $104;
       break L205;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $73 | 0, 8, 172);
       __THREW__ = 0;
       $$037 = 0;
       break;
      }
     } while (0);
     $108 = ___cxa_find_matching_catch() | 0;
     $109 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     if ($$037) {
      $$013181 = $108;
      $$020180 = $109;
     } else {
      $$13 = $108;
      $$1333 = $109;
      break L153;
     }
    } while (0);
    ___cxa_free_exception($73 | 0);
    $$13 = $$013181;
    $$1333 = $$020180;
    break;
   }
  case 53:
   {
    $133 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $8 | 0, 15698, 19);
    $134 = __THREW__;
    __THREW__ = 0;
    L302 : do if ($134 & 1) {
     $166 = ___cxa_find_matching_catch() | 0;
     $$114185 = $166;
     $$121184 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $133 | 0, $filename | 0);
     $136 = __THREW__;
     __THREW__ = 0;
     do if ($136 & 1) $$018 = 1; else {
      $139 = $begin;
      $144 = HEAP32[$139 + 4 >> 2] | 0;
      $145 = $133 + 12 | 0;
      HEAP32[$145 >> 2] = HEAP32[$139 >> 2];
      HEAP32[$145 + 4 >> 2] = $144;
      $150 = $begin;
      $155 = HEAP32[$150 + 4 >> 2] | 0;
      $156 = $133 + 20 | 0;
      HEAP32[$156 >> 2] = HEAP32[$150 >> 2];
      HEAP32[$156 + 4 >> 2] = $155;
      __THREW__ = 0;
      invoke_vii(40, $133 + 28 | 0, $8 | 0);
      $161 = __THREW__;
      __THREW__ = 0;
      if ($161 & 1) {
       $163 = ___cxa_find_matching_catch() | 0;
       $164 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($133);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       $$114185 = $163;
       $$121184 = $164;
       break L302;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $133 | 0, 8, 172);
       __THREW__ = 0;
       $$018 = 0;
       break;
      }
     } while (0);
     $168 = ___cxa_find_matching_catch() | 0;
     $169 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     if ($$018) {
      $$114185 = $168;
      $$121184 = $169;
     } else {
      $$13 = $168;
      $$1333 = $169;
      break L153;
     }
    } while (0);
    ___cxa_free_exception($133 | 0);
    $$13 = $$114185;
    $$1333 = $$121184;
    break;
   }
  case 61:
   {
    $170 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $9 | 0, 15718, 52);
    $171 = __THREW__;
    __THREW__ = 0;
    L313 : do if ($171 & 1) {
     $203 = ___cxa_find_matching_catch() | 0;
     $$2189 = $203;
     $$222188 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $170 | 0, $filename | 0);
     $173 = __THREW__;
     __THREW__ = 0;
     do if ($173 & 1) $$011 = 1; else {
      $176 = $begin;
      $181 = HEAP32[$176 + 4 >> 2] | 0;
      $182 = $170 + 12 | 0;
      HEAP32[$182 >> 2] = HEAP32[$176 >> 2];
      HEAP32[$182 + 4 >> 2] = $181;
      $187 = $begin;
      $192 = HEAP32[$187 + 4 >> 2] | 0;
      $193 = $170 + 20 | 0;
      HEAP32[$193 >> 2] = HEAP32[$187 >> 2];
      HEAP32[$193 + 4 >> 2] = $192;
      __THREW__ = 0;
      invoke_vii(40, $170 + 28 | 0, $9 | 0);
      $198 = __THREW__;
      __THREW__ = 0;
      if ($198 & 1) {
       $200 = ___cxa_find_matching_catch() | 0;
       $201 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($170);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       $$2189 = $200;
       $$222188 = $201;
       break L313;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $170 | 0, 8, 172);
       __THREW__ = 0;
       $$011 = 0;
       break;
      }
     } while (0);
     $205 = ___cxa_find_matching_catch() | 0;
     $206 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     if ($$011) {
      $$2189 = $205;
      $$222188 = $206;
     } else {
      $$13 = $205;
      $$1333 = $206;
      break L153;
     }
    } while (0);
    ___cxa_free_exception($170 | 0);
    $$13 = $$2189;
    $$1333 = $$222188;
    break;
   }
  case 75:
   {
    $213 = $ss + 64 | 0;
    $214 = $ss + 8 | 0;
    HEAP32[$214 >> 2] = 2912;
    $215 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 2952;
    HEAP32[$213 >> 2] = 2972;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $215 | 0);
    $218 = __THREW__;
    __THREW__ = 0;
    if ($218 & 1) {
     $231 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $231;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$ss + 64 >> 2] = 2932;
     HEAP32[$214 >> 2] = 2912;
     __THREW__ = 0;
     invoke_vi(173, $215 | 0);
     $223 = __THREW__;
     __THREW__ = 0;
     do if ($223 & 1) {
      $233 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index15Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $233;
     } else {
      HEAP32[$215 >> 2] = 2988;
      $225 = $ss + 44 | 0;
      HEAP32[$225 >> 2] = 0;
      HEAP32[$225 + 4 >> 2] = 0;
      HEAP32[$225 + 8 >> 2] = 0;
      HEAP32[$225 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$5 + 4 >> 2] = 0;
      HEAP32[$5 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $215 | 0, $5 | 0);
      $227 = __THREW__;
      __THREW__ = 0;
      if ($227 & 1) {
       $229 = ___cxa_find_matching_catch() | 0;
       $230 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($215);
       $eh$lpad$body$i$index15Z2D = $230;
       $eh$lpad$body$i$indexZ2D = $229;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      $235 = $ss + 8 | 0;
      __THREW__ = 0;
      $236 = invoke_iiii(29, $235 | 0, 15771, 36) | 0;
      $237 = __THREW__;
      __THREW__ = 0;
      L281 : do if ($237 & 1) label = 92; else {
       __THREW__ = 0;
       $239 = invoke_iiii(29, $236 | 0, 15808, 16) | 0;
       $240 = __THREW__;
       __THREW__ = 0;
       if ($240 & 1) label = 92; else {
        HEAP8[$4 >> 0] = $$lcssa319;
        __THREW__ = 0;
        $242 = invoke_iiii(29, $239 | 0, $4 | 0, 1) | 0;
        $243 = __THREW__;
        __THREW__ = 0;
        if ($243 & 1) label = 92; else {
         __THREW__ = 0;
         invoke_iiii(29, $242 | 0, 15825, 1) | 0;
         $245 = __THREW__;
         __THREW__ = 0;
         if ($245 & 1) label = 92; else {
          $247 = ___cxa_allocate_exception(40) | 0;
          __THREW__ = 0;
          invoke_vii(43, $10 | 0, $215 | 0);
          $248 = __THREW__;
          __THREW__ = 0;
          L286 : do if ($248 & 1) {
           $282 = ___cxa_find_matching_catch() | 0;
           $$3193 = $282;
           $$323192 = tempRet0;
          } else {
           __THREW__ = 0;
           invoke_vii(40, $247 | 0, $filename | 0);
           $250 = __THREW__;
           __THREW__ = 0;
           do if ($250 & 1) $$09 = 1; else {
            $253 = $begin;
            $258 = HEAP32[$253 + 4 >> 2] | 0;
            $259 = $247 + 12 | 0;
            HEAP32[$259 >> 2] = HEAP32[$253 >> 2];
            HEAP32[$259 + 4 >> 2] = $258;
            $264 = $begin;
            $269 = HEAP32[$264 + 4 >> 2] | 0;
            $270 = $247 + 20 | 0;
            HEAP32[$270 >> 2] = HEAP32[$264 >> 2];
            HEAP32[$270 + 4 >> 2] = $269;
            __THREW__ = 0;
            invoke_vii(40, $247 + 28 | 0, $10 | 0);
            $275 = __THREW__;
            __THREW__ = 0;
            if ($275 & 1) {
             $277 = ___cxa_find_matching_catch() | 0;
             $278 = tempRet0;
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($247);
             __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
             $$3193 = $277;
             $$323192 = $278;
             break L286;
            } else {
             __THREW__ = 0;
             invoke_viii(4, $247 | 0, 8, 172);
             __THREW__ = 0;
             $$09 = 0;
             break;
            }
           } while (0);
           $284 = ___cxa_find_matching_catch() | 0;
           $285 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
           if ($$09) {
            $$3193 = $284;
            $$323192 = $285;
           } else {
            $$4 = $284;
            $$424 = $285;
            break L281;
           }
          } while (0);
          ___cxa_free_exception($247 | 0);
          $$4 = $$3193;
          $$424 = $$323192;
         }
        }
       }
      } while (0);
      if ((label | 0) == 92) {
       $280 = ___cxa_find_matching_catch() | 0;
       $$4 = $280;
       $$424 = tempRet0;
      }
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$213 >> 2] = 2932;
      HEAP32[$235 >> 2] = 2912;
      HEAP32[$215 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($225);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($215);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($213);
      $$13 = $$4;
      $$1333 = $$424;
      break L153;
     } while (0);
     $$0$i = $eh$lpad$body$i$index15Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($213);
    $eh$lpad$body77$index6Z2D = $$0$i;
    $eh$lpad$body77$indexZ2D = $$01$i;
    label = 21;
    break;
   }
  case 99:
   {
    $293 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $11 | 0, 15827, 29);
    $294 = __THREW__;
    __THREW__ = 0;
    L261 : do if ($294 & 1) {
     $326 = ___cxa_find_matching_catch() | 0;
     $$5197 = $326;
     $$525196 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $293 | 0, $filename | 0);
     $296 = __THREW__;
     __THREW__ = 0;
     do if ($296 & 1) $$07 = 1; else {
      $299 = $begin;
      $304 = HEAP32[$299 + 4 >> 2] | 0;
      $305 = $293 + 12 | 0;
      HEAP32[$305 >> 2] = HEAP32[$299 >> 2];
      HEAP32[$305 + 4 >> 2] = $304;
      $310 = $begin;
      $315 = HEAP32[$310 + 4 >> 2] | 0;
      $316 = $293 + 20 | 0;
      HEAP32[$316 >> 2] = HEAP32[$310 >> 2];
      HEAP32[$316 + 4 >> 2] = $315;
      __THREW__ = 0;
      invoke_vii(40, $293 + 28 | 0, $11 | 0);
      $321 = __THREW__;
      __THREW__ = 0;
      if ($321 & 1) {
       $323 = ___cxa_find_matching_catch() | 0;
       $324 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($293);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
       $$5197 = $323;
       $$525196 = $324;
       break L261;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $293 | 0, 8, 172);
       __THREW__ = 0;
       $$07 = 0;
       break;
      }
     } while (0);
     $328 = ___cxa_find_matching_catch() | 0;
     $329 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
     if ($$07) {
      $$5197 = $328;
      $$525196 = $329;
     } else {
      $$13 = $328;
      $$1333 = $329;
      break L153;
     }
    } while (0);
    ___cxa_free_exception($293 | 0);
    $$13 = $$5197;
    $$1333 = $$525196;
    break;
   }
  case 108:
   {
    $332 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $12 | 0, 15857, 44);
    $333 = __THREW__;
    __THREW__ = 0;
    L249 : do if ($333 & 1) {
     $365 = ___cxa_find_matching_catch() | 0;
     $$6201 = $365;
     $$626200 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $332 | 0, $filename | 0);
     $335 = __THREW__;
     __THREW__ = 0;
     do if ($335 & 1) $$05 = 1; else {
      $338 = $begin;
      $343 = HEAP32[$338 + 4 >> 2] | 0;
      $344 = $332 + 12 | 0;
      HEAP32[$344 >> 2] = HEAP32[$338 >> 2];
      HEAP32[$344 + 4 >> 2] = $343;
      $349 = $begin;
      $354 = HEAP32[$349 + 4 >> 2] | 0;
      $355 = $332 + 20 | 0;
      HEAP32[$355 >> 2] = HEAP32[$349 >> 2];
      HEAP32[$355 + 4 >> 2] = $354;
      __THREW__ = 0;
      invoke_vii(40, $332 + 28 | 0, $12 | 0);
      $360 = __THREW__;
      __THREW__ = 0;
      if ($360 & 1) {
       $362 = ___cxa_find_matching_catch() | 0;
       $363 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($332);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
       $$6201 = $362;
       $$626200 = $363;
       break L249;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $332 | 0, 8, 172);
       __THREW__ = 0;
       $$05 = 0;
       break;
      }
     } while (0);
     $367 = ___cxa_find_matching_catch() | 0;
     $368 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
     if ($$05) {
      $$6201 = $367;
      $$626200 = $368;
     } else {
      $$13 = $367;
      $$1333 = $368;
      break L153;
     }
    } while (0);
    ___cxa_free_exception($332 | 0);
    $$13 = $$6201;
    $$1333 = $$626200;
    break;
   }
  case 116:
   {
    $369 = $ss4 + 64 | 0;
    $370 = $ss4 + 8 | 0;
    HEAP32[$370 >> 2] = 2912;
    $371 = $ss4 + 12 | 0;
    HEAP32[$ss4 >> 2] = 2952;
    HEAP32[$369 >> 2] = 2972;
    HEAP32[$ss4 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss4 + 64 | 0, $371 | 0);
    $374 = __THREW__;
    __THREW__ = 0;
    if ($374 & 1) {
     $387 = ___cxa_find_matching_catch() | 0;
     $$0$i107 = tempRet0;
     $$01$i106 = $387;
    } else {
     HEAP32[$ss4 + 136 >> 2] = 0;
     HEAP32[$ss4 + 140 >> 2] = -1;
     HEAP32[$ss4 >> 2] = 2892;
     HEAP32[$ss4 + 64 >> 2] = 2932;
     HEAP32[$370 >> 2] = 2912;
     __THREW__ = 0;
     invoke_vi(173, $371 | 0);
     $379 = __THREW__;
     __THREW__ = 0;
     do if ($379 & 1) {
      $389 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i104$index20Z2D = tempRet0;
      $eh$lpad$body$i104$indexZ2D = $389;
     } else {
      HEAP32[$371 >> 2] = 2988;
      $381 = $ss4 + 44 | 0;
      HEAP32[$381 >> 2] = 0;
      HEAP32[$381 + 4 >> 2] = 0;
      HEAP32[$381 + 8 >> 2] = 0;
      HEAP32[$381 + 12 >> 2] = 0;
      HEAP32[$ss4 + 60 >> 2] = 24;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $371 | 0, $3 | 0);
      $383 = __THREW__;
      __THREW__ = 0;
      if ($383 & 1) {
       $385 = ___cxa_find_matching_catch() | 0;
       $386 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($381);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($371);
       $eh$lpad$body$i104$index20Z2D = $386;
       $eh$lpad$body$i104$indexZ2D = $385;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $391 = $ss4 + 8 | 0;
      __THREW__ = 0;
      $392 = invoke_iiii(29, $391 | 0, 15902, 44) | 0;
      $393 = __THREW__;
      __THREW__ = 0;
      L229 : do if ($393 & 1) label = 132; else {
       HEAP8[$2 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
       __THREW__ = 0;
       $397 = invoke_iiii(29, $392 | 0, $2 | 0, 1) | 0;
       $398 = __THREW__;
       __THREW__ = 0;
       if ($398 & 1) label = 132; else {
        __THREW__ = 0;
        invoke_iiii(29, $397 | 0, 15825, 1) | 0;
        $400 = __THREW__;
        __THREW__ = 0;
        if ($400 & 1) label = 132; else {
         $402 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $13 | 0, $371 | 0);
         $403 = __THREW__;
         __THREW__ = 0;
         L233 : do if ($403 & 1) {
          $437 = ___cxa_find_matching_catch() | 0;
          $$7205 = $437;
          $$727204 = tempRet0;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $402 | 0, $filename | 0);
          $405 = __THREW__;
          __THREW__ = 0;
          do if ($405 & 1) $$03 = 1; else {
           $408 = $begin;
           $413 = HEAP32[$408 + 4 >> 2] | 0;
           $414 = $402 + 12 | 0;
           HEAP32[$414 >> 2] = HEAP32[$408 >> 2];
           HEAP32[$414 + 4 >> 2] = $413;
           $419 = $begin;
           $424 = HEAP32[$419 + 4 >> 2] | 0;
           $425 = $402 + 20 | 0;
           HEAP32[$425 >> 2] = HEAP32[$419 >> 2];
           HEAP32[$425 + 4 >> 2] = $424;
           __THREW__ = 0;
           invoke_vii(40, $402 + 28 | 0, $13 | 0);
           $430 = __THREW__;
           __THREW__ = 0;
           if ($430 & 1) {
            $432 = ___cxa_find_matching_catch() | 0;
            $433 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($402);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
            $$7205 = $432;
            $$727204 = $433;
            break L233;
           } else {
            __THREW__ = 0;
            invoke_viii(4, $402 | 0, 8, 172);
            __THREW__ = 0;
            $$03 = 0;
            break;
           }
          } while (0);
          $439 = ___cxa_find_matching_catch() | 0;
          $440 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
          if ($$03) {
           $$7205 = $439;
           $$727204 = $440;
          } else {
           $$8 = $439;
           $$828 = $440;
           break L229;
          }
         } while (0);
         ___cxa_free_exception($402 | 0);
         $$8 = $$7205;
         $$828 = $$727204;
        }
       }
      } while (0);
      if ((label | 0) == 132) {
       $435 = ___cxa_find_matching_catch() | 0;
       $$8 = $435;
       $$828 = tempRet0;
      }
      HEAP32[$ss4 >> 2] = 2892;
      HEAP32[$369 >> 2] = 2932;
      HEAP32[$391 >> 2] = 2912;
      HEAP32[$371 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($381);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($371);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($369);
      $$13 = $$8;
      $$1333 = $$828;
      break L153;
     } while (0);
     $$0$i107 = $eh$lpad$body$i104$index20Z2D;
     $$01$i106 = $eh$lpad$body$i104$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($369);
    $eh$lpad$body77$index6Z2D = $$0$i107;
    $eh$lpad$body77$indexZ2D = $$01$i106;
    label = 21;
    break;
   }
  case 145:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index25 = tempRet0;
    label = 147;
    break;
   }
  case 146:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index25 = tempRet0;
    label = 147;
    break;
   }
  case 183:
   {
    $526 = ___cxa_allocate_exception(40) | 0;
    __THREW__ = 0;
    invoke_viii(3, $14 | 0, 15947, 41);
    $527 = __THREW__;
    __THREW__ = 0;
    L157 : do if ($527 & 1) {
     $559 = ___cxa_find_matching_catch() | 0;
     $$9211 = $559;
     $$929210 = tempRet0;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $526 | 0, $filename | 0);
     $529 = __THREW__;
     __THREW__ = 0;
     do if ($529 & 1) $$01 = 1; else {
      $532 = $begin;
      $537 = HEAP32[$532 + 4 >> 2] | 0;
      $538 = $526 + 12 | 0;
      HEAP32[$538 >> 2] = HEAP32[$532 >> 2];
      HEAP32[$538 + 4 >> 2] = $537;
      $543 = $begin;
      $548 = HEAP32[$543 + 4 >> 2] | 0;
      $549 = $526 + 20 | 0;
      HEAP32[$549 >> 2] = HEAP32[$543 >> 2];
      HEAP32[$549 + 4 >> 2] = $548;
      __THREW__ = 0;
      invoke_vii(40, $526 + 28 | 0, $14 | 0);
      $554 = __THREW__;
      __THREW__ = 0;
      if ($554 & 1) {
       $556 = ___cxa_find_matching_catch() | 0;
       $557 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($526);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
       $$9211 = $556;
       $$929210 = $557;
       break L157;
      } else {
       __THREW__ = 0;
       invoke_viii(4, $526 | 0, 8, 172);
       __THREW__ = 0;
       $$01 = 0;
       break;
      }
     } while (0);
     $561 = ___cxa_find_matching_catch() | 0;
     $562 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
     if ($$01) {
      $$9211 = $561;
      $$929210 = $562;
     } else {
      $$13 = $561;
      $$1333 = $562;
      break L153;
     }
    } while (0);
    ___cxa_free_exception($526 | 0);
    $$13 = $$9211;
    $$1333 = $$929210;
    break;
   }
  case 196:
   {
    $574 = $ss6 + 64 | 0;
    $575 = $ss6 + 8 | 0;
    HEAP32[$575 >> 2] = 2912;
    $576 = $ss6 + 12 | 0;
    HEAP32[$ss6 >> 2] = 2952;
    HEAP32[$574 >> 2] = 2972;
    HEAP32[$ss6 + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss6 + 64 | 0, $576 | 0);
    $579 = __THREW__;
    __THREW__ = 0;
    if ($579 & 1) {
     $592 = ___cxa_find_matching_catch() | 0;
     $$0$i145 = tempRet0;
     $$01$i144 = $592;
    } else {
     HEAP32[$ss6 + 136 >> 2] = 0;
     HEAP32[$ss6 + 140 >> 2] = -1;
     HEAP32[$ss6 >> 2] = 2892;
     HEAP32[$ss6 + 64 >> 2] = 2932;
     HEAP32[$575 >> 2] = 2912;
     __THREW__ = 0;
     invoke_vi(173, $576 | 0);
     $584 = __THREW__;
     __THREW__ = 0;
     do if ($584 & 1) {
      $594 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i142$index30Z2D = tempRet0;
      $eh$lpad$body$i142$indexZ2D = $594;
     } else {
      HEAP32[$576 >> 2] = 2988;
      $586 = $ss6 + 44 | 0;
      HEAP32[$586 >> 2] = 0;
      HEAP32[$586 + 4 >> 2] = 0;
      HEAP32[$586 + 8 >> 2] = 0;
      HEAP32[$586 + 12 >> 2] = 0;
      HEAP32[$ss6 + 60 >> 2] = 24;
      HEAP32[$1 >> 2] = 0;
      HEAP32[$1 + 4 >> 2] = 0;
      HEAP32[$1 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $576 | 0, $1 | 0);
      $588 = __THREW__;
      __THREW__ = 0;
      if ($588 & 1) {
       $590 = ___cxa_find_matching_catch() | 0;
       $591 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($586);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($576);
       $eh$lpad$body$i142$index30Z2D = $591;
       $eh$lpad$body$i142$indexZ2D = $590;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $596 = $ss6 + 8 | 0;
      __THREW__ = 0;
      invoke_iiii(29, $596 | 0, 15989, 28) | 0;
      $597 = __THREW__;
      __THREW__ = 0;
      L178 : do if ($597 & 1) label = 208; else {
       __THREW__ = 0;
       if ((HEAP8[HEAP32[$c >> 2] >> 0] | 0) < 32) {
        $602 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($596, 16018, 5) | 0;
        $603 = __THREW__;
        __THREW__ = 0;
        if ($603 & 1) {
         label = 208;
         break;
        }
        __THREW__ = 0;
        invoke_iii(21, $602 | 0, HEAP8[HEAP32[$c >> 2] >> 0] | 0) | 0;
        $608 = __THREW__;
        __THREW__ = 0;
        if ($608 & 1) {
         label = 208;
         break;
        }
       } else {
        $612 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($596, 15825, 1) | 0;
        $613 = __THREW__;
        __THREW__ = 0;
        if ($613 & 1) {
         label = 208;
         break;
        }
        HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
        __THREW__ = 0;
        $617 = invoke_iiii(29, $612 | 0, $0 | 0, 1) | 0;
        $618 = __THREW__;
        __THREW__ = 0;
        if ($618 & 1) {
         label = 208;
         break;
        }
        __THREW__ = 0;
        invoke_iiii(29, $617 | 0, 15825, 1) | 0;
        $620 = __THREW__;
        __THREW__ = 0;
        if ($620 & 1) {
         label = 208;
         break;
        }
       }
       $622 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $15 | 0, $576 | 0);
       $623 = __THREW__;
       __THREW__ = 0;
       L187 : do if ($623 & 1) {
        $655 = ___cxa_find_matching_catch() | 0;
        $$10215 = $655;
        $$1030214 = tempRet0;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $622 | 0, $filename | 0);
        $625 = __THREW__;
        __THREW__ = 0;
        do if ($625 & 1) $$0 = 1; else {
         $628 = $begin;
         $633 = HEAP32[$628 + 4 >> 2] | 0;
         $634 = $622 + 12 | 0;
         HEAP32[$634 >> 2] = HEAP32[$628 >> 2];
         HEAP32[$634 + 4 >> 2] = $633;
         $639 = $begin;
         $644 = HEAP32[$639 + 4 >> 2] | 0;
         $645 = $622 + 20 | 0;
         HEAP32[$645 >> 2] = HEAP32[$639 >> 2];
         HEAP32[$645 + 4 >> 2] = $644;
         __THREW__ = 0;
         invoke_vii(40, $622 + 28 | 0, $15 | 0);
         $650 = __THREW__;
         __THREW__ = 0;
         if ($650 & 1) {
          $652 = ___cxa_find_matching_catch() | 0;
          $653 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($622);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
          $$10215 = $652;
          $$1030214 = $653;
          break L187;
         } else {
          __THREW__ = 0;
          invoke_viii(4, $622 | 0, 8, 172);
          __THREW__ = 0;
          $$0 = 0;
          break;
         }
        } while (0);
        $657 = ___cxa_find_matching_catch() | 0;
        $658 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
        if ($$0) {
         $$10215 = $657;
         $$1030214 = $658;
        } else {
         $$11 = $657;
         $$1131 = $658;
         break L178;
        }
       } while (0);
       ___cxa_free_exception($622 | 0);
       $$11 = $$10215;
       $$1131 = $$1030214;
      } while (0);
      if ((label | 0) == 208) {
       $610 = ___cxa_find_matching_catch() | 0;
       $$11 = $610;
       $$1131 = tempRet0;
      }
      HEAP32[$ss6 >> 2] = 2892;
      HEAP32[$574 >> 2] = 2932;
      HEAP32[$596 >> 2] = 2912;
      HEAP32[$576 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($586);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($576);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($574);
      $$13 = $$11;
      $$1333 = $$1131;
      break L153;
     } while (0);
     $$0$i145 = $eh$lpad$body$i142$index30Z2D;
     $$01$i144 = $eh$lpad$body$i142$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($574);
    $eh$lpad$body77$index6Z2D = $$0$i145;
    $eh$lpad$body77$indexZ2D = $$01$i144;
    label = 21;
    break;
   }
  case 224:
   {
    $684 = ___cxa_find_matching_catch() | 0;
    $685 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $eh$lpad$body168$index35Z2D = $685;
    $eh$lpad$body168$indexZ2D = $684;
    label = 229;
    break;
   }
  case 228:
   {
    $707 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body168$index35Z2D = tempRet0;
    $eh$lpad$body168$indexZ2D = $707;
    label = 229;
    break;
   }
  case 230:
   {
    $709 = ___cxa_find_matching_catch() | 0;
    $710 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($29);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
    $$1215 = $709;
    $$1232 = $710;
    label = 231;
    break;
   }
  case 233:
   {
    $717 = 0;
    $722 = $$lcssa442;
    $line_number$0$lcssa = $line_number$6$lcssa;
    label = 234;
    break L1;
    break;
   }
  }
  if ((label | 0) == 21) {
   $$13 = $eh$lpad$body77$indexZ2D;
   $$1333 = $eh$lpad$body77$index6Z2D;
  } else if ((label | 0) == 147) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($id);
   $$13 = $lpad$phi$index;
   $$1333 = $lpad$phi$index25;
  } else if ((label | 0) == 229) {
   $$1215 = $eh$lpad$body168$indexZ2D;
   $$1232 = $eh$lpad$body168$index35Z2D;
   label = 231;
  }
  if ((label | 0) == 231) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   $$13 = $$1215;
   $$1333 = $$1232;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($data);
  $$1617 = $$13;
  $$1636 = $$1333;
 } while (0);
 do if ((label | 0) == 234) {
  __THREW__ = 0;
  invoke_viii(3, $19 | 0, 62848, 0);
  $711 = __THREW__;
  __THREW__ = 0;
  if ($711 & 1) {
   $39 = ___cxa_find_matching_catch() | 0;
   $$1617 = $39;
   $$1636 = tempRet0;
   break;
  }
  __THREW__ = 0;
  invoke_vii(40, $20 | 0, $filename | 0);
  $713 = __THREW__;
  __THREW__ = 0;
  if ($713 & 1) {
   $751 = ___cxa_find_matching_catch() | 0;
   $$15 = $751;
   $$1535 = tempRet0;
  } else {
   $715 = $20 + 12 | 0;
   $716 = $717 | $line_number$0$lcssa;
   $718 = $715;
   HEAP32[$718 >> 2] = $716;
   HEAP32[$718 + 4 >> 2] = $722;
   $724 = $20 + 20 | 0;
   HEAP32[$724 >> 2] = $716;
   HEAP32[$724 + 4 >> 2] = $722;
   HEAP32[$18 >> 2] = 31;
   $728 = $18 + 4 | 0;
   __THREW__ = 0;
   invoke_vii(40, $728 | 0, $19 | 0);
   $729 = __THREW__;
   __THREW__ = 0;
   do if ($729 & 1) {
    $753 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body176$index40Z2D = tempRet0;
    $eh$lpad$body176$indexZ2D = $753;
    label = 243;
   } else {
    $731 = $18 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $731 | 0, $20 | 0);
    $732 = __THREW__;
    __THREW__ = 0;
    if ($732 & 1) {
     $734 = ___cxa_find_matching_catch() | 0;
     $735 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($728);
     $eh$lpad$body176$index40Z2D = $735;
     $eh$lpad$body176$indexZ2D = $734;
     label = 243;
     break;
    }
    $736 = $18 + 28 | 0;
    HEAP32[$736 >> 2] = HEAP32[$715 >> 2];
    HEAP32[$736 + 4 >> 2] = HEAP32[$715 + 4 >> 2];
    HEAP32[$736 + 8 >> 2] = HEAP32[$715 + 8 >> 2];
    HEAP32[$736 + 12 >> 2] = HEAP32[$715 + 12 >> 2];
    __THREW__ = 0;
    $737 = invoke_ii(67, 52) | 0;
    $738 = __THREW__;
    __THREW__ = 0;
    if ($738 & 1) {
     $755 = ___cxa_find_matching_catch() | 0;
     $756 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($731);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($728);
     $$1416 = $755;
     $$1434 = $756;
     break;
    } else {
     $741 = HEAP32[$18 >> 2] | 0;
     $742 = $737 + 12 | 0;
     HEAP32[$742 >> 2] = HEAP32[$728 >> 2];
     HEAP32[$742 + 4 >> 2] = HEAP32[$728 + 4 >> 2];
     HEAP32[$742 + 8 >> 2] = HEAP32[$728 + 8 >> 2];
     HEAP32[$728 >> 2] = 0;
     HEAP32[$728 + 4 >> 2] = 0;
     HEAP32[$728 + 8 >> 2] = 0;
     $743 = $737 + 24 | 0;
     $744 = $18 + 16 | 0;
     HEAP32[$743 >> 2] = HEAP32[$744 >> 2];
     HEAP32[$743 + 4 >> 2] = HEAP32[$744 + 4 >> 2];
     HEAP32[$743 + 8 >> 2] = HEAP32[$744 + 8 >> 2];
     HEAP32[$744 >> 2] = 0;
     HEAP32[$744 + 4 >> 2] = 0;
     HEAP32[$744 + 8 >> 2] = 0;
     $745 = $737 + 36 | 0;
     HEAP32[$745 >> 2] = HEAP32[$736 >> 2];
     HEAP32[$745 + 4 >> 2] = HEAP32[$736 + 4 >> 2];
     HEAP32[$745 + 8 >> 2] = HEAP32[$736 + 8 >> 2];
     HEAP32[$745 + 12 >> 2] = HEAP32[$736 + 12 >> 2];
     HEAP32[$737 + 8 >> 2] = $741;
     HEAP32[$737 + 4 >> 2] = $agg$result;
     $747 = HEAP32[$agg$result >> 2] | 0;
     HEAP32[$737 >> 2] = $747;
     HEAP32[$747 + 4 >> 2] = $737;
     HEAP32[$agg$result >> 2] = $737;
     HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($731);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($728);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 243) {
    $$1416 = $eh$lpad$body176$indexZ2D;
    $$1434 = $eh$lpad$body176$index40Z2D;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
   $$15 = $$1416;
   $$1535 = $$1434;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
  $$1617 = $$15;
  $$1636 = $$1535;
 } while (0);
 if (!(HEAP32[$22 >> 2] | 0)) ___resumeException($$1617 | 0);
 $759 = HEAP32[$21 >> 2] | 0;
 $761 = (HEAP32[$agg$result >> 2] | 0) + 4 | 0;
 $763 = HEAP32[$759 >> 2] | 0;
 HEAP32[$763 + 4 >> 2] = HEAP32[$761 >> 2];
 HEAP32[HEAP32[$761 >> 2] >> 2] = $763;
 HEAP32[$22 >> 2] = 0;
 if (($759 | 0) == ($agg$result | 0)) ___resumeException($$1617 | 0); else $__f$01$i$i = $759;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($agg$result | 0));
 ___resumeException($$1617 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_($agg$result, $this, $args, $args1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i11 = 0, $$0$i$i$i$i$i$i$i$i$i11$i = 0, $$0$i$i$i$i$i$i$i$i$i11$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i3$i$i = 0, $$0$i$i$i$i$i$i$i$i$i33 = 0, $$0$i$i$i$i$i$i$i$i$i33$i = 0, $$0$i$i$i$i$i$i$i$i13 = 0, $$0$i$i$i$i$i$i$i$i13$i = 0, $$0$i$i$i$i$i$i$i$i13$i$i$i = 0, $$0$i$i$i$i$i$i$i$i35$i = 0, $$0$i$i$i$i$i$i$i$i36 = 0, $$0$i$i$i$i$i$i27 = 0, $$0$i$i$i$i$i$i27$i = 0, $$0$i$i$i$i$i$i27$i$i$i = 0, $$0$i$i$i$i$i$i34 = 0, $$0$i$i$i$i$i$i34$i = 0, $$0$i$i$i$i$i$i4$i$i = 0, $$0$i$i$i$i$i29 = 0, $$0$i$i$i$i$i29$i = 0, $$0$i$i$i$i$i29$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$0$i$i$i$i1$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i24 = 0, $$0$i$i$i$i1$i$i24$i = 0, $$0$i$i$i$i1$i$i24$i$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i16 = 0, $$01$i$i$i$i$i$i$i$i16$i = 0, $$01$i$i$i$i$i$i$i$i16$i$i$i = 0, $$01$i$i$i$i$i$i$i$i40 = 0, $$01$i$i$i$i$i32 = 0, $$01$i$i$i$i$i32$i = 0, $$01$i$i$i$i$i32$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i$pre$i$i$i$i = 0, $$idx$val2$i$i = 0, $$idx$val2$i$i$i = 0, $$idx$val2$i$i$i$i = 0, $$idx$val2$i$i$i$i$i = 0, $$idx$val2$i$i4 = 0, $$idx$val2$i$i4$i = 0, $$idx$val2$i$i4$i$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i22 = 0, $$idx2$val$i22$i$i$i$i$i$i22$i = 0, $$idx2$val$i22$i$i$i$i$i$i22$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val19$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$lcssa$i$i = 0, $$lcssa244 = 0, $$lcssa245 = 0, $$lcssa248 = 0, $$lcssa249 = 0, $$lcssa252 = 0, $$lcssa253 = 0, $$lcssa256 = 0, $$lcssa257 = 0, $$lcssa260 = 0, $$lcssa261 = 0, $$lcssa264 = 0, $$lcssa265 = 0, $$lcssa268 = 0, $$lcssa269 = 0, $$pre$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i9 = 0, $$pre$i$i$i$i$i$i9$i = 0, $$pre$i$i$i$i$i$i9$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $109 = 0, $11 = 0, $112 = 0, $114 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $124 = 0, $128 = 0, $132 = 0, $137 = 0, $138 = 0, $140 = 0, $143 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $152 = 0, $153 = 0, $156 = 0, $158 = 0, $160 = 0, $163 = 0, $164 = 0, $168 = 0, $17 = 0, $170 = 0, $172 = 0, $175 = 0, $183 = 0, $186 = 0, $188 = 0, $19 = 0, $190 = 0, $191 = 0, $193 = 0, $194 = 0, $195 = 0, $198 = 0, $2 = 0, $202 = 0, $206 = 0, $211 = 0, $212 = 0, $214 = 0, $217 = 0, $22 = 0, $221 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $232 = 0, $233 = 0, $234 = 0, $236 = 0, $238 = 0, $241 = 0, $249 = 0, $252 = 0, $254 = 0, $256 = 0, $257 = 0, $259 = 0, $260 = 0, $261 = 0, $264 = 0, $268 = 0, $27 = 0, $272 = 0, $277 = 0, $278 = 0, $280 = 0, $283 = 0, $287 = 0, $288 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $294 = 0, $295 = 0, $296 = 0, $298 = 0, $299 = 0, $3 = 0, $300 = 0, $302 = 0, $304 = 0, $307 = 0, $31 = 0, $315 = 0, $318 = 0, $320 = 0, $322 = 0, $323 = 0, $325 = 0, $326 = 0, $327 = 0, $330 = 0, $334 = 0, $338 = 0, $34 = 0, $343 = 0, $344 = 0, $346 = 0, $349 = 0, $353 = 0, $354 = 0, $355 = 0, $357 = 0, $358 = 0, $359 = 0, $362 = 0, $364 = 0, $366 = 0, $369 = 0, $370 = 0, $374 = 0, $376 = 0, $378 = 0, $381 = 0, $389 = 0, $392 = 0, $394 = 0, $396 = 0, $397 = 0, $399 = 0, $4 = 0, $400 = 0, $401 = 0, $404 = 0, $408 = 0, $412 = 0, $417 = 0, $418 = 0, $42 = 0, $420 = 0, $423 = 0, $427 = 0, $428 = 0, $429 = 0, $431 = 0, $432 = 0, $433 = 0, $435 = 0, $436 = 0, $437 = 0, $439 = 0, $441 = 0, $444 = 0, $45 = 0, $452 = 0, $455 = 0, $457 = 0, $459 = 0, $460 = 0, $462 = 0, $463 = 0, $464 = 0, $467 = 0, $47 = 0, $471 = 0, $475 = 0, $480 = 0, $481 = 0, $483 = 0, $486 = 0, $49 = 0, $490 = 0, $491 = 0, $493 = 0, $494 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $506 = 0, $508 = 0, $511 = 0, $513 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $523 = 0, $525 = 0, $527 = 0, $529 = 0, $53 = 0, $530 = 0, $533 = 0, $534 = 0, $537 = 0, $538 = 0, $54 = 0, $541 = 0, $544 = 0, $546 = 0, $548 = 0, $549 = 0, $552 = 0, $559 = 0, $562 = 0, $568 = 0, $57 = 0, $573 = 0, $576 = 0, $584 = 0, $587 = 0, $590 = 0, $594 = 0, $6 = 0, $603 = 0, $608 = 0, $61 = 0, $610 = 0, $614 = 0, $616 = 0, $617 = 0, $619 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $629 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $640 = 0, $641 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $76 = 0, $8 = 0, $80 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, $96 = 0, $98 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa246 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa247 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa250 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa251 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa258 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa259 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa266 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa267 = 0, $__nd$0$i20$i$i$i$i$in$i$i20 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa242 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa243 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa254 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa255 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i20$lcssa262 = 0, $__nd$0$i20$i$i$i$i$in$i$i20$lcssa263 = 0, $__parent$sroa$0$i$i$i$i$i2$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i$i = 0, $__v$idx14$val$i$i$i$i$i$i$i$i$i = 0, $eh$lpad$body39$i$index2Z2D = 0, $eh$lpad$body39$i$indexZ2D = 0, $eh$lpad$body43$index8Z2D = 0, $eh$lpad$body43$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$sroa$0$i$i$i$i$i2$i$i$i = sp + 60 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 36 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 12 | 0;
 $4 = sp;
 HEAP32[$agg$result >> 2] = 18;
 $5 = $3 + 4 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $3 + 8 | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $3 + 4 | 0;
 HEAP32[$3 >> 2] = $7;
 $$idx$val2$i$i = HEAP32[$args >> 2] | 0;
 $8 = $args + 4 | 0;
 L1 : do if (($$idx$val2$i$i | 0) != ($8 | 0)) {
  $10 = $7;
  $15 = $$idx$val2$i$i;
  $633 = $$idx$val2$i$i;
  while (1) {
   __THREW__ = 0;
   $11 = invoke_ii(67, 24) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) break;
   $17 = $15 + 16 | 0;
   $19 = HEAP32[$17 >> 2] | 0;
   $22 = HEAP32[$17 + 4 >> 2] | 0;
   $23 = $11 + 16 | 0;
   HEAP32[$23 >> 2] = $19;
   HEAP32[$23 + 4 >> 2] = $22;
   $27 = $19;
   $$pre$i$i$i$i$i$i = HEAP32[$7 >> 2] | 0;
   do if ((HEAP32[$3 >> 2] | 0) == ($7 | 0)) {
    $42 = $10;
    label = 9;
   } else {
    $29 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($29) {
     $$0$i$i$i$i$i$i$i$i = $7;
     while (1) {
      $34 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$34 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $34; else {
       $$01$i$i$i$i$i$i$i$i = $34;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $31 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$31) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $31;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $27 >>> 0) {
     $42 = $$01$i$i$i$i$i$i$i$i;
     label = 9;
    } else {
     if ($29) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $10;
      $$0$i$i$i$i1$i$i = $7;
      $57 = $10;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $27 >>> 0) {
       $45 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$45) {
        $$lcssa269 = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa267 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 15;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i = $45;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $27 >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 19;
       break;
      }
      $49 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
      $50 = HEAP32[$49 >> 2] | 0;
      if (!$50) {
       $$lcssa268 = $49;
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa266 = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 18;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i = $50;
     }
     if ((label | 0) == 15) {
      label = 0;
      $47 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa267;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $47;
      $$0$i$i$i$i1$i$i = $$lcssa269;
      $57 = $47;
      break;
     } else if ((label | 0) == 18) {
      label = 0;
      $52 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa266;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $52;
      $$0$i$i$i$i1$i$i = $$lcssa268;
      $57 = $52;
      break;
     } else if ((label | 0) == 19) {
      label = 0;
      $53 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $53;
      $$0$i$i$i$i1$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
      $57 = $53;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 9) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $10;
     $$0$i$i$i$i1$i$i = $7;
     $57 = $10;
     break;
    } else {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $42;
     $$0$i$i$i$i1$i$i = $42 + 4 | 0;
     $57 = $42;
     break;
    }
   } while (0);
   $54 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$54) {
    HEAP32[$11 >> 2] = 0;
    HEAP32[$11 + 4 >> 2] = 0;
    HEAP32[$11 + 8 >> 2] = $57;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $11;
    $61 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
    if (!$61) $65 = $11; else {
     HEAP32[$3 >> 2] = $61;
     $65 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$5 >> 2] | 0, $65);
    HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
    $70 = $15;
   } else if (($54 | 0) == ($11 | 0)) $70 = $633; else {
    __ZdlPv($11);
    $70 = $633;
   }
   $71 = HEAP32[$70 + 4 >> 2] | 0;
   if (!$71) {
    $$0$i$i$i$i$i = $70;
    while (1) {
     $76 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$76 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $76;
      break;
     } else $$0$i$i$i$i$i = $76;
    }
   } else {
    $$0$i$i$i$i$i$i = $71;
    while (1) {
     $73 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$73) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $73;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($8 | 0)) break L1; else {
    $15 = $$01$i$i$i$i$i;
    $633 = $$01$i$i$i$i$i;
   }
  }
  $80 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$7 >> 2] | 0);
  ___resumeException($80 | 0);
 } while (0);
 $83 = $4 + 4 | 0;
 HEAP32[$83 >> 2] = 0;
 $84 = $4 + 8 | 0;
 HEAP32[$84 >> 2] = 0;
 $85 = $4 + 4 | 0;
 HEAP32[$4 >> 2] = $85;
 $$idx$val2$i$i4 = HEAP32[$args1 >> 2] | 0;
 $86 = $args1 + 4 | 0;
 L49 : do if (($$idx$val2$i$i4 | 0) != ($86 | 0)) {
  $88 = $85;
  $634 = $$idx$val2$i$i4;
  $93 = $$idx$val2$i$i4;
  while (1) {
   __THREW__ = 0;
   $89 = invoke_ii(67, 28) | 0;
   $90 = __THREW__;
   __THREW__ = 0;
   if ($90 & 1) break;
   $92 = $93 + 16 | 0;
   $94 = $89 + 16 | 0;
   HEAP32[$94 >> 2] = HEAP32[$92 >> 2];
   HEAP32[$94 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
   HEAP32[$94 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
   $$pre$i$i$i$i$i$i9 = HEAP32[$85 >> 2] | 0;
   do if ((HEAP32[$4 >> 2] | 0) == ($85 | 0)) {
    $109 = $88;
    label = 40;
   } else {
    $96 = ($$pre$i$i$i$i$i$i9 | 0) == 0;
    if ($96) {
     $$0$i$i$i$i$i$i$i$i13 = $85;
     while (1) {
      $101 = HEAP32[$$0$i$i$i$i$i$i$i$i13 + 8 >> 2] | 0;
      if ((HEAP32[$101 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13 | 0)) $$0$i$i$i$i$i$i$i$i13 = $101; else {
       $$01$i$i$i$i$i$i$i$i16 = $101;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i11 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $98 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11 + 4 >> 2] | 0;
      if (!$98) {
       $$01$i$i$i$i$i$i$i$i16 = $$0$i$i$i$i$i$i$i$i$i11;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i11 = $98;
     }
    }
    $__v$idx14$val$i$i$i$i$i$i = HEAP32[$94 >> 2] | 0;
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i16 + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i >>> 0) {
     $109 = $$01$i$i$i$i$i$i$i$i16;
     label = 40;
    } else {
     if ($96) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $88;
      $$0$i$i$i$i1$i$i24 = $85;
      $124 = $88;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i20 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i22 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20 + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i22 >>> 0 > $__v$idx14$val$i$i$i$i$i$i >>> 0) {
       $112 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20 >> 2] | 0;
       if (!$112) {
        $$lcssa265 = $__nd$0$i20$i$i$i$i$in$i$i20;
        $__nd$0$i20$i$i$i$i$in$i$i20$lcssa263 = $__nd$0$i20$i$i$i$i$in$i$i20;
        label = 46;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i20 = $112;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i22 >>> 0 >= $__v$idx14$val$i$i$i$i$i$i >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i20$lcssa = $__nd$0$i20$i$i$i$i$in$i$i20;
       label = 50;
       break;
      }
      $116 = $__nd$0$i20$i$i$i$i$in$i$i20 + 4 | 0;
      $117 = HEAP32[$116 >> 2] | 0;
      if (!$117) {
       $$lcssa264 = $116;
       $__nd$0$i20$i$i$i$i$in$i$i20$lcssa262 = $__nd$0$i20$i$i$i$i$in$i$i20;
       label = 49;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i20 = $117;
     }
     if ((label | 0) == 46) {
      label = 0;
      $114 = $__nd$0$i20$i$i$i$i$in$i$i20$lcssa263;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $114;
      $$0$i$i$i$i1$i$i24 = $$lcssa265;
      $124 = $114;
      break;
     } else if ((label | 0) == 49) {
      label = 0;
      $119 = $__nd$0$i20$i$i$i$i$in$i$i20$lcssa262;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $119;
      $$0$i$i$i$i1$i$i24 = $$lcssa264;
      $124 = $119;
      break;
     } else if ((label | 0) == 50) {
      label = 0;
      $120 = $__nd$0$i20$i$i$i$i$in$i$i20$lcssa;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $120;
      $$0$i$i$i$i1$i$i24 = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
      $124 = $120;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 40) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i9) {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $88;
     $$0$i$i$i$i1$i$i24 = $85;
     $124 = $88;
     break;
    } else {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $109;
     $$0$i$i$i$i1$i$i24 = $109 + 4 | 0;
     $124 = $109;
     break;
    }
   } while (0);
   $121 = HEAP32[$$0$i$i$i$i1$i$i24 >> 2] | 0;
   if (!$121) {
    HEAP32[$89 >> 2] = 0;
    HEAP32[$89 + 4 >> 2] = 0;
    HEAP32[$89 + 8 >> 2] = $124;
    HEAP32[$$0$i$i$i$i1$i$i24 >> 2] = $89;
    $128 = HEAP32[HEAP32[$4 >> 2] >> 2] | 0;
    if (!$128) $132 = $89; else {
     HEAP32[$4 >> 2] = $128;
     $132 = HEAP32[$$0$i$i$i$i1$i$i24 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$83 >> 2] | 0, $132);
    HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
    $137 = $93;
   } else if (($121 | 0) == ($89 | 0)) $137 = $634; else {
    __ZdlPv($89);
    $137 = $634;
   }
   $138 = HEAP32[$137 + 4 >> 2] | 0;
   if (!$138) {
    $$0$i$i$i$i$i29 = $137;
    while (1) {
     $143 = HEAP32[$$0$i$i$i$i$i29 + 8 >> 2] | 0;
     if ((HEAP32[$143 >> 2] | 0) == ($$0$i$i$i$i$i29 | 0)) {
      $$01$i$i$i$i$i32 = $143;
      break;
     } else $$0$i$i$i$i$i29 = $143;
    }
   } else {
    $$0$i$i$i$i$i$i27 = $138;
    while (1) {
     $140 = HEAP32[$$0$i$i$i$i$i$i27 >> 2] | 0;
     if (!$140) {
      $$01$i$i$i$i$i32 = $$0$i$i$i$i$i$i27;
      break;
     } else $$0$i$i$i$i$i$i27 = $140;
    }
   }
   if (($$01$i$i$i$i$i32 | 0) == ($86 | 0)) break L49; else {
    $634 = $$01$i$i$i$i$i32;
    $93 = $$01$i$i$i$i$i32;
   }
  }
  $626 = ___cxa_find_matching_catch() | 0;
  $627 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, HEAP32[$85 >> 2] | 0);
  $$0 = $627;
  $$01 = $626;
  $632 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $632);
  ___resumeException($$01 | 0);
 } while (0);
 $147 = $1 + 4 | 0;
 HEAP32[$147 >> 2] = 0;
 $148 = $1 + 8 | 0;
 HEAP32[$148 >> 2] = 0;
 $149 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $149;
 $$idx$val2$i$i$i = HEAP32[$3 >> 2] | 0;
 L98 : do if (($$idx$val2$i$i$i | 0) == ($7 | 0)) label = 93; else {
  $151 = $149;
  $156 = $$idx$val2$i$i$i;
  $635 = $$idx$val2$i$i$i;
  while (1) {
   __THREW__ = 0;
   $152 = invoke_ii(67, 24) | 0;
   $153 = __THREW__;
   __THREW__ = 0;
   if ($153 & 1) break;
   $158 = $156 + 16 | 0;
   $160 = HEAP32[$158 >> 2] | 0;
   $163 = HEAP32[$158 + 4 >> 2] | 0;
   $164 = $152 + 16 | 0;
   HEAP32[$164 >> 2] = $160;
   HEAP32[$164 + 4 >> 2] = $163;
   $168 = $160;
   $$pre$i$i$i$i$i$i$i = HEAP32[$149 >> 2] | 0;
   do if ((HEAP32[$1 >> 2] | 0) == ($149 | 0)) {
    $183 = $151;
    label = 70;
   } else {
    $170 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
    if ($170) {
     $$0$i$i$i$i$i$i$i$i$i33 = $149;
     while (1) {
      $175 = HEAP32[$$0$i$i$i$i$i$i$i$i$i33 + 8 >> 2] | 0;
      if ((HEAP32[$175 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i33 | 0)) $$0$i$i$i$i$i$i$i$i$i33 = $175; else {
       $$01$i$i$i$i$i$i$i$i$i = $175;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $172 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$172) {
       $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i = $172;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $168 >>> 0) {
     $183 = $$01$i$i$i$i$i$i$i$i$i;
     label = 70;
    } else {
     if ($170) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $151;
      $$0$i$i$i$i1$i$i$i = $149;
      $198 = $151;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 > $168 >>> 0) {
       $186 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i >> 2] | 0;
       if (!$186) {
        $$lcssa261 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa259 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 76;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i$i = $186;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 >= $168 >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i;
       label = 80;
       break;
      }
      $190 = $__nd$0$i20$i$i$i$i$in$i$i$i + 4 | 0;
      $191 = HEAP32[$190 >> 2] | 0;
      if (!$191) {
       $$lcssa260 = $190;
       $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa258 = $__nd$0$i20$i$i$i$i$in$i$i$i;
       label = 79;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i$i = $191;
     }
     if ((label | 0) == 76) {
      label = 0;
      $188 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa259;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $188;
      $$0$i$i$i$i1$i$i$i = $$lcssa261;
      $198 = $188;
      break;
     } else if ((label | 0) == 79) {
      label = 0;
      $193 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa258;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $193;
      $$0$i$i$i$i1$i$i$i = $$lcssa260;
      $198 = $193;
      break;
     } else if ((label | 0) == 80) {
      label = 0;
      $194 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $194;
      $$0$i$i$i$i1$i$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
      $198 = $194;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 70) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i) {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $151;
     $$0$i$i$i$i1$i$i$i = $149;
     $198 = $151;
     break;
    } else {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $183;
     $$0$i$i$i$i1$i$i$i = $183 + 4 | 0;
     $198 = $183;
     break;
    }
   } while (0);
   $195 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
   if (!$195) {
    HEAP32[$152 >> 2] = 0;
    HEAP32[$152 + 4 >> 2] = 0;
    HEAP32[$152 + 8 >> 2] = $198;
    HEAP32[$$0$i$i$i$i1$i$i$i >> 2] = $152;
    $202 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
    if (!$202) $206 = $152; else {
     HEAP32[$1 >> 2] = $202;
     $206 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$147 >> 2] | 0, $206);
    HEAP32[$148 >> 2] = (HEAP32[$148 >> 2] | 0) + 1;
    $211 = $156;
   } else if (($195 | 0) == ($152 | 0)) $211 = $635; else {
    __ZdlPv($152);
    $211 = $635;
   }
   $212 = HEAP32[$211 + 4 >> 2] | 0;
   if (!$212) {
    $$0$i$i$i$i$i$i34 = $211;
    while (1) {
     $217 = HEAP32[$$0$i$i$i$i$i$i34 + 8 >> 2] | 0;
     if ((HEAP32[$217 >> 2] | 0) == ($$0$i$i$i$i$i$i34 | 0)) {
      $$01$i$i$i$i$i$i = $217;
      break;
     } else $$0$i$i$i$i$i$i34 = $217;
    }
   } else {
    $$0$i$i$i$i$i$i$i = $212;
    while (1) {
     $214 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
     if (!$214) {
      $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i = $214;
    }
   }
   if (($$01$i$i$i$i$i$i | 0) == ($7 | 0)) {
    label = 93;
    break L98;
   } else {
    $156 = $$01$i$i$i$i$i$i;
    $635 = $$01$i$i$i$i$i$i;
   }
  }
  $221 = ___cxa_find_matching_catch() | 0;
  $222 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$149 >> 2] | 0);
  $eh$lpad$body43$index8Z2D = $222;
  $eh$lpad$body43$indexZ2D = $221;
 } while (0);
 L145 : do if ((label | 0) == 93) {
  $224 = $2 + 4 | 0;
  HEAP32[$224 >> 2] = 0;
  $225 = $2 + 8 | 0;
  HEAP32[$225 >> 2] = 0;
  $226 = $2 + 4 | 0;
  HEAP32[$2 >> 2] = $226;
  $$idx$val2$i$i4$i = HEAP32[$4 >> 2] | 0;
  L147 : do if (($$idx$val2$i$i4$i | 0) == ($85 | 0)) label = 123; else {
   $228 = $226;
   $233 = $$idx$val2$i$i4$i;
   $636 = $$idx$val2$i$i4$i;
   while (1) {
    __THREW__ = 0;
    $229 = invoke_ii(67, 28) | 0;
    $230 = __THREW__;
    __THREW__ = 0;
    if ($230 & 1) break;
    $232 = $233 + 16 | 0;
    $234 = $229 + 16 | 0;
    HEAP32[$234 >> 2] = HEAP32[$232 >> 2];
    HEAP32[$234 + 4 >> 2] = HEAP32[$232 + 4 >> 2];
    HEAP32[$234 + 8 >> 2] = HEAP32[$232 + 8 >> 2];
    $$pre$i$i$i$i$i$i9$i = HEAP32[$226 >> 2] | 0;
    do if ((HEAP32[$2 >> 2] | 0) == ($226 | 0)) {
     $249 = $228;
     label = 101;
    } else {
     $236 = ($$pre$i$i$i$i$i$i9$i | 0) == 0;
     if ($236) {
      $$0$i$i$i$i$i$i$i$i13$i = $226;
      while (1) {
       $241 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i + 8 >> 2] | 0;
       if ((HEAP32[$241 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i | 0)) $$0$i$i$i$i$i$i$i$i13$i = $241; else {
        $$01$i$i$i$i$i$i$i$i16$i = $241;
        break;
       }
      }
     } else {
      $$0$i$i$i$i$i$i$i$i$i11$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $238 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i + 4 >> 2] | 0;
       if (!$238) {
        $$01$i$i$i$i$i$i$i$i16$i = $$0$i$i$i$i$i$i$i$i$i11$i;
        break;
       } else $$0$i$i$i$i$i$i$i$i$i11$i = $238;
      }
     }
     $__v$idx14$val$i$i$i$i$i$i$i = HEAP32[$234 >> 2] | 0;
     if ((HEAP32[$$01$i$i$i$i$i$i$i$i16$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
      $249 = $$01$i$i$i$i$i$i$i$i16$i;
      label = 101;
     } else {
      if ($236) {
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $228;
       $$0$i$i$i$i1$i$i24$i = $226;
       $264 = $228;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i20$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $$idx2$val$i22$i$i$i$i$i$i22$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i + 16 >> 2] | 0;
       if ($$idx2$val$i22$i$i$i$i$i$i22$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
        $252 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i >> 2] | 0;
        if (!$252) {
         $$lcssa257 = $__nd$0$i20$i$i$i$i$in$i$i20$i;
         $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa255 = $__nd$0$i20$i$i$i$i$in$i$i20$i;
         label = 107;
         break;
        } else {
         $__nd$0$i20$i$i$i$i$in$i$i20$i = $252;
         continue;
        }
       }
       if ($$idx2$val$i22$i$i$i$i$i$i22$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i20$i;
        label = 111;
        break;
       }
       $256 = $__nd$0$i20$i$i$i$i$in$i$i20$i + 4 | 0;
       $257 = HEAP32[$256 >> 2] | 0;
       if (!$257) {
        $$lcssa256 = $256;
        $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa254 = $__nd$0$i20$i$i$i$i$in$i$i20$i;
        label = 110;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i20$i = $257;
      }
      if ((label | 0) == 107) {
       label = 0;
       $254 = $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa255;
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $254;
       $$0$i$i$i$i1$i$i24$i = $$lcssa257;
       $264 = $254;
       break;
      } else if ((label | 0) == 110) {
       label = 0;
       $259 = $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa254;
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $259;
       $$0$i$i$i$i1$i$i24$i = $$lcssa256;
       $264 = $259;
       break;
      } else if ((label | 0) == 111) {
       label = 0;
       $260 = $__nd$0$i20$i$i$i$i$in$i$i20$i$lcssa;
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $260;
       $$0$i$i$i$i1$i$i24$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
       $264 = $260;
       break;
      }
     }
    } while (0);
    do if ((label | 0) == 101) {
     label = 0;
     if (!$$pre$i$i$i$i$i$i9$i) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $228;
      $$0$i$i$i$i1$i$i24$i = $226;
      $264 = $228;
      break;
     } else {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $249;
      $$0$i$i$i$i1$i$i24$i = $249 + 4 | 0;
      $264 = $249;
      break;
     }
    } while (0);
    $261 = HEAP32[$$0$i$i$i$i1$i$i24$i >> 2] | 0;
    if (!$261) {
     HEAP32[$229 >> 2] = 0;
     HEAP32[$229 + 4 >> 2] = 0;
     HEAP32[$229 + 8 >> 2] = $264;
     HEAP32[$$0$i$i$i$i1$i$i24$i >> 2] = $229;
     $268 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
     if (!$268) $272 = $229; else {
      HEAP32[$2 >> 2] = $268;
      $272 = HEAP32[$$0$i$i$i$i1$i$i24$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$224 >> 2] | 0, $272);
     HEAP32[$225 >> 2] = (HEAP32[$225 >> 2] | 0) + 1;
     $277 = $233;
    } else if (($261 | 0) == ($229 | 0)) $277 = $636; else {
     __ZdlPv($229);
     $277 = $636;
    }
    $278 = HEAP32[$277 + 4 >> 2] | 0;
    if (!$278) {
     $$0$i$i$i$i$i29$i = $277;
     while (1) {
      $283 = HEAP32[$$0$i$i$i$i$i29$i + 8 >> 2] | 0;
      if ((HEAP32[$283 >> 2] | 0) == ($$0$i$i$i$i$i29$i | 0)) {
       $$01$i$i$i$i$i32$i = $283;
       break;
      } else $$0$i$i$i$i$i29$i = $283;
     }
    } else {
     $$0$i$i$i$i$i$i27$i = $278;
     while (1) {
      $280 = HEAP32[$$0$i$i$i$i$i$i27$i >> 2] | 0;
      if (!$280) {
       $$01$i$i$i$i$i32$i = $$0$i$i$i$i$i$i27$i;
       break;
      } else $$0$i$i$i$i$i$i27$i = $280;
     }
    }
    if (($$01$i$i$i$i$i32$i | 0) == ($85 | 0)) {
     label = 123;
     break L147;
    } else {
     $233 = $$01$i$i$i$i$i32$i;
     $636 = $$01$i$i$i$i$i32$i;
    }
   }
   $616 = ___cxa_find_matching_catch() | 0;
   $617 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$226 >> 2] | 0);
   $$0$i = $617;
   $$01$i = $616;
  } while (0);
  if ((label | 0) == 123) {
   __THREW__ = 0;
   $287 = invoke_ii(67, 32) | 0;
   $288 = __THREW__;
   __THREW__ = 0;
   L196 : do if ($288 & 1) label = 248; else {
    $290 = $0 + 4 | 0;
    HEAP32[$290 >> 2] = 0;
    $291 = $0 + 8 | 0;
    HEAP32[$291 >> 2] = 0;
    $292 = $0 + 4 | 0;
    HEAP32[$0 >> 2] = $292;
    $$idx$val2$i$i$i$i = HEAP32[$2 >> 2] | 0;
    L198 : do if (($$idx$val2$i$i$i$i | 0) == ($226 | 0)) label = 154; else {
     $294 = $292;
     $299 = $$idx$val2$i$i$i$i;
     $637 = $$idx$val2$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $295 = invoke_ii(67, 28) | 0;
      $296 = __THREW__;
      __THREW__ = 0;
      if ($296 & 1) break;
      $298 = $299 + 16 | 0;
      $300 = $295 + 16 | 0;
      HEAP32[$300 >> 2] = HEAP32[$298 >> 2];
      HEAP32[$300 + 4 >> 2] = HEAP32[$298 + 4 >> 2];
      HEAP32[$300 + 8 >> 2] = HEAP32[$298 + 8 >> 2];
      $$pre$i$i$i$i$i$i$i$i = HEAP32[$292 >> 2] | 0;
      do if ((HEAP32[$0 >> 2] | 0) == ($292 | 0)) {
       $315 = $294;
       label = 132;
      } else {
       $302 = ($$pre$i$i$i$i$i$i$i$i | 0) == 0;
       if ($302) {
        $$0$i$i$i$i$i$i$i$i$i33$i = $292;
        while (1) {
         $307 = HEAP32[$$0$i$i$i$i$i$i$i$i$i33$i + 8 >> 2] | 0;
         if ((HEAP32[$307 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i33$i | 0)) $$0$i$i$i$i$i$i$i$i$i33$i = $307; else {
          $$01$i$i$i$i$i$i$i$i$i$i = $307;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $304 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$304) {
          $$01$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i = $304;
        }
       }
       $__v$idx14$val$i$i$i$i$i$i$i$i = HEAP32[$300 >> 2] | 0;
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
        $315 = $$01$i$i$i$i$i$i$i$i$i$i;
        label = 132;
       } else {
        if ($302) {
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $294;
         $$0$i$i$i$i1$i$i$i$i = $292;
         $330 = $294;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i$i$i = $$pre$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
          $318 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i >> 2] | 0;
          if (!$318) {
           $$lcssa253 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa251 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
           label = 138;
           break;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i = $318;
           continue;
          }
         }
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i >>> 0) {
          $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
          label = 142;
          break;
         }
         $322 = $__nd$0$i20$i$i$i$i$in$i$i$i$i + 4 | 0;
         $323 = HEAP32[$322 >> 2] | 0;
         if (!$323) {
          $$lcssa252 = $322;
          $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa250 = $__nd$0$i20$i$i$i$i$in$i$i$i$i;
          label = 141;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i$i$i = $323;
        }
        if ((label | 0) == 138) {
         label = 0;
         $320 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa251;
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $320;
         $$0$i$i$i$i1$i$i$i$i = $$lcssa253;
         $330 = $320;
         break;
        } else if ((label | 0) == 141) {
         label = 0;
         $325 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa250;
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $325;
         $$0$i$i$i$i1$i$i$i$i = $$lcssa252;
         $330 = $325;
         break;
        } else if ((label | 0) == 142) {
         label = 0;
         $326 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$lcssa;
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $326;
         $$0$i$i$i$i1$i$i$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
         $330 = $326;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 132) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i) {
        HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $294;
        $$0$i$i$i$i1$i$i$i$i = $292;
        $330 = $294;
        break;
       } else {
        HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $315;
        $$0$i$i$i$i1$i$i$i$i = $315 + 4 | 0;
        $330 = $315;
        break;
       }
      } while (0);
      $327 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
      if (!$327) {
       HEAP32[$295 >> 2] = 0;
       HEAP32[$295 + 4 >> 2] = 0;
       HEAP32[$295 + 8 >> 2] = $330;
       HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] = $295;
       $334 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
       if (!$334) $338 = $295; else {
        HEAP32[$0 >> 2] = $334;
        $338 = HEAP32[$$0$i$i$i$i1$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$290 >> 2] | 0, $338);
       HEAP32[$291 >> 2] = (HEAP32[$291 >> 2] | 0) + 1;
       $343 = $299;
      } else if (($327 | 0) == ($295 | 0)) $343 = $637; else {
       __ZdlPv($295);
       $343 = $637;
      }
      $344 = HEAP32[$343 + 4 >> 2] | 0;
      if (!$344) {
       $$0$i$i$i$i$i$i34$i = $343;
       while (1) {
        $349 = HEAP32[$$0$i$i$i$i$i$i34$i + 8 >> 2] | 0;
        if ((HEAP32[$349 >> 2] | 0) == ($$0$i$i$i$i$i$i34$i | 0)) {
         $$01$i$i$i$i$i$i$i = $349;
         break;
        } else $$0$i$i$i$i$i$i34$i = $349;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i36 = $344;
       while (1) {
        $346 = HEAP32[$$0$i$i$i$i$i$i$i$i36 >> 2] | 0;
        if (!$346) {
         $$01$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i36;
         break;
        } else $$0$i$i$i$i$i$i$i$i36 = $346;
       }
      }
      if (($$01$i$i$i$i$i$i$i | 0) == ($226 | 0)) {
       label = 154;
       break L198;
      } else {
       $299 = $$01$i$i$i$i$i$i$i;
       $637 = $$01$i$i$i$i$i$i$i;
      }
     }
     $548 = ___cxa_find_matching_catch() | 0;
     $549 = tempRet0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$292 >> 2] | 0);
     $$0$i$i = $549;
     $$01$i$i = $548;
    } while (0);
    if ((label | 0) == 154) {
     HEAP32[$287 >> 2] = 3656;
     $353 = $287 + 8 | 0;
     $354 = $287 + 12 | 0;
     HEAP32[$354 >> 2] = 0;
     $355 = $287 + 16 | 0;
     HEAP32[$355 >> 2] = 0;
     HEAP32[$353 >> 2] = $354;
     $$idx$val2$i$i$i$i$i = HEAP32[$1 >> 2] | 0;
     L247 : do if (($$idx$val2$i$i$i$i$i | 0) == ($149 | 0)) label = 184; else {
      $357 = $354;
      $362 = $$idx$val2$i$i$i$i$i;
      $638 = $$idx$val2$i$i$i$i$i;
      while (1) {
       __THREW__ = 0;
       $358 = invoke_ii(67, 24) | 0;
       $359 = __THREW__;
       __THREW__ = 0;
       if ($359 & 1) break;
       $364 = $362 + 16 | 0;
       $366 = HEAP32[$364 >> 2] | 0;
       $369 = HEAP32[$364 + 4 >> 2] | 0;
       $370 = $358 + 16 | 0;
       HEAP32[$370 >> 2] = $366;
       HEAP32[$370 + 4 >> 2] = $369;
       $374 = $366;
       $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$354 >> 2] | 0;
       do if ((HEAP32[$353 >> 2] | 0) == ($354 | 0)) {
        $389 = $357;
        label = 162;
       } else {
        $376 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
        if ($376) {
         $$0$i$i$i$i$i$i$i$i$i3$i$i = $354;
         while (1) {
          $381 = HEAP32[$$0$i$i$i$i$i$i$i$i$i3$i$i + 8 >> 2] | 0;
          if ((HEAP32[$381 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i3$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i3$i$i = $381; else {
           $$01$i$i$i$i$i$i$i$i$i$i$i = $381;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
         while (1) {
          $378 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
          if (!$378) {
           $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $378;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $374 >>> 0) {
         $389 = $$01$i$i$i$i$i$i$i$i$i$i$i;
         label = 162;
        } else {
         if ($376) {
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $357;
          $$0$i$i$i$i1$i$i$i$i$i = $354;
          $404 = $357;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 > $374 >>> 0) {
           $392 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i >> 2] | 0;
           if (!$392) {
            $$lcssa249 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
            $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa247 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
            label = 168;
            break;
           } else {
            $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $392;
            continue;
           }
          }
          if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 >= $374 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           label = 172;
           break;
          }
          $396 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 4 | 0;
          $397 = HEAP32[$396 >> 2] | 0;
          if (!$397) {
           $$lcssa248 = $396;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa246 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           label = 171;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $397;
         }
         if ((label | 0) == 168) {
          label = 0;
          $394 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa247;
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $394;
          $$0$i$i$i$i1$i$i$i$i$i = $$lcssa249;
          $404 = $394;
          break;
         } else if ((label | 0) == 171) {
          label = 0;
          $399 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa246;
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $399;
          $$0$i$i$i$i1$i$i$i$i$i = $$lcssa248;
          $404 = $399;
          break;
         } else if ((label | 0) == 172) {
          label = 0;
          $400 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa;
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $400;
          $$0$i$i$i$i1$i$i$i$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
          $404 = $400;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 162) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i$i$i$i) {
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $357;
         $$0$i$i$i$i1$i$i$i$i$i = $354;
         $404 = $357;
         break;
        } else {
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $389;
         $$0$i$i$i$i1$i$i$i$i$i = $389 + 4 | 0;
         $404 = $389;
         break;
        }
       } while (0);
       $401 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
       if (!$401) {
        HEAP32[$358 >> 2] = 0;
        HEAP32[$358 + 4 >> 2] = 0;
        HEAP32[$358 + 8 >> 2] = $404;
        HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] = $358;
        $408 = HEAP32[HEAP32[$353 >> 2] >> 2] | 0;
        if (!$408) $412 = $358; else {
         HEAP32[$353 >> 2] = $408;
         $412 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$354 >> 2] | 0, $412);
        HEAP32[$355 >> 2] = (HEAP32[$355 >> 2] | 0) + 1;
        $417 = $362;
       } else if (($401 | 0) == ($358 | 0)) $417 = $638; else {
        __ZdlPv($358);
        $417 = $638;
       }
       $418 = HEAP32[$417 + 4 >> 2] | 0;
       if (!$418) {
        $$0$i$i$i$i$i$i4$i$i = $417;
        while (1) {
         $423 = HEAP32[$$0$i$i$i$i$i$i4$i$i + 8 >> 2] | 0;
         if ((HEAP32[$423 >> 2] | 0) == ($$0$i$i$i$i$i$i4$i$i | 0)) {
          $$01$i$i$i$i$i$i$i$i40 = $423;
          break;
         } else $$0$i$i$i$i$i$i4$i$i = $423;
        }
       } else {
        $$0$i$i$i$i$i$i$i$i35$i = $418;
        while (1) {
         $420 = HEAP32[$$0$i$i$i$i$i$i$i$i35$i >> 2] | 0;
         if (!$420) {
          $$01$i$i$i$i$i$i$i$i40 = $$0$i$i$i$i$i$i$i$i35$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i35$i = $420;
        }
       }
       if (($$01$i$i$i$i$i$i$i$i40 | 0) == ($149 | 0)) {
        label = 184;
        break L247;
       } else {
        $362 = $$01$i$i$i$i$i$i$i$i40;
        $638 = $$01$i$i$i$i$i$i$i$i40;
       }
      }
      $490 = ___cxa_find_matching_catch() | 0;
      $491 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($353, HEAP32[$354 >> 2] | 0);
      $$0$i$i$i = $491;
      $$01$i$i$i = $490;
     } while (0);
     L294 : do if ((label | 0) == 184) {
      $427 = $287 + 20 | 0;
      $428 = $287 + 24 | 0;
      HEAP32[$428 >> 2] = 0;
      $429 = $287 + 28 | 0;
      HEAP32[$429 >> 2] = 0;
      HEAP32[$427 >> 2] = $428;
      $$idx$val2$i$i4$i$i$i = HEAP32[$0 >> 2] | 0;
      L296 : do if (($$idx$val2$i$i4$i$i$i | 0) != ($292 | 0)) {
       $431 = $428;
       $436 = $$idx$val2$i$i4$i$i$i;
       $639 = $$idx$val2$i$i4$i$i$i;
       while (1) {
        __THREW__ = 0;
        $432 = invoke_ii(67, 28) | 0;
        $433 = __THREW__;
        __THREW__ = 0;
        if ($433 & 1) break;
        $435 = $436 + 16 | 0;
        $437 = $432 + 16 | 0;
        HEAP32[$437 >> 2] = HEAP32[$435 >> 2];
        HEAP32[$437 + 4 >> 2] = HEAP32[$435 + 4 >> 2];
        HEAP32[$437 + 8 >> 2] = HEAP32[$435 + 8 >> 2];
        $$pre$i$i$i$i$i$i9$i$i$i = HEAP32[$428 >> 2] | 0;
        do if ((HEAP32[$427 >> 2] | 0) == ($428 | 0)) {
         $452 = $431;
         label = 192;
        } else {
         $439 = ($$pre$i$i$i$i$i$i9$i$i$i | 0) == 0;
         if ($439) {
          $$0$i$i$i$i$i$i$i$i13$i$i$i = $428;
          while (1) {
           $444 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i$i$i + 8 >> 2] | 0;
           if ((HEAP32[$444 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i13$i$i$i = $444; else {
            $$01$i$i$i$i$i$i$i$i16$i$i$i = $444;
            break;
           }
          }
         } else {
          $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
          while (1) {
           $441 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i$i$i + 4 >> 2] | 0;
           if (!$441) {
            $$01$i$i$i$i$i$i$i$i16$i$i$i = $$0$i$i$i$i$i$i$i$i$i11$i$i$i;
            break;
           } else $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $441;
          }
         }
         $__v$idx14$val$i$i$i$i$i$i$i$i$i = HEAP32[$437 >> 2] | 0;
         if ((HEAP32[$$01$i$i$i$i$i$i$i$i16$i$i$i + 16 >> 2] | 0) >>> 0 < $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
          $452 = $$01$i$i$i$i$i$i$i$i16$i$i$i;
          label = 192;
         } else {
          if ($439) {
           HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $431;
           $$0$i$i$i$i1$i$i24$i$i$i = $428;
           $467 = $431;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
          while (1) {
           $$idx2$val$i22$i$i$i$i$i$i22$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i$i$i + 16 >> 2] | 0;
           if ($$idx2$val$i22$i$i$i$i$i$i22$i$i$i >>> 0 > $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
            $455 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i20$i$i$i >> 2] | 0;
            if (!$455) {
             $$lcssa245 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
             $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa243 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
             label = 198;
             break;
            } else {
             $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = $455;
             continue;
            }
           }
           if ($$idx2$val$i22$i$i$i$i$i$i22$i$i$i >>> 0 >= $__v$idx14$val$i$i$i$i$i$i$i$i$i >>> 0) {
            $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
            label = 202;
            break;
           }
           $459 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i + 4 | 0;
           $460 = HEAP32[$459 >> 2] | 0;
           if (!$460) {
            $$lcssa244 = $459;
            $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa242 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i;
            label = 201;
            break;
           } else $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i = $460;
          }
          if ((label | 0) == 198) {
           label = 0;
           $457 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa243;
           HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $457;
           $$0$i$i$i$i1$i$i24$i$i$i = $$lcssa245;
           $467 = $457;
           break;
          } else if ((label | 0) == 201) {
           label = 0;
           $462 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa242;
           HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $462;
           $$0$i$i$i$i1$i$i24$i$i$i = $$lcssa244;
           $467 = $462;
           break;
          } else if ((label | 0) == 202) {
           label = 0;
           $463 = $__nd$0$i20$i$i$i$i$in$i$i20$i$i$i$lcssa;
           HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $463;
           $$0$i$i$i$i1$i$i24$i$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
           $467 = $463;
           break;
          }
         }
        } while (0);
        do if ((label | 0) == 192) {
         label = 0;
         if (!$$pre$i$i$i$i$i$i9$i$i$i) {
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $431;
          $$0$i$i$i$i1$i$i24$i$i$i = $428;
          $467 = $431;
          break;
         } else {
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $452;
          $$0$i$i$i$i1$i$i24$i$i$i = $452 + 4 | 0;
          $467 = $452;
          break;
         }
        } while (0);
        $464 = HEAP32[$$0$i$i$i$i1$i$i24$i$i$i >> 2] | 0;
        if (!$464) {
         HEAP32[$432 >> 2] = 0;
         HEAP32[$432 + 4 >> 2] = 0;
         HEAP32[$432 + 8 >> 2] = $467;
         HEAP32[$$0$i$i$i$i1$i$i24$i$i$i >> 2] = $432;
         $471 = HEAP32[HEAP32[$427 >> 2] >> 2] | 0;
         if (!$471) $475 = $432; else {
          HEAP32[$427 >> 2] = $471;
          $475 = HEAP32[$$0$i$i$i$i1$i$i24$i$i$i >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$428 >> 2] | 0, $475);
         HEAP32[$429 >> 2] = (HEAP32[$429 >> 2] | 0) + 1;
         $480 = $436;
        } else if (($464 | 0) == ($432 | 0)) $480 = $639; else {
         __ZdlPv($432);
         $480 = $639;
        }
        $481 = HEAP32[$480 + 4 >> 2] | 0;
        if (!$481) {
         $$0$i$i$i$i$i29$i$i$i = $480;
         while (1) {
          $486 = HEAP32[$$0$i$i$i$i$i29$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$486 >> 2] | 0) == ($$0$i$i$i$i$i29$i$i$i | 0)) {
           $$01$i$i$i$i$i32$i$i$i = $486;
           break;
          } else $$0$i$i$i$i$i29$i$i$i = $486;
         }
        } else {
         $$0$i$i$i$i$i$i27$i$i$i = $481;
         while (1) {
          $483 = HEAP32[$$0$i$i$i$i$i$i27$i$i$i >> 2] | 0;
          if (!$483) {
           $$01$i$i$i$i$i32$i$i$i = $$0$i$i$i$i$i$i27$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i27$i$i$i = $483;
         }
        }
        if (($$01$i$i$i$i$i32$i$i$i | 0) == ($292 | 0)) break L296; else {
         $436 = $$01$i$i$i$i$i32$i$i$i;
         $639 = $$01$i$i$i$i$i32$i$i$i;
        }
       }
       $493 = ___cxa_find_matching_catch() | 0;
       $494 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($427, HEAP32[$428 >> 2] | 0);
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($353, HEAP32[$354 >> 2] | 0);
       $$0$i$i$i = $494;
       $$01$i$i$i = $493;
       break L294;
      } while (0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$292 >> 2] | 0);
      $498 = $this + 20 | 0;
      $499 = $287;
      $500 = $this + 24 | 0;
      $501 = HEAP32[$500 >> 2] | 0;
      $502 = $this + 28 | 0;
      $503 = HEAP32[$502 >> 2] | 0;
      if ($501 >>> 0 < $503 >>> 0) {
       HEAP32[$501 >> 2] = $499;
       $506 = (HEAP32[$500 >> 2] | 0) + 4 | 0;
       HEAP32[$500 >> 2] = $506;
       $$idx$pre$phi$i$iZZ2D = $498;
       $$idx2$val$i$i = $506;
      } else {
       $this$idx2$val$i$i$i$i = HEAP32[$498 >> 2] | 0;
       $508 = $this$idx2$val$i$i$i$i;
       $511 = ($501 - $508 >> 2) + 1 | 0;
       if ($511 >>> 0 > 1073741823) {
        __THREW__ = 0;
        invoke_vi(175, $498 | 0);
        $513 = __THREW__;
        __THREW__ = 0;
        if ($513 & 1) {
         label = 248;
         break L196;
        }
        $$idx$val$i$i$pre$i$i$i$i = HEAP32[$498 >> 2] | 0;
        $$idx1$val$i$i$i$i$i$i = HEAP32[$502 >> 2] | 0;
        $518 = $$idx$val$i$i$pre$i$i$i$i;
        $546 = $$idx$val$i$i$pre$i$i$i$i;
       } else {
        $$idx1$val$i$i$i$i$i$i = $503;
        $518 = $this$idx2$val$i$i$i$i;
        $546 = $508;
       }
       $517 = $518;
       $519 = $$idx1$val$i$i$i$i$i$i - $517 | 0;
       if ($519 >> 2 >>> 0 < 536870911) {
        $525 = $519 >> 1;
        $527 = $525 >>> 0 < $511 >>> 0 ? $511 : $525;
        $529 = (HEAP32[$500 >> 2] | 0) - $517 | 0;
        $530 = $529 >> 2;
        if (!$527) {
         $$0$i8$i$i$i$i = 0;
         $537 = 0;
         $538 = $530;
         $544 = $529;
        } else {
         $$0$i7$i$i$i$i = $527;
         $640 = $530;
         $641 = $529;
         label = 224;
        }
       } else {
        $523 = (HEAP32[$500 >> 2] | 0) - $517 | 0;
        $$0$i7$i$i$i$i = 1073741823;
        $640 = $523 >> 2;
        $641 = $523;
        label = 224;
       }
       if ((label | 0) == 224) {
        __THREW__ = 0;
        $533 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
        $534 = __THREW__;
        __THREW__ = 0;
        if ($534 & 1) {
         label = 248;
         break L196;
        }
        $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
        $537 = $533;
        $538 = $640;
        $544 = $641;
       }
       HEAP32[$537 + ($538 << 2) >> 2] = $499;
       $541 = $537 + ($538 + 1 << 2) | 0;
       _memcpy($537 | 0, $518 | 0, $544 | 0) | 0;
       HEAP32[$498 >> 2] = $537;
       HEAP32[$500 >> 2] = $541;
       HEAP32[$502 >> 2] = $537 + ($$0$i8$i$i$i$i << 2);
       if (!$546) {
        $$idx$pre$phi$i$iZZ2D = $498;
        $$idx2$val$i$i = $541;
       } else {
        __ZdlPv($546);
        $$idx$pre$phi$i$iZZ2D = $498;
        $$idx2$val$i$i = HEAP32[$500 >> 2] | 0;
       }
      }
      $552 = $this + 16 | 0;
      HEAP8[$287 + 4 >> 0] = HEAP8[$552 >> 0] | 0;
      $559 = $this + 36 | 0;
      HEAP32[$559 >> 2] = $$idx2$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$226 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$149 >> 2] | 0);
      $562 = HEAP32[$559 >> 2] | 0;
      if ($562 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
       $623 = $agg$result + 8 | 0;
       HEAP32[$623 >> 2] = $287;
       $624 = HEAP32[$85 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $624);
       $625 = HEAP32[$7 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $625);
       STACKTOP = sp;
       return;
      }
      $568 = $this + 32 | 0;
      if (!(+($562 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$568 >> 2] | 0) >>> 0))) {
       $623 = $agg$result + 8 | 0;
       HEAP32[$623 >> 2] = $287;
       $624 = HEAP32[$85 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $624);
       $625 = HEAP32[$7 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $625);
       STACKTOP = sp;
       return;
      }
      __THREW__ = 0;
      invoke_vii(62, $this | 0, $287 | 0);
      $573 = __THREW__;
      __THREW__ = 0;
      do if (!($573 & 1)) {
       __THREW__ = 0;
       invoke_vii(63, $this + 56 | 0, $this | 0);
       $576 = __THREW__;
       __THREW__ = 0;
       if (!($576 & 1)) {
        if (HEAP32[$this + 40 >> 2] & 16) {
         __THREW__ = 0;
         invoke_vii(62, $this | 0, HEAP32[$this + 48 >> 2] | 0);
         $584 = __THREW__;
         __THREW__ = 0;
         if ($584 & 1) break;
        }
        $587 = (HEAP8[$552 >> 0] | 0) + 1 << 24 >> 24;
        HEAP8[$552 >> 0] = $587;
        $$idx6$i$i = $this + 20 | 0;
        $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
        $$idx7$val12$i$i = HEAP32[$500 >> 2] | 0;
        L372 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
         $$idx5$val19$i$i = $$idx7$val12$i$i;
         $$idx6$val14$i$i = $$idx6$val11$i$i;
         $594 = $587;
         $i$013$i$i = 0;
         while (1) {
          $590 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
          if ((HEAP8[$590 + 4 >> 0] | 0) == $594 << 24 >> 24) {
           $$idx6$val$i$i = $$idx6$val14$i$i;
           $$idx7$val$i$i = $$idx5$val19$i$i;
           $i$1$i$i = $i$013$i$i;
          } else {
           if (!$590) {
            $$idx4$val$i$i = $$idx6$val14$i$i;
            $$idx5$val$i$i = $$idx5$val19$i$i;
           } else {
            FUNCTION_TABLE_vi[HEAP32[(HEAP32[$590 >> 2] | 0) + 4 >> 2] & 255]($590);
            $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
            $$idx5$val$i$i = HEAP32[$500 >> 2] | 0;
           }
           $603 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
           if (($i$013$i$i | 0) == ($603 | 0)) {
            $$idx6$val$pre$i$i = $$idx4$val$i$i;
            $608 = $$idx5$val$i$i;
           } else {
            HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($603 << 2) >> 2];
            $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
            $608 = HEAP32[$500 >> 2] | 0;
           }
           $scevgep4$i$i$i$i$i = $608 + -4 | 0;
           HEAP32[$500 >> 2] = $scevgep4$i$i$i$i$i;
           $$idx6$val$i$i = $$idx6$val$pre$i$i;
           $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
           $i$1$i$i = $i$013$i$i + -1 | 0;
          }
          $610 = $i$1$i$i + 1 | 0;
          $614 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
          if ($610 >>> 0 >= $614 >>> 0) {
           $$lcssa$i$i = $614;
           break L372;
          }
          $$idx5$val19$i$i = $$idx7$val$i$i;
          $$idx6$val14$i$i = $$idx6$val$i$i;
          $594 = HEAP8[$552 >> 0] | 0;
          $i$013$i$i = $610;
         }
        } while (0);
        HEAP32[$559 >> 2] = $$lcssa$i$i;
        HEAP32[$568 >> 2] = $$lcssa$i$i;
        $623 = $agg$result + 8 | 0;
        HEAP32[$623 >> 2] = $287;
        $624 = HEAP32[$85 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, $624);
        $625 = HEAP32[$7 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $625);
        STACKTOP = sp;
        return;
       }
      } while (0);
      $629 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body43$index8Z2D = tempRet0;
      $eh$lpad$body43$indexZ2D = $629;
      break L145;
     } while (0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$292 >> 2] | 0);
     $$0$i$i = $$0$i$i$i;
     $$01$i$i = $$01$i$i$i;
    }
    __ZdlPv($287);
    $eh$lpad$body39$i$index2Z2D = $$0$i$i;
    $eh$lpad$body39$i$indexZ2D = $$01$i$i;
   } while (0);
   if ((label | 0) == 248) {
    $619 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body39$i$index2Z2D = tempRet0;
    $eh$lpad$body39$i$indexZ2D = $619;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$226 >> 2] | 0);
   $$0$i = $eh$lpad$body39$i$index2Z2D;
   $$01$i = $eh$lpad$body39$i$indexZ2D;
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$149 >> 2] | 0);
  $eh$lpad$body43$index8Z2D = $$0$i;
  $eh$lpad$body43$indexZ2D = $$01$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($4, HEAP32[$85 >> 2] | 0);
 $$0 = $eh$lpad$body43$index8Z2D;
 $$01 = $eh$lpad$body43$indexZ2D;
 $632 = HEAP32[$7 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $632);
 ___resumeException($$01 | 0);
}
function __ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_($agg$result, $this, $args, $args1, $args2, $args3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i11 = 0, $$0$i$i$i$i$i$i$i$i$i11$i = 0, $$0$i$i$i$i$i$i$i$i$i11$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i39 = 0, $$0$i$i$i$i$i$i$i$i13 = 0, $$0$i$i$i$i$i$i$i$i13$i = 0, $$0$i$i$i$i$i$i$i$i13$i$i$i = 0, $$0$i$i$i$i$i$i$i$i39$i = 0, $$0$i$i$i$i$i$i$i$i43 = 0, $$0$i$i$i$i$i$i31 = 0, $$0$i$i$i$i$i$i31$i = 0, $$0$i$i$i$i$i$i31$i$i$i = 0, $$0$i$i$i$i$i$i40 = 0, $$0$i$i$i$i$i33 = 0, $$0$i$i$i$i$i33$i = 0, $$0$i$i$i$i$i33$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$0$i$i$i$i1$i$i$i = 0, $$0$i$i$i$i1$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i25 = 0, $$0$i$i$i$i1$i$i25$i = 0, $$0$i$i$i$i1$i$i25$i$i$i = 0, $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i16 = 0, $$01$i$i$i$i$i$i$i$i16$i = 0, $$01$i$i$i$i$i$i$i$i16$i$i$i = 0, $$01$i$i$i$i$i$i$i$i46 = 0, $$01$i$i$i$i$i36 = 0, $$01$i$i$i$i$i36$i = 0, $$01$i$i$i$i$i36$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i$pre$i$i$i$i = 0, $$idx$val2$i$i = 0, $$idx$val2$i$i$i = 0, $$idx$val2$i$i$i$i$i = 0, $$idx$val2$i$i4 = 0, $$idx$val2$i$i4$i = 0, $$idx$val2$i$i4$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i$i$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i23 = 0, $$idx2$val$i22$i$i$i$i$i$i23$i = 0, $$idx2$val$i22$i$i$i$i$i$i23$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val19$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$lcssa$i$i = 0, $$lcssa222 = 0, $$lcssa223 = 0, $$lcssa226 = 0, $$lcssa227 = 0, $$lcssa230 = 0, $$lcssa231 = 0, $$lcssa234 = 0, $$lcssa235 = 0, $$lcssa238 = 0, $$lcssa239 = 0, $$lcssa242 = 0, $$lcssa243 = 0, $$pre$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i$i$i$i = 0, $$pre$i$i$i$i$i$i9 = 0, $$pre$i$i$i$i$i$i9$i = 0, $$pre$i$i$i$i$i$i9$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $119 = 0, $122 = 0, $124 = 0, $126 = 0, $127 = 0, $129 = 0, $130 = 0, $131 = 0, $134 = 0, $138 = 0, $14 = 0, $142 = 0, $147 = 0, $148 = 0, $150 = 0, $153 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $161 = 0, $162 = 0, $163 = 0, $166 = 0, $168 = 0, $170 = 0, $173 = 0, $174 = 0, $178 = 0, $18 = 0, $180 = 0, $182 = 0, $185 = 0, $193 = 0, $196 = 0, $198 = 0, $2 = 0, $200 = 0, $201 = 0, $203 = 0, $204 = 0, $205 = 0, $208 = 0, $21 = 0, $212 = 0, $216 = 0, $22 = 0, $221 = 0, $222 = 0, $224 = 0, $227 = 0, $231 = 0, $232 = 0, $234 = 0, $235 = 0, $236 = 0, $238 = 0, $239 = 0, $240 = 0, $243 = 0, $245 = 0, $247 = 0, $250 = 0, $251 = 0, $255 = 0, $257 = 0, $259 = 0, $26 = 0, $262 = 0, $270 = 0, $273 = 0, $275 = 0, $277 = 0, $278 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $285 = 0, $289 = 0, $293 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $301 = 0, $304 = 0, $308 = 0, $309 = 0, $311 = 0, $312 = 0, $313 = 0, $315 = 0, $316 = 0, $317 = 0, $320 = 0, $322 = 0, $324 = 0, $327 = 0, $328 = 0, $33 = 0, $332 = 0, $334 = 0, $336 = 0, $339 = 0, $347 = 0, $350 = 0, $352 = 0, $354 = 0, $355 = 0, $357 = 0, $358 = 0, $359 = 0, $362 = 0, $366 = 0, $370 = 0, $375 = 0, $376 = 0, $378 = 0, $381 = 0, $387 = 0, $388 = 0, $389 = 0, $391 = 0, $392 = 0, $393 = 0, $396 = 0, $398 = 0, $4 = 0, $400 = 0, $403 = 0, $404 = 0, $408 = 0, $41 = 0, $410 = 0, $412 = 0, $415 = 0, $423 = 0, $426 = 0, $428 = 0, $430 = 0, $431 = 0, $433 = 0, $434 = 0, $435 = 0, $438 = 0, $44 = 0, $442 = 0, $446 = 0, $451 = 0, $452 = 0, $454 = 0, $457 = 0, $46 = 0, $461 = 0, $462 = 0, $464 = 0, $465 = 0, $468 = 0, $469 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $476 = 0, $478 = 0, $48 = 0, $481 = 0, $483 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $493 = 0, $495 = 0, $497 = 0, $499 = 0, $5 = 0, $500 = 0, $503 = 0, $504 = 0, $507 = 0, $508 = 0, $51 = 0, $511 = 0, $514 = 0, $516 = 0, $518 = 0, $52 = 0, $525 = 0, $528 = 0, $53 = 0, $534 = 0, $539 = 0, $542 = 0, $550 = 0, $553 = 0, $556 = 0, $56 = 0, $560 = 0, $569 = 0, $574 = 0, $576 = 0, $580 = 0, $582 = 0, $583 = 0, $585 = 0, $589 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $595 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $64 = 0, $69 = 0, $7 = 0, $70 = 0, $72 = 0, $75 = 0, $79 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0, $94 = 0, $96 = 0, $99 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa224 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa225 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa232 = 0, $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa233 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa240 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa241 = 0, $__nd$0$i20$i$i$i$i$in$i$i21 = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa220 = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa221 = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa228 = 0, $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa229 = 0, $__nd$0$i20$i$i$i$i$in$i$i21$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i21$lcssa236 = 0, $__nd$0$i20$i$i$i$i$in$i$i21$lcssa237 = 0, $__parent$sroa$0$i$i$i$i$i2$i$i$i = 0, $eh$lpad$body43$i$index2Z2D = 0, $eh$lpad$body43$i$indexZ2D = 0, $eh$lpad$body49$index8Z2D = 0, $eh$lpad$body49$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$sroa$0$i$i$i$i$i2$i$i$i = sp + 48 | 0;
 $0 = sp + 36 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 12 | 0;
 $3 = sp;
 HEAP32[$agg$result >> 2] = 18;
 $4 = $2 + 4 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $2 + 8 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $2 + 4 | 0;
 HEAP32[$2 >> 2] = $6;
 $$idx$val2$i$i = HEAP32[$args >> 2] | 0;
 $7 = $args + 4 | 0;
 L1 : do if (($$idx$val2$i$i | 0) != ($7 | 0)) {
  $9 = $6;
  $14 = $$idx$val2$i$i;
  $599 = $$idx$val2$i$i;
  while (1) {
   __THREW__ = 0;
   $10 = invoke_ii(67, 24) | 0;
   $11 = __THREW__;
   __THREW__ = 0;
   if ($11 & 1) break;
   $16 = $14 + 16 | 0;
   $18 = HEAP32[$16 >> 2] | 0;
   $21 = HEAP32[$16 + 4 >> 2] | 0;
   $22 = $10 + 16 | 0;
   HEAP32[$22 >> 2] = $18;
   HEAP32[$22 + 4 >> 2] = $21;
   $26 = $18;
   $$pre$i$i$i$i$i$i = HEAP32[$6 >> 2] | 0;
   do if ((HEAP32[$2 >> 2] | 0) == ($6 | 0)) {
    $41 = $9;
    label = 9;
   } else {
    $28 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($28) {
     $$0$i$i$i$i$i$i$i$i = $6;
     while (1) {
      $33 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$33 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $33; else {
       $$01$i$i$i$i$i$i$i$i = $33;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $30 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$30) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $30;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $26 >>> 0) {
     $41 = $$01$i$i$i$i$i$i$i$i;
     label = 9;
    } else {
     if ($28) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $9;
      $$0$i$i$i$i1$i$i = $6;
      $56 = $9;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $26 >>> 0) {
       $44 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$44) {
        $$lcssa243 = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa241 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 15;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i = $44;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $26 >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 19;
       break;
      }
      $48 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
      $49 = HEAP32[$48 >> 2] | 0;
      if (!$49) {
       $$lcssa242 = $48;
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa240 = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 18;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i = $49;
     }
     if ((label | 0) == 15) {
      label = 0;
      $46 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa241;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $46;
      $$0$i$i$i$i1$i$i = $$lcssa243;
      $56 = $46;
      break;
     } else if ((label | 0) == 18) {
      label = 0;
      $51 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa240;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $51;
      $$0$i$i$i$i1$i$i = $$lcssa242;
      $56 = $51;
      break;
     } else if ((label | 0) == 19) {
      label = 0;
      $52 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $52;
      $$0$i$i$i$i1$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
      $56 = $52;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 9) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $9;
     $$0$i$i$i$i1$i$i = $6;
     $56 = $9;
     break;
    } else {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $41;
     $$0$i$i$i$i1$i$i = $41 + 4 | 0;
     $56 = $41;
     break;
    }
   } while (0);
   $53 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$53) {
    HEAP32[$10 >> 2] = 0;
    HEAP32[$10 + 4 >> 2] = 0;
    HEAP32[$10 + 8 >> 2] = $56;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $10;
    $60 = HEAP32[HEAP32[$2 >> 2] >> 2] | 0;
    if (!$60) $64 = $10; else {
     HEAP32[$2 >> 2] = $60;
     $64 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$4 >> 2] | 0, $64);
    HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
    $69 = $14;
   } else if (($53 | 0) == ($10 | 0)) $69 = $599; else {
    __ZdlPv($10);
    $69 = $599;
   }
   $70 = HEAP32[$69 + 4 >> 2] | 0;
   if (!$70) {
    $$0$i$i$i$i$i = $69;
    while (1) {
     $75 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$75 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $75;
      break;
     } else $$0$i$i$i$i$i = $75;
    }
   } else {
    $$0$i$i$i$i$i$i = $70;
    while (1) {
     $72 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$72) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $72;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($7 | 0)) break L1; else {
    $14 = $$01$i$i$i$i$i;
    $599 = $$01$i$i$i$i$i;
   }
  }
  $79 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, HEAP32[$6 >> 2] | 0);
  ___resumeException($79 | 0);
 } while (0);
 $82 = $3 + 4 | 0;
 HEAP32[$82 >> 2] = 0;
 $83 = $3 + 8 | 0;
 HEAP32[$83 >> 2] = 0;
 $84 = $3 + 4 | 0;
 HEAP32[$3 >> 2] = $84;
 $$idx$val2$i$i4 = HEAP32[$args3 >> 2] | 0;
 $85 = $args3 + 4 | 0;
 L49 : do if (($$idx$val2$i$i4 | 0) != ($85 | 0)) {
  $87 = $84;
  $600 = $$idx$val2$i$i4;
  $92 = $$idx$val2$i$i4;
  while (1) {
   __THREW__ = 0;
   $88 = invoke_ii(67, 24) | 0;
   $89 = __THREW__;
   __THREW__ = 0;
   if ($89 & 1) break;
   $94 = $92 + 16 | 0;
   $96 = HEAP32[$94 >> 2] | 0;
   $99 = HEAP32[$94 + 4 >> 2] | 0;
   $100 = $88 + 16 | 0;
   HEAP32[$100 >> 2] = $96;
   HEAP32[$100 + 4 >> 2] = $99;
   $104 = $96;
   $$pre$i$i$i$i$i$i9 = HEAP32[$84 >> 2] | 0;
   do if ((HEAP32[$3 >> 2] | 0) == ($84 | 0)) {
    $119 = $87;
    label = 40;
   } else {
    $106 = ($$pre$i$i$i$i$i$i9 | 0) == 0;
    if ($106) {
     $$0$i$i$i$i$i$i$i$i13 = $84;
     while (1) {
      $111 = HEAP32[$$0$i$i$i$i$i$i$i$i13 + 8 >> 2] | 0;
      if ((HEAP32[$111 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13 | 0)) $$0$i$i$i$i$i$i$i$i13 = $111; else {
       $$01$i$i$i$i$i$i$i$i16 = $111;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i11 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $108 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11 + 4 >> 2] | 0;
      if (!$108) {
       $$01$i$i$i$i$i$i$i$i16 = $$0$i$i$i$i$i$i$i$i$i11;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i11 = $108;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i16 + 16 >> 2] | 0) >>> 0 < $104 >>> 0) {
     $119 = $$01$i$i$i$i$i$i$i$i16;
     label = 40;
    } else {
     if ($106) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $87;
      $$0$i$i$i$i1$i$i25 = $84;
      $134 = $87;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i21 = $$pre$i$i$i$i$i$i9;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i23 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i21 + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i23 >>> 0 > $104 >>> 0) {
       $122 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i21 >> 2] | 0;
       if (!$122) {
        $$lcssa239 = $__nd$0$i20$i$i$i$i$in$i$i21;
        $__nd$0$i20$i$i$i$i$in$i$i21$lcssa237 = $__nd$0$i20$i$i$i$i$in$i$i21;
        label = 46;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i21 = $122;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i23 >>> 0 >= $104 >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i21$lcssa = $__nd$0$i20$i$i$i$i$in$i$i21;
       label = 50;
       break;
      }
      $126 = $__nd$0$i20$i$i$i$i$in$i$i21 + 4 | 0;
      $127 = HEAP32[$126 >> 2] | 0;
      if (!$127) {
       $$lcssa238 = $126;
       $__nd$0$i20$i$i$i$i$in$i$i21$lcssa236 = $__nd$0$i20$i$i$i$i$in$i$i21;
       label = 49;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i21 = $127;
     }
     if ((label | 0) == 46) {
      label = 0;
      $124 = $__nd$0$i20$i$i$i$i$in$i$i21$lcssa237;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $124;
      $$0$i$i$i$i1$i$i25 = $$lcssa239;
      $134 = $124;
      break;
     } else if ((label | 0) == 49) {
      label = 0;
      $129 = $__nd$0$i20$i$i$i$i$in$i$i21$lcssa236;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $129;
      $$0$i$i$i$i1$i$i25 = $$lcssa238;
      $134 = $129;
      break;
     } else if ((label | 0) == 50) {
      label = 0;
      $130 = $__nd$0$i20$i$i$i$i$in$i$i21$lcssa;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $130;
      $$0$i$i$i$i1$i$i25 = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
      $134 = $130;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 40) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i9) {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $87;
     $$0$i$i$i$i1$i$i25 = $84;
     $134 = $87;
     break;
    } else {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $119;
     $$0$i$i$i$i1$i$i25 = $119 + 4 | 0;
     $134 = $119;
     break;
    }
   } while (0);
   $131 = HEAP32[$$0$i$i$i$i1$i$i25 >> 2] | 0;
   if (!$131) {
    HEAP32[$88 >> 2] = 0;
    HEAP32[$88 + 4 >> 2] = 0;
    HEAP32[$88 + 8 >> 2] = $134;
    HEAP32[$$0$i$i$i$i1$i$i25 >> 2] = $88;
    $138 = HEAP32[HEAP32[$3 >> 2] >> 2] | 0;
    if (!$138) $142 = $88; else {
     HEAP32[$3 >> 2] = $138;
     $142 = HEAP32[$$0$i$i$i$i1$i$i25 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$82 >> 2] | 0, $142);
    HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 1;
    $147 = $92;
   } else if (($131 | 0) == ($88 | 0)) $147 = $600; else {
    __ZdlPv($88);
    $147 = $600;
   }
   $148 = HEAP32[$147 + 4 >> 2] | 0;
   if (!$148) {
    $$0$i$i$i$i$i33 = $147;
    while (1) {
     $153 = HEAP32[$$0$i$i$i$i$i33 + 8 >> 2] | 0;
     if ((HEAP32[$153 >> 2] | 0) == ($$0$i$i$i$i$i33 | 0)) {
      $$01$i$i$i$i$i36 = $153;
      break;
     } else $$0$i$i$i$i$i33 = $153;
    }
   } else {
    $$0$i$i$i$i$i$i31 = $148;
    while (1) {
     $150 = HEAP32[$$0$i$i$i$i$i$i31 >> 2] | 0;
     if (!$150) {
      $$01$i$i$i$i$i36 = $$0$i$i$i$i$i$i31;
      break;
     } else $$0$i$i$i$i$i$i31 = $150;
    }
   }
   if (($$01$i$i$i$i$i36 | 0) == ($85 | 0)) break L49; else {
    $600 = $$01$i$i$i$i$i36;
    $92 = $$01$i$i$i$i$i36;
   }
  }
  $592 = ___cxa_find_matching_catch() | 0;
  $593 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$84 >> 2] | 0);
  $$0 = $593;
  $$01 = $592;
  $598 = HEAP32[$6 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $598);
  ___resumeException($$01 | 0);
 } while (0);
 $157 = $0 + 4 | 0;
 HEAP32[$157 >> 2] = 0;
 $158 = $0 + 8 | 0;
 HEAP32[$158 >> 2] = 0;
 $159 = $0 + 4 | 0;
 HEAP32[$0 >> 2] = $159;
 $$idx$val2$i$i$i = HEAP32[$2 >> 2] | 0;
 L98 : do if (($$idx$val2$i$i$i | 0) == ($6 | 0)) label = 93; else {
  $161 = $159;
  $166 = $$idx$val2$i$i$i;
  $601 = $$idx$val2$i$i$i;
  while (1) {
   __THREW__ = 0;
   $162 = invoke_ii(67, 24) | 0;
   $163 = __THREW__;
   __THREW__ = 0;
   if ($163 & 1) break;
   $168 = $166 + 16 | 0;
   $170 = HEAP32[$168 >> 2] | 0;
   $173 = HEAP32[$168 + 4 >> 2] | 0;
   $174 = $162 + 16 | 0;
   HEAP32[$174 >> 2] = $170;
   HEAP32[$174 + 4 >> 2] = $173;
   $178 = $170;
   $$pre$i$i$i$i$i$i$i = HEAP32[$159 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($159 | 0)) {
    $193 = $161;
    label = 70;
   } else {
    $180 = ($$pre$i$i$i$i$i$i$i | 0) == 0;
    if ($180) {
     $$0$i$i$i$i$i$i$i$i$i39 = $159;
     while (1) {
      $185 = HEAP32[$$0$i$i$i$i$i$i$i$i$i39 + 8 >> 2] | 0;
      if ((HEAP32[$185 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i39 | 0)) $$0$i$i$i$i$i$i$i$i$i39 = $185; else {
       $$01$i$i$i$i$i$i$i$i$i = $185;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $182 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$182) {
       $$01$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i$i = $182;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $178 >>> 0) {
     $193 = $$01$i$i$i$i$i$i$i$i$i;
     label = 70;
    } else {
     if ($180) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $161;
      $$0$i$i$i$i1$i$i$i = $159;
      $208 = $161;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i$i = $$pre$i$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 > $178 >>> 0) {
       $196 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i >> 2] | 0;
       if (!$196) {
        $$lcssa235 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa233 = $__nd$0$i20$i$i$i$i$in$i$i$i;
        label = 76;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i$i = $196;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i$i >>> 0 >= $178 >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i;
       label = 80;
       break;
      }
      $200 = $__nd$0$i20$i$i$i$i$in$i$i$i + 4 | 0;
      $201 = HEAP32[$200 >> 2] | 0;
      if (!$201) {
       $$lcssa234 = $200;
       $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa232 = $__nd$0$i20$i$i$i$i$in$i$i$i;
       label = 79;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i$i = $201;
     }
     if ((label | 0) == 76) {
      label = 0;
      $198 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa233;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $198;
      $$0$i$i$i$i1$i$i$i = $$lcssa235;
      $208 = $198;
      break;
     } else if ((label | 0) == 79) {
      label = 0;
      $203 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa232;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $203;
      $$0$i$i$i$i1$i$i$i = $$lcssa234;
      $208 = $203;
      break;
     } else if ((label | 0) == 80) {
      label = 0;
      $204 = $__nd$0$i20$i$i$i$i$in$i$i$i$lcssa;
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $204;
      $$0$i$i$i$i1$i$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
      $208 = $204;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 70) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i$i) {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $161;
     $$0$i$i$i$i1$i$i$i = $159;
     $208 = $161;
     break;
    } else {
     HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $193;
     $$0$i$i$i$i1$i$i$i = $193 + 4 | 0;
     $208 = $193;
     break;
    }
   } while (0);
   $205 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
   if (!$205) {
    HEAP32[$162 >> 2] = 0;
    HEAP32[$162 + 4 >> 2] = 0;
    HEAP32[$162 + 8 >> 2] = $208;
    HEAP32[$$0$i$i$i$i1$i$i$i >> 2] = $162;
    $212 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$212) $216 = $162; else {
     HEAP32[$0 >> 2] = $212;
     $216 = HEAP32[$$0$i$i$i$i1$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$157 >> 2] | 0, $216);
    HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + 1;
    $221 = $166;
   } else if (($205 | 0) == ($162 | 0)) $221 = $601; else {
    __ZdlPv($162);
    $221 = $601;
   }
   $222 = HEAP32[$221 + 4 >> 2] | 0;
   if (!$222) {
    $$0$i$i$i$i$i$i40 = $221;
    while (1) {
     $227 = HEAP32[$$0$i$i$i$i$i$i40 + 8 >> 2] | 0;
     if ((HEAP32[$227 >> 2] | 0) == ($$0$i$i$i$i$i$i40 | 0)) {
      $$01$i$i$i$i$i$i = $227;
      break;
     } else $$0$i$i$i$i$i$i40 = $227;
    }
   } else {
    $$0$i$i$i$i$i$i$i = $222;
    while (1) {
     $224 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
     if (!$224) {
      $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i$i = $224;
    }
   }
   if (($$01$i$i$i$i$i$i | 0) == ($6 | 0)) {
    label = 93;
    break L98;
   } else {
    $166 = $$01$i$i$i$i$i$i;
    $601 = $$01$i$i$i$i$i$i;
   }
  }
  $231 = ___cxa_find_matching_catch() | 0;
  $232 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$159 >> 2] | 0);
  $eh$lpad$body49$index8Z2D = $232;
  $eh$lpad$body49$indexZ2D = $231;
 } while (0);
 L145 : do if ((label | 0) == 93) {
  $234 = $1 + 4 | 0;
  HEAP32[$234 >> 2] = 0;
  $235 = $1 + 8 | 0;
  HEAP32[$235 >> 2] = 0;
  $236 = $1 + 4 | 0;
  HEAP32[$1 >> 2] = $236;
  $$idx$val2$i$i4$i = HEAP32[$3 >> 2] | 0;
  L147 : do if (($$idx$val2$i$i4$i | 0) == ($84 | 0)) label = 123; else {
   $238 = $236;
   $243 = $$idx$val2$i$i4$i;
   $602 = $$idx$val2$i$i4$i;
   while (1) {
    __THREW__ = 0;
    $239 = invoke_ii(67, 24) | 0;
    $240 = __THREW__;
    __THREW__ = 0;
    if ($240 & 1) break;
    $245 = $243 + 16 | 0;
    $247 = HEAP32[$245 >> 2] | 0;
    $250 = HEAP32[$245 + 4 >> 2] | 0;
    $251 = $239 + 16 | 0;
    HEAP32[$251 >> 2] = $247;
    HEAP32[$251 + 4 >> 2] = $250;
    $255 = $247;
    $$pre$i$i$i$i$i$i9$i = HEAP32[$236 >> 2] | 0;
    do if ((HEAP32[$1 >> 2] | 0) == ($236 | 0)) {
     $270 = $238;
     label = 101;
    } else {
     $257 = ($$pre$i$i$i$i$i$i9$i | 0) == 0;
     if ($257) {
      $$0$i$i$i$i$i$i$i$i13$i = $236;
      while (1) {
       $262 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i + 8 >> 2] | 0;
       if ((HEAP32[$262 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i | 0)) $$0$i$i$i$i$i$i$i$i13$i = $262; else {
        $$01$i$i$i$i$i$i$i$i16$i = $262;
        break;
       }
      }
     } else {
      $$0$i$i$i$i$i$i$i$i$i11$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $259 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i + 4 >> 2] | 0;
       if (!$259) {
        $$01$i$i$i$i$i$i$i$i16$i = $$0$i$i$i$i$i$i$i$i$i11$i;
        break;
       } else $$0$i$i$i$i$i$i$i$i$i11$i = $259;
      }
     }
     if ((HEAP32[$$01$i$i$i$i$i$i$i$i16$i + 16 >> 2] | 0) >>> 0 < $255 >>> 0) {
      $270 = $$01$i$i$i$i$i$i$i$i16$i;
      label = 101;
     } else {
      if ($257) {
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $238;
       $$0$i$i$i$i1$i$i25$i = $236;
       $285 = $238;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i21$i = $$pre$i$i$i$i$i$i9$i;
      while (1) {
       $$idx2$val$i22$i$i$i$i$i$i23$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i21$i + 16 >> 2] | 0;
       if ($$idx2$val$i22$i$i$i$i$i$i23$i >>> 0 > $255 >>> 0) {
        $273 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i21$i >> 2] | 0;
        if (!$273) {
         $$lcssa231 = $__nd$0$i20$i$i$i$i$in$i$i21$i;
         $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa229 = $__nd$0$i20$i$i$i$i$in$i$i21$i;
         label = 107;
         break;
        } else {
         $__nd$0$i20$i$i$i$i$in$i$i21$i = $273;
         continue;
        }
       }
       if ($$idx2$val$i22$i$i$i$i$i$i23$i >>> 0 >= $255 >>> 0) {
        $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i21$i;
        label = 111;
        break;
       }
       $277 = $__nd$0$i20$i$i$i$i$in$i$i21$i + 4 | 0;
       $278 = HEAP32[$277 >> 2] | 0;
       if (!$278) {
        $$lcssa230 = $277;
        $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa228 = $__nd$0$i20$i$i$i$i$in$i$i21$i;
        label = 110;
        break;
       } else $__nd$0$i20$i$i$i$i$in$i$i21$i = $278;
      }
      if ((label | 0) == 107) {
       label = 0;
       $275 = $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa229;
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $275;
       $$0$i$i$i$i1$i$i25$i = $$lcssa231;
       $285 = $275;
       break;
      } else if ((label | 0) == 110) {
       label = 0;
       $280 = $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa228;
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $280;
       $$0$i$i$i$i1$i$i25$i = $$lcssa230;
       $285 = $280;
       break;
      } else if ((label | 0) == 111) {
       label = 0;
       $281 = $__nd$0$i20$i$i$i$i$in$i$i21$i$lcssa;
       HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $281;
       $$0$i$i$i$i1$i$i25$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
       $285 = $281;
       break;
      }
     }
    } while (0);
    do if ((label | 0) == 101) {
     label = 0;
     if (!$$pre$i$i$i$i$i$i9$i) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $238;
      $$0$i$i$i$i1$i$i25$i = $236;
      $285 = $238;
      break;
     } else {
      HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $270;
      $$0$i$i$i$i1$i$i25$i = $270 + 4 | 0;
      $285 = $270;
      break;
     }
    } while (0);
    $282 = HEAP32[$$0$i$i$i$i1$i$i25$i >> 2] | 0;
    if (!$282) {
     HEAP32[$239 >> 2] = 0;
     HEAP32[$239 + 4 >> 2] = 0;
     HEAP32[$239 + 8 >> 2] = $285;
     HEAP32[$$0$i$i$i$i1$i$i25$i >> 2] = $239;
     $289 = HEAP32[HEAP32[$1 >> 2] >> 2] | 0;
     if (!$289) $293 = $239; else {
      HEAP32[$1 >> 2] = $289;
      $293 = HEAP32[$$0$i$i$i$i1$i$i25$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$234 >> 2] | 0, $293);
     HEAP32[$235 >> 2] = (HEAP32[$235 >> 2] | 0) + 1;
     $298 = $243;
    } else if (($282 | 0) == ($239 | 0)) $298 = $602; else {
     __ZdlPv($239);
     $298 = $602;
    }
    $299 = HEAP32[$298 + 4 >> 2] | 0;
    if (!$299) {
     $$0$i$i$i$i$i33$i = $298;
     while (1) {
      $304 = HEAP32[$$0$i$i$i$i$i33$i + 8 >> 2] | 0;
      if ((HEAP32[$304 >> 2] | 0) == ($$0$i$i$i$i$i33$i | 0)) {
       $$01$i$i$i$i$i36$i = $304;
       break;
      } else $$0$i$i$i$i$i33$i = $304;
     }
    } else {
     $$0$i$i$i$i$i$i31$i = $299;
     while (1) {
      $301 = HEAP32[$$0$i$i$i$i$i$i31$i >> 2] | 0;
      if (!$301) {
       $$01$i$i$i$i$i36$i = $$0$i$i$i$i$i$i31$i;
       break;
      } else $$0$i$i$i$i$i$i31$i = $301;
     }
    }
    if (($$01$i$i$i$i$i36$i | 0) == ($84 | 0)) {
     label = 123;
     break L147;
    } else {
     $243 = $$01$i$i$i$i$i36$i;
     $602 = $$01$i$i$i$i$i36$i;
    }
   }
   $582 = ___cxa_find_matching_catch() | 0;
   $583 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$236 >> 2] | 0);
   $$0$i = $583;
   $$01$i = $582;
  } while (0);
  if ((label | 0) == 123) {
   __THREW__ = 0;
   $308 = invoke_ii(67, 40) | 0;
   $309 = __THREW__;
   __THREW__ = 0;
   L196 : do if ($309 & 1) label = 216; else {
    HEAP32[$308 >> 2] = 3640;
    $311 = $308 + 8 | 0;
    $312 = $308 + 12 | 0;
    HEAP32[$312 >> 2] = 0;
    $313 = $308 + 16 | 0;
    HEAP32[$313 >> 2] = 0;
    HEAP32[$311 >> 2] = $312;
    $$idx$val2$i$i$i$i$i = HEAP32[$0 >> 2] | 0;
    L198 : do if (($$idx$val2$i$i$i$i$i | 0) == ($159 | 0)) label = 154; else {
     $315 = $312;
     $320 = $$idx$val2$i$i$i$i$i;
     $603 = $$idx$val2$i$i$i$i$i;
     while (1) {
      __THREW__ = 0;
      $316 = invoke_ii(67, 24) | 0;
      $317 = __THREW__;
      __THREW__ = 0;
      if ($317 & 1) break;
      $322 = $320 + 16 | 0;
      $324 = HEAP32[$322 >> 2] | 0;
      $327 = HEAP32[$322 + 4 >> 2] | 0;
      $328 = $316 + 16 | 0;
      HEAP32[$328 >> 2] = $324;
      HEAP32[$328 + 4 >> 2] = $327;
      $332 = $324;
      $$pre$i$i$i$i$i$i$i$i$i = HEAP32[$312 >> 2] | 0;
      do if ((HEAP32[$311 >> 2] | 0) == ($312 | 0)) {
       $347 = $315;
       label = 132;
      } else {
       $334 = ($$pre$i$i$i$i$i$i$i$i$i | 0) == 0;
       if ($334) {
        $$0$i$i$i$i$i$i$i$i$i$i$i = $312;
        while (1) {
         $339 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$339 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i$i$i$i = $339; else {
          $$01$i$i$i$i$i$i$i$i$i$i$i = $339;
          break;
         }
        }
       } else {
        $$0$i$i$i$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
        while (1) {
         $336 = HEAP32[$$0$i$i$i$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
         if (!$336) {
          $$01$i$i$i$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i$i$i$i$i$i$i = $336;
        }
       }
       if ((HEAP32[$$01$i$i$i$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $332 >>> 0) {
        $347 = $$01$i$i$i$i$i$i$i$i$i$i$i;
        label = 132;
       } else {
        if ($334) {
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $315;
         $$0$i$i$i$i1$i$i$i$i$i = $312;
         $362 = $315;
         break;
        } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $$pre$i$i$i$i$i$i$i$i$i;
        while (1) {
         $$idx2$val$i22$i$i$i$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 16 >> 2] | 0;
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 > $332 >>> 0) {
          $350 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i$i$i$i >> 2] | 0;
          if (!$350) {
           $$lcssa227 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa225 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
           label = 138;
           break;
          } else {
           $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $350;
           continue;
          }
         }
         if ($$idx2$val$i22$i$i$i$i$i$i$i$i$i >>> 0 >= $332 >>> 0) {
          $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
          label = 142;
          break;
         }
         $354 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i + 4 | 0;
         $355 = HEAP32[$354 >> 2] | 0;
         if (!$355) {
          $$lcssa226 = $354;
          $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa224 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i;
          label = 141;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i$i$i$i = $355;
        }
        if ((label | 0) == 138) {
         label = 0;
         $352 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa225;
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $352;
         $$0$i$i$i$i1$i$i$i$i$i = $$lcssa227;
         $362 = $352;
         break;
        } else if ((label | 0) == 141) {
         label = 0;
         $357 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa224;
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $357;
         $$0$i$i$i$i1$i$i$i$i$i = $$lcssa226;
         $362 = $357;
         break;
        } else if ((label | 0) == 142) {
         label = 0;
         $358 = $__nd$0$i20$i$i$i$i$in$i$i$i$i$i$lcssa;
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $358;
         $$0$i$i$i$i1$i$i$i$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
         $362 = $358;
         break;
        }
       }
      } while (0);
      do if ((label | 0) == 132) {
       label = 0;
       if (!$$pre$i$i$i$i$i$i$i$i$i) {
        HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $315;
        $$0$i$i$i$i1$i$i$i$i$i = $312;
        $362 = $315;
        break;
       } else {
        HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $347;
        $$0$i$i$i$i1$i$i$i$i$i = $347 + 4 | 0;
        $362 = $347;
        break;
       }
      } while (0);
      $359 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
      if (!$359) {
       HEAP32[$316 >> 2] = 0;
       HEAP32[$316 + 4 >> 2] = 0;
       HEAP32[$316 + 8 >> 2] = $362;
       HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] = $316;
       $366 = HEAP32[HEAP32[$311 >> 2] >> 2] | 0;
       if (!$366) $370 = $316; else {
        HEAP32[$311 >> 2] = $366;
        $370 = HEAP32[$$0$i$i$i$i1$i$i$i$i$i >> 2] | 0;
       }
       __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$312 >> 2] | 0, $370);
       HEAP32[$313 >> 2] = (HEAP32[$313 >> 2] | 0) + 1;
       $375 = $320;
      } else if (($359 | 0) == ($316 | 0)) $375 = $603; else {
       __ZdlPv($316);
       $375 = $603;
      }
      $376 = HEAP32[$375 + 4 >> 2] | 0;
      if (!$376) {
       $$0$i$i$i$i$i$i$i$i43 = $375;
       while (1) {
        $381 = HEAP32[$$0$i$i$i$i$i$i$i$i43 + 8 >> 2] | 0;
        if ((HEAP32[$381 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i43 | 0)) {
         $$01$i$i$i$i$i$i$i$i46 = $381;
         break;
        } else $$0$i$i$i$i$i$i$i$i43 = $381;
       }
      } else {
       $$0$i$i$i$i$i$i$i$i39$i = $376;
       while (1) {
        $378 = HEAP32[$$0$i$i$i$i$i$i$i$i39$i >> 2] | 0;
        if (!$378) {
         $$01$i$i$i$i$i$i$i$i46 = $$0$i$i$i$i$i$i$i$i39$i;
         break;
        } else $$0$i$i$i$i$i$i$i$i39$i = $378;
       }
      }
      if (($$01$i$i$i$i$i$i$i$i46 | 0) == ($159 | 0)) {
       label = 154;
       break L198;
      } else {
       $320 = $$01$i$i$i$i$i$i$i$i46;
       $603 = $$01$i$i$i$i$i$i$i$i46;
      }
     }
     $461 = ___cxa_find_matching_catch() | 0;
     $462 = tempRet0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($311, HEAP32[$312 >> 2] | 0);
     $$0$i$i$i = $462;
     $$01$i$i$i = $461;
    } while (0);
    L245 : do if ((label | 0) == 154) {
     HEAP32[$308 + 20 >> 2] = $args1;
     HEAP32[$308 + 24 >> 2] = $args2;
     $387 = $308 + 28 | 0;
     $388 = $308 + 32 | 0;
     HEAP32[$388 >> 2] = 0;
     $389 = $308 + 36 | 0;
     HEAP32[$389 >> 2] = 0;
     HEAP32[$387 >> 2] = $388;
     $$idx$val2$i$i4$i$i$i = HEAP32[$1 >> 2] | 0;
     L247 : do if (($$idx$val2$i$i4$i$i$i | 0) != ($236 | 0)) {
      $391 = $388;
      $396 = $$idx$val2$i$i4$i$i$i;
      $604 = $$idx$val2$i$i4$i$i$i;
      while (1) {
       __THREW__ = 0;
       $392 = invoke_ii(67, 24) | 0;
       $393 = __THREW__;
       __THREW__ = 0;
       if ($393 & 1) break;
       $398 = $396 + 16 | 0;
       $400 = HEAP32[$398 >> 2] | 0;
       $403 = HEAP32[$398 + 4 >> 2] | 0;
       $404 = $392 + 16 | 0;
       HEAP32[$404 >> 2] = $400;
       HEAP32[$404 + 4 >> 2] = $403;
       $408 = $400;
       $$pre$i$i$i$i$i$i9$i$i$i = HEAP32[$388 >> 2] | 0;
       do if ((HEAP32[$387 >> 2] | 0) == ($388 | 0)) {
        $423 = $391;
        label = 162;
       } else {
        $410 = ($$pre$i$i$i$i$i$i9$i$i$i | 0) == 0;
        if ($410) {
         $$0$i$i$i$i$i$i$i$i13$i$i$i = $388;
         while (1) {
          $415 = HEAP32[$$0$i$i$i$i$i$i$i$i13$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$415 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i13$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i13$i$i$i = $415; else {
           $$01$i$i$i$i$i$i$i$i16$i$i$i = $415;
           break;
          }
         }
        } else {
         $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
         while (1) {
          $412 = HEAP32[$$0$i$i$i$i$i$i$i$i$i11$i$i$i + 4 >> 2] | 0;
          if (!$412) {
           $$01$i$i$i$i$i$i$i$i16$i$i$i = $$0$i$i$i$i$i$i$i$i$i11$i$i$i;
           break;
          } else $$0$i$i$i$i$i$i$i$i$i11$i$i$i = $412;
         }
        }
        if ((HEAP32[$$01$i$i$i$i$i$i$i$i16$i$i$i + 16 >> 2] | 0) >>> 0 < $408 >>> 0) {
         $423 = $$01$i$i$i$i$i$i$i$i16$i$i$i;
         label = 162;
        } else {
         if ($410) {
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $391;
          $$0$i$i$i$i1$i$i25$i$i$i = $388;
          $438 = $391;
          break;
         } else $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i = $$pre$i$i$i$i$i$i9$i$i$i;
         while (1) {
          $$idx2$val$i22$i$i$i$i$i$i23$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i21$i$i$i + 16 >> 2] | 0;
          if ($$idx2$val$i22$i$i$i$i$i$i23$i$i$i >>> 0 > $408 >>> 0) {
           $426 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i21$i$i$i >> 2] | 0;
           if (!$426) {
            $$lcssa223 = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i;
            $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa221 = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i;
            label = 168;
            break;
           } else {
            $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i = $426;
            continue;
           }
          }
          if ($$idx2$val$i22$i$i$i$i$i$i23$i$i$i >>> 0 >= $408 >>> 0) {
           $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i;
           label = 172;
           break;
          }
          $430 = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i + 4 | 0;
          $431 = HEAP32[$430 >> 2] | 0;
          if (!$431) {
           $$lcssa222 = $430;
           $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa220 = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i;
           label = 171;
           break;
          } else $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i = $431;
         }
         if ((label | 0) == 168) {
          label = 0;
          $428 = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa221;
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $428;
          $$0$i$i$i$i1$i$i25$i$i$i = $$lcssa223;
          $438 = $428;
          break;
         } else if ((label | 0) == 171) {
          label = 0;
          $433 = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa220;
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $433;
          $$0$i$i$i$i1$i$i25$i$i$i = $$lcssa222;
          $438 = $433;
          break;
         } else if ((label | 0) == 172) {
          label = 0;
          $434 = $__nd$0$i20$i$i$i$i$in$i$i21$i$i$i$lcssa;
          HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $434;
          $$0$i$i$i$i1$i$i25$i$i$i = $__parent$sroa$0$i$i$i$i$i2$i$i$i;
          $438 = $434;
          break;
         }
        }
       } while (0);
       do if ((label | 0) == 162) {
        label = 0;
        if (!$$pre$i$i$i$i$i$i9$i$i$i) {
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $391;
         $$0$i$i$i$i1$i$i25$i$i$i = $388;
         $438 = $391;
         break;
        } else {
         HEAP32[$__parent$sroa$0$i$i$i$i$i2$i$i$i >> 2] = $423;
         $$0$i$i$i$i1$i$i25$i$i$i = $423 + 4 | 0;
         $438 = $423;
         break;
        }
       } while (0);
       $435 = HEAP32[$$0$i$i$i$i1$i$i25$i$i$i >> 2] | 0;
       if (!$435) {
        HEAP32[$392 >> 2] = 0;
        HEAP32[$392 + 4 >> 2] = 0;
        HEAP32[$392 + 8 >> 2] = $438;
        HEAP32[$$0$i$i$i$i1$i$i25$i$i$i >> 2] = $392;
        $442 = HEAP32[HEAP32[$387 >> 2] >> 2] | 0;
        if (!$442) $446 = $392; else {
         HEAP32[$387 >> 2] = $442;
         $446 = HEAP32[$$0$i$i$i$i1$i$i25$i$i$i >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$388 >> 2] | 0, $446);
        HEAP32[$389 >> 2] = (HEAP32[$389 >> 2] | 0) + 1;
        $451 = $396;
       } else if (($435 | 0) == ($392 | 0)) $451 = $604; else {
        __ZdlPv($392);
        $451 = $604;
       }
       $452 = HEAP32[$451 + 4 >> 2] | 0;
       if (!$452) {
        $$0$i$i$i$i$i33$i$i$i = $451;
        while (1) {
         $457 = HEAP32[$$0$i$i$i$i$i33$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$457 >> 2] | 0) == ($$0$i$i$i$i$i33$i$i$i | 0)) {
          $$01$i$i$i$i$i36$i$i$i = $457;
          break;
         } else $$0$i$i$i$i$i33$i$i$i = $457;
        }
       } else {
        $$0$i$i$i$i$i$i31$i$i$i = $452;
        while (1) {
         $454 = HEAP32[$$0$i$i$i$i$i$i31$i$i$i >> 2] | 0;
         if (!$454) {
          $$01$i$i$i$i$i36$i$i$i = $$0$i$i$i$i$i$i31$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i31$i$i$i = $454;
        }
       }
       if (($$01$i$i$i$i$i36$i$i$i | 0) == ($236 | 0)) break L247; else {
        $396 = $$01$i$i$i$i$i36$i$i$i;
        $604 = $$01$i$i$i$i$i36$i$i$i;
       }
      }
      $464 = ___cxa_find_matching_catch() | 0;
      $465 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($387, HEAP32[$388 >> 2] | 0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($311, HEAP32[$312 >> 2] | 0);
      $$0$i$i$i = $465;
      $$01$i$i$i = $464;
      break L245;
     } while (0);
     $468 = $this + 20 | 0;
     $469 = $308;
     $470 = $this + 24 | 0;
     $471 = HEAP32[$470 >> 2] | 0;
     $472 = $this + 28 | 0;
     $473 = HEAP32[$472 >> 2] | 0;
     if ($471 >>> 0 < $473 >>> 0) {
      HEAP32[$471 >> 2] = $469;
      $476 = (HEAP32[$470 >> 2] | 0) + 4 | 0;
      HEAP32[$470 >> 2] = $476;
      $$idx$pre$phi$i$iZZ2D = $468;
      $$idx1$val$i$i = $476;
     } else {
      $this$idx2$val$i$i$i$i = HEAP32[$468 >> 2] | 0;
      $478 = $this$idx2$val$i$i$i$i;
      $481 = ($471 - $478 >> 2) + 1 | 0;
      if ($481 >>> 0 > 1073741823) {
       __THREW__ = 0;
       invoke_vi(175, $468 | 0);
       $483 = __THREW__;
       __THREW__ = 0;
       if ($483 & 1) {
        label = 216;
        break L196;
       }
       $$idx$val$i$i$pre$i$i$i$i = HEAP32[$468 >> 2] | 0;
       $$idx1$val$i$i$i$i$i$i = HEAP32[$472 >> 2] | 0;
       $488 = $$idx$val$i$i$pre$i$i$i$i;
       $516 = $$idx$val$i$i$pre$i$i$i$i;
      } else {
       $$idx1$val$i$i$i$i$i$i = $473;
       $488 = $this$idx2$val$i$i$i$i;
       $516 = $478;
      }
      $487 = $488;
      $489 = $$idx1$val$i$i$i$i$i$i - $487 | 0;
      if ($489 >> 2 >>> 0 < 536870911) {
       $495 = $489 >> 1;
       $497 = $495 >>> 0 < $481 >>> 0 ? $481 : $495;
       $499 = (HEAP32[$470 >> 2] | 0) - $487 | 0;
       $500 = $499 >> 2;
       if (!$497) {
        $$0$i8$i$i$i$i = 0;
        $507 = 0;
        $508 = $500;
        $514 = $499;
       } else {
        $$0$i7$i$i$i$i = $497;
        $605 = $500;
        $606 = $499;
        label = 194;
       }
      } else {
       $493 = (HEAP32[$470 >> 2] | 0) - $487 | 0;
       $$0$i7$i$i$i$i = 1073741823;
       $605 = $493 >> 2;
       $606 = $493;
       label = 194;
      }
      if ((label | 0) == 194) {
       __THREW__ = 0;
       $503 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
       $504 = __THREW__;
       __THREW__ = 0;
       if ($504 & 1) {
        label = 216;
        break L196;
       }
       $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
       $507 = $503;
       $508 = $605;
       $514 = $606;
      }
      HEAP32[$507 + ($508 << 2) >> 2] = $469;
      $511 = $507 + ($508 + 1 << 2) | 0;
      _memcpy($507 | 0, $488 | 0, $514 | 0) | 0;
      HEAP32[$468 >> 2] = $507;
      HEAP32[$470 >> 2] = $511;
      HEAP32[$472 >> 2] = $507 + ($$0$i8$i$i$i$i << 2);
      if (!$516) {
       $$idx$pre$phi$i$iZZ2D = $468;
       $$idx1$val$i$i = $511;
      } else {
       __ZdlPv($516);
       $$idx$pre$phi$i$iZZ2D = $468;
       $$idx1$val$i$i = HEAP32[$470 >> 2] | 0;
      }
     }
     $518 = $this + 16 | 0;
     HEAP8[$308 + 4 >> 0] = HEAP8[$518 >> 0] | 0;
     $525 = $this + 36 | 0;
     HEAP32[$525 >> 2] = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$236 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$159 >> 2] | 0);
     $528 = HEAP32[$525 >> 2] | 0;
     if ($528 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
      $589 = $agg$result + 8 | 0;
      HEAP32[$589 >> 2] = $308;
      $590 = HEAP32[$84 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $590);
      $591 = HEAP32[$6 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $591);
      STACKTOP = sp;
      return;
     }
     $534 = $this + 32 | 0;
     if (!(+($528 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$534 >> 2] | 0) >>> 0))) {
      $589 = $agg$result + 8 | 0;
      HEAP32[$589 >> 2] = $308;
      $590 = HEAP32[$84 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $590);
      $591 = HEAP32[$6 >> 2] | 0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $591);
      STACKTOP = sp;
      return;
     }
     __THREW__ = 0;
     invoke_vii(62, $this | 0, $308 | 0);
     $539 = __THREW__;
     __THREW__ = 0;
     do if (!($539 & 1)) {
      __THREW__ = 0;
      invoke_vii(63, $this + 56 | 0, $this | 0);
      $542 = __THREW__;
      __THREW__ = 0;
      if (!($542 & 1)) {
       if (HEAP32[$this + 40 >> 2] & 16) {
        __THREW__ = 0;
        invoke_vii(62, $this | 0, HEAP32[$this + 48 >> 2] | 0);
        $550 = __THREW__;
        __THREW__ = 0;
        if ($550 & 1) break;
       }
       $553 = (HEAP8[$518 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$518 >> 0] = $553;
       $$idx6$i$i = $this + 20 | 0;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$470 >> 2] | 0;
       L323 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx5$val19$i$i = $$idx7$val12$i$i;
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $560 = $553;
        $i$013$i$i = 0;
        while (1) {
         $556 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$556 + 4 >> 0] | 0) == $560 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx5$val19$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$556) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx5$val19$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$556 >> 2] | 0) + 4 >> 2] & 255]($556);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$470 >> 2] | 0;
          }
          $569 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($569 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $574 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($569 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $574 = HEAP32[$470 >> 2] | 0;
          }
          $scevgep4$i$i$i$i$i = $574 + -4 | 0;
          HEAP32[$470 >> 2] = $scevgep4$i$i$i$i$i;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $576 = $i$1$i$i + 1 | 0;
         $580 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($576 >>> 0 >= $580 >>> 0) {
          $$lcssa$i$i = $580;
          break L323;
         }
         $$idx5$val19$i$i = $$idx7$val$i$i;
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $560 = HEAP8[$518 >> 0] | 0;
         $i$013$i$i = $576;
        }
       } while (0);
       HEAP32[$525 >> 2] = $$lcssa$i$i;
       HEAP32[$534 >> 2] = $$lcssa$i$i;
       $589 = $agg$result + 8 | 0;
       HEAP32[$589 >> 2] = $308;
       $590 = HEAP32[$84 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, $590);
       $591 = HEAP32[$6 >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $591);
       STACKTOP = sp;
       return;
      }
     } while (0);
     $595 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body49$index8Z2D = tempRet0;
     $eh$lpad$body49$indexZ2D = $595;
     break L145;
    } while (0);
    __ZdlPv($308);
    $eh$lpad$body43$i$index2Z2D = $$0$i$i$i;
    $eh$lpad$body43$i$indexZ2D = $$01$i$i$i;
   } while (0);
   if ((label | 0) == 216) {
    $585 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body43$i$index2Z2D = tempRet0;
    $eh$lpad$body43$i$indexZ2D = $585;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$236 >> 2] | 0);
   $$0$i = $eh$lpad$body43$i$index2Z2D;
   $$01$i = $eh$lpad$body43$i$indexZ2D;
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$159 >> 2] | 0);
  $eh$lpad$body49$index8Z2D = $$0$i;
  $eh$lpad$body49$indexZ2D = $$01$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($3, HEAP32[$84 >> 2] | 0);
 $$0 = $eh$lpad$body49$index8Z2D;
 $$01 = $eh$lpad$body49$indexZ2D;
 $598 = HEAP32[$6 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($2, $598);
 ___resumeException($$01 | 0);
}

function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$3$i = 0, $$lcssa = 0, $$lcssa211 = 0, $$lcssa215 = 0, $$lcssa216 = 0, $$lcssa217 = 0, $$lcssa219 = 0, $$lcssa222 = 0, $$lcssa224 = 0, $$lcssa226 = 0, $$lcssa228 = 0, $$lcssa230 = 0, $$lcssa232 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i23$iZ2D = 0, $$pre$phi$i26Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi58$i$iZ2D = 0, $$pre$phiZ2D = 0, $$rsize$3$i = 0, $$sum$i19$i = 0, $$sum2$i21$i = 0, $$sum3132$i$i = 0, $$sum67$i$i = 0, $100 = 0, $1003 = 0, $1009 = 0, $1012 = 0, $1013 = 0, $1020 = 0, $1032 = 0, $1037 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1053 = 0, $1055 = 0, $1056 = 0, $106 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $13 = 0, $132 = 0, $138 = 0, $14 = 0, $141 = 0, $144 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $154 = 0, $156 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $201 = 0, $207 = 0, $214 = 0, $217 = 0, $225 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $25 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $276 = 0, $28 = 0, $285 = 0, $286 = 0, $290 = 0, $300 = 0, $303 = 0, $307 = 0, $309 = 0, $31 = 0, $310 = 0, $312 = 0, $314 = 0, $316 = 0, $318 = 0, $320 = 0, $322 = 0, $324 = 0, $334 = 0, $335 = 0, $337 = 0, $34 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $38 = 0, $380 = 0, $389 = 0, $394 = 0, $398 = 0, $4 = 0, $404 = 0, $41 = 0, $411 = 0, $414 = 0, $422 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $46 = 0, $463 = 0, $467 = 0, $468 = 0, $47 = 0, $475 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $5 = 0, $500 = 0, $501 = 0, $509 = 0, $51 = 0, $511 = 0, $512 = 0, $522 = 0, $526 = 0, $528 = 0, $529 = 0, $53 = 0, $538 = 0, $539 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $545 = 0, $547 = 0, $548 = 0, $55 = 0, $554 = 0, $556 = 0, $558 = 0, $565 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $577 = 0, $578 = 0, $581 = 0, $585 = 0, $586 = 0, $589 = 0, $59 = 0, $591 = 0, $595 = 0, $597 = 0, $6 = 0, $601 = 0, $605 = 0, $61 = 0, $614 = 0, $615 = 0, $621 = 0, $623 = 0, $625 = 0, $628 = 0, $630 = 0, $634 = 0, $635 = 0, $64 = 0, $641 = 0, $646 = 0, $648 = 0, $65 = 0, $653 = 0, $654 = 0, $655 = 0, $66 = 0, $669 = 0, $67 = 0, $671 = 0, $676 = 0, $678 = 0, $68 = 0, $683 = 0, $685 = 0, $69 = 0, $695 = 0, $699 = 0, $7 = 0, $70 = 0, $704 = 0, $707 = 0, $712 = 0, $713 = 0, $717 = 0, $718 = 0, $723 = 0, $729 = 0, $734 = 0, $737 = 0, $738 = 0, $741 = 0, $743 = 0, $745 = 0, $748 = 0, $759 = 0, $764 = 0, $766 = 0, $769 = 0, $77 = 0, $771 = 0, $774 = 0, $777 = 0, $778 = 0, $780 = 0, $781 = 0, $783 = 0, $784 = 0, $786 = 0, $787 = 0, $792 = 0, $793 = 0, $80 = 0, $802 = 0, $807 = 0, $81 = 0, $811 = 0, $817 = 0, $825 = 0, $831 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $84 = 0, $840 = 0, $841 = 0, $847 = 0, $852 = 0, $853 = 0, $856 = 0, $858 = 0, $861 = 0, $866 = 0, $872 = 0, $876 = 0, $877 = 0, $884 = 0, $89 = 0, $896 = 0, $90 = 0, $901 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $918 = 0, $92 = 0, $921 = 0, $922 = 0, $927 = 0, $93 = 0, $933 = 0, $934 = 0, $936 = 0, $937 = 0, $94 = 0, $940 = 0, $945 = 0, $947 = 0, $95 = 0, $952 = 0, $953 = 0, $957 = 0, $963 = 0, $968 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $977 = 0, $978 = 0, $984 = 0, $989 = 0, $99 = 0, $990 = 0, $993 = 0, $995 = 0, $998 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$029$i = 0, $K2$07$i$i = 0, $K8$051$i$i = 0, $R$0$i = 0, $R$0$i$i = 0, $R$0$i$i$lcssa = 0, $R$0$i$lcssa = 0, $R$0$i18 = 0, $R$0$i18$lcssa = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i20 = 0, $RP$0$i = 0, $RP$0$i$i = 0, $RP$0$i$i$lcssa = 0, $RP$0$i$lcssa = 0, $RP$0$i17 = 0, $RP$0$i17$lcssa = 0, $T$0$lcssa$i = 0, $T$0$lcssa$i$i = 0, $T$0$lcssa$i25$i = 0, $T$028$i = 0, $T$028$i$lcssa = 0, $T$050$i$i = 0, $T$050$i$i$lcssa = 0, $T$06$i$i = 0, $T$06$i$i$lcssa = 0, $br$0$ph$i = 0, $i$02$i$i = 0, $idx$0$i = 0, $mem$0 = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i15 = 0, $rsize$1$i = 0, $rsize$2$i = 0, $rsize$3$lcssa$i = 0, $rsize$331$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$084$i = 0, $sp$084$i$lcssa = 0, $sp$183$i = 0, $sp$183$i$lcssa = 0, $ssize$0$$i = 0, $ssize$0$i = 0, $ssize$1$ph$i = 0, $ssize$2$i = 0, $t$0$i = 0, $t$0$i14 = 0, $t$1$i = 0, $t$2$ph$i = 0, $t$2$v$3$i = 0, $t$230$i = 0, $tbase$255$i = 0, $tsize$0$ph$i = 0, $tsize$0323944$i = 0, $tsize$1$i = 0, $tsize$254$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i16 = 0, $v$1$i = 0, $v$2$i = 0, $v$3$lcssa$i = 0, $v$3$ph$i = 0, $v$332$i = 0, label = 0, $957$looptemp = 0;
 do if ($bytes >>> 0 < 245) {
  $4 = $bytes >>> 0 < 11 ? 16 : $bytes + 11 & -8;
  $5 = $4 >>> 3;
  $6 = HEAP32[1084] | 0;
  $7 = $6 >>> $5;
  if ($7 & 3) {
   $12 = ($7 & 1 ^ 1) + $5 | 0;
   $13 = $12 << 1;
   $14 = 4376 + ($13 << 2) | 0;
   $15 = 4376 + ($13 + 2 << 2) | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($14 | 0) == ($18 | 0)) HEAP32[1084] = $6 & ~(1 << $12); else {
    if ($18 >>> 0 >= (HEAP32[1088] | 0) >>> 0) {
     $25 = $18 + 12 | 0;
     if ((HEAP32[$25 >> 2] | 0) == ($16 | 0)) {
      HEAP32[$25 >> 2] = $14;
      HEAP32[$15 >> 2] = $18;
      break;
     }
    }
    _abort();
   } while (0);
   $28 = $12 << 3;
   HEAP32[$16 + 4 >> 2] = $28 | 3;
   $31 = $16 + ($28 | 4) | 0;
   HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1;
   $mem$0 = $17;
   break;
  }
  $34 = HEAP32[1086] | 0;
  if ($4 >>> 0 > $34 >>> 0) {
   if ($7) {
    $38 = 2 << $5;
    $41 = $7 << $5 & ($38 | 0 - $38);
    $44 = ($41 & 0 - $41) + -1 | 0;
    $46 = $44 >>> 12 & 16;
    $47 = $44 >>> $46;
    $49 = $47 >>> 5 & 8;
    $51 = $47 >>> $49;
    $53 = $51 >>> 2 & 4;
    $55 = $51 >>> $53;
    $57 = $55 >>> 1 & 2;
    $59 = $55 >>> $57;
    $61 = $59 >>> 1 & 1;
    $64 = ($49 | $46 | $53 | $57 | $61) + ($59 >>> $61) | 0;
    $65 = $64 << 1;
    $66 = 4376 + ($65 << 2) | 0;
    $67 = 4376 + ($65 + 2 << 2) | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    $69 = $68 + 8 | 0;
    $70 = HEAP32[$69 >> 2] | 0;
    do if (($66 | 0) == ($70 | 0)) {
     HEAP32[1084] = $6 & ~(1 << $64);
     $89 = $34;
    } else {
     if ($70 >>> 0 >= (HEAP32[1088] | 0) >>> 0) {
      $77 = $70 + 12 | 0;
      if ((HEAP32[$77 >> 2] | 0) == ($68 | 0)) {
       HEAP32[$77 >> 2] = $66;
       HEAP32[$67 >> 2] = $70;
       $89 = HEAP32[1086] | 0;
       break;
      }
     }
     _abort();
    } while (0);
    $80 = $64 << 3;
    $81 = $80 - $4 | 0;
    HEAP32[$68 + 4 >> 2] = $4 | 3;
    $84 = $68 + $4 | 0;
    HEAP32[$68 + ($4 | 4) >> 2] = $81 | 1;
    HEAP32[$68 + $80 >> 2] = $81;
    if ($89) {
     $90 = HEAP32[1089] | 0;
     $91 = $89 >>> 3;
     $92 = $91 << 1;
     $93 = 4376 + ($92 << 2) | 0;
     $94 = HEAP32[1084] | 0;
     $95 = 1 << $91;
     if (!($94 & $95)) {
      HEAP32[1084] = $94 | $95;
      $$pre$phiZ2D = 4376 + ($92 + 2 << 2) | 0;
      $F4$0 = $93;
     } else {
      $99 = 4376 + ($92 + 2 << 2) | 0;
      $100 = HEAP32[$99 >> 2] | 0;
      if ($100 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
       $$pre$phiZ2D = $99;
       $F4$0 = $100;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $90;
     HEAP32[$F4$0 + 12 >> 2] = $90;
     HEAP32[$90 + 8 >> 2] = $F4$0;
     HEAP32[$90 + 12 >> 2] = $93;
    }
    HEAP32[1086] = $81;
    HEAP32[1089] = $84;
    $mem$0 = $69;
    break;
   }
   $106 = HEAP32[1085] | 0;
   if (!$106) {
    $nb$0 = $4;
    label = 154;
   } else {
    $110 = ($106 & 0 - $106) + -1 | 0;
    $112 = $110 >>> 12 & 16;
    $113 = $110 >>> $112;
    $115 = $113 >>> 5 & 8;
    $117 = $113 >>> $115;
    $119 = $117 >>> 2 & 4;
    $121 = $117 >>> $119;
    $123 = $121 >>> 1 & 2;
    $125 = $121 >>> $123;
    $127 = $125 >>> 1 & 1;
    $132 = HEAP32[4640 + (($115 | $112 | $119 | $123 | $127) + ($125 >>> $127) << 2) >> 2] | 0;
    $rsize$0$i = (HEAP32[$132 + 4 >> 2] & -8) - $4 | 0;
    $t$0$i = $132;
    $v$0$i = $132;
    while (1) {
     $138 = HEAP32[$t$0$i + 16 >> 2] | 0;
     if (!$138) {
      $141 = HEAP32[$t$0$i + 20 >> 2] | 0;
      if (!$141) {
       $rsize$0$i$lcssa = $rsize$0$i;
       $v$0$i$lcssa = $v$0$i;
       break;
      } else $144 = $141;
     } else $144 = $138;
     $147 = (HEAP32[$144 + 4 >> 2] & -8) - $4 | 0;
     $148 = $147 >>> 0 < $rsize$0$i >>> 0;
     $rsize$0$i = $148 ? $147 : $rsize$0$i;
     $t$0$i = $144;
     $v$0$i = $148 ? $144 : $v$0$i;
    }
    $149 = HEAP32[1088] | 0;
    if ($v$0$i$lcssa >>> 0 >= $149 >>> 0) {
     $151 = $v$0$i$lcssa + $4 | 0;
     if ($v$0$i$lcssa >>> 0 < $151 >>> 0) {
      $154 = HEAP32[$v$0$i$lcssa + 24 >> 2] | 0;
      $156 = HEAP32[$v$0$i$lcssa + 12 >> 2] | 0;
      do if (($156 | 0) == ($v$0$i$lcssa | 0)) {
       $167 = $v$0$i$lcssa + 20 | 0;
       $168 = HEAP32[$167 >> 2] | 0;
       if (!$168) {
        $170 = $v$0$i$lcssa + 16 | 0;
        $171 = HEAP32[$170 >> 2] | 0;
        if (!$171) {
         $R$1$i = 0;
         break;
        } else {
         $R$0$i = $171;
         $RP$0$i = $170;
        }
       } else {
        $R$0$i = $168;
        $RP$0$i = $167;
       }
       while (1) {
        $173 = $R$0$i + 20 | 0;
        $174 = HEAP32[$173 >> 2] | 0;
        if ($174) {
         $R$0$i = $174;
         $RP$0$i = $173;
         continue;
        }
        $176 = $R$0$i + 16 | 0;
        $177 = HEAP32[$176 >> 2] | 0;
        if (!$177) {
         $R$0$i$lcssa = $R$0$i;
         $RP$0$i$lcssa = $RP$0$i;
         break;
        } else {
         $R$0$i = $177;
         $RP$0$i = $176;
        }
       }
       if ($RP$0$i$lcssa >>> 0 < $149 >>> 0) _abort(); else {
        HEAP32[$RP$0$i$lcssa >> 2] = 0;
        $R$1$i = $R$0$i$lcssa;
        break;
       }
      } else {
       $159 = HEAP32[$v$0$i$lcssa + 8 >> 2] | 0;
       if ($159 >>> 0 >= $149 >>> 0) {
        $161 = $159 + 12 | 0;
        if ((HEAP32[$161 >> 2] | 0) == ($v$0$i$lcssa | 0)) {
         $164 = $156 + 8 | 0;
         if ((HEAP32[$164 >> 2] | 0) == ($v$0$i$lcssa | 0)) {
          HEAP32[$161 >> 2] = $156;
          HEAP32[$164 >> 2] = $159;
          $R$1$i = $156;
          break;
         }
        }
       }
       _abort();
      } while (0);
      do if ($154) {
       $182 = HEAP32[$v$0$i$lcssa + 28 >> 2] | 0;
       $183 = 4640 + ($182 << 2) | 0;
       if (($v$0$i$lcssa | 0) == (HEAP32[$183 >> 2] | 0)) {
        HEAP32[$183 >> 2] = $R$1$i;
        if (!$R$1$i) {
         HEAP32[1085] = HEAP32[1085] & ~(1 << $182);
         break;
        }
       } else {
        if ($154 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
        $192 = $154 + 16 | 0;
        if ((HEAP32[$192 >> 2] | 0) == ($v$0$i$lcssa | 0)) HEAP32[$192 >> 2] = $R$1$i; else HEAP32[$154 + 20 >> 2] = $R$1$i;
        if (!$R$1$i) break;
       }
       $197 = HEAP32[1088] | 0;
       if ($R$1$i >>> 0 < $197 >>> 0) _abort();
       HEAP32[$R$1$i + 24 >> 2] = $154;
       $201 = HEAP32[$v$0$i$lcssa + 16 >> 2] | 0;
       do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
        HEAP32[$R$1$i + 16 >> 2] = $201;
        HEAP32[$201 + 24 >> 2] = $R$1$i;
        break;
       } while (0);
       $207 = HEAP32[$v$0$i$lcssa + 20 >> 2] | 0;
       if ($207) if ($207 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
        HEAP32[$R$1$i + 20 >> 2] = $207;
        HEAP32[$207 + 24 >> 2] = $R$1$i;
        break;
       }
      } while (0);
      if ($rsize$0$i$lcssa >>> 0 < 16) {
       $214 = $rsize$0$i$lcssa + $4 | 0;
       HEAP32[$v$0$i$lcssa + 4 >> 2] = $214 | 3;
       $217 = $v$0$i$lcssa + ($214 + 4) | 0;
       HEAP32[$217 >> 2] = HEAP32[$217 >> 2] | 1;
      } else {
       HEAP32[$v$0$i$lcssa + 4 >> 2] = $4 | 3;
       HEAP32[$v$0$i$lcssa + ($4 | 4) >> 2] = $rsize$0$i$lcssa | 1;
       HEAP32[$v$0$i$lcssa + ($rsize$0$i$lcssa + $4) >> 2] = $rsize$0$i$lcssa;
       $225 = HEAP32[1086] | 0;
       if ($225) {
        $227 = HEAP32[1089] | 0;
        $228 = $225 >>> 3;
        $229 = $228 << 1;
        $230 = 4376 + ($229 << 2) | 0;
        $231 = HEAP32[1084] | 0;
        $232 = 1 << $228;
        if (!($231 & $232)) {
         HEAP32[1084] = $231 | $232;
         $$pre$phi$iZ2D = 4376 + ($229 + 2 << 2) | 0;
         $F1$0$i = $230;
        } else {
         $236 = 4376 + ($229 + 2 << 2) | 0;
         $237 = HEAP32[$236 >> 2] | 0;
         if ($237 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
          $$pre$phi$iZ2D = $236;
          $F1$0$i = $237;
         }
        }
        HEAP32[$$pre$phi$iZ2D >> 2] = $227;
        HEAP32[$F1$0$i + 12 >> 2] = $227;
        HEAP32[$227 + 8 >> 2] = $F1$0$i;
        HEAP32[$227 + 12 >> 2] = $230;
       }
       HEAP32[1086] = $rsize$0$i$lcssa;
       HEAP32[1089] = $151;
      }
      $mem$0 = $v$0$i$lcssa + 8 | 0;
      break;
     }
    }
    _abort();
   }
  } else {
   $nb$0 = $4;
   label = 154;
  }
 } else if ($bytes >>> 0 > 4294967231) {
  $nb$0 = -1;
  label = 154;
 } else {
  $245 = $bytes + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[1085] | 0;
  if (!$247) {
   $nb$0 = $246;
   label = 154;
  } else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $idx$0$i = 0; else if ($246 >>> 0 > 16777215) $idx$0$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $idx$0$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[4640 + ($idx$0$i << 2) >> 2] | 0;
   L110 : do if (!$276) {
    $rsize$2$i = $249;
    $t$1$i = 0;
    $v$2$i = 0;
    label = 86;
   } else {
    $rsize$0$i15 = $249;
    $rst$0$i = 0;
    $sizebits$0$i = $246 << (($idx$0$i | 0) == 31 ? 0 : 25 - ($idx$0$i >>> 1) | 0);
    $t$0$i14 = $276;
    $v$0$i16 = 0;
    while (1) {
     $285 = HEAP32[$t$0$i14 + 4 >> 2] & -8;
     $286 = $285 - $246 | 0;
     if ($286 >>> 0 < $rsize$0$i15 >>> 0) if (($285 | 0) == ($246 | 0)) {
      $rsize$331$i = $286;
      $t$230$i = $t$0$i14;
      $v$332$i = $t$0$i14;
      label = 90;
      break L110;
     } else {
      $rsize$1$i = $286;
      $v$1$i = $t$0$i14;
     } else {
      $rsize$1$i = $rsize$0$i15;
      $v$1$i = $v$0$i16;
     }
     $290 = HEAP32[$t$0$i14 + 20 >> 2] | 0;
     $t$0$i14 = HEAP32[$t$0$i14 + 16 + ($sizebits$0$i >>> 31 << 2) >> 2] | 0;
     $rst$1$i = ($290 | 0) == 0 | ($290 | 0) == ($t$0$i14 | 0) ? $rst$0$i : $290;
     if (!$t$0$i14) {
      $rsize$2$i = $rsize$1$i;
      $t$1$i = $rst$1$i;
      $v$2$i = $v$1$i;
      label = 86;
      break;
     } else {
      $rsize$0$i15 = $rsize$1$i;
      $rst$0$i = $rst$1$i;
      $sizebits$0$i = $sizebits$0$i << 1;
      $v$0$i16 = $v$1$i;
     }
    }
   } while (0);
   if ((label | 0) == 86) {
    if (($t$1$i | 0) == 0 & ($v$2$i | 0) == 0) {
     $300 = 2 << $idx$0$i;
     $303 = $247 & ($300 | 0 - $300);
     if (!$303) {
      $nb$0 = $246;
      label = 154;
      break;
     }
     $307 = ($303 & 0 - $303) + -1 | 0;
     $309 = $307 >>> 12 & 16;
     $310 = $307 >>> $309;
     $312 = $310 >>> 5 & 8;
     $314 = $310 >>> $312;
     $316 = $314 >>> 2 & 4;
     $318 = $314 >>> $316;
     $320 = $318 >>> 1 & 2;
     $322 = $318 >>> $320;
     $324 = $322 >>> 1 & 1;
     $t$2$ph$i = HEAP32[4640 + (($312 | $309 | $316 | $320 | $324) + ($322 >>> $324) << 2) >> 2] | 0;
     $v$3$ph$i = 0;
    } else {
     $t$2$ph$i = $t$1$i;
     $v$3$ph$i = $v$2$i;
    }
    if (!$t$2$ph$i) {
     $rsize$3$lcssa$i = $rsize$2$i;
     $v$3$lcssa$i = $v$3$ph$i;
    } else {
     $rsize$331$i = $rsize$2$i;
     $t$230$i = $t$2$ph$i;
     $v$332$i = $v$3$ph$i;
     label = 90;
    }
   }
   if ((label | 0) == 90) while (1) {
    label = 0;
    $334 = (HEAP32[$t$230$i + 4 >> 2] & -8) - $246 | 0;
    $335 = $334 >>> 0 < $rsize$331$i >>> 0;
    $$rsize$3$i = $335 ? $334 : $rsize$331$i;
    $t$2$v$3$i = $335 ? $t$230$i : $v$332$i;
    $337 = HEAP32[$t$230$i + 16 >> 2] | 0;
    if ($337) {
     $rsize$331$i = $$rsize$3$i;
     $t$230$i = $337;
     $v$332$i = $t$2$v$3$i;
     label = 90;
     continue;
    }
    $t$230$i = HEAP32[$t$230$i + 20 >> 2] | 0;
    if (!$t$230$i) {
     $rsize$3$lcssa$i = $$rsize$3$i;
     $v$3$lcssa$i = $t$2$v$3$i;
     break;
    } else {
     $rsize$331$i = $$rsize$3$i;
     $v$332$i = $t$2$v$3$i;
     label = 90;
    }
   }
   if (!$v$3$lcssa$i) {
    $nb$0 = $246;
    label = 154;
   } else if ($rsize$3$lcssa$i >>> 0 < ((HEAP32[1086] | 0) - $246 | 0) >>> 0) {
    $346 = HEAP32[1088] | 0;
    if ($v$3$lcssa$i >>> 0 >= $346 >>> 0) {
     $348 = $v$3$lcssa$i + $246 | 0;
     if ($v$3$lcssa$i >>> 0 < $348 >>> 0) {
      $351 = HEAP32[$v$3$lcssa$i + 24 >> 2] | 0;
      $353 = HEAP32[$v$3$lcssa$i + 12 >> 2] | 0;
      do if (($353 | 0) == ($v$3$lcssa$i | 0)) {
       $364 = $v$3$lcssa$i + 20 | 0;
       $365 = HEAP32[$364 >> 2] | 0;
       if (!$365) {
        $367 = $v$3$lcssa$i + 16 | 0;
        $368 = HEAP32[$367 >> 2] | 0;
        if (!$368) {
         $R$1$i20 = 0;
         break;
        } else {
         $R$0$i18 = $368;
         $RP$0$i17 = $367;
        }
       } else {
        $R$0$i18 = $365;
        $RP$0$i17 = $364;
       }
       while (1) {
        $370 = $R$0$i18 + 20 | 0;
        $371 = HEAP32[$370 >> 2] | 0;
        if ($371) {
         $R$0$i18 = $371;
         $RP$0$i17 = $370;
         continue;
        }
        $373 = $R$0$i18 + 16 | 0;
        $374 = HEAP32[$373 >> 2] | 0;
        if (!$374) {
         $R$0$i18$lcssa = $R$0$i18;
         $RP$0$i17$lcssa = $RP$0$i17;
         break;
        } else {
         $R$0$i18 = $374;
         $RP$0$i17 = $373;
        }
       }
       if ($RP$0$i17$lcssa >>> 0 < $346 >>> 0) _abort(); else {
        HEAP32[$RP$0$i17$lcssa >> 2] = 0;
        $R$1$i20 = $R$0$i18$lcssa;
        break;
       }
      } else {
       $356 = HEAP32[$v$3$lcssa$i + 8 >> 2] | 0;
       if ($356 >>> 0 >= $346 >>> 0) {
        $358 = $356 + 12 | 0;
        if ((HEAP32[$358 >> 2] | 0) == ($v$3$lcssa$i | 0)) {
         $361 = $353 + 8 | 0;
         if ((HEAP32[$361 >> 2] | 0) == ($v$3$lcssa$i | 0)) {
          HEAP32[$358 >> 2] = $353;
          HEAP32[$361 >> 2] = $356;
          $R$1$i20 = $353;
          break;
         }
        }
       }
       _abort();
      } while (0);
      do if ($351) {
       $379 = HEAP32[$v$3$lcssa$i + 28 >> 2] | 0;
       $380 = 4640 + ($379 << 2) | 0;
       if (($v$3$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
        HEAP32[$380 >> 2] = $R$1$i20;
        if (!$R$1$i20) {
         HEAP32[1085] = HEAP32[1085] & ~(1 << $379);
         break;
        }
       } else {
        if ($351 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
        $389 = $351 + 16 | 0;
        if ((HEAP32[$389 >> 2] | 0) == ($v$3$lcssa$i | 0)) HEAP32[$389 >> 2] = $R$1$i20; else HEAP32[$351 + 20 >> 2] = $R$1$i20;
        if (!$R$1$i20) break;
       }
       $394 = HEAP32[1088] | 0;
       if ($R$1$i20 >>> 0 < $394 >>> 0) _abort();
       HEAP32[$R$1$i20 + 24 >> 2] = $351;
       $398 = HEAP32[$v$3$lcssa$i + 16 >> 2] | 0;
       do if ($398) if ($398 >>> 0 < $394 >>> 0) _abort(); else {
        HEAP32[$R$1$i20 + 16 >> 2] = $398;
        HEAP32[$398 + 24 >> 2] = $R$1$i20;
        break;
       } while (0);
       $404 = HEAP32[$v$3$lcssa$i + 20 >> 2] | 0;
       if ($404) if ($404 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
        HEAP32[$R$1$i20 + 20 >> 2] = $404;
        HEAP32[$404 + 24 >> 2] = $R$1$i20;
        break;
       }
      } while (0);
      L179 : do if ($rsize$3$lcssa$i >>> 0 < 16) {
       $411 = $rsize$3$lcssa$i + $246 | 0;
       HEAP32[$v$3$lcssa$i + 4 >> 2] = $411 | 3;
       $414 = $v$3$lcssa$i + ($411 + 4) | 0;
       HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
      } else {
       HEAP32[$v$3$lcssa$i + 4 >> 2] = $246 | 3;
       HEAP32[$v$3$lcssa$i + ($246 | 4) >> 2] = $rsize$3$lcssa$i | 1;
       HEAP32[$v$3$lcssa$i + ($rsize$3$lcssa$i + $246) >> 2] = $rsize$3$lcssa$i;
       $422 = $rsize$3$lcssa$i >>> 3;
       if ($rsize$3$lcssa$i >>> 0 < 256) {
        $424 = $422 << 1;
        $425 = 4376 + ($424 << 2) | 0;
        $426 = HEAP32[1084] | 0;
        $427 = 1 << $422;
        if (!($426 & $427)) {
         HEAP32[1084] = $426 | $427;
         $$pre$phi$i26Z2D = 4376 + ($424 + 2 << 2) | 0;
         $F5$0$i = $425;
        } else {
         $431 = 4376 + ($424 + 2 << 2) | 0;
         $432 = HEAP32[$431 >> 2] | 0;
         if ($432 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
          $$pre$phi$i26Z2D = $431;
          $F5$0$i = $432;
         }
        }
        HEAP32[$$pre$phi$i26Z2D >> 2] = $348;
        HEAP32[$F5$0$i + 12 >> 2] = $348;
        HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $F5$0$i;
        HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $425;
        break;
       }
       $438 = $rsize$3$lcssa$i >>> 8;
       if (!$438) $I7$0$i = 0; else if ($rsize$3$lcssa$i >>> 0 > 16777215) $I7$0$i = 31; else {
        $443 = ($438 + 1048320 | 0) >>> 16 & 8;
        $444 = $438 << $443;
        $447 = ($444 + 520192 | 0) >>> 16 & 4;
        $449 = $444 << $447;
        $452 = ($449 + 245760 | 0) >>> 16 & 2;
        $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
        $I7$0$i = $rsize$3$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
       }
       $463 = 4640 + ($I7$0$i << 2) | 0;
       HEAP32[$v$3$lcssa$i + ($246 + 28) >> 2] = $I7$0$i;
       HEAP32[$v$3$lcssa$i + ($246 + 20) >> 2] = 0;
       HEAP32[$v$3$lcssa$i + ($246 + 16) >> 2] = 0;
       $467 = HEAP32[1085] | 0;
       $468 = 1 << $I7$0$i;
       if (!($467 & $468)) {
        HEAP32[1085] = $467 | $468;
        HEAP32[$463 >> 2] = $348;
        HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $463;
        HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
        HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
        break;
       }
       $475 = HEAP32[$463 >> 2] | 0;
       L197 : do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) $T$0$lcssa$i = $475; else {
        $K12$029$i = $rsize$3$lcssa$i << (($I7$0$i | 0) == 31 ? 0 : 25 - ($I7$0$i >>> 1) | 0);
        $T$028$i = $475;
        while (1) {
         $492 = $T$028$i + 16 + ($K12$029$i >>> 31 << 2) | 0;
         $487 = HEAP32[$492 >> 2] | 0;
         if (!$487) {
          $$lcssa232 = $492;
          $T$028$i$lcssa = $T$028$i;
          break;
         }
         if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($rsize$3$lcssa$i | 0)) {
          $T$0$lcssa$i = $487;
          break L197;
         } else {
          $K12$029$i = $K12$029$i << 1;
          $T$028$i = $487;
         }
        }
        if ($$lcssa232 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
         HEAP32[$$lcssa232 >> 2] = $348;
         HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = $T$028$i$lcssa;
         HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $348;
         HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $348;
         break L179;
        }
       } while (0);
       $499 = $T$0$lcssa$i + 8 | 0;
       $500 = HEAP32[$499 >> 2] | 0;
       $501 = HEAP32[1088] | 0;
       if ($500 >>> 0 >= $501 >>> 0 & $T$0$lcssa$i >>> 0 >= $501 >>> 0) {
        HEAP32[$500 + 12 >> 2] = $348;
        HEAP32[$499 >> 2] = $348;
        HEAP32[$v$3$lcssa$i + ($246 + 8) >> 2] = $500;
        HEAP32[$v$3$lcssa$i + ($246 + 12) >> 2] = $T$0$lcssa$i;
        HEAP32[$v$3$lcssa$i + ($246 + 24) >> 2] = 0;
        break;
       } else _abort();
      } while (0);
      $mem$0 = $v$3$lcssa$i + 8 | 0;
      break;
     }
    }
    _abort();
   } else {
    $nb$0 = $246;
    label = 154;
   }
  }
 } while (0);
 L212 : do if ((label | 0) == 154) {
  $509 = HEAP32[1086] | 0;
  if ($509 >>> 0 >= $nb$0 >>> 0) {
   $511 = $509 - $nb$0 | 0;
   $512 = HEAP32[1089] | 0;
   if ($511 >>> 0 > 15) {
    HEAP32[1089] = $512 + $nb$0;
    HEAP32[1086] = $511;
    HEAP32[$512 + ($nb$0 + 4) >> 2] = $511 | 1;
    HEAP32[$512 + $509 >> 2] = $511;
    HEAP32[$512 + 4 >> 2] = $nb$0 | 3;
   } else {
    HEAP32[1086] = 0;
    HEAP32[1089] = 0;
    HEAP32[$512 + 4 >> 2] = $509 | 3;
    $522 = $512 + ($509 + 4) | 0;
    HEAP32[$522 >> 2] = HEAP32[$522 >> 2] | 1;
   }
   $mem$0 = $512 + 8 | 0;
   break;
  }
  $526 = HEAP32[1087] | 0;
  if ($526 >>> 0 > $nb$0 >>> 0) {
   $528 = $526 - $nb$0 | 0;
   HEAP32[1087] = $528;
   $529 = HEAP32[1090] | 0;
   HEAP32[1090] = $529 + $nb$0;
   HEAP32[$529 + ($nb$0 + 4) >> 2] = $528 | 1;
   HEAP32[$529 + 4 >> 2] = $nb$0 | 3;
   $mem$0 = $529 + 8 | 0;
   break;
  }
  if (!(HEAP32[1202] | 0)) _init_mparams();
  $538 = $nb$0 + 48 | 0;
  $539 = HEAP32[1204] | 0;
  $540 = $nb$0 + 47 | 0;
  $541 = $539 + $540 | 0;
  $542 = 0 - $539 | 0;
  $543 = $541 & $542;
  if ($543 >>> 0 > $nb$0 >>> 0) {
   $545 = HEAP32[1194] | 0;
   if ($545) {
    $547 = HEAP32[1192] | 0;
    $548 = $547 + $543 | 0;
    if ($548 >>> 0 <= $547 >>> 0 | $548 >>> 0 > $545 >>> 0) {
     $mem$0 = 0;
     break;
    }
   }
   L231 : do if (!(HEAP32[1195] & 4)) {
    $554 = HEAP32[1090] | 0;
    L233 : do if (!$554) label = 172; else {
     $sp$0$i$i = 4784;
     while (1) {
      $556 = HEAP32[$sp$0$i$i >> 2] | 0;
      if ($556 >>> 0 <= $554 >>> 0) {
       $558 = $sp$0$i$i + 4 | 0;
       if (($556 + (HEAP32[$558 >> 2] | 0) | 0) >>> 0 > $554 >>> 0) {
        $$lcssa228 = $sp$0$i$i;
        $$lcssa230 = $558;
        break;
       }
      }
      $sp$0$i$i = HEAP32[$sp$0$i$i + 8 >> 2] | 0;
      if (!$sp$0$i$i) {
       label = 172;
       break L233;
      }
     }
     $589 = $541 - (HEAP32[1087] | 0) & $542;
     if ($589 >>> 0 < 2147483647) {
      $591 = _sbrk($589 | 0) | 0;
      $595 = ($591 | 0) == ((HEAP32[$$lcssa228 >> 2] | 0) + (HEAP32[$$lcssa230 >> 2] | 0) | 0);
      $$3$i = $595 ? $589 : 0;
      if ($595) if (($591 | 0) == (-1 | 0)) $tsize$0323944$i = $$3$i; else {
       $tbase$255$i = $591;
       $tsize$254$i = $$3$i;
       label = 192;
       break L231;
      } else {
       $br$0$ph$i = $591;
       $ssize$1$ph$i = $589;
       $tsize$0$ph$i = $$3$i;
       label = 182;
      }
     } else $tsize$0323944$i = 0;
    } while (0);
    do if ((label | 0) == 172) {
     $565 = _sbrk(0) | 0;
     if (($565 | 0) == (-1 | 0)) $tsize$0323944$i = 0; else {
      $567 = $565;
      $568 = HEAP32[1203] | 0;
      $569 = $568 + -1 | 0;
      if (!($569 & $567)) $ssize$0$i = $543; else $ssize$0$i = $543 - $567 + ($569 + $567 & 0 - $568) | 0;
      $577 = HEAP32[1192] | 0;
      $578 = $577 + $ssize$0$i | 0;
      if ($ssize$0$i >>> 0 > $nb$0 >>> 0 & $ssize$0$i >>> 0 < 2147483647) {
       $581 = HEAP32[1194] | 0;
       if ($581) if ($578 >>> 0 <= $577 >>> 0 | $578 >>> 0 > $581 >>> 0) {
        $tsize$0323944$i = 0;
        break;
       }
       $585 = _sbrk($ssize$0$i | 0) | 0;
       $586 = ($585 | 0) == ($565 | 0);
       $ssize$0$$i = $586 ? $ssize$0$i : 0;
       if ($586) {
        $tbase$255$i = $565;
        $tsize$254$i = $ssize$0$$i;
        label = 192;
        break L231;
       } else {
        $br$0$ph$i = $585;
        $ssize$1$ph$i = $ssize$0$i;
        $tsize$0$ph$i = $ssize$0$$i;
        label = 182;
       }
      } else $tsize$0323944$i = 0;
     }
    } while (0);
    L253 : do if ((label | 0) == 182) {
     $597 = 0 - $ssize$1$ph$i | 0;
     do if ($538 >>> 0 > $ssize$1$ph$i >>> 0 & ($ssize$1$ph$i >>> 0 < 2147483647 & ($br$0$ph$i | 0) != (-1 | 0))) {
      $601 = HEAP32[1204] | 0;
      $605 = $540 - $ssize$1$ph$i + $601 & 0 - $601;
      if ($605 >>> 0 < 2147483647) if ((_sbrk($605 | 0) | 0) == (-1 | 0)) {
       _sbrk($597 | 0) | 0;
       $tsize$0323944$i = $tsize$0$ph$i;
       break L253;
      } else {
       $ssize$2$i = $605 + $ssize$1$ph$i | 0;
       break;
      } else $ssize$2$i = $ssize$1$ph$i;
     } else $ssize$2$i = $ssize$1$ph$i; while (0);
     if (($br$0$ph$i | 0) == (-1 | 0)) $tsize$0323944$i = $tsize$0$ph$i; else {
      $tbase$255$i = $br$0$ph$i;
      $tsize$254$i = $ssize$2$i;
      label = 192;
      break L231;
     }
    } while (0);
    HEAP32[1195] = HEAP32[1195] | 4;
    $tsize$1$i = $tsize$0323944$i;
    label = 189;
   } else {
    $tsize$1$i = 0;
    label = 189;
   } while (0);
   if ((label | 0) == 189) if ($543 >>> 0 < 2147483647) {
    $614 = _sbrk($543 | 0) | 0;
    $615 = _sbrk(0) | 0;
    if ($614 >>> 0 < $615 >>> 0 & (($614 | 0) != (-1 | 0) & ($615 | 0) != (-1 | 0))) {
     $621 = $615 - $614 | 0;
     $623 = $621 >>> 0 > ($nb$0 + 40 | 0) >>> 0;
     if ($623) {
      $tbase$255$i = $614;
      $tsize$254$i = $623 ? $621 : $tsize$1$i;
      label = 192;
     }
    }
   }
   if ((label | 0) == 192) {
    $625 = (HEAP32[1192] | 0) + $tsize$254$i | 0;
    HEAP32[1192] = $625;
    if ($625 >>> 0 > (HEAP32[1193] | 0) >>> 0) HEAP32[1193] = $625;
    $628 = HEAP32[1090] | 0;
    L272 : do if (!$628) {
     $630 = HEAP32[1088] | 0;
     if (($630 | 0) == 0 | $tbase$255$i >>> 0 < $630 >>> 0) HEAP32[1088] = $tbase$255$i;
     HEAP32[1196] = $tbase$255$i;
     HEAP32[1197] = $tsize$254$i;
     HEAP32[1199] = 0;
     HEAP32[1093] = HEAP32[1202];
     HEAP32[1092] = -1;
     $i$02$i$i = 0;
     do {
      $634 = $i$02$i$i << 1;
      $635 = 4376 + ($634 << 2) | 0;
      HEAP32[4376 + ($634 + 3 << 2) >> 2] = $635;
      HEAP32[4376 + ($634 + 2 << 2) >> 2] = $635;
      $i$02$i$i = $i$02$i$i + 1 | 0;
     } while (($i$02$i$i | 0) != 32);
     $641 = $tbase$255$i + 8 | 0;
     $646 = ($641 & 7 | 0) == 0 ? 0 : 0 - $641 & 7;
     $648 = $tsize$254$i + -40 - $646 | 0;
     HEAP32[1090] = $tbase$255$i + $646;
     HEAP32[1087] = $648;
     HEAP32[$tbase$255$i + ($646 + 4) >> 2] = $648 | 1;
     HEAP32[$tbase$255$i + ($tsize$254$i + -36) >> 2] = 40;
     HEAP32[1091] = HEAP32[1206];
    } else {
     $sp$084$i = 4784;
     do {
      $653 = HEAP32[$sp$084$i >> 2] | 0;
      $654 = $sp$084$i + 4 | 0;
      $655 = HEAP32[$654 >> 2] | 0;
      if (($tbase$255$i | 0) == ($653 + $655 | 0)) {
       $$lcssa222 = $653;
       $$lcssa224 = $654;
       $$lcssa226 = $655;
       $sp$084$i$lcssa = $sp$084$i;
       label = 202;
       break;
      }
      $sp$084$i = HEAP32[$sp$084$i + 8 >> 2] | 0;
     } while (($sp$084$i | 0) != 0);
     if ((label | 0) == 202) if (!(HEAP32[$sp$084$i$lcssa + 12 >> 2] & 8)) if ($628 >>> 0 < $tbase$255$i >>> 0 & $628 >>> 0 >= $$lcssa222 >>> 0) {
      HEAP32[$$lcssa224 >> 2] = $$lcssa226 + $tsize$254$i;
      $669 = (HEAP32[1087] | 0) + $tsize$254$i | 0;
      $671 = $628 + 8 | 0;
      $676 = ($671 & 7 | 0) == 0 ? 0 : 0 - $671 & 7;
      $678 = $669 - $676 | 0;
      HEAP32[1090] = $628 + $676;
      HEAP32[1087] = $678;
      HEAP32[$628 + ($676 + 4) >> 2] = $678 | 1;
      HEAP32[$628 + ($669 + 4) >> 2] = 40;
      HEAP32[1091] = HEAP32[1206];
      break;
     }
     $683 = HEAP32[1088] | 0;
     if ($tbase$255$i >>> 0 < $683 >>> 0) {
      HEAP32[1088] = $tbase$255$i;
      $748 = $tbase$255$i;
     } else $748 = $683;
     $685 = $tbase$255$i + $tsize$254$i | 0;
     $sp$183$i = 4784;
     while (1) {
      if ((HEAP32[$sp$183$i >> 2] | 0) == ($685 | 0)) {
       $$lcssa219 = $sp$183$i;
       $sp$183$i$lcssa = $sp$183$i;
       label = 210;
       break;
      }
      $sp$183$i = HEAP32[$sp$183$i + 8 >> 2] | 0;
      if (!$sp$183$i) {
       $sp$0$i$i$i = 4784;
       break;
      }
     }
     if ((label | 0) == 210) if (!(HEAP32[$sp$183$i$lcssa + 12 >> 2] & 8)) {
      HEAP32[$$lcssa219 >> 2] = $tbase$255$i;
      $695 = $sp$183$i$lcssa + 4 | 0;
      HEAP32[$695 >> 2] = (HEAP32[$695 >> 2] | 0) + $tsize$254$i;
      $699 = $tbase$255$i + 8 | 0;
      $704 = ($699 & 7 | 0) == 0 ? 0 : 0 - $699 & 7;
      $707 = $tbase$255$i + ($tsize$254$i + 8) | 0;
      $712 = ($707 & 7 | 0) == 0 ? 0 : 0 - $707 & 7;
      $713 = $tbase$255$i + ($712 + $tsize$254$i) | 0;
      $$sum$i19$i = $704 + $nb$0 | 0;
      $717 = $tbase$255$i + $$sum$i19$i | 0;
      $718 = $713 - ($tbase$255$i + $704) - $nb$0 | 0;
      HEAP32[$tbase$255$i + ($704 + 4) >> 2] = $nb$0 | 3;
      L297 : do if (($713 | 0) == ($628 | 0)) {
       $723 = (HEAP32[1087] | 0) + $718 | 0;
       HEAP32[1087] = $723;
       HEAP32[1090] = $717;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 4) >> 2] = $723 | 1;
      } else {
       if (($713 | 0) == (HEAP32[1089] | 0)) {
        $729 = (HEAP32[1086] | 0) + $718 | 0;
        HEAP32[1086] = $729;
        HEAP32[1089] = $717;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 4) >> 2] = $729 | 1;
        HEAP32[$tbase$255$i + ($729 + $$sum$i19$i) >> 2] = $729;
        break;
       }
       $$sum2$i21$i = $tsize$254$i + 4 | 0;
       $734 = HEAP32[$tbase$255$i + ($$sum2$i21$i + $712) >> 2] | 0;
       if (($734 & 3 | 0) == 1) {
        $737 = $734 & -8;
        $738 = $734 >>> 3;
        L305 : do if ($734 >>> 0 < 256) {
         $741 = HEAP32[$tbase$255$i + (($712 | 8) + $tsize$254$i) >> 2] | 0;
         $743 = HEAP32[$tbase$255$i + ($tsize$254$i + 12 + $712) >> 2] | 0;
         $745 = 4376 + ($738 << 1 << 2) | 0;
         do if (($741 | 0) != ($745 | 0)) {
          if ($741 >>> 0 >= $748 >>> 0) if ((HEAP32[$741 + 12 >> 2] | 0) == ($713 | 0)) break;
          _abort();
         } while (0);
         if (($743 | 0) == ($741 | 0)) {
          HEAP32[1084] = HEAP32[1084] & ~(1 << $738);
          break;
         }
         do if (($743 | 0) == ($745 | 0)) $$pre$phi58$i$iZ2D = $743 + 8 | 0; else {
          if ($743 >>> 0 >= $748 >>> 0) {
           $759 = $743 + 8 | 0;
           if ((HEAP32[$759 >> 2] | 0) == ($713 | 0)) {
            $$pre$phi58$i$iZ2D = $759;
            break;
           }
          }
          _abort();
         } while (0);
         HEAP32[$741 + 12 >> 2] = $743;
         HEAP32[$$pre$phi58$i$iZ2D >> 2] = $741;
        } else {
         $764 = HEAP32[$tbase$255$i + (($712 | 24) + $tsize$254$i) >> 2] | 0;
         $766 = HEAP32[$tbase$255$i + ($tsize$254$i + 12 + $712) >> 2] | 0;
         L324 : do if (($766 | 0) == ($713 | 0)) {
          $$sum67$i$i = $712 | 16;
          $777 = $tbase$255$i + ($$sum2$i21$i + $$sum67$i$i) | 0;
          $778 = HEAP32[$777 >> 2] | 0;
          if (!$778) {
           $780 = $tbase$255$i + ($$sum67$i$i + $tsize$254$i) | 0;
           $781 = HEAP32[$780 >> 2] | 0;
           if (!$781) {
            $R$1$i$i = 0;
            break;
           } else {
            $R$0$i$i = $781;
            $RP$0$i$i = $780;
           }
          } else {
           $R$0$i$i = $778;
           $RP$0$i$i = $777;
          }
          while (1) {
           $783 = $R$0$i$i + 20 | 0;
           $784 = HEAP32[$783 >> 2] | 0;
           if ($784) {
            $R$0$i$i = $784;
            $RP$0$i$i = $783;
            continue;
           }
           $786 = $R$0$i$i + 16 | 0;
           $787 = HEAP32[$786 >> 2] | 0;
           if (!$787) {
            $R$0$i$i$lcssa = $R$0$i$i;
            $RP$0$i$i$lcssa = $RP$0$i$i;
            break;
           } else {
            $R$0$i$i = $787;
            $RP$0$i$i = $786;
           }
          }
          if ($RP$0$i$i$lcssa >>> 0 < $748 >>> 0) _abort(); else {
           HEAP32[$RP$0$i$i$lcssa >> 2] = 0;
           $R$1$i$i = $R$0$i$i$lcssa;
           break;
          }
         } else {
          $769 = HEAP32[$tbase$255$i + (($712 | 8) + $tsize$254$i) >> 2] | 0;
          do if ($769 >>> 0 >= $748 >>> 0) {
           $771 = $769 + 12 | 0;
           if ((HEAP32[$771 >> 2] | 0) != ($713 | 0)) break;
           $774 = $766 + 8 | 0;
           if ((HEAP32[$774 >> 2] | 0) != ($713 | 0)) break;
           HEAP32[$771 >> 2] = $766;
           HEAP32[$774 >> 2] = $769;
           $R$1$i$i = $766;
           break L324;
          } while (0);
          _abort();
         } while (0);
         if (!$764) break;
         $792 = HEAP32[$tbase$255$i + ($tsize$254$i + 28 + $712) >> 2] | 0;
         $793 = 4640 + ($792 << 2) | 0;
         do if (($713 | 0) == (HEAP32[$793 >> 2] | 0)) {
          HEAP32[$793 >> 2] = $R$1$i$i;
          if ($R$1$i$i) break;
          HEAP32[1085] = HEAP32[1085] & ~(1 << $792);
          break L305;
         } else {
          if ($764 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
          $802 = $764 + 16 | 0;
          if ((HEAP32[$802 >> 2] | 0) == ($713 | 0)) HEAP32[$802 >> 2] = $R$1$i$i; else HEAP32[$764 + 20 >> 2] = $R$1$i$i;
          if (!$R$1$i$i) break L305;
         } while (0);
         $807 = HEAP32[1088] | 0;
         if ($R$1$i$i >>> 0 < $807 >>> 0) _abort();
         HEAP32[$R$1$i$i + 24 >> 2] = $764;
         $$sum3132$i$i = $712 | 16;
         $811 = HEAP32[$tbase$255$i + ($$sum3132$i$i + $tsize$254$i) >> 2] | 0;
         do if ($811) if ($811 >>> 0 < $807 >>> 0) _abort(); else {
          HEAP32[$R$1$i$i + 16 >> 2] = $811;
          HEAP32[$811 + 24 >> 2] = $R$1$i$i;
          break;
         } while (0);
         $817 = HEAP32[$tbase$255$i + ($$sum2$i21$i + $$sum3132$i$i) >> 2] | 0;
         if (!$817) break;
         if ($817 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
          HEAP32[$R$1$i$i + 20 >> 2] = $817;
          HEAP32[$817 + 24 >> 2] = $R$1$i$i;
          break;
         }
        } while (0);
        $oldfirst$0$i$i = $tbase$255$i + (($737 | $712) + $tsize$254$i) | 0;
        $qsize$0$i$i = $737 + $718 | 0;
       } else {
        $oldfirst$0$i$i = $713;
        $qsize$0$i$i = $718;
       }
       $825 = $oldfirst$0$i$i + 4 | 0;
       HEAP32[$825 >> 2] = HEAP32[$825 >> 2] & -2;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 4) >> 2] = $qsize$0$i$i | 1;
       HEAP32[$tbase$255$i + ($qsize$0$i$i + $$sum$i19$i) >> 2] = $qsize$0$i$i;
       $831 = $qsize$0$i$i >>> 3;
       if ($qsize$0$i$i >>> 0 < 256) {
        $833 = $831 << 1;
        $834 = 4376 + ($833 << 2) | 0;
        $835 = HEAP32[1084] | 0;
        $836 = 1 << $831;
        do if (!($835 & $836)) {
         HEAP32[1084] = $835 | $836;
         $$pre$phi$i23$iZ2D = 4376 + ($833 + 2 << 2) | 0;
         $F4$0$i$i = $834;
        } else {
         $840 = 4376 + ($833 + 2 << 2) | 0;
         $841 = HEAP32[$840 >> 2] | 0;
         if ($841 >>> 0 >= (HEAP32[1088] | 0) >>> 0) {
          $$pre$phi$i23$iZ2D = $840;
          $F4$0$i$i = $841;
          break;
         }
         _abort();
        } while (0);
        HEAP32[$$pre$phi$i23$iZ2D >> 2] = $717;
        HEAP32[$F4$0$i$i + 12 >> 2] = $717;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $F4$0$i$i;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $834;
        break;
       }
       $847 = $qsize$0$i$i >>> 8;
       do if (!$847) $I7$0$i$i = 0; else {
        if ($qsize$0$i$i >>> 0 > 16777215) {
         $I7$0$i$i = 31;
         break;
        }
        $852 = ($847 + 1048320 | 0) >>> 16 & 8;
        $853 = $847 << $852;
        $856 = ($853 + 520192 | 0) >>> 16 & 4;
        $858 = $853 << $856;
        $861 = ($858 + 245760 | 0) >>> 16 & 2;
        $866 = 14 - ($856 | $852 | $861) + ($858 << $861 >>> 15) | 0;
        $I7$0$i$i = $qsize$0$i$i >>> ($866 + 7 | 0) & 1 | $866 << 1;
       } while (0);
       $872 = 4640 + ($I7$0$i$i << 2) | 0;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 28) >> 2] = $I7$0$i$i;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 20) >> 2] = 0;
       HEAP32[$tbase$255$i + ($$sum$i19$i + 16) >> 2] = 0;
       $876 = HEAP32[1085] | 0;
       $877 = 1 << $I7$0$i$i;
       if (!($876 & $877)) {
        HEAP32[1085] = $876 | $877;
        HEAP32[$872 >> 2] = $717;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 24) >> 2] = $872;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $717;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $717;
        break;
       }
       $884 = HEAP32[$872 >> 2] | 0;
       L385 : do if ((HEAP32[$884 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) $T$0$lcssa$i25$i = $884; else {
        $K8$051$i$i = $qsize$0$i$i << (($I7$0$i$i | 0) == 31 ? 0 : 25 - ($I7$0$i$i >>> 1) | 0);
        $T$050$i$i = $884;
        while (1) {
         $901 = $T$050$i$i + 16 + ($K8$051$i$i >>> 31 << 2) | 0;
         $896 = HEAP32[$901 >> 2] | 0;
         if (!$896) {
          $$lcssa = $901;
          $T$050$i$i$lcssa = $T$050$i$i;
          break;
         }
         if ((HEAP32[$896 + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) {
          $T$0$lcssa$i25$i = $896;
          break L385;
         } else {
          $K8$051$i$i = $K8$051$i$i << 1;
          $T$050$i$i = $896;
         }
        }
        if ($$lcssa >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
         HEAP32[$$lcssa >> 2] = $717;
         HEAP32[$tbase$255$i + ($$sum$i19$i + 24) >> 2] = $T$050$i$i$lcssa;
         HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $717;
         HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $717;
         break L297;
        }
       } while (0);
       $908 = $T$0$lcssa$i25$i + 8 | 0;
       $909 = HEAP32[$908 >> 2] | 0;
       $910 = HEAP32[1088] | 0;
       if ($909 >>> 0 >= $910 >>> 0 & $T$0$lcssa$i25$i >>> 0 >= $910 >>> 0) {
        HEAP32[$909 + 12 >> 2] = $717;
        HEAP32[$908 >> 2] = $717;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 8) >> 2] = $909;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 12) >> 2] = $T$0$lcssa$i25$i;
        HEAP32[$tbase$255$i + ($$sum$i19$i + 24) >> 2] = 0;
        break;
       } else _abort();
      } while (0);
      $mem$0 = $tbase$255$i + ($704 | 8) | 0;
      break L212;
     } else $sp$0$i$i$i = 4784;
     while (1) {
      $918 = HEAP32[$sp$0$i$i$i >> 2] | 0;
      if ($918 >>> 0 <= $628 >>> 0) {
       $921 = HEAP32[$sp$0$i$i$i + 4 >> 2] | 0;
       $922 = $918 + $921 | 0;
       if ($922 >>> 0 > $628 >>> 0) {
        $$lcssa215 = $918;
        $$lcssa216 = $921;
        $$lcssa217 = $922;
        break;
       }
      }
      $sp$0$i$i$i = HEAP32[$sp$0$i$i$i + 8 >> 2] | 0;
     }
     $927 = $$lcssa215 + ($$lcssa216 + -39) | 0;
     $933 = $$lcssa215 + ($$lcssa216 + -47 + (($927 & 7 | 0) == 0 ? 0 : 0 - $927 & 7)) | 0;
     $934 = $628 + 16 | 0;
     $936 = $933 >>> 0 < $934 >>> 0 ? $628 : $933;
     $937 = $936 + 8 | 0;
     $940 = $tbase$255$i + 8 | 0;
     $945 = ($940 & 7 | 0) == 0 ? 0 : 0 - $940 & 7;
     $947 = $tsize$254$i + -40 - $945 | 0;
     HEAP32[1090] = $tbase$255$i + $945;
     HEAP32[1087] = $947;
     HEAP32[$tbase$255$i + ($945 + 4) >> 2] = $947 | 1;
     HEAP32[$tbase$255$i + ($tsize$254$i + -36) >> 2] = 40;
     HEAP32[1091] = HEAP32[1206];
     $952 = $936 + 4 | 0;
     HEAP32[$952 >> 2] = 27;
     HEAP32[$937 >> 2] = HEAP32[1196];
     HEAP32[$937 + 4 >> 2] = HEAP32[1197];
     HEAP32[$937 + 8 >> 2] = HEAP32[1198];
     HEAP32[$937 + 12 >> 2] = HEAP32[1199];
     HEAP32[1196] = $tbase$255$i;
     HEAP32[1197] = $tsize$254$i;
     HEAP32[1199] = 0;
     HEAP32[1198] = $937;
     $953 = $936 + 28 | 0;
     HEAP32[$953 >> 2] = 7;
     if (($936 + 32 | 0) >>> 0 < $$lcssa217 >>> 0) {
      $957 = $953;
      do {
       $957$looptemp = $957;
       $957 = $957 + 4 | 0;
       HEAP32[$957 >> 2] = 7;
      } while (($957$looptemp + 8 | 0) >>> 0 < $$lcssa217 >>> 0);
     }
     if (($936 | 0) != ($628 | 0)) {
      $963 = $936 - $628 | 0;
      HEAP32[$952 >> 2] = HEAP32[$952 >> 2] & -2;
      HEAP32[$628 + 4 >> 2] = $963 | 1;
      HEAP32[$936 >> 2] = $963;
      $968 = $963 >>> 3;
      if ($963 >>> 0 < 256) {
       $970 = $968 << 1;
       $971 = 4376 + ($970 << 2) | 0;
       $972 = HEAP32[1084] | 0;
       $973 = 1 << $968;
       if (!($972 & $973)) {
        HEAP32[1084] = $972 | $973;
        $$pre$phi$i$iZ2D = 4376 + ($970 + 2 << 2) | 0;
        $F$0$i$i = $971;
       } else {
        $977 = 4376 + ($970 + 2 << 2) | 0;
        $978 = HEAP32[$977 >> 2] | 0;
        if ($978 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
         $$pre$phi$i$iZ2D = $977;
         $F$0$i$i = $978;
        }
       }
       HEAP32[$$pre$phi$i$iZ2D >> 2] = $628;
       HEAP32[$F$0$i$i + 12 >> 2] = $628;
       HEAP32[$628 + 8 >> 2] = $F$0$i$i;
       HEAP32[$628 + 12 >> 2] = $971;
       break;
      }
      $984 = $963 >>> 8;
      if (!$984) $I1$0$i$i = 0; else if ($963 >>> 0 > 16777215) $I1$0$i$i = 31; else {
       $989 = ($984 + 1048320 | 0) >>> 16 & 8;
       $990 = $984 << $989;
       $993 = ($990 + 520192 | 0) >>> 16 & 4;
       $995 = $990 << $993;
       $998 = ($995 + 245760 | 0) >>> 16 & 2;
       $1003 = 14 - ($993 | $989 | $998) + ($995 << $998 >>> 15) | 0;
       $I1$0$i$i = $963 >>> ($1003 + 7 | 0) & 1 | $1003 << 1;
      }
      $1009 = 4640 + ($I1$0$i$i << 2) | 0;
      HEAP32[$628 + 28 >> 2] = $I1$0$i$i;
      HEAP32[$628 + 20 >> 2] = 0;
      HEAP32[$934 >> 2] = 0;
      $1012 = HEAP32[1085] | 0;
      $1013 = 1 << $I1$0$i$i;
      if (!($1012 & $1013)) {
       HEAP32[1085] = $1012 | $1013;
       HEAP32[$1009 >> 2] = $628;
       HEAP32[$628 + 24 >> 2] = $1009;
       HEAP32[$628 + 12 >> 2] = $628;
       HEAP32[$628 + 8 >> 2] = $628;
       break;
      }
      $1020 = HEAP32[$1009 >> 2] | 0;
      L425 : do if ((HEAP32[$1020 + 4 >> 2] & -8 | 0) == ($963 | 0)) $T$0$lcssa$i$i = $1020; else {
       $K2$07$i$i = $963 << (($I1$0$i$i | 0) == 31 ? 0 : 25 - ($I1$0$i$i >>> 1) | 0);
       $T$06$i$i = $1020;
       while (1) {
        $1037 = $T$06$i$i + 16 + ($K2$07$i$i >>> 31 << 2) | 0;
        $1032 = HEAP32[$1037 >> 2] | 0;
        if (!$1032) {
         $$lcssa211 = $1037;
         $T$06$i$i$lcssa = $T$06$i$i;
         break;
        }
        if ((HEAP32[$1032 + 4 >> 2] & -8 | 0) == ($963 | 0)) {
         $T$0$lcssa$i$i = $1032;
         break L425;
        } else {
         $K2$07$i$i = $K2$07$i$i << 1;
         $T$06$i$i = $1032;
        }
       }
       if ($$lcssa211 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
        HEAP32[$$lcssa211 >> 2] = $628;
        HEAP32[$628 + 24 >> 2] = $T$06$i$i$lcssa;
        HEAP32[$628 + 12 >> 2] = $628;
        HEAP32[$628 + 8 >> 2] = $628;
        break L272;
       }
      } while (0);
      $1044 = $T$0$lcssa$i$i + 8 | 0;
      $1045 = HEAP32[$1044 >> 2] | 0;
      $1046 = HEAP32[1088] | 0;
      if ($1045 >>> 0 >= $1046 >>> 0 & $T$0$lcssa$i$i >>> 0 >= $1046 >>> 0) {
       HEAP32[$1045 + 12 >> 2] = $628;
       HEAP32[$1044 >> 2] = $628;
       HEAP32[$628 + 8 >> 2] = $1045;
       HEAP32[$628 + 12 >> 2] = $T$0$lcssa$i$i;
       HEAP32[$628 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $1053 = HEAP32[1087] | 0;
    if ($1053 >>> 0 > $nb$0 >>> 0) {
     $1055 = $1053 - $nb$0 | 0;
     HEAP32[1087] = $1055;
     $1056 = HEAP32[1090] | 0;
     HEAP32[1090] = $1056 + $nb$0;
     HEAP32[$1056 + ($nb$0 + 4) >> 2] = $1055 | 1;
     HEAP32[$1056 + 4 >> 2] = $nb$0 | 3;
     $mem$0 = $1056 + 8 | 0;
     break;
    }
   }
   HEAP32[(___errno_location() | 0) >> 2] = 12;
   $mem$0 = 0;
  } else $mem$0 = 0;
 } while (0);
 return $mem$0 | 0;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i126 = 0, $$0$i$i$i$i158 = 0, $$0$i$i$i$i183 = 0, $$0$i$i$i$i30 = 0, $$0$i$i$i$i51 = 0, $$0$i$i$i$i92 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i132 = 0, $$0$i$i1$i$i164 = 0, $$0$i$i1$i$i189 = 0, $$0$i$i1$i$i36 = 0, $$0$i$i1$i$i57 = 0, $$0$i$i1$i$i98 = 0, $$0$i$i110 = 0, $$0$i$i119 = 0, $$0$i$i122 = 0, $$0$i$i144 = 0, $$0$i$i155 = 0, $$0$i$i179 = 0, $$0$i$i45 = 0, $$0$i$i49 = 0, $$0$i$i66 = 0, $$0$i$i73 = 0, $$0$i$i78 = 0, $$0$i$i86 = 0, $$0$i$i89 = 0, $$in386 = 0, $$lcssa261 = 0, $$lcssa357 = 0, $$lcssa416 = 0, $$lcssa418 = 0, $$ph = 0, $$ph345 = 0, $$ph346 = 0, $$pre$i3$i$i100282$ph = 0, $$pre$i3$i$i100282306 = 0, $$pre$i3$i$i100382 = 0, $$pre$i3$i$i134 = 0, $$pre$i3$i$i166 = 0, $$pre$i3$i$i166275 = 0, $$pre$i3$i$i166277 = 0, $$pre$i3$i$i191290 = 0, $$pre$i3$i$i191291 = 0, $$pre$i3$i$i191391 = 0, $$pre$i3$i$i59 = 0, $$pre$i3$i$i59300 = 0, $$pre$i3$i$i59302 = 0, $$pre284 = 0, $$pre285 = 0, $$pre288 = 0, $$pre294 = 0, $0 = 0, $102 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $114 = 0, $115 = 0, $119 = 0, $124 = 0, $127 = 0, $134 = 0, $135 = 0, $14 = 0, $140 = 0, $142 = 0, $149 = 0, $150 = 0, $154 = 0, $155 = 0, $157 = 0, $164 = 0, $165 = 0, $17 = 0, $171 = 0, $172 = 0, $174 = 0, $175 = 0, $176 = 0, $18 = 0, $183 = 0, $184 = 0, $188 = 0, $19 = 0, $190 = 0, $196 = 0, $197 = 0, $2 = 0, $20 = 0, $203 = 0, $208 = 0, $210 = 0, $212 = 0, $213 = 0, $217 = 0, $218 = 0, $22 = 0, $222 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $237 = 0, $24 = 0, $240 = 0, $248 = 0, $25 = 0, $250 = 0, $257 = 0, $258 = 0, $26 = 0, $262 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $277 = 0, $28 = 0, $280 = 0, $29 = 0, $291 = 0, $292 = 0, $296 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $310 = 0, $313 = 0, $32 = 0, $324 = 0, $325 = 0, $335 = 0, $336 = 0, $337 = 0, $344 = 0, $347 = 0, $363 = 0, $366 = 0, $367 = 0, $368 = 0, $371 = 0, $377 = 0, $378 = 0, $384 = 0, $39 = 0, $393 = 0, $397 = 0, $398 = 0, $40 = 0, $401 = 0, $403 = 0, $412 = 0, $414 = 0, $415 = 0, $416 = 0, $418 = 0, $419 = 0, $420 = 0, $422 = 0, $426 = 0, $429 = 0, $430 = 0, $434 = 0, $44 = 0, $440 = 0, $443 = 0, $450 = 0, $451 = 0, $456 = 0, $458 = 0, $465 = 0, $466 = 0, $47 = 0, $470 = 0, $471 = 0, $473 = 0, $480 = 0, $481 = 0, $485 = 0, $487 = 0, $488 = 0, $489 = 0, $496 = 0, $501 = 0, $507 = 0, $509 = 0, $511 = 0, $522 = 0, $525 = 0, $532 = 0, $533 = 0, $538 = 0, $54 = 0, $540 = 0, $547 = 0, $548 = 0, $55 = 0, $552 = 0, $553 = 0, $555 = 0, $562 = 0, $563 = 0, $569 = 0, $570 = 0, $572 = 0, $575 = 0, $578 = 0, $580 = 0, $592 = 0, $593 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $606 = 0, $614 = 0, $616 = 0, $617 = 0, $618 = 0, $62 = 0, $620 = 0, $623 = 0, $63 = 0, $630 = 0, $631 = 0, $637 = 0, $644 = 0, $645 = 0, $649 = 0, $651 = 0, $658 = 0, $659 = 0, $666 = 0, $667 = 0, $668 = 0, $675 = 0, $679 = 0, $682 = 0, $689 = 0, $690 = 0, $695 = 0, $697 = 0, $704 = 0, $705 = 0, $709 = 0, $710 = 0, $712 = 0, $719 = 0, $720 = 0, $726 = 0, $727 = 0, $734 = 0, $736 = 0, $738 = 0, $745 = 0, $746 = 0, $749 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $762 = 0, $77 = 0, $774 = 0, $775 = 0, $776 = 0, $783 = 0, $784 = 0, $787 = 0, $79 = 0, $794 = 0, $795 = 0, $799 = 0, $802 = 0, $809 = 0, $810 = 0, $814 = 0, $816 = 0, $82 = 0, $823 = 0, $824 = 0, $832 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $847 = 0, $850 = 0, $856 = 0, $859 = 0, $86 = 0, $861 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $88 = 0, $95 = 0, $96 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa417 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0397 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0399 = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, label = 0, sp = 0, $752$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 40 | 0;
 $__gbuf = sp + 88 | 0;
 $__gb = sp + 32 | 0;
 $__gn = sp + 24 | 0;
 $__ge = sp + 80 | 0;
 $__pat = sp + 504 | 0;
 $__dp = sp + 496 | 0;
 $__ts = sp + 500 | 0;
 $__grp = sp + 44 | 0;
 $__sym = sp;
 $__psn = sp + 68 | 0;
 $__nsn = sp + 12 | 0;
 $__spaces = sp + 56 | 0;
 $__fd = sp + 492 | 0;
 $__et = sp + 488 | 0;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $2 = $__gb + 4 | 0;
 HEAP32[$2 >> 2] = 187;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__psn >> 2] = 0;
 HEAP32[$__psn + 4 >> 2] = 0;
 HEAP32[$__psn + 8 >> 2] = 0;
 HEAP32[$__nsn >> 2] = 0;
 HEAP32[$__nsn + 4 >> 2] = 0;
 HEAP32[$__nsn + 8 >> 2] = 0;
 HEAP32[$__spaces >> 2] = 0;
 HEAP32[$__spaces + 4 >> 2] = 0;
 HEAP32[$__spaces + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(2, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $14 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($14 & 1) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index8 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $17 = $__psn + 4 | 0;
  $18 = $__nsn + 4 | 0;
  $19 = $__nsn + 8 | 0;
  $20 = $__psn + 8 | 0;
  $22 = ($__flags & 512 | 0) != 0;
  $23 = $__sym + 8 | 0;
  $24 = $__sym + 4 | 0;
  $25 = $__spaces + 4 | 0;
  $26 = $__spaces + 8 | 0;
  $27 = $__pat + 3 | 0;
  $28 = $__grp + 4 | 0;
  $863 = $__gbuf;
  $__p$0397 = 0;
  $__trailing_sign$0399 = 0;
  L4 : while (1) {
   $29 = HEAP32[$__b >> 2] | 0;
   do if (!$29) $864 = 1; else {
    $32 = HEAP32[$29 + 12 >> 2] | 0;
    if (($32 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $39 = invoke_ii(HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] | 0, $29 | 0) | 0;
     $40 = __THREW__;
     __THREW__ = 0;
     if ($40 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i$i$i30 = $39;
    } else $$0$i$i$i$i30 = HEAP32[$32 >> 2] | 0;
    if (($$0$i$i$i$i30 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $864 = 1;
     break;
    } else {
     $864 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   $44 = HEAP32[$__e >> 2] | 0;
   do if (!$44) label = 16; else {
    $47 = HEAP32[$44 + 12 >> 2] | 0;
    if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $54 = invoke_ii(HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] | 0, $44 | 0) | 0;
     $55 = __THREW__;
     __THREW__ = 0;
     if ($55 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i36 = $54;
    } else $$0$i$i1$i$i36 = HEAP32[$47 >> 2] | 0;
    if (($$0$i$i1$i$i36 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($864) {
     $865 = $44;
     break;
    } else {
     $$lcssa357 = $863;
     $__trailing_sign$0$lcssa = $__trailing_sign$0399;
     label = 244;
     break L4;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($864) {
     $$lcssa357 = $863;
     $__trailing_sign$0$lcssa = $__trailing_sign$0399;
     label = 244;
     break;
    } else $865 = 0;
   }
   L28 : do switch (HEAP8[$__pat + $__p$0397 >> 0] | 0) {
   case 1:
    {
     if (($__p$0397 | 0) == 3) {
      $866 = $863;
      $__trailing_sign$1 = $__trailing_sign$0399;
     } else {
      $86 = HEAP32[$__b >> 2] | 0;
      $88 = HEAP32[$86 + 12 >> 2] | 0;
      if (($88 | 0) == (HEAP32[$86 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $95 = invoke_ii(HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] | 0, $86 | 0) | 0;
       $96 = __THREW__;
       __THREW__ = 0;
       if ($96 & 1) {
        label = 26;
        break L4;
       } else $$0$i$i45 = $95;
      } else $$0$i$i45 = HEAP32[$88 >> 2] | 0;
      __THREW__ = 0;
      $102 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i45 | 0) | 0;
      $103 = __THREW__;
      __THREW__ = 0;
      if ($103 & 1) {
       label = 26;
       break L4;
      }
      if (!$102) {
       label = 42;
       break L4;
      }
      $105 = HEAP32[$__b >> 2] | 0;
      $106 = $105 + 12 | 0;
      $107 = HEAP32[$106 >> 2] | 0;
      if (($107 | 0) == (HEAP32[$105 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $114 = invoke_ii(HEAP32[(HEAP32[$105 >> 2] | 0) + 40 >> 2] | 0, $105 | 0) | 0;
       $115 = __THREW__;
       __THREW__ = 0;
       if ($115 & 1) {
        label = 26;
        break L4;
       } else $$0$i$i49 = $114;
      } else {
       HEAP32[$106 >> 2] = $107 + 4;
       $$0$i$i49 = HEAP32[$107 >> 2] | 0;
      }
      __THREW__ = 0;
      invoke_vii(73, $__spaces | 0, $$0$i$i49 | 0);
      $119 = __THREW__;
      __THREW__ = 0;
      if ($119 & 1) {
       label = 26;
       break L4;
      } else {
       $$pre$i3$i$i59 = $865;
       $140 = $865;
       label = 44;
      }
     }
     break;
    }
   case 0:
    {
     if (($__p$0397 | 0) == 3) {
      $866 = $863;
      $__trailing_sign$1 = $__trailing_sign$0399;
     } else {
      $$pre$i3$i$i59 = $865;
      $140 = $865;
      label = 44;
     }
     break;
    }
   case 3:
    {
     $190 = HEAP8[$__psn >> 0] | 0;
     $196 = ($190 & 1) == 0 ? ($190 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
     $197 = HEAP8[$__nsn >> 0] | 0;
     $203 = ($197 & 1) == 0 ? ($197 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
     if (($196 | 0) == (0 - $203 | 0)) {
      $866 = $863;
      $__trailing_sign$1 = $__trailing_sign$0399;
     } else {
      if (!$196) {
       $248 = HEAP32[$__b >> 2] | 0;
       $250 = HEAP32[$248 + 12 >> 2] | 0;
       if (($250 | 0) == (HEAP32[$248 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $257 = invoke_ii(HEAP32[(HEAP32[$248 >> 2] | 0) + 36 >> 2] | 0, $248 | 0) | 0;
        $258 = __THREW__;
        __THREW__ = 0;
        if ($258 & 1) {
         label = 26;
         break L4;
        }
        $$0$i$i110 = $257;
        $262 = HEAP8[$__nsn >> 0] | 0;
       } else {
        $$0$i$i110 = HEAP32[$250 >> 2] | 0;
        $262 = $197;
       }
       if (($$0$i$i110 | 0) != (HEAP32[(($262 & 1) == 0 ? $18 : HEAP32[$19 >> 2] | 0) >> 2] | 0)) {
        $866 = $863;
        $__trailing_sign$1 = $__trailing_sign$0399;
        break L28;
       }
       $268 = HEAP32[$__b >> 2] | 0;
       $269 = $268 + 12 | 0;
       $270 = HEAP32[$269 >> 2] | 0;
       if (($270 | 0) == (HEAP32[$268 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$268 >> 2] | 0) + 40 >> 2] | 0, $268 | 0) | 0;
        $277 = __THREW__;
        __THREW__ = 0;
        if ($277 & 1) {
         label = 26;
         break L4;
        }
       } else HEAP32[$269 >> 2] = $270 + 4;
       HEAP8[$__neg >> 0] = 1;
       $280 = HEAP8[$__nsn >> 0] | 0;
       $866 = $863;
       $__trailing_sign$1 = (($280 & 1) == 0 ? ($280 & 255) >>> 1 : HEAP32[$18 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0399;
       break L28;
      }
      $208 = HEAP32[$__b >> 2] | 0;
      $210 = HEAP32[$208 + 12 >> 2] | 0;
      $212 = HEAP32[$208 + 16 >> 2] | 0;
      $213 = ($210 | 0) == ($212 | 0);
      if (!$203) {
       if ($213) {
        __THREW__ = 0;
        $217 = invoke_ii(HEAP32[(HEAP32[$208 >> 2] | 0) + 36 >> 2] | 0, $208 | 0) | 0;
        $218 = __THREW__;
        __THREW__ = 0;
        if ($218 & 1) {
         label = 26;
         break L4;
        }
        $$0$i$i89 = $217;
        $222 = HEAP8[$__psn >> 0] | 0;
       } else {
        $$0$i$i89 = HEAP32[$210 >> 2] | 0;
        $222 = $190;
       }
       if (($$0$i$i89 | 0) != (HEAP32[(($222 & 1) == 0 ? $17 : HEAP32[$20 >> 2] | 0) >> 2] | 0)) {
        HEAP8[$__neg >> 0] = 1;
        $866 = $863;
        $__trailing_sign$1 = $__trailing_sign$0399;
        break L28;
       }
       $228 = HEAP32[$__b >> 2] | 0;
       $229 = $228 + 12 | 0;
       $230 = HEAP32[$229 >> 2] | 0;
       if (($230 | 0) == (HEAP32[$228 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$228 >> 2] | 0) + 40 >> 2] | 0, $228 | 0) | 0;
        $237 = __THREW__;
        __THREW__ = 0;
        if ($237 & 1) {
         label = 26;
         break L4;
        }
       } else HEAP32[$229 >> 2] = $230 + 4;
       $240 = HEAP8[$__psn >> 0] | 0;
       $866 = $863;
       $__trailing_sign$1 = (($240 & 1) == 0 ? ($240 & 255) >>> 1 : HEAP32[$17 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0399;
       break L28;
      }
      if ($213) {
       __THREW__ = 0;
       $291 = invoke_ii(HEAP32[(HEAP32[$208 >> 2] | 0) + 36 >> 2] | 0, $208 | 0) | 0;
       $292 = __THREW__;
       __THREW__ = 0;
       if ($292 & 1) {
        label = 26;
        break L4;
       }
       $$pre294 = HEAP32[$__b >> 2] | 0;
       $$0$i$i122 = $291;
       $296 = HEAP8[$__psn >> 0] | 0;
       $303 = $$pre294;
       $305 = HEAP32[$$pre294 + 12 >> 2] | 0;
       $306 = HEAP32[$$pre294 + 16 >> 2] | 0;
      } else {
       $$0$i$i122 = HEAP32[$210 >> 2] | 0;
       $296 = $190;
       $303 = $208;
       $305 = $210;
       $306 = $212;
      }
      $302 = $303 + 12 | 0;
      $304 = ($305 | 0) == ($306 | 0);
      if (($$0$i$i122 | 0) == (HEAP32[(($296 & 1) == 0 ? $17 : HEAP32[$20 >> 2] | 0) >> 2] | 0)) {
       if ($304) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$303 >> 2] | 0) + 40 >> 2] | 0, $303 | 0) | 0;
        $310 = __THREW__;
        __THREW__ = 0;
        if ($310 & 1) {
         label = 26;
         break L4;
        }
       } else HEAP32[$302 >> 2] = $305 + 4;
       $313 = HEAP8[$__psn >> 0] | 0;
       $866 = $863;
       $__trailing_sign$1 = (($313 & 1) == 0 ? ($313 & 255) >>> 1 : HEAP32[$17 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0399;
       break L28;
      }
      if ($304) {
       __THREW__ = 0;
       $324 = invoke_ii(HEAP32[(HEAP32[$303 >> 2] | 0) + 36 >> 2] | 0, $303 | 0) | 0;
       $325 = __THREW__;
       __THREW__ = 0;
       if ($325 & 1) {
        label = 26;
        break L4;
       } else $$0$i$i144 = $324;
      } else $$0$i$i144 = HEAP32[$305 >> 2] | 0;
      if (($$0$i$i144 | 0) != (HEAP32[((HEAP8[$__nsn >> 0] & 1) == 0 ? $18 : HEAP32[$19 >> 2] | 0) >> 2] | 0)) {
       label = 107;
       break L4;
      }
      $335 = HEAP32[$__b >> 2] | 0;
      $336 = $335 + 12 | 0;
      $337 = HEAP32[$336 >> 2] | 0;
      if (($337 | 0) == (HEAP32[$335 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$335 >> 2] | 0) + 40 >> 2] | 0, $335 | 0) | 0;
       $344 = __THREW__;
       __THREW__ = 0;
       if ($344 & 1) {
        label = 26;
        break L4;
       }
      } else HEAP32[$336 >> 2] = $337 + 4;
      HEAP8[$__neg >> 0] = 1;
      $347 = HEAP8[$__nsn >> 0] | 0;
      $866 = $863;
      $__trailing_sign$1 = (($347 & 1) == 0 ? ($347 & 255) >>> 1 : HEAP32[$18 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0399;
     }
     break;
    }
   case 2:
    {
     if (!($__p$0397 >>> 0 < 2 | ($__trailing_sign$0399 | 0) != 0)) if (!($22 | ($__p$0397 | 0) == 2 & (HEAP8[$27 >> 0] | 0) != 0)) {
      $866 = $863;
      $__trailing_sign$1 = 0;
      break L28;
     }
     $363 = HEAP8[$__sym >> 0] | 0;
     $366 = HEAP32[$23 >> 2] | 0;
     $367 = ($363 & 1) == 0 ? $24 : $366;
     $368 = $367;
     L97 : do if (!$__p$0397) {
      $$ph = $366;
      $$ph345 = $363;
      $$ph346 = $368;
     } else if ((HEAPU8[$__pat + ($__p$0397 + -1) >> 0] | 0) < 2) {
      $384 = ($363 & 1) == 0;
      L100 : do if (($367 | 0) == (($384 ? $24 : $366) + (($384 ? ($363 & 255) >>> 1 : HEAP32[$24 >> 2] | 0) << 2) | 0)) {
       $412 = $363;
       $415 = $366;
       $418 = $368;
      } else {
       $393 = $367;
       $868 = $368;
       while (1) {
        __THREW__ = 0;
        $397 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, HEAP32[$393 >> 2] | 0) | 0;
        $398 = __THREW__;
        __THREW__ = 0;
        if ($398 & 1) {
         label = 23;
         break L4;
        }
        if (!$397) {
         $$lcssa418 = $868;
         break;
        }
        $393 = $393 + 4 | 0;
        $401 = $393;
        $$pre284 = HEAP8[$__sym >> 0] | 0;
        $$pre285 = HEAP32[$23 >> 2] | 0;
        $403 = ($$pre284 & 1) == 0;
        if (($393 | 0) == (($403 ? $24 : $$pre285) + (($403 ? ($$pre284 & 255) >>> 1 : HEAP32[$24 >> 2] | 0) << 2) | 0)) {
         $412 = $$pre284;
         $415 = $$pre285;
         $418 = $401;
         break L100;
        } else $868 = $401;
       }
       $412 = HEAP8[$__sym >> 0] | 0;
       $415 = HEAP32[$23 >> 2] | 0;
       $418 = $$lcssa418;
      } while (0);
      $414 = ($412 & 1) == 0 ? $24 : $415;
      $416 = $414;
      $419 = $418 - $416 >> 2;
      $420 = HEAP8[$__spaces >> 0] | 0;
      $422 = ($420 & 1) == 0;
      $426 = $422 ? ($420 & 255) >>> 1 : HEAP32[$25 >> 2] | 0;
      if ($426 >>> 0 < $419 >>> 0) {
       $$ph = $415;
       $$ph345 = $412;
       $$ph346 = $416;
      } else {
       $429 = $422 ? $25 : HEAP32[$26 >> 2] | 0;
       $430 = $429 + ($426 << 2) | 0;
       if (!$419) {
        $$ph = $415;
        $$ph345 = $412;
        $$ph346 = $418;
       } else {
        $$in386 = $414;
        $434 = $429 + ($426 - $419 << 2) | 0;
        while (1) {
         if ((HEAP32[$434 >> 2] | 0) != (HEAP32[$$in386 >> 2] | 0)) {
          $$ph = $415;
          $$ph345 = $412;
          $$ph346 = $416;
          break L97;
         }
         $434 = $434 + 4 | 0;
         if (($434 | 0) == ($430 | 0)) {
          $$ph = $415;
          $$ph345 = $412;
          $$ph346 = $418;
          break;
         } else $$in386 = $$in386 + 4 | 0;
        }
       }
      }
     } else {
      $$ph = $366;
      $$ph345 = $363;
      $$ph346 = $368;
     } while (0);
     $371 = ($$ph345 & 1) == 0;
     $377 = ($371 ? $24 : $$ph) + (($371 ? ($$ph345 & 255) >>> 1 : HEAP32[$24 >> 2] | 0) << 2) | 0;
     $378 = $$ph346;
     L113 : do if (($378 | 0) == ($377 | 0)) $$lcssa261 = $377; else {
      $$pre$i3$i$i191391 = $865;
      $456 = $865;
      $485 = $378;
      while (1) {
       $440 = HEAP32[$__b >> 2] | 0;
       do if (!$440) $470 = 1; else {
        $443 = HEAP32[$440 + 12 >> 2] | 0;
        if (($443 | 0) == (HEAP32[$440 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $450 = invoke_ii(HEAP32[(HEAP32[$440 >> 2] | 0) + 36 >> 2] | 0, $440 | 0) | 0;
         $451 = __THREW__;
         __THREW__ = 0;
         if ($451 & 1) {
          label = 22;
          break L4;
         } else $$0$i$i$i$i183 = $450;
        } else $$0$i$i$i$i183 = HEAP32[$443 >> 2] | 0;
        if (($$0$i$i$i$i183 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $470 = 1;
         break;
        } else {
         $470 = (HEAP32[$__b >> 2] | 0) == 0;
         break;
        }
       } while (0);
       do if (!$456) {
        $$pre$i3$i$i191291 = $$pre$i3$i$i191391;
        label = 136;
       } else {
        $458 = HEAP32[$456 + 12 >> 2] | 0;
        if (($458 | 0) == (HEAP32[$456 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $465 = invoke_ii(HEAP32[(HEAP32[$456 >> 2] | 0) + 36 >> 2] | 0, $456 | 0) | 0;
         $466 = __THREW__;
         __THREW__ = 0;
         if ($466 & 1) {
          label = 22;
          break L4;
         } else $$0$i$i1$i$i189 = $465;
        } else $$0$i$i1$i$i189 = HEAP32[$458 >> 2] | 0;
        if (($$0$i$i1$i$i189 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i3$i$i191291 = 0;
         label = 136;
         break;
        } else if ($470 ^ ($$pre$i3$i$i191391 | 0) == 0) {
         $$pre$i3$i$i191290 = $$pre$i3$i$i191391;
         $869 = $$pre$i3$i$i191391;
         break;
        } else {
         $$lcssa261 = $485;
         break L113;
        }
       } while (0);
       if ((label | 0) == 136) {
        label = 0;
        if ($470) {
         $$lcssa261 = $485;
         break L113;
        } else {
         $$pre$i3$i$i191290 = $$pre$i3$i$i191291;
         $869 = 0;
        }
       }
       $471 = HEAP32[$__b >> 2] | 0;
       $473 = HEAP32[$471 + 12 >> 2] | 0;
       if (($473 | 0) == (HEAP32[$471 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $480 = invoke_ii(HEAP32[(HEAP32[$471 >> 2] | 0) + 36 >> 2] | 0, $471 | 0) | 0;
        $481 = __THREW__;
        __THREW__ = 0;
        if ($481 & 1) {
         label = 22;
         break L4;
        } else $$0$i$i179 = $480;
       } else $$0$i$i179 = HEAP32[$473 >> 2] | 0;
       if (($$0$i$i179 | 0) != (HEAP32[$485 >> 2] | 0)) {
        $$lcssa261 = $485;
        break L113;
       }
       $487 = HEAP32[$__b >> 2] | 0;
       $488 = $487 + 12 | 0;
       $489 = HEAP32[$488 >> 2] | 0;
       if (($489 | 0) == (HEAP32[$487 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$487 >> 2] | 0) + 40 >> 2] | 0, $487 | 0) | 0;
        $496 = __THREW__;
        __THREW__ = 0;
        if ($496 & 1) {
         label = 22;
         break L4;
        }
       } else HEAP32[$488 >> 2] = $489 + 4;
       $485 = $485 + 4 | 0;
       $$pre288 = HEAP8[$__sym >> 0] | 0;
       $501 = ($$pre288 & 1) == 0;
       $507 = ($501 ? $24 : HEAP32[$23 >> 2] | 0) + (($501 ? ($$pre288 & 255) >>> 1 : HEAP32[$24 >> 2] | 0) << 2) | 0;
       if (($485 | 0) == ($507 | 0)) {
        $$lcssa261 = $507;
        break;
       } else {
        $$pre$i3$i$i191391 = $$pre$i3$i$i191290;
        $456 = $869;
       }
      }
     } while (0);
     if ($22) {
      $509 = HEAP8[$__sym >> 0] | 0;
      $511 = ($509 & 1) == 0;
      if (($$lcssa261 | 0) == (($511 ? $24 : HEAP32[$23 >> 2] | 0) + (($511 ? ($509 & 255) >>> 1 : HEAP32[$24 >> 2] | 0) << 2) | 0)) {
       $866 = $863;
       $__trailing_sign$1 = $__trailing_sign$0399;
      } else {
       label = 148;
       break L4;
      }
     } else {
      $866 = $863;
      $__trailing_sign$1 = $__trailing_sign$0399;
     }
     break;
    }
   case 4:
    {
     $62 = HEAP32[$__ts >> 2] | 0;
     $$pre$i3$i$i166 = $865;
     $538 = $865;
     $592 = $863;
     $__ng$0 = 0;
     L150 : while (1) {
      $522 = HEAP32[$__b >> 2] | 0;
      do if (!$522) $552 = 1; else {
       $525 = HEAP32[$522 + 12 >> 2] | 0;
       if (($525 | 0) == (HEAP32[$522 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $532 = invoke_ii(HEAP32[(HEAP32[$522 >> 2] | 0) + 36 >> 2] | 0, $522 | 0) | 0;
        $533 = __THREW__;
        __THREW__ = 0;
        if ($533 & 1) {
         label = 25;
         break L4;
        } else $$0$i$i$i$i158 = $532;
       } else $$0$i$i$i$i158 = HEAP32[$525 >> 2] | 0;
       if (($$0$i$i$i$i158 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $552 = 1;
        break;
       } else {
        $552 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$538) {
       $$pre$i3$i$i166275 = $$pre$i3$i$i166;
       label = 162;
      } else {
       $540 = HEAP32[$538 + 12 >> 2] | 0;
       if (($540 | 0) == (HEAP32[$538 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $547 = invoke_ii(HEAP32[(HEAP32[$538 >> 2] | 0) + 36 >> 2] | 0, $538 | 0) | 0;
        $548 = __THREW__;
        __THREW__ = 0;
        if ($548 & 1) {
         label = 25;
         break L4;
        } else $$0$i$i1$i$i164 = $547;
       } else $$0$i$i1$i$i164 = HEAP32[$540 >> 2] | 0;
       if (($$0$i$i1$i$i164 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i3$i$i166275 = 0;
        label = 162;
        break;
       } else if ($552 ^ ($$pre$i3$i$i166 | 0) == 0) {
        $$pre$i3$i$i166277 = $$pre$i3$i$i166;
        $870 = $$pre$i3$i$i166;
        break;
       } else {
        $$lcssa416 = $592;
        $$pre$i3$i$i134 = $$pre$i3$i$i166;
        $__ng$0$lcssa417 = $__ng$0;
        break L150;
       }
      } while (0);
      if ((label | 0) == 162) {
       label = 0;
       if ($552) {
        $$lcssa416 = $592;
        $$pre$i3$i$i134 = $$pre$i3$i$i166275;
        $__ng$0$lcssa417 = $__ng$0;
        break;
       } else {
        $$pre$i3$i$i166277 = $$pre$i3$i$i166275;
        $870 = 0;
       }
      }
      $553 = HEAP32[$__b >> 2] | 0;
      $555 = HEAP32[$553 + 12 >> 2] | 0;
      if (($555 | 0) == (HEAP32[$553 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $562 = invoke_ii(HEAP32[(HEAP32[$553 >> 2] | 0) + 36 >> 2] | 0, $553 | 0) | 0;
       $563 = __THREW__;
       __THREW__ = 0;
       if ($563 & 1) {
        label = 25;
        break L4;
       } else $$0$i$i155 = $562;
      } else $$0$i$i155 = HEAP32[$555 >> 2] | 0;
      __THREW__ = 0;
      $569 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i155 | 0) | 0;
      $570 = __THREW__;
      __THREW__ = 0;
      if ($570 & 1) {
       label = 25;
       break L4;
      }
      if ($569) {
       $572 = HEAP32[$__wn >> 2] | 0;
       if (($572 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(17, $__wb | 0, $__wn | 0, $0 | 0);
        $575 = __THREW__;
        __THREW__ = 0;
        if ($575 & 1) {
         label = 25;
         break L4;
        }
        $578 = HEAP32[$__wn >> 2] | 0;
       } else $578 = $572;
       HEAP32[$__wn >> 2] = $578 + 4;
       HEAP32[$578 >> 2] = $$0$i$i155;
       $871 = $592;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else {
       $580 = HEAP8[$__grp >> 0] | 0;
       if (!(($$0$i$i155 | 0) == ($62 | 0) & (($__ng$0 | 0) != 0 ? ((($580 & 1) == 0 ? ($580 & 255) >>> 1 : HEAP32[$28 >> 2] | 0) | 0) != 0 : 0))) {
        $$lcssa416 = $592;
        $$pre$i3$i$i134 = $$pre$i3$i$i166277;
        $__ng$0$lcssa417 = $__ng$0;
        break;
       }
       if (($592 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
        $593 = __THREW__;
        __THREW__ = 0;
        if ($593 & 1) {
         label = 25;
         break L4;
        }
        $596 = HEAP32[$__gn >> 2] | 0;
       } else $596 = $592;
       $595 = $596 + 4 | 0;
       HEAP32[$__gn >> 2] = $595;
       HEAP32[$596 >> 2] = $__ng$0;
       $871 = $595;
       $__ng$1 = 0;
      }
      $597 = HEAP32[$__b >> 2] | 0;
      $598 = $597 + 12 | 0;
      $599 = HEAP32[$598 >> 2] | 0;
      if (($599 | 0) == (HEAP32[$597 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$597 >> 2] | 0) + 40 >> 2] | 0, $597 | 0) | 0;
       $606 = __THREW__;
       __THREW__ = 0;
       if ($606 & 1) {
        label = 25;
        break L4;
       } else {
        $$pre$i3$i$i166 = $$pre$i3$i$i166277;
        $538 = $870;
        $592 = $871;
        $__ng$0 = $__ng$1;
        continue;
       }
      } else {
       HEAP32[$598 >> 2] = $599 + 4;
       $$pre$i3$i$i166 = $$pre$i3$i$i166277;
       $538 = $870;
       $592 = $871;
       $__ng$0 = $__ng$1;
       continue;
      }
     }
     if (($__ng$0$lcssa417 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa416 | 0) : 0) {
      if (($$lcssa416 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
       $614 = __THREW__;
       __THREW__ = 0;
       if ($614 & 1) {
        label = 26;
        break L4;
       }
       $617 = HEAP32[$__gn >> 2] | 0;
      } else $617 = $$lcssa416;
      $616 = $617 + 4 | 0;
      HEAP32[$__gn >> 2] = $616;
      HEAP32[$617 >> 2] = $__ng$0$lcssa417;
      $872 = $616;
     } else $872 = $$lcssa416;
     $618 = HEAP32[$__fd >> 2] | 0;
     if (($618 | 0) > 0) {
      $620 = HEAP32[$__b >> 2] | 0;
      do if (!$620) $873 = 1; else {
       $623 = HEAP32[$620 + 12 >> 2] | 0;
       if (($623 | 0) == (HEAP32[$620 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $630 = invoke_ii(HEAP32[(HEAP32[$620 >> 2] | 0) + 36 >> 2] | 0, $620 | 0) | 0;
        $631 = __THREW__;
        __THREW__ = 0;
        if ($631 & 1) {
         label = 26;
         break L4;
        } else $$0$i$i$i$i126 = $630;
       } else $$0$i$i$i$i126 = HEAP32[$623 >> 2] | 0;
       if (($$0$i$i$i$i126 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $873 = 1;
        break;
       } else {
        $873 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$$pre$i3$i$i134) label = 200; else {
       $637 = HEAP32[$$pre$i3$i$i134 + 12 >> 2] | 0;
       if (($637 | 0) == (HEAP32[$$pre$i3$i$i134 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $644 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i134 >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i134 | 0) | 0;
        $645 = __THREW__;
        __THREW__ = 0;
        if ($645 & 1) {
         label = 26;
         break L4;
        } else $$0$i$i1$i$i132 = $644;
       } else $$0$i$i1$i$i132 = HEAP32[$637 >> 2] | 0;
       if (($$0$i$i1$i$i132 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 200;
        break;
       } else if ($873) {
        $874 = $$pre$i3$i$i134;
        break;
       } else {
        label = 206;
        break L4;
       }
      } while (0);
      if ((label | 0) == 200) {
       label = 0;
       if ($873) {
        label = 206;
        break L4;
       } else $874 = 0;
      }
      $649 = HEAP32[$__b >> 2] | 0;
      $651 = HEAP32[$649 + 12 >> 2] | 0;
      if (($651 | 0) == (HEAP32[$649 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $658 = invoke_ii(HEAP32[(HEAP32[$649 >> 2] | 0) + 36 >> 2] | 0, $649 | 0) | 0;
       $659 = __THREW__;
       __THREW__ = 0;
       if ($659 & 1) {
        label = 26;
        break L4;
       } else $$0$i$i119 = $658;
      } else $$0$i$i119 = HEAP32[$651 >> 2] | 0;
      if (($$0$i$i119 | 0) != (HEAP32[$__dp >> 2] | 0)) {
       label = 206;
       break L4;
      }
      $666 = HEAP32[$__b >> 2] | 0;
      $667 = $666 + 12 | 0;
      $668 = HEAP32[$667 >> 2] | 0;
      if (($668 | 0) == (HEAP32[$666 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$666 >> 2] | 0) + 40 >> 2] | 0, $666 | 0) | 0;
       $675 = __THREW__;
       __THREW__ = 0;
       if ($675 & 1) {
        label = 26;
        break L4;
       }
      } else HEAP32[$667 >> 2] = $668 + 4;
      if (($618 | 0) > 0) {
       $$pre$i3$i$i100382 = $874;
       $695 = $874;
       $752 = $618;
       while (1) {
        $679 = HEAP32[$__b >> 2] | 0;
        do if (!$679) $709 = 1; else {
         $682 = HEAP32[$679 + 12 >> 2] | 0;
         if (($682 | 0) == (HEAP32[$679 + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $689 = invoke_ii(HEAP32[(HEAP32[$679 >> 2] | 0) + 36 >> 2] | 0, $679 | 0) | 0;
          $690 = __THREW__;
          __THREW__ = 0;
          if ($690 & 1) {
           label = 24;
           break L4;
          } else $$0$i$i$i$i92 = $689;
         } else $$0$i$i$i$i92 = HEAP32[$682 >> 2] | 0;
         if (($$0$i$i$i$i92 | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $709 = 1;
          break;
         } else {
          $709 = (HEAP32[$__b >> 2] | 0) == 0;
          break;
         }
        } while (0);
        do if (!$695) {
         $$pre$i3$i$i100282$ph = $$pre$i3$i$i100382;
         label = 224;
        } else {
         $697 = HEAP32[$695 + 12 >> 2] | 0;
         if (($697 | 0) == (HEAP32[$695 + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $704 = invoke_ii(HEAP32[(HEAP32[$695 >> 2] | 0) + 36 >> 2] | 0, $695 | 0) | 0;
          $705 = __THREW__;
          __THREW__ = 0;
          if ($705 & 1) {
           label = 24;
           break L4;
          } else $$0$i$i1$i$i98 = $704;
         } else $$0$i$i1$i$i98 = HEAP32[$697 >> 2] | 0;
         if (($$0$i$i1$i$i98 | 0) == -1) {
          HEAP32[$__e >> 2] = 0;
          $$pre$i3$i$i100282$ph = 0;
          label = 224;
          break;
         } else if ($709 ^ ($$pre$i3$i$i100382 | 0) == 0) {
          $$pre$i3$i$i100282306 = $$pre$i3$i$i100382;
          $875 = $$pre$i3$i$i100382;
          break;
         } else {
          label = 231;
          break L4;
         }
        } while (0);
        if ((label | 0) == 224) {
         label = 0;
         if ($709) {
          label = 231;
          break L4;
         } else {
          $$pre$i3$i$i100282306 = $$pre$i3$i$i100282$ph;
          $875 = 0;
         }
        }
        $710 = HEAP32[$__b >> 2] | 0;
        $712 = HEAP32[$710 + 12 >> 2] | 0;
        if (($712 | 0) == (HEAP32[$710 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $719 = invoke_ii(HEAP32[(HEAP32[$710 >> 2] | 0) + 36 >> 2] | 0, $710 | 0) | 0;
         $720 = __THREW__;
         __THREW__ = 0;
         if ($720 & 1) {
          label = 24;
          break L4;
         } else $$0$i$i86 = $719;
        } else $$0$i$i86 = HEAP32[$712 >> 2] | 0;
        __THREW__ = 0;
        $726 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 2048, $$0$i$i86 | 0) | 0;
        $727 = __THREW__;
        __THREW__ = 0;
        if ($727 & 1) {
         label = 24;
         break L4;
        }
        if (!$726) {
         label = 231;
         break L4;
        }
        if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_viii(17, $__wb | 0, $__wn | 0, $0 | 0);
         $734 = __THREW__;
         __THREW__ = 0;
         if ($734 & 1) {
          label = 24;
          break L4;
         }
        }
        $736 = HEAP32[$__b >> 2] | 0;
        $738 = HEAP32[$736 + 12 >> 2] | 0;
        if (($738 | 0) == (HEAP32[$736 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $745 = invoke_ii(HEAP32[(HEAP32[$736 >> 2] | 0) + 36 >> 2] | 0, $736 | 0) | 0;
         $746 = __THREW__;
         __THREW__ = 0;
         if ($746 & 1) {
          label = 24;
          break L4;
         } else $$0$i$i78 = $745;
        } else $$0$i$i78 = HEAP32[$738 >> 2] | 0;
        $749 = HEAP32[$__wn >> 2] | 0;
        HEAP32[$__wn >> 2] = $749 + 4;
        HEAP32[$749 >> 2] = $$0$i$i78;
        $752$looptemp = $752;
        $752 = $752 + -1 | 0;
        HEAP32[$__fd >> 2] = $752;
        $753 = HEAP32[$__b >> 2] | 0;
        $754 = $753 + 12 | 0;
        $755 = HEAP32[$754 >> 2] | 0;
        if (($755 | 0) == (HEAP32[$753 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$753 >> 2] | 0) + 40 >> 2] | 0, $753 | 0) | 0;
         $762 = __THREW__;
         __THREW__ = 0;
         if ($762 & 1) {
          label = 24;
          break L4;
         }
        } else HEAP32[$754 >> 2] = $755 + 4;
        if (($752$looptemp | 0) <= 1) break; else {
         $$pre$i3$i$i100382 = $$pre$i3$i$i100282306;
         $695 = $875;
        }
       }
      }
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 242;
      break L4;
     } else {
      $866 = $872;
      $__trailing_sign$1 = $__trailing_sign$0399;
     }
     break;
    }
   default:
    {
     $866 = $863;
     $__trailing_sign$1 = $__trailing_sign$0399;
    }
   } while (0);
   L278 : do if ((label | 0) == 44) while (1) {
    label = 0;
    $124 = HEAP32[$__b >> 2] | 0;
    do if (!$124) $154 = 1; else {
     $127 = HEAP32[$124 + 12 >> 2] | 0;
     if (($127 | 0) == (HEAP32[$124 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $134 = invoke_ii(HEAP32[(HEAP32[$124 >> 2] | 0) + 36 >> 2] | 0, $124 | 0) | 0;
      $135 = __THREW__;
      __THREW__ = 0;
      if ($135 & 1) {
       label = 21;
       break L4;
      } else $$0$i$i$i$i51 = $134;
     } else $$0$i$i$i$i51 = HEAP32[$127 >> 2] | 0;
     if (($$0$i$i$i$i51 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $154 = 1;
      break;
     } else {
      $154 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$140) {
     $$pre$i3$i$i59300 = $$pre$i3$i$i59;
     label = 57;
    } else {
     $142 = HEAP32[$140 + 12 >> 2] | 0;
     if (($142 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $149 = invoke_ii(HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] | 0, $140 | 0) | 0;
      $150 = __THREW__;
      __THREW__ = 0;
      if ($150 & 1) {
       label = 21;
       break L4;
      } else $$0$i$i1$i$i57 = $149;
     } else $$0$i$i1$i$i57 = HEAP32[$142 >> 2] | 0;
     if (($$0$i$i1$i$i57 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i3$i$i59300 = 0;
      label = 57;
      break;
     } else if ($154 ^ ($$pre$i3$i$i59 | 0) == 0) {
      $$pre$i3$i$i59302 = $$pre$i3$i$i59;
      $867 = $$pre$i3$i$i59;
      break;
     } else {
      $866 = $863;
      $__trailing_sign$1 = $__trailing_sign$0399;
      break L278;
     }
    } while (0);
    if ((label | 0) == 57) {
     label = 0;
     if ($154) {
      $866 = $863;
      $__trailing_sign$1 = $__trailing_sign$0399;
      break L278;
     } else {
      $$pre$i3$i$i59302 = $$pre$i3$i$i59300;
      $867 = 0;
     }
    }
    $155 = HEAP32[$__b >> 2] | 0;
    $157 = HEAP32[$155 + 12 >> 2] | 0;
    if (($157 | 0) == (HEAP32[$155 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $164 = invoke_ii(HEAP32[(HEAP32[$155 >> 2] | 0) + 36 >> 2] | 0, $155 | 0) | 0;
     $165 = __THREW__;
     __THREW__ = 0;
     if ($165 & 1) {
      label = 21;
      break L4;
     } else $$0$i$i66 = $164;
    } else $$0$i$i66 = HEAP32[$157 >> 2] | 0;
    __THREW__ = 0;
    $171 = invoke_iiii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, 8192, $$0$i$i66 | 0) | 0;
    $172 = __THREW__;
    __THREW__ = 0;
    if ($172 & 1) {
     label = 21;
     break L4;
    }
    if (!$171) {
     $866 = $863;
     $__trailing_sign$1 = $__trailing_sign$0399;
     break L278;
    }
    $174 = HEAP32[$__b >> 2] | 0;
    $175 = $174 + 12 | 0;
    $176 = HEAP32[$175 >> 2] | 0;
    if (($176 | 0) == (HEAP32[$174 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $183 = invoke_ii(HEAP32[(HEAP32[$174 >> 2] | 0) + 40 >> 2] | 0, $174 | 0) | 0;
     $184 = __THREW__;
     __THREW__ = 0;
     if ($184 & 1) {
      label = 21;
      break L4;
     } else $$0$i$i73 = $183;
    } else {
     HEAP32[$175 >> 2] = $176 + 4;
     $$0$i$i73 = HEAP32[$176 >> 2] | 0;
    }
    __THREW__ = 0;
    invoke_vii(73, $__spaces | 0, $$0$i$i73 | 0);
    $188 = __THREW__;
    __THREW__ = 0;
    if ($188 & 1) {
     label = 21;
     break L4;
    } else {
     $$pre$i3$i$i59 = $$pre$i3$i$i59302;
     $140 = $867;
     label = 44;
    }
   } while (0);
   $__p$0397 = $__p$0397 + 1 | 0;
   if ($__p$0397 >>> 0 >= 4) {
    $$lcssa357 = $866;
    $__trailing_sign$0$lcssa = $__trailing_sign$1;
    label = 244;
    break;
   } else {
    $863 = $866;
    $__trailing_sign$0399 = $__trailing_sign$1;
   }
  }
  L314 : switch (label | 0) {
  case 21:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 22:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 23:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 24:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 25:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 26:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index8 = tempRet0;
    break L1;
    break;
   }
  case 42:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 107:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 148:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 206:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 231:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 242:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 244:
   {
    L316 : do if ($__trailing_sign$0$lcssa) {
     $774 = $__trailing_sign$0$lcssa + 4 | 0;
     $775 = $__trailing_sign$0$lcssa + 8 | 0;
     $__i$0 = 1;
     L318 : while (1) {
      $776 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($776 & 1)) $783 = ($776 & 255) >>> 1; else $783 = HEAP32[$774 >> 2] | 0;
      if ($__i$0 >>> 0 >= $783 >>> 0) break L316;
      $784 = HEAP32[$__b >> 2] | 0;
      do if (!$784) $876 = 1; else {
       $787 = HEAP32[$784 + 12 >> 2] | 0;
       if (($787 | 0) == (HEAP32[$784 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $794 = invoke_ii(HEAP32[(HEAP32[$784 >> 2] | 0) + 36 >> 2] | 0, $784 | 0) | 0;
        $795 = __THREW__;
        __THREW__ = 0;
        if ($795 & 1) {
         label = 20;
         break L318;
        } else $$0$i$i$i$i = $794;
       } else $$0$i$i$i$i = HEAP32[$787 >> 2] | 0;
       if (($$0$i$i$i$i | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $876 = 1;
        break;
       } else {
        $876 = (HEAP32[$__b >> 2] | 0) == 0;
        break;
       }
      } while (0);
      $799 = HEAP32[$__e >> 2] | 0;
      do if (!$799) label = 263; else {
       $802 = HEAP32[$799 + 12 >> 2] | 0;
       if (($802 | 0) == (HEAP32[$799 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $809 = invoke_ii(HEAP32[(HEAP32[$799 >> 2] | 0) + 36 >> 2] | 0, $799 | 0) | 0;
        $810 = __THREW__;
        __THREW__ = 0;
        if ($810 & 1) {
         label = 20;
         break L318;
        } else $$0$i$i1$i$i = $809;
       } else $$0$i$i1$i$i = HEAP32[$802 >> 2] | 0;
       if (($$0$i$i1$i$i | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 263;
        break;
       } else if ($876) break; else {
        label = 271;
        break L318;
       }
      } while (0);
      if ((label | 0) == 263) {
       label = 0;
       if ($876) {
        label = 271;
        break;
       }
      }
      $814 = HEAP32[$__b >> 2] | 0;
      $816 = HEAP32[$814 + 12 >> 2] | 0;
      if (($816 | 0) == (HEAP32[$814 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $823 = invoke_ii(HEAP32[(HEAP32[$814 >> 2] | 0) + 36 >> 2] | 0, $814 | 0) | 0;
       $824 = __THREW__;
       __THREW__ = 0;
       if ($824 & 1) {
        label = 20;
        break;
       } else $$0$i$i = $823;
      } else $$0$i$i = HEAP32[$816 >> 2] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $832 = $774; else $832 = HEAP32[$775 >> 2] | 0;
      if (($$0$i$i | 0) != (HEAP32[$832 + ($__i$0 << 2) >> 2] | 0)) {
       label = 271;
       break;
      }
      $837 = $__i$0 + 1 | 0;
      $838 = HEAP32[$__b >> 2] | 0;
      $839 = $838 + 12 | 0;
      $840 = HEAP32[$839 >> 2] | 0;
      if (($840 | 0) == (HEAP32[$838 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$838 >> 2] | 0) + 40 >> 2] | 0, $838 | 0) | 0;
       $847 = __THREW__;
       __THREW__ = 0;
       if ($847 & 1) {
        label = 20;
        break;
       } else {
        $__i$0 = $837;
        continue;
       }
      } else {
       HEAP32[$839 >> 2] = $840 + 4;
       $__i$0 = $837;
       continue;
      }
     }
     if ((label | 0) == 20) {
      $63 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $63;
      $lpad$phi$index8 = tempRet0;
      break L1;
     } else if ((label | 0) == 271) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L314;
     }
    } while (0);
    $850 = HEAP32[$__gb >> 2] | 0;
    if (($850 | 0) == ($$lcssa357 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $850, $$lcssa357, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $856 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if ($856) {
   __THREW__ = 0;
   invoke_vi(HEAP32[$2 >> 2] | 0, $856 | 0);
   $859 = __THREW__;
   __THREW__ = 0;
   if ($859 & 1) {
    $861 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($861);
   }
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__psn);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $79 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($79) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$2 >> 2] | 0, $79 | 0);
  $82 = __THREW__;
  __THREW__ = 0;
  if ($82 & 1) {
   $84 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($84);
  }
 }
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function ___floatscan($f, $prec, $pok) {
 $f = $f | 0;
 $prec = $prec | 0;
 $pok = $pok | 0;
 var $$0 = 0.0, $$0$i27 = 0.0, $$010$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$09$i = 0, $$1$be$i = 0, $$1$ph$i = 0, $$18$i = 0, $$2$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3105$i = 0, $$in = 0, $$lcssa = 0, $$lcssa256 = 0, $$lcssa256$lcssa = 0, $$lcssa257 = 0, $$lcssa257$lcssa = 0, $$lcssa263 = 0, $$lcssa264 = 0, $$lcssa265 = 0, $$lcssa275 = 0, $$not$i = 0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi42$iZ2D = 0.0, $$sink$off0$i = 0, $0 = 0, $1 = 0, $115 = 0, $123 = 0, $125 = 0, $132 = 0, $139 = 0, $147 = 0, $15 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $160 = 0, $164 = 0, $169 = 0, $171 = 0, $183 = 0.0, $190 = 0, $192 = 0, $2 = 0, $201 = 0, $205 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $223 = 0, $224 = 0, $225 = 0, $235 = 0, $236 = 0, $249 = 0, $251 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $270 = 0, $272 = 0, $283 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $295 = 0, $297 = 0, $298 = 0, $299 = 0, $300 = 0, $310 = 0.0, $322 = 0.0, $330 = 0, $331 = 0, $338 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $350 = 0, $358 = 0, $36 = 0, $360 = 0, $362 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $371 = 0, $376 = 0, $377 = 0, $381 = 0, $39 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $402 = 0, $403 = 0, $412 = 0, $413 = 0, $414 = 0, $42 = 0, $422 = 0, $427 = 0, $428 = 0, $430 = 0, $431 = 0, $444 = 0, $446 = 0, $456 = 0, $458 = 0, $470 = 0, $471 = 0, $472 = 0, $494 = 0, $506 = 0, $510 = 0, $513 = 0, $515 = 0, $516 = 0, $517 = 0, $520 = 0, $521 = 0, $533 = 0, $534 = 0, $535 = 0, $539 = 0, $541 = 0, $543 = 0, $544 = 0, $550 = 0, $552 = 0, $557 = 0, $560 = 0, $564 = 0, $567 = 0, $572 = 0, $576 = 0, $577 = 0, $579 = 0, $583 = 0, $585 = 0, $588 = 0, $589 = 0, $590 = 0, $591 = 0, $594 = 0, $595 = 0, $60 = 0, $604 = 0, $609 = 0, $610 = 0, $617 = 0, $619 = 0.0, $621 = 0, $625 = 0.0, $626 = 0.0, $629 = 0.0, $633 = 0, $636 = 0, $643 = 0.0, $661 = 0.0, $663 = 0, $669 = 0, $67 = 0, $670 = 0, $680 = 0, $69 = 0, $691 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $77 = 0, $82 = 0, $9 = 0, $90 = 0, $99 = 0, $a$0$lcssa151$i = 0, $a$085$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph38$i = 0, $a$3$i = 0, $a$3$i$lcssa248 = 0, $a$3$i249 = 0, $a$3$ph$i = 0, $a$3$ph157$i = 0, $a$478$i = 0, $a$5$i = 0, $a$5$i$lcssa = 0, $a$5$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i25 = 0.0, $bits$0$ph = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$179 = 0, $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$377 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $carry$087$i = 0, $carry1$0$i = 0, $carry1$1$i = 0, $carry1$1$i$lcssa = 0, $carry1$1$i$lcssa$lcssa = 0, $carry3$081$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$2$i = 0, $e2$0$i19 = 0, $e2$0$ph$i = 0, $e2$1$i = 0, $e2$1$i246 = 0, $e2$1$ph$i = 0, $e2$1$ph156$i = 0, $e2$2$i = 0, $e2$3$i = 0, $emin$0$ph = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$2$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa242 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa273 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3101$i = 0, $gotdig$3101$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1102$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$078 = 0, $i$1 = 0, $i$276 = 0, $i$3 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0104$i = 0, $j$0104$i$lcssa = 0, $j$067$i = 0, $j$068$i = 0, $j$069$i = 0, $j$2$i = 0, $j$394$i = 0, $k$0$lcssa$i = 0, $k$0103$i = 0, $k$0103$i$lcssa = 0, $k$063$i = 0, $k$064$i = 0, $k$065$i = 0, $k$2$i = 0, $k$3$i = 0, $k$486$i = 0, $k$5$i = 0, $k$5$in$i = 0, $k$679$i = 0, $lnz$0$lcssa$i = 0, $lnz$0100$i = 0, $lnz$0100$i$lcssa = 0, $lnz$057$i = 0, $lnz$058$i = 0, $lnz$059$i = 0, $lnz$2$i = 0, $or$cond16$i = 0, $or$cond19$i = 0, $or$cond9$i = 0, $rp$0$lcssa152$i = 0, $rp$084$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph36$i = 0, $rp$3$ph$i = 0, $rp$3$ph34$i = 0, $rp$477$i = 0, $rp$5$i = 0, $rp$5$i$lcssa = 0, $rp$5$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i24 = 0.0, $y$2$i = 0.0, $y$2$i26 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $z$0$i = 0, $z$1$i = 0, $z$1$ph37$i = 0, $z$2$i = 0, $z$3$i = 0, $z$3$i$lcssa = 0, $z$3$i$lcssa$lcssa = 0, $z$4$i = 0, $z$5$ph$i = 0, $z$7$1$i = 0, $z$7$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x$i = sp;
 switch ($prec | 0) {
 case 0:
  {
   $bits$0$ph = 24;
   $emin$0$ph = -149;
   label = 4;
   break;
  }
 case 1:
  {
   $bits$0$ph = 53;
   $emin$0$ph = -1074;
   label = 4;
   break;
  }
 case 2:
  {
   $bits$0$ph = 53;
   $emin$0$ph = -1074;
   label = 4;
   break;
  }
 default:
  $$0 = 0.0;
 }
 L4 : do if ((label | 0) == 4) {
  $0 = $f + 4 | 0;
  $1 = $f + 100 | 0;
  do {
   $2 = HEAP32[$0 >> 2] | 0;
   if ($2 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $2 + 1;
    $9 = HEAPU8[$2 >> 0] | 0;
   } else $9 = ___shgetc($f) | 0;
  } while ((_isspace($9) | 0) != 0);
  $$lcssa275 = $9;
  L13 : do switch ($$lcssa275 | 0) {
  case 43:
  case 45:
   {
    $15 = 1 - ((($$lcssa275 | 0) == 45 & 1) << 1) | 0;
    $16 = HEAP32[$0 >> 2] | 0;
    if ($16 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $16 + 1;
     $c$0 = HEAPU8[$16 >> 0] | 0;
     $sign$0 = $15;
     break L13;
    } else {
     $c$0 = ___shgetc($f) | 0;
     $sign$0 = $15;
     break L13;
    }
    break;
   }
  default:
   {
    $c$0 = $$lcssa275;
    $sign$0 = 1;
   }
  } while (0);
  $c$179 = $c$0;
  $i$078 = 0;
  while (1) {
   if (($c$179 | 32 | 0) != (HEAP8[57867 + $i$078 >> 0] | 0)) {
    $c$1$lcssa = $c$179;
    $i$0$lcssa = $i$078;
    break;
   }
   do if ($i$078 >>> 0 < 7) {
    $29 = HEAP32[$0 >> 2] | 0;
    if ($29 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $29 + 1;
     $c$2 = HEAPU8[$29 >> 0] | 0;
     break;
    } else {
     $c$2 = ___shgetc($f) | 0;
     break;
    }
   } else $c$2 = $c$179; while (0);
   $36 = $i$078 + 1 | 0;
   if ($36 >>> 0 < 8) {
    $c$179 = $c$2;
    $i$078 = $36;
   } else {
    $c$1$lcssa = $c$2;
    $i$0$lcssa = $36;
    break;
   }
  }
  L29 : do switch ($i$0$lcssa | 0) {
  case 8:
   break;
  case 3:
   {
    label = 23;
    break;
   }
  default:
   {
    $39 = ($pok | 0) != 0;
    if ($39 & $i$0$lcssa >>> 0 > 3) if (($i$0$lcssa | 0) == 8) break L29; else {
     label = 23;
     break L29;
    }
    L34 : do if (!$i$0$lcssa) {
     $c$377 = $c$1$lcssa;
     $i$276 = 0;
     while (1) {
      if (($c$377 | 32 | 0) != (HEAP8[60748 + $i$276 >> 0] | 0)) {
       $c$5 = $c$377;
       $i$3 = $i$276;
       break L34;
      }
      do if ($i$276 >>> 0 < 2) {
       $60 = HEAP32[$0 >> 2] | 0;
       if ($60 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $60 + 1;
        $c$4 = HEAPU8[$60 >> 0] | 0;
        break;
       } else {
        $c$4 = ___shgetc($f) | 0;
        break;
       }
      } else $c$4 = $c$377; while (0);
      $67 = $i$276 + 1 | 0;
      if ($67 >>> 0 < 3) {
       $c$377 = $c$4;
       $i$276 = $67;
      } else {
       $c$5 = $c$4;
       $i$3 = $67;
       break;
      }
     }
    } else {
     $c$5 = $c$1$lcssa;
     $i$3 = $i$0$lcssa;
    } while (0);
    switch ($i$3 | 0) {
    case 3:
     {
      $69 = HEAP32[$0 >> 2] | 0;
      if ($69 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $69 + 1;
       $77 = HEAPU8[$69 >> 0] | 0;
      } else $77 = ___shgetc($f) | 0;
      if (($77 | 0) == 40) $i$4 = 1; else {
       if (!(HEAP32[$1 >> 2] | 0)) {
        $$0 = nan;
        break L4;
       }
       HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       $$0 = nan;
       break L4;
      }
      while (1) {
       $82 = HEAP32[$0 >> 2] | 0;
       if ($82 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $82 + 1;
        $90 = HEAPU8[$82 >> 0] | 0;
       } else $90 = ___shgetc($f) | 0;
       if (!(($90 + -48 | 0) >>> 0 < 10 | ($90 + -65 | 0) >>> 0 < 26)) if (!(($90 | 0) == 95 | ($90 + -97 | 0) >>> 0 < 26)) {
        $$lcssa = $90;
        $i$4$lcssa = $i$4;
        break;
       }
       $i$4 = $i$4 + 1 | 0;
      }
      if (($$lcssa | 0) == 41) {
       $$0 = nan;
       break L4;
      }
      $99 = (HEAP32[$1 >> 2] | 0) == 0;
      if (!$99) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      if (!$39) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($f, 0);
       $$0 = 0.0;
       break L4;
      }
      if (!$i$4$lcssa) {
       $$0 = nan;
       break L4;
      } else $$in = $i$4$lcssa;
      while (1) {
       $$in = $$in + -1 | 0;
       if (!$99) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       if (!$$in) {
        $$0 = nan;
        break L4;
       }
      }
      break;
     }
    case 0:
     {
      do if (($c$5 | 0) == 48) {
       $115 = HEAP32[$0 >> 2] | 0;
       if ($115 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $115 + 1;
        $123 = HEAPU8[$115 >> 0] | 0;
       } else $123 = ___shgetc($f) | 0;
       if (($123 | 32 | 0) != 120) {
        if (!(HEAP32[$1 >> 2] | 0)) {
         $c$6 = 48;
         break;
        }
        HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
        $c$6 = 48;
        break;
       }
       $125 = HEAP32[$0 >> 2] | 0;
       if ($125 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $125 + 1;
        $c$0$i = HEAPU8[$125 >> 0] | 0;
        $gotdig$0$i = 0;
       } else {
        $c$0$i = ___shgetc($f) | 0;
        $gotdig$0$i = 0;
       }
       L94 : while (1) {
        switch ($c$0$i | 0) {
        case 46:
         {
          $gotdig$0$i$lcssa242 = $gotdig$0$i;
          label = 74;
          break L94;
          break;
         }
        case 48:
         break;
        default:
         {
          $169 = 0;
          $171 = 0;
          $694 = 0;
          $695 = 0;
          $c$2$i = $c$0$i;
          $gotdig$2$i = $gotdig$0$i;
          $gotrad$0$i = 0;
          $gottail$0$i = 0;
          $scale$0$i = 1.0;
          $x$0$i = 0;
          $y$0$i = 0.0;
          break L94;
         }
        }
        $132 = HEAP32[$0 >> 2] | 0;
        if ($132 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $132 + 1;
         $c$0$i = HEAPU8[$132 >> 0] | 0;
         $gotdig$0$i = 1;
         continue;
        } else {
         $c$0$i = ___shgetc($f) | 0;
         $gotdig$0$i = 1;
         continue;
        }
       }
       if ((label | 0) == 74) {
        $139 = HEAP32[$0 >> 2] | 0;
        if ($139 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $139 + 1;
         $c$1$ph$i = HEAPU8[$139 >> 0] | 0;
        } else $c$1$ph$i = ___shgetc($f) | 0;
        if (($c$1$ph$i | 0) == 48) {
         $154 = 0;
         $155 = 0;
         while (1) {
          $147 = HEAP32[$0 >> 2] | 0;
          if ($147 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
           HEAP32[$0 >> 2] = $147 + 1;
           $159 = HEAPU8[$147 >> 0] | 0;
          } else $159 = ___shgetc($f) | 0;
          $156 = _i64Add($154 | 0, $155 | 0, -1, -1) | 0;
          $157 = tempRet0;
          if (($159 | 0) == 48) {
           $154 = $156;
           $155 = $157;
          } else {
           $169 = 0;
           $171 = 0;
           $694 = $156;
           $695 = $157;
           $c$2$i = $159;
           $gotdig$2$i = 1;
           $gotrad$0$i = 1;
           $gottail$0$i = 0;
           $scale$0$i = 1.0;
           $x$0$i = 0;
           $y$0$i = 0.0;
           break;
          }
         }
        } else {
         $169 = 0;
         $171 = 0;
         $694 = 0;
         $695 = 0;
         $c$2$i = $c$1$ph$i;
         $gotdig$2$i = $gotdig$0$i$lcssa242;
         $gotrad$0$i = 1;
         $gottail$0$i = 0;
         $scale$0$i = 1.0;
         $x$0$i = 0;
         $y$0$i = 0.0;
        }
       }
       while (1) {
        $160 = $c$2$i + -48 | 0;
        $$pre$i = $c$2$i | 32;
        if ($160 >>> 0 < 10) label = 86; else {
         $164 = ($c$2$i | 0) == 46;
         if (!($164 | ($$pre$i + -97 | 0) >>> 0 < 6)) {
          $213 = $171;
          $214 = $694;
          $216 = $169;
          $217 = $695;
          $c$2$lcssa$i = $c$2$i;
          $gotdig$2$i$lcssa = $gotdig$2$i;
          $gotrad$0$i$lcssa = $gotrad$0$i;
          $x$0$i$lcssa = $x$0$i;
          $y$0$i$lcssa = $y$0$i;
          break;
         }
         if ($164) if (!$gotrad$0$i) {
          $696 = $171;
          $697 = $169;
          $698 = $171;
          $699 = $169;
          $gotdig$3$i = $gotdig$2$i;
          $gotrad$1$i = 1;
          $gottail$2$i = $gottail$0$i;
          $scale$2$i = $scale$0$i;
          $x$2$i = $x$0$i;
          $y$2$i = $y$0$i;
         } else {
          $213 = $171;
          $214 = $694;
          $216 = $169;
          $217 = $695;
          $c$2$lcssa$i = 46;
          $gotdig$2$i$lcssa = $gotdig$2$i;
          $gotrad$0$i$lcssa = $gotrad$0$i;
          $x$0$i$lcssa = $x$0$i;
          $y$0$i$lcssa = $y$0$i;
          break;
         } else label = 86;
        }
        if ((label | 0) == 86) {
         label = 0;
         $d$0$i = ($c$2$i | 0) > 57 ? $$pre$i + -87 | 0 : $160;
         do if (($169 | 0) < 0 | ($169 | 0) == 0 & $171 >>> 0 < 8) {
          $gottail$1$i = $gottail$0$i;
          $scale$1$i = $scale$0$i;
          $x$1$i = $d$0$i + ($x$0$i << 4) | 0;
          $y$1$i = $y$0$i;
         } else {
          if (($169 | 0) < 0 | ($169 | 0) == 0 & $171 >>> 0 < 14) {
           $183 = $scale$0$i * .0625;
           $gottail$1$i = $gottail$0$i;
           $scale$1$i = $183;
           $x$1$i = $x$0$i;
           $y$1$i = $y$0$i + $183 * +($d$0$i | 0);
           break;
          }
          if (($gottail$0$i | 0) != 0 | ($d$0$i | 0) == 0) {
           $gottail$1$i = $gottail$0$i;
           $scale$1$i = $scale$0$i;
           $x$1$i = $x$0$i;
           $y$1$i = $y$0$i;
          } else {
           $gottail$1$i = 1;
           $scale$1$i = $scale$0$i;
           $x$1$i = $x$0$i;
           $y$1$i = $y$0$i + $scale$0$i * .5;
          }
         } while (0);
         $190 = _i64Add($171 | 0, $169 | 0, 1, 0) | 0;
         $696 = $694;
         $697 = $695;
         $698 = $190;
         $699 = tempRet0;
         $gotdig$3$i = 1;
         $gotrad$1$i = $gotrad$0$i;
         $gottail$2$i = $gottail$1$i;
         $scale$2$i = $scale$1$i;
         $x$2$i = $x$1$i;
         $y$2$i = $y$1$i;
        }
        $192 = HEAP32[$0 >> 2] | 0;
        if ($192 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $192 + 1;
         $169 = $699;
         $171 = $698;
         $694 = $696;
         $695 = $697;
         $c$2$i = HEAPU8[$192 >> 0] | 0;
         $gotdig$2$i = $gotdig$3$i;
         $gotrad$0$i = $gotrad$1$i;
         $gottail$0$i = $gottail$2$i;
         $scale$0$i = $scale$2$i;
         $x$0$i = $x$2$i;
         $y$0$i = $y$2$i;
         continue;
        } else {
         $169 = $699;
         $171 = $698;
         $694 = $696;
         $695 = $697;
         $c$2$i = ___shgetc($f) | 0;
         $gotdig$2$i = $gotdig$3$i;
         $gotrad$0$i = $gotrad$1$i;
         $gottail$0$i = $gottail$2$i;
         $scale$0$i = $scale$2$i;
         $x$0$i = $x$2$i;
         $y$0$i = $y$2$i;
         continue;
        }
       }
       if (!$gotdig$2$i$lcssa) {
        $201 = (HEAP32[$1 >> 2] | 0) == 0;
        if (!$201) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
        if (!$pok) ___shlim($f, 0); else if (!$201) {
         $205 = HEAP32[$0 >> 2] | 0;
         HEAP32[$0 >> 2] = $205 + -1;
         if ($gotrad$0$i$lcssa) HEAP32[$0 >> 2] = $205 + -2;
        }
        $$0 = +($sign$0 | 0) * 0.0;
        break L4;
       }
       $211 = ($gotrad$0$i$lcssa | 0) == 0;
       $212 = $211 ? $213 : $214;
       $215 = $211 ? $216 : $217;
       if (($216 | 0) < 0 | ($216 | 0) == 0 & $213 >>> 0 < 8) {
        $224 = $213;
        $225 = $216;
        $x$324$i = $x$0$i$lcssa;
        while (1) {
         $223 = $x$324$i << 4;
         $224 = _i64Add($224 | 0, $225 | 0, 1, 0) | 0;
         $225 = tempRet0;
         if (!(($225 | 0) < 0 | ($225 | 0) == 0 & $224 >>> 0 < 8)) {
          $x$3$lcssa$i = $223;
          break;
         } else $x$324$i = $223;
        }
       } else $x$3$lcssa$i = $x$0$i$lcssa;
       if (($c$2$lcssa$i | 32 | 0) == 112) {
        $235 = _scanexp($f, $pok) | 0;
        $236 = tempRet0;
        if (($235 | 0) == 0 & ($236 | 0) == -2147483648) {
         if (!$pok) {
          ___shlim($f, 0);
          $$0 = 0.0;
          break L4;
         }
         if (!(HEAP32[$1 >> 2] | 0)) {
          $253 = 0;
          $254 = 0;
         } else {
          HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
          $253 = 0;
          $254 = 0;
         }
        } else {
         $253 = $235;
         $254 = $236;
        }
       } else if (!(HEAP32[$1 >> 2] | 0)) {
        $253 = 0;
        $254 = 0;
       } else {
        HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
        $253 = 0;
        $254 = 0;
       }
       $249 = _bitshift64Shl($212 | 0, $215 | 0, 2) | 0;
       $251 = _i64Add($249 | 0, tempRet0 | 0, -32, -1) | 0;
       $255 = _i64Add($251 | 0, tempRet0 | 0, $253 | 0, $254 | 0) | 0;
       $256 = tempRet0;
       if (!$x$3$lcssa$i) {
        $$0 = +($sign$0 | 0) * 0.0;
        break L4;
       }
       if (($256 | 0) > 0 | ($256 | 0) == 0 & $255 >>> 0 > (0 - $emin$0$ph | 0) >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break L4;
       }
       $270 = $emin$0$ph + -106 | 0;
       $272 = (($270 | 0) < 0) << 31 >> 31;
       if (($256 | 0) < ($272 | 0) | ($256 | 0) == ($272 | 0) & $255 >>> 0 < $270 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break L4;
       }
       if (($x$3$lcssa$i | 0) > -1) {
        $288 = $255;
        $289 = $256;
        $x$419$i = $x$3$lcssa$i;
        $y$320$i = $y$0$i$lcssa;
        while (1) {
         $283 = !($y$320$i >= .5);
         $287 = $283 & 1 | $x$419$i << 1;
         $x$5$i = $287 ^ 1;
         $y$4$i = $y$320$i + ($283 ? $y$320$i : $y$320$i + -1.0);
         $290 = _i64Add($288 | 0, $289 | 0, -1, -1) | 0;
         $291 = tempRet0;
         if (($287 | 0) > -1) {
          $288 = $290;
          $289 = $291;
          $x$419$i = $x$5$i;
          $y$320$i = $y$4$i;
         } else {
          $297 = $290;
          $298 = $291;
          $x$4$lcssa$i = $x$5$i;
          $y$3$lcssa$i = $y$4$i;
          break;
         }
        }
       } else {
        $297 = $255;
        $298 = $256;
        $x$4$lcssa$i = $x$3$lcssa$i;
        $y$3$lcssa$i = $y$0$i$lcssa;
       }
       $295 = _i64Subtract(32, 0, $emin$0$ph | 0, (($emin$0$ph | 0) < 0) << 31 >> 31 | 0) | 0;
       $299 = _i64Add($297 | 0, $298 | 0, $295 | 0, tempRet0 | 0) | 0;
       $300 = tempRet0;
       if (0 > ($300 | 0) | 0 == ($300 | 0) & $bits$0$ph >>> 0 > $299 >>> 0) if (($299 | 0) < 0) {
        $$0710$i = 0;
        label = 127;
       } else {
        $$07$i = $299;
        label = 125;
       } else {
        $$07$i = $bits$0$ph;
        label = 125;
       }
       if ((label | 0) == 125) if (($$07$i | 0) < 53) {
        $$0710$i = $$07$i;
        label = 127;
       } else {
        $$0711$i = $$07$i;
        $$pre$phi42$iZ2D = +($sign$0 | 0);
        $bias$0$i = 0.0;
       }
       if ((label | 0) == 127) {
        $310 = +($sign$0 | 0);
        $$0711$i = $$0710$i;
        $$pre$phi42$iZ2D = $310;
        $bias$0$i = +_copysignl(+_scalbn(1.0, 84 - $$0710$i | 0), $310);
       }
       $or$cond9$i = ($x$4$lcssa$i & 1 | 0) == 0 & ($y$3$lcssa$i != 0.0 & ($$0711$i | 0) < 32);
       $322 = $$pre$phi42$iZ2D * ($or$cond9$i ? 0.0 : $y$3$lcssa$i) + ($bias$0$i + $$pre$phi42$iZ2D * +((($or$cond9$i & 1) + $x$4$lcssa$i | 0) >>> 0)) - $bias$0$i;
       if (!($322 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
       $$0 = +_scalbnl($322, $297);
       break L4;
      } else $c$6 = $c$5; while (0);
      $sum$i = $emin$0$ph + $bits$0$ph | 0;
      $330 = 0 - $sum$i | 0;
      $$09$i = $c$6;
      $gotdig$0$i12 = 0;
      L184 : while (1) {
       switch ($$09$i | 0) {
       case 46:
        {
         $gotdig$0$i12$lcssa273 = $gotdig$0$i12;
         label = 138;
         break L184;
         break;
        }
       case 48:
        break;
       default:
        {
         $$2$i = $$09$i;
         $700 = 0;
         $701 = 0;
         $gotdig$2$i13 = $gotdig$0$i12;
         $gotrad$0$i14 = 0;
         break L184;
        }
       }
       $331 = HEAP32[$0 >> 2] | 0;
       if ($331 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $331 + 1;
        $$09$i = HEAPU8[$331 >> 0] | 0;
        $gotdig$0$i12 = 1;
        continue;
       } else {
        $$09$i = ___shgetc($f) | 0;
        $gotdig$0$i12 = 1;
        continue;
       }
      }
      if ((label | 0) == 138) {
       $338 = HEAP32[$0 >> 2] | 0;
       if ($338 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $338 + 1;
        $$1$ph$i = HEAPU8[$338 >> 0] | 0;
       } else $$1$ph$i = ___shgetc($f) | 0;
       if (($$1$ph$i | 0) == 48) {
        $346 = 0;
        $347 = 0;
        while (1) {
         $348 = _i64Add($346 | 0, $347 | 0, -1, -1) | 0;
         $349 = tempRet0;
         $350 = HEAP32[$0 >> 2] | 0;
         if ($350 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
          HEAP32[$0 >> 2] = $350 + 1;
          $$1$be$i = HEAPU8[$350 >> 0] | 0;
         } else $$1$be$i = ___shgetc($f) | 0;
         if (($$1$be$i | 0) == 48) {
          $346 = $348;
          $347 = $349;
         } else {
          $$2$i = $$1$be$i;
          $700 = $348;
          $701 = $349;
          $gotdig$2$i13 = 1;
          $gotrad$0$i14 = 1;
          break;
         }
        }
       } else {
        $$2$i = $$1$ph$i;
        $700 = 0;
        $701 = 0;
        $gotdig$2$i13 = $gotdig$0$i12$lcssa273;
        $gotrad$0$i14 = 1;
       }
      }
      HEAP32[$x$i >> 2] = 0;
      $358 = $$2$i + -48 | 0;
      $360 = ($$2$i | 0) == 46;
      L203 : do if ($360 | $358 >>> 0 < 10) {
       $362 = $x$i + 496 | 0;
       $$3105$i = $$2$i;
       $365 = 0;
       $366 = 0;
       $702 = $360;
       $703 = $358;
       $704 = $700;
       $705 = $701;
       $gotdig$3101$i = $gotdig$2$i13;
       $gotrad$1102$i = $gotrad$0$i14;
       $j$0104$i = 0;
       $k$0103$i = 0;
       $lnz$0100$i = 0;
       L205 : while (1) {
        do if ($702) if (!$gotrad$1102$i) {
         $706 = $365;
         $707 = $366;
         $708 = $365;
         $709 = $366;
         $gotdig$4$i = $gotdig$3101$i;
         $gotrad$2$i = 1;
         $j$2$i = $j$0104$i;
         $k$2$i = $k$0103$i;
         $lnz$2$i = $lnz$0100$i;
        } else {
         $710 = $704;
         $711 = $705;
         $712 = $365;
         $713 = $366;
         $gotdig$3101$i$lcssa = $gotdig$3101$i;
         $j$0104$i$lcssa = $j$0104$i;
         $k$0103$i$lcssa = $k$0103$i;
         $lnz$0100$i$lcssa = $lnz$0100$i;
         break L205;
        } else {
         $367 = _i64Add($365 | 0, $366 | 0, 1, 0) | 0;
         $368 = tempRet0;
         $369 = ($$3105$i | 0) != 48;
         if (($k$0103$i | 0) >= 125) {
          if (!$369) {
           $706 = $704;
           $707 = $705;
           $708 = $367;
           $709 = $368;
           $gotdig$4$i = $gotdig$3101$i;
           $gotrad$2$i = $gotrad$1102$i;
           $j$2$i = $j$0104$i;
           $k$2$i = $k$0103$i;
           $lnz$2$i = $lnz$0100$i;
           break;
          }
          HEAP32[$362 >> 2] = HEAP32[$362 >> 2] | 1;
          $706 = $704;
          $707 = $705;
          $708 = $367;
          $709 = $368;
          $gotdig$4$i = $gotdig$3101$i;
          $gotrad$2$i = $gotrad$1102$i;
          $j$2$i = $j$0104$i;
          $k$2$i = $k$0103$i;
          $lnz$2$i = $lnz$0100$i;
          break;
         }
         $371 = $x$i + ($k$0103$i << 2) | 0;
         if (!$j$0104$i) $storemerge$i = $703; else $storemerge$i = $$3105$i + -48 + ((HEAP32[$371 >> 2] | 0) * 10 | 0) | 0;
         HEAP32[$371 >> 2] = $storemerge$i;
         $376 = $j$0104$i + 1 | 0;
         $377 = ($376 | 0) == 9;
         $706 = $704;
         $707 = $705;
         $708 = $367;
         $709 = $368;
         $gotdig$4$i = 1;
         $gotrad$2$i = $gotrad$1102$i;
         $j$2$i = $377 ? 0 : $376;
         $k$2$i = ($377 & 1) + $k$0103$i | 0;
         $lnz$2$i = $369 ? $367 : $lnz$0100$i;
        } while (0);
        $381 = HEAP32[$0 >> 2] | 0;
        if ($381 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $381 + 1;
         $$3$be$i = HEAPU8[$381 >> 0] | 0;
        } else $$3$be$i = ___shgetc($f) | 0;
        $703 = $$3$be$i + -48 | 0;
        $702 = ($$3$be$i | 0) == 46;
        if (!($702 | $703 >>> 0 < 10)) {
         $$3$lcssa$i = $$3$be$i;
         $394 = $708;
         $395 = $706;
         $397 = $709;
         $398 = $707;
         $gotdig$3$lcssa$i = $gotdig$4$i;
         $gotrad$1$lcssa$i = $gotrad$2$i;
         $j$0$lcssa$i = $j$2$i;
         $k$0$lcssa$i = $k$2$i;
         $lnz$0$lcssa$i = $lnz$2$i;
         label = 161;
         break L203;
        } else {
         $$3105$i = $$3$be$i;
         $365 = $708;
         $366 = $709;
         $704 = $706;
         $705 = $707;
         $gotdig$3101$i = $gotdig$4$i;
         $gotrad$1102$i = $gotrad$2$i;
         $j$0104$i = $j$2$i;
         $k$0103$i = $k$2$i;
         $lnz$0100$i = $lnz$2$i;
        }
       }
       $714 = $712;
       $715 = $713;
       $716 = $710;
       $717 = $711;
       $718 = ($gotdig$3101$i$lcssa | 0) != 0;
       $j$069$i = $j$0104$i$lcssa;
       $k$065$i = $k$0103$i$lcssa;
       $lnz$059$i = $lnz$0100$i$lcssa;
       label = 169;
      } else {
       $$3$lcssa$i = $$2$i;
       $394 = 0;
       $395 = $700;
       $397 = 0;
       $398 = $701;
       $gotdig$3$lcssa$i = $gotdig$2$i13;
       $gotrad$1$lcssa$i = $gotrad$0$i14;
       $j$0$lcssa$i = 0;
       $k$0$lcssa$i = 0;
       $lnz$0$lcssa$i = 0;
       label = 161;
      } while (0);
      do if ((label | 0) == 161) {
       $392 = ($gotrad$1$lcssa$i | 0) == 0;
       $393 = $392 ? $394 : $395;
       $396 = $392 ? $397 : $398;
       $399 = ($gotdig$3$lcssa$i | 0) != 0;
       if (!(($$3$lcssa$i | 32 | 0) == 101 & $399)) if (($$3$lcssa$i | 0) > -1) {
        $714 = $394;
        $715 = $397;
        $716 = $393;
        $717 = $396;
        $718 = $399;
        $j$069$i = $j$0$lcssa$i;
        $k$065$i = $k$0$lcssa$i;
        $lnz$059$i = $lnz$0$lcssa$i;
        label = 169;
        break;
       } else {
        $719 = $394;
        $720 = $397;
        $721 = $399;
        $722 = $393;
        $723 = $396;
        $j$068$i = $j$0$lcssa$i;
        $k$064$i = $k$0$lcssa$i;
        $lnz$058$i = $lnz$0$lcssa$i;
        label = 171;
        break;
       }
       $402 = _scanexp($f, $pok) | 0;
       $403 = tempRet0;
       if (($402 | 0) == 0 & ($403 | 0) == -2147483648) {
        if (!$pok) {
         ___shlim($f, 0);
         $$0$i27 = 0.0;
         break;
        }
        if (!(HEAP32[$1 >> 2] | 0)) {
         $412 = 0;
         $413 = 0;
        } else {
         HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
         $412 = 0;
         $413 = 0;
        }
       } else {
        $412 = $402;
        $413 = $403;
       }
       $414 = _i64Add($412 | 0, $413 | 0, $393 | 0, $396 | 0) | 0;
       $427 = $414;
       $428 = $394;
       $430 = tempRet0;
       $431 = $397;
       $j$067$i = $j$0$lcssa$i;
       $k$063$i = $k$0$lcssa$i;
       $lnz$057$i = $lnz$0$lcssa$i;
       label = 173;
      } while (0);
      if ((label | 0) == 169) if (!(HEAP32[$1 >> 2] | 0)) {
       $719 = $714;
       $720 = $715;
       $721 = $718;
       $722 = $716;
       $723 = $717;
       $j$068$i = $j$069$i;
       $k$064$i = $k$065$i;
       $lnz$058$i = $lnz$059$i;
       label = 171;
      } else {
       HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       if ($718) {
        $427 = $716;
        $428 = $714;
        $430 = $717;
        $431 = $715;
        $j$067$i = $j$069$i;
        $k$063$i = $k$065$i;
        $lnz$057$i = $lnz$059$i;
        label = 173;
       } else label = 172;
      }
      if ((label | 0) == 171) if ($721) {
       $427 = $722;
       $428 = $719;
       $430 = $723;
       $431 = $720;
       $j$067$i = $j$068$i;
       $k$063$i = $k$064$i;
       $lnz$057$i = $lnz$058$i;
       label = 173;
      } else label = 172;
      do if ((label | 0) == 172) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($f, 0);
       $$0$i27 = 0.0;
      } else if ((label | 0) == 173) {
       $422 = HEAP32[$x$i >> 2] | 0;
       if (!$422) {
        $$0$i27 = +($sign$0 | 0) * 0.0;
        break;
       }
       if ((($431 | 0) < 0 | ($431 | 0) == 0 & $428 >>> 0 < 10) & (($427 | 0) == ($428 | 0) & ($430 | 0) == ($431 | 0))) if ($bits$0$ph >>> 0 > 30 | ($422 >>> $bits$0$ph | 0) == 0) {
        $$0$i27 = +($sign$0 | 0) * +($422 >>> 0);
        break;
       }
       $444 = ($emin$0$ph | 0) / -2 | 0;
       $446 = (($444 | 0) < 0) << 31 >> 31;
       if (($430 | 0) > ($446 | 0) | ($430 | 0) == ($446 | 0) & $427 >>> 0 > $444 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0$i27 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break;
       }
       $456 = $emin$0$ph + -106 | 0;
       $458 = (($456 | 0) < 0) << 31 >> 31;
       if (($430 | 0) < ($458 | 0) | ($430 | 0) == ($458 | 0) & $427 >>> 0 < $456 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0$i27 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break;
       }
       if (!$j$067$i) $k$3$i = $k$063$i; else {
        if (($j$067$i | 0) < 9) {
         $470 = $x$i + ($k$063$i << 2) | 0;
         $472 = HEAP32[$470 >> 2] | 0;
         $j$394$i = $j$067$i;
         while (1) {
          $471 = $472 * 10 | 0;
          $j$394$i = $j$394$i + 1 | 0;
          if (($j$394$i | 0) == 9) {
           $$lcssa265 = $471;
           break;
          } else $472 = $471;
         }
         HEAP32[$470 >> 2] = $$lcssa265;
        }
        $k$3$i = $k$063$i + 1 | 0;
       }
       if (($lnz$057$i | 0) < 9) if (($lnz$057$i | 0) <= ($427 | 0) & ($427 | 0) < 18) {
        if (($427 | 0) == 9) {
         $$0$i27 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0);
         break;
        }
        if (($427 | 0) < 9) {
         $$0$i27 = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0) / +(HEAP32[4848 + (8 - $427 << 2) >> 2] | 0);
         break;
        }
        $494 = $bits$0$ph + 27 + (Math_imul($427, -3) | 0) | 0;
        $$pre$i17 = HEAP32[$x$i >> 2] | 0;
        if (($494 | 0) > 30 | ($$pre$i17 >>> $494 | 0) == 0) {
         $$0$i27 = +($sign$0 | 0) * +($$pre$i17 >>> 0) * +(HEAP32[4848 + ($427 + -10 << 2) >> 2] | 0);
         break;
        }
       }
       $506 = ($427 | 0) % 9 | 0;
       if (!$506) {
        $a$2$ph38$i = 0;
        $e2$0$ph$i = 0;
        $rp$2$ph36$i = $427;
        $z$1$ph37$i = $k$3$i;
       } else {
        $510 = ($427 | 0) > -1 ? $506 : $506 + 9 | 0;
        $513 = HEAP32[4848 + (8 - $510 << 2) >> 2] | 0;
        if (!$k$3$i) {
         $a$0$lcssa151$i = 0;
         $rp$0$lcssa152$i = $427;
         $z$0$i = 0;
        } else {
         $515 = 1e9 / ($513 | 0) | 0;
         $a$085$i = 0;
         $carry$087$i = 0;
         $k$486$i = 0;
         $rp$084$i = $427;
         while (1) {
          $516 = $x$i + ($k$486$i << 2) | 0;
          $517 = HEAP32[$516 >> 2] | 0;
          $520 = (($517 >>> 0) / ($513 >>> 0) | 0) + $carry$087$i | 0;
          HEAP32[$516 >> 2] = $520;
          $521 = Math_imul(($517 >>> 0) % ($513 >>> 0) | 0, $515) | 0;
          $or$cond16$i = ($k$486$i | 0) == ($a$085$i | 0) & ($520 | 0) == 0;
          $k$486$i = $k$486$i + 1 | 0;
          $rp$1$i18 = $or$cond16$i ? $rp$084$i + -9 | 0 : $rp$084$i;
          $a$1$i = $or$cond16$i ? $k$486$i & 127 : $a$085$i;
          if (($k$486$i | 0) == ($k$3$i | 0)) {
           $$lcssa264 = $521;
           $a$1$i$lcssa = $a$1$i;
           $rp$1$i18$lcssa = $rp$1$i18;
           break;
          } else {
           $a$085$i = $a$1$i;
           $carry$087$i = $521;
           $rp$084$i = $rp$1$i18;
          }
         }
         if (!$$lcssa264) {
          $a$0$lcssa151$i = $a$1$i$lcssa;
          $rp$0$lcssa152$i = $rp$1$i18$lcssa;
          $z$0$i = $k$3$i;
         } else {
          HEAP32[$x$i + ($k$3$i << 2) >> 2] = $$lcssa264;
          $a$0$lcssa151$i = $a$1$i$lcssa;
          $rp$0$lcssa152$i = $rp$1$i18$lcssa;
          $z$0$i = $k$3$i + 1 | 0;
         }
        }
        $a$2$ph38$i = $a$0$lcssa151$i;
        $e2$0$ph$i = 0;
        $rp$2$ph36$i = 9 - $510 + $rp$0$lcssa152$i | 0;
        $z$1$ph37$i = $z$0$i;
       }
       L284 : while (1) {
        $533 = ($rp$2$ph36$i | 0) < 18;
        $534 = ($rp$2$ph36$i | 0) == 18;
        $535 = $x$i + ($a$2$ph38$i << 2) | 0;
        $e2$0$i19 = $e2$0$ph$i;
        $z$1$i = $z$1$ph37$i;
        while (1) {
         if (!$533) {
          if (!$534) {
           $a$3$ph$i = $a$2$ph38$i;
           $e2$1$ph$i = $e2$0$i19;
           $rp$3$ph34$i = $rp$2$ph36$i;
           $z$5$ph$i = $z$1$i;
           break L284;
          }
          if ((HEAP32[$535 >> 2] | 0) >>> 0 >= 9007199) {
           $a$3$ph$i = $a$2$ph38$i;
           $e2$1$ph$i = $e2$0$i19;
           $rp$3$ph34$i = 18;
           $z$5$ph$i = $z$1$i;
           break L284;
          }
         }
         $carry1$0$i = 0;
         $k$5$in$i = $z$1$i + 127 | 0;
         $z$2$i = $z$1$i;
         while (1) {
          $k$5$i = $k$5$in$i & 127;
          $539 = $x$i + ($k$5$i << 2) | 0;
          $541 = _bitshift64Shl(HEAP32[$539 >> 2] | 0, 0, 29) | 0;
          $543 = _i64Add($541 | 0, tempRet0 | 0, $carry1$0$i | 0, 0) | 0;
          $544 = tempRet0;
          if ($544 >>> 0 > 0 | ($544 | 0) == 0 & $543 >>> 0 > 1e9) {
           $550 = ___udivdi3($543 | 0, $544 | 0, 1e9, 0) | 0;
           $552 = ___uremdi3($543 | 0, $544 | 0, 1e9, 0) | 0;
           $$sink$off0$i = $552;
           $carry1$1$i = $550;
          } else {
           $$sink$off0$i = $543;
           $carry1$1$i = 0;
          }
          HEAP32[$539 >> 2] = $$sink$off0$i;
          $557 = ($k$5$i | 0) == ($a$2$ph38$i | 0);
          $z$3$i = ($k$5$i | 0) != ($z$2$i + 127 & 127 | 0) | $557 ? $z$2$i : ($$sink$off0$i | 0) == 0 ? $k$5$i : $z$2$i;
          if ($557) {
           $carry1$1$i$lcssa = $carry1$1$i;
           $z$3$i$lcssa = $z$3$i;
           break;
          } else {
           $carry1$0$i = $carry1$1$i;
           $k$5$in$i = $k$5$i + -1 | 0;
           $z$2$i = $z$3$i;
          }
         }
         $560 = $e2$0$i19 + -29 | 0;
         if (!$carry1$1$i$lcssa) {
          $e2$0$i19 = $560;
          $z$1$i = $z$3$i$lcssa;
         } else {
          $$lcssa263 = $560;
          $carry1$1$i$lcssa$lcssa = $carry1$1$i$lcssa;
          $z$3$i$lcssa$lcssa = $z$3$i$lcssa;
          break;
         }
        }
        $564 = $a$2$ph38$i + 127 & 127;
        if (($564 | 0) == ($z$3$i$lcssa$lcssa | 0)) {
         $567 = $z$3$i$lcssa$lcssa + 127 & 127;
         $572 = $x$i + (($z$3$i$lcssa$lcssa + 126 & 127) << 2) | 0;
         HEAP32[$572 >> 2] = HEAP32[$572 >> 2] | HEAP32[$x$i + ($567 << 2) >> 2];
         $z$4$i = $567;
        } else $z$4$i = $z$3$i$lcssa$lcssa;
        HEAP32[$x$i + ($564 << 2) >> 2] = $carry1$1$i$lcssa$lcssa;
        $a$2$ph38$i = $564;
        $e2$0$ph$i = $$lcssa263;
        $rp$2$ph36$i = $rp$2$ph36$i + 9 | 0;
        $z$1$ph37$i = $z$4$i;
       }
       L302 : while (1) {
        $604 = $z$5$ph$i + 1 & 127;
        $609 = $x$i + (($z$5$ph$i + 127 & 127) << 2) | 0;
        $a$3$ph157$i = $a$3$ph$i;
        $e2$1$ph156$i = $e2$1$ph$i;
        $rp$3$ph$i = $rp$3$ph34$i;
        while (1) {
         $610 = ($rp$3$ph$i | 0) == 18;
         $$18$i = ($rp$3$ph$i | 0) > 27 ? 9 : 1;
         $$not$i = $610 ^ 1;
         $a$3$i = $a$3$ph157$i;
         $e2$1$i = $e2$1$ph156$i;
         while (1) {
          $576 = $a$3$i & 127;
          $577 = ($576 | 0) == ($z$5$ph$i | 0);
          do if ($577) label = 219; else {
           $579 = HEAP32[$x$i + ($576 << 2) >> 2] | 0;
           if ($579 >>> 0 < 9007199) {
            label = 219;
            break;
           }
           if ($579 >>> 0 > 9007199) break;
           $583 = $a$3$i + 1 & 127;
           if (($583 | 0) == ($z$5$ph$i | 0)) {
            label = 219;
            break;
           }
           $691 = HEAP32[$x$i + ($583 << 2) >> 2] | 0;
           if ($691 >>> 0 < 254740991) {
            label = 219;
            break;
           }
           if (!($691 >>> 0 > 254740991 | $$not$i)) {
            $617 = $576;
            $a$3$i249 = $a$3$i;
            $e2$1$i246 = $e2$1$i;
            $z$7$i = $z$5$ph$i;
            break L302;
           }
          } while (0);
          if ((label | 0) == 219) {
           label = 0;
           if ($610) {
            label = 220;
            break L302;
           }
          }
          $585 = $e2$1$i + $$18$i | 0;
          if (($a$3$i | 0) == ($z$5$ph$i | 0)) {
           $a$3$i = $z$5$ph$i;
           $e2$1$i = $585;
          } else {
           $$lcssa256 = $585;
           $a$3$i$lcssa248 = $a$3$i;
           break;
          }
         }
         $588 = (1 << $$18$i) + -1 | 0;
         $589 = 1e9 >>> $$18$i;
         $a$478$i = $a$3$i$lcssa248;
         $carry3$081$i = 0;
         $k$679$i = $a$3$i$lcssa248;
         $rp$477$i = $rp$3$ph$i;
         while (1) {
          $590 = $x$i + ($k$679$i << 2) | 0;
          $591 = HEAP32[$590 >> 2] | 0;
          $594 = ($591 >>> $$18$i) + $carry3$081$i | 0;
          HEAP32[$590 >> 2] = $594;
          $595 = Math_imul($591 & $588, $589) | 0;
          $or$cond19$i = ($k$679$i | 0) == ($a$478$i | 0) & ($594 | 0) == 0;
          $k$679$i = $k$679$i + 1 & 127;
          $rp$5$i = $or$cond19$i ? $rp$477$i + -9 | 0 : $rp$477$i;
          $a$5$i = $or$cond19$i ? $k$679$i : $a$478$i;
          if (($k$679$i | 0) == ($z$5$ph$i | 0)) {
           $$lcssa257 = $595;
           $a$5$i$lcssa = $a$5$i;
           $rp$5$i$lcssa = $rp$5$i;
           break;
          } else {
           $a$478$i = $a$5$i;
           $carry3$081$i = $595;
           $rp$477$i = $rp$5$i;
          }
         }
         if (!$$lcssa257) {
          $a$3$ph157$i = $a$5$i$lcssa;
          $e2$1$ph156$i = $$lcssa256;
          $rp$3$ph$i = $rp$5$i$lcssa;
          continue;
         }
         if (($604 | 0) != ($a$5$i$lcssa | 0)) {
          $$lcssa256$lcssa = $$lcssa256;
          $$lcssa257$lcssa = $$lcssa257;
          $a$5$i$lcssa$lcssa = $a$5$i$lcssa;
          $rp$5$i$lcssa$lcssa = $rp$5$i$lcssa;
          break;
         }
         HEAP32[$609 >> 2] = HEAP32[$609 >> 2] | 1;
         $a$3$ph157$i = $a$5$i$lcssa;
         $e2$1$ph156$i = $$lcssa256;
         $rp$3$ph$i = $rp$5$i$lcssa;
        }
        HEAP32[$x$i + ($z$5$ph$i << 2) >> 2] = $$lcssa257$lcssa;
        $a$3$ph$i = $a$5$i$lcssa$lcssa;
        $e2$1$ph$i = $$lcssa256$lcssa;
        $rp$3$ph34$i = $rp$5$i$lcssa$lcssa;
        $z$5$ph$i = $604;
       }
       if ((label | 0) == 220) if ($577) {
        HEAP32[$x$i + ($604 + -1 << 2) >> 2] = 0;
        $617 = $z$5$ph$i;
        $a$3$i249 = $a$3$i;
        $e2$1$i246 = $e2$1$i;
        $z$7$i = $604;
       } else {
        $617 = $576;
        $a$3$i249 = $a$3$i;
        $e2$1$i246 = $e2$1$i;
        $z$7$i = $z$5$ph$i;
       }
       $619 = +((HEAP32[$x$i + ($617 << 2) >> 2] | 0) >>> 0);
       $621 = $a$3$i249 + 1 & 127;
       if (($621 | 0) == ($z$7$i | 0)) {
        $680 = $a$3$i249 + 2 & 127;
        HEAP32[$x$i + ($680 + -1 << 2) >> 2] = 0;
        $z$7$1$i = $680;
       } else $z$7$1$i = $z$7$i;
       $643 = +($sign$0 | 0);
       $625 = $643 * ($619 * 1.0e9 + +((HEAP32[$x$i + ($621 << 2) >> 2] | 0) >>> 0));
       $663 = $e2$1$i246 + 53 | 0;
       $669 = $663 - $emin$0$ph | 0;
       $670 = ($669 | 0) < ($bits$0$ph | 0);
       $denormal$0$i = $670 & 1;
       $$010$i = $670 ? (($669 | 0) < 0 ? 0 : $669) : $bits$0$ph;
       if (($$010$i | 0) < 53) {
        $626 = +_copysignl(+_scalbn(1.0, 105 - $$010$i | 0), $625);
        $629 = +_fmodl($625, +_scalbn(1.0, 53 - $$010$i | 0));
        $bias$0$i25 = $626;
        $frac$0$i = $629;
        $y$1$i24 = $626 + ($625 - $629);
       } else {
        $bias$0$i25 = 0.0;
        $frac$0$i = 0.0;
        $y$1$i24 = $625;
       }
       $633 = $a$3$i249 + 2 & 127;
       do if (($633 | 0) == ($z$7$1$i | 0)) $frac$2$i = $frac$0$i; else {
        $636 = HEAP32[$x$i + ($633 << 2) >> 2] | 0;
        do if ($636 >>> 0 < 5e8) {
         if (!$636) if (($a$3$i249 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
          $frac$1$i = $frac$0$i;
          break;
         }
         $frac$1$i = $643 * .25 + $frac$0$i;
        } else {
         if ($636 >>> 0 > 5e8) {
          $frac$1$i = $643 * .75 + $frac$0$i;
          break;
         }
         if (($a$3$i249 + 3 & 127 | 0) == ($z$7$1$i | 0)) {
          $frac$1$i = $643 * .5 + $frac$0$i;
          break;
         } else {
          $frac$1$i = $643 * .75 + $frac$0$i;
          break;
         }
        } while (0);
        if ((53 - $$010$i | 0) <= 1) {
         $frac$2$i = $frac$1$i;
         break;
        }
        if (+_fmodl($frac$1$i, 1.0) != 0.0) {
         $frac$2$i = $frac$1$i;
         break;
        }
        $frac$2$i = $frac$1$i + 1.0;
       } while (0);
       $661 = $y$1$i24 + $frac$2$i - $bias$0$i25;
       do if (($663 & 2147483647 | 0) > (-2 - $sum$i | 0)) {
        if (!(+Math_abs(+$661) >= 9007199254740992.0)) {
         $denormal$2$i = $denormal$0$i;
         $e2$2$i = $e2$1$i246;
         $y$2$i26 = $661;
        } else {
         $denormal$2$i = $670 & ($$010$i | 0) == ($669 | 0) ? 0 : $denormal$0$i;
         $e2$2$i = $e2$1$i246 + 1 | 0;
         $y$2$i26 = $661 * .5;
        }
        if (($e2$2$i + 50 | 0) <= ($330 | 0)) if (!($frac$2$i != 0.0 & ($denormal$2$i | 0) != 0)) {
         $e2$3$i = $e2$2$i;
         $y$3$i = $y$2$i26;
         break;
        }
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $e2$3$i = $e2$2$i;
        $y$3$i = $y$2$i26;
       } else {
        $e2$3$i = $e2$1$i246;
        $y$3$i = $661;
       } while (0);
       $$0$i27 = +_scalbnl($y$3$i, $e2$3$i);
      } while (0);
      $$0 = $$0$i27;
      break L4;
      break;
     }
    default:
     {
      if (HEAP32[$1 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim($f, 0);
      $$0 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((label | 0) == 23) {
   $42 = (HEAP32[$1 >> 2] | 0) == 0;
   if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   if (($pok | 0) != 0 & $i$0$lcssa >>> 0 > 3) {
    $i$1 = $i$0$lcssa;
    do {
     if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $i$1 = $i$1 + -1 | 0;
    } while ($i$1 >>> 0 > 3);
   }
  }
  $$0 = +($sign$0 | 0) * inf;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($__b, $__e, $__intl, $__loc, $__flags, $__err, $__neg, $__ct, $__wb, $__wn, $__we) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__flags = $__flags | 0;
 $__err = $__err | 0;
 $__neg = $__neg | 0;
 $__ct = $__ct | 0;
 $__wb = $__wb | 0;
 $__wn = $__wn | 0;
 $__we = $__we | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i114 = 0, $$0$i$i121 = 0, $$0$i$i130 = 0, $$0$i$i140 = 0, $$0$i$i157 = 0, $$0$i$i42 = 0, $$0$i$i45 = 0, $$0$i$i58 = 0, $$0$i$i65 = 0, $$0$i$i68 = 0, $$0$i$i75 = 0, $$0$i$i94 = 0, $$0$i$i97 = 0, $$in340 = 0, $$lcssa = 0, $$lcssa243 = 0, $$lcssa313 = 0, $$lcssa371 = 0, $$ph = 0, $$pre$i2$i$i108 = 0, $$pre$i2$i$i148 = 0, $$pre$i2$i$i148256 = 0, $$pre$i2$i$i148258 = 0, $$pre$i2$i$i165268 = 0, $$pre$i2$i$i165269 = 0, $$pre$i2$i$i165345 = 0, $$pre$i2$i$i52 = 0, $$pre$i2$i$i52278 = 0, $$pre$i2$i$i52280 = 0, $$pre$i2$i$i84264$ph = 0, $$pre$i2$i$i84264283 = 0, $$pre$i2$i$i84336 = 0, $$pre266 = 0, $$pre272 = 0, $0 = 0, $110 = 0, $111 = 0, $112 = 0, $119 = 0, $120 = 0, $126 = 0, $131 = 0, $14 = 0, $141 = 0, $142 = 0, $145 = 0, $146 = 0, $148 = 0, $157 = 0, $158 = 0, $162 = 0, $164 = 0, $17 = 0, $171 = 0, $172 = 0, $18 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $192 = 0, $193 = 0, $199 = 0, $2 = 0, $20 = 0, $201 = 0, $207 = 0, $208 = 0, $21 = 0, $214 = 0, $219 = 0, $22 = 0, $221 = 0, $223 = 0, $224 = 0, $228 = 0, $229 = 0, $23 = 0, $235 = 0, $241 = 0, $242 = 0, $243 = 0, $25 = 0, $250 = 0, $253 = 0, $26 = 0, $261 = 0, $263 = 0, $27 = 0, $270 = 0, $271 = 0, $277 = 0, $28 = 0, $283 = 0, $284 = 0, $285 = 0, $29 = 0, $292 = 0, $295 = 0, $30 = 0, $306 = 0, $307 = 0, $31 = 0, $313 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $327 = 0, $33 = 0, $330 = 0, $34 = 0, $341 = 0, $342 = 0, $354 = 0, $355 = 0, $356 = 0, $363 = 0, $366 = 0, $382 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $390 = 0, $396 = 0, $397 = 0, $405 = 0, $406 = 0, $407 = 0, $409 = 0, $410 = 0, $417 = 0, $419 = 0, $420 = 0, $422 = 0, $426 = 0, $429 = 0, $430 = 0, $434 = 0, $44 = 0, $440 = 0, $45 = 0, $450 = 0, $451 = 0, $454 = 0, $455 = 0, $457 = 0, $466 = 0, $467 = 0, $471 = 0, $473 = 0, $48 = 0, $480 = 0, $481 = 0, $487 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $498 = 0, $50 = 0, $503 = 0, $509 = 0, $511 = 0, $513 = 0, $524 = 0, $534 = 0, $535 = 0, $538 = 0, $539 = 0, $541 = 0, $550 = 0, $551 = 0, $555 = 0, $557 = 0, $564 = 0, $565 = 0, $569 = 0, $576 = 0, $579 = 0, $582 = 0, $584 = 0, $596 = 0, $597 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $61 = 0, $610 = 0, $618 = 0, $620 = 0, $621 = 0, $622 = 0, $624 = 0, $634 = 0, $635 = 0, $638 = 0, $639 = 0, $649 = 0, $650 = 0, $653 = 0, $655 = 0, $662 = 0, $663 = 0, $67 = 0, $672 = 0, $673 = 0, $674 = 0, $68 = 0, $681 = 0, $685 = 0, $695 = 0, $696 = 0, $699 = 0, $700 = 0, $702 = 0, $711 = 0, $712 = 0, $716 = 0, $718 = 0, $725 = 0, $726 = 0, $742 = 0, $744 = 0, $746 = 0, $753 = 0, $754 = 0, $759 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $772 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $794 = 0, $795 = 0, $80 = 0, $805 = 0, $806 = 0, $809 = 0, $810 = 0, $811 = 0, $82 = 0, $821 = 0, $822 = 0, $825 = 0, $827 = 0, $834 = 0, $835 = 0, $845 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $860 = 0, $863 = 0, $869 = 0, $87 = 0, $872 = 0, $874 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $89 = 0, $91 = 0, $98 = 0, $99 = 0, $__dp = 0, $__et = 0, $__fd = 0, $__gb = 0, $__gbuf = 0, $__ge = 0, $__gn = 0, $__grp = 0, $__i$0 = 0, $__ng$0 = 0, $__ng$0$lcssa372 = 0, $__ng$1 = 0, $__nsn = 0, $__p$0353 = 0, $__pat = 0, $__psn = 0, $__spaces = 0, $__sym = 0, $__trailing_sign$0$lcssa = 0, $__trailing_sign$0355 = 0, $__trailing_sign$1 = 0, $__ts = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, label = 0, sp = 0, $762$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $0 = sp + 488 | 0;
 $__gbuf = sp + 40 | 0;
 $__gb = sp + 16 | 0;
 $__gn = sp + 464 | 0;
 $__ge = sp + 468 | 0;
 $__pat = sp + 492 | 0;
 $__dp = sp + 496 | 0;
 $__ts = sp + 497 | 0;
 $__grp = sp + 440 | 0;
 $__sym = sp + 24 | 0;
 $__psn = sp + 4 | 0;
 $__nsn = sp + 472 | 0;
 $__spaces = sp + 452 | 0;
 $__fd = sp;
 $__et = sp + 484 | 0;
 HEAP32[$0 >> 2] = $__we;
 HEAP32[$__gb >> 2] = $__gbuf;
 $2 = $__gb + 4 | 0;
 HEAP32[$2 >> 2] = 187;
 HEAP32[$__gn >> 2] = $__gbuf;
 HEAP32[$__ge >> 2] = $__gbuf + 400;
 HEAP32[$__grp >> 2] = 0;
 HEAP32[$__grp + 4 >> 2] = 0;
 HEAP32[$__grp + 8 >> 2] = 0;
 HEAP32[$__sym >> 2] = 0;
 HEAP32[$__sym + 4 >> 2] = 0;
 HEAP32[$__sym + 8 >> 2] = 0;
 HEAP32[$__psn >> 2] = 0;
 HEAP32[$__psn + 4 >> 2] = 0;
 HEAP32[$__psn + 8 >> 2] = 0;
 HEAP32[$__nsn >> 2] = 0;
 HEAP32[$__nsn + 4 >> 2] = 0;
 HEAP32[$__nsn + 8 >> 2] = 0;
 HEAP32[$__spaces >> 2] = 0;
 HEAP32[$__spaces + 4 >> 2] = 0;
 HEAP32[$__spaces + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiiiiiiii(1, $__intl | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__psn | 0, $__nsn | 0, $__fd | 0);
 $14 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($14 & 1) {
  $80 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $80;
  $lpad$phi$index7 = tempRet0;
 } else {
  HEAP32[$__wn >> 2] = HEAP32[$__wb >> 2];
  $17 = $__ct + 8 | 0;
  $18 = $__psn + 4 | 0;
  $19 = $__nsn + 4 | 0;
  $20 = $__nsn + 8 | 0;
  $21 = $__nsn + 1 | 0;
  $22 = $__psn + 8 | 0;
  $23 = $__psn + 1 | 0;
  $25 = ($__flags & 512 | 0) != 0;
  $26 = $__sym + 8 | 0;
  $27 = $__sym + 1 | 0;
  $28 = $__sym + 4 | 0;
  $29 = $__spaces + 4 | 0;
  $30 = $__spaces + 8 | 0;
  $31 = $__spaces + 1 | 0;
  $32 = $__pat + 3 | 0;
  $33 = $__grp + 4 | 0;
  $876 = $__gbuf;
  $__p$0353 = 0;
  $__trailing_sign$0355 = 0;
  L4 : while (1) {
   $34 = HEAP32[$__b >> 2] | 0;
   do if (!$34) $49 = 0; else if ((HEAP32[$34 + 12 >> 2] | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L4;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $49 = 0;
     break;
    } else {
     $49 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $49 = $34; while (0);
   $48 = ($49 | 0) == 0;
   $50 = HEAP32[$__e >> 2] | 0;
   do if (!$50) label = 15; else {
    if ((HEAP32[$50 + 12 >> 2] | 0) != (HEAP32[$50 + 16 >> 2] | 0)) if ($48) {
     $877 = $50;
     break;
    } else {
     $$lcssa313 = $876;
     $__trailing_sign$0$lcssa = $__trailing_sign$0355;
     label = 235;
     break L4;
    }
    __THREW__ = 0;
    $60 = invoke_ii(HEAP32[(HEAP32[$50 >> 2] | 0) + 36 >> 2] | 0, $50 | 0) | 0;
    $61 = __THREW__;
    __THREW__ = 0;
    if ($61 & 1) {
     label = 24;
     break L4;
    }
    if (($60 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 15;
     break;
    } else if ($48) {
     $877 = $50;
     break;
    } else {
     $$lcssa313 = $876;
     $__trailing_sign$0$lcssa = $__trailing_sign$0355;
     label = 235;
     break L4;
    }
   } while (0);
   if ((label | 0) == 15) {
    label = 0;
    if ($48) {
     $$lcssa313 = $876;
     $__trailing_sign$0$lcssa = $__trailing_sign$0355;
     label = 235;
     break;
    } else $877 = 0;
   }
   L26 : do switch (HEAP8[$__pat + $__p$0353 >> 0] | 0) {
   case 1:
    {
     if (($__p$0353 | 0) == 3) {
      $878 = $876;
      $__trailing_sign$1 = $__trailing_sign$0355;
     } else {
      $89 = HEAP32[$__b >> 2] | 0;
      $91 = HEAP32[$89 + 12 >> 2] | 0;
      if (($91 | 0) == (HEAP32[$89 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $98 = invoke_ii(HEAP32[(HEAP32[$89 >> 2] | 0) + 36 >> 2] | 0, $89 | 0) | 0;
       $99 = __THREW__;
       __THREW__ = 0;
       if ($99 & 1) {
        label = 24;
        break L4;
       } else $$0$i$i42 = $98;
      } else $$0$i$i42 = HEAPU8[$91 >> 0] | 0;
      if (($$0$i$i42 & 255) << 24 >> 24 <= -1) {
       label = 40;
       break L4;
      }
      if (!(HEAP16[(HEAP32[$17 >> 2] | 0) + ($$0$i$i42 << 24 >> 24 << 1) >> 1] & 8192)) {
       label = 40;
       break L4;
      }
      $110 = HEAP32[$__b >> 2] | 0;
      $111 = $110 + 12 | 0;
      $112 = HEAP32[$111 >> 2] | 0;
      if (($112 | 0) == (HEAP32[$110 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $119 = invoke_ii(HEAP32[(HEAP32[$110 >> 2] | 0) + 40 >> 2] | 0, $110 | 0) | 0;
       $120 = __THREW__;
       __THREW__ = 0;
       if ($120 & 1) {
        label = 24;
        break L4;
       } else $$0$i$i45 = $119;
      } else {
       HEAP32[$111 >> 2] = $112 + 1;
       $$0$i$i45 = HEAPU8[$112 >> 0] | 0;
      }
      __THREW__ = 0;
      invoke_vii(44, $__spaces | 0, $$0$i$i45 & 255 | 0);
      $126 = __THREW__;
      __THREW__ = 0;
      if ($126 & 1) {
       label = 24;
       break L4;
      } else {
       $$pre$i2$i$i52 = $877;
       $148 = $877;
       label = 42;
      }
     }
     break;
    }
   case 0:
    {
     if (($__p$0353 | 0) == 3) {
      $878 = $876;
      $__trailing_sign$1 = $__trailing_sign$0355;
     } else {
      $$pre$i2$i$i52 = $877;
      $148 = $877;
      label = 42;
     }
     break;
    }
   case 3:
    {
     $201 = HEAP8[$__psn >> 0] | 0;
     $207 = ($201 & 1) == 0 ? ($201 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
     $208 = HEAP8[$__nsn >> 0] | 0;
     $214 = ($208 & 1) == 0 ? ($208 & 255) >>> 1 : HEAP32[$19 >> 2] | 0;
     if (($207 | 0) == (0 - $214 | 0)) {
      $878 = $876;
      $__trailing_sign$1 = $__trailing_sign$0355;
     } else {
      if (!$207) {
       $261 = HEAP32[$__b >> 2] | 0;
       $263 = HEAP32[$261 + 12 >> 2] | 0;
       if (($263 | 0) == (HEAP32[$261 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $270 = invoke_ii(HEAP32[(HEAP32[$261 >> 2] | 0) + 36 >> 2] | 0, $261 | 0) | 0;
        $271 = __THREW__;
        __THREW__ = 0;
        if ($271 & 1) {
         label = 24;
         break L4;
        }
        $$0$i$i114 = $270;
        $277 = HEAP8[$__nsn >> 0] | 0;
       } else {
        $$0$i$i114 = HEAPU8[$263 >> 0] | 0;
        $277 = $208;
       }
       if (($$0$i$i114 & 255) << 24 >> 24 != (HEAP8[(($277 & 1) == 0 ? $21 : HEAP32[$20 >> 2] | 0) >> 0] | 0)) {
        $878 = $876;
        $__trailing_sign$1 = $__trailing_sign$0355;
        break L26;
       }
       $283 = HEAP32[$__b >> 2] | 0;
       $284 = $283 + 12 | 0;
       $285 = HEAP32[$284 >> 2] | 0;
       if (($285 | 0) == (HEAP32[$283 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$283 >> 2] | 0) + 40 >> 2] | 0, $283 | 0) | 0;
        $292 = __THREW__;
        __THREW__ = 0;
        if ($292 & 1) {
         label = 24;
         break L4;
        }
       } else HEAP32[$284 >> 2] = $285 + 1;
       HEAP8[$__neg >> 0] = 1;
       $295 = HEAP8[$__nsn >> 0] | 0;
       $878 = $876;
       $__trailing_sign$1 = (($295 & 1) == 0 ? ($295 & 255) >>> 1 : HEAP32[$19 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0355;
       break L26;
      }
      $219 = HEAP32[$__b >> 2] | 0;
      $221 = HEAP32[$219 + 12 >> 2] | 0;
      $223 = HEAP32[$219 + 16 >> 2] | 0;
      $224 = ($221 | 0) == ($223 | 0);
      if (!$214) {
       if ($224) {
        __THREW__ = 0;
        $228 = invoke_ii(HEAP32[(HEAP32[$219 >> 2] | 0) + 36 >> 2] | 0, $219 | 0) | 0;
        $229 = __THREW__;
        __THREW__ = 0;
        if ($229 & 1) {
         label = 24;
         break L4;
        }
        $$0$i$i94 = $228;
        $235 = HEAP8[$__psn >> 0] | 0;
       } else {
        $$0$i$i94 = HEAPU8[$221 >> 0] | 0;
        $235 = $201;
       }
       if (($$0$i$i94 & 255) << 24 >> 24 != (HEAP8[(($235 & 1) == 0 ? $23 : HEAP32[$22 >> 2] | 0) >> 0] | 0)) {
        HEAP8[$__neg >> 0] = 1;
        $878 = $876;
        $__trailing_sign$1 = $__trailing_sign$0355;
        break L26;
       }
       $241 = HEAP32[$__b >> 2] | 0;
       $242 = $241 + 12 | 0;
       $243 = HEAP32[$242 >> 2] | 0;
       if (($243 | 0) == (HEAP32[$241 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$241 >> 2] | 0) + 40 >> 2] | 0, $241 | 0) | 0;
        $250 = __THREW__;
        __THREW__ = 0;
        if ($250 & 1) {
         label = 24;
         break L4;
        }
       } else HEAP32[$242 >> 2] = $243 + 1;
       $253 = HEAP8[$__psn >> 0] | 0;
       $878 = $876;
       $__trailing_sign$1 = (($253 & 1) == 0 ? ($253 & 255) >>> 1 : HEAP32[$18 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0355;
       break L26;
      }
      if ($224) {
       __THREW__ = 0;
       $306 = invoke_ii(HEAP32[(HEAP32[$219 >> 2] | 0) + 36 >> 2] | 0, $219 | 0) | 0;
       $307 = __THREW__;
       __THREW__ = 0;
       if ($307 & 1) {
        label = 24;
        break L4;
       }
       $$pre272 = HEAP32[$__b >> 2] | 0;
       $$0$i$i121 = $306;
       $313 = HEAP8[$__psn >> 0] | 0;
       $320 = $$pre272;
       $322 = HEAP32[$$pre272 + 12 >> 2] | 0;
       $323 = HEAP32[$$pre272 + 16 >> 2] | 0;
      } else {
       $$0$i$i121 = HEAPU8[$221 >> 0] | 0;
       $313 = $201;
       $320 = $219;
       $322 = $221;
       $323 = $223;
      }
      $319 = $320 + 12 | 0;
      $321 = ($322 | 0) == ($323 | 0);
      if (($$0$i$i121 & 255) << 24 >> 24 == (HEAP8[(($313 & 1) == 0 ? $23 : HEAP32[$22 >> 2] | 0) >> 0] | 0)) {
       if ($321) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$320 >> 2] | 0) + 40 >> 2] | 0, $320 | 0) | 0;
        $327 = __THREW__;
        __THREW__ = 0;
        if ($327 & 1) {
         label = 24;
         break L4;
        }
       } else HEAP32[$319 >> 2] = $322 + 1;
       $330 = HEAP8[$__psn >> 0] | 0;
       $878 = $876;
       $__trailing_sign$1 = (($330 & 1) == 0 ? ($330 & 255) >>> 1 : HEAP32[$18 >> 2] | 0) >>> 0 > 1 ? $__psn : $__trailing_sign$0355;
       break L26;
      }
      if ($321) {
       __THREW__ = 0;
       $341 = invoke_ii(HEAP32[(HEAP32[$320 >> 2] | 0) + 36 >> 2] | 0, $320 | 0) | 0;
       $342 = __THREW__;
       __THREW__ = 0;
       if ($342 & 1) {
        label = 24;
        break L4;
       } else $$0$i$i130 = $341;
      } else $$0$i$i130 = HEAPU8[$322 >> 0] | 0;
      if (($$0$i$i130 & 255) << 24 >> 24 != (HEAP8[((HEAP8[$__nsn >> 0] & 1) == 0 ? $21 : HEAP32[$20 >> 2] | 0) >> 0] | 0)) {
       label = 104;
       break L4;
      }
      $354 = HEAP32[$__b >> 2] | 0;
      $355 = $354 + 12 | 0;
      $356 = HEAP32[$355 >> 2] | 0;
      if (($356 | 0) == (HEAP32[$354 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$354 >> 2] | 0) + 40 >> 2] | 0, $354 | 0) | 0;
       $363 = __THREW__;
       __THREW__ = 0;
       if ($363 & 1) {
        label = 24;
        break L4;
       }
      } else HEAP32[$355 >> 2] = $356 + 1;
      HEAP8[$__neg >> 0] = 1;
      $366 = HEAP8[$__nsn >> 0] | 0;
      $878 = $876;
      $__trailing_sign$1 = (($366 & 1) == 0 ? ($366 & 255) >>> 1 : HEAP32[$19 >> 2] | 0) >>> 0 > 1 ? $__nsn : $__trailing_sign$0355;
     }
     break;
    }
   case 2:
    {
     if (!($__p$0353 >>> 0 < 2 | ($__trailing_sign$0355 | 0) != 0)) if (!($25 | ($__p$0353 | 0) == 2 & (HEAP8[$32 >> 0] | 0) != 0)) {
      $878 = $876;
      $__trailing_sign$1 = 0;
      break L26;
     }
     $382 = HEAP8[$__sym >> 0] | 0;
     $384 = ($382 & 1) == 0;
     $385 = HEAP32[$26 >> 2] | 0;
     $386 = $384 ? $27 : $385;
     $387 = $386;
     L95 : do if (!$__p$0353) $$ph = $387; else if ((HEAPU8[$__pat + ($__p$0353 + -1) >> 0] | 0) < 2) {
      $405 = $384 ? ($382 & 255) >>> 1 : HEAP32[$28 >> 2] | 0;
      $406 = $386 + $405 | 0;
      $407 = HEAP32[$17 >> 2] | 0;
      L98 : do if (!$405) $$lcssa = $387; else {
       $410 = $386;
       $880 = $387;
       while (1) {
        $409 = HEAP8[$410 >> 0] | 0;
        if ($409 << 24 >> 24 <= -1) {
         $$lcssa = $880;
         break L98;
        }
        if (!(HEAP16[$407 + ($409 << 24 >> 24 << 1) >> 1] & 8192)) {
         $$lcssa = $880;
         break L98;
        }
        $410 = $410 + 1 | 0;
        $417 = $410;
        if (($410 | 0) == ($406 | 0)) {
         $$lcssa = $417;
         break;
        } else $880 = $417;
       }
      } while (0);
      $419 = $$lcssa - $387 | 0;
      $420 = HEAP8[$__spaces >> 0] | 0;
      $422 = ($420 & 1) == 0;
      $426 = $422 ? ($420 & 255) >>> 1 : HEAP32[$29 >> 2] | 0;
      if ($426 >>> 0 < $419 >>> 0) $$ph = $387; else {
       $429 = $422 ? $31 : HEAP32[$30 >> 2] | 0;
       $430 = $429 + $426 | 0;
       if (($$lcssa | 0) == ($387 | 0)) $$ph = $$lcssa; else {
        $$in340 = $386;
        $434 = $429 + ($426 - $419) | 0;
        while (1) {
         if ((HEAP8[$434 >> 0] | 0) != (HEAP8[$$in340 >> 0] | 0)) {
          $$ph = $387;
          break L95;
         }
         $434 = $434 + 1 | 0;
         if (($434 | 0) == ($430 | 0)) {
          $$ph = $$lcssa;
          break;
         } else $$in340 = $$in340 + 1 | 0;
        }
       }
      }
     } else $$ph = $387; while (0);
     $390 = ($382 & 1) == 0;
     $396 = ($390 ? $27 : $385) + ($390 ? ($382 & 255) >>> 1 : HEAP32[$28 >> 2] | 0) | 0;
     $397 = $$ph;
     L110 : do if (($397 | 0) == ($396 | 0)) $$lcssa243 = $396; else {
      $$pre$i2$i$i165345 = $877;
      $457 = $877;
      $487 = $397;
      while (1) {
       $440 = HEAP32[$__b >> 2] | 0;
       do if (!$440) $455 = 0; else if ((HEAP32[$440 + 12 >> 2] | 0) == (HEAP32[$440 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $450 = invoke_ii(HEAP32[(HEAP32[$440 >> 2] | 0) + 36 >> 2] | 0, $440 | 0) | 0;
        $451 = __THREW__;
        __THREW__ = 0;
        if ($451 & 1) {
         label = 21;
         break L4;
        }
        if (($450 | 0) == -1) {
         HEAP32[$__b >> 2] = 0;
         $455 = 0;
         break;
        } else {
         $455 = HEAP32[$__b >> 2] | 0;
         break;
        }
       } else $455 = $440; while (0);
       $454 = ($455 | 0) == 0;
       do if (!$457) {
        $$pre$i2$i$i165269 = $$pre$i2$i$i165345;
        label = 131;
       } else {
        if ((HEAP32[$457 + 12 >> 2] | 0) != (HEAP32[$457 + 16 >> 2] | 0)) if ($454) {
         $$pre$i2$i$i165268 = $$pre$i2$i$i165345;
         $881 = $457;
         break;
        } else {
         $$lcssa243 = $487;
         break L110;
        }
        __THREW__ = 0;
        $466 = invoke_ii(HEAP32[(HEAP32[$457 >> 2] | 0) + 36 >> 2] | 0, $457 | 0) | 0;
        $467 = __THREW__;
        __THREW__ = 0;
        if ($467 & 1) {
         label = 21;
         break L4;
        }
        if (($466 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i2$i$i165269 = 0;
         label = 131;
         break;
        } else if ($454 ^ ($$pre$i2$i$i165345 | 0) == 0) {
         $$pre$i2$i$i165268 = $$pre$i2$i$i165345;
         $881 = $$pre$i2$i$i165345;
         break;
        } else {
         $$lcssa243 = $487;
         break L110;
        }
       } while (0);
       if ((label | 0) == 131) {
        label = 0;
        if ($454) {
         $$lcssa243 = $487;
         break L110;
        } else {
         $$pre$i2$i$i165268 = $$pre$i2$i$i165269;
         $881 = 0;
        }
       }
       $471 = HEAP32[$__b >> 2] | 0;
       $473 = HEAP32[$471 + 12 >> 2] | 0;
       if (($473 | 0) == (HEAP32[$471 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $480 = invoke_ii(HEAP32[(HEAP32[$471 >> 2] | 0) + 36 >> 2] | 0, $471 | 0) | 0;
        $481 = __THREW__;
        __THREW__ = 0;
        if ($481 & 1) {
         label = 21;
         break L4;
        } else $$0$i$i157 = $480;
       } else $$0$i$i157 = HEAPU8[$473 >> 0] | 0;
       if (($$0$i$i157 & 255) << 24 >> 24 != (HEAP8[$487 >> 0] | 0)) {
        $$lcssa243 = $487;
        break L110;
       }
       $489 = HEAP32[$__b >> 2] | 0;
       $490 = $489 + 12 | 0;
       $491 = HEAP32[$490 >> 2] | 0;
       if (($491 | 0) == (HEAP32[$489 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_ii(HEAP32[(HEAP32[$489 >> 2] | 0) + 40 >> 2] | 0, $489 | 0) | 0;
        $498 = __THREW__;
        __THREW__ = 0;
        if ($498 & 1) {
         label = 21;
         break L4;
        }
       } else HEAP32[$490 >> 2] = $491 + 1;
       $487 = $487 + 1 | 0;
       $$pre266 = HEAP8[$__sym >> 0] | 0;
       $503 = ($$pre266 & 1) == 0;
       $509 = ($503 ? $27 : HEAP32[$26 >> 2] | 0) + ($503 ? ($$pre266 & 255) >>> 1 : HEAP32[$28 >> 2] | 0) | 0;
       if (($487 | 0) == ($509 | 0)) {
        $$lcssa243 = $509;
        break;
       } else {
        $$pre$i2$i$i165345 = $$pre$i2$i$i165268;
        $457 = $881;
       }
      }
     } while (0);
     if ($25) {
      $511 = HEAP8[$__sym >> 0] | 0;
      $513 = ($511 & 1) == 0;
      if (($$lcssa243 | 0) == (($513 ? $27 : HEAP32[$26 >> 2] | 0) + ($513 ? ($511 & 255) >>> 1 : HEAP32[$28 >> 2] | 0) | 0)) {
       $878 = $876;
       $__trailing_sign$1 = $__trailing_sign$0355;
      } else {
       label = 143;
       break L4;
      }
     } else {
      $878 = $876;
      $__trailing_sign$1 = $__trailing_sign$0355;
     }
     break;
    }
   case 4:
    {
     $67 = HEAP8[$__ts >> 0] | 0;
     $$pre$i2$i$i148 = $877;
     $541 = $877;
     $596 = $876;
     $__ng$0 = 0;
     L145 : while (1) {
      $524 = HEAP32[$__b >> 2] | 0;
      do if (!$524) $539 = 0; else if ((HEAP32[$524 + 12 >> 2] | 0) == (HEAP32[$524 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $534 = invoke_ii(HEAP32[(HEAP32[$524 >> 2] | 0) + 36 >> 2] | 0, $524 | 0) | 0;
       $535 = __THREW__;
       __THREW__ = 0;
       if ($535 & 1) {
        label = 23;
        break L4;
       }
       if (($534 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $539 = 0;
        break;
       } else {
        $539 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $539 = $524; while (0);
      $538 = ($539 | 0) == 0;
      do if (!$541) {
       $$pre$i2$i$i148256 = $$pre$i2$i$i148;
       label = 156;
      } else {
       if ((HEAP32[$541 + 12 >> 2] | 0) != (HEAP32[$541 + 16 >> 2] | 0)) if ($538) {
        $$pre$i2$i$i148258 = $$pre$i2$i$i148;
        $882 = $541;
        break;
       } else {
        $$lcssa371 = $596;
        $$pre$i2$i$i108 = $$pre$i2$i$i148;
        $__ng$0$lcssa372 = $__ng$0;
        break L145;
       }
       __THREW__ = 0;
       $550 = invoke_ii(HEAP32[(HEAP32[$541 >> 2] | 0) + 36 >> 2] | 0, $541 | 0) | 0;
       $551 = __THREW__;
       __THREW__ = 0;
       if ($551 & 1) {
        label = 23;
        break L4;
       }
       if (($550 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        $$pre$i2$i$i148256 = 0;
        label = 156;
        break;
       } else if ($538 ^ ($$pre$i2$i$i148 | 0) == 0) {
        $$pre$i2$i$i148258 = $$pre$i2$i$i148;
        $882 = $$pre$i2$i$i148;
        break;
       } else {
        $$lcssa371 = $596;
        $$pre$i2$i$i108 = $$pre$i2$i$i148;
        $__ng$0$lcssa372 = $__ng$0;
        break L145;
       }
      } while (0);
      if ((label | 0) == 156) {
       label = 0;
       if ($538) {
        $$lcssa371 = $596;
        $$pre$i2$i$i108 = $$pre$i2$i$i148256;
        $__ng$0$lcssa372 = $__ng$0;
        break;
       } else {
        $$pre$i2$i$i148258 = $$pre$i2$i$i148256;
        $882 = 0;
       }
      }
      $555 = HEAP32[$__b >> 2] | 0;
      $557 = HEAP32[$555 + 12 >> 2] | 0;
      if (($557 | 0) == (HEAP32[$555 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $564 = invoke_ii(HEAP32[(HEAP32[$555 >> 2] | 0) + 36 >> 2] | 0, $555 | 0) | 0;
       $565 = __THREW__;
       __THREW__ = 0;
       if ($565 & 1) {
        label = 23;
        break L4;
       } else $$0$i$i140 = $564;
      } else $$0$i$i140 = HEAPU8[$557 >> 0] | 0;
      $569 = $$0$i$i140 & 255;
      if ($569 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$17 >> 2] | 0) + ($$0$i$i140 << 24 >> 24 << 1) >> 1] & 2048)) label = 167; else {
       $576 = HEAP32[$__wn >> 2] | 0;
       if (($576 | 0) == (HEAP32[$0 >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(15, $__wb | 0, $__wn | 0, $0 | 0);
        $579 = __THREW__;
        __THREW__ = 0;
        if ($579 & 1) {
         label = 23;
         break L4;
        }
        $582 = HEAP32[$__wn >> 2] | 0;
       } else $582 = $576;
       HEAP32[$__wn >> 2] = $582 + 1;
       HEAP8[$582 >> 0] = $569;
       $883 = $596;
       $__ng$1 = $__ng$0 + 1 | 0;
      } else label = 167;
      if ((label | 0) == 167) {
       label = 0;
       $584 = HEAP8[$__grp >> 0] | 0;
       if (!($569 << 24 >> 24 == $67 << 24 >> 24 & (($__ng$0 | 0) != 0 ? ((($584 & 1) == 0 ? ($584 & 255) >>> 1 : HEAP32[$33 >> 2] | 0) | 0) != 0 : 0))) {
        $$lcssa371 = $596;
        $$pre$i2$i$i108 = $$pre$i2$i$i148258;
        $__ng$0$lcssa372 = $__ng$0;
        break;
       }
       if (($596 | 0) == (HEAP32[$__ge >> 2] | 0)) {
        __THREW__ = 0;
        invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
        $597 = __THREW__;
        __THREW__ = 0;
        if ($597 & 1) {
         label = 23;
         break L4;
        }
        $600 = HEAP32[$__gn >> 2] | 0;
       } else $600 = $596;
       $599 = $600 + 4 | 0;
       HEAP32[$__gn >> 2] = $599;
       HEAP32[$600 >> 2] = $__ng$0;
       $883 = $599;
       $__ng$1 = 0;
      }
      $601 = HEAP32[$__b >> 2] | 0;
      $602 = $601 + 12 | 0;
      $603 = HEAP32[$602 >> 2] | 0;
      if (($603 | 0) == (HEAP32[$601 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$601 >> 2] | 0) + 40 >> 2] | 0, $601 | 0) | 0;
       $610 = __THREW__;
       __THREW__ = 0;
       if ($610 & 1) {
        label = 23;
        break L4;
       } else {
        $$pre$i2$i$i148 = $$pre$i2$i$i148258;
        $541 = $882;
        $596 = $883;
        $__ng$0 = $__ng$1;
        continue;
       }
      } else {
       HEAP32[$602 >> 2] = $603 + 1;
       $$pre$i2$i$i148 = $$pre$i2$i$i148258;
       $541 = $882;
       $596 = $883;
       $__ng$0 = $__ng$1;
       continue;
      }
     }
     if (($__ng$0$lcssa372 | 0) != 0 ? (HEAP32[$__gb >> 2] | 0) != ($$lcssa371 | 0) : 0) {
      if (($$lcssa371 | 0) == (HEAP32[$__ge >> 2] | 0)) {
       __THREW__ = 0;
       invoke_viii(16, $__gb | 0, $__gn | 0, $__ge | 0);
       $618 = __THREW__;
       __THREW__ = 0;
       if ($618 & 1) {
        label = 24;
        break L4;
       }
       $621 = HEAP32[$__gn >> 2] | 0;
      } else $621 = $$lcssa371;
      $620 = $621 + 4 | 0;
      HEAP32[$__gn >> 2] = $620;
      HEAP32[$621 >> 2] = $__ng$0$lcssa372;
      $884 = $620;
     } else $884 = $$lcssa371;
     $622 = HEAP32[$__fd >> 2] | 0;
     if (($622 | 0) > 0) {
      $624 = HEAP32[$__b >> 2] | 0;
      do if (!$624) $639 = 0; else if ((HEAP32[$624 + 12 >> 2] | 0) == (HEAP32[$624 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $634 = invoke_ii(HEAP32[(HEAP32[$624 >> 2] | 0) + 36 >> 2] | 0, $624 | 0) | 0;
       $635 = __THREW__;
       __THREW__ = 0;
       if ($635 & 1) {
        label = 24;
        break L4;
       }
       if (($634 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $639 = 0;
        break;
       } else {
        $639 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $639 = $624; while (0);
      $638 = ($639 | 0) == 0;
      do if (!$$pre$i2$i$i108) label = 193; else {
       if ((HEAP32[$$pre$i2$i$i108 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i108 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $649 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i108 >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i108 | 0) | 0;
        $650 = __THREW__;
        __THREW__ = 0;
        if ($650 & 1) {
         label = 24;
         break L4;
        }
        if (($649 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 193;
         break;
        }
       }
       if ($638) $885 = $$pre$i2$i$i108; else {
        label = 198;
        break L4;
       }
      } while (0);
      if ((label | 0) == 193) {
       label = 0;
       if ($638) {
        label = 198;
        break L4;
       } else $885 = 0;
      }
      $653 = HEAP32[$__b >> 2] | 0;
      $655 = HEAP32[$653 + 12 >> 2] | 0;
      if (($655 | 0) == (HEAP32[$653 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $662 = invoke_ii(HEAP32[(HEAP32[$653 >> 2] | 0) + 36 >> 2] | 0, $653 | 0) | 0;
       $663 = __THREW__;
       __THREW__ = 0;
       if ($663 & 1) {
        label = 24;
        break L4;
       } else $$0$i$i97 = $662;
      } else $$0$i$i97 = HEAPU8[$655 >> 0] | 0;
      if (($$0$i$i97 & 255) << 24 >> 24 != (HEAP8[$__dp >> 0] | 0)) {
       label = 198;
       break L4;
      }
      $672 = HEAP32[$__b >> 2] | 0;
      $673 = $672 + 12 | 0;
      $674 = HEAP32[$673 >> 2] | 0;
      if (($674 | 0) == (HEAP32[$672 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$672 >> 2] | 0) + 40 >> 2] | 0, $672 | 0) | 0;
       $681 = __THREW__;
       __THREW__ = 0;
       if ($681 & 1) {
        label = 24;
        break L4;
       }
      } else HEAP32[$673 >> 2] = $674 + 1;
      if (($622 | 0) > 0) {
       $$pre$i2$i$i84336 = $885;
       $702 = $885;
       $762 = $622;
       while (1) {
        $685 = HEAP32[$__b >> 2] | 0;
        do if (!$685) $700 = 0; else if ((HEAP32[$685 + 12 >> 2] | 0) == (HEAP32[$685 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $695 = invoke_ii(HEAP32[(HEAP32[$685 >> 2] | 0) + 36 >> 2] | 0, $685 | 0) | 0;
         $696 = __THREW__;
         __THREW__ = 0;
         if ($696 & 1) {
          label = 22;
          break L4;
         }
         if (($695 | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $700 = 0;
          break;
         } else {
          $700 = HEAP32[$__b >> 2] | 0;
          break;
         }
        } else $700 = $685; while (0);
        $699 = ($700 | 0) == 0;
        do if (!$702) {
         $$pre$i2$i$i84264$ph = $$pre$i2$i$i84336;
         label = 215;
        } else {
         if ((HEAP32[$702 + 12 >> 2] | 0) != (HEAP32[$702 + 16 >> 2] | 0)) if ($699) {
          $$pre$i2$i$i84264283 = $$pre$i2$i$i84336;
          $886 = $702;
          break;
         } else {
          label = 222;
          break L4;
         }
         __THREW__ = 0;
         $711 = invoke_ii(HEAP32[(HEAP32[$702 >> 2] | 0) + 36 >> 2] | 0, $702 | 0) | 0;
         $712 = __THREW__;
         __THREW__ = 0;
         if ($712 & 1) {
          label = 22;
          break L4;
         }
         if (($711 | 0) == -1) {
          HEAP32[$__e >> 2] = 0;
          $$pre$i2$i$i84264$ph = 0;
          label = 215;
          break;
         } else if ($699 ^ ($$pre$i2$i$i84336 | 0) == 0) {
          $$pre$i2$i$i84264283 = $$pre$i2$i$i84336;
          $886 = $$pre$i2$i$i84336;
          break;
         } else {
          label = 222;
          break L4;
         }
        } while (0);
        if ((label | 0) == 215) {
         label = 0;
         if ($699) {
          label = 222;
          break L4;
         } else {
          $$pre$i2$i$i84264283 = $$pre$i2$i$i84264$ph;
          $886 = 0;
         }
        }
        $716 = HEAP32[$__b >> 2] | 0;
        $718 = HEAP32[$716 + 12 >> 2] | 0;
        if (($718 | 0) == (HEAP32[$716 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $725 = invoke_ii(HEAP32[(HEAP32[$716 >> 2] | 0) + 36 >> 2] | 0, $716 | 0) | 0;
         $726 = __THREW__;
         __THREW__ = 0;
         if ($726 & 1) {
          label = 22;
          break L4;
         } else $$0$i$i75 = $725;
        } else $$0$i$i75 = HEAPU8[$718 >> 0] | 0;
        if (($$0$i$i75 & 255) << 24 >> 24 <= -1) {
         label = 222;
         break L4;
        }
        if (!(HEAP16[(HEAP32[$17 >> 2] | 0) + ($$0$i$i75 << 24 >> 24 << 1) >> 1] & 2048)) {
         label = 222;
         break L4;
        }
        if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_viii(15, $__wb | 0, $__wn | 0, $0 | 0);
         $742 = __THREW__;
         __THREW__ = 0;
         if ($742 & 1) {
          label = 22;
          break L4;
         }
        }
        $744 = HEAP32[$__b >> 2] | 0;
        $746 = HEAP32[$744 + 12 >> 2] | 0;
        if (($746 | 0) == (HEAP32[$744 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $753 = invoke_ii(HEAP32[(HEAP32[$744 >> 2] | 0) + 36 >> 2] | 0, $744 | 0) | 0;
         $754 = __THREW__;
         __THREW__ = 0;
         if ($754 & 1) {
          label = 22;
          break L4;
         } else $$0$i$i68 = $753;
        } else $$0$i$i68 = HEAPU8[$746 >> 0] | 0;
        $759 = HEAP32[$__wn >> 2] | 0;
        HEAP32[$__wn >> 2] = $759 + 1;
        HEAP8[$759 >> 0] = $$0$i$i68;
        $762$looptemp = $762;
        $762 = $762 + -1 | 0;
        HEAP32[$__fd >> 2] = $762;
        $763 = HEAP32[$__b >> 2] | 0;
        $764 = $763 + 12 | 0;
        $765 = HEAP32[$764 >> 2] | 0;
        if (($765 | 0) == (HEAP32[$763 + 16 >> 2] | 0)) {
         __THREW__ = 0;
         invoke_ii(HEAP32[(HEAP32[$763 >> 2] | 0) + 40 >> 2] | 0, $763 | 0) | 0;
         $772 = __THREW__;
         __THREW__ = 0;
         if ($772 & 1) {
          label = 22;
          break L4;
         }
        } else HEAP32[$764 >> 2] = $765 + 1;
        if (($762$looptemp | 0) <= 1) break; else {
         $$pre$i2$i$i84336 = $$pre$i2$i$i84264283;
         $702 = $886;
        }
       }
      }
     }
     if ((HEAP32[$__wn >> 2] | 0) == (HEAP32[$__wb >> 2] | 0)) {
      label = 233;
      break L4;
     } else {
      $878 = $884;
      $__trailing_sign$1 = $__trailing_sign$0355;
     }
     break;
    }
   default:
    {
     $878 = $876;
     $__trailing_sign$1 = $__trailing_sign$0355;
    }
   } while (0);
   L266 : do if ((label | 0) == 42) while (1) {
    label = 0;
    $131 = HEAP32[$__b >> 2] | 0;
    do if (!$131) $146 = 0; else if ((HEAP32[$131 + 12 >> 2] | 0) == (HEAP32[$131 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $141 = invoke_ii(HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] | 0, $131 | 0) | 0;
     $142 = __THREW__;
     __THREW__ = 0;
     if ($142 & 1) {
      label = 20;
      break L4;
     }
     if (($141 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $146 = 0;
      break;
     } else {
      $146 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $146 = $131; while (0);
    $145 = ($146 | 0) == 0;
    do if (!$148) {
     $$pre$i2$i$i52278 = $$pre$i2$i$i52;
     label = 54;
    } else {
     if ((HEAP32[$148 + 12 >> 2] | 0) != (HEAP32[$148 + 16 >> 2] | 0)) if ($145) {
      $$pre$i2$i$i52280 = $$pre$i2$i$i52;
      $879 = $148;
      break;
     } else {
      $878 = $876;
      $__trailing_sign$1 = $__trailing_sign$0355;
      break L266;
     }
     __THREW__ = 0;
     $157 = invoke_ii(HEAP32[(HEAP32[$148 >> 2] | 0) + 36 >> 2] | 0, $148 | 0) | 0;
     $158 = __THREW__;
     __THREW__ = 0;
     if ($158 & 1) {
      label = 20;
      break L4;
     }
     if (($157 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i2$i$i52278 = 0;
      label = 54;
      break;
     } else if ($145 ^ ($$pre$i2$i$i52 | 0) == 0) {
      $$pre$i2$i$i52280 = $$pre$i2$i$i52;
      $879 = $$pre$i2$i$i52;
      break;
     } else {
      $878 = $876;
      $__trailing_sign$1 = $__trailing_sign$0355;
      break L266;
     }
    } while (0);
    if ((label | 0) == 54) {
     label = 0;
     if ($145) {
      $878 = $876;
      $__trailing_sign$1 = $__trailing_sign$0355;
      break L266;
     } else {
      $$pre$i2$i$i52280 = $$pre$i2$i$i52278;
      $879 = 0;
     }
    }
    $162 = HEAP32[$__b >> 2] | 0;
    $164 = HEAP32[$162 + 12 >> 2] | 0;
    if (($164 | 0) == (HEAP32[$162 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $171 = invoke_ii(HEAP32[(HEAP32[$162 >> 2] | 0) + 36 >> 2] | 0, $162 | 0) | 0;
     $172 = __THREW__;
     __THREW__ = 0;
     if ($172 & 1) {
      label = 20;
      break L4;
     } else $$0$i$i58 = $171;
    } else $$0$i$i58 = HEAPU8[$164 >> 0] | 0;
    if (($$0$i$i58 & 255) << 24 >> 24 <= -1) {
     $878 = $876;
     $__trailing_sign$1 = $__trailing_sign$0355;
     break L266;
    }
    if (!(HEAP16[(HEAP32[$17 >> 2] | 0) + ($$0$i$i58 << 24 >> 24 << 1) >> 1] & 8192)) {
     $878 = $876;
     $__trailing_sign$1 = $__trailing_sign$0355;
     break L266;
    }
    $183 = HEAP32[$__b >> 2] | 0;
    $184 = $183 + 12 | 0;
    $185 = HEAP32[$184 >> 2] | 0;
    if (($185 | 0) == (HEAP32[$183 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $192 = invoke_ii(HEAP32[(HEAP32[$183 >> 2] | 0) + 40 >> 2] | 0, $183 | 0) | 0;
     $193 = __THREW__;
     __THREW__ = 0;
     if ($193 & 1) {
      label = 20;
      break L4;
     } else $$0$i$i65 = $192;
    } else {
     HEAP32[$184 >> 2] = $185 + 1;
     $$0$i$i65 = HEAPU8[$185 >> 0] | 0;
    }
    __THREW__ = 0;
    invoke_vii(44, $__spaces | 0, $$0$i$i65 & 255 | 0);
    $199 = __THREW__;
    __THREW__ = 0;
    if ($199 & 1) {
     label = 20;
     break L4;
    } else {
     $$pre$i2$i$i52 = $$pre$i2$i$i52280;
     $148 = $879;
     label = 42;
    }
   } while (0);
   $__p$0353 = $__p$0353 + 1 | 0;
   if ($__p$0353 >>> 0 >= 4) {
    $$lcssa313 = $878;
    $__trailing_sign$0$lcssa = $__trailing_sign$1;
    label = 235;
    break;
   } else {
    $876 = $878;
    $__trailing_sign$0355 = $__trailing_sign$1;
   }
  }
  L300 : switch (label | 0) {
  case 20:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 21:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 22:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 23:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 24:
   {
    $lpad$phi$index = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index7 = tempRet0;
    break L1;
    break;
   }
  case 40:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 104:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 143:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 198:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 222:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 233:
   {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$0 = 0;
    break;
   }
  case 235:
   {
    L302 : do if ($__trailing_sign$0$lcssa) {
     $784 = $__trailing_sign$0$lcssa + 1 | 0;
     $785 = $__trailing_sign$0$lcssa + 8 | 0;
     $786 = $__trailing_sign$0$lcssa + 4 | 0;
     $__i$0 = 1;
     L304 : while (1) {
      $787 = HEAP8[$__trailing_sign$0$lcssa >> 0] | 0;
      if (!($787 & 1)) $794 = ($787 & 255) >>> 1; else $794 = HEAP32[$786 >> 2] | 0;
      if ($__i$0 >>> 0 >= $794 >>> 0) break L302;
      $795 = HEAP32[$__b >> 2] | 0;
      do if (!$795) $810 = 0; else if ((HEAP32[$795 + 12 >> 2] | 0) == (HEAP32[$795 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $805 = invoke_ii(HEAP32[(HEAP32[$795 >> 2] | 0) + 36 >> 2] | 0, $795 | 0) | 0;
       $806 = __THREW__;
       __THREW__ = 0;
       if ($806 & 1) {
        label = 19;
        break L304;
       }
       if (($805 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $810 = 0;
        break;
       } else {
        $810 = HEAP32[$__b >> 2] | 0;
        break;
       }
      } else $810 = $795; while (0);
      $809 = ($810 | 0) == 0;
      $811 = HEAP32[$__e >> 2] | 0;
      do if (!$811) label = 253; else {
       if ((HEAP32[$811 + 12 >> 2] | 0) == (HEAP32[$811 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $821 = invoke_ii(HEAP32[(HEAP32[$811 >> 2] | 0) + 36 >> 2] | 0, $811 | 0) | 0;
        $822 = __THREW__;
        __THREW__ = 0;
        if ($822 & 1) {
         label = 19;
         break L304;
        }
        if (($821 | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         label = 253;
         break;
        }
       }
       if (!$809) {
        label = 260;
        break L304;
       }
      } while (0);
      if ((label | 0) == 253) {
       label = 0;
       if ($809) {
        label = 260;
        break;
       }
      }
      $825 = HEAP32[$__b >> 2] | 0;
      $827 = HEAP32[$825 + 12 >> 2] | 0;
      if (($827 | 0) == (HEAP32[$825 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $834 = invoke_ii(HEAP32[(HEAP32[$825 >> 2] | 0) + 36 >> 2] | 0, $825 | 0) | 0;
       $835 = __THREW__;
       __THREW__ = 0;
       if ($835 & 1) {
        label = 19;
        break;
       } else $$0$i$i = $834;
      } else $$0$i$i = HEAPU8[$827 >> 0] | 0;
      if (!(HEAP8[$__trailing_sign$0$lcssa >> 0] & 1)) $845 = $784; else $845 = HEAP32[$785 >> 2] | 0;
      if (($$0$i$i & 255) << 24 >> 24 != (HEAP8[$845 + $__i$0 >> 0] | 0)) {
       label = 260;
       break;
      }
      $850 = $__i$0 + 1 | 0;
      $851 = HEAP32[$__b >> 2] | 0;
      $852 = $851 + 12 | 0;
      $853 = HEAP32[$852 >> 2] | 0;
      if (($853 | 0) == (HEAP32[$851 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$851 >> 2] | 0) + 40 >> 2] | 0, $851 | 0) | 0;
       $860 = __THREW__;
       __THREW__ = 0;
       if ($860 & 1) {
        label = 19;
        break;
       } else {
        $__i$0 = $850;
        continue;
       }
      } else {
       HEAP32[$852 >> 2] = $853 + 1;
       $__i$0 = $850;
       continue;
      }
     }
     if ((label | 0) == 19) {
      $68 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $68;
      $lpad$phi$index7 = tempRet0;
      break L1;
     } else if ((label | 0) == 260) {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
      break L300;
     }
    } while (0);
    $863 = HEAP32[$__gb >> 2] | 0;
    if (($863 | 0) == ($$lcssa313 | 0)) $$0 = 1; else {
     HEAP32[$__et >> 2] = 0;
     __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grp, $863, $$lcssa313, $__et);
     if (!(HEAP32[$__et >> 2] | 0)) $$0 = 1; else {
      HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
      $$0 = 0;
     }
    }
    break;
   }
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $869 = HEAP32[$__gb >> 2] | 0;
  HEAP32[$__gb >> 2] = 0;
  if ($869) {
   __THREW__ = 0;
   invoke_vi(HEAP32[$2 >> 2] | 0, $869 | 0);
   $872 = __THREW__;
   __THREW__ = 0;
   if ($872 & 1) {
    $874 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($874);
   }
  }
  STACKTOP = sp;
  return $$0 | 0;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__spaces);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nsn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__psn);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
 $82 = HEAP32[$__gb >> 2] | 0;
 HEAP32[$__gb >> 2] = 0;
 if ($82) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$2 >> 2] | 0, $82 | 0);
  $85 = __THREW__;
  __THREW__ = 0;
  if ($85 & 1) {
   $87 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($87);
  }
 }
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function _printf_core($f, $fmt, $ap, $nl_arg, $nl_type) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 $nl_arg = $nl_arg | 0;
 $nl_type = $nl_type | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$012$i = 0, $$013$i = 0, $$03$i33 = 0, $$07$i = 0.0, $$1$i = 0.0, $$114$i = 0, $$2$i = 0.0, $$20$i = 0.0, $$21$i = 0, $$210$i = 0, $$23$i = 0, $$3$i = 0.0, $$31$i = 0, $$311$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$41276$i = 0, $$5$lcssa$i = 0, $$51 = 0, $$587$i = 0, $$a$3$i = 0, $$a$3186$i = 0, $$fl$4 = 0, $$lcssa = 0, $$lcssa159$i = 0, $$lcssa318 = 0, $$lcssa323 = 0, $$lcssa324 = 0, $$lcssa325 = 0, $$lcssa326 = 0, $$lcssa327 = 0, $$lcssa329 = 0, $$lcssa339 = 0, $$lcssa342 = 0.0, $$lcssa344 = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr47$i = 0, $$pre$phi184$iZ2D = 0, $$pre182$i = 0, $$z$4$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $12 = 0, $13 = 0, $133 = 0, $134 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $144 = 0, $146 = 0, $148 = 0, $149 = 0, $15 = 0, $154 = 0, $157 = 0, $162 = 0, $163 = 0, $168 = 0, $175 = 0, $176 = 0, $187 = 0, $199 = 0, $2 = 0, $206 = 0, $208 = 0, $21 = 0, $211 = 0, $212 = 0, $217 = 0, $223 = 0, $224 = 0, $23 = 0, $230 = 0, $24 = 0, $243 = 0, $245 = 0, $248 = 0, $253 = 0, $256 = 0, $257 = 0, $267 = 0, $269 = 0, $271 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $28 = 0, $284 = 0, $286 = 0, $287 = 0, $29 = 0, $291 = 0, $299 = 0, $3 = 0, $305 = 0, $317 = 0, $320 = 0, $321 = 0, $334 = 0, $336 = 0, $34 = 0, $341 = 0, $346 = 0, $349 = 0, $359 = 0.0, $366 = 0, $370 = 0, $377 = 0, $379 = 0, $381 = 0, $382 = 0, $386 = 0, $39 = 0, $392 = 0.0, $393 = 0, $396 = 0, $398 = 0, $4 = 0, $40 = 0, $401 = 0, $403 = 0, $407 = 0.0, $417 = 0, $420 = 0, $423 = 0, $432 = 0, $434 = 0, $435 = 0, $44 = 0, $441 = 0, $459 = 0, $46 = 0, $464 = 0, $469 = 0, $47 = 0, $479 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $491 = 0, $492 = 0, $495 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $501 = 0, $505 = 0, $507 = 0, $51 = 0, $511 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $521 = 0, $527 = 0, $528 = 0, $529 = 0, $533 = 0, $541 = 0, $555 = 0, $556 = 0, $559 = 0, $56 = 0, $564 = 0, $565 = 0, $567 = 0, $574 = 0, $575 = 0, $576 = 0, $579 = 0, $580 = 0, $581 = 0, $588 = 0, $59 = 0, $598 = 0, $6 = 0, $60 = 0, $601 = 0, $603 = 0, $605 = 0, $607 = 0, $61 = 0, $612 = 0, $613 = 0, $616 = 0, $618 = 0, $620 = 0, $622 = 0, $633 = 0, $636 = 0, $641 = 0, $650 = 0, $651 = 0, $655 = 0, $658 = 0, $66 = 0, $660 = 0, $662 = 0, $666 = 0, $669 = 0, $67 = 0, $673 = 0, $683 = 0, $688 = 0, $695 = 0, $698 = 0, $7 = 0, $706 = 0, $716 = 0, $718 = 0, $726 = 0, $733 = 0, $735 = 0, $739 = 0, $741 = 0, $750 = 0, $756 = 0, $771 = 0, $773 = 0, $786 = 0, $8 = 0, $9 = 0, $91 = 0, $92 = 0, $98 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1147$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3134$i = 0, $a$5$lcssa$i = 0, $a$5109$i = 0, $a$6$i = 0, $a$7$i = 0, $a$8$ph$i = 0, $arg = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0140$i = 0, $carry3$0128$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0139$i = 0, $d$0141$i = 0, $d$1127$i = 0, $d$2$lcssa$i = 0, $d$2108$i = 0, $d$3$i = 0, $d$482$i = 0, $d$575$i = 0, $d$686$i = 0, $e$0123$i = 0, $e$1$i = 0, $e$2104$i = 0, $e$3$i = 0, $e$4$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$193$i = 0, $estr$2$i = 0, $fl$0109 = 0, $fl$062 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $fmt39$lcssa = 0, $fmt39101 = 0, $fmt40 = 0, $fmt41 = 0, $fmt42 = 0, $fmt44 = 0, $fmt44$lcssa321 = 0, $fmt45 = 0, $i$0$lcssa = 0, $i$0$lcssa200 = 0, $i$0114 = 0, $i$0122$i = 0, $i$03$i = 0, $i$03$i25 = 0, $i$1$lcssa$i = 0, $i$1116$i = 0, $i$1125 = 0, $i$2100 = 0, $i$2100$lcssa = 0, $i$2103$i = 0, $i$398 = 0, $i$399$i = 0, $isdigittmp = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i24 = 0, $isdigittmp9 = 0, $j$0115$i = 0, $j$0117$i = 0, $j$1100$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1113 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notrhs$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$4198 = 0, $p$5 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$8$i = 0, $re$169$i = 0, $round$068$i = 0.0, $round6$1$i = 0.0, $s$0$i = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s7$079$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$070$i = 0, $s9$0$i = 0, $s9$183$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa322 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge8108 = 0, $storemerge860 = 0, $t$0 = 0, $t$1 = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $wc = 0, $ws$0115 = 0, $ws$1126 = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$0102 = 0, $z$1$lcssa$i = 0, $z$1146$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3133$i = 0, $z$4$i = 0, $z$6$$i = 0, $z$6$i = 0, $z$6$i$lcssa = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 $big$i = sp + 24 | 0;
 $e2$i = sp + 16 | 0;
 $buf$i = sp + 532 | 0;
 $ebuf0$i = sp + 600 | 0;
 $arg = sp;
 $buf = sp + 560 | 0;
 $wc = sp + 8 | 0;
 $mb = sp + 528 | 0;
 $0 = ($f | 0) != 0;
 $1 = $buf + 40 | 0;
 $2 = $1;
 $3 = $buf + 39 | 0;
 $4 = $wc + 4 | 0;
 $5 = $ebuf0$i + 12 | 0;
 $6 = $ebuf0$i + 11 | 0;
 $7 = $buf$i;
 $8 = $5;
 $9 = $8 - $7 | 0;
 $10 = -2 - $7 | 0;
 $11 = $8 + 2 | 0;
 $12 = $big$i + 288 | 0;
 $13 = $buf$i + 9 | 0;
 $14 = $13;
 $15 = $buf$i + 8 | 0;
 $cnt$0 = 0;
 $fmt41 = $fmt;
 $l$0 = 0;
 $l10n$0 = 0;
 L1 : while (1) {
  do if (($cnt$0 | 0) > -1) if (($l$0 | 0) > (2147483647 - $cnt$0 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $cnt$1 = -1;
   break;
  } else {
   $cnt$1 = $l$0 + $cnt$0 | 0;
   break;
  } else $cnt$1 = $cnt$0; while (0);
  $21 = HEAP8[$fmt41 >> 0] | 0;
  if (!($21 << 24 >> 24)) {
   $cnt$1$lcssa = $cnt$1;
   $l10n$0$lcssa = $l10n$0;
   label = 245;
   break;
  } else {
   $23 = $21;
   $fmt40 = $fmt41;
  }
  L9 : while (1) {
   switch ($23 << 24 >> 24) {
   case 37:
    {
     $fmt39101 = $fmt40;
     $z$0102 = $fmt40;
     label = 9;
     break L9;
     break;
    }
   case 0:
    {
     $fmt39$lcssa = $fmt40;
     $z$0$lcssa = $fmt40;
     break L9;
     break;
    }
   default:
    {}
   }
   $24 = $fmt40 + 1 | 0;
   $23 = HEAP8[$24 >> 0] | 0;
   $fmt40 = $24;
  }
  L12 : do if ((label | 0) == 9) while (1) {
   label = 0;
   if ((HEAP8[$fmt39101 + 1 >> 0] | 0) != 37) {
    $fmt39$lcssa = $fmt39101;
    $z$0$lcssa = $z$0102;
    break L12;
   }
   $28 = $z$0102 + 1 | 0;
   $29 = $fmt39101 + 2 | 0;
   if ((HEAP8[$29 >> 0] | 0) == 37) {
    $fmt39101 = $29;
    $z$0102 = $28;
    label = 9;
   } else {
    $fmt39$lcssa = $29;
    $z$0$lcssa = $28;
    break;
   }
  } while (0);
  $34 = $z$0$lcssa - $fmt41 | 0;
  if ($0) if (!(HEAP32[$f >> 2] & 32)) ___fwritex($fmt41, $34, $f) | 0;
  if (($z$0$lcssa | 0) != ($fmt41 | 0)) {
   $cnt$0 = $cnt$1;
   $fmt41 = $fmt39$lcssa;
   $l$0 = $34;
   continue;
  }
  $39 = $fmt39$lcssa + 1 | 0;
  $40 = HEAP8[$39 >> 0] | 0;
  $isdigittmp = ($40 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $44 = (HEAP8[$fmt39$lcssa + 2 >> 0] | 0) == 36;
   $$51 = $44 ? $fmt39$lcssa + 3 | 0 : $39;
   $47 = HEAP8[$$51 >> 0] | 0;
   $argpos$0 = $44 ? $isdigittmp : -1;
   $l10n$1 = $44 ? 1 : $l10n$0;
   $storemerge = $$51;
  } else {
   $47 = $40;
   $argpos$0 = -1;
   $l10n$1 = $l10n$0;
   $storemerge = $39;
  }
  $46 = $47 << 24 >> 24;
  L25 : do if (($46 & -32 | 0) == 32) {
   $51 = $46;
   $56 = $47;
   $fl$0109 = 0;
   $storemerge8108 = $storemerge;
   while (1) {
    if (!(1 << $51 + -32 & 75913)) {
     $66 = $56;
     $fl$062 = $fl$0109;
     $storemerge860 = $storemerge8108;
     break L25;
    }
    $59 = 1 << ($56 << 24 >> 24) + -32 | $fl$0109;
    $60 = $storemerge8108 + 1 | 0;
    $61 = HEAP8[$60 >> 0] | 0;
    $51 = $61 << 24 >> 24;
    if (($51 & -32 | 0) != 32) {
     $66 = $61;
     $fl$062 = $59;
     $storemerge860 = $60;
     break;
    } else {
     $56 = $61;
     $fl$0109 = $59;
     $storemerge8108 = $60;
    }
   }
  } else {
   $66 = $47;
   $fl$062 = 0;
   $storemerge860 = $storemerge;
  } while (0);
  do if ($66 << 24 >> 24 == 42) {
   $67 = $storemerge860 + 1 | 0;
   $isdigittmp11 = (HEAP8[$67 >> 0] | 0) + -48 | 0;
   if ($isdigittmp11 >>> 0 < 10) if ((HEAP8[$storemerge860 + 2 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp11 << 2) >> 2] = 10;
    $l10n$2 = 1;
    $storemerge13 = $storemerge860 + 3 | 0;
    $w$0 = HEAP32[$nl_arg + ((HEAP8[$67 >> 0] | 0) + -48 << 3) >> 2] | 0;
   } else label = 24; else label = 24;
   if ((label | 0) == 24) {
    label = 0;
    if ($l10n$1) {
     $$0 = -1;
     break L1;
    }
    if (!$0) {
     $fl$1 = $fl$062;
     $fmt42 = $67;
     $l10n$3 = 0;
     $w$1 = 0;
     break;
    }
    $91 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $92 = HEAP32[$91 >> 2] | 0;
    HEAP32[$ap >> 2] = $91 + 4;
    $l10n$2 = 0;
    $storemerge13 = $67;
    $w$0 = $92;
   }
   if (($w$0 | 0) < 0) {
    $fl$1 = $fl$062 | 8192;
    $fmt42 = $storemerge13;
    $l10n$3 = $l10n$2;
    $w$1 = 0 - $w$0 | 0;
   } else {
    $fl$1 = $fl$062;
    $fmt42 = $storemerge13;
    $l10n$3 = $l10n$2;
    $w$1 = $w$0;
   }
  } else {
   $isdigittmp1$i = ($66 << 24 >> 24) + -48 | 0;
   if ($isdigittmp1$i >>> 0 < 10) {
    $100 = $storemerge860;
    $i$03$i = 0;
    $isdigittmp4$i = $isdigittmp1$i;
    while (1) {
     $98 = ($i$03$i * 10 | 0) + $isdigittmp4$i | 0;
     $99 = $100 + 1 | 0;
     $isdigittmp4$i = (HEAP8[$99 >> 0] | 0) + -48 | 0;
     if ($isdigittmp4$i >>> 0 >= 10) {
      $$lcssa = $98;
      $$lcssa318 = $99;
      break;
     } else {
      $100 = $99;
      $i$03$i = $98;
     }
    }
    if (($$lcssa | 0) < 0) {
     $$0 = -1;
     break L1;
    } else {
     $fl$1 = $fl$062;
     $fmt42 = $$lcssa318;
     $l10n$3 = $l10n$1;
     $w$1 = $$lcssa;
    }
   } else {
    $fl$1 = $fl$062;
    $fmt42 = $storemerge860;
    $l10n$3 = $l10n$1;
    $w$1 = 0;
   }
  } while (0);
  L46 : do if ((HEAP8[$fmt42 >> 0] | 0) == 46) {
   $106 = $fmt42 + 1 | 0;
   $107 = HEAP8[$106 >> 0] | 0;
   if ($107 << 24 >> 24 != 42) {
    $isdigittmp1$i22 = ($107 << 24 >> 24) + -48 | 0;
    if ($isdigittmp1$i22 >>> 0 < 10) {
     $139 = $106;
     $i$03$i25 = 0;
     $isdigittmp4$i24 = $isdigittmp1$i22;
    } else {
     $fmt45 = $106;
     $p$0 = 0;
     break;
    }
    while (1) {
     $137 = ($i$03$i25 * 10 | 0) + $isdigittmp4$i24 | 0;
     $138 = $139 + 1 | 0;
     $isdigittmp4$i24 = (HEAP8[$138 >> 0] | 0) + -48 | 0;
     if ($isdigittmp4$i24 >>> 0 >= 10) {
      $fmt45 = $138;
      $p$0 = $137;
      break L46;
     } else {
      $139 = $138;
      $i$03$i25 = $137;
     }
    }
   }
   $109 = $fmt42 + 2 | 0;
   $isdigittmp9 = (HEAP8[$109 >> 0] | 0) + -48 | 0;
   if ($isdigittmp9 >>> 0 < 10) if ((HEAP8[$fmt42 + 3 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp9 << 2) >> 2] = 10;
    $fmt45 = $fmt42 + 4 | 0;
    $p$0 = HEAP32[$nl_arg + ((HEAP8[$109 >> 0] | 0) + -48 << 3) >> 2] | 0;
    break;
   }
   if ($l10n$3) {
    $$0 = -1;
    break L1;
   }
   if ($0) {
    $133 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $134 = HEAP32[$133 >> 2] | 0;
    HEAP32[$ap >> 2] = $133 + 4;
    $fmt45 = $109;
    $p$0 = $134;
   } else {
    $fmt45 = $109;
    $p$0 = 0;
   }
  } else {
   $fmt45 = $fmt42;
   $p$0 = -1;
  } while (0);
  $fmt44 = $fmt45;
  $st$0 = 0;
  while (1) {
   $144 = (HEAP8[$fmt44 >> 0] | 0) + -65 | 0;
   if ($144 >>> 0 > 57) {
    $$0 = -1;
    break L1;
   }
   $146 = $fmt44 + 1 | 0;
   $148 = HEAP8[60224 + ($st$0 * 58 | 0) + $144 >> 0] | 0;
   $149 = $148 & 255;
   if (($149 + -1 | 0) >>> 0 < 8) {
    $fmt44 = $146;
    $st$0 = $149;
   } else {
    $$lcssa323 = $146;
    $$lcssa324 = $148;
    $$lcssa325 = $149;
    $fmt44$lcssa321 = $fmt44;
    $st$0$lcssa322 = $st$0;
    break;
   }
  }
  if (!($$lcssa324 << 24 >> 24)) {
   $$0 = -1;
   break;
  }
  $154 = ($argpos$0 | 0) > -1;
  do if ($$lcssa324 << 24 >> 24 == 19) if ($154) {
   $$0 = -1;
   break L1;
  } else label = 52; else {
   if ($154) {
    HEAP32[$nl_type + ($argpos$0 << 2) >> 2] = $$lcssa325;
    $157 = $nl_arg + ($argpos$0 << 3) | 0;
    $162 = HEAP32[$157 + 4 >> 2] | 0;
    $163 = $arg;
    HEAP32[$163 >> 2] = HEAP32[$157 >> 2];
    HEAP32[$163 + 4 >> 2] = $162;
    label = 52;
    break;
   }
   if (!$0) {
    $$0 = 0;
    break L1;
   }
   _pop_arg($arg, $$lcssa325, $ap);
  } while (0);
  if ((label | 0) == 52) {
   label = 0;
   if (!$0) {
    $cnt$0 = $cnt$1;
    $fmt41 = $$lcssa323;
    $l$0 = $34;
    $l10n$0 = $l10n$3;
    continue;
   }
  }
  $168 = HEAP8[$fmt44$lcssa321 >> 0] | 0;
  $t$0 = ($st$0$lcssa322 | 0) != 0 & ($168 & 15 | 0) == 3 ? $168 & -33 : $168;
  $175 = $fl$1 & -65537;
  $fl$1$ = ($fl$1 & 8192 | 0) == 0 ? $fl$1 : $175;
  L75 : do switch ($t$0 | 0) {
  case 110:
   {
    switch ($st$0$lcssa322 | 0) {
    case 0:
     {
      HEAP32[HEAP32[$arg >> 2] >> 2] = $cnt$1;
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 1:
     {
      HEAP32[HEAP32[$arg >> 2] >> 2] = $cnt$1;
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 2:
     {
      $187 = HEAP32[$arg >> 2] | 0;
      HEAP32[$187 >> 2] = $cnt$1;
      HEAP32[$187 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 3:
     {
      HEAP16[HEAP32[$arg >> 2] >> 1] = $cnt$1;
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 4:
     {
      HEAP8[HEAP32[$arg >> 2] >> 0] = $cnt$1;
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 6:
     {
      HEAP32[HEAP32[$arg >> 2] >> 2] = $cnt$1;
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    case 7:
     {
      $199 = HEAP32[$arg >> 2] | 0;
      HEAP32[$199 >> 2] = $cnt$1;
      HEAP32[$199 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
      break;
     }
    default:
     {
      $cnt$0 = $cnt$1;
      $fmt41 = $$lcssa323;
      $l$0 = $34;
      $l10n$0 = $l10n$3;
      continue L1;
     }
    }
    break;
   }
  case 112:
   {
    $fl$3 = $fl$1$ | 8;
    $p$1 = $p$0 >>> 0 > 8 ? $p$0 : 8;
    $t$1 = 120;
    label = 64;
    break;
   }
  case 88:
  case 120:
   {
    $fl$3 = $fl$1$;
    $p$1 = $p$0;
    $t$1 = $t$0;
    label = 64;
    break;
   }
  case 111:
   {
    $243 = $arg;
    $245 = HEAP32[$243 >> 2] | 0;
    $248 = HEAP32[$243 + 4 >> 2] | 0;
    if (($245 | 0) == 0 & ($248 | 0) == 0) $$0$lcssa$i = $1; else {
     $$03$i33 = $1;
     $253 = $245;
     $257 = $248;
     while (1) {
      $256 = $$03$i33 + -1 | 0;
      HEAP8[$256 >> 0] = $253 & 7 | 48;
      $253 = _bitshift64Lshr($253 | 0, $257 | 0, 3) | 0;
      $257 = tempRet0;
      if (($253 | 0) == 0 & ($257 | 0) == 0) {
       $$0$lcssa$i = $256;
       break;
      } else $$03$i33 = $256;
     }
    }
    if (!($fl$1$ & 8)) {
     $a$0 = $$0$lcssa$i;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = 0;
     $prefix$1 = 60704;
     label = 77;
    } else {
     $267 = $2 - $$0$lcssa$i + 1 | 0;
     $a$0 = $$0$lcssa$i;
     $fl$4 = $fl$1$;
     $p$2 = ($p$0 | 0) < ($267 | 0) ? $267 : $p$0;
     $pl$1 = 0;
     $prefix$1 = 60704;
     label = 77;
    }
    break;
   }
  case 105:
  case 100:
   {
    $269 = $arg;
    $271 = HEAP32[$269 >> 2] | 0;
    $274 = HEAP32[$269 + 4 >> 2] | 0;
    if (($274 | 0) < 0) {
     $276 = _i64Subtract(0, 0, $271 | 0, $274 | 0) | 0;
     $277 = tempRet0;
     $278 = $arg;
     HEAP32[$278 >> 2] = $276;
     HEAP32[$278 + 4 >> 2] = $277;
     $286 = $276;
     $287 = $277;
     $pl$0 = 1;
     $prefix$0 = 60704;
     label = 76;
     break L75;
    }
    if (!($fl$1$ & 2048)) {
     $284 = $fl$1$ & 1;
     $286 = $271;
     $287 = $274;
     $pl$0 = $284;
     $prefix$0 = ($284 | 0) == 0 ? 60704 : 60706;
     label = 76;
    } else {
     $286 = $271;
     $287 = $274;
     $pl$0 = 1;
     $prefix$0 = 60705;
     label = 76;
    }
    break;
   }
  case 117:
   {
    $176 = $arg;
    $286 = HEAP32[$176 >> 2] | 0;
    $287 = HEAP32[$176 + 4 >> 2] | 0;
    $pl$0 = 0;
    $prefix$0 = 60704;
    label = 76;
    break;
   }
  case 99:
   {
    HEAP8[$3 >> 0] = HEAP32[$arg >> 2];
    $a$2 = $3;
    $fl$6 = $175;
    $p$5 = 1;
    $pl$2 = 0;
    $prefix$2 = 60704;
    $z$2 = $1;
    break;
   }
  case 109:
   {
    $a$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    label = 82;
    break;
   }
  case 115:
   {
    $317 = HEAP32[$arg >> 2] | 0;
    $a$1 = ($317 | 0) != 0 ? $317 : 60714;
    label = 82;
    break;
   }
  case 67:
   {
    HEAP32[$wc >> 2] = HEAP32[$arg >> 2];
    HEAP32[$4 >> 2] = 0;
    HEAP32[$arg >> 2] = $wc;
    $p$4198 = -1;
    label = 86;
    break;
   }
  case 83:
   {
    if (!$p$0) {
     _pad($f, 32, $w$1, 0, $fl$1$);
     $i$0$lcssa200 = 0;
     label = 98;
    } else {
     $p$4198 = $p$0;
     label = 86;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    $359 = +HEAPF64[$arg >> 3];
    HEAP32[$e2$i >> 2] = 0;
    HEAPF64[tempDoublePtr >> 3] = $359;
    if ((HEAP32[tempDoublePtr + 4 >> 2] | 0) < 0) {
     $$07$i = -$359;
     $pl$0$i = 1;
     $prefix$0$i = 60721;
    } else if (!($fl$1$ & 2048)) {
     $366 = $fl$1$ & 1;
     $$07$i = $359;
     $pl$0$i = $366;
     $prefix$0$i = ($366 | 0) == 0 ? 60722 : 60727;
    } else {
     $$07$i = $359;
     $pl$0$i = 1;
     $prefix$0$i = 60724;
    }
    HEAPF64[tempDoublePtr >> 3] = $$07$i;
    $370 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if ($370 >>> 0 < 2146435072 | ($370 | 0) == 2146435072 & 0 < 0) {
     $392 = +_frexpl($$07$i, $e2$i) * 2.0;
     $393 = $392 != 0.0;
     if ($393) HEAP32[$e2$i >> 2] = (HEAP32[$e2$i >> 2] | 0) + -1;
     $396 = $t$0 | 32;
     if (($396 | 0) == 97) {
      $398 = $t$0 & 32;
      $prefix$0$$i = ($398 | 0) == 0 ? $prefix$0$i : $prefix$0$i + 9 | 0;
      $401 = $pl$0$i | 2;
      $403 = 12 - $p$0 | 0;
      do if ($p$0 >>> 0 > 11 | ($403 | 0) == 0) $$1$i = $392; else {
       $re$169$i = $403;
       $round$068$i = 8.0;
       while (1) {
        $re$169$i = $re$169$i + -1 | 0;
        $407 = $round$068$i * 16.0;
        if (!$re$169$i) {
         $$lcssa342 = $407;
         break;
        } else $round$068$i = $407;
       }
       if ((HEAP8[$prefix$0$$i >> 0] | 0) == 45) {
        $$1$i = -($$lcssa342 + (-$392 - $$lcssa342));
        break;
       } else {
        $$1$i = $392 + $$lcssa342 - $$lcssa342;
        break;
       }
      } while (0);
      $417 = HEAP32[$e2$i >> 2] | 0;
      $420 = ($417 | 0) < 0 ? 0 - $417 | 0 : $417;
      $423 = _fmt_u($420, (($420 | 0) < 0) << 31 >> 31, $5) | 0;
      if (($423 | 0) == ($5 | 0)) {
       HEAP8[$6 >> 0] = 48;
       $estr$0$i = $6;
      } else $estr$0$i = $423;
      HEAP8[$estr$0$i + -1 >> 0] = ($417 >> 31 & 2) + 43;
      $432 = $estr$0$i + -2 | 0;
      HEAP8[$432 >> 0] = $t$0 + 15;
      $notrhs$i = ($p$0 | 0) < 1;
      $434 = ($fl$1$ & 8 | 0) == 0;
      $$2$i = $$1$i;
      $s$0$i = $buf$i;
      while (1) {
       $435 = ~~$$2$i;
       $441 = $s$0$i + 1 | 0;
       HEAP8[$s$0$i >> 0] = HEAPU8[60688 + $435 >> 0] | $398;
       $$2$i = ($$2$i - +($435 | 0)) * 16.0;
       do if (($441 - $7 | 0) == 1) {
        if ($434 & ($notrhs$i & $$2$i == 0.0)) {
         $s$1$i = $441;
         break;
        }
        HEAP8[$441 >> 0] = 46;
        $s$1$i = $s$0$i + 2 | 0;
       } else $s$1$i = $441; while (0);
       if (!($$2$i != 0.0)) {
        $s$1$i$lcssa = $s$1$i;
        break;
       } else $s$0$i = $s$1$i;
      }
      $$pre182$i = $s$1$i$lcssa;
      $l$0$i = ($p$0 | 0) != 0 & ($10 + $$pre182$i | 0) < ($p$0 | 0) ? $11 + $p$0 - $432 | 0 : $9 - $432 + $$pre182$i | 0;
      $459 = $l$0$i + $401 | 0;
      _pad($f, 32, $w$1, $459, $fl$1$);
      if (!(HEAP32[$f >> 2] & 32)) ___fwritex($prefix$0$$i, $401, $f) | 0;
      _pad($f, 48, $w$1, $459, $fl$1$ ^ 65536);
      $464 = $$pre182$i - $7 | 0;
      if (!(HEAP32[$f >> 2] & 32)) ___fwritex($buf$i, $464, $f) | 0;
      $469 = $8 - $432 | 0;
      _pad($f, 48, $l$0$i - ($464 + $469) | 0, 0, 0);
      if (!(HEAP32[$f >> 2] & 32)) ___fwritex($432, $469, $f) | 0;
      _pad($f, 32, $w$1, $459, $fl$1$ ^ 8192);
      $$0$i = ($459 | 0) < ($w$1 | 0) ? $w$1 : $459;
      break;
     }
     $$p$i = ($p$0 | 0) < 0 ? 6 : $p$0;
     if ($393) {
      $479 = (HEAP32[$e2$i >> 2] | 0) + -28 | 0;
      HEAP32[$e2$i >> 2] = $479;
      $$3$i = $392 * 268435456.0;
      $481 = $479;
     } else {
      $$3$i = $392;
      $481 = HEAP32[$e2$i >> 2] | 0;
     }
     $$31$i = ($481 | 0) < 0 ? $big$i : $12;
     $482 = $$31$i;
     $$4$i = $$3$i;
     $z$0$i = $$31$i;
     while (1) {
      $483 = ~~$$4$i >>> 0;
      HEAP32[$z$0$i >> 2] = $483;
      $484 = $z$0$i + 4 | 0;
      $$4$i = ($$4$i - +($483 >>> 0)) * 1.0e9;
      if (!($$4$i != 0.0)) {
       $$lcssa326 = $484;
       break;
      } else $z$0$i = $484;
     }
     $$pr$i = HEAP32[$e2$i >> 2] | 0;
     if (($$pr$i | 0) > 0) {
      $491 = $$pr$i;
      $a$1147$i = $$31$i;
      $z$1146$i = $$lcssa326;
      while (1) {
       $492 = ($491 | 0) > 29 ? 29 : $491;
       $d$0139$i = $z$1146$i + -4 | 0;
       do if ($d$0139$i >>> 0 < $a$1147$i >>> 0) $a$2$ph$i = $a$1147$i; else {
        $carry$0140$i = 0;
        $d$0141$i = $d$0139$i;
        while (1) {
         $495 = _bitshift64Shl(HEAP32[$d$0141$i >> 2] | 0, 0, $492 | 0) | 0;
         $497 = _i64Add($495 | 0, tempRet0 | 0, $carry$0140$i | 0, 0) | 0;
         $498 = tempRet0;
         $499 = ___uremdi3($497 | 0, $498 | 0, 1e9, 0) | 0;
         HEAP32[$d$0141$i >> 2] = $499;
         $501 = ___udivdi3($497 | 0, $498 | 0, 1e9, 0) | 0;
         $d$0141$i = $d$0141$i + -4 | 0;
         if ($d$0141$i >>> 0 < $a$1147$i >>> 0) {
          $$lcssa327 = $501;
          break;
         } else $carry$0140$i = $501;
        }
        if (!$$lcssa327) {
         $a$2$ph$i = $a$1147$i;
         break;
        }
        $505 = $a$1147$i + -4 | 0;
        HEAP32[$505 >> 2] = $$lcssa327;
        $a$2$ph$i = $505;
       } while (0);
       $z$2$i = $z$1146$i;
       while (1) {
        if ($z$2$i >>> 0 <= $a$2$ph$i >>> 0) {
         $z$2$i$lcssa = $z$2$i;
         break;
        }
        $507 = $z$2$i + -4 | 0;
        if (!(HEAP32[$507 >> 2] | 0)) $z$2$i = $507; else {
         $z$2$i$lcssa = $z$2$i;
         break;
        }
       }
       $511 = (HEAP32[$e2$i >> 2] | 0) - $492 | 0;
       HEAP32[$e2$i >> 2] = $511;
       if (($511 | 0) > 0) {
        $491 = $511;
        $a$1147$i = $a$2$ph$i;
        $z$1146$i = $z$2$i$lcssa;
       } else {
        $$pr47$i = $511;
        $a$1$lcssa$i = $a$2$ph$i;
        $z$1$lcssa$i = $z$2$i$lcssa;
        break;
       }
      }
     } else {
      $$pr47$i = $$pr$i;
      $a$1$lcssa$i = $$31$i;
      $z$1$lcssa$i = $$lcssa326;
     }
     if (($$pr47$i | 0) < 0) {
      $516 = (($$p$i + 25 | 0) / 9 | 0) + 1 | 0;
      $517 = ($396 | 0) == 102;
      $519 = $$pr47$i;
      $a$3134$i = $a$1$lcssa$i;
      $z$3133$i = $z$1$lcssa$i;
      while (1) {
       $518 = 0 - $519 | 0;
       $521 = ($518 | 0) > 9 ? 9 : $518;
       do if ($a$3134$i >>> 0 < $z$3133$i >>> 0) {
        $527 = (1 << $521) + -1 | 0;
        $528 = 1e9 >>> $521;
        $carry3$0128$i = 0;
        $d$1127$i = $a$3134$i;
        while (1) {
         $529 = HEAP32[$d$1127$i >> 2] | 0;
         HEAP32[$d$1127$i >> 2] = ($529 >>> $521) + $carry3$0128$i;
         $533 = Math_imul($529 & $527, $528) | 0;
         $d$1127$i = $d$1127$i + 4 | 0;
         if ($d$1127$i >>> 0 >= $z$3133$i >>> 0) {
          $$lcssa329 = $533;
          break;
         } else $carry3$0128$i = $533;
        }
        $$a$3$i = (HEAP32[$a$3134$i >> 2] | 0) == 0 ? $a$3134$i + 4 | 0 : $a$3134$i;
        if (!$$lcssa329) {
         $$a$3186$i = $$a$3$i;
         $z$4$i = $z$3133$i;
         break;
        }
        HEAP32[$z$3133$i >> 2] = $$lcssa329;
        $$a$3186$i = $$a$3$i;
        $z$4$i = $z$3133$i + 4 | 0;
       } else {
        $$a$3186$i = (HEAP32[$a$3134$i >> 2] | 0) == 0 ? $a$3134$i + 4 | 0 : $a$3134$i;
        $z$4$i = $z$3133$i;
       } while (0);
       $541 = $517 ? $$31$i : $$a$3186$i;
       $$z$4$i = ($z$4$i - $541 >> 2 | 0) > ($516 | 0) ? $541 + ($516 << 2) | 0 : $z$4$i;
       $519 = (HEAP32[$e2$i >> 2] | 0) + $521 | 0;
       HEAP32[$e2$i >> 2] = $519;
       if (($519 | 0) >= 0) {
        $a$3$lcssa$i = $$a$3186$i;
        $z$3$lcssa$i = $$z$4$i;
        break;
       } else {
        $a$3134$i = $$a$3186$i;
        $z$3133$i = $$z$4$i;
       }
      }
     } else {
      $a$3$lcssa$i = $a$1$lcssa$i;
      $z$3$lcssa$i = $z$1$lcssa$i;
     }
     do if ($a$3$lcssa$i >>> 0 < $z$3$lcssa$i >>> 0) {
      $555 = ($482 - $a$3$lcssa$i >> 2) * 9 | 0;
      $556 = HEAP32[$a$3$lcssa$i >> 2] | 0;
      if ($556 >>> 0 < 10) {
       $e$1$i = $555;
       break;
      } else {
       $e$0123$i = $555;
       $i$0122$i = 10;
      }
      while (1) {
       $i$0122$i = $i$0122$i * 10 | 0;
       $559 = $e$0123$i + 1 | 0;
       if ($556 >>> 0 < $i$0122$i >>> 0) {
        $e$1$i = $559;
        break;
       } else $e$0123$i = $559;
      }
     } else $e$1$i = 0; while (0);
     $564 = ($396 | 0) == 103;
     $565 = ($$p$i | 0) != 0;
     $567 = $$p$i - (($396 | 0) != 102 ? $e$1$i : 0) + (($565 & $564) << 31 >> 31) | 0;
     if (($567 | 0) < ((($z$3$lcssa$i - $482 >> 2) * 9 | 0) + -9 | 0)) {
      $574 = $567 + 9216 | 0;
      $575 = ($574 | 0) / 9 | 0;
      $576 = $$31$i + ($575 + -1023 << 2) | 0;
      $j$0115$i = (($574 | 0) % 9 | 0) + 1 | 0;
      if (($j$0115$i | 0) < 9) {
       $i$1116$i = 10;
       $j$0117$i = $j$0115$i;
       while (1) {
        $579 = $i$1116$i * 10 | 0;
        $j$0117$i = $j$0117$i + 1 | 0;
        if (($j$0117$i | 0) == 9) {
         $i$1$lcssa$i = $579;
         break;
        } else $i$1116$i = $579;
       }
      } else $i$1$lcssa$i = 10;
      $580 = HEAP32[$576 >> 2] | 0;
      $581 = ($580 >>> 0) % ($i$1$lcssa$i >>> 0) | 0;
      if (!$581) if (($$31$i + ($575 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
       $a$7$i = $a$3$lcssa$i;
       $d$3$i = $576;
       $e$3$i = $e$1$i;
      } else label = 163; else label = 163;
      do if ((label | 0) == 163) {
       label = 0;
       $$20$i = ((($580 >>> 0) / ($i$1$lcssa$i >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       $588 = ($i$1$lcssa$i | 0) / 2 | 0;
       do if ($581 >>> 0 < $588 >>> 0) $small$0$i = .5; else {
        if (($581 | 0) == ($588 | 0)) if (($$31$i + ($575 + -1022 << 2) | 0) == ($z$3$lcssa$i | 0)) {
         $small$0$i = 1.0;
         break;
        }
        $small$0$i = 1.5;
       } while (0);
       do if (!$pl$0$i) {
        $round6$1$i = $$20$i;
        $small$1$i = $small$0$i;
       } else {
        if ((HEAP8[$prefix$0$i >> 0] | 0) != 45) {
         $round6$1$i = $$20$i;
         $small$1$i = $small$0$i;
         break;
        }
        $round6$1$i = -$$20$i;
        $small$1$i = -$small$0$i;
       } while (0);
       $598 = $580 - $581 | 0;
       HEAP32[$576 >> 2] = $598;
       if (!($round6$1$i + $small$1$i != $round6$1$i)) {
        $a$7$i = $a$3$lcssa$i;
        $d$3$i = $576;
        $e$3$i = $e$1$i;
        break;
       }
       $601 = $598 + $i$1$lcssa$i | 0;
       HEAP32[$576 >> 2] = $601;
       if ($601 >>> 0 > 999999999) {
        $a$5109$i = $a$3$lcssa$i;
        $d$2108$i = $576;
        while (1) {
         $603 = $d$2108$i + -4 | 0;
         HEAP32[$d$2108$i >> 2] = 0;
         if ($603 >>> 0 < $a$5109$i >>> 0) {
          $605 = $a$5109$i + -4 | 0;
          HEAP32[$605 >> 2] = 0;
          $a$6$i = $605;
         } else $a$6$i = $a$5109$i;
         $607 = (HEAP32[$603 >> 2] | 0) + 1 | 0;
         HEAP32[$603 >> 2] = $607;
         if ($607 >>> 0 > 999999999) {
          $a$5109$i = $a$6$i;
          $d$2108$i = $603;
         } else {
          $a$5$lcssa$i = $a$6$i;
          $d$2$lcssa$i = $603;
          break;
         }
        }
       } else {
        $a$5$lcssa$i = $a$3$lcssa$i;
        $d$2$lcssa$i = $576;
       }
       $612 = ($482 - $a$5$lcssa$i >> 2) * 9 | 0;
       $613 = HEAP32[$a$5$lcssa$i >> 2] | 0;
       if ($613 >>> 0 < 10) {
        $a$7$i = $a$5$lcssa$i;
        $d$3$i = $d$2$lcssa$i;
        $e$3$i = $612;
        break;
       } else {
        $e$2104$i = $612;
        $i$2103$i = 10;
       }
       while (1) {
        $i$2103$i = $i$2103$i * 10 | 0;
        $616 = $e$2104$i + 1 | 0;
        if ($613 >>> 0 < $i$2103$i >>> 0) {
         $a$7$i = $a$5$lcssa$i;
         $d$3$i = $d$2$lcssa$i;
         $e$3$i = $616;
         break;
        } else $e$2104$i = $616;
       }
      } while (0);
      $618 = $d$3$i + 4 | 0;
      $a$8$ph$i = $a$7$i;
      $e$4$ph$i = $e$3$i;
      $z$6$ph$i = $z$3$lcssa$i >>> 0 > $618 >>> 0 ? $618 : $z$3$lcssa$i;
     } else {
      $a$8$ph$i = $a$3$lcssa$i;
      $e$4$ph$i = $e$1$i;
      $z$6$ph$i = $z$3$lcssa$i;
     }
     $620 = 0 - $e$4$ph$i | 0;
     $z$6$i = $z$6$ph$i;
     while (1) {
      if ($z$6$i >>> 0 <= $a$8$ph$i >>> 0) {
       $$lcssa159$i = 0;
       $z$6$i$lcssa = $z$6$i;
       break;
      }
      $622 = $z$6$i + -4 | 0;
      if (!(HEAP32[$622 >> 2] | 0)) $z$6$i = $622; else {
       $$lcssa159$i = 1;
       $z$6$i$lcssa = $z$6$i;
       break;
      }
     }
     do if ($564) {
      $$p$$i = ($565 & 1 ^ 1) + $$p$i | 0;
      if (($$p$$i | 0) > ($e$4$ph$i | 0) & ($e$4$ph$i | 0) > -5) {
       $$013$i = $t$0 + -1 | 0;
       $$210$i = $$p$$i + -1 - $e$4$ph$i | 0;
      } else {
       $$013$i = $t$0 + -2 | 0;
       $$210$i = $$p$$i + -1 | 0;
      }
      $633 = $fl$1$ & 8;
      if ($633) {
       $$114$i = $$013$i;
       $$311$i = $$210$i;
       $$pre$phi184$iZ2D = $633;
       break;
      }
      do if ($$lcssa159$i) {
       $636 = HEAP32[$z$6$i$lcssa + -4 >> 2] | 0;
       if (!$636) {
        $j$2$i = 9;
        break;
       }
       if (!(($636 >>> 0) % 10 | 0)) {
        $i$399$i = 10;
        $j$1100$i = 0;
       } else {
        $j$2$i = 0;
        break;
       }
       while (1) {
        $i$399$i = $i$399$i * 10 | 0;
        $641 = $j$1100$i + 1 | 0;
        if (($636 >>> 0) % ($i$399$i >>> 0) | 0) {
         $j$2$i = $641;
         break;
        } else $j$1100$i = $641;
       }
      } else $j$2$i = 9; while (0);
      $650 = (($z$6$i$lcssa - $482 >> 2) * 9 | 0) + -9 | 0;
      if (($$013$i | 32 | 0) == 102) {
       $651 = $650 - $j$2$i | 0;
       $$21$i = ($651 | 0) < 0 ? 0 : $651;
       $$114$i = $$013$i;
       $$311$i = ($$210$i | 0) < ($$21$i | 0) ? $$210$i : $$21$i;
       $$pre$phi184$iZ2D = 0;
       break;
      } else {
       $655 = $650 + $e$4$ph$i - $j$2$i | 0;
       $$23$i = ($655 | 0) < 0 ? 0 : $655;
       $$114$i = $$013$i;
       $$311$i = ($$210$i | 0) < ($$23$i | 0) ? $$210$i : $$23$i;
       $$pre$phi184$iZ2D = 0;
       break;
      }
     } else {
      $$114$i = $t$0;
      $$311$i = $$p$i;
      $$pre$phi184$iZ2D = $fl$1$ & 8;
     } while (0);
     $658 = $$311$i | $$pre$phi184$iZ2D;
     $660 = ($658 | 0) != 0 & 1;
     $662 = ($$114$i | 32 | 0) == 102;
     if ($662) {
      $$pn$i = ($e$4$ph$i | 0) > 0 ? $e$4$ph$i : 0;
      $estr$2$i = 0;
     } else {
      $666 = ($e$4$ph$i | 0) < 0 ? $620 : $e$4$ph$i;
      $669 = _fmt_u($666, (($666 | 0) < 0) << 31 >> 31, $5) | 0;
      if (($8 - $669 | 0) < 2) {
       $estr$193$i = $669;
       while (1) {
        $673 = $estr$193$i + -1 | 0;
        HEAP8[$673 >> 0] = 48;
        if (($8 - $673 | 0) < 2) $estr$193$i = $673; else {
         $estr$1$lcssa$i = $673;
         break;
        }
       }
      } else $estr$1$lcssa$i = $669;
      HEAP8[$estr$1$lcssa$i + -1 >> 0] = ($e$4$ph$i >> 31 & 2) + 43;
      $683 = $estr$1$lcssa$i + -2 | 0;
      HEAP8[$683 >> 0] = $$114$i;
      $$pn$i = $8 - $683 | 0;
      $estr$2$i = $683;
     }
     $688 = $pl$0$i + 1 + $$311$i + $660 + $$pn$i | 0;
     _pad($f, 32, $w$1, $688, $fl$1$);
     if (!(HEAP32[$f >> 2] & 32)) ___fwritex($prefix$0$i, $pl$0$i, $f) | 0;
     _pad($f, 48, $w$1, $688, $fl$1$ ^ 65536);
     do if ($662) {
      $r$0$a$8$i = $a$8$ph$i >>> 0 > $$31$i >>> 0 ? $$31$i : $a$8$ph$i;
      $d$482$i = $r$0$a$8$i;
      while (1) {
       $695 = _fmt_u(HEAP32[$d$482$i >> 2] | 0, 0, $13) | 0;
       do if (($d$482$i | 0) == ($r$0$a$8$i | 0)) {
        if (($695 | 0) != ($13 | 0)) {
         $s7$1$i = $695;
         break;
        }
        HEAP8[$15 >> 0] = 48;
        $s7$1$i = $15;
       } else {
        if ($695 >>> 0 > $buf$i >>> 0) $s7$079$i = $695; else {
         $s7$1$i = $695;
         break;
        }
        while (1) {
         $698 = $s7$079$i + -1 | 0;
         HEAP8[$698 >> 0] = 48;
         if ($698 >>> 0 > $buf$i >>> 0) $s7$079$i = $698; else {
          $s7$1$i = $698;
          break;
         }
        }
       } while (0);
       if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s7$1$i, $14 - $s7$1$i | 0, $f) | 0;
       $706 = $d$482$i + 4 | 0;
       if ($706 >>> 0 > $$31$i >>> 0) {
        $$lcssa339 = $706;
        break;
       } else $d$482$i = $706;
      }
      do if ($658) {
       if (HEAP32[$f >> 2] & 32) break;
       ___fwritex(60756, 1, $f) | 0;
      } while (0);
      if (($$311$i | 0) > 0 & $$lcssa339 >>> 0 < $z$6$i$lcssa >>> 0) {
       $$41276$i = $$311$i;
       $d$575$i = $$lcssa339;
       while (1) {
        $716 = _fmt_u(HEAP32[$d$575$i >> 2] | 0, 0, $13) | 0;
        if ($716 >>> 0 > $buf$i >>> 0) {
         $s8$070$i = $716;
         while (1) {
          $718 = $s8$070$i + -1 | 0;
          HEAP8[$718 >> 0] = 48;
          if ($718 >>> 0 > $buf$i >>> 0) $s8$070$i = $718; else {
           $s8$0$lcssa$i = $718;
           break;
          }
         }
        } else $s8$0$lcssa$i = $716;
        if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s8$0$lcssa$i, ($$41276$i | 0) > 9 ? 9 : $$41276$i, $f) | 0;
        $d$575$i = $d$575$i + 4 | 0;
        $726 = $$41276$i + -9 | 0;
        if (!(($$41276$i | 0) > 9 & $d$575$i >>> 0 < $z$6$i$lcssa >>> 0)) {
         $$412$lcssa$i = $726;
         break;
        } else $$41276$i = $726;
       }
      } else $$412$lcssa$i = $$311$i;
      _pad($f, 48, $$412$lcssa$i + 9 | 0, 9, 0);
     } else {
      $z$6$$i = $$lcssa159$i ? $z$6$i$lcssa : $a$8$ph$i + 4 | 0;
      if (($$311$i | 0) > -1) {
       $733 = ($$pre$phi184$iZ2D | 0) == 0;
       $$587$i = $$311$i;
       $d$686$i = $a$8$ph$i;
       while (1) {
        $735 = _fmt_u(HEAP32[$d$686$i >> 2] | 0, 0, $13) | 0;
        if (($735 | 0) == ($13 | 0)) {
         HEAP8[$15 >> 0] = 48;
         $s9$0$i = $15;
        } else $s9$0$i = $735;
        do if (($d$686$i | 0) == ($a$8$ph$i | 0)) {
         $741 = $s9$0$i + 1 | 0;
         if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s9$0$i, 1, $f) | 0;
         if ($733 & ($$587$i | 0) < 1) {
          $s9$2$i = $741;
          break;
         }
         if (HEAP32[$f >> 2] & 32) {
          $s9$2$i = $741;
          break;
         }
         ___fwritex(60756, 1, $f) | 0;
         $s9$2$i = $741;
        } else {
         if ($s9$0$i >>> 0 > $buf$i >>> 0) $s9$183$i = $s9$0$i; else {
          $s9$2$i = $s9$0$i;
          break;
         }
         while (1) {
          $739 = $s9$183$i + -1 | 0;
          HEAP8[$739 >> 0] = 48;
          if ($739 >>> 0 > $buf$i >>> 0) $s9$183$i = $739; else {
           $s9$2$i = $739;
           break;
          }
         }
        } while (0);
        $750 = $14 - $s9$2$i | 0;
        if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s9$2$i, ($$587$i | 0) > ($750 | 0) ? $750 : $$587$i, $f) | 0;
        $756 = $$587$i - $750 | 0;
        $d$686$i = $d$686$i + 4 | 0;
        if (!($d$686$i >>> 0 < $z$6$$i >>> 0 & ($756 | 0) > -1)) {
         $$5$lcssa$i = $756;
         break;
        } else $$587$i = $756;
       }
      } else $$5$lcssa$i = $$311$i;
      _pad($f, 48, $$5$lcssa$i + 18 | 0, 18, 0);
      if (HEAP32[$f >> 2] & 32) break;
      ___fwritex($estr$2$i, $8 - $estr$2$i | 0, $f) | 0;
     } while (0);
     _pad($f, 32, $w$1, $688, $fl$1$ ^ 8192);
     $$0$i = ($688 | 0) < ($w$1 | 0) ? $w$1 : $688;
    } else {
     $377 = ($t$0 & 32 | 0) != 0;
     $379 = $$07$i != $$07$i | 0.0 != 0.0;
     $pl$1$i = $379 ? 0 : $pl$0$i;
     $381 = $pl$1$i + 3 | 0;
     _pad($f, 32, $w$1, $381, $175);
     $382 = HEAP32[$f >> 2] | 0;
     if (!($382 & 32)) {
      ___fwritex($prefix$0$i, $pl$1$i, $f) | 0;
      $386 = HEAP32[$f >> 2] | 0;
     } else $386 = $382;
     if (!($386 & 32)) ___fwritex($379 ? ($377 ? 60748 : 60752) : $377 ? 60740 : 60744, 3, $f) | 0;
     _pad($f, 32, $w$1, $381, $fl$1$ ^ 8192);
     $$0$i = ($381 | 0) < ($w$1 | 0) ? $w$1 : $381;
    } while (0);
    $cnt$0 = $cnt$1;
    $fmt41 = $$lcssa323;
    $l$0 = $$0$i;
    $l10n$0 = $l10n$3;
    continue L1;
    break;
   }
  default:
   {
    $a$2 = $fmt41;
    $fl$6 = $fl$1$;
    $p$5 = $p$0;
    $pl$2 = 0;
    $prefix$2 = 60704;
    $z$2 = $1;
   }
  } while (0);
  L313 : do if ((label | 0) == 64) {
   label = 0;
   $206 = $arg;
   $208 = HEAP32[$206 >> 2] | 0;
   $211 = HEAP32[$206 + 4 >> 2] | 0;
   $212 = $t$1 & 32;
   if (($208 | 0) == 0 & ($211 | 0) == 0) {
    $a$0 = $1;
    $fl$4 = $fl$3;
    $p$2 = $p$1;
    $pl$1 = 0;
    $prefix$1 = 60704;
    label = 77;
   } else {
    $$012$i = $1;
    $217 = $208;
    $224 = $211;
    while (1) {
     $223 = $$012$i + -1 | 0;
     HEAP8[$223 >> 0] = HEAPU8[60688 + ($217 & 15) >> 0] | $212;
     $217 = _bitshift64Lshr($217 | 0, $224 | 0, 4) | 0;
     $224 = tempRet0;
     if (($217 | 0) == 0 & ($224 | 0) == 0) {
      $$lcssa344 = $223;
      break;
     } else $$012$i = $223;
    }
    $230 = $arg;
    if (($fl$3 & 8 | 0) == 0 | (HEAP32[$230 >> 2] | 0) == 0 & (HEAP32[$230 + 4 >> 2] | 0) == 0) {
     $a$0 = $$lcssa344;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 0;
     $prefix$1 = 60704;
     label = 77;
    } else {
     $a$0 = $$lcssa344;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 2;
     $prefix$1 = 60704 + ($t$1 >> 4) | 0;
     label = 77;
    }
   }
  } else if ((label | 0) == 76) {
   label = 0;
   $a$0 = _fmt_u($286, $287, $1) | 0;
   $fl$4 = $fl$1$;
   $p$2 = $p$0;
   $pl$1 = $pl$0;
   $prefix$1 = $prefix$0;
   label = 77;
  } else if ((label | 0) == 82) {
   label = 0;
   $320 = _memchr($a$1, 0, $p$0) | 0;
   $321 = ($320 | 0) == 0;
   $a$2 = $a$1;
   $fl$6 = $175;
   $p$5 = $321 ? $p$0 : $320 - $a$1 | 0;
   $pl$2 = 0;
   $prefix$2 = 60704;
   $z$2 = $321 ? $a$1 + $p$0 | 0 : $320;
  } else if ((label | 0) == 86) {
   label = 0;
   $i$0114 = 0;
   $l$1113 = 0;
   $ws$0115 = HEAP32[$arg >> 2] | 0;
   while (1) {
    $334 = HEAP32[$ws$0115 >> 2] | 0;
    if (!$334) {
     $i$0$lcssa = $i$0114;
     $l$2 = $l$1113;
     break;
    }
    $336 = _wctomb($mb, $334) | 0;
    if (($336 | 0) < 0 | $336 >>> 0 > ($p$4198 - $i$0114 | 0) >>> 0) {
     $i$0$lcssa = $i$0114;
     $l$2 = $336;
     break;
    }
    $341 = $336 + $i$0114 | 0;
    if ($p$4198 >>> 0 > $341 >>> 0) {
     $i$0114 = $341;
     $l$1113 = $336;
     $ws$0115 = $ws$0115 + 4 | 0;
    } else {
     $i$0$lcssa = $341;
     $l$2 = $336;
     break;
    }
   }
   if (($l$2 | 0) < 0) {
    $$0 = -1;
    break L1;
   }
   _pad($f, 32, $w$1, $i$0$lcssa, $fl$1$);
   if (!$i$0$lcssa) {
    $i$0$lcssa200 = 0;
    label = 98;
   } else {
    $i$1125 = 0;
    $ws$1126 = HEAP32[$arg >> 2] | 0;
    while (1) {
     $346 = HEAP32[$ws$1126 >> 2] | 0;
     if (!$346) {
      $i$0$lcssa200 = $i$0$lcssa;
      label = 98;
      break L313;
     }
     $349 = _wctomb($mb, $346) | 0;
     $i$1125 = $349 + $i$1125 | 0;
     if (($i$1125 | 0) > ($i$0$lcssa | 0)) {
      $i$0$lcssa200 = $i$0$lcssa;
      label = 98;
      break L313;
     }
     if (!(HEAP32[$f >> 2] & 32)) ___fwritex($mb, $349, $f) | 0;
     if ($i$1125 >>> 0 >= $i$0$lcssa >>> 0) {
      $i$0$lcssa200 = $i$0$lcssa;
      label = 98;
      break;
     } else $ws$1126 = $ws$1126 + 4 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 98) {
   label = 0;
   _pad($f, 32, $w$1, $i$0$lcssa200, $fl$1$ ^ 8192);
   $cnt$0 = $cnt$1;
   $fmt41 = $$lcssa323;
   $l$0 = ($w$1 | 0) > ($i$0$lcssa200 | 0) ? $w$1 : $i$0$lcssa200;
   $l10n$0 = $l10n$3;
   continue;
  }
  if ((label | 0) == 77) {
   label = 0;
   $$fl$4 = ($p$2 | 0) > -1 ? $fl$4 & -65537 : $fl$4;
   $291 = $arg;
   $299 = (HEAP32[$291 >> 2] | 0) != 0 | (HEAP32[$291 + 4 >> 2] | 0) != 0;
   if (($p$2 | 0) != 0 | $299) {
    $305 = ($299 & 1 ^ 1) + ($2 - $a$0) | 0;
    $a$2 = $a$0;
    $fl$6 = $$fl$4;
    $p$5 = ($p$2 | 0) > ($305 | 0) ? $p$2 : $305;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $1;
   } else {
    $a$2 = $1;
    $fl$6 = $$fl$4;
    $p$5 = 0;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $1;
   }
  }
  $771 = $z$2 - $a$2 | 0;
  $$p$5 = ($p$5 | 0) < ($771 | 0) ? $771 : $p$5;
  $773 = $pl$2 + $$p$5 | 0;
  $w$2 = ($w$1 | 0) < ($773 | 0) ? $773 : $w$1;
  _pad($f, 32, $w$2, $773, $fl$6);
  if (!(HEAP32[$f >> 2] & 32)) ___fwritex($prefix$2, $pl$2, $f) | 0;
  _pad($f, 48, $w$2, $773, $fl$6 ^ 65536);
  _pad($f, 48, $$p$5, $771, 0);
  if (!(HEAP32[$f >> 2] & 32)) ___fwritex($a$2, $771, $f) | 0;
  _pad($f, 32, $w$2, $773, $fl$6 ^ 8192);
  $cnt$0 = $cnt$1;
  $fmt41 = $$lcssa323;
  $l$0 = $w$2;
  $l10n$0 = $l10n$3;
 }
 L348 : do if ((label | 0) == 245) if (!$f) if (!$l10n$0$lcssa) $$0 = 0; else {
  $i$2100 = 1;
  while (1) {
   $786 = HEAP32[$nl_type + ($i$2100 << 2) >> 2] | 0;
   if (!$786) {
    $i$2100$lcssa = $i$2100;
    break;
   }
   _pop_arg($nl_arg + ($i$2100 << 3) | 0, $786, $ap);
   $i$2100 = $i$2100 + 1 | 0;
   if (($i$2100 | 0) >= 10) {
    $$0 = 1;
    break L348;
   }
  }
  if (($i$2100$lcssa | 0) < 10) {
   $i$398 = $i$2100$lcssa;
   while (1) {
    if (HEAP32[$nl_type + ($i$398 << 2) >> 2] | 0) {
     $$0 = -1;
     break L348;
    }
    $i$398 = $i$398 + 1 | 0;
    if (($i$398 | 0) >= 10) {
     $$0 = 1;
     break;
    }
   }
  } else $$0 = 1;
 } else $$0 = $cnt$1$lcssa; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL29jsonlang_evaluate_snippet_auxP10JsonlangVmPKcS2_Pib($vm, $filename, $snippet, $error, $multi) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 $multi = $multi | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i18 = 0, $$0$i$i$i20 = 0, $$0$i$i27 = 0, $$0$i$i43 = 0, $$0$i50 = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i = 0, $$01$i$i$i23 = 0, $$01$i49 = 0, $$03 = 0, $$1 = 0, $$12 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$47 = 0, $$5 = 0, $$58 = 0, $0 = 0, $1 = 0, $10 = 0, $104 = 0, $11 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $122 = 0, $126 = 0, $130 = 0, $131 = 0, $133 = 0, $144 = 0, $145 = 0, $146 = 0, $154 = 0, $155 = 0, $157 = 0, $158 = 0, $168 = 0, $169 = 0, $170 = 0, $177 = 0, $178 = 0, $18 = 0, $182 = 0, $184 = 0, $186 = 0, $189 = 0, $19 = 0, $194 = 0, $196 = 0, $198 = 0, $2 = 0, $204 = 0, $206 = 0, $21 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $222 = 0, $227 = 0, $229 = 0, $231 = 0, $233 = 0, $234 = 0, $235 = 0, $237 = 0, $239 = 0, $240 = 0, $241 = 0, $246 = 0, $247 = 0, $249 = 0, $25 = 0, $251 = 0, $252 = 0, $255 = 0, $257 = 0, $26 = 0, $267 = 0, $273 = 0, $274 = 0, $276 = 0, $277 = 0, $282 = 0, $283 = 0, $285 = 0, $286 = 0, $287 = 0, $289 = 0, $291 = 0, $293 = 0, $295 = 0, $3 = 0, $30 = 0, $301 = 0, $303 = 0, $306 = 0, $307 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $320 = 0, $325 = 0, $327 = 0, $329 = 0, $331 = 0, $332 = 0, $333 = 0, $335 = 0, $337 = 0, $338 = 0, $339 = 0, $342 = 0, $344 = 0, $354 = 0, $355 = 0, $361 = 0, $362 = 0, $364 = 0, $365 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $375 = 0, $377 = 0, $379 = 0, $380 = 0, $381 = 0, $384 = 0, $387 = 0, $388 = 0, $39 = 0, $391 = 0, $392 = 0, $395 = 0, $396 = 0, $4 = 0, $402 = 0, $403 = 0, $405 = 0, $406 = 0, $41 = 0, $411 = 0, $412 = 0, $414 = 0, $415 = 0, $416 = 0, $418 = 0, $420 = 0, $422 = 0, $424 = 0, $425 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $432 = 0, $433 = 0, $435 = 0, $436 = 0, $438 = 0, $448 = 0, $449 = 0, $45 = 0, $455 = 0, $456 = 0, $458 = 0, $459 = 0, $46 = 0, $464 = 0, $465 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $471 = 0, $473 = 0, $475 = 0, $477 = 0, $479 = 0, $48 = 0, $485 = 0, $487 = 0, $490 = 0, $491 = 0, $496 = 0, $498 = 0, $5 = 0, $50 = 0, $500 = 0, $502 = 0, $503 = 0, $52 = 0, $54 = 0, $57 = 0.0, $58 = 0.0, $6 = 0, $60 = 0, $62 = 0, $65 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $78 = 0, $79 = 0, $8 = 0, $88 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $alloc = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i47$index7Z2D = 0, $eh$lpad$body$i47$indexZ2D = 0, $eh$lpad$body38$index23Z2D = 0, $eh$lpad$body38$indexZ2D = 0, $eh$lpad$body62$index15Z2D = 0, $eh$lpad$body62$indexZ2D = 0, $files = 0, $i$0$lcssa = 0, $i$097 = 0, $i6$095 = 0, $json_str = 0, $ss = 0, $ss8 = 0, $sz$0$lcssa = 0, $sz$0101 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 $0 = sp + 432 | 0;
 $1 = sp + 380 | 0;
 $2 = sp + 316 | 0;
 $3 = sp + 304 | 0;
 $4 = sp + 12 | 0;
 $5 = sp + 368 | 0;
 $alloc = sp + 384 | 0;
 $6 = sp + 420 | 0;
 $json_str = sp + 436 | 0;
 $files = sp + 320 | 0;
 $7 = sp;
 $8 = sp + 344 | 0;
 $9 = sp + 332 | 0;
 $ss = sp + 16 | 0;
 $10 = sp + 356 | 0;
 $ss8 = sp + 160 | 0;
 $11 = sp + 408 | 0;
 HEAP32[$alloc + 4 >> 2] = 0;
 HEAP32[$alloc + 8 >> 2] = 0;
 HEAP32[$alloc >> 2] = $alloc + 4;
 HEAP32[$alloc + 12 >> 2] = 0;
 HEAP32[$alloc + 16 >> 2] = 0;
 HEAP32[$alloc + 20 >> 2] = 0;
 $18 = _strlen($filename) | 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, $filename | 0, $18 | 0);
 $19 = __THREW__;
 __THREW__ = 0;
 do if ($19 & 1) {
  $43 = ___cxa_find_matching_catch(8, 392) | 0;
  $$01 = $43;
  $$03 = tempRet0;
 } else {
  __THREW__ = 0;
  $21 = invoke_iiii(39, $alloc | 0, $6 | 0, $snippet | 0) | 0;
  $22 = __THREW__;
  __THREW__ = 0;
  if ($22 & 1) {
   $45 = ___cxa_find_matching_catch(8, 392) | 0;
   $46 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $$01 = $45;
   $$03 = $46;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  HEAP32[$json_str >> 2] = 0;
  HEAP32[$json_str + 4 >> 2] = 0;
  HEAP32[$json_str + 8 >> 2] = 0;
  HEAP32[$files + 4 >> 2] = 0;
  $25 = $files + 8 | 0;
  HEAP32[$25 >> 2] = 0;
  $26 = $files + 4 | 0;
  HEAP32[$files >> 2] = $26;
  __THREW__ = 0;
  do if (!(HEAP8[$vm + 16 >> 0] | 0)) {
   __Z24jsonlang_static_analysisP3AST($21);
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) label = 12; else {
    $52 = $vm + 24 | 0;
    $54 = HEAP32[$vm + 8 >> 2] | 0;
    $57 = +((HEAP32[$vm + 12 >> 2] | 0) >>> 0);
    $58 = +HEAPF64[$vm >> 3];
    $60 = HEAP32[$vm + 36 >> 2] | 0;
    $62 = HEAP32[$vm + 40 >> 2] | 0;
    $65 = (HEAP8[$vm + 44 >> 0] | 0) != 0;
    __THREW__ = 0;
    if ($multi) {
     __Z25jsonlang_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($8, $alloc, $21, $52, $54, $57, $58, $60, $62, $65);
     $66 = __THREW__;
     __THREW__ = 0;
     if ($66 & 1) {
      label = 12;
      break;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
     HEAP32[$files >> 2] = HEAP32[$8 >> 2];
     $70 = $8 + 4 | 0;
     $71 = HEAP32[$70 >> 2] | 0;
     HEAP32[$26 >> 2] = $71;
     $72 = $8 + 8 | 0;
     $73 = HEAP32[$72 >> 2] | 0;
     HEAP32[$25 >> 2] = $73;
     if (!$73) {
      HEAP32[$files >> 2] = $26;
      $78 = $71;
     } else {
      HEAP32[$71 + 8 >> 2] = $26;
      HEAP32[$8 >> 2] = $70;
      HEAP32[$70 >> 2] = 0;
      HEAP32[$72 >> 2] = 0;
      $78 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($8, $78);
     label = 28;
     break;
    }
    __Z19jsonlang_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($9, $alloc, $21, $52, $54, $57, $58, $60, $62, $65);
    $79 = __THREW__;
    __THREW__ = 0;
    if ($79 & 1) label = 12; else {
     if (!(HEAP8[$json_str >> 0] & 1)) {
      HEAP8[$json_str + 1 >> 0] = 0;
      HEAP8[$json_str >> 0] = 0;
     } else {
      HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
      HEAP32[$json_str + 4 >> 2] = 0;
     }
     __THREW__ = 0;
     invoke_vii(45, $json_str | 0, 0);
     $88 = __THREW__;
     __THREW__ = 0;
     if ($88 & 1) {
      $90 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($90);
     } else {
      HEAP32[$json_str >> 2] = HEAP32[$9 >> 2];
      HEAP32[$json_str + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      HEAP32[$json_str + 8 >> 2] = HEAP32[$9 + 8 >> 2];
      HEAP32[$9 >> 2] = 0;
      HEAP32[$9 + 4 >> 2] = 0;
      HEAP32[$9 + 8 >> 2] = 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
      label = 63;
      break;
     }
    }
   }
  } else {
   __Z25jsonlang_unparse_jsonlangPK3AST($7, $21);
   $30 = __THREW__;
   __THREW__ = 0;
   if ($30 & 1) label = 12; else {
    if (!(HEAP8[$json_str >> 0] & 1)) {
     HEAP8[$json_str + 1 >> 0] = 0;
     HEAP8[$json_str >> 0] = 0;
    } else {
     HEAP8[HEAP32[$json_str + 8 >> 2] >> 0] = 0;
     HEAP32[$json_str + 4 >> 2] = 0;
    }
    __THREW__ = 0;
    invoke_vii(45, $json_str | 0, 0);
    $39 = __THREW__;
    __THREW__ = 0;
    if ($39 & 1) {
     $41 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($41);
    } else {
     HEAP32[$json_str >> 2] = HEAP32[$7 >> 2];
     HEAP32[$json_str + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$json_str + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     HEAP32[$7 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
     if ($multi) {
      label = 28;
      break;
     } else {
      label = 63;
      break;
     }
    }
   }
  } while (0);
  do if ((label | 0) == 28) {
   $92 = HEAP32[$files >> 2] | 0;
   $93 = ($92 | 0) == ($26 | 0);
   if ($93) $sz$0$lcssa = 1; else {
    $95 = $92;
    $sz$0101 = 1;
    while (1) {
     $96 = HEAP8[$95 + 16 >> 0] | 0;
     if (!($96 & 1)) $113 = ($96 & 255) >>> 1; else $113 = HEAP32[$95 + 20 >> 2] | 0;
     $104 = HEAP8[$95 + 28 >> 0] | 0;
     if (!($104 & 1)) $115 = ($104 & 255) >>> 1; else $115 = HEAP32[$95 + 32 >> 2] | 0;
     $114 = $sz$0101 + 3 + $113 + $115 | 0;
     $117 = HEAP32[$95 + 4 >> 2] | 0;
     if (!$117) {
      $$0$i$i$i = $95;
      while (1) {
       $122 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$122 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$01$i$i$i = $122;
        break;
       } else $$0$i$i$i = $122;
      }
     } else {
      $$0$i$i$i$i = $117;
      while (1) {
       $119 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$119) {
        $$01$i$i$i = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $119;
      }
     }
     if (($$01$i$i$i | 0) == ($26 | 0)) {
      $sz$0$lcssa = $114;
      break;
     } else {
      $95 = $$01$i$i$i;
      $sz$0101 = $114;
     }
    }
   }
   $126 = _malloc($sz$0$lcssa) | 0;
   if (!$126) {
    _fwrite(54553, 49, 1, HEAP32[1080] | 0) | 0;
    __THREW__ = 0;
    invoke_v(3);
    __THREW__ = 0;
    label = 12;
    break;
   }
   if ($93) $i$0$lcssa = 0; else {
    $131 = $92;
    $i$097 = 0;
    while (1) {
     $130 = $131 + 16 | 0;
     $133 = HEAP8[$130 >> 0] | 0;
     if (!($133 & 1)) {
      $144 = ($133 & 255) >>> 1;
      $145 = $130 + 1 | 0;
     } else {
      $144 = HEAP32[$131 + 20 >> 2] | 0;
      $145 = HEAP32[$131 + 24 >> 2] | 0;
     }
     _memcpy($126 + $i$097 | 0, $145 | 0, $144 + 1 | 0) | 0;
     $146 = HEAP8[$130 >> 0] | 0;
     if (!($146 & 1)) $155 = ($146 & 255) >>> 1; else $155 = HEAP32[$131 + 20 >> 2] | 0;
     $154 = $i$097 + 1 + $155 | 0;
     $157 = $131 + 28 | 0;
     $158 = HEAP8[$157 >> 0] | 0;
     if (!($158 & 1)) {
      $168 = $157 + 1 | 0;
      $169 = ($158 & 255) >>> 1;
     } else {
      $168 = HEAP32[$131 + 36 >> 2] | 0;
      $169 = HEAP32[$131 + 32 >> 2] | 0;
     }
     _memcpy($126 + $154 | 0, $168 | 0, $169 | 0) | 0;
     $170 = HEAP8[$157 >> 0] | 0;
     if (!($170 & 1)) $178 = ($170 & 255) >>> 1; else $178 = HEAP32[$131 + 32 >> 2] | 0;
     $177 = $178 + $154 | 0;
     HEAP8[$126 + $177 >> 0] = 10;
     HEAP8[$126 + ($177 + 1) >> 0] = 0;
     $182 = $177 + 2 | 0;
     $184 = HEAP32[$131 + 4 >> 2] | 0;
     if (!$184) {
      $$0$i$i$i20 = $131;
      while (1) {
       $189 = HEAP32[$$0$i$i$i20 + 8 >> 2] | 0;
       if ((HEAP32[$189 >> 2] | 0) == ($$0$i$i$i20 | 0)) {
        $$01$i$i$i23 = $189;
        break;
       } else $$0$i$i$i20 = $189;
      }
     } else {
      $$0$i$i$i$i18 = $184;
      while (1) {
       $186 = HEAP32[$$0$i$i$i$i18 >> 2] | 0;
       if (!$186) {
        $$01$i$i$i23 = $$0$i$i$i$i18;
        break;
       } else $$0$i$i$i$i18 = $186;
      }
     }
     if (($$01$i$i$i23 | 0) == ($26 | 0)) {
      $i$0$lcssa = $182;
      break;
     } else {
      $131 = $$01$i$i$i23;
      $i$097 = $182;
     }
    }
   }
   HEAP8[$126 + $i$0$lcssa >> 0] = 0;
   HEAP32[$error >> 2] = 0;
   $$0 = $126;
  } else if ((label | 0) == 63) {
   __THREW__ = 0;
   invoke_iii(27, $json_str | 0, 54743) | 0;
   $194 = __THREW__;
   __THREW__ = 0;
   if ($194 & 1) label = 12; else {
    HEAP32[$error >> 2] = 0;
    $196 = HEAP8[$json_str >> 0] | 0;
    $198 = ($196 & 1) == 0;
    $204 = ($198 ? ($196 & 255) >>> 1 : HEAP32[$json_str + 4 >> 2] | 0) + 1 | 0;
    if (!$204) $$0$i$i27 = 0; else {
     $206 = _malloc($204) | 0;
     if (!$206) {
      __THREW__ = 0;
      invoke_v(5);
      __THREW__ = 0;
      label = 12;
      break;
     } else $$0$i$i27 = $206;
    }
    _strcpy($$0$i$i27, $198 ? $json_str + 1 | 0 : HEAP32[$json_str + 8 >> 2] | 0) | 0;
    $$0 = $$0$i$i27;
   }
  } while (0);
  if ((label | 0) == 12) {
   $47 = ___cxa_find_matching_catch(8, 392) | 0;
   $48 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($json_str);
   $$01 = $47;
   $$03 = $48;
   break;
  }
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($files, HEAP32[$26 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($json_str);
  __ZN9AllocatorD2Ev($alloc);
  $$1 = $$0;
  STACKTOP = sp;
  return $$1 | 0;
 } while (0);
 __ZN9AllocatorD2Ev($alloc);
 if (($$03 | 0) == (_llvm_eh_typeid_for(8) | 0)) {
  $216 = ___cxa_begin_catch($$01 | 0) | 0;
  $217 = $ss8 + 64 | 0;
  $218 = $ss8 + 8 | 0;
  HEAP32[$218 >> 2] = 2912;
  $219 = $ss8 + 12 | 0;
  HEAP32[$ss8 >> 2] = 2952;
  HEAP32[$217 >> 2] = 2972;
  HEAP32[$ss8 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss8 + 64 | 0, $219 | 0);
  $222 = __THREW__;
  __THREW__ = 0;
  L101 : do if ($222 & 1) {
   $235 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $235;
   label = 144;
  } else {
   HEAP32[$ss8 + 136 >> 2] = 0;
   HEAP32[$ss8 + 140 >> 2] = -1;
   HEAP32[$ss8 >> 2] = 2892;
   HEAP32[$ss8 + 64 >> 2] = 2932;
   HEAP32[$218 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $219 | 0);
   $227 = __THREW__;
   __THREW__ = 0;
   do if ($227 & 1) {
    $237 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $237;
   } else {
    HEAP32[$219 >> 2] = 2988;
    $229 = $ss8 + 44 | 0;
    HEAP32[$229 >> 2] = 0;
    HEAP32[$229 + 4 >> 2] = 0;
    HEAP32[$229 + 8 >> 2] = 0;
    HEAP32[$229 + 12 >> 2] = 0;
    HEAP32[$ss8 + 60 >> 2] = 24;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $219 | 0, $5 | 0);
    $231 = __THREW__;
    __THREW__ = 0;
    if ($231 & 1) {
     $233 = ___cxa_find_matching_catch() | 0;
     $234 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($219);
     $eh$lpad$body$i$index2Z2D = $234;
     $eh$lpad$body$i$indexZ2D = $233;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $239 = $ss8 + 8 | 0;
    __THREW__ = 0;
    $240 = invoke_iiii(29, $239 | 0, 54745, 14) | 0;
    $241 = __THREW__;
    __THREW__ = 0;
    L110 : do if ($241 & 1) label = 145; else {
     if (HEAP32[$216 + 12 >> 2] | 0) {
      __THREW__ = 0;
      $246 = invoke_iii(33, $240 | 0, $216 | 0) | 0;
      $247 = __THREW__;
      __THREW__ = 0;
      if ($247 & 1) {
       label = 145;
       break;
      }
      __THREW__ = 0;
      invoke_iiii(29, $246 | 0, 54760, 1) | 0;
      $249 = __THREW__;
      __THREW__ = 0;
      if ($249 & 1) {
       label = 145;
       break;
      }
     }
     __THREW__ = 0;
     $251 = invoke_iiii(29, $240 | 0, 54762, 1) | 0;
     $252 = __THREW__;
     __THREW__ = 0;
     if ($252 & 1) label = 145; else {
      $255 = HEAP8[$216 + 28 >> 0] | 0;
      $257 = ($255 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $251 | 0, ($257 ? $216 + 29 | 0 : HEAP32[$216 + 36 >> 2] | 0) | 0, ($257 ? ($255 & 255) >>> 1 : HEAP32[$216 + 32 >> 2] | 0) | 0) | 0;
      $267 = __THREW__;
      __THREW__ = 0;
      if ($267 & 1) label = 145; else {
       __THREW__ = 0;
       $273 = invoke_ii(68, $240 + (HEAP32[(HEAP32[$240 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
       $274 = __THREW__;
       __THREW__ = 0;
       if ($274 & 1) label = 145; else {
        HEAP32[$4 >> 2] = $273;
        __THREW__ = 0;
        $276 = invoke_iii(22, $4 | 0, 11164) | 0;
        $277 = __THREW__;
        __THREW__ = 0;
        if (!($277 & 1)) {
         __THREW__ = 0;
         $282 = invoke_iii(HEAP32[(HEAP32[$276 >> 2] | 0) + 28 >> 2] | 0, $276 | 0, 10) | 0;
         $283 = __THREW__;
         __THREW__ = 0;
         if (!($283 & 1)) {
          __ZNSt3__16localeD2Ev($4);
          __THREW__ = 0;
          invoke_iii(25, $240 | 0, $282 | 0) | 0;
          $287 = __THREW__;
          __THREW__ = 0;
          if ($287 & 1) {
           label = 145;
           break;
          }
          __THREW__ = 0;
          invoke_ii(69, $240 | 0) | 0;
          $289 = __THREW__;
          __THREW__ = 0;
          if ($289 & 1) {
           label = 145;
           break;
          }
          HEAP32[$error >> 2] = 1;
          __THREW__ = 0;
          invoke_vii(43, $11 | 0, $219 | 0);
          $291 = __THREW__;
          __THREW__ = 0;
          if ($291 & 1) {
           label = 145;
           break;
          }
          $293 = HEAP8[$11 >> 0] | 0;
          $295 = ($293 & 1) == 0;
          $301 = ($295 ? ($293 & 255) >>> 1 : HEAP32[$11 + 4 >> 2] | 0) + 1 | 0;
          do if (!$301) $$0$i$i43 = 0; else {
           $303 = _malloc($301) | 0;
           if ($303) {
            $$0$i$i43 = $303;
            break;
           }
           __THREW__ = 0;
           invoke_v(5);
           __THREW__ = 0;
           $306 = ___cxa_find_matching_catch() | 0;
           $307 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
           $$3 = $306;
           $$36 = $307;
           break L110;
          } while (0);
          _strcpy($$0$i$i43, $295 ? $11 + 1 | 0 : HEAP32[$11 + 8 >> 2] | 0) | 0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
          HEAP32[$ss8 >> 2] = 2892;
          HEAP32[$217 >> 2] = 2932;
          HEAP32[$239 >> 2] = 2912;
          HEAP32[$219 >> 2] = 2988;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($219);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($217);
          ___cxa_end_catch();
          $$1 = $$0$i$i43;
          STACKTOP = sp;
          return $$1 | 0;
         }
        }
        $285 = ___cxa_find_matching_catch() | 0;
        $286 = tempRet0;
        __ZNSt3__16localeD2Ev($4);
        $eh$lpad$body38$index23Z2D = $286;
        $eh$lpad$body38$indexZ2D = $285;
        label = 146;
       }
      }
     }
    } while (0);
    if ((label | 0) == 145) {
     $498 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body38$index23Z2D = tempRet0;
     $eh$lpad$body38$indexZ2D = $498;
     label = 146;
    }
    if ((label | 0) == 146) {
     $$3 = $eh$lpad$body38$indexZ2D;
     $$36 = $eh$lpad$body38$index23Z2D;
    }
    HEAP32[$ss8 >> 2] = 2892;
    HEAP32[$217 >> 2] = 2932;
    HEAP32[$239 >> 2] = 2912;
    HEAP32[$219 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($229);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($219);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($217);
    $$4 = $$3;
    $$47 = $$36;
    break L101;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
   label = 144;
  } while (0);
  if ((label | 0) == 144) {
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($217);
   $$4 = $$01$i;
   $$47 = $$0$i;
  }
  __THREW__ = 0;
  invoke_v(2);
  $500 = __THREW__;
  __THREW__ = 0;
  if ($500 & 1) {
   $502 = ___cxa_find_matching_catch(0) | 0;
   $503 = tempRet0;
   ___clang_call_terminate($502);
  } else {
   $$5 = $$4;
   $$58 = $$47;
   ___resumeException($$5 | 0);
  }
 }
 if (($$03 | 0) != (_llvm_eh_typeid_for(392) | 0)) {
  $$5 = $$01;
  $$58 = $$03;
  ___resumeException($$5 | 0);
 }
 $314 = ___cxa_begin_catch($$01 | 0) | 0;
 $315 = $ss + 64 | 0;
 $316 = $ss + 8 | 0;
 HEAP32[$316 >> 2] = 2912;
 $317 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$315 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $317 | 0);
 $320 = __THREW__;
 __THREW__ = 0;
 L147 : do if ($320 & 1) {
  $333 = ___cxa_find_matching_catch() | 0;
  $$0$i50 = tempRet0;
  $$01$i49 = $333;
  label = 121;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$ss + 64 >> 2] = 2932;
  HEAP32[$316 >> 2] = 2912;
  __THREW__ = 0;
  invoke_vi(173, $317 | 0);
  $325 = __THREW__;
  __THREW__ = 0;
  do if ($325 & 1) {
   $335 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i47$index7Z2D = tempRet0;
   $eh$lpad$body$i47$indexZ2D = $335;
  } else {
   HEAP32[$317 >> 2] = 2988;
   $327 = $ss + 44 | 0;
   HEAP32[$327 >> 2] = 0;
   HEAP32[$327 + 4 >> 2] = 0;
   HEAP32[$327 + 8 >> 2] = 0;
   HEAP32[$327 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $317 | 0, $3 | 0);
   $329 = __THREW__;
   __THREW__ = 0;
   if ($329 & 1) {
    $331 = ___cxa_find_matching_catch() | 0;
    $332 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($327);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($317);
    $eh$lpad$body$i47$index7Z2D = $332;
    $eh$lpad$body$i47$indexZ2D = $331;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $337 = $ss + 8 | 0;
   __THREW__ = 0;
   $338 = invoke_iiii(29, $337 | 0, 54764, 15) | 0;
   $339 = __THREW__;
   __THREW__ = 0;
   L156 : do if ($339 & 1) label = 123; else {
    $342 = HEAP8[$314 + 12 >> 0] | 0;
    $344 = ($342 & 1) == 0;
    __THREW__ = 0;
    $354 = invoke_iiii(29, $338 | 0, ($344 ? $314 + 13 | 0 : HEAP32[$314 + 20 >> 2] | 0) | 0, ($344 ? ($342 & 255) >>> 1 : HEAP32[$314 + 16 >> 2] | 0) | 0) | 0;
    $355 = __THREW__;
    __THREW__ = 0;
    if ($355 & 1) label = 123; else {
     __THREW__ = 0;
     $361 = invoke_ii(68, $354 + (HEAP32[(HEAP32[$354 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
     $362 = __THREW__;
     __THREW__ = 0;
     if ($362 & 1) label = 123; else {
      HEAP32[$2 >> 2] = $361;
      __THREW__ = 0;
      $364 = invoke_iii(22, $2 | 0, 11164) | 0;
      $365 = __THREW__;
      __THREW__ = 0;
      if (!($365 & 1)) {
       __THREW__ = 0;
       $370 = invoke_iii(HEAP32[(HEAP32[$364 >> 2] | 0) + 28 >> 2] | 0, $364 | 0, 10) | 0;
       $371 = __THREW__;
       __THREW__ = 0;
       if (!($371 & 1)) {
        __ZNSt3__16localeD2Ev($2);
        __THREW__ = 0;
        invoke_iii(25, $354 | 0, $370 | 0) | 0;
        $375 = __THREW__;
        __THREW__ = 0;
        if ($375 & 1) {
         label = 123;
         break;
        }
        __THREW__ = 0;
        invoke_ii(69, $354 | 0) | 0;
        $377 = __THREW__;
        __THREW__ = 0;
        if ($377 & 1) {
         label = 123;
         break;
        }
        $379 = $vm + 20 | 0;
        $380 = HEAP32[$379 >> 2] | 0;
        $381 = $380 >>> 1;
        $384 = HEAP32[$314 >> 2] | 0;
        $387 = (HEAP32[$314 + 4 >> 2] | 0) - $384 | 0;
        $388 = ($387 | 0) / 40 | 0;
        L165 : do if (($387 | 0) > 0) {
         $391 = $381 - $380 + $388 | 0;
         $392 = $380;
         $428 = $384;
         $i6$095 = 0;
         L167 : while (1) {
          do if (($392 | 0) != 0 & ($i6$095 | 0) >= ($381 | 0) & ($i6$095 | 0) < ($391 | 0)) {
           if (($i6$095 | 0) != ($381 | 0)) break;
           __THREW__ = 0;
           $395 = invoke_iiii(29, $337 | 0, 54780, 4) | 0;
           $396 = __THREW__;
           __THREW__ = 0;
           if ($396 & 1) {
            label = 122;
            break L167;
           }
           __THREW__ = 0;
           $402 = invoke_ii(68, $395 + (HEAP32[(HEAP32[$395 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
           $403 = __THREW__;
           __THREW__ = 0;
           if ($403 & 1) {
            label = 122;
            break L167;
           }
           HEAP32[$1 >> 2] = $402;
           __THREW__ = 0;
           $405 = invoke_iii(22, $1 | 0, 11164) | 0;
           $406 = __THREW__;
           __THREW__ = 0;
           if ($406 & 1) {
            label = 118;
            break L167;
           }
           __THREW__ = 0;
           $411 = invoke_iii(HEAP32[(HEAP32[$405 >> 2] | 0) + 28 >> 2] | 0, $405 | 0, 10) | 0;
           $412 = __THREW__;
           __THREW__ = 0;
           if ($412 & 1) {
            label = 118;
            break L167;
           }
           __ZNSt3__16localeD2Ev($1);
           __THREW__ = 0;
           invoke_iii(25, $395 | 0, $411 | 0) | 0;
           $416 = __THREW__;
           __THREW__ = 0;
           if ($416 & 1) {
            label = 122;
            break L167;
           }
           __THREW__ = 0;
           invoke_ii(69, $395 | 0) | 0;
           $418 = __THREW__;
           __THREW__ = 0;
           if ($418 & 1) {
            label = 122;
            break L167;
           }
          } else {
           __THREW__ = 0;
           $424 = invoke_iiii(29, $337 | 0, 54785, 1) | 0;
           $425 = __THREW__;
           __THREW__ = 0;
           if ($425 & 1) {
            label = 122;
            break L167;
           }
           __THREW__ = 0;
           $429 = invoke_iii(33, $424 | 0, $428 + ($i6$095 * 40 | 0) | 0) | 0;
           $430 = __THREW__;
           __THREW__ = 0;
           if ($430 & 1) {
            label = 122;
            break L167;
           }
           __THREW__ = 0;
           $432 = invoke_iiii(29, $429 | 0, 54785, 1) | 0;
           $433 = __THREW__;
           __THREW__ = 0;
           if ($433 & 1) {
            label = 122;
            break L167;
           }
           $435 = $428 + ($i6$095 * 40 | 0) + 28 | 0;
           $436 = HEAP8[$435 >> 0] | 0;
           $438 = ($436 & 1) == 0;
           __THREW__ = 0;
           $448 = invoke_iiii(29, $432 | 0, ($438 ? $435 + 1 | 0 : HEAP32[$428 + ($i6$095 * 40 | 0) + 36 >> 2] | 0) | 0, ($438 ? ($436 & 255) >>> 1 : HEAP32[$428 + ($i6$095 * 40 | 0) + 32 >> 2] | 0) | 0) | 0;
           $449 = __THREW__;
           __THREW__ = 0;
           if ($449 & 1) {
            label = 122;
            break L167;
           }
           __THREW__ = 0;
           $455 = invoke_ii(68, $448 + (HEAP32[(HEAP32[$448 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
           $456 = __THREW__;
           __THREW__ = 0;
           if ($456 & 1) {
            label = 122;
            break L167;
           }
           HEAP32[$0 >> 2] = $455;
           __THREW__ = 0;
           $458 = invoke_iii(22, $0 | 0, 11164) | 0;
           $459 = __THREW__;
           __THREW__ = 0;
           if ($459 & 1) {
            label = 132;
            break L167;
           }
           __THREW__ = 0;
           $464 = invoke_iii(HEAP32[(HEAP32[$458 >> 2] | 0) + 28 >> 2] | 0, $458 | 0, 10) | 0;
           $465 = __THREW__;
           __THREW__ = 0;
           if ($465 & 1) {
            label = 132;
            break L167;
           }
           __ZNSt3__16localeD2Ev($0);
           __THREW__ = 0;
           invoke_iii(25, $448 | 0, $464 | 0) | 0;
           $469 = __THREW__;
           __THREW__ = 0;
           if ($469 & 1) {
            label = 122;
            break L167;
           }
           __THREW__ = 0;
           invoke_ii(69, $448 | 0) | 0;
           $471 = __THREW__;
           __THREW__ = 0;
           if ($471 & 1) {
            label = 122;
            break L167;
           }
          } while (0);
          $473 = $i6$095 + 1 | 0;
          if (($473 | 0) >= ($388 | 0)) break L165;
          $392 = HEAP32[$379 >> 2] | 0;
          $428 = HEAP32[$314 >> 2] | 0;
          $i6$095 = $473;
         }
         if ((label | 0) == 118) {
          $414 = ___cxa_find_matching_catch() | 0;
          $415 = tempRet0;
          __ZNSt3__16localeD2Ev($1);
          $eh$lpad$body62$index15Z2D = $415;
          $eh$lpad$body62$indexZ2D = $414;
          label = 124;
          break L156;
         } else if ((label | 0) == 122) {
          $420 = ___cxa_find_matching_catch() | 0;
          $eh$lpad$body62$index15Z2D = tempRet0;
          $eh$lpad$body62$indexZ2D = $420;
          label = 124;
          break L156;
         } else if ((label | 0) == 132) {
          $467 = ___cxa_find_matching_catch() | 0;
          $468 = tempRet0;
          __ZNSt3__16localeD2Ev($0);
          $eh$lpad$body62$index15Z2D = $468;
          $eh$lpad$body62$indexZ2D = $467;
          label = 124;
          break L156;
         }
        } while (0);
        HEAP32[$error >> 2] = 1;
        __THREW__ = 0;
        invoke_vii(43, $10 | 0, $317 | 0);
        $475 = __THREW__;
        __THREW__ = 0;
        if ($475 & 1) {
         label = 123;
         break;
        }
        $477 = HEAP8[$10 >> 0] | 0;
        $479 = ($477 & 1) == 0;
        $485 = ($479 ? ($477 & 255) >>> 1 : HEAP32[$10 + 4 >> 2] | 0) + 1 | 0;
        do if (!$485) $$0$i$i = 0; else {
         $487 = _malloc($485) | 0;
         if ($487) {
          $$0$i$i = $487;
          break;
         }
         __THREW__ = 0;
         invoke_v(5);
         __THREW__ = 0;
         $490 = ___cxa_find_matching_catch() | 0;
         $491 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
         $$12 = $490;
         $$14 = $491;
         break L156;
        } while (0);
        _strcpy($$0$i$i, $479 ? $10 + 1 | 0 : HEAP32[$10 + 8 >> 2] | 0) | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
        HEAP32[$ss >> 2] = 2892;
        HEAP32[$315 >> 2] = 2932;
        HEAP32[$337 >> 2] = 2912;
        HEAP32[$317 >> 2] = 2988;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($327);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($317);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($315);
        ___cxa_end_catch();
        $$1 = $$0$i$i;
        STACKTOP = sp;
        return $$1 | 0;
       }
      }
      $373 = ___cxa_find_matching_catch() | 0;
      $374 = tempRet0;
      __ZNSt3__16localeD2Ev($2);
      $eh$lpad$body62$index15Z2D = $374;
      $eh$lpad$body62$indexZ2D = $373;
      label = 124;
     }
    }
   } while (0);
   if ((label | 0) == 123) {
    $422 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body62$index15Z2D = tempRet0;
    $eh$lpad$body62$indexZ2D = $422;
    label = 124;
   }
   if ((label | 0) == 124) {
    $$12 = $eh$lpad$body62$indexZ2D;
    $$14 = $eh$lpad$body62$index15Z2D;
   }
   HEAP32[$ss >> 2] = 2892;
   HEAP32[$315 >> 2] = 2932;
   HEAP32[$337 >> 2] = 2912;
   HEAP32[$317 >> 2] = 2988;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($327);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($317);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($315);
   $$2 = $$12;
   $$25 = $$14;
   break L147;
  } while (0);
  $$0$i50 = $eh$lpad$body$i47$index7Z2D;
  $$01$i49 = $eh$lpad$body$i47$indexZ2D;
  label = 121;
 } while (0);
 if ((label | 0) == 121) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($315);
  $$2 = $$01$i49;
  $$25 = $$0$i50;
 }
 __THREW__ = 0;
 invoke_v(2);
 $496 = __THREW__;
 __THREW__ = 0;
 if ($496 & 1) {
  $502 = ___cxa_find_matching_catch(0) | 0;
  $503 = tempRet0;
  ___clang_call_terminate($502);
 } else {
  $$5 = $$2;
  $$58 = $$25;
  ___resumeException($$5 | 0);
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $multiline, $indent) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $multiline = $multiline | 0;
 $indent = $indent | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i41 = 0, $$01$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$02 = 0, $$08 = 0, $$1 = 0, $$13 = 0, $$2447 = 0, $$248 = 0, $$3 = 0, $$35 = 0, $$4 = 0, $$46 = 0, $$5 = 0, $$57 = 0, $$idx = 0, $$idx$i14 = 0, $$idx$i31 = 0, $$idx10 = 0, $$idx11$val = 0, $$idx11$val4659 = 0, $$idx12$val = 0, $$pre$phi68Z2D = 0, $$pre$phi72Z2D = 0, $$str135$$str124 = 0, $$str135$$str1241 = 0, $0 = 0, $1 = 0, $104 = 0, $106 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $126 = 0, $127 = 0, $129 = 0, $131 = 0, $138 = 0, $140 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $149 = 0, $151 = 0, $16 = 0, $161 = 0, $162 = 0, $164 = 0, $169 = 0, $172 = 0, $176 = 0, $179 = 0, $18 = 0, $181 = 0, $191 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $199 = 0, $2 = 0, $20 = 0, $202 = 0, $204 = 0, $205 = 0, $207 = 0, $210 = 0, $212 = 0, $213 = 0, $214 = 0, $216 = 0, $217 = 0, $22 = 0, $222 = 0, $224 = 0, $225 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $234 = 0, $236 = 0, $239 = 0, $24 = 0, $244 = 0, $246 = 0, $248 = 0, $253 = 0, $259 = 0, $26 = 0, $261 = 0, $263 = 0, $264 = 0, $265 = 0, $267 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $279 = 0, $28 = 0, $281 = 0, $282 = 0, $284 = 0, $285 = 0, $288 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $295 = 0, $297 = 0, $3 = 0, $304 = 0, $305 = 0, $307 = 0, $308 = 0, $31 = 0, $310 = 0, $311 = 0, $313 = 0, $323 = 0, $324 = 0, $326 = 0, $327 = 0, $329 = 0, $331 = 0, $338 = 0, $34 = 0, $341 = 0, $343 = 0, $346 = 0, $350 = 0, $352 = 0, $354 = 0, $355 = 0, $358 = 0, $359 = 0, $36 = 0, $361 = 0, $363 = 0, $373 = 0, $374 = 0, $376 = 0, $38 = 0, $383 = 0, $386 = 0, $388 = 0, $39 = 0, $398 = 0, $4 = 0, $400 = 0, $401 = 0, $402 = 0, $405 = 0, $41 = 0, $46 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $78 = 0, $79 = 0, $8 = 0, $81 = 0, $85 = 0, $88 = 0, $89 = 0, $90 = 0, $92 = 0, $94 = 0, $95 = 0, $97 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body29$index17Z2D = 0, $eh$lpad$body29$indexZ2D = 0, $element = 0, $fields = 0, $indent2 = 0, $indent24 = 0, $lpad$phi$index = 0, $lpad$phi$index12 = 0, $lpad$phi54$index = 0, $lpad$phi54$index22 = 0, $prefix$060 = 0, $prefix5$061 = 0, $ss = 0, $tloc = 0, $vstr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $0 = sp + 284 | 0;
 $ss = sp + 128 | 0;
 $indent2 = sp + 52 | 0;
 $tloc = sp + 24 | 0;
 $1 = sp + 112 | 0;
 $element = sp + 272 | 0;
 $2 = sp + 296 | 0;
 $3 = sp + 64 | 0;
 $fields = sp;
 $4 = sp + 88 | 0;
 $indent24 = sp + 12 | 0;
 $vstr = sp + 100 | 0;
 $5 = sp + 76 | 0;
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 2912;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$6 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $24 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $24;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 2892;
 HEAP32[$ss + 64 >> 2] = 2932;
 HEAP32[$7 >> 2] = 2912;
 __THREW__ = 0;
 invoke_vi(173, $8 | 0);
 $16 = __THREW__;
 __THREW__ = 0;
 do if ($16 & 1) {
  $26 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $26;
 } else {
  HEAP32[$8 >> 2] = 2988;
  $18 = $ss + 44 | 0;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$18 + 4 >> 2] = 0;
  HEAP32[$18 + 8 >> 2] = 0;
  HEAP32[$18 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $20 = __THREW__;
  __THREW__ = 0;
  if ($20 & 1) {
   $22 = ___cxa_find_matching_catch() | 0;
   $23 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $23;
   $eh$lpad$body$i$indexZ2D = $22;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $28 = $this + 40 | 0;
  L11 : do switch (HEAP32[$28 >> 2] | 0) {
  case 16:
   {
    $31 = HEAP32[$this + 48 >> 2] | 0;
    $$idx = $31 + 8 | 0;
    $$idx10 = $31 + 12 | 0;
    if ((HEAP32[$$idx10 >> 2] | 0) == (HEAP32[$$idx >> 2] | 0)) {
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, 52562, 3) | 0;
     $34 = __THREW__;
     __THREW__ = 0;
     if ($34 & 1) {
      label = 12;
      break L11;
     } else {
      label = 108;
      break L11;
     }
    }
    $38 = $multiline ? 52566 : 52569;
    do if ($multiline) {
     HEAP32[$indent2 >> 2] = 0;
     HEAP32[$indent2 + 4 >> 2] = 0;
     HEAP32[$indent2 + 8 >> 2] = 0;
     $39 = HEAP8[$indent >> 0] | 0;
     $41 = ($39 & 1) == 0;
     $46 = $41 ? ($39 & 255) >>> 1 : HEAP32[$indent + 4 >> 2] | 0;
     __THREW__ = 0;
     invoke_viiii(13, $indent2 | 0, ($41 ? $indent + 1 | 0 : HEAP32[$indent + 8 >> 2] | 0) | 0, $46 | 0, $46 + 3 | 0);
     $52 = __THREW__;
     __THREW__ = 0;
     if (!($52 & 1)) {
      __THREW__ = 0;
      invoke_iiii(35, $indent2 | 0, 52571, 3) | 0;
      $54 = __THREW__;
      __THREW__ = 0;
      if (!($54 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch() | 0;
     $57 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
     $eh$lpad$body$index7Z2D = $57;
     $eh$lpad$body$indexZ2D = $56;
     break L11;
    } else {
     __THREW__ = 0;
     invoke_vii(40, $indent2 | 0, $indent | 0);
     $58 = __THREW__;
     __THREW__ = 0;
     if ($58 & 1) {
      label = 12;
      break L11;
     }
    } while (0);
    $$idx11$val = HEAP32[$$idx >> 2] | 0;
    $$idx12$val = HEAP32[$$idx10 >> 2] | 0;
    L23 : do if (($$idx11$val | 0) == ($$idx12$val | 0)) {
     $$pre$phi68Z2D = $ss + 8 | 0;
     label = 40;
    } else {
     $61 = $tloc + 12 | 0;
     $62 = $this + 56 | 0;
     $$idx$i14 = $this + 72 | 0;
     $63 = $ss + 8 | 0;
     $64 = $indent2 + 8 | 0;
     $65 = $indent2 + 1 | 0;
     $66 = $indent2 + 4 | 0;
     $67 = $element + 8 | 0;
     $68 = $element + 1 | 0;
     $69 = $element + 4 | 0;
     $$str135$$str124 = $multiline ? 52575 : 51927;
     $70 = $1 + 4 | 0;
     $71 = $1 + 8 | 0;
     $72 = $1 + 4 | 0;
     $$idx11$val4659 = $$idx11$val;
     $prefix$060 = $38;
     while (1) {
      $73 = HEAP32[$$idx11$val4659 >> 2] | 0;
      $74 = $73 + 48 | 0;
      $75 = HEAP32[$74 >> 2] | 0;
      $78 = ($75 | 0) == 0 ? $loc : $75 + 4 | 0;
      __THREW__ = 0;
      invoke_vii(40, $tloc | 0, $78 | 0);
      $79 = __THREW__;
      __THREW__ = 0;
      if ($79 & 1) {
       label = 26;
       break;
      }
      $81 = $78 + 12 | 0;
      HEAP32[$61 >> 2] = HEAP32[$81 >> 2];
      HEAP32[$61 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
      HEAP32[$61 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
      HEAP32[$61 + 12 >> 2] = HEAP32[$81 + 12 >> 2];
      if (!(HEAP8[$73 + 5 >> 0] | 0)) {
       __THREW__ = 0;
       invoke_viiiiii(10, $62 | 0, $loc | 0, $73 | 0, HEAP32[$73 + 40 >> 2] | 0, HEAP32[$73 + 44 >> 2] | 0, $73 + 28 | 0);
       $104 = __THREW__;
       __THREW__ = 0;
       if ($104 & 1) {
        label = 30;
        break;
       }
       $106 = (HEAP32[$$idx$i14 >> 2] | 0) + -104 | 0;
       HEAP32[$106 >> 2] = HEAP32[$28 >> 2];
       HEAP32[$106 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
       HEAP32[$106 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
       HEAP32[$106 + 12 >> 2] = HEAP32[$28 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(59, $this | 0, HEAP32[$74 >> 2] | 0);
       $108 = __THREW__;
       __THREW__ = 0;
       if ($108 & 1) {
        label = 30;
        break;
       }
      } else {
       HEAP32[$70 >> 2] = 0;
       HEAP32[$71 >> 2] = 0;
       HEAP32[$1 >> 2] = $72;
       __THREW__ = 0;
       invoke_viiiiii(10, $62 | 0, $loc | 0, $73 | 0, 0, 0, $1 | 0);
       $85 = __THREW__;
       __THREW__ = 0;
       if ($85 & 1) {
        label = 29;
        break;
       }
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$72 >> 2] | 0);
       $88 = (HEAP32[$$idx$i14 >> 2] | 0) + -104 | 0;
       HEAP32[$88 >> 2] = HEAP32[$28 >> 2];
       HEAP32[$88 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
       HEAP32[$88 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
       HEAP32[$88 + 12 >> 2] = HEAP32[$28 + 12 >> 2];
       $89 = $73 + 8 | 0;
       HEAP32[$28 >> 2] = HEAP32[$89 >> 2];
       HEAP32[$28 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
       HEAP32[$28 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
       HEAP32[$28 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
      }
      __THREW__ = 0;
      invoke_viiiii(6, $element | 0, $this | 0, $tloc | 0, $multiline | 0, $indent2 | 0);
      $110 = __THREW__;
      __THREW__ = 0;
      if ($110 & 1) {
       label = 30;
       break;
      }
      $112 = (HEAP32[$$idx$i14 >> 2] | 0) + -104 | 0;
      HEAP32[$28 >> 2] = HEAP32[$112 >> 2];
      HEAP32[$28 + 4 >> 2] = HEAP32[$112 + 4 >> 2];
      HEAP32[$28 + 8 >> 2] = HEAP32[$112 + 8 >> 2];
      HEAP32[$28 + 12 >> 2] = HEAP32[$112 + 12 >> 2];
      __ZN12_GLOBAL__N_15Stack3popEv($62);
      $113 = _strlen($prefix$060) | 0;
      __THREW__ = 0;
      $114 = invoke_iiii(29, $63 | 0, $prefix$060 | 0, $113 | 0) | 0;
      $115 = __THREW__;
      __THREW__ = 0;
      if ($115 & 1) {
       label = 38;
       break;
      }
      $117 = HEAP8[$indent2 >> 0] | 0;
      $119 = ($117 & 1) == 0;
      __THREW__ = 0;
      $126 = invoke_iiii(29, $114 | 0, ($119 ? $65 : HEAP32[$64 >> 2] | 0) | 0, ($119 ? ($117 & 255) >>> 1 : HEAP32[$66 >> 2] | 0) | 0) | 0;
      $127 = __THREW__;
      __THREW__ = 0;
      if ($127 & 1) {
       label = 38;
       break;
      }
      $129 = HEAP8[$element >> 0] | 0;
      $131 = ($129 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $126 | 0, ($131 ? $68 : HEAP32[$67 >> 2] | 0) | 0, ($131 ? ($129 & 255) >>> 1 : HEAP32[$69 >> 2] | 0) | 0) | 0;
      $138 = __THREW__;
      __THREW__ = 0;
      if ($138 & 1) {
       label = 38;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($element);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($tloc);
      $140 = $$idx11$val4659 + 4 | 0;
      if (($140 | 0) == ($$idx12$val | 0)) {
       $$pre$phi68Z2D = $63;
       label = 40;
       break L23;
      } else {
       $$idx11$val4659 = $140;
       $prefix$060 = $$str135$$str124;
      }
     }
     if ((label | 0) == 26) {
      $90 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $90;
      $lpad$phi$index12 = tempRet0;
      label = 28;
      break;
     } else if ((label | 0) == 29) {
      $94 = ___cxa_find_matching_catch() | 0;
      $95 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$72 >> 2] | 0);
      $$0 = $94;
      $$02 = $95;
     } else if ((label | 0) == 30) {
      $97 = ___cxa_find_matching_catch() | 0;
      $$0 = $97;
      $$02 = tempRet0;
     } else if ((label | 0) == 38) {
      $142 = ___cxa_find_matching_catch() | 0;
      $143 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($element);
      $$0 = $142;
      $$02 = $143;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($tloc);
     $$1 = $$0;
     $$13 = $$02;
    } while (0);
    if ((label | 0) == 40) {
     __THREW__ = 0;
     $146 = invoke_iiii(29, $$pre$phi68Z2D | 0, ($multiline ? 54743 : 62848) | 0, $multiline & 1 | 0) | 0;
     $147 = __THREW__;
     __THREW__ = 0;
     if (!($147 & 1)) {
      $149 = HEAP8[$indent >> 0] | 0;
      $151 = ($149 & 1) == 0;
      __THREW__ = 0;
      $161 = invoke_iiii(29, $146 | 0, ($151 ? $indent + 1 | 0 : HEAP32[$indent + 8 >> 2] | 0) | 0, ($151 ? ($149 & 255) >>> 1 : HEAP32[$indent + 4 >> 2] | 0) | 0) | 0;
      $162 = __THREW__;
      __THREW__ = 0;
      if (!($162 & 1)) {
       __THREW__ = 0;
       invoke_iiii(29, $161 | 0, 52578, 1) | 0;
       $164 = __THREW__;
       __THREW__ = 0;
       if (!($164 & 1)) {
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
        label = 108;
        break L11;
       }
      }
     }
     $92 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $92;
     $lpad$phi$index12 = tempRet0;
     label = 28;
    }
    if ((label | 0) == 28) {
     $$1 = $lpad$phi$index;
     $$13 = $lpad$phi$index12;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent2);
    $$5 = $$1;
    $$57 = $$13;
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$6 >> 2] = 2932;
    $405 = $ss + 8 | 0;
    HEAP32[$405 >> 2] = 2912;
    HEAP32[$8 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 1:
   {
    $169 = (HEAP8[$this + 48 >> 0] | 0) != 0;
    __THREW__ = 0;
    invoke_iiii(29, $ss + 8 | 0, ($169 ? 62974 : 62979) | 0, ($169 ? 4 : 5) | 0) | 0;
    $172 = __THREW__;
    __THREW__ = 0;
    if ($172 & 1) label = 12; else label = 108;
    break;
   }
  case 2:
   {
    __THREW__ = 0;
    invoke_vid(1, $2 | 0, +(+HEAPF64[$this + 48 >> 3]));
    $176 = __THREW__;
    __THREW__ = 0;
    if ($176 & 1) label = 12; else {
     $179 = HEAP8[$2 >> 0] | 0;
     $181 = ($179 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, ($181 ? $2 + 1 | 0 : HEAP32[$2 + 8 >> 2] | 0) | 0, ($181 ? ($179 & 255) >>> 1 : HEAP32[$2 + 4 >> 2] | 0) | 0) | 0;
     $191 = __THREW__;
     __THREW__ = 0;
     if (!($191 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      label = 108;
      break L11;
     }
     $193 = ___cxa_find_matching_catch() | 0;
     $194 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     $$5 = $193;
     $$57 = $194;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$6 >> 2] = 2932;
     $405 = $ss + 8 | 0;
     HEAP32[$405 >> 2] = 2912;
     HEAP32[$8 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  case 17:
   {
    $195 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 52580, 42);
    $196 = __THREW__;
    __THREW__ = 0;
    if ($196 & 1) {
     $202 = ___cxa_find_matching_catch() | 0;
     $$2447 = tempRet0;
     $$248 = $202;
    } else {
     __THREW__ = 0;
     invoke_viiii(16, $195 | 0, $this + 56 | 0, $loc | 0, $3 | 0);
     $199 = __THREW__;
     __THREW__ = 0;
     if ($199 & 1) $$08 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $195 | 0, 392, 179);
      __THREW__ = 0;
      $$08 = 0;
     }
     $204 = ___cxa_find_matching_catch() | 0;
     $205 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     if ($$08) {
      $$2447 = $205;
      $$248 = $204;
     } else {
      $$5 = $204;
      $$57 = $205;
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$6 >> 2] = 2932;
      $405 = $ss + 8 | 0;
      HEAP32[$405 >> 2] = 2912;
      HEAP32[$8 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
      ___resumeException($$5 | 0);
     }
    }
    ___cxa_free_exception($195 | 0);
    $$5 = $$248;
    $$57 = $$2447;
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$6 >> 2] = 2932;
    $405 = $ss + 8 | 0;
    HEAP32[$405 >> 2] = 2912;
    HEAP32[$8 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 0:
   {
    __THREW__ = 0;
    invoke_iiii(29, $ss + 8 | 0, 52444, 4) | 0;
    $207 = __THREW__;
    __THREW__ = 0;
    if ($207 & 1) label = 12; else label = 108;
    break;
   }
  case 18:
   {
    $210 = HEAP32[$this + 48 >> 2] | 0;
    HEAP32[$fields + 4 >> 2] = 0;
    $212 = $fields + 8 | 0;
    HEAP32[$212 >> 2] = 0;
    $213 = $fields + 4 | 0;
    HEAP32[$fields >> 2] = $213;
    __THREW__ = 0;
    invoke_vii(61, $4 | 0, $210 | 0);
    $214 = __THREW__;
    __THREW__ = 0;
    L75 : do if ($214 & 1) label = 61; else {
     $216 = HEAP32[$4 >> 2] | 0;
     $217 = $4 + 4 | 0;
     L77 : do if (($216 | 0) != ($217 | 0)) {
      $228 = $216;
      while (1) {
       $229 = HEAP32[$228 + 16 >> 2] | 0;
       __THREW__ = 0;
       $230 = invoke_iii(23, $fields | 0, $229 | 0) | 0;
       $231 = __THREW__;
       __THREW__ = 0;
       if ($231 & 1) break;
       HEAP32[$230 >> 2] = $229;
       $234 = HEAP32[$228 + 4 >> 2] | 0;
       if (!$234) {
        $$0$i$i = $228;
        while (1) {
         $239 = HEAP32[$$0$i$i + 8 >> 2] | 0;
         if ((HEAP32[$239 >> 2] | 0) == ($$0$i$i | 0)) {
          $$01$i$i = $239;
          break;
         } else $$0$i$i = $239;
        }
       } else {
        $$0$i$i$i = $234;
        while (1) {
         $236 = HEAP32[$$0$i$i$i >> 2] | 0;
         if (!$236) {
          $$01$i$i = $$0$i$i$i;
          break;
         } else $$0$i$i$i = $236;
        }
       }
       if (($$01$i$i | 0) == ($217 | 0)) break L77; else $228 = $$01$i$i;
      }
      $224 = ___cxa_find_matching_catch() | 0;
      $225 = tempRet0;
      __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$217 >> 2] | 0);
      $$4 = $224;
      $$46 = $225;
      break L75;
     } while (0);
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$217 >> 2] | 0);
     do if (!(HEAP32[$212 >> 2] | 0)) {
      __THREW__ = 0;
      invoke_iiii(29, $ss + 8 | 0, 52623, 3) | 0;
      $244 = __THREW__;
      __THREW__ = 0;
      if ($244 & 1) {
       label = 61;
       break L75;
      }
     } else {
      do if ($multiline) {
       HEAP32[$indent24 >> 2] = 0;
       HEAP32[$indent24 + 4 >> 2] = 0;
       HEAP32[$indent24 + 8 >> 2] = 0;
       $246 = HEAP8[$indent >> 0] | 0;
       $248 = ($246 & 1) == 0;
       $253 = $248 ? ($246 & 255) >>> 1 : HEAP32[$indent + 4 >> 2] | 0;
       __THREW__ = 0;
       invoke_viiii(13, $indent24 | 0, ($248 ? $indent + 1 | 0 : HEAP32[$indent + 8 >> 2] | 0) | 0, $253 | 0, $253 + 3 | 0);
       $259 = __THREW__;
       __THREW__ = 0;
       if (!($259 & 1)) {
        __THREW__ = 0;
        invoke_iiii(35, $indent24 | 0, 52571, 3) | 0;
        $261 = __THREW__;
        __THREW__ = 0;
        if (!($261 & 1)) break;
       }
       $263 = ___cxa_find_matching_catch() | 0;
       $264 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
       $eh$lpad$body29$index17Z2D = $264;
       $eh$lpad$body29$indexZ2D = $263;
       label = 62;
       break L75;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $indent24 | 0, $indent | 0);
       $265 = __THREW__;
       __THREW__ = 0;
       if ($265 & 1) {
        label = 61;
        break L75;
       }
      } while (0);
      $267 = HEAP32[$fields >> 2] | 0;
      L101 : do if (($267 | 0) == ($213 | 0)) {
       $$pre$phi72Z2D = $ss + 8 | 0;
       label = 97;
      } else {
       $270 = $this + 56 | 0;
       $$idx$i31 = $this + 72 | 0;
       $271 = $ss + 8 | 0;
       $272 = $indent24 + 8 | 0;
       $273 = $indent24 + 1 | 0;
       $274 = $indent24 + 4 | 0;
       $275 = $vstr + 8 | 0;
       $276 = $vstr + 1 | 0;
       $277 = $vstr + 4 | 0;
       $$str135$$str1241 = $multiline ? 52575 : 51927;
       $279 = $267;
       $prefix5$061 = $multiline ? 52627 : 52630;
       while (1) {
        __THREW__ = 0;
        $281 = invoke_iiiii(7, $this | 0, $loc | 0, $210 | 0, HEAP32[$279 + 28 >> 2] | 0) | 0;
        $282 = __THREW__;
        __THREW__ = 0;
        if ($282 & 1) {
         label = 93;
         break;
        }
        $284 = (HEAP32[$$idx$i31 >> 2] | 0) + -104 | 0;
        HEAP32[$284 >> 2] = HEAP32[$28 >> 2];
        HEAP32[$284 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
        HEAP32[$284 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
        HEAP32[$284 + 12 >> 2] = HEAP32[$28 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(59, $this | 0, $281 | 0);
        $285 = __THREW__;
        __THREW__ = 0;
        if ($285 & 1) {
         label = 93;
         break;
        }
        __THREW__ = 0;
        invoke_viiiii(6, $vstr | 0, $this | 0, $281 + 4 | 0, $multiline | 0, $indent24 | 0);
        $288 = __THREW__;
        __THREW__ = 0;
        if ($288 & 1) {
         label = 93;
         break;
        }
        $290 = (HEAP32[$$idx$i31 >> 2] | 0) + -104 | 0;
        HEAP32[$28 >> 2] = HEAP32[$290 >> 2];
        HEAP32[$28 + 4 >> 2] = HEAP32[$290 + 4 >> 2];
        HEAP32[$28 + 8 >> 2] = HEAP32[$290 + 8 >> 2];
        HEAP32[$28 + 12 >> 2] = HEAP32[$290 + 12 >> 2];
        __ZN12_GLOBAL__N_15Stack3popEv($270);
        $291 = _strlen($prefix5$061) | 0;
        __THREW__ = 0;
        $292 = invoke_iiii(29, $271 | 0, $prefix5$061 | 0, $291 | 0) | 0;
        $293 = __THREW__;
        __THREW__ = 0;
        if ($293 & 1) {
         label = 96;
         break;
        }
        $295 = HEAP8[$indent24 >> 0] | 0;
        $297 = ($295 & 1) == 0;
        __THREW__ = 0;
        $304 = invoke_iiii(29, $292 | 0, ($297 ? $273 : HEAP32[$272 >> 2] | 0) | 0, ($297 ? ($295 & 255) >>> 1 : HEAP32[$274 >> 2] | 0) | 0) | 0;
        $305 = __THREW__;
        __THREW__ = 0;
        if ($305 & 1) {
         label = 96;
         break;
        }
        __THREW__ = 0;
        $307 = invoke_iiii(29, $304 | 0, 52632, 1) | 0;
        $308 = __THREW__;
        __THREW__ = 0;
        if ($308 & 1) {
         label = 96;
         break;
        }
        $310 = $279 + 16 | 0;
        $311 = HEAP8[$310 >> 0] | 0;
        $313 = ($311 & 1) == 0;
        __THREW__ = 0;
        $323 = invoke_iiii(29, $307 | 0, ($313 ? $310 + 1 | 0 : HEAP32[$279 + 24 >> 2] | 0) | 0, ($313 ? ($311 & 255) >>> 1 : HEAP32[$279 + 20 >> 2] | 0) | 0) | 0;
        $324 = __THREW__;
        __THREW__ = 0;
        if ($324 & 1) {
         label = 96;
         break;
        }
        __THREW__ = 0;
        $326 = invoke_iiii(29, $323 | 0, 52634, 3) | 0;
        $327 = __THREW__;
        __THREW__ = 0;
        if ($327 & 1) {
         label = 96;
         break;
        }
        $329 = HEAP8[$vstr >> 0] | 0;
        $331 = ($329 & 1) == 0;
        __THREW__ = 0;
        invoke_iiii(29, $326 | 0, ($331 ? $276 : HEAP32[$275 >> 2] | 0) | 0, ($331 ? ($329 & 255) >>> 1 : HEAP32[$277 >> 2] | 0) | 0) | 0;
        $338 = __THREW__;
        __THREW__ = 0;
        if ($338 & 1) {
         label = 96;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr);
        $341 = HEAP32[$279 + 4 >> 2] | 0;
        if (!$341) {
         $$0$i$i$i41 = $279;
         while (1) {
          $346 = HEAP32[$$0$i$i$i41 + 8 >> 2] | 0;
          if ((HEAP32[$346 >> 2] | 0) == ($$0$i$i$i41 | 0)) {
           $$01$i$i$i = $346;
           break;
          } else $$0$i$i$i41 = $346;
         }
        } else {
         $$0$i$i$i$i = $341;
         while (1) {
          $343 = HEAP32[$$0$i$i$i$i >> 2] | 0;
          if (!$343) {
           $$01$i$i$i = $$0$i$i$i$i;
           break;
          } else $$0$i$i$i$i = $343;
         }
        }
        if (($$01$i$i$i | 0) == ($213 | 0)) {
         $$pre$phi72Z2D = $271;
         label = 97;
         break L101;
        } else {
         $279 = $$01$i$i$i;
         $prefix5$061 = $$str135$$str1241;
        }
       }
       if ((label | 0) == 93) {
        $350 = ___cxa_find_matching_catch() | 0;
        $lpad$phi54$index = $350;
        $lpad$phi54$index22 = tempRet0;
        label = 95;
        break;
       } else if ((label | 0) == 96) {
        $354 = ___cxa_find_matching_catch() | 0;
        $355 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr);
        $$3 = $354;
        $$35 = $355;
        break;
       }
      } while (0);
      if ((label | 0) == 97) {
       __THREW__ = 0;
       $358 = invoke_iiii(29, $$pre$phi72Z2D | 0, ($multiline ? 54743 : 62848) | 0, $multiline & 1 | 0) | 0;
       $359 = __THREW__;
       __THREW__ = 0;
       if (!($359 & 1)) {
        $361 = HEAP8[$indent >> 0] | 0;
        $363 = ($361 & 1) == 0;
        __THREW__ = 0;
        $373 = invoke_iiii(29, $358 | 0, ($363 ? $indent + 1 | 0 : HEAP32[$indent + 8 >> 2] | 0) | 0, ($363 ? ($361 & 255) >>> 1 : HEAP32[$indent + 4 >> 2] | 0) | 0) | 0;
        $374 = __THREW__;
        __THREW__ = 0;
        if (!($374 & 1)) {
         __THREW__ = 0;
         invoke_iiii(29, $373 | 0, 52638, 1) | 0;
         $376 = __THREW__;
         __THREW__ = 0;
         if (!($376 & 1)) {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
          break;
         }
        }
       }
       $352 = ___cxa_find_matching_catch() | 0;
       $lpad$phi54$index = $352;
       $lpad$phi54$index22 = tempRet0;
       label = 95;
      }
      if ((label | 0) == 95) {
       $$3 = $lpad$phi54$index;
       $$35 = $lpad$phi54$index22;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($indent24);
      $$4 = $$3;
      $$46 = $$35;
      break L75;
     } while (0);
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$213 >> 2] | 0);
     label = 108;
     break L11;
    } while (0);
    if ((label | 0) == 61) {
     $222 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body29$index17Z2D = tempRet0;
     $eh$lpad$body29$indexZ2D = $222;
     label = 62;
    }
    if ((label | 0) == 62) {
     $$4 = $eh$lpad$body29$indexZ2D;
     $$46 = $eh$lpad$body29$index17Z2D;
    }
    __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields, HEAP32[$213 >> 2] | 0);
    $$5 = $$4;
    $$57 = $$46;
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$6 >> 2] = 2932;
    $405 = $ss + 8 | 0;
    HEAP32[$405 >> 2] = 2912;
    HEAP32[$8 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    ___resumeException($$5 | 0);
    break;
   }
  case 19:
   {
    __THREW__ = 0;
    invoke_vii(53, $5 | 0, (HEAP32[$this + 48 >> 2] | 0) + 8 | 0);
    $383 = __THREW__;
    __THREW__ = 0;
    if ($383 & 1) label = 12; else {
     $386 = HEAP8[$5 >> 0] | 0;
     $388 = ($386 & 1) == 0;
     __THREW__ = 0;
     invoke_iiii(29, $ss + 8 | 0, ($388 ? $5 + 1 | 0 : HEAP32[$5 + 8 >> 2] | 0) | 0, ($388 ? ($386 & 255) >>> 1 : HEAP32[$5 + 4 >> 2] | 0) | 0) | 0;
     $398 = __THREW__;
     __THREW__ = 0;
     if (!($398 & 1)) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
      label = 108;
      break L11;
     }
     $400 = ___cxa_find_matching_catch() | 0;
     $401 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$5 = $400;
     $$57 = $401;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$6 >> 2] = 2932;
     $405 = $ss + 8 | 0;
     HEAP32[$405 >> 2] = 2912;
     HEAP32[$8 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
     ___resumeException($$5 | 0);
    }
    break;
   }
  default:
   label = 108;
  } while (0);
  if ((label | 0) == 108) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $8 | 0);
   $402 = __THREW__;
   __THREW__ = 0;
   if ($402 & 1) label = 12; else {
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$6 >> 2] = 2932;
    HEAP32[$ss + 8 >> 2] = 2912;
    HEAP32[$8 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
    STACKTOP = sp;
    return;
   }
  }
  if ((label | 0) == 12) {
   $36 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index7Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $36;
  }
  $$5 = $eh$lpad$body$indexZ2D;
  $$57 = $eh$lpad$body$index7Z2D;
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$6 >> 2] = 2932;
  $405 = $ss + 8 | 0;
  HEAP32[$405 >> 2] = 2912;
  HEAP32[$8 >> 2] = 2988;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$5 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function __Z14jsonlang_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i45 = 0, $$0$i7$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i68 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $$4 = 0, $$45 = 0, $$5 = 0, $$56 = 0, $$6 = 0, $$67 = 0, $$7 = 0, $$78 = 0, $$byval_copy = 0, $$lcssa = 0, $$lcssa203 = 0, $$lcssa204 = 0, $$lcssa205 = 0, $$lcssa206 = 0, $$lcssa209 = 0, $$lcssa212 = 0, $$lcssa214 = 0, $$lcssa216 = 0, $$lcssa218 = 0, $$lcssa220 = 0, $0 = 0, $1 = 0, $10 = 0, $104 = 0, $105 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $124 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $134 = 0, $135 = 0, $138 = 0, $140 = 0, $141 = 0, $144 = 0, $145 = 0, $148 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $157 = 0, $158 = 0, $16 = 0, $164 = 0, $166 = 0, $167 = 0, $17 = 0, $173 = 0, $179 = 0, $18 = 0, $181 = 0, $183 = 0, $184 = 0, $185 = 0, $19 = 0, $192 = 0, $196 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $205 = 0, $207 = 0, $208 = 0, $21 = 0, $214 = 0, $216 = 0, $218 = 0, $219 = 0, $22 = 0, $222 = 0, $229 = 0, $23 = 0, $231 = 0, $233 = 0, $234 = 0, $24 = 0, $240 = 0, $242 = 0, $243 = 0, $249 = 0, $25 = 0, $251 = 0, $253 = 0, $254 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $263 = 0, $267 = 0, $268 = 0, $27 = 0, $270 = 0, $272 = 0, $273 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $28 = 0, $281 = 0, $283 = 0, $287 = 0, $288 = 0, $29 = 0, $294 = 0, $295 = 0, $3 = 0, $30 = 0, $301 = 0, $303 = 0, $307 = 0, $31 = 0, $312 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $321 = 0, $322 = 0, $323 = 0, $326 = 0, $327 = 0, $328 = 0, $33 = 0, $333 = 0, $334 = 0, $338 = 0, $339 = 0, $341 = 0, $345 = 0, $349 = 0, $35 = 0, $354 = 0, $355 = 0, $357 = 0, $36 = 0, $360 = 0, $364 = 0, $365 = 0, $367 = 0, $369 = 0, $375 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $383 = 0, $385 = 0, $386 = 0, $388 = 0, $39 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $85 = 0, $86 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $95 = 0, $96 = 0, $99 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa201 = 0, $__nd$0$i$i$lcssa202 = 0, $__parent$i$i$i$i$i = 0, $__r$0$i = 0, $c$0113 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body19$index14Z2D = 0, $eh$lpad$body19$indexZ2D = 0, $eh$lpad$body49$index19Z2D = 0, $eh$lpad$body49$indexZ2D = 0, $eh$lpad$body62$index24Z2D = 0, $eh$lpad$body62$indexZ2D = 0, $eh$lpad$body65$index9Z2D = 0, $eh$lpad$body65$indexZ2D = 0, $l = 0, $params = 0, $std_binds = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 52 | 0;
 $__parent$i$i$i$i$i = sp + 48 | 0;
 $0 = sp + 176 | 0;
 $1 = sp + 192 | 0;
 $l = sp + 96 | 0;
 $2 = sp + 152 | 0;
 $params = sp + 180 | 0;
 $3 = sp + 204 | 0;
 $4 = sp + 208 | 0;
 $5 = sp;
 $6 = sp + 68 | 0;
 $7 = sp + 12 | 0;
 $std_binds = sp + 56 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 124 | 0;
 $10 = sp + 36 | 0;
 $11 = __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 16405, 12);
 __THREW__ = 0;
 $12 = invoke_iiii(30, $alloc | 0, $1 | 0, 16418) | 0;
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $63 = ___cxa_find_matching_catch() | 0;
  $64 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $$7 = $63;
  $$78 = $64;
  ___resumeException($$7 | 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 HEAP32[$l >> 2] = 0;
 HEAP32[$l + 4 >> 2] = 0;
 HEAP32[$l + 8 >> 2] = 0;
 HEAP32[$l + 12 >> 2] = 0;
 HEAP32[$l + 16 >> 2] = 0;
 HEAP32[$l + 20 >> 2] = 0;
 HEAP32[$l + 24 >> 2] = 0;
 $15 = $12 + 48 | 0;
 $16 = $params + 4 | 0;
 $17 = $params + 8 | 0;
 $18 = $2 + 12 | 0;
 $19 = $2 + 16 | 0;
 $20 = $4 + 12 | 0;
 $21 = $l + 12 | 0;
 $22 = $6 + 12 | 0;
 $23 = $7 + 4 | 0;
 $24 = $7 + 8 | 0;
 $25 = $alloc + 16 | 0;
 $26 = $alloc + 20 | 0;
 $27 = $12 + 56 | 0;
 $28 = $2 + 12 | 0;
 $29 = $alloc + 12 | 0;
 $30 = $7 + 8 | 0;
 $31 = $alloc + 4 | 0;
 $32 = $params + 8 | 0;
 $c$0113 = 0;
 L5 : while (1) {
  __THREW__ = 0;
  invoke_vii(48, $2 | 0, $c$0113 | 0);
  $33 = __THREW__;
  __THREW__ = 0;
  if ($33 & 1) {
   label = 17;
   break;
  }
  HEAP32[$params >> 2] = 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$17 >> 2] = 0;
  $35 = HEAP32[$18 >> 2] | 0;
  $36 = HEAP32[$19 >> 2] | 0;
  if (($35 | 0) != ($36 | 0)) {
   $38 = $35;
   do {
    $39 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($alloc, $38) | 0;
    if (($39 | 0) == ($31 | 0)) {
     __THREW__ = 0;
     $43 = invoke_ii(67, 12) | 0;
     $44 = __THREW__;
     __THREW__ = 0;
     if ($44 & 1) {
      label = 18;
      break L5;
     }
     __THREW__ = 0;
     invoke_vii(40, $43 | 0, $38 | 0);
     $46 = __THREW__;
     __THREW__ = 0;
     if ($46 & 1) {
      $$lcssa204 = $43;
      label = 11;
      break L5;
     }
     __THREW__ = 0;
     $48 = invoke_iii(23, $alloc | 0, $38 | 0) | 0;
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) {
      label = 18;
      break L5;
     }
     HEAP32[$48 >> 2] = $43;
     $$0$i = $43;
    } else $$0$i = HEAP32[$39 + 28 >> 2] | 0;
    HEAP32[$3 >> 2] = $$0$i;
    $53 = HEAP32[$16 >> 2] | 0;
    if ($53 >>> 0 < (HEAP32[$32 >> 2] | 0) >>> 0) {
     HEAP32[$53 >> 2] = $$0$i;
     HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 4;
    } else {
     __THREW__ = 0;
     invoke_vii(49, $params | 0, $3 | 0);
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) {
      label = 18;
      break L5;
     }
    }
    $38 = $38 + 12 | 0;
   } while (($38 | 0) != ($36 | 0));
  }
  __THREW__ = 0;
  invoke_vii(40, $4 | 0, $l | 0);
  $71 = __THREW__;
  __THREW__ = 0;
  if ($71 & 1) {
   label = 19;
   break;
  };
  HEAP32[$20 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
  HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
  HEAP32[$20 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
  __THREW__ = 0;
  invoke_vii(40, $5 | 0, $2 | 0);
  $73 = __THREW__;
  __THREW__ = 0;
  if ($73 & 1) {
   label = 74;
   break;
  }
  __THREW__ = 0;
  $75 = invoke_iiii(31, $alloc | 0, $4 | 0, $5 | 0) | 0;
  $76 = __THREW__;
  __THREW__ = 0;
  if ($76 & 1) {
   label = 75;
   break;
  }
  $78 = $75;
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $l | 0);
  $79 = __THREW__;
  __THREW__ = 0;
  if ($79 & 1) {
   label = 75;
   break;
  };
  HEAP32[$22 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$22 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
  HEAP32[$22 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
  HEAP32[$22 + 12 >> 2] = HEAP32[$21 + 12 >> 2];
  HEAP32[$7 >> 2] = 0;
  HEAP32[$23 >> 2] = 0;
  HEAP32[$24 >> 2] = 0;
  $85 = (HEAP32[$16 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
  $86 = $85 >> 2;
  if ($86) {
   if ($86 >>> 0 > 1073741823) {
    __THREW__ = 0;
    invoke_vi(175, $7 | 0);
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 32;
     break;
    }
   }
   __THREW__ = 0;
   $91 = invoke_ii(67, $85 | 0) | 0;
   $92 = __THREW__;
   __THREW__ = 0;
   if ($92 & 1) {
    label = 32;
    break;
   }
   HEAP32[$23 >> 2] = $91;
   HEAP32[$7 >> 2] = $91;
   HEAP32[$30 >> 2] = $91 + ($86 << 2);
   $95 = HEAP32[$params >> 2] | 0;
   $96 = HEAP32[$16 >> 2] | 0;
   if (($95 | 0) != ($96 | 0)) {
    $$01$i$i = $95;
    $99 = $91;
    do {
     HEAP32[$99 >> 2] = HEAP32[$$01$i$i >> 2];
     $99 = (HEAP32[$23 >> 2] | 0) + 4 | 0;
     HEAP32[$23 >> 2] = $99;
     $$01$i$i = $$01$i$i + 4 | 0;
    } while (($$01$i$i | 0) != ($96 | 0));
   }
  }
  __THREW__ = 0;
  $115 = invoke_ii(67, 64) | 0;
  $116 = __THREW__;
  __THREW__ = 0;
  if ($116 & 1) {
   label = 77;
   break;
  }
  HEAP32[$115 >> 2] = 3192;
  $118 = $115 + 4 | 0;
  __THREW__ = 0;
  invoke_vii(40, $118 | 0, $6 | 0);
  $119 = __THREW__;
  __THREW__ = 0;
  if ($119 & 1) {
   $$lcssa205 = $115;
   label = 57;
   break;
  }
  $121 = $115 + 16 | 0;
  HEAP32[$121 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$121 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
  HEAP32[$121 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
  HEAP32[$121 + 12 >> 2] = HEAP32[$22 + 12 >> 2];
  HEAP32[$115 + 32 >> 2] = 3;
  $123 = $115 + 36 | 0;
  HEAP32[$123 >> 2] = 0;
  $124 = $115 + 40 | 0;
  HEAP32[$124 >> 2] = 0;
  HEAP32[$115 + 44 >> 2] = 0;
  HEAP32[$115 >> 2] = 3208;
  HEAP32[$115 + 48 >> 2] = $c$0113;
  $127 = $115 + 52 | 0;
  HEAP32[$127 >> 2] = 0;
  $128 = $115 + 56 | 0;
  HEAP32[$128 >> 2] = 0;
  $129 = $115 + 60 | 0;
  HEAP32[$129 >> 2] = 0;
  $134 = (HEAP32[$23 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0;
  $135 = $134 >> 2;
  if ($135) {
   if ($135 >>> 0 > 1073741823) {
    __THREW__ = 0;
    invoke_vi(175, $127 | 0);
    $138 = __THREW__;
    __THREW__ = 0;
    if ($138 & 1) {
     $$lcssa206 = $115;
     $$lcssa209 = $115;
     $$lcssa212 = $118;
     $$lcssa214 = $123;
     $$lcssa216 = $124;
     $$lcssa218 = $127;
     $$lcssa220 = $128;
     label = 45;
     break;
    }
   }
   __THREW__ = 0;
   $140 = invoke_ii(67, $134 | 0) | 0;
   $141 = __THREW__;
   __THREW__ = 0;
   if ($141 & 1) {
    $$lcssa206 = $115;
    $$lcssa209 = $115;
    $$lcssa212 = $118;
    $$lcssa214 = $123;
    $$lcssa216 = $124;
    $$lcssa218 = $127;
    $$lcssa220 = $128;
    label = 45;
    break;
   }
   HEAP32[$128 >> 2] = $140;
   HEAP32[$127 >> 2] = $140;
   HEAP32[$129 >> 2] = $140 + ($135 << 2);
   $144 = HEAP32[$7 >> 2] | 0;
   $145 = HEAP32[$23 >> 2] | 0;
   if (($144 | 0) != ($145 | 0)) {
    $$01$i$i68 = $144;
    $148 = $140;
    do {
     HEAP32[$148 >> 2] = HEAP32[$$01$i$i68 >> 2];
     $148 = (HEAP32[$128 >> 2] | 0) + 4 | 0;
     HEAP32[$128 >> 2] = $148;
     $$01$i$i68 = $$01$i$i68 + 4 | 0;
    } while (($$01$i$i68 | 0) != ($145 | 0));
   }
  }
  HEAP32[$0 >> 2] = $115;
  $173 = HEAP32[$25 >> 2] | 0;
  if ($173 >>> 0 < (HEAP32[$26 >> 2] | 0) >>> 0) {
   HEAP32[$173 >> 2] = $115;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 4;
  } else {
   __THREW__ = 0;
   invoke_vii(50, $29 | 0, $0 | 0);
   $179 = __THREW__;
   __THREW__ = 0;
   if ($179 & 1) {
    label = 77;
    break;
   }
  }
  __THREW__ = 0;
  $184 = invoke_ii(67, 20) | 0;
  $185 = __THREW__;
  __THREW__ = 0;
  if ($185 & 1) {
   label = 77;
   break;
  }
  HEAP32[$184 + 8 >> 2] = $78;
  HEAP32[$184 + 12 >> 2] = 1;
  HEAP32[$184 + 16 >> 2] = $115;
  HEAP32[$184 + 4 >> 2] = $15;
  $192 = HEAP32[$15 >> 2] | 0;
  HEAP32[$184 >> 2] = $192;
  HEAP32[$192 + 4 >> 2] = $184;
  HEAP32[$15 >> 2] = $184;
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 1;
  $196 = HEAP32[$7 >> 2] | 0;
  $198 = $196;
  if ($196) {
   $199 = HEAP32[$23 >> 2] | 0;
   if (($199 | 0) != ($196 | 0)) HEAP32[$23 >> 2] = $199 + (~(($199 + -4 - $198 | 0) >>> 2) << 2);
   __ZdlPv($196);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $205 = HEAP32[$params >> 2] | 0;
  $207 = $205;
  if ($205) {
   $208 = HEAP32[$16 >> 2] | 0;
   if (($208 | 0) != ($205 | 0)) HEAP32[$16 >> 2] = $208 + (~(($208 + -4 - $207 | 0) >>> 2) << 2);
   __ZdlPv($205);
  }
  $214 = HEAP32[$28 >> 2] | 0;
  if ($214) {
   $216 = HEAP32[$19 >> 2] | 0;
   if (($216 | 0) == ($214 | 0)) $222 = $214; else {
    $219 = $216;
    do {
     $218 = $219 + -12 | 0;
     HEAP32[$19 >> 2] = $218;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($218);
     $219 = HEAP32[$19 >> 2] | 0;
    } while (($219 | 0) != ($214 | 0));
    $222 = HEAP32[$28 >> 2] | 0;
   }
   __ZdlPv($222);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $c$0113 = $c$0113 + 1 | 0;
  if ($c$0113 >>> 0 >= 24) {
   label = 95;
   break;
  }
 }
 switch (label | 0) {
 case 11:
  {
   $51 = ___cxa_find_matching_catch() | 0;
   $52 = tempRet0;
   __ZdlPv($$lcssa204);
   $eh$lpad$body$index3Z2D = $52;
   $eh$lpad$body$indexZ2D = $51;
   label = 20;
   break;
  }
 case 17:
  {
   $$6 = ___cxa_find_matching_catch() | 0;
   $$67 = tempRet0;
   break;
  }
 case 18:
  {
   $67 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index3Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $67;
   label = 20;
   break;
  }
 case 19:
  {
   $69 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index3Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $69;
   label = 20;
   break;
  }
 case 32:
  {
   $104 = ___cxa_find_matching_catch() | 0;
   $105 = tempRet0;
   $106 = HEAP32[$7 >> 2] | 0;
   $108 = $106;
   if ($106) {
    $109 = HEAP32[$23 >> 2] | 0;
    if (($109 | 0) != ($106 | 0)) HEAP32[$23 >> 2] = $109 + (~(($109 + -4 - $108 | 0) >>> 2) << 2);
    __ZdlPv($106);
   }
   $$0 = $104;
   $$01 = $105;
   label = 82;
   break;
  }
 case 45:
  {
   $153 = ___cxa_find_matching_catch() | 0;
   $154 = tempRet0;
   $155 = HEAP32[$$lcssa218 >> 2] | 0;
   $157 = $155;
   if ($155) {
    $158 = HEAP32[$$lcssa220 >> 2] | 0;
    if (($158 | 0) != ($155 | 0)) HEAP32[$$lcssa220 >> 2] = $158 + (~(($158 + -4 - $157 | 0) >>> 2) << 2);
    __ZdlPv($155);
   }
   HEAP32[$$lcssa209 >> 2] = 3192;
   $164 = HEAP32[$$lcssa214 >> 2] | 0;
   $166 = $164;
   if ($164) {
    $167 = HEAP32[$$lcssa216 >> 2] | 0;
    if (($167 | 0) != ($164 | 0)) HEAP32[$$lcssa216 >> 2] = $167 + (~(($167 + -4 - $166 | 0) >>> 2) << 2);
    __ZdlPv($164);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$lcssa212);
   $183 = $$lcssa206;
   $eh$lpad$body65$index9Z2D = $154;
   $eh$lpad$body65$indexZ2D = $153;
   label = 58;
   break;
  }
 case 57:
  {
   $181 = ___cxa_find_matching_catch() | 0;
   $183 = $$lcssa205;
   $eh$lpad$body65$index9Z2D = tempRet0;
   $eh$lpad$body65$indexZ2D = $181;
   label = 58;
   break;
  }
 case 74:
  {
   $$2 = ___cxa_find_matching_catch() | 0;
   $$23 = tempRet0;
   label = 84;
   break;
  }
 case 75:
  {
   $$1 = ___cxa_find_matching_catch() | 0;
   $$12 = tempRet0;
   label = 83;
   break;
  }
 case 77:
  {
   $229 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body19$index14Z2D = tempRet0;
   $eh$lpad$body19$indexZ2D = $229;
   label = 78;
   break;
  }
 case 95:
  {
   $258 = $std_binds + 4 | 0;
   HEAP32[$258 >> 2] = 0;
   $259 = $std_binds + 8 | 0;
   HEAP32[$259 >> 2] = 0;
   $260 = $std_binds + 4 | 0;
   HEAP32[$std_binds >> 2] = $260;
   __THREW__ = 0;
   invoke_viii(3, $8 | 0, 50213, 3);
   $261 = __THREW__;
   __THREW__ = 0;
   L77 : do if ($261 & 1) label = 138; else {
    $263 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($alloc, $8) | 0;
    do if (($263 | 0) == ($31 | 0)) {
     __THREW__ = 0;
     $267 = invoke_ii(67, 12) | 0;
     $268 = __THREW__;
     __THREW__ = 0;
     if ($268 & 1) label = 139; else {
      __THREW__ = 0;
      invoke_vii(40, $267 | 0, $8 | 0);
      $270 = __THREW__;
      __THREW__ = 0;
      if ($270 & 1) {
       $275 = ___cxa_find_matching_catch() | 0;
       $276 = tempRet0;
       __ZdlPv($267);
       $eh$lpad$body49$index19Z2D = $276;
       $eh$lpad$body49$indexZ2D = $275;
       break;
      }
      __THREW__ = 0;
      $272 = invoke_iii(23, $alloc | 0, $8 | 0) | 0;
      $273 = __THREW__;
      __THREW__ = 0;
      if ($273 & 1) label = 139; else {
       HEAP32[$272 >> 2] = $267;
       $$0$i45 = $267;
       label = 103;
      }
     }
    } else {
     $$0$i45 = HEAP32[$263 + 28 >> 2] | 0;
     label = 103;
    } while (0);
    do if ((label | 0) == 103) {
     $277 = $$0$i45;
     $278 = HEAP32[$260 >> 2] | 0;
     do if (!$278) {
      HEAP32[$__parent$i$i$i$i$i >> 2] = $260;
      $$0$i7$i = $260;
      $301 = $260;
      label = 113;
     } else {
      $__nd$0$i$i = $278;
      while (1) {
       $281 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
       if ($$0$i45 >>> 0 < $281 >>> 0) {
        $283 = HEAP32[$__nd$0$i$i >> 2] | 0;
        if (!$283) {
         $$lcssa203 = $__nd$0$i$i;
         $__nd$0$i$i$lcssa202 = $__nd$0$i$i;
         label = 106;
         break;
        } else $__nd$0$be$in$i$i = $283;
       } else {
        if ($281 >>> 0 >= $$0$i45 >>> 0) {
         $__nd$0$i$i$lcssa = $__nd$0$i$i;
         label = 112;
         break;
        }
        $287 = $__nd$0$i$i + 4 | 0;
        $288 = HEAP32[$287 >> 2] | 0;
        if (!$288) {
         $$lcssa = $287;
         $__nd$0$i$i$lcssa201 = $__nd$0$i$i;
         label = 110;
         break;
        } else $__nd$0$be$in$i$i = $288;
       }
       $__nd$0$i$i = $__nd$0$be$in$i$i;
      }
      if ((label | 0) == 106) {
       HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$i$i$lcssa202;
       $$0$i7$i = $$lcssa203;
       $301 = $__nd$0$i$i$lcssa202;
       label = 113;
       break;
      } else if ((label | 0) == 110) {
       HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$i$i$lcssa201;
       $$0$i7$i = $$lcssa;
       $301 = $__nd$0$i$i$lcssa201;
       label = 113;
       break;
      } else if ((label | 0) == 112) {
       HEAP32[$__parent$i$i$i$i$i >> 2] = $__nd$0$i$i$lcssa;
       if (!$__nd$0$i$i$lcssa) {
        $$0$i7$i = $__parent$i$i$i$i$i;
        $301 = $__nd$0$i$i$lcssa;
        label = 113;
        break;
       } else {
        $__r$0$i = $__nd$0$i$i$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 113) {
      __THREW__ = 0;
      $294 = invoke_ii(67, 24) | 0;
      $295 = __THREW__;
      __THREW__ = 0;
      if ($295 & 1) {
       label = 139;
       break;
      }
      HEAP32[$294 + 16 >> 2] = $277;
      HEAP32[$294 + 20 >> 2] = 0;
      HEAP32[$294 >> 2] = 0;
      HEAP32[$294 + 4 >> 2] = 0;
      HEAP32[$294 + 8 >> 2] = $301;
      HEAP32[$$0$i7$i >> 2] = $294;
      $303 = HEAP32[HEAP32[$std_binds >> 2] >> 2] | 0;
      if (!$303) $307 = $294; else {
       HEAP32[$std_binds >> 2] = $303;
       $307 = HEAP32[$$0$i7$i >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$258 >> 2] | 0, $307);
      HEAP32[$259 >> 2] = (HEAP32[$259 >> 2] | 0) + 1;
      $__r$0$i = $294;
     }
     HEAP32[$__r$0$i + 20 >> 2] = $12;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
     __THREW__ = 0;
     invoke_vii(40, $9 | 0, $11 + 4 | 0);
     $312 = __THREW__;
     __THREW__ = 0;
     if ($312 & 1) {
      label = 138;
      break L77;
     }
     $314 = $9 + 12 | 0;
     $315 = $11 + 16 | 0;
     HEAP32[$314 >> 2] = HEAP32[$315 >> 2];
     HEAP32[$314 + 4 >> 2] = HEAP32[$315 + 4 >> 2];
     HEAP32[$314 + 8 >> 2] = HEAP32[$315 + 8 >> 2];
     HEAP32[$314 + 12 >> 2] = HEAP32[$315 + 12 >> 2];
     $316 = $10 + 4 | 0;
     HEAP32[$316 >> 2] = 0;
     $317 = $10 + 8 | 0;
     HEAP32[$317 >> 2] = 0;
     $318 = $10 + 4 | 0;
     HEAP32[$10 >> 2] = $318;
     $319 = HEAP32[$std_binds >> 2] | 0;
     L110 : do if (($319 | 0) == ($260 | 0)) label = 131; else {
      $321 = $318;
      $326 = $319;
      $354 = $319;
      while (1) {
       __THREW__ = 0;
       $322 = invoke_ii(67, 24) | 0;
       $323 = __THREW__;
       __THREW__ = 0;
       if ($323 & 1) break;
       $327 = $322 + 16 | 0;
       $328 = $326 + 16 | 0;
       $333 = HEAP32[$328 + 4 >> 2] | 0;
       $334 = $327;
       HEAP32[$334 >> 2] = HEAP32[$328 >> 2];
       HEAP32[$334 + 4 >> 2] = $333;
       HEAP32[$0 >> 2] = $321;
       HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
       $338 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($10, $$byval_copy, $__parent$i$i$i$i$i, $327) | 0;
       $339 = HEAP32[$338 >> 2] | 0;
       if (!$339) {
        $341 = HEAP32[$__parent$i$i$i$i$i >> 2] | 0;
        HEAP32[$322 >> 2] = 0;
        HEAP32[$322 + 4 >> 2] = 0;
        HEAP32[$322 + 8 >> 2] = $341;
        HEAP32[$338 >> 2] = $322;
        $345 = HEAP32[HEAP32[$10 >> 2] >> 2] | 0;
        if (!$345) $349 = $322; else {
         HEAP32[$10 >> 2] = $345;
         $349 = HEAP32[$338 >> 2] | 0;
        }
        __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$316 >> 2] | 0, $349);
        HEAP32[$317 >> 2] = (HEAP32[$317 >> 2] | 0) + 1;
       } else if (($339 | 0) != ($322 | 0)) __ZdlPv($322);
       $355 = HEAP32[$354 + 4 >> 2] | 0;
       if (!$355) {
        $$0$i$i$i$i$i = $354;
        while (1) {
         $360 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
         if ((HEAP32[$360 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
          $$01$i$i$i$i$i = $360;
          break;
         } else $$0$i$i$i$i$i = $360;
        }
       } else {
        $$0$i$i$i$i$i$i = $355;
        while (1) {
         $357 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
         if (!$357) {
          $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
          break;
         } else $$0$i$i$i$i$i$i = $357;
        }
       }
       if (($$01$i$i$i$i$i | 0) == ($260 | 0)) {
        label = 131;
        break L110;
       } else {
        $326 = $$01$i$i$i$i$i;
        $354 = $$01$i$i$i$i$i;
       }
      }
      $385 = ___cxa_find_matching_catch() | 0;
      $386 = tempRet0;
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, HEAP32[$318 >> 2] | 0);
      $$4 = $385;
      $$45 = $386;
     } while (0);
     if ((label | 0) == 131) {
      __THREW__ = 0;
      $364 = invoke_ii(67, 64) | 0;
      $365 = __THREW__;
      __THREW__ = 0;
      do if ($365 & 1) label = 142; else {
       __THREW__ = 0;
       invoke_viiii(11, $364 | 0, $9 | 0, $10 | 0, $11 | 0);
       $367 = __THREW__;
       __THREW__ = 0;
       if ($367 & 1) {
        $377 = ___cxa_find_matching_catch() | 0;
        $378 = tempRet0;
        __ZdlPv($364);
        $eh$lpad$body62$index24Z2D = $378;
        $eh$lpad$body62$indexZ2D = $377;
        break;
       }
       HEAP32[$$byval_copy >> 2] = $364;
       $369 = HEAP32[$25 >> 2] | 0;
       if ($369 >>> 0 < (HEAP32[$26 >> 2] | 0) >>> 0) {
        HEAP32[$369 >> 2] = $364;
        HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 4;
        $379 = HEAP32[$318 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, $379);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
        $380 = HEAP32[$260 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $380);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
        STACKTOP = sp;
        return $364 | 0;
       } else {
        __THREW__ = 0;
        invoke_vii(50, $29 | 0, $$byval_copy | 0);
        $375 = __THREW__;
        __THREW__ = 0;
        if ($375 & 1) {
         label = 142;
         break;
        }
        $379 = HEAP32[$318 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, $379);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
        $380 = HEAP32[$260 >> 2] | 0;
        __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, $380);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
        STACKTOP = sp;
        return $364 | 0;
       }
      } while (0);
      if ((label | 0) == 142) {
       $388 = ___cxa_find_matching_catch() | 0;
       $eh$lpad$body62$index24Z2D = tempRet0;
       $eh$lpad$body62$indexZ2D = $388;
      }
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($10, HEAP32[$318 >> 2] | 0);
      $$4 = $eh$lpad$body62$indexZ2D;
      $$45 = $eh$lpad$body62$index24Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     $$5 = $$4;
     $$56 = $$45;
     break L77;
    } while (0);
    if ((label | 0) == 139) {
     $383 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body49$index19Z2D = tempRet0;
     $eh$lpad$body49$indexZ2D = $383;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
    $$5 = $eh$lpad$body49$indexZ2D;
    $$56 = $eh$lpad$body49$index19Z2D;
   } while (0);
   if ((label | 0) == 138) {
    $381 = ___cxa_find_matching_catch() | 0;
    $$5 = $381;
    $$56 = tempRet0;
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($std_binds, HEAP32[$260 >> 2] | 0);
   $$6 = $$5;
   $$67 = $$56;
   break;
  }
 }
 if ((label | 0) == 20) {
  $$3 = $eh$lpad$body$indexZ2D;
  $$34 = $eh$lpad$body$index3Z2D;
  label = 85;
 } else if ((label | 0) == 58) {
  __ZdlPv($183);
  $eh$lpad$body19$index14Z2D = $eh$lpad$body65$index9Z2D;
  $eh$lpad$body19$indexZ2D = $eh$lpad$body65$indexZ2D;
  label = 78;
 }
 if ((label | 0) == 78) {
  $231 = HEAP32[$7 >> 2] | 0;
  $233 = $231;
  if (!$231) {
   $$0 = $eh$lpad$body19$indexZ2D;
   $$01 = $eh$lpad$body19$index14Z2D;
   label = 82;
  } else {
   $234 = HEAP32[$23 >> 2] | 0;
   if (($234 | 0) != ($231 | 0)) HEAP32[$23 >> 2] = $234 + (~(($234 + -4 - $233 | 0) >>> 2) << 2);
   __ZdlPv($231);
   $$0 = $eh$lpad$body19$indexZ2D;
   $$01 = $eh$lpad$body19$index14Z2D;
   label = 82;
  }
 }
 if ((label | 0) == 82) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $$1 = $$0;
  $$12 = $$01;
  label = 83;
 }
 if ((label | 0) == 83) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  $$2 = $$1;
  $$23 = $$12;
  label = 84;
 }
 if ((label | 0) == 84) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $$3 = $$2;
  $$34 = $$23;
  label = 85;
 }
 if ((label | 0) == 85) {
  $240 = HEAP32[$params >> 2] | 0;
  $242 = $240;
  if ($240) {
   $243 = HEAP32[$16 >> 2] | 0;
   if (($243 | 0) != ($240 | 0)) HEAP32[$16 >> 2] = $243 + (~(($243 + -4 - $242 | 0) >>> 2) << 2);
   __ZdlPv($240);
  }
  $249 = HEAP32[$28 >> 2] | 0;
  if ($249) {
   $251 = HEAP32[$19 >> 2] | 0;
   if (($251 | 0) == ($249 | 0)) $257 = $249; else {
    $254 = $251;
    do {
     $253 = $254 + -12 | 0;
     HEAP32[$19 >> 2] = $253;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($253);
     $254 = HEAP32[$19 >> 2] | 0;
    } while (($254 | 0) != ($249 | 0));
    $257 = HEAP32[$28 >> 2] | 0;
   }
   __ZdlPv($257);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $$6 = $$3;
  $$67 = $$34;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($l);
 $$7 = $$6;
 $$78 = $$67;
 ___resumeException($$7 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $this, $loc, $msg) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $msg = $msg | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$01 = 0, $$01$i = 0, $$01$i$i$i$i = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$idx = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val2$i$i = 0, $$idx$val2$i2628$i = 0, $$idx5$val = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $122 = 0, $123 = 0, $13 = 0, $130 = 0, $132 = 0, $141 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $148 = 0, $149 = 0, $15 = 0, $155 = 0, $161 = 0, $165 = 0, $167 = 0, $169 = 0, $17 = 0, $170 = 0, $173 = 0, $174 = 0, $18 = 0, $180 = 0, $182 = 0, $189 = 0, $19 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $196 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $204 = 0, $206 = 0, $213 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $23 = 0, $230 = 0, $234 = 0, $236 = 0, $238 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $245 = 0, $247 = 0, $248 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $263 = 0, $264 = 0, $265 = 0, $267 = 0, $270 = 0, $272 = 0, $273 = 0, $274 = 0, $276 = 0, $277 = 0, $279 = 0, $28 = 0, $280 = 0, $284 = 0, $285 = 0, $287 = 0, $288 = 0, $29 = 0, $290 = 0, $291 = 0, $295 = 0, $296 = 0, $298 = 0, $3 = 0, $300 = 0, $301 = 0, $305 = 0, $306 = 0, $308 = 0, $310 = 0, $311 = 0, $313 = 0, $314 = 0, $318 = 0, $319 = 0, $32 = 0, $321 = 0, $323 = 0, $324 = 0, $328 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $57 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $68 = 0, $7 = 0, $77 = 0, $8 = 0, $80 = 0, $82 = 0, $85 = 0, $9 = 0, $92 = 0, $95 = 0, $eh$lpad$body$i$index6Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index22Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body14$index27Z2D = 0, $eh$lpad$body14$indexZ2D = 0, $eh$lpad$body20$index33Z2D = 0, $eh$lpad$body20$indexZ2D = 0, $eh$lpad$body9$index16Z2D = 0, $eh$lpad$body9$indexZ2D = 0, $i$0 = 0, $i$0$in$i = 0, $i$044 = 0, $name$i = 0, $stack_trace = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $name$i = sp + 208 | 0;
 $0 = sp + 184 | 0;
 $1 = sp + 80 | 0;
 $2 = sp + 56 | 0;
 $3 = sp + 172 | 0;
 $4 = sp + 196 | 0;
 $stack_trace = sp + 220 | 0;
 $5 = sp + 96 | 0;
 $6 = sp;
 $7 = sp + 148 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 136 | 0;
 HEAP32[$stack_trace >> 2] = 0;
 $11 = $stack_trace + 4 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$stack_trace + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viii(3, $6 | 0, 62848, 0);
 $13 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($13 & 1) label = 79; else {
  __THREW__ = 0;
  invoke_vii(40, $5 | 0, $loc | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  do if ($15 & 1) {
   $238 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$index22Z2D = tempRet0;
   $eh$lpad$body$indexZ2D = $238;
   label = 82;
  } else {
   $17 = $5 + 12 | 0;
   $18 = $loc + 12 | 0;
   HEAP32[$17 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$17 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$17 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$17 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   $19 = $5 + 28 | 0;
   __THREW__ = 0;
   invoke_vii(40, $19 | 0, $6 | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   if ($20 & 1) {
    $22 = ___cxa_find_matching_catch() | 0;
    $23 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $eh$lpad$body$index22Z2D = $23;
    $eh$lpad$body$indexZ2D = $22;
    label = 82;
    break;
   }
   $24 = HEAP32[$11 >> 2] | 0;
   $25 = $stack_trace + 8 | 0;
   if ($24 >>> 0 < (HEAP32[$25 >> 2] | 0) >>> 0) {
    HEAP32[$24 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$24 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$24 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    $28 = $24 + 12 | 0;
    HEAP32[$28 >> 2] = HEAP32[$17 >> 2];
    HEAP32[$28 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
    HEAP32[$28 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
    HEAP32[$28 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
    $29 = $24 + 28 | 0;
    HEAP32[$29 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$29 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
    HEAP32[$29 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
    HEAP32[$19 >> 2] = 0;
    HEAP32[$19 + 4 >> 2] = 0;
    HEAP32[$19 + 8 >> 2] = 0;
    HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 40;
   } else {
    __THREW__ = 0;
    invoke_vii(66, $stack_trace | 0, $5 | 0);
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     $240 = ___cxa_find_matching_catch() | 0;
     $241 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$0 = $240;
     $$01 = $241;
     break;
    }
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $$idx = $this + 12 | 0;
   $$idx$val = HEAP32[$$idx >> 2] | 0;
   $36 = (HEAP32[$this + 16 >> 2] | 0) - $$idx$val | 0;
   L14 : do if (($36 | 0) > 0) {
    $39 = $8 + 12 | 0;
    $40 = $8 + 28 | 0;
    $41 = $name$i + 1 | 0;
    $42 = $2 + 12 | 0;
    $43 = $name$i + 4 | 0;
    $44 = $name$i + 8 | 0;
    $45 = $2 + 16 | 0;
    $$idx5$val = $$idx$val;
    $i$044 = (($36 | 0) / 144 | 0) + -1 | 0;
    L16 : while (1) {
     if ((HEAP32[$$idx5$val + ($i$044 * 144 | 0) >> 2] | 0) == 5) {
      $49 = HEAP32[$$idx5$val + ($i$044 * 144 | 0) + 116 >> 2] | 0;
      if ($49) {
       $52 = HEAP32[$stack_trace >> 2] | 0;
       $57 = (((HEAP32[$11 >> 2] | 0) - $52 | 0) / 40 | 0) + -1 | 0;
       HEAP32[$name$i >> 2] = 0;
       HEAP32[$name$i + 4 >> 2] = 0;
       HEAP32[$name$i + 8 >> 2] = 0;
       $i$0$in$i = $i$044;
       do {
        $i$0$in$i = $i$0$in$i + -1 | 0;
        if (($i$0$in$i | 0) <= -1) break;
        $$idx$val$i = HEAP32[$$idx >> 2] | 0;
        $$idx$val2$i$i = HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) + 128 >> 2] | 0;
        $59 = $$idx$val$i + ($i$0$in$i * 144 | 0) + 132 | 0;
        if (($$idx$val2$i$i | 0) != ($59 | 0)) {
         $$idx$val2$i2628$i = $$idx$val2$i$i;
         while (1) {
          $62 = HEAP32[$$idx$val2$i2628$i + 20 >> 2] | 0;
          do if (HEAP8[$62 + 5 >> 0] | 0) {
           if (!(HEAP32[$62 + 8 >> 2] & 16)) break;
           if ((HEAP32[$62 + 16 >> 2] | 0) != ($49 | 0)) break;
           __THREW__ = 0;
           invoke_iii(20, $name$i | 0, HEAP32[$$idx$val2$i2628$i + 16 >> 2] | 0) | 0;
           $77 = __THREW__;
           __THREW__ = 0;
           if ($77 & 1) {
            label = 19;
            break L16;
           }
          } while (0);
          $80 = HEAP32[$$idx$val2$i2628$i + 4 >> 2] | 0;
          if (!$80) {
           $$0$i$i$i$i = $$idx$val2$i2628$i;
           while (1) {
            $85 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
            if ((HEAP32[$85 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
             $$01$i$i$i$i = $85;
             break;
            } else $$0$i$i$i$i = $85;
           }
          } else {
           $$0$i$i$i$i$i = $80;
           while (1) {
            $82 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
            if (!$82) {
             $$01$i$i$i$i = $$0$i$i$i$i$i;
             break;
            } else $$0$i$i$i$i$i = $82;
           }
          }
          if (($$01$i$i$i$i | 0) == ($59 | 0)) break; else $$idx$val2$i2628$i = $$01$i$i$i$i;
         }
        }
       } while ((HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) >> 2] | 0) != 5);
       if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($name$i, 62848) | 0)) {
        __THREW__ = 0;
        invoke_iii(19, $name$i | 0, 52358) | 0;
        $92 = __THREW__;
        __THREW__ = 0;
        if ($92 & 1) {
         label = 20;
         break;
        }
       }
       do if (!(___dynamic_cast($49, 448, 432, 0) | 0)) {
        $119 = ___dynamic_cast($49, 448, 504, 0) | 0;
        if ($119) {
         $122 = HEAP32[$119 + 24 >> 2] | 0;
         HEAP32[$1 >> 2] = 0;
         HEAP32[$1 + 4 >> 2] = 0;
         HEAP32[$1 + 8 >> 2] = 0;
         $123 = HEAP8[$122 >> 0] | 0;
         $130 = ($123 & 1) == 0 ? ($123 & 255) >>> 1 : HEAP32[$122 + 4 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(13, $1 | 0, 52379, 7, $130 + 7 | 0);
         $132 = __THREW__;
         __THREW__ = 0;
         if ($132 & 1) {
          label = 43;
          break L16;
         }
         __THREW__ = 0;
         invoke_iiii(35, $1 | 0, ((HEAP8[$122 >> 0] & 1) == 0 ? $122 + 1 | 0 : HEAP32[$122 + 8 >> 2] | 0) | 0, $130 | 0) | 0;
         $141 = __THREW__;
         __THREW__ = 0;
         if ($141 & 1) {
          label = 43;
          break L16;
         }
         __THREW__ = 0;
         $145 = invoke_iii(27, $1 | 0, 52377) | 0;
         $146 = __THREW__;
         __THREW__ = 0;
         if ($146 & 1) {
          label = 46;
          break L16;
         };
         HEAP32[$7 >> 2] = HEAP32[$145 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$145 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$145 + 8 >> 2];
         HEAP32[$145 >> 2] = 0;
         HEAP32[$145 + 4 >> 2] = 0;
         HEAP32[$145 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         break;
        }
        if (HEAP32[$49 + 40 >> 2] | 0) {
         HEAP32[$4 >> 2] = 0;
         HEAP32[$4 + 4 >> 2] = 0;
         HEAP32[$4 + 8 >> 2] = 0;
         $198 = HEAP8[$name$i >> 0] | 0;
         $204 = ($198 & 1) == 0 ? ($198 & 255) >>> 1 : HEAP32[$43 >> 2] | 0;
         __THREW__ = 0;
         invoke_viiii(13, $4 | 0, 52406, 10, $204 + 10 | 0);
         $206 = __THREW__;
         __THREW__ = 0;
         if ($206 & 1) {
          label = 67;
          break L16;
         }
         __THREW__ = 0;
         invoke_iiii(35, $4 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$44 >> 2] | 0) | 0, $204 | 0) | 0;
         $213 = __THREW__;
         __THREW__ = 0;
         if ($213 & 1) {
          label = 67;
          break L16;
         }
         __THREW__ = 0;
         $217 = invoke_iii(27, $4 | 0, 52377) | 0;
         $218 = __THREW__;
         __THREW__ = 0;
         if ($218 & 1) {
          label = 70;
          break L16;
         };
         HEAP32[$7 >> 2] = HEAP32[$217 >> 2];
         HEAP32[$7 + 4 >> 2] = HEAP32[$217 + 4 >> 2];
         HEAP32[$7 + 8 >> 2] = HEAP32[$217 + 8 >> 2];
         HEAP32[$217 >> 2] = 0;
         HEAP32[$217 + 4 >> 2] = 0;
         HEAP32[$217 + 8 >> 2] = 0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
         break;
        }
        __THREW__ = 0;
        invoke_vii(48, $2 | 0, HEAP32[$49 + 44 >> 2] | 0);
        $155 = __THREW__;
        __THREW__ = 0;
        if ($155 & 1) {
         label = 20;
         break L16;
        }
        if (!(HEAP8[$name$i >> 0] & 1)) {
         HEAP8[$41 >> 0] = 0;
         HEAP8[$name$i >> 0] = 0;
        } else {
         HEAP8[HEAP32[$44 >> 2] >> 0] = 0;
         HEAP32[$43 >> 2] = 0;
        }
        __THREW__ = 0;
        invoke_vii(45, $name$i | 0, 0);
        $161 = __THREW__;
        __THREW__ = 0;
        if ($161 & 1) {
         label = 53;
         break L16;
        };
        HEAP32[$name$i >> 2] = HEAP32[$2 >> 2];
        HEAP32[$name$i + 4 >> 2] = HEAP32[$2 + 4 >> 2];
        HEAP32[$name$i + 8 >> 2] = HEAP32[$2 + 8 >> 2];
        HEAP32[$2 >> 2] = 0;
        HEAP32[$2 + 4 >> 2] = 0;
        HEAP32[$2 + 8 >> 2] = 0;
        $165 = HEAP32[$42 >> 2] | 0;
        if ($165) {
         $167 = HEAP32[$45 >> 2] | 0;
         if (($167 | 0) == ($165 | 0)) $173 = $165; else {
          $170 = $167;
          do {
           $169 = $170 + -12 | 0;
           HEAP32[$45 >> 2] = $169;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($169);
           $170 = HEAP32[$45 >> 2] | 0;
          } while (($170 | 0) != ($165 | 0));
          $173 = HEAP32[$42 >> 2] | 0;
         }
         __ZdlPv($173);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
        HEAP32[$3 >> 2] = 0;
        HEAP32[$3 + 4 >> 2] = 0;
        HEAP32[$3 + 8 >> 2] = 0;
        $174 = HEAP8[$name$i >> 0] | 0;
        $180 = ($174 & 1) == 0 ? ($174 & 255) >>> 1 : HEAP32[$43 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(13, $3 | 0, 52387, 18, $180 + 18 | 0);
        $182 = __THREW__;
        __THREW__ = 0;
        if ($182 & 1) {
         label = 61;
         break L16;
        }
        __THREW__ = 0;
        invoke_iiii(35, $3 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$44 >> 2] | 0) | 0, $180 | 0) | 0;
        $189 = __THREW__;
        __THREW__ = 0;
        if ($189 & 1) {
         label = 61;
         break L16;
        }
        __THREW__ = 0;
        $193 = invoke_iii(27, $3 | 0, 52377) | 0;
        $194 = __THREW__;
        __THREW__ = 0;
        if ($194 & 1) {
         label = 64;
         break L16;
        };
        HEAP32[$7 >> 2] = HEAP32[$193 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$193 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$193 + 8 >> 2];
        HEAP32[$193 >> 2] = 0;
        HEAP32[$193 + 4 >> 2] = 0;
        HEAP32[$193 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
       } else {
        HEAP32[$0 >> 2] = 0;
        HEAP32[$0 + 4 >> 2] = 0;
        HEAP32[$0 + 8 >> 2] = 0;
        $95 = HEAP8[$name$i >> 0] | 0;
        $101 = ($95 & 1) == 0 ? ($95 & 255) >>> 1 : HEAP32[$43 >> 2] | 0;
        __THREW__ = 0;
        invoke_viiii(13, $0 | 0, 52368, 8, $101 + 8 | 0);
        $103 = __THREW__;
        __THREW__ = 0;
        if ($103 & 1) {
         label = 36;
         break L16;
        }
        __THREW__ = 0;
        invoke_iiii(35, $0 | 0, ((HEAP8[$name$i >> 0] & 1) == 0 ? $41 : HEAP32[$44 >> 2] | 0) | 0, $101 | 0) | 0;
        $110 = __THREW__;
        __THREW__ = 0;
        if ($110 & 1) {
         label = 36;
         break L16;
        }
        __THREW__ = 0;
        $114 = invoke_iii(27, $0 | 0, 52377) | 0;
        $115 = __THREW__;
        __THREW__ = 0;
        if ($115 & 1) {
         label = 39;
         break L16;
        };
        HEAP32[$7 >> 2] = HEAP32[$114 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$114 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$114 + 8 >> 2];
        HEAP32[$114 >> 2] = 0;
        HEAP32[$114 + 4 >> 2] = 0;
        HEAP32[$114 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name$i);
       $222 = $52 + ($57 * 40 | 0) + 28 | 0;
       if (!(HEAP8[$222 >> 0] & 1)) {
        HEAP8[$222 + 1 >> 0] = 0;
        HEAP8[$222 >> 0] = 0;
       } else {
        HEAP8[HEAP32[$52 + ($57 * 40 | 0) + 36 >> 2] >> 0] = 0;
        HEAP32[$52 + ($57 * 40 | 0) + 32 >> 2] = 0;
       }
       __THREW__ = 0;
       invoke_vii(45, $222 | 0, 0);
       $230 = __THREW__;
       __THREW__ = 0;
       if ($230 & 1) {
        label = 76;
        break;
       };
       HEAP32[$222 >> 2] = HEAP32[$7 >> 2];
       HEAP32[$222 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
       HEAP32[$222 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
       HEAP32[$7 >> 2] = 0;
       HEAP32[$7 + 4 >> 2] = 0;
       HEAP32[$7 + 8 >> 2] = 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      }
      __THREW__ = 0;
      invoke_viii(3, $9 | 0, 62848, 0);
      $242 = __THREW__;
      __THREW__ = 0;
      if ($242 & 1) {
       label = 78;
       break;
      }
      __THREW__ = 0;
      invoke_vii(40, $8 | 0, $$idx5$val + ($i$044 * 144 | 0) + 8 | 0);
      $245 = __THREW__;
      __THREW__ = 0;
      if ($245 & 1) {
       label = 93;
       break;
      }
      $247 = $$idx5$val + ($i$044 * 144 | 0) + 20 | 0;
      HEAP32[$39 >> 2] = HEAP32[$247 >> 2];
      HEAP32[$39 + 4 >> 2] = HEAP32[$247 + 4 >> 2];
      HEAP32[$39 + 8 >> 2] = HEAP32[$247 + 8 >> 2];
      HEAP32[$39 + 12 >> 2] = HEAP32[$247 + 12 >> 2];
      __THREW__ = 0;
      invoke_vii(40, $40 | 0, $9 | 0);
      $248 = __THREW__;
      __THREW__ = 0;
      if ($248 & 1) {
       label = 88;
       break;
      }
      $252 = HEAP32[$11 >> 2] | 0;
      if ($252 >>> 0 < (HEAP32[$25 >> 2] | 0) >>> 0) {
       HEAP32[$252 >> 2] = HEAP32[$8 >> 2];
       HEAP32[$252 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
       HEAP32[$252 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
       HEAP32[$8 >> 2] = 0;
       HEAP32[$8 + 4 >> 2] = 0;
       HEAP32[$8 + 8 >> 2] = 0;
       $255 = $252 + 12 | 0;
       HEAP32[$255 >> 2] = HEAP32[$39 >> 2];
       HEAP32[$255 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
       HEAP32[$255 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
       HEAP32[$255 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
       $256 = $252 + 28 | 0;
       HEAP32[$256 >> 2] = HEAP32[$40 >> 2];
       HEAP32[$256 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
       HEAP32[$256 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
       HEAP32[$40 >> 2] = 0;
       HEAP32[$40 + 4 >> 2] = 0;
       HEAP32[$40 + 8 >> 2] = 0;
       HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 40;
      } else {
       __THREW__ = 0;
       invoke_vii(66, $stack_trace | 0, $8 | 0);
       $259 = __THREW__;
       __THREW__ = 0;
       if ($259 & 1) {
        label = 95;
        break;
       }
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     }
     $i$0 = $i$044 + -1 | 0;
     if (($i$0 | 0) <= -1) break L14;
     $$idx5$val = HEAP32[$$idx >> 2] | 0;
     $i$044 = $i$0;
    }
    switch (label | 0) {
    case 19:
     {
      $66 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $66;
      label = 21;
      break;
     }
    case 20:
     {
      $68 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index6Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $68;
      label = 21;
      break;
     }
    case 36:
     {
      $112 = ___cxa_find_matching_catch() | 0;
      $113 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $eh$lpad$body$i$index6Z2D = $113;
      $eh$lpad$body$i$indexZ2D = $112;
      label = 21;
      break;
     }
    case 39:
     {
      $117 = ___cxa_find_matching_catch() | 0;
      $118 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $$0$i = $117;
      $$01$i = $118;
      label = 71;
      break;
     }
    case 43:
     {
      $143 = ___cxa_find_matching_catch() | 0;
      $144 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $eh$lpad$body$i$index6Z2D = $144;
      $eh$lpad$body$i$indexZ2D = $143;
      label = 21;
      break;
     }
    case 46:
     {
      $148 = ___cxa_find_matching_catch() | 0;
      $149 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
      $$0$i = $148;
      $$01$i = $149;
      label = 71;
      break;
     }
    case 53:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 61:
     {
      $191 = ___cxa_find_matching_catch() | 0;
      $192 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $eh$lpad$body$i$index6Z2D = $192;
      $eh$lpad$body$i$indexZ2D = $191;
      label = 21;
      break;
     }
    case 64:
     {
      $196 = ___cxa_find_matching_catch() | 0;
      $197 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $$0$i = $196;
      $$01$i = $197;
      label = 71;
      break;
     }
    case 67:
     {
      $215 = ___cxa_find_matching_catch() | 0;
      $216 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $eh$lpad$body$i$index6Z2D = $216;
      $eh$lpad$body$i$indexZ2D = $215;
      label = 21;
      break;
     }
    case 70:
     {
      $220 = ___cxa_find_matching_catch() | 0;
      $221 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$0$i = $220;
      $$01$i = $221;
      label = 71;
      break;
     }
    case 76:
     {
      ___clang_call_terminate(___cxa_find_matching_catch(0) | 0);
      break;
     }
    case 78:
     {
      $234 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body9$index16Z2D = tempRet0;
      $eh$lpad$body9$indexZ2D = $234;
      label = 80;
      break L1;
      break;
     }
    case 88:
     {
      $250 = ___cxa_find_matching_catch() | 0;
      $251 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $eh$lpad$body14$index27Z2D = $251;
      $eh$lpad$body14$indexZ2D = $250;
      label = 94;
      break;
     }
    case 93:
     {
      $261 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body14$index27Z2D = tempRet0;
      $eh$lpad$body14$indexZ2D = $261;
      label = 94;
      break;
     }
    case 95:
     {
      $263 = ___cxa_find_matching_catch() | 0;
      $264 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($40);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
      $$1 = $263;
      $$12 = $264;
      label = 96;
      break;
     }
    }
    if ((label | 0) == 21) {
     $$0$i = $eh$lpad$body$i$indexZ2D;
     $$01$i = $eh$lpad$body$i$index6Z2D;
     label = 71;
    } else if ((label | 0) == 94) {
     $$1 = $eh$lpad$body14$indexZ2D;
     $$12 = $eh$lpad$body14$index27Z2D;
     label = 96;
    }
    if ((label | 0) == 71) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($name$i);
     $eh$lpad$body9$index16Z2D = $$01$i;
     $eh$lpad$body9$indexZ2D = $$0$i;
     label = 80;
     break L1;
    } else if ((label | 0) == 96) {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
     $$2 = $$1;
     $$23 = $$12;
     break L1;
    }
   } while (0);
   __THREW__ = 0;
   invoke_vii(67, $10 | 0, $stack_trace | 0);
   $265 = __THREW__;
   __THREW__ = 0;
   if ($265 & 1) {
    label = 79;
    break L1;
   }
   __THREW__ = 0;
   invoke_vii(67, $agg$result | 0, $10 | 0);
   $267 = __THREW__;
   __THREW__ = 0;
   do if ($267 & 1) {
    $306 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body20$index33Z2D = tempRet0;
    $eh$lpad$body20$indexZ2D = $306;
   } else {
    __THREW__ = 0;
    invoke_vii(40, $agg$result + 12 | 0, $msg | 0);
    $270 = __THREW__;
    __THREW__ = 0;
    if ($270 & 1) {
     $272 = ___cxa_find_matching_catch() | 0;
     $273 = tempRet0;
     $274 = HEAP32[$agg$result >> 2] | 0;
     if (!$274) {
      $eh$lpad$body20$index33Z2D = $273;
      $eh$lpad$body20$indexZ2D = $272;
      break;
     }
     $276 = $agg$result + 4 | 0;
     $277 = HEAP32[$276 >> 2] | 0;
     if (($277 | 0) == ($274 | 0)) $284 = $274; else {
      $280 = $277;
      do {
       $279 = $280 + -40 | 0;
       HEAP32[$276 >> 2] = $279;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($280 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($279);
       $280 = HEAP32[$276 >> 2] | 0;
      } while (($280 | 0) != ($274 | 0));
      $284 = HEAP32[$agg$result >> 2] | 0;
     }
     __ZdlPv($284);
     $eh$lpad$body20$index33Z2D = $273;
     $eh$lpad$body20$indexZ2D = $272;
     break;
    }
    $285 = HEAP32[$10 >> 2] | 0;
    if ($285) {
     $287 = $10 + 4 | 0;
     $288 = HEAP32[$287 >> 2] | 0;
     if (($288 | 0) == ($285 | 0)) $295 = $285; else {
      $291 = $288;
      do {
       $290 = $291 + -40 | 0;
       HEAP32[$287 >> 2] = $290;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($291 + -12 | 0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($290);
       $291 = HEAP32[$287 >> 2] | 0;
      } while (($291 | 0) != ($285 | 0));
      $295 = HEAP32[$10 >> 2] | 0;
     }
     __ZdlPv($295);
    }
    $296 = HEAP32[$stack_trace >> 2] | 0;
    if (!$296) {
     STACKTOP = sp;
     return;
    }
    $298 = HEAP32[$11 >> 2] | 0;
    if (($298 | 0) == ($296 | 0)) $305 = $296; else {
     $301 = $298;
     do {
      $300 = $301 + -40 | 0;
      HEAP32[$11 >> 2] = $300;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($301 + -12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($300);
      $301 = HEAP32[$11 >> 2] | 0;
     } while (($301 | 0) != ($296 | 0));
     $305 = HEAP32[$stack_trace >> 2] | 0;
    }
    __ZdlPv($305);
    STACKTOP = sp;
    return;
   } while (0);
   $308 = HEAP32[$10 >> 2] | 0;
   if (!$308) {
    $$2 = $eh$lpad$body20$indexZ2D;
    $$23 = $eh$lpad$body20$index33Z2D;
    break L1;
   }
   $310 = $10 + 4 | 0;
   $311 = HEAP32[$310 >> 2] | 0;
   if (($311 | 0) == ($308 | 0)) $318 = $308; else {
    $314 = $311;
    do {
     $313 = $314 + -40 | 0;
     HEAP32[$310 >> 2] = $313;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($314 + -12 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($313);
     $314 = HEAP32[$310 >> 2] | 0;
    } while (($314 | 0) != ($308 | 0));
    $318 = HEAP32[$10 >> 2] | 0;
   }
   __ZdlPv($318);
   $$2 = $eh$lpad$body20$indexZ2D;
   $$23 = $eh$lpad$body20$index33Z2D;
   break L1;
  } while (0);
  if ((label | 0) == 82) {
   $$0 = $eh$lpad$body$indexZ2D;
   $$01 = $eh$lpad$body$index22Z2D;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  $$2 = $$0;
  $$23 = $$01;
 } while (0);
 if ((label | 0) == 79) {
  $236 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body9$index16Z2D = tempRet0;
  $eh$lpad$body9$indexZ2D = $236;
  label = 80;
 }
 if ((label | 0) == 80) {
  $$2 = $eh$lpad$body9$indexZ2D;
  $$23 = $eh$lpad$body9$index16Z2D;
 }
 $319 = HEAP32[$stack_trace >> 2] | 0;
 if (!$319) ___resumeException($$2 | 0);
 $321 = HEAP32[$11 >> 2] | 0;
 if (($321 | 0) == ($319 | 0)) $328 = $319; else {
  $324 = $321;
  do {
   $323 = $324 + -40 | 0;
   HEAP32[$11 >> 2] = $323;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($324 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($323);
   $324 = HEAP32[$11 >> 2] | 0;
  } while (($324 | 0) != ($319 | 0));
  $328 = HEAP32[$stack_trace >> 2] | 0;
 }
 __ZdlPv($328);
 ___resumeException($$2 | 0);
}

function _vfscanf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$lcssa = 0, $$lcssa38 = 0, $$lcssa384 = 0, $$pre = 0, $$pre$phi182Z2D = 0, $$pre170 = 0, $$pre178 = 0, $$size$0 = 0, $0 = 0, $10 = 0, $104 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $112 = 0, $115 = 0, $117 = 0, $12 = 0, $125 = 0, $129 = 0, $13 = 0, $136 = 0, $14 = 0, $141 = 0, $145 = 0, $15 = 0, $150 = 0, $151 = 0, $157 = 0, $160 = 0, $164 = 0, $166 = 0, $168 = 0, $17 = 0, $173 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $181 = 0, $186 = 0, $190 = 0, $195 = 0, $196 = 0, $197 = 0, $199 = 0, $20 = 0, $201 = 0, $202 = 0, $210 = 0, $220 = 0, $222 = 0, $226 = 0, $228 = 0, $236 = 0, $244 = 0, $245 = 0, $248 = 0, $25 = 0, $250 = 0, $256 = 0, $263 = 0, $265 = 0, $271 = 0, $277 = 0, $281 = 0, $284 = 0, $291 = 0, $306 = 0, $310 = 0.0, $32 = 0, $334 = 0, $37 = 0, $41 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $62 = 0, $7 = 0, $8 = 0, $81 = 0, $82 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0400 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $base$0 = 0, $c$0100 = 0, $dest$0 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$phi = 0, $i$0$ph20 = 0, $i$0$ph20$lcssa = 0, $i$1 = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0, $isdigittmp = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0104 = 0, $matches$0104$lcssa = 0, $matches$0104376 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $p$0109 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$396 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0108 = 0, $pos$1 = 0, $pos$2 = 0, $s$0107 = 0, $s$0107$lcssa = 0, $s$1 = 0, $s$2$ph = 0, $s$3 = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $scanset = 0, $size$0 = 0, $st = 0, $wc = 0, $wcs$0103 = 0, $wcs$0103$lcssa = 0, $wcs$1 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$4 = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$097 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $ap2$i = sp + 16 | 0;
 $st = sp + 8 | 0;
 $scanset = sp + 33 | 0;
 $wc = sp;
 $0 = sp + 32 | 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) $334 = ___lockfile($f) | 0; else $334 = 0;
 $5 = HEAP8[$fmt >> 0] | 0;
 L4 : do if (!($5 << 24 >> 24)) $matches$3 = 0; else {
  $7 = $f + 4 | 0;
  $8 = $f + 100 | 0;
  $9 = $f + 108 | 0;
  $10 = $f + 8 | 0;
  $11 = $scanset + 10 | 0;
  $12 = $scanset + 33 | 0;
  $13 = $st + 4 | 0;
  $14 = $scanset + 46 | 0;
  $15 = $scanset + 94 | 0;
  $17 = $5;
  $matches$0104 = 0;
  $p$0109 = $fmt;
  $pos$0108 = 0;
  $s$0107 = 0;
  $wcs$0103 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace($17 & 255) | 0)) {
    $47 = (HEAP8[$p$0109 >> 0] | 0) == 37;
    L10 : do if ($47) {
     $48 = $p$0109 + 1 | 0;
     $49 = HEAP8[$48 >> 0] | 0;
     L12 : do switch ($49 << 24 >> 24) {
     case 37:
      {
       break L10;
       break;
      }
     case 42:
      {
       $dest$0 = 0;
       $p$2 = $p$0109 + 2 | 0;
       break;
      }
     default:
      {
       $isdigittmp = ($49 & 255) + -48 | 0;
       if ($isdigittmp >>> 0 < 10) if ((HEAP8[$p$0109 + 2 >> 0] | 0) == 36) {
        HEAP32[$ap2$i >> 2] = HEAP32[$ap >> 2];
        $i$0$i = $isdigittmp;
        while (1) {
         $81 = (HEAP32[$ap2$i >> 2] | 0) + (4 - 1) & ~(4 - 1);
         $82 = HEAP32[$81 >> 2] | 0;
         HEAP32[$ap2$i >> 2] = $81 + 4;
         if ($i$0$i >>> 0 > 1) $i$0$i = $i$0$i + -1 | 0; else {
          $$lcssa = $82;
          break;
         }
        }
        $dest$0 = $$lcssa;
        $p$2 = $p$0109 + 3 | 0;
        break L12;
       }
       $90 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $91 = HEAP32[$90 >> 2] | 0;
       HEAP32[$ap >> 2] = $90 + 4;
       $dest$0 = $91;
       $p$2 = $48;
      }
     } while (0);
     $92 = HEAP8[$p$2 >> 0] | 0;
     $93 = $92 & 255;
     if (($93 + -48 | 0) >>> 0 < 10) {
      $97 = $93;
      $p$396 = $p$2;
      $width$097 = 0;
      while (1) {
       $96 = ($width$097 * 10 | 0) + -48 + $97 | 0;
       $98 = $p$396 + 1 | 0;
       $99 = HEAP8[$98 >> 0] | 0;
       $97 = $99 & 255;
       if (($97 + -48 | 0) >>> 0 >= 10) {
        $$lcssa38 = $99;
        $p$3$lcssa = $98;
        $width$0$lcssa = $96;
        break;
       } else {
        $p$396 = $98;
        $width$097 = $96;
       }
      }
     } else {
      $$lcssa38 = $92;
      $p$3$lcssa = $p$2;
      $width$0$lcssa = 0;
     }
     if ($$lcssa38 << 24 >> 24 == 109) {
      $104 = $p$3$lcssa + 1 | 0;
      $107 = HEAP8[$104 >> 0] | 0;
      $alloc$0 = ($dest$0 | 0) != 0 & 1;
      $p$4 = $104;
      $s$1 = 0;
      $wcs$1 = 0;
     } else {
      $107 = $$lcssa38;
      $alloc$0 = 0;
      $p$4 = $p$3$lcssa;
      $s$1 = $s$0107;
      $wcs$1 = $wcs$0103;
     }
     $105 = $p$4 + 1 | 0;
     switch ($107 & 255 | 0) {
     case 104:
      {
       $109 = (HEAP8[$105 >> 0] | 0) == 104;
       $p$5 = $109 ? $p$4 + 2 | 0 : $105;
       $size$0 = $109 ? -2 : -1;
       break;
      }
     case 108:
      {
       $112 = (HEAP8[$105 >> 0] | 0) == 108;
       $p$5 = $112 ? $p$4 + 2 | 0 : $105;
       $size$0 = $112 ? 3 : 1;
       break;
      }
     case 106:
      {
       $p$5 = $105;
       $size$0 = 3;
       break;
      }
     case 116:
     case 122:
      {
       $p$5 = $105;
       $size$0 = 1;
       break;
      }
     case 76:
      {
       $p$5 = $105;
       $size$0 = 2;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       $p$5 = $p$4;
       $size$0 = 0;
       break;
      }
     default:
      {
       $alloc$0400 = $alloc$0;
       $matches$0104376 = $matches$0104;
       $s$6 = $s$1;
       $wcs$7 = $wcs$1;
       label = 152;
       break L6;
      }
     }
     $115 = HEAPU8[$p$5 >> 0] | 0;
     $117 = ($115 & 47 | 0) == 3;
     $$ = $117 ? $115 | 32 : $115;
     $$size$0 = $117 ? 1 : $size$0;
     switch ($$ | 0) {
     case 99:
      {
       $pos$1 = $pos$0108;
       $width$1 = ($width$0$lcssa | 0) < 1 ? 1 : $width$0$lcssa;
       break;
      }
     case 91:
      {
       $pos$1 = $pos$0108;
       $width$1 = $width$0$lcssa;
       break;
      }
     case 110:
      {
       if (!$dest$0) {
        $matches$1 = $matches$0104;
        $p$11 = $p$5;
        $pos$2 = $pos$0108;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L8;
       }
       switch ($$size$0 | 0) {
       case -2:
        {
         HEAP8[$dest$0 >> 0] = $pos$0108;
         $matches$1 = $matches$0104;
         $p$11 = $p$5;
         $pos$2 = $pos$0108;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L8;
         break;
        }
       case -1:
        {
         HEAP16[$dest$0 >> 1] = $pos$0108;
         $matches$1 = $matches$0104;
         $p$11 = $p$5;
         $pos$2 = $pos$0108;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L8;
         break;
        }
       case 0:
        {
         HEAP32[$dest$0 >> 2] = $pos$0108;
         $matches$1 = $matches$0104;
         $p$11 = $p$5;
         $pos$2 = $pos$0108;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L8;
         break;
        }
       case 1:
        {
         HEAP32[$dest$0 >> 2] = $pos$0108;
         $matches$1 = $matches$0104;
         $p$11 = $p$5;
         $pos$2 = $pos$0108;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L8;
         break;
        }
       case 3:
        {
         $125 = $dest$0;
         HEAP32[$125 >> 2] = $pos$0108;
         HEAP32[$125 + 4 >> 2] = (($pos$0108 | 0) < 0) << 31 >> 31;
         $matches$1 = $matches$0104;
         $p$11 = $p$5;
         $pos$2 = $pos$0108;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L8;
         break;
        }
       default:
        {
         $matches$1 = $matches$0104;
         $p$11 = $p$5;
         $pos$2 = $pos$0108;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L8;
        }
       }
       break;
      }
     default:
      {
       ___shlim($f, 0);
       do {
        $129 = HEAP32[$7 >> 2] | 0;
        if ($129 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
         HEAP32[$7 >> 2] = $129 + 1;
         $136 = HEAPU8[$129 >> 0] | 0;
        } else $136 = ___shgetc($f) | 0;
       } while ((_isspace($136) | 0) != 0);
       $$pre170 = HEAP32[$7 >> 2] | 0;
       if (!(HEAP32[$8 >> 2] | 0)) $145 = $$pre170; else {
        $141 = $$pre170 + -1 | 0;
        HEAP32[$7 >> 2] = $141;
        $145 = $141;
       }
       $pos$1 = (HEAP32[$9 >> 2] | 0) + $pos$0108 + $145 - (HEAP32[$10 >> 2] | 0) | 0;
       $width$1 = $width$0$lcssa;
      }
     }
     ___shlim($f, $width$1);
     $150 = HEAP32[$7 >> 2] | 0;
     $151 = HEAP32[$8 >> 2] | 0;
     if ($150 >>> 0 < $151 >>> 0) {
      HEAP32[$7 >> 2] = $150 + 1;
      $157 = $151;
     } else {
      if ((___shgetc($f) | 0) < 0) {
       $alloc$0400 = $alloc$0;
       $matches$0104376 = $matches$0104;
       $s$6 = $s$1;
       $wcs$7 = $wcs$1;
       label = 152;
       break L6;
      }
      $157 = HEAP32[$8 >> 2] | 0;
     }
     if ($157) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
     L67 : do switch ($$ | 0) {
     case 91:
     case 99:
     case 115:
      {
       $160 = ($$ | 0) == 99;
       L69 : do if (($$ & 239 | 0) == 99) {
        _memset($scanset | 0, -1, 257) | 0;
        HEAP8[$scanset >> 0] = 0;
        if (($$ | 0) == 115) {
         HEAP8[$12 >> 0] = 0;
         HEAP8[$11 >> 0] = 0;
         HEAP8[$11 + 1 >> 0] = 0;
         HEAP8[$11 + 2 >> 0] = 0;
         HEAP8[$11 + 3 >> 0] = 0;
         HEAP8[$11 + 4 >> 0] = 0;
         $p$9 = $p$5;
        } else $p$9 = $p$5;
       } else {
        $164 = $p$5 + 1 | 0;
        $166 = (HEAP8[$164 >> 0] | 0) == 94;
        $invert$0 = $166 & 1;
        $168 = $166 ? $164 : $p$5;
        $p$6 = $166 ? $p$5 + 2 | 0 : $164;
        _memset($scanset | 0, $166 & 1 | 0, 257) | 0;
        HEAP8[$scanset >> 0] = 0;
        switch (HEAP8[$p$6 >> 0] | 0) {
        case 45:
         {
          $173 = ($invert$0 ^ 1) & 255;
          HEAP8[$14 >> 0] = $173;
          $$pre$phi182Z2D = $173;
          $p$7$ph = $168 + 2 | 0;
          break;
         }
        case 93:
         {
          $176 = ($invert$0 ^ 1) & 255;
          HEAP8[$15 >> 0] = $176;
          $$pre$phi182Z2D = $176;
          $p$7$ph = $168 + 2 | 0;
          break;
         }
        default:
         {
          $$pre$phi182Z2D = ($invert$0 ^ 1) & 255;
          $p$7$ph = $p$6;
         }
        }
        $p$7 = $p$7$ph;
        while (1) {
         $177 = HEAP8[$p$7 >> 0] | 0;
         L80 : do switch ($177 << 24 >> 24) {
         case 0:
          {
           $alloc$0400 = $alloc$0;
           $matches$0104376 = $matches$0104;
           $s$6 = $s$1;
           $wcs$7 = $wcs$1;
           label = 152;
           break L6;
           break;
          }
         case 93:
          {
           $p$9 = $p$7;
           break L69;
           break;
          }
         case 45:
          {
           $178 = $p$7 + 1 | 0;
           $179 = HEAP8[$178 >> 0] | 0;
           switch ($179 << 24 >> 24) {
           case 93:
           case 0:
            {
             $190 = 45;
             $p$8 = $p$7;
             break L80;
             break;
            }
           default:
            {}
           }
           $181 = HEAP8[$p$7 + -1 >> 0] | 0;
           if (($181 & 255) < ($179 & 255)) {
            $c$0100 = $181 & 255;
            do {
             $c$0100 = $c$0100 + 1 | 0;
             HEAP8[$scanset + $c$0100 >> 0] = $$pre$phi182Z2D;
             $186 = HEAP8[$178 >> 0] | 0;
            } while (($c$0100 | 0) < ($186 & 255 | 0));
            $190 = $186;
            $p$8 = $178;
           } else {
            $190 = $179;
            $p$8 = $178;
           }
           break;
          }
         default:
          {
           $190 = $177;
           $p$8 = $p$7;
          }
         } while (0);
         HEAP8[$scanset + (($190 & 255) + 1) >> 0] = $$pre$phi182Z2D;
         $p$7 = $p$8 + 1 | 0;
        }
       } while (0);
       $195 = $160 ? $width$1 + 1 | 0 : 31;
       $196 = ($$size$0 | 0) == 1;
       $197 = ($alloc$0 | 0) != 0;
       L88 : do if ($196) {
        if ($197) {
         $199 = _malloc($195 << 2) | 0;
         if (!$199) {
          $alloc$0400 = $alloc$0;
          $matches$0104376 = $matches$0104;
          $s$6 = 0;
          $wcs$7 = $199;
          label = 152;
          break L6;
         } else $wcs$2 = $199;
        } else $wcs$2 = $dest$0;
        HEAP32[$st >> 2] = 0;
        HEAP32[$13 >> 2] = 0;
        $i$0$ph = 0;
        $k$0$ph = $195;
        $wcs$3$ph = $wcs$2;
        L94 : while (1) {
         $201 = ($wcs$3$ph | 0) == 0;
         $i$0$ph20 = $i$0$ph;
         while (1) {
          L98 : while (1) {
           $202 = HEAP32[$7 >> 2] | 0;
           if ($202 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
            HEAP32[$7 >> 2] = $202 + 1;
            $210 = HEAPU8[$202 >> 0] | 0;
           } else $210 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($210 + 1) >> 0] | 0)) {
            $i$0$ph20$lcssa = $i$0$ph20;
            $wcs$3$ph$lcssa = $wcs$3$ph;
            break L94;
           }
           HEAP8[$0 >> 0] = $210;
           switch (_mbrtowc($wc, $0, 1, $st) | 0) {
           case -1:
            {
             $alloc$0400 = $alloc$0;
             $matches$0104376 = $matches$0104;
             $s$6 = 0;
             $wcs$7 = $wcs$3$ph;
             label = 152;
             break L6;
             break;
            }
           case -2:
            break;
           default:
            break L98;
           }
          }
          if ($201) $i$1 = $i$0$ph20; else {
           HEAP32[$wcs$3$ph + ($i$0$ph20 << 2) >> 2] = HEAP32[$wc >> 2];
           $i$1 = $i$0$ph20 + 1 | 0;
          }
          if ($197 & ($i$1 | 0) == ($k$0$ph | 0)) break; else $i$0$ph20 = $i$1;
         }
         $220 = $k$0$ph << 1 | 1;
         $222 = _realloc($wcs$3$ph, $220 << 2) | 0;
         if (!$222) {
          $alloc$0400 = $alloc$0;
          $matches$0104376 = $matches$0104;
          $s$6 = 0;
          $wcs$7 = $wcs$3$ph;
          label = 152;
          break L6;
         }
         $i$0$ph$phi = $k$0$ph;
         $k$0$ph = $220;
         $wcs$3$ph = $222;
         $i$0$ph = $i$0$ph$phi;
        }
        if (!(_mbsinit($st) | 0)) {
         $alloc$0400 = $alloc$0;
         $matches$0104376 = $matches$0104;
         $s$6 = 0;
         $wcs$7 = $wcs$3$ph$lcssa;
         label = 152;
         break L6;
        } else {
         $i$4 = $i$0$ph20$lcssa;
         $s$3 = 0;
         $wcs$4 = $wcs$3$ph$lcssa;
        }
       } else {
        if ($197) {
         $226 = _malloc($195) | 0;
         if (!$226) {
          $alloc$0400 = $alloc$0;
          $matches$0104376 = $matches$0104;
          $s$6 = 0;
          $wcs$7 = 0;
          label = 152;
          break L6;
         } else {
          $i$2$ph = 0;
          $k$1$ph = $195;
          $s$2$ph = $226;
         }
         while (1) {
          $i$2 = $i$2$ph;
          do {
           $228 = HEAP32[$7 >> 2] | 0;
           if ($228 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
            HEAP32[$7 >> 2] = $228 + 1;
            $236 = HEAPU8[$228 >> 0] | 0;
           } else $236 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($236 + 1) >> 0] | 0)) {
            $i$4 = $i$2;
            $s$3 = $s$2$ph;
            $wcs$4 = 0;
            break L88;
           }
           HEAP8[$s$2$ph + $i$2 >> 0] = $236;
           $i$2 = $i$2 + 1 | 0;
          } while (($i$2 | 0) != ($k$1$ph | 0));
          $244 = $k$1$ph << 1 | 1;
          $245 = _realloc($s$2$ph, $244) | 0;
          if (!$245) {
           $alloc$0400 = $alloc$0;
           $matches$0104376 = $matches$0104;
           $s$6 = $s$2$ph;
           $wcs$7 = 0;
           label = 152;
           break L6;
          } else {
           $i$2$ph$phi = $k$1$ph;
           $k$1$ph = $244;
           $s$2$ph = $245;
           $i$2$ph = $i$2$ph$phi;
          }
         }
        }
        if (!$dest$0) {
         $265 = $157;
         while (1) {
          $263 = HEAP32[$7 >> 2] | 0;
          if ($263 >>> 0 < $265 >>> 0) {
           HEAP32[$7 >> 2] = $263 + 1;
           $271 = HEAPU8[$263 >> 0] | 0;
          } else $271 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($271 + 1) >> 0] | 0)) {
           $i$4 = 0;
           $s$3 = 0;
           $wcs$4 = 0;
           break L88;
          }
          $265 = HEAP32[$8 >> 2] | 0;
         }
        } else {
         $250 = $157;
         $i$3 = 0;
         while (1) {
          $248 = HEAP32[$7 >> 2] | 0;
          if ($248 >>> 0 < $250 >>> 0) {
           HEAP32[$7 >> 2] = $248 + 1;
           $256 = HEAPU8[$248 >> 0] | 0;
          } else $256 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($256 + 1) >> 0] | 0)) {
           $i$4 = $i$3;
           $s$3 = $dest$0;
           $wcs$4 = 0;
           break L88;
          }
          HEAP8[$dest$0 + $i$3 >> 0] = $256;
          $250 = HEAP32[$8 >> 2] | 0;
          $i$3 = $i$3 + 1 | 0;
         }
        }
       } while (0);
       $$pre178 = HEAP32[$7 >> 2] | 0;
       if (!(HEAP32[$8 >> 2] | 0)) $281 = $$pre178; else {
        $277 = $$pre178 + -1 | 0;
        HEAP32[$7 >> 2] = $277;
        $281 = $277;
       }
       $284 = $281 - (HEAP32[$10 >> 2] | 0) + (HEAP32[$9 >> 2] | 0) | 0;
       if (!$284) {
        $alloc$2 = $alloc$0;
        $matches$2 = $matches$0104;
        $s$8 = $s$3;
        $wcs$9 = $wcs$4;
        break L6;
       }
       if (!(($284 | 0) == ($width$1 | 0) | $160 ^ 1)) {
        $alloc$2 = $alloc$0;
        $matches$2 = $matches$0104;
        $s$8 = $s$3;
        $wcs$9 = $wcs$4;
        break L6;
       }
       do if ($197) if ($196) {
        HEAP32[$dest$0 >> 2] = $wcs$4;
        break;
       } else {
        HEAP32[$dest$0 >> 2] = $s$3;
        break;
       } while (0);
       if ($160) {
        $p$10 = $p$9;
        $s$4 = $s$3;
        $wcs$5 = $wcs$4;
       } else {
        if ($wcs$4) HEAP32[$wcs$4 + ($i$4 << 2) >> 2] = 0;
        if (!$s$3) {
         $p$10 = $p$9;
         $s$4 = 0;
         $wcs$5 = $wcs$4;
         break L67;
        }
        HEAP8[$s$3 + $i$4 >> 0] = 0;
        $p$10 = $p$9;
        $s$4 = $s$3;
        $wcs$5 = $wcs$4;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       $base$0 = 16;
       label = 134;
       break;
      }
     case 111:
      {
       $base$0 = 8;
       label = 134;
       break;
      }
     case 117:
     case 100:
      {
       $base$0 = 10;
       label = 134;
       break;
      }
     case 105:
      {
       $base$0 = 0;
       label = 134;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       $310 = +___floatscan($f, $$size$0, 0);
       if ((HEAP32[$9 >> 2] | 0) == ((HEAP32[$10 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0)) {
        $alloc$2 = $alloc$0;
        $matches$2 = $matches$0104;
        $s$8 = $s$1;
        $wcs$9 = $wcs$1;
        break L6;
       }
       if (!$dest$0) {
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
       } else switch ($$size$0 | 0) {
       case 0:
        {
         HEAPF32[$dest$0 >> 2] = $310;
         $p$10 = $p$5;
         $s$4 = $s$1;
         $wcs$5 = $wcs$1;
         break L67;
         break;
        }
       case 1:
        {
         HEAPF64[$dest$0 >> 3] = $310;
         $p$10 = $p$5;
         $s$4 = $s$1;
         $wcs$5 = $wcs$1;
         break L67;
         break;
        }
       case 2:
        {
         HEAPF64[$dest$0 >> 3] = $310;
         $p$10 = $p$5;
         $s$4 = $s$1;
         $wcs$5 = $wcs$1;
         break L67;
         break;
        }
       default:
        {
         $p$10 = $p$5;
         $s$4 = $s$1;
         $wcs$5 = $wcs$1;
         break L67;
        }
       }
       break;
      }
     default:
      {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
      }
     } while (0);
     L168 : do if ((label | 0) == 134) {
      label = 0;
      $291 = ___intscan($f, $base$0, 0, -1, -1) | 0;
      if ((HEAP32[$9 >> 2] | 0) == ((HEAP32[$10 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0)) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0104;
       $s$8 = $s$1;
       $wcs$9 = $wcs$1;
       break L6;
      }
      if (($dest$0 | 0) != 0 & ($$ | 0) == 112) {
       HEAP32[$dest$0 >> 2] = $291;
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
       break;
      }
      if (!$dest$0) {
       $p$10 = $p$5;
       $s$4 = $s$1;
       $wcs$5 = $wcs$1;
      } else switch ($$size$0 | 0) {
      case -2:
       {
        HEAP8[$dest$0 >> 0] = $291;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L168;
        break;
       }
      case -1:
       {
        HEAP16[$dest$0 >> 1] = $291;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L168;
        break;
       }
      case 0:
       {
        HEAP32[$dest$0 >> 2] = $291;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L168;
        break;
       }
      case 1:
       {
        HEAP32[$dest$0 >> 2] = $291;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L168;
        break;
       }
      case 3:
       {
        $306 = $dest$0;
        HEAP32[$306 >> 2] = $291;
        HEAP32[$306 + 4 >> 2] = tempRet0;
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L168;
        break;
       }
      default:
       {
        $p$10 = $p$5;
        $s$4 = $s$1;
        $wcs$5 = $wcs$1;
        break L168;
       }
      }
     } while (0);
     $matches$1 = (($dest$0 | 0) != 0 & 1) + $matches$0104 | 0;
     $p$11 = $p$10;
     $pos$2 = (HEAP32[$9 >> 2] | 0) + $pos$1 + (HEAP32[$7 >> 2] | 0) - (HEAP32[$10 >> 2] | 0) | 0;
     $s$5 = $s$4;
     $wcs$6 = $wcs$5;
     break L8;
    } while (0);
    $51 = $p$0109 + ($47 & 1) | 0;
    ___shlim($f, 0);
    $52 = HEAP32[$7 >> 2] | 0;
    if ($52 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
     HEAP32[$7 >> 2] = $52 + 1;
     $62 = HEAPU8[$52 >> 0] | 0;
    } else $62 = ___shgetc($f) | 0;
    if (($62 | 0) != (HEAPU8[$51 >> 0] | 0)) {
     $$lcssa384 = $62;
     $matches$0104$lcssa = $matches$0104;
     $s$0107$lcssa = $s$0107;
     $wcs$0103$lcssa = $wcs$0103;
     label = 21;
     break L6;
    }
    $matches$1 = $matches$0104;
    $p$11 = $51;
    $pos$2 = $pos$0108 + 1 | 0;
    $s$5 = $s$0107;
    $wcs$6 = $wcs$0103;
   } else {
    $p$1 = $p$0109;
    while (1) {
     $20 = $p$1 + 1 | 0;
     if (!(_isspace(HEAPU8[$20 >> 0] | 0) | 0)) {
      $p$1$lcssa = $p$1;
      break;
     } else $p$1 = $20;
    }
    ___shlim($f, 0);
    do {
     $25 = HEAP32[$7 >> 2] | 0;
     if ($25 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $25 + 1;
      $32 = HEAPU8[$25 >> 0] | 0;
     } else $32 = ___shgetc($f) | 0;
    } while ((_isspace($32) | 0) != 0);
    $$pre = HEAP32[$7 >> 2] | 0;
    if (!(HEAP32[$8 >> 2] | 0)) $41 = $$pre; else {
     $37 = $$pre + -1 | 0;
     HEAP32[$7 >> 2] = $37;
     $41 = $37;
    }
    $matches$1 = $matches$0104;
    $p$11 = $p$1$lcssa;
    $pos$2 = (HEAP32[$9 >> 2] | 0) + $pos$0108 + $41 - (HEAP32[$10 >> 2] | 0) | 0;
    $s$5 = $s$0107;
    $wcs$6 = $wcs$0103;
   } while (0);
   $p$0109 = $p$11 + 1 | 0;
   $17 = HEAP8[$p$0109 >> 0] | 0;
   if (!($17 << 24 >> 24)) {
    $matches$3 = $matches$1;
    break L4;
   } else {
    $matches$0104 = $matches$1;
    $pos$0108 = $pos$2;
    $s$0107 = $s$5;
    $wcs$0103 = $wcs$6;
   }
  }
  if ((label | 0) == 21) {
   if (HEAP32[$8 >> 2] | 0) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
   if (($matches$0104$lcssa | 0) != 0 | ($$lcssa384 | 0) > -1) {
    $matches$3 = $matches$0104$lcssa;
    break;
   } else {
    $alloc$1 = 0;
    $s$7 = $s$0107$lcssa;
    $wcs$8 = $wcs$0103$lcssa;
    label = 153;
   }
  } else if ((label | 0) == 152) if (!$matches$0104376) {
   $alloc$1 = $alloc$0400;
   $s$7 = $s$6;
   $wcs$8 = $wcs$7;
   label = 153;
  } else {
   $alloc$2 = $alloc$0400;
   $matches$2 = $matches$0104376;
   $s$8 = $s$6;
   $wcs$9 = $wcs$7;
  }
  if ((label | 0) == 153) {
   $alloc$2 = $alloc$1;
   $matches$2 = -1;
   $s$8 = $s$7;
   $wcs$9 = $wcs$8;
  }
  if (!$alloc$2) $matches$3 = $matches$2; else {
   _free($s$8);
   _free($wcs$9);
   $matches$3 = $matches$2;
  }
 } while (0);
 if ($334) ___unlockfile($f);
 STACKTOP = sp;
 return $matches$3 | 0;
}

function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb($agg$result, $obj_, $counter, $skip) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 $counter = $counter | 0;
 $skip = $skip | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i14 = 0, $$0$i$i$i$i52 = 0, $$0$i$i$i16 = 0, $$0$i$i$i54 = 0, $$0$i7$i = 0, $$0$i7$i29 = 0, $$0$i7$i45 = 0, $$0$i7$i67 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph6$i$i$i = 0, $$01 = 0, $$01$i$i$i = 0, $$01$i$i$i19 = 0, $$01$i$i$i57 = 0, $$01$ph5$i$i$i = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$idx$val2$i = 0, $$idx$val2$i11 = 0, $$idx$val2$i1174107 = 0, $$idx$val2$i75109 = 0, $$lcssa = 0, $$lcssa204 = 0, $$lcssa210 = 0, $$lcssa211 = 0, $$lcssa214 = 0, $$lcssa215 = 0, $$lcssa218 = 0, $$lcssa219 = 0, $$pre$phi133Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $105 = 0, $119 = 0, $120 = 0, $122 = 0, $124 = 0, $128 = 0, $129 = 0, $134 = 0, $135 = 0, $142 = 0, $144 = 0, $148 = 0, $152 = 0, $157 = 0, $159 = 0, $16 = 0, $161 = 0, $164 = 0, $165 = 0, $168 = 0, $169 = 0, $178 = 0, $182 = 0, $187 = 0, $189 = 0, $19 = 0, $192 = 0, $196 = 0, $2 = 0, $20 = 0, $202 = 0, $204 = 0, $207 = 0, $213 = 0, $215 = 0, $217 = 0, $218 = 0, $22 = 0, $220 = 0, $222 = 0, $226 = 0, $227 = 0, $23 = 0, $232 = 0, $233 = 0, $240 = 0, $242 = 0, $246 = 0, $25 = 0, $251 = 0, $253 = 0, $256 = 0, $263 = 0, $265 = 0, $267 = 0, $27 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $3 = 0, $31 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $45 = 0, $47 = 0, $51 = 0, $56 = 0, $58 = 0, $6 = 0, $61 = 0, $65 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $75 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $87 = 0, $90 = 0, $92 = 0, $93 = 0, $96 = 0, $97 = 0, $99 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$be$in$i$i23 = 0, $__nd$0$be$in$i$i39 = 0, $__nd$0$be$in$i$i61 = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa202 = 0, $__nd$0$i$i$lcssa203 = 0, $__nd$0$i$i22 = 0, $__nd$0$i$i22$lcssa = 0, $__nd$0$i$i22$lcssa207 = 0, $__nd$0$i$i22$lcssa208 = 0, $__nd$0$i$i22209 = 0, $__nd$0$i$i38 = 0, $__nd$0$i$i38$lcssa = 0, $__nd$0$i$i38$lcssa216 = 0, $__nd$0$i$i38$lcssa217 = 0, $__nd$0$i$i60 = 0, $__nd$0$i$i60$lcssa = 0, $__nd$0$i$i60$lcssa212 = 0, $__nd$0$i$i60$lcssa213 = 0, $__parent$i = 0, $__parent$i20 = 0, $__parent$i36 = 0, $__parent$i58 = 0, $__r$0$i = 0, $__r$0$i33 = 0, $__r$0$i49 = 0, $__r$0$i71 = 0, $counter2 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, $r = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $__parent$i58 = sp + 12 | 0;
 $__parent$i36 = sp + 32 | 0;
 $__parent$i20 = sp + 16 | 0;
 $__parent$i = sp + 36 | 0;
 $r = sp + 44 | 0;
 $0 = sp;
 $1 = sp + 20 | 0;
 $counter2 = sp + 40 | 0;
 $2 = $r + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $r + 8 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $r + 4 | 0;
 HEAP32[$r >> 2] = $4;
 $6 = $4;
 L1 : do if ($obj_) {
  $7 = ___dynamic_cast($obj_, 432, 416, 0) | 0;
  L3 : do if (!$7) {
   $71 = ___dynamic_cast($obj_, 432, 456, 0) | 0;
   do if (!$71) {
    $196 = ___dynamic_cast($obj_, 432, 472, 0) | 0;
    if ($196) {
     HEAP32[$counter2 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiii(18, $agg$result | 0, HEAP32[$196 + 8 >> 2] | 0, $counter2 | 0, HEAP32[$196 + 12 >> 2] | 0);
     $202 = __THREW__;
     __THREW__ = 0;
     if ($202 & 1) break;
     $271 = HEAP32[$4 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $271);
     STACKTOP = sp;
     return;
    }
    $204 = ___dynamic_cast($obj_, 432, 488, 0) | 0;
    if (!$204) break L1;
    $207 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
    HEAP32[$counter >> 2] = $207;
    if ($207 >>> 0 <= $skip >>> 0) {
     HEAP32[$agg$result + 4 >> 2] = 0;
     HEAP32[$agg$result + 8 >> 2] = 0;
     HEAP32[$agg$result >> 2] = $agg$result + 4;
     $271 = 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $271);
     STACKTOP = sp;
     return;
    }
    $$idx$val2$i11 = HEAP32[$204 + 28 >> 2] | 0;
    $213 = $204 + 32 | 0;
    if (($$idx$val2$i11 | 0) == ($213 | 0)) break L1;
    $$idx$val2$i1174107 = $$idx$val2$i11;
    $217 = 0;
    while (1) {
     $215 = $$idx$val2$i1174107 + 16 | 0;
     do if (!$217) {
      HEAP32[$__parent$i >> 2] = $4;
      $$0$i7$i = $4;
      $240 = $6;
      label = 106;
     } else {
      $218 = HEAP32[$215 >> 2] | 0;
      $__nd$0$i$i = $217;
      while (1) {
       $220 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
       if ($218 >>> 0 < $220 >>> 0) {
        $222 = HEAP32[$__nd$0$i$i >> 2] | 0;
        if (!$222) {
         $$lcssa204 = $__nd$0$i$i;
         $__nd$0$i$i$lcssa203 = $__nd$0$i$i;
         label = 99;
         break;
        } else $__nd$0$be$in$i$i = $222;
       } else {
        if ($220 >>> 0 >= $218 >>> 0) {
         $__nd$0$i$i$lcssa = $__nd$0$i$i;
         label = 105;
         break;
        }
        $226 = $__nd$0$i$i + 4 | 0;
        $227 = HEAP32[$226 >> 2] | 0;
        if (!$227) {
         $$lcssa = $226;
         $__nd$0$i$i$lcssa202 = $__nd$0$i$i;
         label = 103;
         break;
        } else $__nd$0$be$in$i$i = $227;
       }
       $__nd$0$i$i = $__nd$0$be$in$i$i;
      }
      if ((label | 0) == 99) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa203;
       $$0$i7$i = $$lcssa204;
       $240 = $__nd$0$i$i$lcssa203;
       label = 106;
       break;
      } else if ((label | 0) == 103) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa202;
       $$0$i7$i = $$lcssa;
       $240 = $__nd$0$i$i$lcssa202;
       label = 106;
       break;
      } else if ((label | 0) == 105) {
       label = 0;
       HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
       if (!$__nd$0$i$i$lcssa) {
        $$0$i7$i = $__parent$i;
        $240 = $__nd$0$i$i$lcssa;
        label = 106;
        break;
       } else {
        $__r$0$i = $__nd$0$i$i$lcssa;
        break;
       }
      }
     } while (0);
     if ((label | 0) == 106) {
      label = 0;
      __THREW__ = 0;
      $232 = invoke_ii(67, 24) | 0;
      $233 = __THREW__;
      __THREW__ = 0;
      if ($233 & 1) break;
      HEAP32[$232 + 16 >> 2] = HEAP32[$215 >> 2];
      HEAP32[$232 + 20 >> 2] = 0;
      HEAP32[$232 >> 2] = 0;
      HEAP32[$232 + 4 >> 2] = 0;
      HEAP32[$232 + 8 >> 2] = $240;
      HEAP32[$$0$i7$i >> 2] = $232;
      $242 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
      if (!$242) $246 = $232; else {
       HEAP32[$r >> 2] = $242;
       $246 = HEAP32[$$0$i7$i >> 2] | 0;
      }
      __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $246);
      HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
      $__r$0$i = $232;
     }
     HEAP32[$__r$0$i + 20 >> 2] = 2;
     $251 = HEAP32[$$idx$val2$i1174107 + 4 >> 2] | 0;
     if (!$251) {
      $$0$i$i$i = $$idx$val2$i1174107;
      while (1) {
       $256 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$256 >> 2] | 0) == ($$0$i$i$i | 0)) {
        $$01$i$i$i = $256;
        break;
       } else $$0$i$i$i = $256;
      }
     } else {
      $$0$i$i$i$i = $251;
      while (1) {
       $253 = HEAP32[$$0$i$i$i$i >> 2] | 0;
       if (!$253) {
        $$01$i$i$i = $$0$i$i$i$i;
        break;
       } else $$0$i$i$i$i = $253;
      }
     }
     if (($$01$i$i$i | 0) == ($213 | 0)) break L1;
     $$idx$val2$i1174107 = $$01$i$i$i;
     $217 = HEAP32[$4 >> 2] | 0;
    }
    $65 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $65;
    $lpad$phi$index3 = tempRet0;
    break L3;
   } else {
    __THREW__ = 0;
    invoke_viiii(18, $0 | 0, HEAP32[$71 + 12 >> 2] | 0, $counter | 0, $skip | 0);
    $75 = __THREW__;
    __THREW__ = 0;
    if (!($75 & 1)) {
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, HEAP32[$4 >> 2] | 0);
     HEAP32[$r >> 2] = HEAP32[$0 >> 2];
     $79 = $0 + 4 | 0;
     $80 = HEAP32[$79 >> 2] | 0;
     HEAP32[$4 >> 2] = $80;
     $81 = $0 + 8 | 0;
     $82 = HEAP32[$81 >> 2] | 0;
     HEAP32[$3 >> 2] = $82;
     if (!$82) {
      HEAP32[$r >> 2] = $4;
      $87 = $80;
     } else {
      HEAP32[$80 + 8 >> 2] = $4;
      HEAP32[$0 >> 2] = $79;
      HEAP32[$79 >> 2] = 0;
      HEAP32[$81 >> 2] = 0;
      $87 = 0;
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $87);
     __THREW__ = 0;
     invoke_viiii(18, $1 | 0, HEAP32[$71 + 8 >> 2] | 0, $counter | 0, $skip | 0);
     $90 = __THREW__;
     __THREW__ = 0;
     if (!($90 & 1)) {
      $92 = HEAP32[$1 >> 2] | 0;
      $93 = $1 + 4 | 0;
      L57 : do if (($92 | 0) != ($93 | 0)) {
       $100 = $92;
       L59 : while (1) {
        $99 = $100 + 16 | 0;
        $101 = HEAP32[$4 >> 2] | 0;
        $102 = ($101 | 0) == 0;
        do if ($102) {
         $273 = HEAP32[$100 + 20 >> 2] | 0;
         label = 60;
        } else {
         $105 = HEAP32[$99 >> 2] | 0;
         $$0$ph6$i$i$i = $4;
         $$01$ph5$i$i$i = $101;
         L64 : while (1) {
          $$013$i$i$i = $$01$ph5$i$i$i;
          while (1) {
           if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $105 >>> 0) {
            $$013$i$i$i$lcssa = $$013$i$i$i;
            break;
           }
           $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
           if (!$$013$i$i$i) {
            $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i;
            break L64;
           }
          }
          $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
          if (!$$01$ph5$i$i$i) {
           $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa;
           break;
          } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
         }
         if (($$0$ph$lcssa$i$i$i | 0) != ($4 | 0)) if ($105 >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
          if (HEAP32[$$0$ph$lcssa$i$i$i + 20 >> 2] | 0) break;
          $157 = HEAP32[$100 + 20 >> 2] | 0;
          $__nd$0$i$i22 = $101;
          while (1) {
           $159 = HEAP32[$__nd$0$i$i22 + 16 >> 2] | 0;
           if ($105 >>> 0 < $159 >>> 0) {
            $161 = HEAP32[$__nd$0$i$i22 >> 2] | 0;
            if (!$161) {
             $$lcssa211 = $__nd$0$i$i22;
             $__nd$0$i$i22$lcssa208 = $__nd$0$i$i22;
             label = 71;
             break;
            } else $__nd$0$be$in$i$i23 = $161;
           } else {
            if ($159 >>> 0 >= $105 >>> 0) {
             $__nd$0$i$i22$lcssa = $__nd$0$i$i22;
             label = 76;
             break;
            }
            $164 = $__nd$0$i$i22 + 4 | 0;
            $165 = HEAP32[$164 >> 2] | 0;
            if (!$165) {
             $$lcssa210 = $164;
             $__nd$0$i$i22$lcssa207 = $__nd$0$i$i22;
             label = 75;
             break;
            } else $__nd$0$be$in$i$i23 = $165;
           }
           $__nd$0$i$i22 = $__nd$0$be$in$i$i23;
          }
          if ((label | 0) == 71) {
           label = 0;
           HEAP32[$__parent$i20 >> 2] = $__nd$0$i$i22$lcssa208;
           $$0$i7$i29 = $$lcssa211;
           $__nd$0$i$i22209 = $__nd$0$i$i22$lcssa208;
           label = 77;
          } else if ((label | 0) == 75) {
           label = 0;
           HEAP32[$__parent$i20 >> 2] = $__nd$0$i$i22$lcssa207;
           $$0$i7$i29 = $$lcssa210;
           $__nd$0$i$i22209 = $__nd$0$i$i22$lcssa207;
           label = 77;
          } else if ((label | 0) == 76) {
           label = 0;
           HEAP32[$__parent$i20 >> 2] = $__nd$0$i$i22$lcssa;
           if (!$__nd$0$i$i22$lcssa) {
            $$0$i7$i29 = $__parent$i20;
            $__nd$0$i$i22209 = $__nd$0$i$i22$lcssa;
            label = 77;
           } else $__r$0$i33 = $__nd$0$i$i22$lcssa;
          }
          if ((label | 0) == 77) {
           label = 0;
           __THREW__ = 0;
           $168 = invoke_ii(67, 24) | 0;
           $169 = __THREW__;
           __THREW__ = 0;
           if ($169 & 1) break L59;
           HEAP32[$168 + 16 >> 2] = HEAP32[$99 >> 2];
           HEAP32[$168 + 20 >> 2] = 0;
           HEAP32[$168 >> 2] = 0;
           HEAP32[$168 + 4 >> 2] = 0;
           HEAP32[$168 + 8 >> 2] = $__nd$0$i$i22209;
           HEAP32[$$0$i7$i29 >> 2] = $168;
           $178 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
           if (!$178) $182 = $168; else {
            HEAP32[$r >> 2] = $178;
            $182 = HEAP32[$$0$i7$i29 >> 2] | 0;
           }
           __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $182);
           HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
           $__r$0$i33 = $168;
          }
          HEAP32[$__r$0$i33 + 20 >> 2] = $157;
          break;
         }
         $119 = HEAP32[$100 + 20 >> 2] | 0;
         if ($102) {
          $273 = $119;
          label = 60;
         } else {
          $120 = HEAP32[$99 >> 2] | 0;
          $__nd$0$i$i60 = $101;
          while (1) {
           $122 = HEAP32[$__nd$0$i$i60 + 16 >> 2] | 0;
           if ($120 >>> 0 < $122 >>> 0) {
            $124 = HEAP32[$__nd$0$i$i60 >> 2] | 0;
            if (!$124) {
             $$lcssa215 = $__nd$0$i$i60;
             $__nd$0$i$i60$lcssa213 = $__nd$0$i$i60;
             label = 55;
             break;
            } else $__nd$0$be$in$i$i61 = $124;
           } else {
            if ($122 >>> 0 >= $120 >>> 0) {
             $__nd$0$i$i60$lcssa = $__nd$0$i$i60;
             label = 61;
             break;
            }
            $128 = $__nd$0$i$i60 + 4 | 0;
            $129 = HEAP32[$128 >> 2] | 0;
            if (!$129) {
             $$lcssa214 = $128;
             $__nd$0$i$i60$lcssa212 = $__nd$0$i$i60;
             label = 59;
             break;
            } else $__nd$0$be$in$i$i61 = $129;
           }
           $__nd$0$i$i60 = $__nd$0$be$in$i$i61;
          }
          if ((label | 0) == 55) {
           label = 0;
           HEAP32[$__parent$i58 >> 2] = $__nd$0$i$i60$lcssa213;
           $$0$i7$i67 = $$lcssa215;
           $142 = $__nd$0$i$i60$lcssa213;
           $274 = $119;
           label = 62;
           break;
          } else if ((label | 0) == 59) {
           label = 0;
           HEAP32[$__parent$i58 >> 2] = $__nd$0$i$i60$lcssa212;
           $$0$i7$i67 = $$lcssa214;
           $142 = $__nd$0$i$i60$lcssa212;
           $274 = $119;
           label = 62;
           break;
          } else if ((label | 0) == 61) {
           label = 0;
           HEAP32[$__parent$i58 >> 2] = $__nd$0$i$i60$lcssa;
           if (!$__nd$0$i$i60$lcssa) {
            $$0$i7$i67 = $__parent$i58;
            $142 = $__nd$0$i$i60$lcssa;
            $274 = $119;
            label = 62;
            break;
           } else {
            $152 = $119;
            $__r$0$i71 = $__nd$0$i$i60$lcssa;
            label = 66;
            break;
           }
          }
         }
        } while (0);
        if ((label | 0) == 60) {
         label = 0;
         HEAP32[$__parent$i58 >> 2] = $4;
         $$0$i7$i67 = $4;
         $142 = $6;
         $274 = $273;
         label = 62;
        }
        if ((label | 0) == 62) {
         label = 0;
         __THREW__ = 0;
         $134 = invoke_ii(67, 24) | 0;
         $135 = __THREW__;
         __THREW__ = 0;
         if ($135 & 1) break;
         HEAP32[$134 + 16 >> 2] = HEAP32[$99 >> 2];
         HEAP32[$134 + 20 >> 2] = 0;
         HEAP32[$134 >> 2] = 0;
         HEAP32[$134 + 4 >> 2] = 0;
         HEAP32[$134 + 8 >> 2] = $142;
         HEAP32[$$0$i7$i67 >> 2] = $134;
         $144 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
         if (!$144) $148 = $134; else {
          HEAP32[$r >> 2] = $144;
          $148 = HEAP32[$$0$i7$i67 >> 2] | 0;
         }
         __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $148);
         HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
         $152 = $274;
         $__r$0$i71 = $134;
         label = 66;
        }
        if ((label | 0) == 66) {
         label = 0;
         HEAP32[$__r$0$i71 + 20 >> 2] = $152;
        }
        $187 = HEAP32[$100 + 4 >> 2] | 0;
        if (!$187) {
         $$0$i$i$i16 = $100;
         while (1) {
          $192 = HEAP32[$$0$i$i$i16 + 8 >> 2] | 0;
          if ((HEAP32[$192 >> 2] | 0) == ($$0$i$i$i16 | 0)) {
           $$01$i$i$i19 = $192;
           break;
          } else $$0$i$i$i16 = $192;
         }
        } else {
         $$0$i$i$i$i14 = $187;
         while (1) {
          $189 = HEAP32[$$0$i$i$i$i14 >> 2] | 0;
          if (!$189) {
           $$01$i$i$i19 = $$0$i$i$i$i14;
           break;
          } else $$0$i$i$i$i14 = $189;
         }
        }
        if (($$01$i$i$i19 | 0) == ($93 | 0)) break L57; else $100 = $$01$i$i$i19;
       }
       $96 = ___cxa_find_matching_catch() | 0;
       $97 = tempRet0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$93 >> 2] | 0);
       $$0 = $96;
       $$01 = $97;
       $$pre$phi133Z2D = $4;
       $$pre$phiZ2D = $r;
       $272 = HEAP32[$$pre$phi133Z2D >> 2] | 0;
       __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $272);
       ___resumeException($$0 | 0);
      } while (0);
      __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($1, HEAP32[$93 >> 2] | 0);
      break L1;
     }
    }
   } while (0);
   $69 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $69;
   $lpad$phi$index3 = tempRet0;
  } else {
   $10 = (HEAP32[$counter >> 2] | 0) + 1 | 0;
   HEAP32[$counter >> 2] = $10;
   if ($10 >>> 0 <= $skip >>> 0) {
    HEAP32[$agg$result + 4 >> 2] = 0;
    HEAP32[$agg$result + 8 >> 2] = 0;
    HEAP32[$agg$result >> 2] = $agg$result + 4;
    $271 = 0;
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $271);
    STACKTOP = sp;
    return;
   }
   $$idx$val2$i = HEAP32[$7 + 20 >> 2] | 0;
   $16 = $7 + 24 | 0;
   if (($$idx$val2$i | 0) == ($16 | 0)) break L1;
   $$idx$val2$i75109 = $$idx$val2$i;
   $22 = 0;
   while (1) {
    $19 = HEAP32[$$idx$val2$i75109 + 20 >> 2] | 0;
    $20 = $$idx$val2$i75109 + 16 | 0;
    do if (!$22) {
     HEAP32[$__parent$i36 >> 2] = $4;
     $$0$i7$i45 = $4;
     $45 = $6;
     label = 18;
    } else {
     $23 = HEAP32[$20 >> 2] | 0;
     $__nd$0$i$i38 = $22;
     while (1) {
      $25 = HEAP32[$__nd$0$i$i38 + 16 >> 2] | 0;
      if ($23 >>> 0 < $25 >>> 0) {
       $27 = HEAP32[$__nd$0$i$i38 >> 2] | 0;
       if (!$27) {
        $$lcssa219 = $__nd$0$i$i38;
        $__nd$0$i$i38$lcssa217 = $__nd$0$i$i38;
        label = 11;
        break;
       } else $__nd$0$be$in$i$i39 = $27;
      } else {
       if ($25 >>> 0 >= $23 >>> 0) {
        $__nd$0$i$i38$lcssa = $__nd$0$i$i38;
        label = 17;
        break;
       }
       $31 = $__nd$0$i$i38 + 4 | 0;
       $32 = HEAP32[$31 >> 2] | 0;
       if (!$32) {
        $$lcssa218 = $31;
        $__nd$0$i$i38$lcssa216 = $__nd$0$i$i38;
        label = 15;
        break;
       } else $__nd$0$be$in$i$i39 = $32;
      }
      $__nd$0$i$i38 = $__nd$0$be$in$i$i39;
     }
     if ((label | 0) == 11) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa217;
      $$0$i7$i45 = $$lcssa219;
      $45 = $__nd$0$i$i38$lcssa217;
      label = 18;
      break;
     } else if ((label | 0) == 15) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa216;
      $$0$i7$i45 = $$lcssa218;
      $45 = $__nd$0$i$i38$lcssa216;
      label = 18;
      break;
     } else if ((label | 0) == 17) {
      label = 0;
      HEAP32[$__parent$i36 >> 2] = $__nd$0$i$i38$lcssa;
      if (!$__nd$0$i$i38$lcssa) {
       $$0$i7$i45 = $__parent$i36;
       $45 = $__nd$0$i$i38$lcssa;
       label = 18;
       break;
      } else {
       $__r$0$i49 = $__nd$0$i$i38$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 18) {
     label = 0;
     __THREW__ = 0;
     $37 = invoke_ii(67, 24) | 0;
     $38 = __THREW__;
     __THREW__ = 0;
     if ($38 & 1) break;
     HEAP32[$37 + 16 >> 2] = HEAP32[$20 >> 2];
     HEAP32[$37 + 20 >> 2] = 0;
     HEAP32[$37 >> 2] = 0;
     HEAP32[$37 + 4 >> 2] = 0;
     HEAP32[$37 + 8 >> 2] = $45;
     HEAP32[$$0$i7$i45 >> 2] = $37;
     $47 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
     if (!$47) $51 = $37; else {
      HEAP32[$r >> 2] = $47;
      $51 = HEAP32[$$0$i7$i45 >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$2 >> 2] | 0, $51);
     HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
     $__r$0$i49 = $37;
    }
    HEAP32[$__r$0$i49 + 20 >> 2] = $19;
    $56 = HEAP32[$$idx$val2$i75109 + 4 >> 2] | 0;
    if (!$56) {
     $$0$i$i$i54 = $$idx$val2$i75109;
     while (1) {
      $61 = HEAP32[$$0$i$i$i54 + 8 >> 2] | 0;
      if ((HEAP32[$61 >> 2] | 0) == ($$0$i$i$i54 | 0)) {
       $$01$i$i$i57 = $61;
       break;
      } else $$0$i$i$i54 = $61;
     }
    } else {
     $$0$i$i$i$i52 = $56;
     while (1) {
      $58 = HEAP32[$$0$i$i$i$i52 >> 2] | 0;
      if (!$58) {
       $$01$i$i$i57 = $$0$i$i$i$i52;
       break;
      } else $$0$i$i$i$i52 = $58;
     }
    }
    if (($$01$i$i$i57 | 0) == ($16 | 0)) break L1;
    $$idx$val2$i75109 = $$01$i$i$i57;
    $22 = HEAP32[$4 >> 2] | 0;
   }
   $67 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $67;
   $lpad$phi$index3 = tempRet0;
  } while (0);
  $$0 = $lpad$phi$index;
  $$01 = $lpad$phi$index3;
  $$pre$phi133Z2D = $4;
  $$pre$phiZ2D = $r;
  $272 = HEAP32[$$pre$phi133Z2D >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($$pre$phiZ2D, $272);
  ___resumeException($$0 | 0);
 } while (0);
 HEAP32[$agg$result >> 2] = HEAP32[$r >> 2];
 $263 = HEAP32[$r + 4 >> 2] | 0;
 HEAP32[$agg$result + 4 >> 2] = $263;
 $265 = HEAP32[$3 >> 2] | 0;
 HEAP32[$agg$result + 8 >> 2] = $265;
 $267 = $agg$result + 4 | 0;
 if (!$265) {
  HEAP32[$agg$result >> 2] = $267;
  $271 = $263;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $271);
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$263 + 8 >> 2] = $267;
  HEAP32[$r >> 2] = $4;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  $271 = 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($r, $271);
  STACKTOP = sp;
  return;
 }
}

function __Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location($agg$result, $c, $filename, $begin) {
 $agg$result = $agg$result | 0;
 $c = $c | 0;
 $filename = $filename | 0;
 $begin = $begin | 0;
 var $$0 = 0, $$0$i = 0, $$0$i34 = 0, $$0$i52 = 0, $$01$i = 0, $$01$i33 = 0, $$01$i51 = 0, $$01167 = 0, $$01366 = 0, $$05 = 0, $$07 = 0, $$09 = 0, $$11271 = 0, $$11470 = 0, $$2 = 0, $$215 = 0, $$31674 = 0, $$375 = 0, $$4 = 0, $$417 = 0, $$51878 = 0, $$579 = 0, $$6 = 0, $$619 = 0, $$7 = 0, $$720 = 0, $0 = 0, $1 = 0, $100 = 0, $101 = 0, $106 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $119 = 0, $120 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $141 = 0, $146 = 0, $148 = 0, $150 = 0, $152 = 0, $153 = 0, $154 = 0, $156 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $164 = 0, $166 = 0, $167 = 0, $169 = 0, $172 = 0, $177 = 0, $178 = 0, $183 = 0, $188 = 0, $189 = 0, $19 = 0, $194 = 0, $196 = 0, $197 = 0, $199 = 0, $2 = 0, $201 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $209 = 0, $210 = 0, $213 = 0, $218 = 0, $220 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $228 = 0, $230 = 0, $231 = 0, $232 = 0, $236 = 0, $238 = 0, $239 = 0, $24 = 0, $241 = 0, $244 = 0, $249 = 0, $25 = 0, $250 = 0, $255 = 0, $260 = 0, $261 = 0, $266 = 0, $268 = 0, $269 = 0, $271 = 0, $273 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $280 = 0, $281 = 0, $286 = 0, $3 = 0, $30 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $64 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $83 = 0, $87 = 0, $89 = 0, $9 = 0, $90 = 0, $92 = 0, $95 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i31$index16Z2D = 0, $eh$lpad$body$i31$indexZ2D = 0, $eh$lpad$body$i49$index21Z2D = 0, $eh$lpad$body$i49$indexZ2D = 0, $eh$lpad$body22$index9Z2D = 0, $eh$lpad$body22$indexZ2D = 0, $ss = 0, $ss1 = 0, $ss2 = 0, $state$0 = 0, $state$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 528 | 0;
 $0 = sp + 518 | 0;
 $1 = sp + 48 | 0;
 $2 = sp + 516 | 0;
 $3 = sp + 24 | 0;
 $4 = sp + 517 | 0;
 $5 = sp;
 $6 = sp + 504 | 0;
 $ss = sp + 72 | 0;
 $7 = sp + 60 | 0;
 $ss1 = sp + 216 | 0;
 $8 = sp + 36 | 0;
 $ss2 = sp + 360 | 0;
 $9 = sp + 12 | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $state$0 = 0;
 L1 : while (1) {
  L3 : do switch ($state$0 | 0) {
  case 0:
   {
    $11 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($11 << 24 >> 24 | 0) {
    case 48:
     {
      $280 = $11;
      $state$1 = 1;
      break L3;
      break;
     }
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
     break;
    default:
     {
      label = 6;
      break L1;
     }
    }
    $280 = $11;
    $state$1 = 2;
    break;
   }
  case 1:
   {
    $50 = HEAP32[$c >> 2] | 0;
    $51 = HEAP8[$50 >> 0] | 0;
    switch ($51 << 24 >> 24 | 0) {
    case 46:
     {
      $280 = $51;
      $state$1 = 3;
      break L3;
      break;
     }
    case 69:
    case 101:
     break;
    default:
     {
      $286 = $50;
      label = 90;
      break L1;
     }
    }
    $280 = $51;
    $state$1 = 5;
    break;
   }
  case 2:
   {
    $53 = HEAP32[$c >> 2] | 0;
    $54 = HEAP8[$53 >> 0] | 0;
    switch ($54 << 24 >> 24 | 0) {
    case 46:
     {
      $280 = $54;
      $state$1 = 3;
      break L3;
      break;
     }
    case 69:
    case 101:
     {
      $280 = $54;
      $state$1 = 5;
      break L3;
      break;
     }
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     {
      $280 = $54;
      $state$1 = 2;
      break L3;
      break;
     }
    default:
     {
      $286 = $53;
      label = 90;
      break L1;
     }
    }
    break;
   }
  case 3:
   {
    $57 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($57 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $280 = $57;
     $state$1 = 4;
    } else {
     label = 20;
     break L1;
    }
    break;
   }
  case 4:
   {
    $130 = HEAP32[$c >> 2] | 0;
    $131 = HEAP8[$130 >> 0] | 0;
    switch ($131 << 24 >> 24 | 0) {
    case 69:
    case 101:
     {
      $280 = $131;
      $state$1 = 5;
      break L3;
      break;
     }
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    default:
     {
      $286 = $130;
      label = 90;
      break L1;
     }
    }
    $280 = $131;
    $state$1 = 4;
    break;
   }
  case 5:
   {
    $134 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    switch ($134 << 24 >> 24 | 0) {
    case 45:
    case 43:
     {
      $280 = $134;
      $state$1 = 6;
      break L3;
      break;
     }
    case 57:
    case 56:
    case 55:
    case 54:
    case 53:
    case 52:
    case 51:
    case 50:
    case 49:
    case 48:
     break;
    default:
     {
      label = 46;
      break L1;
     }
    }
    $280 = $134;
    $state$1 = 7;
    break;
   }
  case 6:
   {
    $206 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    if ((($206 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $280 = $206;
     $state$1 = 7;
    } else {
     label = 67;
     break L1;
    }
    break;
   }
  case 7:
   {
    $277 = HEAP32[$c >> 2] | 0;
    $278 = HEAP8[$277 >> 0] | 0;
    if ((($278 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
     $280 = $278;
     $state$1 = 7;
    } else {
     $286 = $277;
     label = 90;
     break L1;
    }
    break;
   }
  default:
   {
    $280 = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
    $state$1 = $state$0;
   }
  } while (0);
  __THREW__ = 0;
  invoke_vii(44, $agg$result | 0, $280 | 0);
  $281 = __THREW__;
  __THREW__ = 0;
  if ($281 & 1) {
   label = 35;
   break;
  }
  HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + 1;
  $state$0 = $state$1;
 }
 if ((label | 0) == 6) {
  $13 = ___cxa_allocate_exception(40) | 0;
  __THREW__ = 0;
  invoke_viii(3, $6 | 0, 15544, 19);
  $14 = __THREW__;
  __THREW__ = 0;
  L25 : do if ($14 & 1) {
   $46 = ___cxa_find_matching_catch() | 0;
   $$01167 = tempRet0;
   $$01366 = $46;
  } else {
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $filename | 0);
   $16 = __THREW__;
   __THREW__ = 0;
   do if ($16 & 1) $$09 = 1; else {
    $19 = $begin;
    $24 = HEAP32[$19 + 4 >> 2] | 0;
    $25 = $13 + 12 | 0;
    HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
    HEAP32[$25 + 4 >> 2] = $24;
    $30 = $begin;
    $35 = HEAP32[$30 + 4 >> 2] | 0;
    $36 = $13 + 20 | 0;
    HEAP32[$36 >> 2] = HEAP32[$30 >> 2];
    HEAP32[$36 + 4 >> 2] = $35;
    __THREW__ = 0;
    invoke_vii(40, $13 + 28 | 0, $6 | 0);
    $41 = __THREW__;
    __THREW__ = 0;
    if ($41 & 1) {
     $43 = ___cxa_find_matching_catch() | 0;
     $44 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
     $$01167 = $44;
     $$01366 = $43;
     break L25;
    } else {
     __THREW__ = 0;
     invoke_viii(4, $13 | 0, 8, 172);
     __THREW__ = 0;
     $$09 = 0;
     break;
    }
   } while (0);
   $48 = ___cxa_find_matching_catch() | 0;
   $49 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   if ($$09) {
    $$01167 = $49;
    $$01366 = $48;
   } else {
    $$7 = $49;
    $$720 = $48;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   }
  } while (0);
  ___cxa_free_exception($13 | 0);
  $$7 = $$01167;
  $$720 = $$01366;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
  ___resumeException($$720 | 0);
 } else if ((label | 0) == 20) {
  $59 = $ss + 64 | 0;
  $60 = $ss + 8 | 0;
  HEAP32[$60 >> 2] = 2912;
  $61 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 2952;
  HEAP32[$59 >> 2] = 2972;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $61 | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if ($64 & 1) {
   $77 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $77;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 2892;
   HEAP32[$ss + 64 >> 2] = 2932;
   HEAP32[$60 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $61 | 0);
   $69 = __THREW__;
   __THREW__ = 0;
   do if ($69 & 1) {
    $79 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $79;
   } else {
    HEAP32[$61 >> 2] = 2988;
    $71 = $ss + 44 | 0;
    HEAP32[$71 >> 2] = 0;
    HEAP32[$71 + 4 >> 2] = 0;
    HEAP32[$71 + 8 >> 2] = 0;
    HEAP32[$71 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $61 | 0, $5 | 0);
    $73 = __THREW__;
    __THREW__ = 0;
    if ($73 & 1) {
     $75 = ___cxa_find_matching_catch() | 0;
     $76 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($61);
     $eh$lpad$body$i$index2Z2D = $76;
     $eh$lpad$body$i$indexZ2D = $75;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    $81 = $ss + 8 | 0;
    __THREW__ = 0;
    $82 = invoke_iiii(29, $81 | 0, 15564, 47) | 0;
    $83 = __THREW__;
    __THREW__ = 0;
    L49 : do if ($83 & 1) label = 37; else {
     HEAP8[$4 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(29, $82 | 0, $4 | 0, 1) | 0;
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) label = 37; else {
      $89 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $7 | 0, $61 | 0);
      $90 = __THREW__;
      __THREW__ = 0;
      L52 : do if ($90 & 1) {
       $126 = ___cxa_find_matching_catch() | 0;
       $$11271 = tempRet0;
       $$11470 = $126;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $89 | 0, $filename | 0);
       $92 = __THREW__;
       __THREW__ = 0;
       do if ($92 & 1) $$07 = 1; else {
        $95 = $begin;
        $100 = HEAP32[$95 + 4 >> 2] | 0;
        $101 = $89 + 12 | 0;
        HEAP32[$101 >> 2] = HEAP32[$95 >> 2];
        HEAP32[$101 + 4 >> 2] = $100;
        $106 = $begin;
        $111 = HEAP32[$106 + 4 >> 2] | 0;
        $112 = $89 + 20 | 0;
        HEAP32[$112 >> 2] = HEAP32[$106 >> 2];
        HEAP32[$112 + 4 >> 2] = $111;
        __THREW__ = 0;
        invoke_vii(40, $89 + 28 | 0, $7 | 0);
        $117 = __THREW__;
        __THREW__ = 0;
        if ($117 & 1) {
         $119 = ___cxa_find_matching_catch() | 0;
         $120 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($89);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
         $$11271 = $120;
         $$11470 = $119;
         break L52;
        } else {
         __THREW__ = 0;
         invoke_viii(4, $89 | 0, 8, 172);
         __THREW__ = 0;
         $$07 = 0;
         break;
        }
       } while (0);
       $128 = ___cxa_find_matching_catch() | 0;
       $129 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
       if ($$07) {
        $$11271 = $129;
        $$11470 = $128;
       } else {
        $$2 = $129;
        $$215 = $128;
        break L49;
       }
      } while (0);
      ___cxa_free_exception($89 | 0);
      $$2 = $$11271;
      $$215 = $$11470;
     }
    } while (0);
    if ((label | 0) == 37) {
     $124 = ___cxa_find_matching_catch() | 0;
     $$2 = tempRet0;
     $$215 = $124;
    }
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$59 >> 2] = 2932;
    HEAP32[$81 >> 2] = 2912;
    HEAP32[$61 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($61);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($59);
    $$7 = $$2;
    $$720 = $$215;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($59);
  $eh$lpad$body22$index9Z2D = $$0$i;
  $eh$lpad$body22$indexZ2D = $$01$i;
 } else if ((label | 0) == 35) {
  $122 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body22$index9Z2D = tempRet0;
  $eh$lpad$body22$indexZ2D = $122;
 } else if ((label | 0) == 46) {
  $136 = $ss1 + 64 | 0;
  $137 = $ss1 + 8 | 0;
  HEAP32[$137 >> 2] = 2912;
  $138 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 2952;
  HEAP32[$136 >> 2] = 2972;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $138 | 0);
  $141 = __THREW__;
  __THREW__ = 0;
  if ($141 & 1) {
   $154 = ___cxa_find_matching_catch() | 0;
   $$0$i34 = tempRet0;
   $$01$i33 = $154;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 2892;
   HEAP32[$ss1 + 64 >> 2] = 2932;
   HEAP32[$137 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $138 | 0);
   $146 = __THREW__;
   __THREW__ = 0;
   do if ($146 & 1) {
    $156 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i31$index16Z2D = tempRet0;
    $eh$lpad$body$i31$indexZ2D = $156;
   } else {
    HEAP32[$138 >> 2] = 2988;
    $148 = $ss1 + 44 | 0;
    HEAP32[$148 >> 2] = 0;
    HEAP32[$148 + 4 >> 2] = 0;
    HEAP32[$148 + 8 >> 2] = 0;
    HEAP32[$148 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $138 | 0, $3 | 0);
    $150 = __THREW__;
    __THREW__ = 0;
    if ($150 & 1) {
     $152 = ___cxa_find_matching_catch() | 0;
     $153 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($138);
     $eh$lpad$body$i31$index16Z2D = $153;
     $eh$lpad$body$i31$indexZ2D = $152;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $158 = $ss1 + 8 | 0;
    __THREW__ = 0;
    $159 = invoke_iiii(29, $158 | 0, 15612, 37) | 0;
    $160 = __THREW__;
    __THREW__ = 0;
    L79 : do if ($160 & 1) label = 61; else {
     HEAP8[$2 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(29, $159 | 0, $2 | 0, 1) | 0;
     $164 = __THREW__;
     __THREW__ = 0;
     if ($164 & 1) label = 61; else {
      $166 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $8 | 0, $138 | 0);
      $167 = __THREW__;
      __THREW__ = 0;
      L82 : do if ($167 & 1) {
       $201 = ___cxa_find_matching_catch() | 0;
       $$31674 = $201;
       $$375 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $166 | 0, $filename | 0);
       $169 = __THREW__;
       __THREW__ = 0;
       do if ($169 & 1) $$05 = 1; else {
        $172 = $begin;
        $177 = HEAP32[$172 + 4 >> 2] | 0;
        $178 = $166 + 12 | 0;
        HEAP32[$178 >> 2] = HEAP32[$172 >> 2];
        HEAP32[$178 + 4 >> 2] = $177;
        $183 = $begin;
        $188 = HEAP32[$183 + 4 >> 2] | 0;
        $189 = $166 + 20 | 0;
        HEAP32[$189 >> 2] = HEAP32[$183 >> 2];
        HEAP32[$189 + 4 >> 2] = $188;
        __THREW__ = 0;
        invoke_vii(40, $166 + 28 | 0, $8 | 0);
        $194 = __THREW__;
        __THREW__ = 0;
        if ($194 & 1) {
         $196 = ___cxa_find_matching_catch() | 0;
         $197 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($166);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
         $$31674 = $196;
         $$375 = $197;
         break L82;
        } else {
         __THREW__ = 0;
         invoke_viii(4, $166 | 0, 8, 172);
         __THREW__ = 0;
         $$05 = 0;
         break;
        }
       } while (0);
       $203 = ___cxa_find_matching_catch() | 0;
       $204 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
       if ($$05) {
        $$31674 = $203;
        $$375 = $204;
       } else {
        $$4 = $204;
        $$417 = $203;
        break L79;
       }
      } while (0);
      ___cxa_free_exception($166 | 0);
      $$4 = $$375;
      $$417 = $$31674;
     }
    } while (0);
    if ((label | 0) == 61) {
     $199 = ___cxa_find_matching_catch() | 0;
     $$4 = tempRet0;
     $$417 = $199;
    }
    HEAP32[$ss1 >> 2] = 2892;
    HEAP32[$136 >> 2] = 2932;
    HEAP32[$158 >> 2] = 2912;
    HEAP32[$138 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($148);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($138);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($136);
    $$7 = $$4;
    $$720 = $$417;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i34 = $eh$lpad$body$i31$index16Z2D;
   $$01$i33 = $eh$lpad$body$i31$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($136);
  $eh$lpad$body22$index9Z2D = $$0$i34;
  $eh$lpad$body22$indexZ2D = $$01$i33;
 } else if ((label | 0) == 67) {
  $208 = $ss2 + 64 | 0;
  $209 = $ss2 + 8 | 0;
  HEAP32[$209 >> 2] = 2912;
  $210 = $ss2 + 12 | 0;
  HEAP32[$ss2 >> 2] = 2952;
  HEAP32[$208 >> 2] = 2972;
  HEAP32[$ss2 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss2 + 64 | 0, $210 | 0);
  $213 = __THREW__;
  __THREW__ = 0;
  if ($213 & 1) {
   $226 = ___cxa_find_matching_catch() | 0;
   $$0$i52 = tempRet0;
   $$01$i51 = $226;
  } else {
   HEAP32[$ss2 + 136 >> 2] = 0;
   HEAP32[$ss2 + 140 >> 2] = -1;
   HEAP32[$ss2 >> 2] = 2892;
   HEAP32[$ss2 + 64 >> 2] = 2932;
   HEAP32[$209 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $210 | 0);
   $218 = __THREW__;
   __THREW__ = 0;
   do if ($218 & 1) {
    $228 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i49$index21Z2D = tempRet0;
    $eh$lpad$body$i49$indexZ2D = $228;
   } else {
    HEAP32[$210 >> 2] = 2988;
    $220 = $ss2 + 44 | 0;
    HEAP32[$220 >> 2] = 0;
    HEAP32[$220 + 4 >> 2] = 0;
    HEAP32[$220 + 8 >> 2] = 0;
    HEAP32[$220 + 12 >> 2] = 0;
    HEAP32[$ss2 + 60 >> 2] = 24;
    HEAP32[$1 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $210 | 0, $1 | 0);
    $222 = __THREW__;
    __THREW__ = 0;
    if ($222 & 1) {
     $224 = ___cxa_find_matching_catch() | 0;
     $225 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($220);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($210);
     $eh$lpad$body$i49$index21Z2D = $225;
     $eh$lpad$body$i49$indexZ2D = $224;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $230 = $ss2 + 8 | 0;
    __THREW__ = 0;
    $231 = invoke_iiii(29, $230 | 0, 15650, 47) | 0;
    $232 = __THREW__;
    __THREW__ = 0;
    L108 : do if ($232 & 1) label = 82; else {
     HEAP8[$0 >> 0] = HEAP8[HEAP32[$c >> 2] >> 0] | 0;
     __THREW__ = 0;
     invoke_iiii(29, $231 | 0, $0 | 0, 1) | 0;
     $236 = __THREW__;
     __THREW__ = 0;
     if ($236 & 1) label = 82; else {
      $238 = ___cxa_allocate_exception(40) | 0;
      __THREW__ = 0;
      invoke_vii(43, $9 | 0, $210 | 0);
      $239 = __THREW__;
      __THREW__ = 0;
      L111 : do if ($239 & 1) {
       $273 = ___cxa_find_matching_catch() | 0;
       $$51878 = $273;
       $$579 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $238 | 0, $filename | 0);
       $241 = __THREW__;
       __THREW__ = 0;
       do if ($241 & 1) $$0 = 1; else {
        $244 = $begin;
        $249 = HEAP32[$244 + 4 >> 2] | 0;
        $250 = $238 + 12 | 0;
        HEAP32[$250 >> 2] = HEAP32[$244 >> 2];
        HEAP32[$250 + 4 >> 2] = $249;
        $255 = $begin;
        $260 = HEAP32[$255 + 4 >> 2] | 0;
        $261 = $238 + 20 | 0;
        HEAP32[$261 >> 2] = HEAP32[$255 >> 2];
        HEAP32[$261 + 4 >> 2] = $260;
        __THREW__ = 0;
        invoke_vii(40, $238 + 28 | 0, $9 | 0);
        $266 = __THREW__;
        __THREW__ = 0;
        if ($266 & 1) {
         $268 = ___cxa_find_matching_catch() | 0;
         $269 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($238);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
         $$51878 = $268;
         $$579 = $269;
         break L111;
        } else {
         __THREW__ = 0;
         invoke_viii(4, $238 | 0, 8, 172);
         __THREW__ = 0;
         $$0 = 0;
         break;
        }
       } while (0);
       $275 = ___cxa_find_matching_catch() | 0;
       $276 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
       if ($$0) {
        $$51878 = $275;
        $$579 = $276;
       } else {
        $$6 = $276;
        $$619 = $275;
        break L108;
       }
      } while (0);
      ___cxa_free_exception($238 | 0);
      $$6 = $$579;
      $$619 = $$51878;
     }
    } while (0);
    if ((label | 0) == 82) {
     $271 = ___cxa_find_matching_catch() | 0;
     $$6 = tempRet0;
     $$619 = $271;
    }
    HEAP32[$ss2 >> 2] = 2892;
    HEAP32[$208 >> 2] = 2932;
    HEAP32[$230 >> 2] = 2912;
    HEAP32[$210 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($220);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($210);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($208);
    $$7 = $$6;
    $$720 = $$619;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
    ___resumeException($$720 | 0);
   } while (0);
   $$0$i52 = $eh$lpad$body$i49$index21Z2D;
   $$01$i51 = $eh$lpad$body$i49$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($208);
  $eh$lpad$body22$index9Z2D = $$0$i52;
  $eh$lpad$body22$indexZ2D = $$01$i51;
 } else if ((label | 0) == 90) {
  HEAP32[$c >> 2] = $286 + -1;
  STACKTOP = sp;
  return;
 }
 $$7 = $eh$lpad$body22$index9Z2D;
 $$720 = $eh$lpad$body22$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
 ___resumeException($$720 | 0);
}

function __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $from) {
 $this = $this | 0;
 $from = $from | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i106 = 0, $$0$i$i$i$i127 = 0, $$0$i$i$i$i83 = 0, $$0$i$i$i$i89 = 0, $$0$i$i$i108 = 0, $$0$i$i$i129 = 0, $$0$i$i$i85 = 0, $$0$i$i$i91 = 0, $$0$i8$i$i48 = 0, $$0$i9$i$i50 = 0, $$01$i$i$i = 0, $$01$i$i$i$i56 = 0, $$01$i$i$i111 = 0, $$01$i$i$i132 = 0, $$01$i$i$i88 = 0, $$01$i$i$i94 = 0, $$idx$val2$i = 0, $$idx$val2$i103 = 0, $$idx$val2$i103134188 = 0, $$idx$val2$i105 = 0, $$idx$val2$i105137178 = 0, $$idx$val2$i124 = 0, $$idx$val2$i124135184 = 0, $$idx$val2$i139175 = 0, $$idx$val2$i76 = 0, $$idx$val2$i76138176 = 0, $$idx1$val$i$i$i$i42 = 0, $$idx10$val = 0, $$idx2$val = 0, $$idx3 = 0, $$idx3$val = 0, $$idx9$val = 0, $$idx9$val136181 = 0, $$lcssa = 0, $10 = 0, $102 = 0, $104 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $115 = 0, $120 = 0, $122 = 0, $125 = 0, $128 = 0, $130 = 0, $133 = 0, $137 = 0, $142 = 0, $144 = 0, $148 = 0, $15 = 0, $150 = 0, $154 = 0, $157 = 0, $159 = 0, $162 = 0, $165 = 0, $167 = 0, $170 = 0, $175 = 0, $178 = 0, $180 = 0, $191 = 0, $194 = 0, $196 = 0, $200 = 0, $203 = 0, $205 = 0, $208 = 0, $213 = 0, $216 = 0, $22 = 0, $221 = 0, $225 = 0, $226 = 0, $227 = 0, $24 = 0, $242 = 0, $244 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $252 = 0, $255 = 0, $257 = 0, $258 = 0, $260 = 0, $263 = 0, $264 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $271 = 0, $276 = 0, $278 = 0, $279 = 0, $28 = 0, $282 = 0, $283 = 0, $284 = 0, $287 = 0, $289 = 0, $294 = 0, $296 = 0, $298 = 0, $299 = 0, $300 = 0, $301 = 0, $302 = 0, $305 = 0, $307 = 0, $309 = 0, $311 = 0, $312 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $325 = 0, $327 = 0, $329 = 0, $330 = 0, $331 = 0, $338 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $344 = 0, $346 = 0, $348 = 0, $349 = 0, $350 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $52 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $67 = 0, $68 = 0, $7 = 0, $71 = 0, $73 = 0, $76 = 0, $79 = 0, $81 = 0, $84 = 0, $88 = 0, $9 = 0, $92 = 0, $93 = 0, $97 = 0, $99 = 0, $lpad$phi$index = 0, $lpad$phi$index8 = 0, $stack = 0, $stack$idx6$val = 0, $stack$idx6$val192$pre = 0, $stack$idx6$val194 = 0, $stack$idx7$val = 0, $stack$idx7$val193$pre = 0, $this$idx1$val$i$i45 = 0, $this$idx1$val10$i$i47 = 0, $this$idx1$val11$i$i49 = 0, $this$idx1$val7$i$i43 = 0, $this$idx2$val$i$i39 = 0, label = 0, sp = 0, $$01$i$i$i$i56$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $stack = sp;
 if (!$from) ___assert_fail(54477, 54493, 328, 54503);
 $6 = (HEAPU8[$this + 16 >> 0] | 0) + 1 & 255;
 HEAP32[$stack >> 2] = 0;
 $7 = $stack + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$stack + 8 >> 2] = 0;
 $9 = $stack + 8 | 0;
 __THREW__ = 0;
 $10 = invoke_ii(67, 16) | 0;
 $11 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($11 & 1) {
  $46 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $46;
  $lpad$phi$index8 = tempRet0;
 } else {
  $15 = $10 + 16 | 0;
  HEAP32[$10 >> 2] = $from;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  HEAP32[$10 + 12 >> 2] = 0;
  HEAP32[$stack >> 2] = $10;
  HEAP32[$7 >> 2] = $15;
  HEAP32[$9 >> 2] = $15;
  $stack$idx6$val192$pre = HEAP32[$stack >> 2] | 0;
  $stack$idx7$val193$pre = HEAP32[$7 >> 2] | 0;
  $22 = $stack$idx7$val193$pre - $stack$idx6$val192$pre >> 4;
  L7 : do if (!$22) {
   $338 = $stack$idx6$val192$pre;
   $340 = $stack$idx7$val193$pre;
  } else {
   $25 = $22;
   $stack$idx6$val194 = $stack$idx6$val192$pre;
   L9 : while (1) {
    $24 = $25 + -1 | 0;
    $27 = HEAP32[$stack$idx6$val194 + ($24 << 4) >> 2] | 0;
    $28 = $27 + 4 | 0;
    L11 : do if ((HEAP8[$28 >> 0] | 0) != $6 << 24 >> 24) {
     HEAP8[$28 >> 0] = $6;
     if ($27) {
      $68 = ___dynamic_cast($27, 448, 416, 0) | 0;
      if ($68) {
       $$idx$val2$i = HEAP32[$68 + 8 >> 2] | 0;
       $71 = $68 + 12 | 0;
       if (($$idx$val2$i | 0) == ($71 | 0)) break;
       $73 = $stack$idx6$val194 + ($24 << 4) + 4 | 0;
       $$idx$val2$i139175 = $$idx$val2$i;
       while (1) {
        __THREW__ = 0;
        invoke_vii(68, HEAP32[$$idx$val2$i139175 + 20 >> 2] | 0, $73 | 0);
        $76 = __THREW__;
        __THREW__ = 0;
        if ($76 & 1) {
         label = 13;
         break L9;
        }
        $79 = HEAP32[$$idx$val2$i139175 + 4 >> 2] | 0;
        if (!$79) {
         $$0$i$i$i = $$idx$val2$i139175;
         while (1) {
          $84 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
          if ((HEAP32[$84 >> 2] | 0) == ($$0$i$i$i | 0)) {
           $$01$i$i$i = $84;
           break;
          } else $$0$i$i$i = $84;
         }
        } else {
         $$0$i$i$i$i = $79;
         while (1) {
          $81 = HEAP32[$$0$i$i$i$i >> 2] | 0;
          if (!$81) {
           $$01$i$i$i = $$0$i$i$i$i;
           break;
          } else $$0$i$i$i$i = $81;
         }
        }
        if (($$01$i$i$i | 0) == ($71 | 0)) break L11; else $$idx$val2$i139175 = $$01$i$i$i;
       }
      }
      $88 = ___dynamic_cast($27, 448, 456, 0) | 0;
      if ($88) {
       $92 = $stack$idx6$val194 + ($24 << 4) + 4 | 0;
       __THREW__ = 0;
       invoke_vii(68, HEAP32[$88 + 8 >> 2] | 0, $92 | 0);
       $93 = __THREW__;
       __THREW__ = 0;
       if ($93 & 1) {
        label = 14;
        break L9;
       }
       __THREW__ = 0;
       invoke_vii(68, HEAP32[$88 + 12 >> 2] | 0, $92 | 0);
       $97 = __THREW__;
       __THREW__ = 0;
       if ($97 & 1) {
        label = 14;
        break L9;
       } else break;
      }
      $99 = ___dynamic_cast($27, 448, 488, 0) | 0;
      if ($99) {
       $$idx$val2$i76 = HEAP32[$99 + 8 >> 2] | 0;
       $102 = $99 + 12 | 0;
       if (($$idx$val2$i76 | 0) != ($102 | 0)) {
        $104 = $stack$idx6$val194 + ($24 << 4) + 4 | 0;
        $$idx$val2$i76138176 = $$idx$val2$i76;
        while (1) {
         __THREW__ = 0;
         invoke_vii(68, HEAP32[$$idx$val2$i76138176 + 20 >> 2] | 0, $104 | 0);
         $107 = __THREW__;
         __THREW__ = 0;
         if ($107 & 1) {
          label = 12;
          break L9;
         }
         $110 = HEAP32[$$idx$val2$i76138176 + 4 >> 2] | 0;
         if (!$110) {
          $$0$i$i$i91 = $$idx$val2$i76138176;
          while (1) {
           $115 = HEAP32[$$0$i$i$i91 + 8 >> 2] | 0;
           if ((HEAP32[$115 >> 2] | 0) == ($$0$i$i$i91 | 0)) {
            $$01$i$i$i94 = $115;
            break;
           } else $$0$i$i$i91 = $115;
          }
         } else {
          $$0$i$i$i$i89 = $110;
          while (1) {
           $112 = HEAP32[$$0$i$i$i$i89 >> 2] | 0;
           if (!$112) {
            $$01$i$i$i94 = $$0$i$i$i$i89;
            break;
           } else $$0$i$i$i$i89 = $112;
          }
         }
         if (($$01$i$i$i94 | 0) == ($102 | 0)) break; else $$idx$val2$i76138176 = $$01$i$i$i94;
        }
       }
       $$idx$val2$i105 = HEAP32[$99 + 28 >> 2] | 0;
       $120 = $99 + 32 | 0;
       if (($$idx$val2$i105 | 0) == ($120 | 0)) break;
       $122 = $stack$idx6$val194 + ($24 << 4) + 4 | 0;
       $$idx$val2$i105137178 = $$idx$val2$i105;
       while (1) {
        __THREW__ = 0;
        invoke_vii(68, HEAP32[$$idx$val2$i105137178 + 20 >> 2] | 0, $122 | 0);
        $125 = __THREW__;
        __THREW__ = 0;
        if ($125 & 1) {
         label = 11;
         break L9;
        }
        $128 = HEAP32[$$idx$val2$i105137178 + 4 >> 2] | 0;
        if (!$128) {
         $$0$i$i$i129 = $$idx$val2$i105137178;
         while (1) {
          $133 = HEAP32[$$0$i$i$i129 + 8 >> 2] | 0;
          if ((HEAP32[$133 >> 2] | 0) == ($$0$i$i$i129 | 0)) {
           $$01$i$i$i132 = $133;
           break;
          } else $$0$i$i$i129 = $133;
         }
        } else {
         $$0$i$i$i$i127 = $128;
         while (1) {
          $130 = HEAP32[$$0$i$i$i$i127 >> 2] | 0;
          if (!$130) {
           $$01$i$i$i132 = $$0$i$i$i$i127;
           break;
          } else $$0$i$i$i$i127 = $130;
         }
        }
        if (($$01$i$i$i132 | 0) == ($120 | 0)) break L11; else $$idx$val2$i105137178 = $$01$i$i$i132;
       }
      }
      $137 = ___dynamic_cast($27, 448, 472, 0) | 0;
      if ($137) {
       __THREW__ = 0;
       invoke_vii(68, HEAP32[$137 + 8 >> 2] | 0, $stack$idx6$val194 + ($24 << 4) + 4 | 0);
       $142 = __THREW__;
       __THREW__ = 0;
       if ($142 & 1) {
        label = 14;
        break L9;
       } else break;
      }
      $144 = ___dynamic_cast($27, 448, 560, 0) | 0;
      if ($144) {
       $$idx9$val = HEAP32[$144 + 8 >> 2] | 0;
       $$idx10$val = HEAP32[$144 + 12 >> 2] | 0;
       if (($$idx9$val | 0) == ($$idx10$val | 0)) break;
       $148 = $stack$idx6$val194 + ($24 << 4) + 4 | 0;
       $$idx9$val136181 = $$idx9$val;
       while (1) {
        __THREW__ = 0;
        invoke_vii(68, HEAP32[$$idx9$val136181 >> 2] | 0, $148 | 0);
        $150 = __THREW__;
        __THREW__ = 0;
        if ($150 & 1) {
         label = 10;
         break L9;
        }
        $$idx9$val136181 = $$idx9$val136181 + 4 | 0;
        if (($$idx9$val136181 | 0) == ($$idx10$val | 0)) break L11;
       }
      }
      $154 = ___dynamic_cast($27, 448, 528, 0) | 0;
      if ($154) {
       $$idx$val2$i124 = HEAP32[$154 + 8 >> 2] | 0;
       $157 = $154 + 12 | 0;
       if (($$idx$val2$i124 | 0) != ($157 | 0)) {
        $159 = $stack$idx6$val194 + ($24 << 4) + 4 | 0;
        $$idx$val2$i124135184 = $$idx$val2$i124;
        while (1) {
         __THREW__ = 0;
         invoke_vii(68, HEAP32[$$idx$val2$i124135184 + 20 >> 2] | 0, $159 | 0);
         $162 = __THREW__;
         __THREW__ = 0;
         if ($162 & 1) {
          label = 9;
          break L9;
         }
         $165 = HEAP32[$$idx$val2$i124135184 + 4 >> 2] | 0;
         if (!$165) {
          $$0$i$i$i108 = $$idx$val2$i124135184;
          while (1) {
           $170 = HEAP32[$$0$i$i$i108 + 8 >> 2] | 0;
           if ((HEAP32[$170 >> 2] | 0) == ($$0$i$i$i108 | 0)) {
            $$01$i$i$i111 = $170;
            break;
           } else $$0$i$i$i108 = $170;
          }
         } else {
          $$0$i$i$i$i106 = $165;
          while (1) {
           $167 = HEAP32[$$0$i$i$i$i106 >> 2] | 0;
           if (!$167) {
            $$01$i$i$i111 = $$0$i$i$i$i106;
            break;
           } else $$0$i$i$i$i106 = $167;
          }
         }
         if (($$01$i$i$i111 | 0) == ($157 | 0)) break; else $$idx$val2$i124135184 = $$01$i$i$i111;
        }
       }
       $175 = HEAP32[$154 + 20 >> 2] | 0;
       if (!$175) break;
       __THREW__ = 0;
       invoke_vii(68, $175 | 0, $stack$idx6$val194 + ($24 << 4) + 4 | 0);
       $178 = __THREW__;
       __THREW__ = 0;
       if ($178 & 1) {
        label = 14;
        break L9;
       } else break;
      }
      $180 = ___dynamic_cast($27, 448, 504, 0) | 0;
      if ($180) {
       if (HEAP8[$180 + 5 >> 0] | 0) {
        if (!(HEAP32[$180 + 8 >> 2] & 16)) break;
        __THREW__ = 0;
        invoke_vii(68, HEAP32[$180 + 16 >> 2] | 0, $stack$idx6$val194 + ($24 << 4) + 4 | 0);
        $191 = __THREW__;
        __THREW__ = 0;
        if ($191 & 1) {
         label = 14;
         break L9;
        } else break;
       }
       $$idx$val2$i103 = HEAP32[$180 + 28 >> 2] | 0;
       $194 = $180 + 32 | 0;
       if (($$idx$val2$i103 | 0) != ($194 | 0)) {
        $196 = $stack$idx6$val194 + ($24 << 4) + 4 | 0;
        $$idx$val2$i103134188 = $$idx$val2$i103;
        while (1) {
         __THREW__ = 0;
         invoke_vii(68, HEAP32[$$idx$val2$i103134188 + 20 >> 2] | 0, $196 | 0);
         $200 = __THREW__;
         __THREW__ = 0;
         if ($200 & 1) {
          label = 8;
          break L9;
         }
         $203 = HEAP32[$$idx$val2$i103134188 + 4 >> 2] | 0;
         if (!$203) {
          $$0$i$i$i85 = $$idx$val2$i103134188;
          while (1) {
           $208 = HEAP32[$$0$i$i$i85 + 8 >> 2] | 0;
           if ((HEAP32[$208 >> 2] | 0) == ($$0$i$i$i85 | 0)) {
            $$01$i$i$i88 = $208;
            break;
           } else $$0$i$i$i85 = $208;
          }
         } else {
          $$0$i$i$i$i83 = $203;
          while (1) {
           $205 = HEAP32[$$0$i$i$i$i83 >> 2] | 0;
           if (!$205) {
            $$01$i$i$i88 = $$0$i$i$i$i83;
            break;
           } else $$0$i$i$i$i83 = $205;
          }
         }
         if (($$01$i$i$i88 | 0) == ($194 | 0)) break; else $$idx$val2$i103134188 = $$01$i$i$i88;
        }
       }
       $213 = HEAP32[$180 + 40 >> 2] | 0;
       if ($213) {
        __THREW__ = 0;
        invoke_vii(68, $213 | 0, $stack$idx6$val194 + ($24 << 4) + 4 | 0);
        $216 = __THREW__;
        __THREW__ = 0;
        if ($216 & 1) {
         label = 14;
         break L9;
        }
       }
      }
     }
    } while (0);
    $$idx2$val = HEAP32[$stack$idx6$val194 + ($24 << 4) + 4 >> 2] | 0;
    $$idx3 = $stack$idx6$val194 + ($24 << 4) + 8 | 0;
    $$idx3$val = HEAP32[$$idx3 >> 2] | 0;
    $221 = $$idx3$val - $$idx2$val >> 2;
    do if (!$221) {
     $320 = HEAP32[$7 >> 2] | 0;
     $321 = $320 + -16 | 0;
     $323 = $320;
     while (1) {
      $322 = $323 + -16 | 0;
      HEAP32[$7 >> 2] = $322;
      $325 = HEAP32[$323 + -12 >> 2] | 0;
      $327 = $325;
      if (!$325) $329 = $322; else {
       $330 = $323 + -8 | 0;
       $331 = HEAP32[$330 >> 2] | 0;
       if (($331 | 0) != ($325 | 0)) HEAP32[$330 >> 2] = $331 + (~(($331 + -4 - $327 | 0) >>> 2) << 2);
       __ZdlPv($325);
       $329 = HEAP32[$7 >> 2] | 0;
      }
      if (($329 | 0) == ($321 | 0)) break; else $323 = $329;
     }
    } else {
     $225 = HEAP32[$$idx2$val + ($221 + -1 << 2) >> 2] | 0;
     HEAP32[$$idx3 >> 2] = $$idx3$val + -4;
     $226 = HEAP32[$7 >> 2] | 0;
     $227 = HEAP32[$9 >> 2] | 0;
     if ($226 >>> 0 < $227 >>> 0) {
      HEAP32[$226 >> 2] = $225;
      HEAP32[$226 + 4 >> 2] = 0;
      HEAP32[$226 + 8 >> 2] = 0;
      HEAP32[$226 + 12 >> 2] = 0;
      HEAP32[$7 >> 2] = $226 + 16;
      break;
     }
     $this$idx2$val$i$i39 = HEAP32[$stack >> 2] | 0;
     $242 = ($226 - $this$idx2$val$i$i39 >> 4) + 1 | 0;
     if ($242 >>> 0 > 268435455) {
      __THREW__ = 0;
      invoke_vi(175, $stack | 0);
      $244 = __THREW__;
      __THREW__ = 0;
      if ($244 & 1) {
       label = 14;
       break L9;
      }
      $$idx1$val$i$i$i$i42 = HEAP32[$9 >> 2] | 0;
      $248 = HEAP32[$stack >> 2] | 0;
     } else {
      $$idx1$val$i$i$i$i42 = $227;
      $248 = $this$idx2$val$i$i39;
     }
     $247 = $248;
     $249 = $$idx1$val$i$i$i$i42 - $247 | 0;
     if ($249 >> 4 >>> 0 < 134217727) {
      $255 = $249 >> 3;
      $257 = $255 >>> 0 < $242 >>> 0 ? $242 : $255;
      $this$idx1$val$i$i45 = HEAP32[$7 >> 2] | 0;
      $258 = $this$idx1$val$i$i45;
      $260 = $258 - $247 >> 4;
      if (!$257) {
       $$0$i9$i$i50 = 0;
       $267 = 0;
       $268 = $260;
       $359 = $258;
       $this$idx1$val11$i$i49 = $this$idx1$val$i$i45;
      } else {
       $$0$i8$i$i48 = $257;
       $357 = $260;
       $358 = $258;
       $this$idx1$val10$i$i47 = $this$idx1$val$i$i45;
       label = 97;
      }
     } else {
      $this$idx1$val7$i$i43 = HEAP32[$7 >> 2] | 0;
      $252 = $this$idx1$val7$i$i43;
      $$0$i8$i$i48 = 268435455;
      $357 = $252 - $247 >> 4;
      $358 = $252;
      $this$idx1$val10$i$i47 = $this$idx1$val7$i$i43;
      label = 97;
     }
     if ((label | 0) == 97) {
      label = 0;
      __THREW__ = 0;
      $263 = invoke_ii(67, $$0$i8$i$i48 << 4 | 0) | 0;
      $264 = __THREW__;
      __THREW__ = 0;
      if ($264 & 1) {
       label = 14;
       break L9;
      }
      $$0$i9$i$i50 = $$0$i8$i$i48;
      $267 = $263;
      $268 = $357;
      $359 = $358;
      $this$idx1$val11$i$i49 = $this$idx1$val10$i$i47;
     }
     $266 = $267 + ($268 << 4) | 0;
     $269 = $266;
     $271 = $267 + ($$0$i9$i$i50 << 4) | 0;
     HEAP32[$266 >> 2] = $225;
     HEAP32[$267 + ($268 << 4) + 4 >> 2] = 0;
     HEAP32[$267 + ($268 << 4) + 8 >> 2] = 0;
     HEAP32[$267 + ($268 << 4) + 12 >> 2] = 0;
     $276 = $267 + ($268 + 1 << 4) | 0;
     if (($this$idx1$val11$i$i49 | 0) == ($248 | 0)) {
      $298 = $269;
      $300 = $247;
      $302 = $359;
     } else {
      $$01$i$i$i$i56 = $this$idx1$val11$i$i49;
      $279 = $266;
      $294 = $269;
      while (1) {
       $278 = $279 + -16 | 0;
       $$01$i$i$i$i56$looptemp = $$01$i$i$i$i56;
       $$01$i$i$i$i56 = $$01$i$i$i$i56 + -16 | 0;
       HEAP32[$278 >> 2] = HEAP32[$$01$i$i$i$i56 >> 2];
       $282 = $279 + -12 | 0;
       $283 = $$01$i$i$i$i56$looptemp + -12 | 0;
       HEAP32[$282 >> 2] = 0;
       $284 = $279 + -8 | 0;
       HEAP32[$284 >> 2] = 0;
       HEAP32[$279 + -4 >> 2] = 0;
       HEAP32[$282 >> 2] = HEAP32[$283 >> 2];
       $287 = $$01$i$i$i$i56$looptemp + -8 | 0;
       HEAP32[$284 >> 2] = HEAP32[$287 >> 2];
       $289 = $$01$i$i$i$i56$looptemp + -4 | 0;
       HEAP32[$279 + -4 >> 2] = HEAP32[$289 >> 2];
       HEAP32[$289 >> 2] = 0;
       HEAP32[$287 >> 2] = 0;
       HEAP32[$283 >> 2] = 0;
       HEAP32[$278 >> 2] = HEAP32[$$01$i$i$i$i56 >> 2];
       $279 = $294 + -16 | 0;
       $296 = $279;
       if (($$01$i$i$i$i56 | 0) == ($248 | 0)) {
        $$lcssa = $296;
        break;
       } else $294 = $296;
      }
      $298 = $$lcssa;
      $300 = HEAP32[$stack >> 2] | 0;
      $302 = HEAP32[$7 >> 2] | 0;
     }
     HEAP32[$stack >> 2] = $298;
     HEAP32[$7 >> 2] = $276;
     HEAP32[$9 >> 2] = $271;
     $299 = $300;
     $301 = $302;
     if (($301 | 0) != ($299 | 0)) {
      $305 = $301;
      do {
       $307 = HEAP32[$305 + -12 >> 2] | 0;
       $309 = $307;
       if ($307) {
        $311 = $305 + -8 | 0;
        $312 = HEAP32[$311 >> 2] | 0;
        if (($312 | 0) != ($307 | 0)) HEAP32[$311 >> 2] = $312 + (~(($312 + -4 - $309 | 0) >>> 2) << 2);
        __ZdlPv($307);
       }
       $305 = $305 + -16 | 0;
      } while (($305 | 0) != ($299 | 0));
     }
     if ($300) __ZdlPv($300);
    } while (0);
    $stack$idx6$val = HEAP32[$stack >> 2] | 0;
    $stack$idx7$val = HEAP32[$7 >> 2] | 0;
    $25 = $stack$idx7$val - $stack$idx6$val >> 4;
    if (!$25) {
     $338 = $stack$idx6$val;
     $340 = $stack$idx7$val;
     break L7;
    } else $stack$idx6$val194 = $stack$idx6$val;
   }
   if ((label | 0) == 8) {
    $32 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $32;
    $lpad$phi$index8 = tempRet0;
    break L4;
   } else if ((label | 0) == 9) {
    $34 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $34;
    $lpad$phi$index8 = tempRet0;
    break L4;
   } else if ((label | 0) == 10) {
    $36 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $36;
    $lpad$phi$index8 = tempRet0;
    break L4;
   } else if ((label | 0) == 11) {
    $38 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $38;
    $lpad$phi$index8 = tempRet0;
    break L4;
   } else if ((label | 0) == 12) {
    $40 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $40;
    $lpad$phi$index8 = tempRet0;
    break L4;
   } else if ((label | 0) == 13) {
    $42 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $42;
    $lpad$phi$index8 = tempRet0;
    break L4;
   } else if ((label | 0) == 14) {
    $44 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $44;
    $lpad$phi$index8 = tempRet0;
    break L4;
   }
  } while (0);
  if (!$338) {
   STACKTOP = sp;
   return;
  }
  if (($340 | 0) == ($338 | 0)) $356 = $338; else {
   $342 = $340;
   while (1) {
    $341 = $342 + -16 | 0;
    HEAP32[$7 >> 2] = $341;
    $344 = HEAP32[$342 + -12 >> 2] | 0;
    $346 = $344;
    if (!$344) $348 = $341; else {
     $349 = $342 + -8 | 0;
     $350 = HEAP32[$349 >> 2] | 0;
     if (($350 | 0) != ($344 | 0)) HEAP32[$349 >> 2] = $350 + (~(($350 + -4 - $346 | 0) >>> 2) << 2);
     __ZdlPv($344);
     $348 = HEAP32[$7 >> 2] | 0;
    }
    if (($348 | 0) == ($338 | 0)) break; else $342 = $348;
   }
   $356 = HEAP32[$stack >> 2] | 0;
  }
  __ZdlPv($356);
  STACKTOP = sp;
  return;
 } while (0);
 $48 = HEAP32[$stack >> 2] | 0;
 if (!$48) ___resumeException($lpad$phi$index | 0);
 $50 = HEAP32[$7 >> 2] | 0;
 if (($50 | 0) == ($48 | 0)) $67 = $48; else {
  $53 = $50;
  while (1) {
   $52 = $53 + -16 | 0;
   HEAP32[$7 >> 2] = $52;
   $55 = HEAP32[$53 + -12 >> 2] | 0;
   $57 = $55;
   if (!$55) $59 = $52; else {
    $60 = $53 + -8 | 0;
    $61 = HEAP32[$60 >> 2] | 0;
    if (($61 | 0) != ($55 | 0)) HEAP32[$60 >> 2] = $61 + (~(($61 + -4 - $57 | 0) >>> 2) << 2);
    __ZdlPv($55);
    $59 = HEAP32[$7 >> 2] | 0;
   }
   if (($59 | 0) == ($48 | 0)) break; else $53 = $59;
  }
  $67 = HEAP32[$stack >> 2] | 0;
 }
 __ZdlPv($67);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this, $loc, $context, $self, $offset, $up_values) {
 $this = $this | 0;
 $loc = $loc | 0;
 $context = $context | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $up_values = $up_values | 0;
 var $$$i$i$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i11$i$i$i = 0, $$0$i$i$i18 = 0, $$0$i$i13$i$i$i = 0, $$0$i$i27$i$i$i = 0, $$0$i$i8$i$i$i = 0, $$0$i$i9$i$i$i = 0, $$0$i$i9$i$i$i$lcssa = 0, $$0$i1$i$i$i$i = 0, $$0$i1$i$i$i$i$lcssa = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$01$i$i16$i$i$i = 0, $$0120 = 0, $$0121 = 0, $$02 = 0, $$022 = 0, $$023 = 0, $$idx$val$i = 0, $$idx$val$i9 = 0, $$idx$val2$i = 0, $$idx$val2$i1936 = 0, $$idx1$val$i$i$i$i = 0, $$idx2$i = 0, $$idx2$val$i = 0, $$idx3$i = 0, $$idx3$val$i = 0, $$lcssa = 0, $$lcssa92 = 0, $$lcssa93 = 0, $$lcssa95 = 0, $$lcssa96 = 0, $$pre$phi51Z2D = 0, $$pre$phiZ2D = 0, $$pre49 = 0, $0 = 0, $100 = 0, $102 = 0, $104 = 0, $109 = 0, $115 = 0, $116 = 0, $117 = 0, $123 = 0, $125 = 0, $127 = 0, $128 = 0, $14 = 0, $140 = 0, $153 = 0, $155 = 0, $156 = 0, $159 = 0, $160 = 0, $164 = 0, $167 = 0, $170 = 0, $178 = 0, $179 = 0, $181 = 0, $184 = 0, $186 = 0, $189 = 0, $19 = 0, $193 = 0, $196 = 0, $198 = 0, $201 = 0, $203 = 0, $204 = 0, $207 = 0, $209 = 0, $21 = 0, $213 = 0, $217 = 0, $219 = 0, $222 = 0, $227 = 0, $228 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $237 = 0, $239 = 0, $240 = 0, $242 = 0, $244 = 0, $249 = 0, $250 = 0, $256 = 0, $258 = 0, $26 = 0, $262 = 0, $266 = 0, $268 = 0, $271 = 0, $28 = 0, $281 = 0, $283 = 0, $286 = 0, $29 = 0, $290 = 0, $30 = 0, $4 = 0, $45 = 0, $48 = 0, $53 = 0, $54 = 0, $56 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $70 = 0, $71 = 0, $83 = 0, $91 = 0, $97 = 0, $__cache$017$i$i$i = 0, $__cache$017$i$i$i$lcssa = 0, $__cache$2$lcssa$i$i$i = 0, $__first$0216$i$i$i = 0, $__first$03$ph$i$i$i = 0, $__first$0314$i$i$i = 0, $__nd$0$be$in$i$i$i$i$i = 0, $__nd$0$be$in$i$i24$i$i$i = 0, $__nd$0$i$i$i$i$i = 0, $__nd$0$i$i$i$i$i$lcssa = 0, $__nd$0$i$i$i$i$i$lcssa91 = 0, $__nd$0$i$i21$i$i$i = 0, $__nd$0$i$i21$i$i$i$lcssa = 0, $__nd$0$i$i21$i$i$i$lcssa94 = 0, $__t$idx$val$i$i = 0, $__v$i$i = 0, $__v$idx$val$i$i$i$i$i = 0, $__v$idx$val$i$i19$i$i$i = 0, $i$0$i = 0, $i$0$i$lcssa100 = 0, $i$0$in$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, $this$idx2$val$i$i47 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp + 12 | 0;
 $0 = sp;
 $$idx2$i = $this + 12 | 0;
 $$idx2$val$i = HEAP32[$$idx2$i >> 2] | 0;
 $$idx3$i = $this + 16 | 0;
 $$idx3$val$i = HEAP32[$$idx3$i >> 2] | 0;
 $4 = ($$idx3$val$i - $$idx2$val$i | 0) / 144 | 0;
 $i$0$in$i = $4;
 L1 : while (1) {
  $i$0$i = $i$0$in$i + -1 | 0;
  if (($i$0$in$i | 0) <= 0) {
   $67 = $$idx3$val$i;
   $this$idx2$val$i$i = $$idx2$val$i;
   break;
  }
  switch (HEAP32[$$idx2$val$i + ($i$0$i * 144 | 0) >> 2] | 0) {
  case 11:
   {
    $i$0$in$i = $i$0$i;
    break;
   }
  case 5:
   {
    $i$0$i$lcssa100 = $i$0$i;
    label = 4;
    break L1;
    break;
   }
  default:
   {
    $67 = $$idx3$val$i;
    $this$idx2$val$i$i = $$idx2$val$i;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) if (!(HEAP8[$$idx2$val$i + ($i$0$i$lcssa100 * 144 | 0) + 36 >> 0] | 0)) {
  $67 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 } else if ((HEAP32[$$idx2$val$i + ($i$0$i$lcssa100 * 144 | 0) + 108 >> 2] | 0) == (HEAP32[$$idx2$val$i + ($i$0$i$lcssa100 * 144 | 0) + 104 >> 2] | 0)) {
  if ($4 >>> 0 > $i$0$i$lcssa100 >>> 0) {
   $19 = $$idx3$val$i;
   while (1) {
    $14 = $19 + -144 | 0;
    $21 = $19;
    do {
     HEAP32[$$idx3$i >> 2] = $21 + -144;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($21 + -16 | 0, HEAP32[$21 + -12 >> 2] | 0);
     $26 = HEAP32[$21 + -40 >> 2] | 0;
     $28 = $26;
     if ($26) {
      $29 = $21 + -36 | 0;
      $30 = HEAP32[$29 >> 2] | 0;
      if (($30 | 0) != ($26 | 0)) HEAP32[$29 >> 2] = $30 + (~(($30 + -4 - $28 | 0) >>> 2) << 2);
      __ZdlPv($26);
     }
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($21 + -52 | 0, HEAP32[$21 + -48 >> 2] | 0);
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($21 + -68 | 0, HEAP32[$21 + -64 >> 2] | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21 + -136 | 0);
     $21 = HEAP32[$$idx3$i >> 2] | 0;
    } while (($21 | 0) != ($14 | 0));
    $$idx$val$i = HEAP32[$$idx2$i >> 2] | 0;
    if ((($14 - $$idx$val$i | 0) / 144 | 0) >>> 0 > $i$0$i$lcssa100 >>> 0) $19 = $14; else {
     $290 = $14;
     $this$idx2$val$i$i47 = $$idx$val$i;
     break;
    }
   }
  } else {
   $290 = $$idx3$val$i;
   $this$idx2$val$i$i47 = $$idx2$val$i;
  }
  $45 = $this + 4 | 0;
  HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + -1;
  $67 = $290;
  $this$idx2$val$i$i = $this$idx2$val$i$i47;
 } else {
  $67 = $$idx3$val$i;
  $this$idx2$val$i$i = $$idx2$val$i;
 }
 $48 = $this + 4 | 0;
 if ((HEAP32[$48 >> 2] | 0) >>> 0 >= (HEAP32[$this + 8 >> 2] | 0) >>> 0) {
  $53 = ___cxa_allocate_exception(24) | 0;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 52039, 26);
  $54 = __THREW__;
  __THREW__ = 0;
  if ($54 & 1) {
   $59 = ___cxa_find_matching_catch() | 0;
   $$0121 = tempRet0;
   $$023 = $59;
  } else {
   __THREW__ = 0;
   invoke_viiii(16, $53 | 0, $this | 0, $loc | 0, $0 | 0);
   $56 = __THREW__;
   __THREW__ = 0;
   if ($56 & 1) $$02 = 1; else {
    __THREW__ = 0;
    invoke_viii(4, $53 | 0, 392, 179);
    __THREW__ = 0;
    $$02 = 0;
   }
   $61 = ___cxa_find_matching_catch() | 0;
   $62 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   if ($$02) {
    $$0121 = $62;
    $$023 = $61;
   } else {
    $$0120 = $62;
    $$022 = $61;
    ___resumeException($$022 | 0);
   }
  }
  ___cxa_free_exception($53 | 0);
  $$0120 = $$0121;
  $$022 = $$023;
  ___resumeException($$022 | 0);
 }
 $63 = $this + 12 | 0;
 $64 = $this + 20 | 0;
 $65 = HEAP32[$64 >> 2] | 0;
 do if ($67 >>> 0 < $65 >>> 0) {
  HEAP32[$67 >> 2] = 5;
  HEAP32[$67 + 4 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($67 + 8 | 0, $loc);
  $70 = $67 + 20 | 0;
  $71 = $loc + 12 | 0;
  HEAP32[$70 >> 2] = HEAP32[$71 >> 2];
  HEAP32[$70 + 4 >> 2] = HEAP32[$71 + 4 >> 2];
  HEAP32[$70 + 8 >> 2] = HEAP32[$71 + 8 >> 2];
  HEAP32[$70 + 12 >> 2] = HEAP32[$71 + 12 >> 2];
  HEAP8[$67 + 36 >> 0] = 0;
  HEAP32[$67 + 72 >> 2] = 0;
  HEAP32[$67 + 80 >> 2] = 0;
  HEAP32[$67 + 84 >> 2] = 0;
  HEAP32[$67 + 76 >> 2] = $67 + 80;
  HEAP32[$67 + 88 >> 2] = 0;
  HEAP32[$67 + 96 >> 2] = 0;
  HEAP32[$67 + 100 >> 2] = 0;
  HEAP32[$67 + 92 >> 2] = $67 + 96;
  $83 = $67 + 104 | 0;
  HEAP32[$67 + 132 >> 2] = 0;
  HEAP32[$67 + 136 >> 2] = 0;
  HEAP32[$83 >> 2] = 0;
  HEAP32[$83 + 4 >> 2] = 0;
  HEAP32[$83 + 8 >> 2] = 0;
  HEAP32[$83 + 12 >> 2] = 0;
  HEAP32[$83 + 16 >> 2] = 0;
  HEAP32[$83 + 20 >> 2] = 0;
  HEAP32[$67 + 128 >> 2] = $67 + 132;
  HEAP32[$67 + 40 >> 2] = 0;
  HEAP32[$67 + 56 >> 2] = 0;
  $91 = (HEAP32[$$idx3$i >> 2] | 0) + 144 | 0;
  HEAP32[$$idx3$i >> 2] = $91;
  $$idx$val$i9 = $91;
 } else {
  $97 = (($67 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
  if ($97 >>> 0 > 29826161) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($63);
   $$idx1$val$i$i$i$i = HEAP32[$64 >> 2] | 0;
   $this$idx$val$i$i = HEAP32[$63 >> 2] | 0;
  } else {
   $$idx1$val$i$i$i$i = $65;
   $this$idx$val$i$i = $this$idx2$val$i$i;
  }
  $100 = $this$idx$val$i$i;
  $102 = ($$idx1$val$i$i$i$i - $100 | 0) / 144 | 0;
  if ($102 >>> 0 < 14913080) {
   $104 = $102 << 1;
   $$0$i$i$i = $104 >>> 0 < $97 >>> 0 ? $97 : $104;
  } else $$0$i$i$i = 29826161;
  $109 = ((HEAP32[$$idx3$i >> 2] | 0) - $100 | 0) / 144 | 0;
  HEAP32[$__v$i$i + 12 >> 2] = 0;
  HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
  if (!$$0$i$i$i) $115 = 0; else $115 = __Znwj($$0$i$i$i * 144 | 0) | 0;
  HEAP32[$__v$i$i >> 2] = $115;
  $116 = $115 + ($109 * 144 | 0) | 0;
  $117 = $__v$i$i + 8 | 0;
  HEAP32[$117 >> 2] = $116;
  HEAP32[$__v$i$i + 4 >> 2] = $116;
  HEAP32[$__v$i$i + 12 >> 2] = $115 + ($$0$i$i$i * 144 | 0);
  HEAP32[$116 >> 2] = 5;
  HEAP32[$115 + ($109 * 144 | 0) + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(40, $115 + ($109 * 144 | 0) + 8 | 0, $loc | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if ($123 & 1) {
   $125 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
   ___resumeException($125 | 0);
  } else {
   $127 = $115 + ($109 * 144 | 0) + 20 | 0;
   $128 = $loc + 12 | 0;
   HEAP32[$127 >> 2] = HEAP32[$128 >> 2];
   HEAP32[$127 + 4 >> 2] = HEAP32[$128 + 4 >> 2];
   HEAP32[$127 + 8 >> 2] = HEAP32[$128 + 8 >> 2];
   HEAP32[$127 + 12 >> 2] = HEAP32[$128 + 12 >> 2];
   HEAP8[$115 + ($109 * 144 | 0) + 36 >> 0] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 72 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 80 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 84 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 76 >> 2] = $115 + ($109 * 144 | 0) + 80;
   HEAP32[$115 + ($109 * 144 | 0) + 88 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 96 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 100 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 92 >> 2] = $115 + ($109 * 144 | 0) + 96;
   $140 = $115 + ($109 * 144 | 0) + 104 | 0;
   HEAP32[$115 + ($109 * 144 | 0) + 132 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 136 >> 2] = 0;
   HEAP32[$140 >> 2] = 0;
   HEAP32[$140 + 4 >> 2] = 0;
   HEAP32[$140 + 8 >> 2] = 0;
   HEAP32[$140 + 12 >> 2] = 0;
   HEAP32[$140 + 16 >> 2] = 0;
   HEAP32[$140 + 20 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 128 >> 2] = $115 + ($109 * 144 | 0) + 132;
   HEAP32[$115 + ($109 * 144 | 0) + 40 >> 2] = 0;
   HEAP32[$115 + ($109 * 144 | 0) + 56 >> 2] = 0;
   HEAP32[$117 >> 2] = $115 + (($109 + 1 | 0) * 144 | 0);
   __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($63, $__v$i$i);
   __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
   $$idx$val$i9 = HEAP32[$$idx3$i >> 2] | 0;
   break;
  }
 } while (0);
 HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
 HEAP32[$$idx$val$i9 + -28 >> 2] = $context;
 HEAP32[$$idx$val$i9 + -24 >> 2] = $self;
 HEAP32[$$idx$val$i9 + -20 >> 2] = $offset;
 $153 = $$idx$val$i9 + -16 | 0;
 L50 : do if (($153 | 0) == ($up_values | 0)) {
  $$pre49 = $up_values + 4 | 0;
  $$pre$phi51Z2D = $$pre49;
  $$pre$phiZ2D = $$pre49;
 } else {
  $__t$idx$val$i$i = HEAP32[$up_values >> 2] | 0;
  $155 = $up_values + 4 | 0;
  $156 = $$idx$val$i9 + -8 | 0;
  L53 : do if (!(HEAP32[$156 >> 2] | 0)) $__first$03$ph$i$i$i = $__t$idx$val$i$i; else {
   $159 = HEAP32[$153 >> 2] | 0;
   $160 = $$idx$val$i9 + -12 | 0;
   HEAP32[$153 >> 2] = $160;
   HEAP32[(HEAP32[$160 >> 2] | 0) + 8 >> 2] = 0;
   HEAP32[$160 >> 2] = 0;
   HEAP32[$156 >> 2] = 0;
   $164 = HEAP32[$159 + 4 >> 2] | 0;
   $$$i$i$i$i = ($164 | 0) == 0 ? $159 : $164;
   if (!$$$i$i$i$i) $__first$03$ph$i$i$i = $__t$idx$val$i$i; else {
    $167 = $$idx$val$i9 + -12 | 0;
    $__cache$017$i$i$i = $$$i$i$i$i;
    $__first$0216$i$i$i = $__t$idx$val$i$i;
    while (1) {
     if (($__first$0216$i$i$i | 0) == ($155 | 0)) {
      $__cache$017$i$i$i$lcssa = $__cache$017$i$i$i;
      break;
     }
     HEAP32[$__cache$017$i$i$i + 16 >> 2] = HEAP32[$__first$0216$i$i$i + 16 >> 2];
     HEAP32[$__cache$017$i$i$i + 20 >> 2] = HEAP32[$__first$0216$i$i$i + 20 >> 2];
     $178 = $__cache$017$i$i$i + 8 | 0;
     $179 = HEAP32[$178 >> 2] | 0;
     do if (!$179) $$0$i$i$i$i = 0; else {
      $181 = HEAP32[$179 >> 2] | 0;
      if (($181 | 0) == ($__cache$017$i$i$i | 0)) {
       HEAP32[$179 >> 2] = 0;
       $184 = HEAP32[$179 + 4 >> 2] | 0;
       if (!$184) {
        $$0$i$i$i$i = $179;
        break;
       } else $$0$i1$i$i$i$i = $184;
       while (1) {
        $186 = HEAP32[$$0$i1$i$i$i$i >> 2] | 0;
        if ($186) {
         $$0$i1$i$i$i$i = $186;
         continue;
        }
        $189 = HEAP32[$$0$i1$i$i$i$i + 4 >> 2] | 0;
        if (!$189) {
         $$0$i1$i$i$i$i$lcssa = $$0$i1$i$i$i$i;
         break;
        } else $$0$i1$i$i$i$i = $189;
       }
       $$0$i$i$i$i = $$0$i1$i$i$i$i$lcssa;
       break;
      } else {
       HEAP32[$179 + 4 >> 2] = 0;
       if (!$181) {
        $$0$i$i$i$i = $179;
        break;
       } else $$0$i$i9$i$i$i = $181;
       while (1) {
        $193 = HEAP32[$$0$i$i9$i$i$i >> 2] | 0;
        if ($193) {
         $$0$i$i9$i$i$i = $193;
         continue;
        }
        $196 = HEAP32[$$0$i$i9$i$i$i + 4 >> 2] | 0;
        if (!$196) {
         $$0$i$i9$i$i$i$lcssa = $$0$i$i9$i$i$i;
         break;
        } else $$0$i$i9$i$i$i = $196;
       }
       $$0$i$i$i$i = $$0$i$i9$i$i$i$lcssa;
       break;
      }
     } while (0);
     $198 = HEAP32[$160 >> 2] | 0;
     do if (!$198) {
      $$0$i$i27$i$i$i = $160;
      $207 = $160;
     } else {
      $__v$idx$val$i$i19$i$i$i = HEAP32[$__cache$017$i$i$i + 16 >> 2] | 0;
      $__nd$0$i$i21$i$i$i = $198;
      while (1) {
       if ($__v$idx$val$i$i19$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i21$i$i$i + 16 >> 2] | 0) >>> 0) {
        $201 = HEAP32[$__nd$0$i$i21$i$i$i >> 2] | 0;
        if (!$201) {
         $$lcssa96 = $__nd$0$i$i21$i$i$i;
         $__nd$0$i$i21$i$i$i$lcssa94 = $__nd$0$i$i21$i$i$i;
         label = 54;
         break;
        } else $__nd$0$be$in$i$i24$i$i$i = $201;
       } else {
        $203 = $__nd$0$i$i21$i$i$i + 4 | 0;
        $204 = HEAP32[$203 >> 2] | 0;
        if (!$204) {
         $$lcssa95 = $203;
         $__nd$0$i$i21$i$i$i$lcssa = $__nd$0$i$i21$i$i$i;
         label = 57;
         break;
        } else $__nd$0$be$in$i$i24$i$i$i = $204;
       }
       $__nd$0$i$i21$i$i$i = $__nd$0$be$in$i$i24$i$i$i;
      }
      if ((label | 0) == 54) {
       label = 0;
       $$0$i$i27$i$i$i = $$lcssa96;
       $207 = $__nd$0$i$i21$i$i$i$lcssa94;
       break;
      } else if ((label | 0) == 57) {
       label = 0;
       $$0$i$i27$i$i$i = $$lcssa95;
       $207 = $__nd$0$i$i21$i$i$i$lcssa;
       break;
      }
     } while (0);
     HEAP32[$__cache$017$i$i$i >> 2] = 0;
     HEAP32[$__cache$017$i$i$i + 4 >> 2] = 0;
     HEAP32[$178 >> 2] = $207;
     HEAP32[$$0$i$i27$i$i$i >> 2] = $__cache$017$i$i$i;
     $209 = HEAP32[HEAP32[$153 >> 2] >> 2] | 0;
     if (!$209) $213 = $__cache$017$i$i$i; else {
      HEAP32[$153 >> 2] = $209;
      $213 = HEAP32[$$0$i$i27$i$i$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$167 >> 2] | 0, $213);
     HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 1;
     $217 = HEAP32[$__first$0216$i$i$i + 4 >> 2] | 0;
     if (!$217) {
      $$0$i$i13$i$i$i = $__first$0216$i$i$i;
      while (1) {
       $222 = HEAP32[$$0$i$i13$i$i$i + 8 >> 2] | 0;
       if ((HEAP32[$222 >> 2] | 0) == ($$0$i$i13$i$i$i | 0)) {
        $$01$i$i16$i$i$i = $222;
        break;
       } else $$0$i$i13$i$i$i = $222;
      }
     } else {
      $$0$i$i$i11$i$i$i = $217;
      while (1) {
       $219 = HEAP32[$$0$i$i$i11$i$i$i >> 2] | 0;
       if (!$219) {
        $$01$i$i16$i$i$i = $$0$i$i$i11$i$i$i;
        break;
       } else $$0$i$i$i11$i$i$i = $219;
      }
     }
     if (!$$0$i$i$i$i) {
      $__first$03$ph$i$i$i = $$01$i$i16$i$i$i;
      break L53;
     } else {
      $__cache$017$i$i$i = $$0$i$i$i$i;
      $__first$0216$i$i$i = $$01$i$i16$i$i$i;
     }
    }
    $170 = HEAP32[$__cache$017$i$i$i$lcssa + 8 >> 2] | 0;
    if (!$170) $__cache$2$lcssa$i$i$i = $__cache$017$i$i$i$lcssa; else {
     $227 = $170;
     while (1) {
      $228 = HEAP32[$227 + 8 >> 2] | 0;
      if (!$228) {
       $$lcssa93 = $227;
       break;
      } else $227 = $228;
     }
     $__cache$2$lcssa$i$i$i = $$lcssa93;
    }
    __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($153, $__cache$2$lcssa$i$i$i);
    $$pre$phi51Z2D = $155;
    $$pre$phiZ2D = $155;
    break L50;
   }
  } while (0);
  if (($__first$03$ph$i$i$i | 0) == ($155 | 0)) {
   $$pre$phi51Z2D = $155;
   $$pre$phiZ2D = $155;
  } else {
   $231 = $$idx$val$i9 + -12 | 0;
   $232 = $$idx$val$i9 + -12 | 0;
   $__first$0314$i$i$i = $__first$03$ph$i$i$i;
   while (1) {
    $233 = $__first$0314$i$i$i + 16 | 0;
    $234 = HEAP32[$231 >> 2] | 0;
    do if (!$234) {
     $$0$i$i8$i$i$i = $231;
     $256 = $231;
    } else {
     $__v$idx$val$i$i$i$i$i = HEAP32[$233 >> 2] | 0;
     $__nd$0$i$i$i$i$i = $234;
     while (1) {
      if ($__v$idx$val$i$i$i$i$i >>> 0 < (HEAP32[$__nd$0$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
       $237 = HEAP32[$__nd$0$i$i$i$i$i >> 2] | 0;
       if (!$237) {
        $$lcssa92 = $__nd$0$i$i$i$i$i;
        $__nd$0$i$i$i$i$i$lcssa91 = $__nd$0$i$i$i$i$i;
        label = 74;
        break;
       } else $__nd$0$be$in$i$i$i$i$i = $237;
      } else {
       $239 = $__nd$0$i$i$i$i$i + 4 | 0;
       $240 = HEAP32[$239 >> 2] | 0;
       if (!$240) {
        $$lcssa = $239;
        $__nd$0$i$i$i$i$i$lcssa = $__nd$0$i$i$i$i$i;
        label = 77;
        break;
       } else $__nd$0$be$in$i$i$i$i$i = $240;
      }
      $__nd$0$i$i$i$i$i = $__nd$0$be$in$i$i$i$i$i;
     }
     if ((label | 0) == 74) {
      label = 0;
      $$0$i$i8$i$i$i = $$lcssa92;
      $256 = $__nd$0$i$i$i$i$i$lcssa91;
      break;
     } else if ((label | 0) == 77) {
      label = 0;
      $$0$i$i8$i$i$i = $$lcssa;
      $256 = $__nd$0$i$i$i$i$i$lcssa;
      break;
     }
    } while (0);
    $242 = __Znwj(24) | 0;
    $244 = $233;
    $249 = HEAP32[$244 + 4 >> 2] | 0;
    $250 = $242 + 16 | 0;
    HEAP32[$250 >> 2] = HEAP32[$244 >> 2];
    HEAP32[$250 + 4 >> 2] = $249;
    HEAP32[$242 >> 2] = 0;
    HEAP32[$242 + 4 >> 2] = 0;
    HEAP32[$242 + 8 >> 2] = $256;
    HEAP32[$$0$i$i8$i$i$i >> 2] = $242;
    $258 = HEAP32[HEAP32[$153 >> 2] >> 2] | 0;
    if (!$258) $262 = $242; else {
     HEAP32[$153 >> 2] = $258;
     $262 = HEAP32[$$0$i$i8$i$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$232 >> 2] | 0, $262);
    HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 1;
    $266 = HEAP32[$__first$0314$i$i$i + 4 >> 2] | 0;
    if (!$266) {
     $$0$i$i$i$i$i = $__first$0314$i$i$i;
     while (1) {
      $271 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$271 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
       $$01$i$i$i$i$i = $271;
       break;
      } else $$0$i$i$i$i$i = $271;
     }
    } else {
     $$0$i$i$i$i$i$i = $266;
     while (1) {
      $268 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
      if (!$268) {
       $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i = $268;
     }
    }
    if (($$01$i$i$i$i$i | 0) == ($155 | 0)) {
     $$pre$phi51Z2D = $155;
     $$pre$phiZ2D = $155;
     break;
    } else $__first$0314$i$i$i = $$01$i$i$i$i$i;
   }
  }
 } while (0);
 HEAP8[(HEAP32[$$idx3$i >> 2] | 0) + -108 >> 0] = 0;
 $$idx$val2$i = HEAP32[$up_values >> 2] | 0;
 if (($$idx$val2$i | 0) == ($$pre$phi51Z2D | 0)) {
  STACKTOP = sp;
  return;
 }
 $$idx$val2$i1936 = $$idx$val2$i;
 while (1) {
  if (!(HEAP32[$$idx$val2$i1936 + 20 >> 2] | 0)) {
   label = 88;
   break;
  }
  $281 = HEAP32[$$idx$val2$i1936 + 4 >> 2] | 0;
  if (!$281) {
   $$0$i$i$i18 = $$idx$val2$i1936;
   while (1) {
    $286 = HEAP32[$$0$i$i$i18 + 8 >> 2] | 0;
    if ((HEAP32[$286 >> 2] | 0) == ($$0$i$i$i18 | 0)) {
     $$01$i$i$i = $286;
     break;
    } else $$0$i$i$i18 = $286;
   }
  } else {
   $$0$i$i$i$i17 = $281;
   while (1) {
    $283 = HEAP32[$$0$i$i$i$i17 >> 2] | 0;
    if (!$283) {
     $$01$i$i$i = $$0$i$i$i$i17;
     break;
    } else $$0$i$i$i$i17 = $283;
   }
  }
  if (($$01$i$i$i | 0) == ($$pre$phiZ2D | 0)) {
   label = 94;
   break;
  } else $$idx$val2$i1936 = $$01$i$i$i;
 }
 if ((label | 0) == 88) ___assert_fail(52066, 52089, 362, 52096); else if ((label | 0) == 94) {
  STACKTOP = sp;
  return;
 }
}

function __ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj($this, $binds, $obj_level) {
 $this = $this | 0;
 $binds = $binds | 0;
 $obj_level = $obj_level | 0;
 var $$0$i = 0, $$0$i7$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph6$i$i$i = 0, $$01 = 0, $$01$i$i = 0, $$01$ph5$i$i$i = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$0342 = 0, $$043 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$lcssa = 0, $$lcssa76 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $104 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $113 = 0, $115 = 0, $116 = 0, $118 = 0, $122 = 0, $127 = 0, $129 = 0, $131 = 0, $135 = 0, $136 = 0, $138 = 0, $140 = 0, $145 = 0, $150 = 0, $151 = 0, $156 = 0, $16 = 0, $161 = 0, $162 = 0, $166 = 0, $168 = 0, $17 = 0, $173 = 0, $174 = 0, $177 = 0, $179 = 0, $180 = 0, $184 = 0, $185 = 0, $188 = 0, $19 = 0, $193 = 0, $194 = 0, $195 = 0, $197 = 0, $198 = 0, $2 = 0, $204 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $210 = 0, $216 = 0, $219 = 0, $22 = 0, $225 = 0, $226 = 0, $227 = 0, $229 = 0, $230 = 0, $231 = 0, $234 = 0, $24 = 0, $240 = 0, $243 = 0, $244 = 0, $25 = 0, $250 = 0, $254 = 0, $255 = 0, $257 = 0, $26 = 0, $260 = 0, $262 = 0, $266 = 0, $267 = 0, $27 = 0, $273 = 0, $274 = 0, $28 = 0, $280 = 0, $282 = 0, $287 = 0, $288 = 0, $291 = 0, $292 = 0, $293 = 0, $3 = 0, $4 = 0, $42 = 0, $43 = 0, $5 = 0, $50 = 0, $52 = 0, $6 = 0, $61 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $99 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa74 = 0, $__nd$0$i$i$lcssa75 = 0, $__parent$i = 0, $__r$0$i = 0, $eh$lpad$body$index4Z2D = 0, $eh$lpad$body$indexZ2D = 0, $init$0 = 0, $params = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $var_id = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__parent$i = sp + 284 | 0;
 $var_id = sp + 80 | 0;
 $0 = sp;
 $1 = sp + 196 | 0;
 $2 = sp + 240 | 0;
 $params = sp + 288 | 0;
 $3 = sp + 68 | 0;
 $4 = sp + 152 | 0;
 $5 = sp + 124 | 0;
 $6 = sp + 56 | 0;
 $7 = sp + 12 | 0;
 __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($var_id, $this, 11, 0);
 $8 = $this + 4 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $var_id + 4 | 0;
 $11 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($9, $10) | 0;
 do if (($11 | 0) == ($9 + 4 | 0)) {
  __THREW__ = 0;
  $16 = invoke_ii(67, 12) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 21; else {
   __THREW__ = 0;
   invoke_vii(40, $16 | 0, $10 | 0);
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $24 = ___cxa_find_matching_catch() | 0;
    $25 = tempRet0;
    __ZdlPv($16);
    $eh$lpad$body$index4Z2D = $25;
    $eh$lpad$body$indexZ2D = $24;
    break;
   }
   __THREW__ = 0;
   $21 = invoke_iii(23, $9 | 0, $10 | 0) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 21; else {
    HEAP32[$21 >> 2] = $16;
    $$0$i = $16;
    label = 8;
   }
  }
 } else {
  $$0$i = HEAP32[$11 + 28 >> 2] | 0;
  label = 8;
 } while (0);
 L9 : do if ((label | 0) == 8) {
  $26 = $$0$i;
  $27 = $binds + 4 | 0;
  $28 = HEAP32[$27 >> 2] | 0;
  if ($28) {
   $$0$ph6$i$i$i = $27;
   $$01$ph5$i$i$i = $28;
   L12 : while (1) {
    $$013$i$i$i = $$01$ph5$i$i$i;
    while (1) {
     if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $$0$i >>> 0) {
      $$013$i$i$i$lcssa = $$013$i$i$i;
      break;
     }
     $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
     if (!$$013$i$i$i) {
      $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i;
      break L12;
     }
    }
    $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
    if (!$$01$ph5$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa;
     break;
    } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
   }
   if (($$0$ph$lcssa$i$i$i | 0) != ($27 | 0)) if ($$0$i >>> 0 >= (HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0) {
    $42 = ___cxa_allocate_exception(40) | 0;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    $43 = HEAP8[$10 >> 0] | 0;
    $50 = ($43 & 1) == 0 ? ($43 & 255) >>> 1 : HEAP32[$var_id + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiii(13, $0 | 0, 51646, 21, $50 + 21 | 0);
    $52 = __THREW__;
    __THREW__ = 0;
    L21 : do if ($52 & 1) label = 23; else {
     __THREW__ = 0;
     invoke_iiii(35, $0 | 0, ((HEAP8[$10 >> 0] & 1) == 0 ? $10 + 1 | 0 : HEAP32[$var_id + 12 >> 2] | 0) | 0, $50 | 0) | 0;
     $61 = __THREW__;
     __THREW__ = 0;
     if ($61 & 1) label = 23; else {
      __THREW__ = 0;
      invoke_vii(40, $42 | 0, $var_id + 16 | 0);
      $64 = __THREW__;
      __THREW__ = 0;
      do if ($64 & 1) $$01 = 1; else {
       $66 = $42 + 12 | 0;
       $67 = $var_id + 28 | 0;
       HEAP32[$66 >> 2] = HEAP32[$67 >> 2];
       HEAP32[$66 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
       HEAP32[$66 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
       HEAP32[$66 + 12 >> 2] = HEAP32[$67 + 12 >> 2];
       __THREW__ = 0;
       invoke_vii(40, $42 + 28 | 0, $0 | 0);
       $69 = __THREW__;
       __THREW__ = 0;
       if ($69 & 1) {
        $71 = ___cxa_find_matching_catch() | 0;
        $72 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($42);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
        $$0342 = $72;
        $$043 = $71;
        break L21;
       } else {
        __THREW__ = 0;
        invoke_viii(4, $42 | 0, 8, 172);
        __THREW__ = 0;
        $$01 = 0;
        break;
       }
      } while (0);
      $78 = ___cxa_find_matching_catch() | 0;
      $79 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      if ($$01) {
       $$0342 = $79;
       $$043 = $78;
      } else {
       $$3 = $78;
       $$36 = $79;
       $293 = $var_id + 16 | 0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($293);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
       ___resumeException($$3 | 0);
      }
     }
    } while (0);
    if ((label | 0) == 23) {
     $76 = ___cxa_find_matching_catch() | 0;
     $77 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$0342 = $77;
     $$043 = $76;
    }
    ___cxa_free_exception($42 | 0);
    $$3 = $$043;
    $$36 = $$0342;
    $293 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($293);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    ___resumeException($$3 | 0);
   }
  }
  $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $80 = $this$idx$val$idx$val + 8 | 0;
  HEAP32[$1 >> 2] = HEAP32[$80 >> 2];
  $82 = $1 + 4 | 0;
  __THREW__ = 0;
  invoke_vii(40, $82 | 0, $this$idx$val$idx$val + 12 | 0);
  $84 = __THREW__;
  __THREW__ = 0;
  if ($84 & 1) label = 21; else {
   HEAP32[$1 >> 2] = HEAP32[$80 >> 2];
   $87 = $1 + 16 | 0;
   __THREW__ = 0;
   invoke_vii(40, $87 | 0, $this$idx$val$idx$val + 24 | 0);
   $89 = __THREW__;
   __THREW__ = 0;
   if ($89 & 1) {
    $91 = ___cxa_find_matching_catch() | 0;
    $92 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
    $eh$lpad$body$index4Z2D = $92;
    $eh$lpad$body$indexZ2D = $91;
    break;
   }
   $93 = $1 + 28 | 0;
   $94 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$93 >> 2] = HEAP32[$94 >> 2];
   HEAP32[$93 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
   HEAP32[$93 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
   HEAP32[$93 + 12 >> 2] = HEAP32[$94 + 12 >> 2];
   $95 = HEAP32[$80 >> 2] | 0;
   HEAP32[$1 >> 2] = $95;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($87);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($82);
   L40 : do if (($95 | 0) == 8) {
    $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
    $97 = $this$idx$val$idx$val$i + 8 | 0;
    HEAP32[$2 >> 2] = HEAP32[$97 >> 2];
    $99 = $2 + 4 | 0;
    __THREW__ = 0;
    invoke_vii(40, $99 | 0, $this$idx$val$idx$val$i + 12 | 0);
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 21;
     break L9;
    }
    HEAP32[$2 >> 2] = HEAP32[$97 >> 2];
    $104 = $2 + 16 | 0;
    __THREW__ = 0;
    invoke_vii(40, $104 | 0, $this$idx$val$idx$val$i + 24 | 0);
    $106 = __THREW__;
    __THREW__ = 0;
    if ($106 & 1) {
     $108 = ___cxa_find_matching_catch() | 0;
     $109 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
     $eh$lpad$body$index4Z2D = $109;
     $eh$lpad$body$indexZ2D = $108;
     break L9;
    }
    $110 = $2 + 28 | 0;
    $111 = $this$idx$val$idx$val$i + 36 | 0;
    HEAP32[$110 >> 2] = HEAP32[$111 >> 2];
    HEAP32[$110 + 4 >> 2] = HEAP32[$111 + 4 >> 2];
    HEAP32[$110 + 8 >> 2] = HEAP32[$111 + 8 >> 2];
    HEAP32[$110 + 12 >> 2] = HEAP32[$111 + 12 >> 2];
    HEAP32[$2 >> 2] = HEAP32[$97 >> 2];
    $113 = HEAP32[$this >> 2] | 0;
    $115 = HEAP32[$113 + 4 >> 2] | 0;
    $116 = $115 + 4 | 0;
    $118 = HEAP32[$115 >> 2] | 0;
    HEAP32[$118 + 4 >> 2] = HEAP32[$116 >> 2];
    HEAP32[HEAP32[$116 >> 2] >> 2] = $118;
    $122 = $113 + 8 | 0;
    HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + -1;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115 + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($115 + 12 | 0);
    __ZdlPv($115);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($104);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($99);
    __THREW__ = 0;
    invoke_viii(3, $3 | 0, 50943, 18);
    $127 = __THREW__;
    __THREW__ = 0;
    if ($127 & 1) {
     label = 21;
     break L9;
    }
    __THREW__ = 0;
    invoke_viiii(14, $params | 0, $this | 0, $3 | 0, $obj_level | 0);
    $129 = __THREW__;
    __THREW__ = 0;
    if ($129 & 1) {
     $225 = ___cxa_find_matching_catch() | 0;
     $226 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$3 = $225;
     $$36 = $226;
     $293 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($293);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     ___resumeException($$3 | 0);
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    __THREW__ = 0;
    invoke_viiii(12, $4 | 0, $this | 0, 13, 51668);
    $131 = __THREW__;
    __THREW__ = 0;
    if ($131 & 1) label = 59; else {
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 16 | 0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4 + 4 | 0);
     __THREW__ = 0;
     $135 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) label = 59; else {
      $138 = HEAP32[$8 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(40, $5 | 0, $var_id + 16 | 0);
      $140 = __THREW__;
      __THREW__ = 0;
      if ($140 & 1) label = 59; else {
       $145 = $var_id + 28 | 0;
       $150 = HEAP32[$145 + 4 >> 2] | 0;
       $151 = $5 + 12 | 0;
       HEAP32[$151 >> 2] = HEAP32[$145 >> 2];
       HEAP32[$151 + 4 >> 2] = $150;
       $156 = $135 + 24 | 0;
       $161 = HEAP32[$156 + 4 >> 2] | 0;
       $162 = $5 + 20 | 0;
       HEAP32[$162 >> 2] = HEAP32[$156 >> 2];
       HEAP32[$162 + 4 >> 2] = $161;
       HEAP32[$6 >> 2] = 0;
       $166 = $6 + 4 | 0;
       HEAP32[$166 >> 2] = 0;
       HEAP32[$6 + 8 >> 2] = 0;
       $168 = $params + 4 | 0;
       $173 = (HEAP32[$168 >> 2] | 0) - (HEAP32[$params >> 2] | 0) | 0;
       $174 = $173 >> 2;
       L55 : do if (!$174) label = 49; else {
        if ($174 >>> 0 > 1073741823) {
         __THREW__ = 0;
         invoke_vi(175, $6 | 0);
         $177 = __THREW__;
         __THREW__ = 0;
         if (!($177 & 1)) label = 41;
        } else label = 41;
        if ((label | 0) == 41) {
         __THREW__ = 0;
         $179 = invoke_ii(67, $173 | 0) | 0;
         $180 = __THREW__;
         __THREW__ = 0;
         if (!($180 & 1)) {
          HEAP32[$166 >> 2] = $179;
          HEAP32[$6 >> 2] = $179;
          HEAP32[$6 + 8 >> 2] = $179 + ($174 << 2);
          $184 = HEAP32[$params >> 2] | 0;
          $185 = HEAP32[$168 >> 2] | 0;
          if (($184 | 0) == ($185 | 0)) {
           label = 49;
           break;
          }
          $$01$i$i = $184;
          $188 = $179;
          while (1) {
           HEAP32[$188 >> 2] = HEAP32[$$01$i$i >> 2];
           $188 = (HEAP32[$166 >> 2] | 0) + 4 | 0;
           HEAP32[$166 >> 2] = $188;
           $$01$i$i = $$01$i$i + 4 | 0;
           if (($$01$i$i | 0) == ($185 | 0)) {
            label = 49;
            break L55;
           }
          }
         }
        }
        $193 = ___cxa_find_matching_catch() | 0;
        $194 = tempRet0;
        $195 = HEAP32[$6 >> 2] | 0;
        $197 = $195;
        if ($195) {
         $198 = HEAP32[$166 >> 2] | 0;
         if (($198 | 0) != ($195 | 0)) HEAP32[$166 >> 2] = $198 + (~(($198 + -4 - $197 | 0) >>> 2) << 2);
         __ZdlPv($195);
        }
        $$1 = $193;
        $$14 = $194;
       } while (0);
       do if ((label | 0) == 49) {
        __THREW__ = 0;
        $204 = invoke_iiiii(6, $138 | 0, $5 | 0, $6 | 0, $135 | 0) | 0;
        $205 = __THREW__;
        __THREW__ = 0;
        if ($205 & 1) {
         $229 = ___cxa_find_matching_catch() | 0;
         $230 = tempRet0;
         $231 = HEAP32[$6 >> 2] | 0;
         if (!$231) {
          $$1 = $229;
          $$14 = $230;
          break;
         }
         $234 = HEAP32[$166 >> 2] | 0;
         if (($234 | 0) != ($231 | 0)) HEAP32[$166 >> 2] = $234 + (~(($234 + -4 - $231 | 0) >>> 2) << 2);
         __ZdlPv($231);
         $$1 = $229;
         $$14 = $230;
         break;
        }
        $207 = HEAP32[$6 >> 2] | 0;
        $209 = $207;
        if ($207) {
         $210 = HEAP32[$166 >> 2] | 0;
         if (($210 | 0) != ($207 | 0)) HEAP32[$166 >> 2] = $210 + (~(($210 + -4 - $209 | 0) >>> 2) << 2);
         __ZdlPv($207);
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
        $216 = HEAP32[$params >> 2] | 0;
        if (!$216) {
         $init$0 = $204;
         break L40;
        }
        $219 = HEAP32[$168 >> 2] | 0;
        if (($219 | 0) != ($216 | 0)) HEAP32[$168 >> 2] = $219 + (~(($219 + -4 - $216 | 0) >>> 2) << 2);
        __ZdlPv($216);
        $init$0 = $204;
        break L40;
       } while (0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
       $$2 = $$1;
       $$25 = $$14;
       $$pre$phiZ2D = $params;
      }
     }
    }
    if ((label | 0) == 59) {
     $227 = ___cxa_find_matching_catch() | 0;
     $$2 = $227;
     $$25 = tempRet0;
     $$pre$phiZ2D = $params;
    }
    $240 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    if (!$240) {
     $$3 = $$2;
     $$36 = $$25;
     $293 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($293);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     ___resumeException($$3 | 0);
    }
    $243 = $params + 4 | 0;
    $244 = HEAP32[$243 >> 2] | 0;
    if (($244 | 0) != ($240 | 0)) HEAP32[$243 >> 2] = $244 + (~(($244 + -4 - $240 | 0) >>> 2) << 2);
    __ZdlPv($240);
    $$3 = $$2;
    $$36 = $$25;
    $293 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($293);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    ___resumeException($$3 | 0);
   } else {
    __THREW__ = 0;
    invoke_viiii(12, $7 | 0, $this | 0, 13, 51668);
    $250 = __THREW__;
    __THREW__ = 0;
    if ($250 & 1) {
     label = 21;
     break L9;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7 + 16 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7 + 4 | 0);
    __THREW__ = 0;
    $254 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
    $255 = __THREW__;
    __THREW__ = 0;
    if ($255 & 1) {
     label = 21;
     break L9;
    } else $init$0 = $254;
   } while (0);
   $257 = HEAP32[$27 >> 2] | 0;
   do if (!$257) {
    HEAP32[$__parent$i >> 2] = $27;
    $$0$i7$i = $27;
    $280 = $27;
   } else {
    $__nd$0$i$i = $257;
    while (1) {
     $260 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
     if ($$0$i >>> 0 < $260 >>> 0) {
      $262 = HEAP32[$__nd$0$i$i >> 2] | 0;
      if (!$262) {
       $$lcssa76 = $__nd$0$i$i;
       $__nd$0$i$i$lcssa75 = $__nd$0$i$i;
       label = 75;
       break;
      } else $__nd$0$be$in$i$i = $262;
     } else {
      if ($260 >>> 0 >= $$0$i >>> 0) {
       $__nd$0$i$i$lcssa = $__nd$0$i$i;
       label = 81;
       break;
      }
      $266 = $__nd$0$i$i + 4 | 0;
      $267 = HEAP32[$266 >> 2] | 0;
      if (!$267) {
       $$lcssa = $266;
       $__nd$0$i$i$lcssa74 = $__nd$0$i$i;
       label = 79;
       break;
      } else $__nd$0$be$in$i$i = $267;
     }
     $__nd$0$i$i = $__nd$0$be$in$i$i;
    }
    if ((label | 0) == 75) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa75;
     $$0$i7$i = $$lcssa76;
     $280 = $__nd$0$i$i$lcssa75;
     break;
    } else if ((label | 0) == 79) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa74;
     $$0$i7$i = $$lcssa;
     $280 = $__nd$0$i$i$lcssa74;
     break;
    } else if ((label | 0) == 81) {
     HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
     if (!$__nd$0$i$i$lcssa) {
      $$0$i7$i = $__parent$i;
      $280 = $__nd$0$i$i$lcssa;
      break;
     } else $__r$0$i = $__nd$0$i$i$lcssa;
     $291 = $__r$0$i + 20 | 0;
     HEAP32[$291 >> 2] = $init$0;
     $292 = $var_id + 16 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($292);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
     STACKTOP = sp;
     return;
    }
   } while (0);
   __THREW__ = 0;
   $273 = invoke_ii(67, 24) | 0;
   $274 = __THREW__;
   __THREW__ = 0;
   if ($274 & 1) label = 21; else {
    HEAP32[$273 + 16 >> 2] = $26;
    HEAP32[$273 + 20 >> 2] = 0;
    HEAP32[$273 >> 2] = 0;
    HEAP32[$273 + 4 >> 2] = 0;
    HEAP32[$273 + 8 >> 2] = $280;
    HEAP32[$$0$i7$i >> 2] = $273;
    $282 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
    if (!$282) $287 = $273; else {
     HEAP32[$binds >> 2] = $282;
     $287 = HEAP32[$$0$i7$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$binds + 4 >> 2] | 0, $287);
    $288 = $binds + 8 | 0;
    HEAP32[$288 >> 2] = (HEAP32[$288 >> 2] | 0) + 1;
    $__r$0$i = $273;
    $291 = $__r$0$i + 20 | 0;
    HEAP32[$291 >> 2] = $init$0;
    $292 = $var_id + 16 | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($292);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 if ((label | 0) == 21) {
  $74 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index4Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $74;
 }
 $$3 = $eh$lpad$body$indexZ2D;
 $$36 = $eh$lpad$body$index4Z2D;
 $293 = $var_id + 16 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($293);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 ___resumeException($$3 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $a, $b) {
 $this = $this | 0;
 $loc = $loc | 0;
 $a = $a | 0;
 $b = $b | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i = 0, $$0$i$i$i1$i$i$i$i = 0, $$0$i$i3$i$i$i$i = 0, $$01 = 0, $$01$i$i = 0, $$01$i$i$i$i$i$i = 0, $$01$i$i6$i$i$i$i = 0, $$03 = 0, $$1 = 0, $$12 = 0, $$14 = 0, $$idx$val$i17 = 0, $$idx$val28 = 0, $$idx1$val$i$i$i$i$i = 0, $$idx6 = 0, $$idx8 = 0, $$idx8$val = 0, $$idx9 = 0, $$idx9$val = 0, $$pre$phi37Z2D = 0, $$pre$phi39Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $104 = 0, $107 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $118 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $130 = 0, $132 = 0, $144 = 0, $153 = 0, $158 = 0, $16 = 0, $160 = 0, $163 = 0, $165 = 0, $167 = 0, $17 = 0, $172 = 0, $177 = 0, $178 = 0, $180 = 0, $181 = 0, $182 = 0, $188 = 0, $190 = 0, $191 = 0, $192 = 0, $204 = 0, $212 = 0, $214 = 0, $215 = 0, $216 = 0, $218 = 0, $219 = 0, $221 = 0, $223 = 0, $225 = 0, $226 = 0, $228 = 0, $230 = 0, $233 = 0, $234 = 0, $236 = 0, $239 = 0, $241 = 0, $244 = 0, $25 = 0, $253 = 0, $255 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $262 = 0, $267 = 0, $268 = 0, $270 = 0, $280 = 0, $284 = 0, $29 = 0, $33 = 0, $36 = 0, $37 = 0, $41 = 0, $42 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $86 = 0, $91 = 0, $92 = 0, $94 = 0, $97 = 0, $__lhs_sz$03$i = 0, $__lp$04$i = 0, $__rp$05$i = 0, $__v$i$i$i = 0, $different$0$off0 = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields_a = 0, $fields_b = 0, $i$027 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $this$idx$val$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $__v$i$i$i = sp + 52 | 0;
 $fields_a = sp + 40 | 0;
 $fields_b = sp + 28 | 0;
 $0 = sp;
 $1 = HEAP32[$a >> 2] | 0;
 if (($1 | 0) != (HEAP32[$b >> 2] | 0)) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 switch ($1 | 0) {
 case 16:
  {
   $5 = HEAP32[$a + 8 >> 2] | 0;
   $7 = HEAP32[$b + 8 >> 2] | 0;
   $$idx8 = $5 + 8 | 0;
   $$idx8$val = HEAP32[$$idx8 >> 2] | 0;
   $$idx9 = $5 + 12 | 0;
   $$idx9$val = HEAP32[$$idx9 >> 2] | 0;
   $$idx6 = $7 + 8 | 0;
   if (($$idx9$val - $$idx8$val | 0) != ((HEAP32[$7 + 12 >> 2] | 0) - (HEAP32[$$idx6 >> 2] | 0) | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (($$idx9$val | 0) == ($$idx8$val | 0)) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   }
   $16 = $this + 56 | 0;
   $17 = $this + 40 | 0;
   $$idx$val28 = $$idx8$val;
   $i$027 = 0;
   while (1) {
    $25 = HEAP32[$$idx$val28 + ($i$027 << 2) >> 2] | 0;
    $26 = $25 + 5 | 0;
    if (!(HEAP8[$26 >> 0] | 0)) {
     $29 = $25 + 40 | 0;
     $33 = $25 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($16, $loc, $25, HEAP32[$29 >> 2] | 0, HEAP32[$25 + 44 >> 2] | 0, $33);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$25 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($16);
     $36 = $25 + 8 | 0;
     HEAP32[$36 >> 2] = HEAP32[$17 >> 2];
     HEAP32[$36 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$36 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$36 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     HEAP8[$26 >> 0] = 1;
     HEAP32[$29 >> 2] = 0;
     $37 = $25 + 32 | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($33, HEAP32[$37 >> 2] | 0);
     HEAP32[$25 + 36 >> 2] = 0;
     HEAP32[$33 >> 2] = $37;
     HEAP32[$37 >> 2] = 0;
    }
    $41 = HEAP32[(HEAP32[$$idx6 >> 2] | 0) + ($i$027 << 2) >> 2] | 0;
    $42 = $41 + 5 | 0;
    if (!(HEAP8[$42 >> 0] | 0)) {
     $45 = $41 + 40 | 0;
     $49 = $41 + 28 | 0;
     __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($16, $loc, $41, HEAP32[$45 >> 2] | 0, HEAP32[$41 + 44 >> 2] | 0, $49);
     __ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST($this, HEAP32[$41 + 48 >> 2] | 0);
     __ZN12_GLOBAL__N_15Stack3popEv($16);
     $52 = $41 + 8 | 0;
     HEAP32[$52 >> 2] = HEAP32[$17 >> 2];
     HEAP32[$52 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
     HEAP32[$52 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
     HEAP32[$52 + 12 >> 2] = HEAP32[$17 + 12 >> 2];
     HEAP8[$42 >> 0] = 1;
     HEAP32[$45 >> 2] = 0;
     $53 = $41 + 32 | 0;
     __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($49, HEAP32[$53 >> 2] | 0);
     HEAP32[$41 + 36 >> 2] = 0;
     HEAP32[$49 >> 2] = $53;
     HEAP32[$53 >> 2] = 0;
     $$pre$phi37Z2D = $52;
    } else $$pre$phi37Z2D = $41 + 8 | 0;
    $i$027 = $i$027 + 1 | 0;
    if (!(__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_($this, $loc, $25 + 8 | 0, $$pre$phi37Z2D) | 0)) {
     $$1 = 0;
     label = 73;
     break;
    }
    $$idx$val28 = HEAP32[$$idx8 >> 2] | 0;
    if ($i$027 >>> 0 >= (HEAP32[$$idx9 >> 2] | 0) - $$idx$val28 >> 2 >>> 0) {
     $$1 = 1;
     label = 73;
     break;
    }
   }
   if ((label | 0) == 73) {
    STACKTOP = sp;
    return $$1 | 0;
   }
   break;
  }
 case 1:
  {
   $$1 = (HEAP8[$a + 8 >> 0] | 0) == (HEAP8[$b + 8 >> 0] | 0);
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 2:
  {
   $$1 = +HEAPF64[$a + 8 >> 3] == +HEAPF64[$b + 8 >> 3];
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 19:
  {
   $255 = HEAP32[$a + 8 >> 2] | 0;
   $257 = HEAP32[$b + 8 >> 2] | 0;
   $258 = $255 + 8 | 0;
   $259 = $257 + 8 | 0;
   $260 = HEAP8[$258 >> 0] | 0;
   $262 = ($260 & 1) == 0;
   $267 = $262 ? ($260 & 255) >>> 1 : HEAP32[$255 + 12 >> 2] | 0;
   $268 = HEAP8[$259 >> 0] | 0;
   $270 = ($268 & 1) == 0;
   if (($267 | 0) != (($270 ? ($268 & 255) >>> 1 : HEAP32[$257 + 12 >> 2] | 0) | 0)) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   $280 = $262 ? $258 + 1 | 0 : HEAP32[$255 + 16 >> 2] | 0;
   $284 = $270 ? $259 + 1 | 0 : HEAP32[$257 + 16 >> 2] | 0;
   if (!$262) {
    $$1 = (_memcmp($280, $284, $267) | 0) == 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
   if (!$267) {
    $$1 = 1;
    STACKTOP = sp;
    return $$1 | 0;
   } else {
    $__lhs_sz$03$i = $267;
    $__lp$04$i = $280;
    $__rp$05$i = $284;
   }
   while (1) {
    if ((HEAP8[$__lp$04$i >> 0] | 0) != (HEAP8[$__rp$05$i >> 0] | 0)) {
     $$1 = 0;
     label = 73;
     break;
    }
    $__lhs_sz$03$i = $__lhs_sz$03$i + -1 | 0;
    if (!$__lhs_sz$03$i) {
     $$1 = 1;
     label = 73;
     break;
    } else {
     $__lp$04$i = $__lp$04$i + 1 | 0;
     $__rp$05$i = $__rp$05$i + 1 | 0;
    }
   }
   if ((label | 0) == 73) {
    STACKTOP = sp;
    return $$1 | 0;
   }
   break;
  }
 case 0:
  {
   $$1 = 1;
   STACKTOP = sp;
   return $$1 | 0;
  }
 case 18:
  {
   $69 = HEAP32[$a + 8 >> 2] | 0;
   $71 = HEAP32[$b + 8 >> 2] | 0;
   __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($fields_a, $69);
   __THREW__ = 0;
   invoke_vii(61, $fields_b | 0, $71 | 0);
   $72 = __THREW__;
   __THREW__ = 0;
   if ($72 & 1) {
    $111 = ___cxa_find_matching_catch() | 0;
    $$12 = $111;
    $$14 = tempRet0;
    $$pre$phiZ2D = $fields_a + 4 | 0;
    $253 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $253);
    ___resumeException($$12 | 0);
   }
   L52 : do if ((HEAP32[$fields_a + 8 >> 2] | 0) == (HEAP32[$fields_b + 8 >> 2] | 0)) {
    $79 = HEAP32[$fields_a >> 2] | 0;
    $80 = $fields_a + 4 | 0;
    $81 = HEAP32[$fields_b >> 2] | 0;
    if (($79 | 0) != ($80 | 0)) {
     $101 = $81;
     $84 = $79;
     $86 = $81;
     $91 = $79;
     while (1) {
      if ((HEAP32[$84 + 16 >> 2] | 0) != (HEAP32[$86 + 16 >> 2] | 0)) {
       $$0 = 0;
       $$pre$phi39Z2D = $80;
       break L52;
      }
      $92 = HEAP32[$91 + 4 >> 2] | 0;
      if (!$92) {
       $$0$i$i3$i$i$i$i = $91;
       while (1) {
        $97 = HEAP32[$$0$i$i3$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$97 >> 2] | 0) == ($$0$i$i3$i$i$i$i | 0)) {
         $$01$i$i6$i$i$i$i = $97;
         break;
        } else $$0$i$i3$i$i$i$i = $97;
       }
      } else {
       $$0$i$i$i1$i$i$i$i = $92;
       while (1) {
        $94 = HEAP32[$$0$i$i$i1$i$i$i$i >> 2] | 0;
        if (!$94) {
         $$01$i$i6$i$i$i$i = $$0$i$i$i1$i$i$i$i;
         break;
        } else $$0$i$i$i1$i$i$i$i = $94;
       }
      }
      $102 = HEAP32[$101 + 4 >> 2] | 0;
      if (!$102) {
       $$0$i$i$i$i$i$i = $101;
       while (1) {
        $107 = HEAP32[$$0$i$i$i$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$107 >> 2] | 0) == ($$0$i$i$i$i$i$i | 0)) {
         $$01$i$i$i$i$i$i = $107;
         break;
        } else $$0$i$i$i$i$i$i = $107;
       }
      } else {
       $$0$i$i$i$i$i$i$i = $102;
       while (1) {
        $104 = HEAP32[$$0$i$i$i$i$i$i$i >> 2] | 0;
        if (!$104) {
         $$01$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i;
         break;
        } else $$0$i$i$i$i$i$i$i = $104;
       }
      }
      if (($$01$i$i6$i$i$i$i | 0) == ($80 | 0)) break; else {
       $101 = $$01$i$i$i$i$i$i;
       $84 = $$01$i$i6$i$i$i$i;
       $86 = $$01$i$i$i$i$i$i;
       $91 = $$01$i$i6$i$i$i$i;
      }
     }
    }
    $117 = $this + 56 | 0;
    __THREW__ = 0;
    invoke_vii(40, $0 | 0, $loc | 0);
    $118 = __THREW__;
    __THREW__ = 0;
    L72 : do if ($118 & 1) {
     $115 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $115;
     $lpad$phi$index2 = tempRet0;
     label = 32;
    } else {
     $120 = $0 + 12 | 0;
     $121 = $loc + 12 | 0;
     HEAP32[$120 >> 2] = HEAP32[$121 >> 2];
     HEAP32[$120 + 4 >> 2] = HEAP32[$121 + 4 >> 2];
     HEAP32[$120 + 8 >> 2] = HEAP32[$121 + 8 >> 2];
     HEAP32[$120 + 12 >> 2] = HEAP32[$121 + 12 >> 2];
     $122 = $this + 68 | 0;
     $123 = $this + 72 | 0;
     $124 = HEAP32[$123 >> 2] | 0;
     $125 = $this + 76 | 0;
     $126 = HEAP32[$125 >> 2] | 0;
     do if ($124 >>> 0 < $126 >>> 0) {
      HEAP32[$124 >> 2] = 7;
      HEAP32[$124 + 4 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(40, $124 + 8 | 0, $0 | 0);
      $130 = __THREW__;
      __THREW__ = 0;
      if ($130 & 1) label = 56; else {
       $132 = $124 + 20 | 0;
       HEAP32[$132 >> 2] = HEAP32[$120 >> 2];
       HEAP32[$132 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
       HEAP32[$132 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
       HEAP32[$132 + 12 >> 2] = HEAP32[$120 + 12 >> 2];
       HEAP8[$124 + 36 >> 0] = 0;
       HEAP32[$124 + 72 >> 2] = 0;
       HEAP32[$124 + 80 >> 2] = 0;
       HEAP32[$124 + 84 >> 2] = 0;
       HEAP32[$124 + 76 >> 2] = $124 + 80;
       HEAP32[$124 + 88 >> 2] = 0;
       HEAP32[$124 + 96 >> 2] = 0;
       HEAP32[$124 + 100 >> 2] = 0;
       HEAP32[$124 + 92 >> 2] = $124 + 96;
       $144 = $124 + 104 | 0;
       HEAP32[$124 + 132 >> 2] = 0;
       HEAP32[$124 + 136 >> 2] = 0;
       HEAP32[$144 >> 2] = 0;
       HEAP32[$144 + 4 >> 2] = 0;
       HEAP32[$144 + 8 >> 2] = 0;
       HEAP32[$144 + 12 >> 2] = 0;
       HEAP32[$144 + 16 >> 2] = 0;
       HEAP32[$144 + 20 >> 2] = 0;
       HEAP32[$124 + 128 >> 2] = $124 + 132;
       HEAP32[$124 + 40 >> 2] = 0;
       HEAP32[$124 + 56 >> 2] = 0;
       HEAP32[$123 >> 2] = (HEAP32[$123 >> 2] | 0) + 144;
       label = 48;
      }
     } else {
      $153 = $this + 76 | 0;
      $this$idx2$val$i$i$i = HEAP32[$122 >> 2] | 0;
      $158 = (($124 - $this$idx2$val$i$i$i | 0) / 144 | 0) + 1 | 0;
      if ($158 >>> 0 > 29826161) {
       __THREW__ = 0;
       invoke_vi(175, $122 | 0);
       $160 = __THREW__;
       __THREW__ = 0;
       if ($160 & 1) {
        label = 56;
        break;
       }
       $$idx1$val$i$i$i$i$i = HEAP32[$125 >> 2] | 0;
       $this$idx$val$i$i$i = HEAP32[$122 >> 2] | 0;
      } else {
       $$idx1$val$i$i$i$i$i = $126;
       $this$idx$val$i$i$i = $this$idx2$val$i$i$i;
      }
      $163 = $this$idx$val$i$i$i;
      $165 = ($$idx1$val$i$i$i$i$i - $163 | 0) / 144 | 0;
      if ($165 >>> 0 < 14913080) {
       $167 = $165 << 1;
       $$0$i$i$i$i = $167 >>> 0 < $158 >>> 0 ? $158 : $167;
      } else $$0$i$i$i$i = 29826161;
      $172 = ((HEAP32[$123 >> 2] | 0) - $163 | 0) / 144 | 0;
      HEAP32[$__v$i$i$i + 12 >> 2] = 0;
      HEAP32[$__v$i$i$i + 16 >> 2] = $153;
      if (!$$0$i$i$i$i) $180 = 0; else {
       __THREW__ = 0;
       $177 = invoke_ii(67, $$0$i$i$i$i * 144 | 0) | 0;
       $178 = __THREW__;
       __THREW__ = 0;
       if ($178 & 1) {
        label = 56;
        break;
       }
       $180 = $177;
      }
      HEAP32[$__v$i$i$i >> 2] = $180;
      $181 = $180 + ($172 * 144 | 0) | 0;
      $182 = $__v$i$i$i + 8 | 0;
      HEAP32[$182 >> 2] = $181;
      HEAP32[$__v$i$i$i + 4 >> 2] = $181;
      HEAP32[$__v$i$i$i + 12 >> 2] = $180 + ($$0$i$i$i$i * 144 | 0);
      HEAP32[$181 >> 2] = 7;
      HEAP32[$180 + ($172 * 144 | 0) + 4 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(40, $180 + ($172 * 144 | 0) + 8 | 0, $0 | 0);
      $188 = __THREW__;
      __THREW__ = 0;
      if ($188 & 1) {
       $190 = ___cxa_find_matching_catch() | 0;
       $191 = tempRet0;
       __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
       $eh$lpad$body$index7Z2D = $191;
       $eh$lpad$body$indexZ2D = $190;
       break;
      } else {
       $192 = $180 + ($172 * 144 | 0) + 20 | 0;
       HEAP32[$192 >> 2] = HEAP32[$120 >> 2];
       HEAP32[$192 + 4 >> 2] = HEAP32[$120 + 4 >> 2];
       HEAP32[$192 + 8 >> 2] = HEAP32[$120 + 8 >> 2];
       HEAP32[$192 + 12 >> 2] = HEAP32[$120 + 12 >> 2];
       HEAP8[$180 + ($172 * 144 | 0) + 36 >> 0] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 72 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 80 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 84 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 76 >> 2] = $180 + ($172 * 144 | 0) + 80;
       HEAP32[$180 + ($172 * 144 | 0) + 88 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 96 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 100 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 92 >> 2] = $180 + ($172 * 144 | 0) + 96;
       $204 = $180 + ($172 * 144 | 0) + 104 | 0;
       HEAP32[$180 + ($172 * 144 | 0) + 132 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 136 >> 2] = 0;
       HEAP32[$204 >> 2] = 0;
       HEAP32[$204 + 4 >> 2] = 0;
       HEAP32[$204 + 8 >> 2] = 0;
       HEAP32[$204 + 12 >> 2] = 0;
       HEAP32[$204 + 16 >> 2] = 0;
       HEAP32[$204 + 20 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 128 >> 2] = $180 + ($172 * 144 | 0) + 132;
       HEAP32[$180 + ($172 * 144 | 0) + 40 >> 2] = 0;
       HEAP32[$180 + ($172 * 144 | 0) + 56 >> 2] = 0;
       HEAP32[$182 >> 2] = $180 + (($172 + 1 | 0) * 144 | 0);
       __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($122, $__v$i$i$i);
       __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i$i);
       label = 48;
       break;
      }
     } while (0);
     if ((label | 0) == 48) {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $212 = HEAP32[$fields_a >> 2] | 0;
      L96 : do if (($212 | 0) == ($80 | 0)) $different$0$off0 = 1; else {
       $214 = $this + 40 | 0;
       $216 = $212;
       while (1) {
        $215 = $216 + 16 | 0;
        __THREW__ = 0;
        $218 = invoke_iiiii(7, $this | 0, $loc | 0, $69 | 0, HEAP32[$215 >> 2] | 0) | 0;
        $219 = __THREW__;
        __THREW__ = 0;
        if ($219 & 1) break;
        __THREW__ = 0;
        invoke_vii(59, $this | 0, $218 | 0);
        $221 = __THREW__;
        __THREW__ = 0;
        if ($221 & 1) break;
        __ZN12_GLOBAL__N_15Stack3popEv($117);
        $223 = (HEAP32[$123 >> 2] | 0) + -104 | 0;
        HEAP32[$223 >> 2] = HEAP32[$214 >> 2];
        HEAP32[$223 + 4 >> 2] = HEAP32[$214 + 4 >> 2];
        HEAP32[$223 + 8 >> 2] = HEAP32[$214 + 8 >> 2];
        HEAP32[$223 + 12 >> 2] = HEAP32[$214 + 12 >> 2];
        __THREW__ = 0;
        $225 = invoke_iiiii(7, $this | 0, $loc | 0, $71 | 0, HEAP32[$215 >> 2] | 0) | 0;
        $226 = __THREW__;
        __THREW__ = 0;
        if ($226 & 1) break;
        __THREW__ = 0;
        invoke_vii(59, $this | 0, $225 | 0);
        $228 = __THREW__;
        __THREW__ = 0;
        if ($228 & 1) break;
        __ZN12_GLOBAL__N_15Stack3popEv($117);
        $230 = (HEAP32[$123 >> 2] | 0) + -88 | 0;
        HEAP32[$230 >> 2] = HEAP32[$214 >> 2];
        HEAP32[$230 + 4 >> 2] = HEAP32[$214 + 4 >> 2];
        HEAP32[$230 + 8 >> 2] = HEAP32[$214 + 8 >> 2];
        HEAP32[$230 + 12 >> 2] = HEAP32[$214 + 12 >> 2];
        $$idx$val$i17 = HEAP32[$123 >> 2] | 0;
        __THREW__ = 0;
        $233 = invoke_iiiii(8, $this | 0, $loc | 0, $$idx$val$i17 + -104 | 0, $$idx$val$i17 + -88 | 0) | 0;
        $234 = __THREW__;
        __THREW__ = 0;
        if ($234 & 1) break;
        if (!$233) {
         $different$0$off0 = 0;
         break L96;
        }
        $239 = HEAP32[$216 + 4 >> 2] | 0;
        if (!$239) {
         $$0$i$i = $216;
         while (1) {
          $244 = HEAP32[$$0$i$i + 8 >> 2] | 0;
          if ((HEAP32[$244 >> 2] | 0) == ($$0$i$i | 0)) {
           $$01$i$i = $244;
           break;
          } else $$0$i$i = $244;
         }
        } else {
         $$0$i$i$i = $239;
         while (1) {
          $241 = HEAP32[$$0$i$i$i >> 2] | 0;
          if (!$241) {
           $$01$i$i = $$0$i$i$i;
           break;
          } else $$0$i$i$i = $241;
         }
        }
        if (($$01$i$i | 0) == ($80 | 0)) {
         $different$0$off0 = 1;
         break L96;
        } else $216 = $$01$i$i;
       }
       $113 = ___cxa_find_matching_catch() | 0;
       $lpad$phi$index = $113;
       $lpad$phi$index2 = tempRet0;
       label = 32;
       break L72;
      } while (0);
      __ZN12_GLOBAL__N_15Stack3popEv($117);
      $$0 = $different$0$off0;
      $$pre$phi39Z2D = $80;
      break L52;
     } else if ((label | 0) == 56) {
      $236 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$index7Z2D = tempRet0;
      $eh$lpad$body$indexZ2D = $236;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$01 = $eh$lpad$body$indexZ2D;
     $$03 = $eh$lpad$body$index7Z2D;
    } while (0);
    if ((label | 0) == 32) {
     $$01 = $lpad$phi$index;
     $$03 = $lpad$phi$index2;
    }
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
    $$12 = $$01;
    $$14 = $$03;
    $$pre$phiZ2D = $80;
    $253 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, $253);
    ___resumeException($$12 | 0);
   } else {
    $$0 = 0;
    $$pre$phi39Z2D = $fields_a + 4 | 0;
   } while (0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_b, HEAP32[$fields_b + 4 >> 2] | 0);
   __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($fields_a, HEAP32[$$pre$phi39Z2D >> 2] | 0);
   $$1 = $$0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 default:
  {
   $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 }
 return 0;
}

function __ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj($agg$result, $this, $exprs, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $exprs = $exprs | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$0229 = 0, $$0428 = 0, $$13 = 0, $$15 = 0, $$2 = 0, $$26 = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $12 = 0, $121 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $131 = 0, $136 = 0, $138 = 0, $14 = 0, $140 = 0, $142 = 0, $143 = 0, $144 = 0, $146 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $152 = 0, $154 = 0, $16 = 0, $164 = 0, $165 = 0, $167 = 0, $169 = 0, $17 = 0, $170 = 0, $172 = 0, $174 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $181 = 0, $183 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $19 = 0, $190 = 0, $196 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $61 = 0, $66 = 0, $69 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $83 = 0, $85 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $98 = 0, $99 = 0, $eh$lpad$body$i$index13Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index5Z2D = 0, $eh$lpad$body$indexZ2D = 0, $got_comma$0$off0 = 0, $got_comma$1$off0 = 0, $got_comma$2$off0 = 0, $next = 0, $ss = 0, $this$idx$val$idx$val = 0, $this$idx$val$idx$val$i = 0, $this$idx$val$idx$val$i12 = 0, $this$idx4$val$idx$val = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $0 = sp + 160 | 0;
 $next = sp + 176 | 0;
 $1 = sp + 220 | 0;
 $2 = sp + 264 | 0;
 $ss = sp + 16 | 0;
 $3 = sp;
 $4 = sp + 172 | 0;
 $5 = $next + 4 | 0;
 $6 = $next + 16 | 0;
 $7 = $next + 28 | 0;
 $8 = $agg$result + 4 | 0;
 $9 = $agg$result + 16 | 0;
 $10 = $agg$result + 28 | 0;
 $11 = $exprs + 4 | 0;
 $12 = $exprs + 8 | 0;
 $13 = $1 + 4 | 0;
 $14 = $1 + 16 | 0;
 $15 = $1 + 28 | 0;
 $16 = $2 + 4 | 0;
 $17 = $2 + 16 | 0;
 $18 = $2 + 28 | 0;
 $19 = $5 + 1 | 0;
 $20 = $next + 16 | 0;
 $21 = $2 + 16 | 0;
 $22 = $20 + 1 | 0;
 $23 = $next + 24 | 0;
 $24 = $next + 20 | 0;
 $25 = $next + 12 | 0;
 $26 = $next + 8 | 0;
 $got_comma$0$off0 = 1;
 L1 : while (1) {
  $this$idx4$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
  $27 = $this$idx4$val$idx$val + 8 | 0;
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($5, $this$idx4$val$idx$val + 12 | 0);
  HEAP32[$next >> 2] = HEAP32[$27 >> 2];
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $this$idx4$val$idx$val + 24 | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  if ($32 & 1) {
   label = 3;
   break;
  }
  $36 = $this$idx4$val$idx$val + 36 | 0;
  HEAP32[$7 >> 2] = HEAP32[$36 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$36 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$36 + 8 >> 2];
  HEAP32[$7 + 12 >> 2] = HEAP32[$36 + 12 >> 2];
  $37 = HEAP32[$27 >> 2] | 0;
  HEAP32[$next >> 2] = $37;
  if ($got_comma$0$off0) {
   $98 = $37;
   $got_comma$1$off0 = 1;
  } else if (($37 | 0) == 5) {
   $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $39 = $this$idx$val$idx$val$i + 8 | 0;
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $13 | 0, $this$idx$val$idx$val$i + 12 | 0);
   $42 = __THREW__;
   __THREW__ = 0;
   if ($42 & 1) {
    label = 23;
    break;
   }
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $14 | 0, $this$idx$val$idx$val$i + 24 | 0);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    label = 8;
    break;
   }
   $50 = $this$idx$val$idx$val$i + 36 | 0;
   HEAP32[$15 >> 2] = HEAP32[$50 >> 2];
   HEAP32[$15 + 4 >> 2] = HEAP32[$50 + 4 >> 2];
   HEAP32[$15 + 8 >> 2] = HEAP32[$50 + 8 >> 2];
   HEAP32[$15 + 12 >> 2] = HEAP32[$50 + 12 >> 2];
   HEAP32[$1 >> 2] = HEAP32[$39 >> 2];
   $52 = HEAP32[$this >> 2] | 0;
   $54 = HEAP32[$52 + 4 >> 2] | 0;
   $55 = $54 + 4 | 0;
   $57 = HEAP32[$54 >> 2] | 0;
   HEAP32[$57 + 4 >> 2] = HEAP32[$55 >> 2];
   HEAP32[HEAP32[$55 >> 2] >> 2] = $57;
   $61 = $52 + 8 | 0;
   HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($54 + 12 | 0);
   __ZdlPv($54);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   $this$idx$val$idx$val = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $66 = $this$idx$val$idx$val + 8 | 0;
   HEAP32[$2 >> 2] = HEAP32[$66 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $16 | 0, $this$idx$val$idx$val + 12 | 0);
   $69 = __THREW__;
   __THREW__ = 0;
   if ($69 & 1) {
    label = 23;
    break;
   }
   HEAP32[$2 >> 2] = HEAP32[$66 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $17 | 0, $this$idx$val$idx$val + 24 | 0);
   $73 = __THREW__;
   __THREW__ = 0;
   if ($73 & 1) {
    label = 11;
    break;
   }
   $77 = $this$idx$val$idx$val + 36 | 0;
   HEAP32[$18 >> 2] = HEAP32[$77 >> 2];
   HEAP32[$18 + 4 >> 2] = HEAP32[$77 + 4 >> 2];
   HEAP32[$18 + 8 >> 2] = HEAP32[$77 + 8 >> 2];
   HEAP32[$18 + 12 >> 2] = HEAP32[$77 + 12 >> 2];
   $78 = HEAP32[$66 >> 2] | 0;
   HEAP32[$2 >> 2] = $78;
   HEAP32[$next >> 2] = $78;
   if (!(HEAP8[$5 >> 0] & 1)) {
    HEAP8[$19 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$25 >> 2] >> 0] = 0;
    HEAP32[$26 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $5 | 0, 0);
   $83 = __THREW__;
   __THREW__ = 0;
   if ($83 & 1) {
    label = 16;
    break;
   };
   HEAP32[$5 >> 2] = HEAP32[$16 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
   HEAP32[$16 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = 0;
   if (!(HEAP8[$20 >> 0] & 1)) {
    HEAP8[$22 >> 0] = 0;
    HEAP8[$20 >> 0] = 0;
   } else {
    HEAP8[HEAP32[$23 >> 2] >> 0] = 0;
    HEAP32[$24 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $20 | 0, 0);
   $91 = __THREW__;
   __THREW__ = 0;
   if ($91 & 1) {
    label = 21;
    break;
   };
   HEAP32[$20 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
   HEAP32[$20 + 8 >> 2] = HEAP32[$21 + 8 >> 2];
   HEAP32[$21 >> 2] = 0;
   HEAP32[$21 + 4 >> 2] = 0;
   HEAP32[$21 + 8 >> 2] = 0;
   HEAP32[$7 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$7 + 12 >> 2] = HEAP32[$18 + 12 >> 2];
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($17);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
   $98 = HEAP32[$next >> 2] | 0;
   $got_comma$1$off0 = 1;
  } else {
   $98 = $37;
   $got_comma$1$off0 = 0;
  }
  do if (($98 | 0) == 9) {
   $this$idx$val$idx$val$i12 = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
   $99 = $this$idx$val$idx$val$i12 + 8 | 0;
   HEAP32[$agg$result >> 2] = HEAP32[$99 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $8 | 0, $this$idx$val$idx$val$i12 + 12 | 0);
   $102 = __THREW__;
   __THREW__ = 0;
   if ($102 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$agg$result >> 2] = HEAP32[$99 >> 2];
   __THREW__ = 0;
   invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i12 + 24 | 0);
   $106 = __THREW__;
   __THREW__ = 0;
   if ($106 & 1) {
    label = 28;
    break L1;
   }
   $110 = $this$idx$val$idx$val$i12 + 36 | 0;
   HEAP32[$10 >> 2] = HEAP32[$110 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$110 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$110 + 8 >> 2];
   HEAP32[$10 + 12 >> 2] = HEAP32[$110 + 12 >> 2];
   HEAP32[$agg$result >> 2] = HEAP32[$99 >> 2];
   $112 = HEAP32[$this >> 2] | 0;
   $114 = HEAP32[$112 + 4 >> 2] | 0;
   $115 = $114 + 4 | 0;
   $117 = HEAP32[$114 >> 2] | 0;
   HEAP32[$117 + 4 >> 2] = HEAP32[$115 >> 2];
   HEAP32[HEAP32[$115 >> 2] >> 2] = $117;
   $121 = $112 + 8 | 0;
   HEAP32[$121 >> 2] = (HEAP32[$121 >> 2] | 0) + -1;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($114 + 24 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($114 + 12 | 0);
   __ZdlPv($114);
   $$01 = 0;
   $got_comma$2$off0 = $got_comma$1$off0;
  } else {
   if (!$got_comma$1$off0) {
    label = 31;
    break L1;
   }
   __THREW__ = 0;
   $187 = invoke_iiii(32, $this | 0, 15, $obj_level | 0) | 0;
   $188 = __THREW__;
   __THREW__ = 0;
   if ($188 & 1) {
    label = 23;
    break L1;
   }
   HEAP32[$4 >> 2] = $187;
   $190 = HEAP32[$11 >> 2] | 0;
   if ($190 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    HEAP32[$190 >> 2] = $187;
    HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 4;
    $$01 = 1;
    $got_comma$2$off0 = 0;
    break;
   } else {
    __THREW__ = 0;
    invoke_vii(50, $exprs | 0, $4 | 0);
    $196 = __THREW__;
    __THREW__ = 0;
    if ($196 & 1) {
     label = 23;
     break L1;
    } else {
     $$01 = 1;
     $got_comma$2$off0 = 0;
     break;
    }
   }
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  if ($$01) $got_comma$0$off0 = $got_comma$2$off0; else {
   label = 58;
   break;
  }
 }
 if ((label | 0) == 3) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
  ___resumeException($34 | 0);
 } else if ((label | 0) == 8) {
  $48 = ___cxa_find_matching_catch() | 0;
  $49 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
  $eh$lpad$body$index5Z2D = $49;
  $eh$lpad$body$indexZ2D = $48;
 } else if ((label | 0) == 11) {
  $75 = ___cxa_find_matching_catch() | 0;
  $76 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($16);
  $eh$lpad$body$index5Z2D = $76;
  $eh$lpad$body$indexZ2D = $75;
 } else if ((label | 0) == 16) {
  $85 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($85);
 } else if ((label | 0) == 21) {
  $93 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($93);
 } else if ((label | 0) == 23) {
  $95 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index5Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $95;
 } else if ((label | 0) == 28) {
  $108 = ___cxa_find_matching_catch() | 0;
  $109 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  $eh$lpad$body$index5Z2D = $109;
  $eh$lpad$body$indexZ2D = $108;
 } else if ((label | 0) == 31) {
  $126 = $ss + 64 | 0;
  $127 = $ss + 8 | 0;
  HEAP32[$127 >> 2] = 2912;
  $128 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 2952;
  HEAP32[$126 >> 2] = 2972;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $128 | 0);
  $131 = __THREW__;
  __THREW__ = 0;
  if ($131 & 1) {
   $144 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $144;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 2892;
   HEAP32[$ss + 64 >> 2] = 2932;
   HEAP32[$127 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $128 | 0);
   $136 = __THREW__;
   __THREW__ = 0;
   do if ($136 & 1) {
    $146 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index13Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $146;
   } else {
    HEAP32[$128 >> 2] = 2988;
    $138 = $ss + 44 | 0;
    HEAP32[$138 >> 2] = 0;
    HEAP32[$138 + 4 >> 2] = 0;
    HEAP32[$138 + 8 >> 2] = 0;
    HEAP32[$138 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $128 | 0, $0 | 0);
    $140 = __THREW__;
    __THREW__ = 0;
    if ($140 & 1) {
     $142 = ___cxa_find_matching_catch() | 0;
     $143 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($128);
     $eh$lpad$body$i$index13Z2D = $143;
     $eh$lpad$body$i$indexZ2D = $142;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $148 = $ss + 8 | 0;
    __THREW__ = 0;
    $149 = invoke_iiii(29, $148 | 0, 51670, 29) | 0;
    $150 = __THREW__;
    __THREW__ = 0;
    L48 : do if ($150 & 1) label = 47; else {
     $152 = HEAP8[$element_kind >> 0] | 0;
     $154 = ($152 & 1) == 0;
     __THREW__ = 0;
     $164 = invoke_iiii(29, $149 | 0, ($154 ? $element_kind + 1 | 0 : HEAP32[$element_kind + 8 >> 2] | 0) | 0, ($154 ? ($152 & 255) >>> 1 : HEAP32[$element_kind + 4 >> 2] | 0) | 0) | 0;
     $165 = __THREW__;
     __THREW__ = 0;
     if ($165 & 1) label = 47; else {
      __THREW__ = 0;
      invoke_iiii(29, $164 | 0, 60756, 1) | 0;
      $167 = __THREW__;
      __THREW__ = 0;
      if ($167 & 1) label = 47; else {
       $169 = ___cxa_allocate_exception(40) | 0;
       __THREW__ = 0;
       invoke_vii(43, $3 | 0, $128 | 0);
       $170 = __THREW__;
       __THREW__ = 0;
       L52 : do if ($170 & 1) {
        $183 = ___cxa_find_matching_catch() | 0;
        $$0229 = tempRet0;
        $$0428 = $183;
       } else {
        __THREW__ = 0;
        invoke_vii(40, $169 | 0, $6 | 0);
        $172 = __THREW__;
        __THREW__ = 0;
        do if ($172 & 1) $$0 = 1; else {
         $174 = $169 + 12 | 0;
         HEAP32[$174 >> 2] = HEAP32[$7 >> 2];
         HEAP32[$174 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
         HEAP32[$174 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
         HEAP32[$174 + 12 >> 2] = HEAP32[$7 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $169 + 28 | 0, $3 | 0);
         $176 = __THREW__;
         __THREW__ = 0;
         if ($176 & 1) {
          $178 = ___cxa_find_matching_catch() | 0;
          $179 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($169);
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
          $$0229 = $179;
          $$0428 = $178;
          break L52;
         } else {
          __THREW__ = 0;
          invoke_viii(4, $169 | 0, 8, 172);
          __THREW__ = 0;
          $$0 = 0;
          break;
         }
        } while (0);
        $185 = ___cxa_find_matching_catch() | 0;
        $186 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
        if ($$0) {
         $$0229 = $186;
         $$0428 = $185;
        } else {
         $$13 = $186;
         $$15 = $185;
         break L48;
        }
       } while (0);
       ___cxa_free_exception($169 | 0);
       $$13 = $$0229;
       $$15 = $$0428;
      }
     }
    } while (0);
    if ((label | 0) == 47) {
     $181 = ___cxa_find_matching_catch() | 0;
     $$13 = tempRet0;
     $$15 = $181;
    }
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$126 >> 2] = 2932;
    HEAP32[$148 >> 2] = 2912;
    HEAP32[$128 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($138);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($128);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($126);
    $$2 = $$13;
    $$26 = $$15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
    ___resumeException($$26 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index13Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($126);
  $eh$lpad$body$index5Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 } else if ((label | 0) == 58) {
  STACKTOP = sp;
  return;
 }
 $$2 = $eh$lpad$body$index5Z2D;
 $$26 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 ___resumeException($$26 | 0);
}

function __Z25jsonlang_vm_execute_multiP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i15$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i = 0, $$0117$i = 0, $$0216$i = 0, $$07$i = 0, $$1$i = 0, $$13$i = 0, $$2$i = 0, $$24$i = 0, $$3$i = 0, $$35$i = 0, $$4$i = 0, $$46$i = 0, $$idx$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $118 = 0, $120 = 0, $123 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $133 = 0, $134 = 0, $136 = 0, $137 = 0, $139 = 0, $141 = 0, $143 = 0, $145 = 0, $146 = 0, $148 = 0, $15 = 0, $151 = 0, $153 = 0, $156 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $166 = 0, $167 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $71 = 0, $72 = 0, $75 = 0, $78 = 0, $80 = 0, $81 = 0, $82 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $eh$lpad$body$i$i$index2Z2D = 0, $eh$lpad$body$i$i$indexZ2D = 0, $eh$lpad$body$index12Z2D = 0, $eh$lpad$body$indexZ2D = 0, $fields$i = 0, $loc$i = 0, $lpad$phi$i$index = 0, $lpad$phi$i$index7 = 0, $ss$i = 0, $vm = 0, $vstr$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 400 | 0;
 $0 = sp + 120 | 0;
 $loc$i = sp + 132 | 0;
 $1 = sp + 320 | 0;
 $ss$i = sp + 176 | 0;
 $2 = sp + 332 | 0;
 $3 = sp + 380 | 0;
 $fields$i = sp + 160 | 0;
 $4 = sp + 344 | 0;
 $vstr$i = sp + 356 | 0;
 $5 = sp + 368 | 0;
 $vm = sp;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(59, $vm | 0, $ast | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $167 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index12Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $167;
  __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 $10 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $10;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 51870, 20);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $78 = ___cxa_find_matching_catch() | 0;
  $$4$i = $78;
  $$46$i = tempRet0;
 } else {
  __THREW__ = 0;
  invoke_vii(40, $loc$i | 0, $1 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) {
   $80 = ___cxa_find_matching_catch() | 0;
   $81 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$4$i = $80;
   $$46$i = $81;
   break;
  }
  $15 = $loc$i + 12 | 0;
  HEAP32[$15 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  HEAP32[$15 + 8 >> 2] = 0;
  HEAP32[$15 + 12 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $16 = $vm + 40 | 0;
  L11 : do if ((HEAP32[$16 >> 2] | 0) == 18) {
   $91 = HEAP32[$vm + 48 >> 2] | 0;
   HEAP32[$fields$i + 4 >> 2] = 0;
   HEAP32[$fields$i + 8 >> 2] = 0;
   $94 = $fields$i + 4 | 0;
   HEAP32[$fields$i >> 2] = $94;
   __THREW__ = 0;
   invoke_vii(61, $4 | 0, $91 | 0);
   $95 = __THREW__;
   __THREW__ = 0;
   L13 : do if ($95 & 1) {
    $106 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$i$index = $106;
    $lpad$phi$i$index7 = tempRet0;
    label = 37;
   } else {
    $97 = HEAP32[$4 >> 2] | 0;
    $98 = $4 + 4 | 0;
    L16 : do if (($97 | 0) != ($98 | 0)) {
     $112 = $97;
     while (1) {
      $113 = HEAP32[$112 + 16 >> 2] | 0;
      __THREW__ = 0;
      $114 = invoke_iii(23, $fields$i | 0, $113 | 0) | 0;
      $115 = __THREW__;
      __THREW__ = 0;
      if ($115 & 1) break;
      HEAP32[$114 >> 2] = $113;
      $118 = HEAP32[$112 + 4 >> 2] | 0;
      if (!$118) {
       $$0$i$i$i = $112;
       while (1) {
        $123 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
        if ((HEAP32[$123 >> 2] | 0) == ($$0$i$i$i | 0)) {
         $$01$i$i$i = $123;
         break;
        } else $$0$i$i$i = $123;
       }
      } else {
       $$0$i$i$i$i = $118;
       while (1) {
        $120 = HEAP32[$$0$i$i$i$i >> 2] | 0;
        if (!$120) {
         $$01$i$i$i = $$0$i$i$i$i;
         break;
        } else $$0$i$i$i$i = $120;
       }
      }
      if (($$01$i$i$i | 0) == ($98 | 0)) break L16; else $112 = $$01$i$i$i;
     }
     $108 = ___cxa_find_matching_catch() | 0;
     $109 = tempRet0;
     __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$98 >> 2] | 0);
     $$2$i = $108;
     $$24$i = $109;
     break L13;
    } while (0);
    __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($4, HEAP32[$98 >> 2] | 0);
    $101 = HEAP32[$fields$i >> 2] | 0;
    if (($101 | 0) == ($94 | 0)) {
     $166 = HEAP32[$94 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $166);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
    $103 = $vm + 56 | 0;
    $$idx$i$i = $vm + 72 | 0;
    $128 = $101;
    while (1) {
     __THREW__ = 0;
     $130 = invoke_iiiii(7, $vm | 0, $loc$i | 0, $91 | 0, HEAP32[$128 + 28 >> 2] | 0) | 0;
     $131 = __THREW__;
     __THREW__ = 0;
     if ($131 & 1) {
      label = 35;
      break;
     }
     $133 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$133 >> 2] = HEAP32[$16 >> 2];
     HEAP32[$133 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
     HEAP32[$133 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
     HEAP32[$133 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
     __THREW__ = 0;
     invoke_vii(59, $vm | 0, $130 | 0);
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 35;
      break;
     }
     $136 = $130 + 4 | 0;
     __THREW__ = 0;
     if ($string_output) {
      __ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange($vstr$i, $vm, $136);
      $137 = __THREW__;
      __THREW__ = 0;
      if ($137 & 1) {
       label = 35;
       break;
      }
     } else {
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($5, 62848, 0);
      $139 = __THREW__;
      __THREW__ = 0;
      if ($139 & 1) {
       label = 35;
       break;
      }
      __THREW__ = 0;
      invoke_viiiii(6, $vstr$i | 0, $vm | 0, $136 | 0, 1, $5 | 0);
      $141 = __THREW__;
      __THREW__ = 0;
      if ($141 & 1) {
       label = 59;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     }
     $143 = (HEAP32[$$idx$i$i >> 2] | 0) + -104 | 0;
     HEAP32[$16 >> 2] = HEAP32[$143 >> 2];
     HEAP32[$16 + 4 >> 2] = HEAP32[$143 + 4 >> 2];
     HEAP32[$16 + 8 >> 2] = HEAP32[$143 + 8 >> 2];
     HEAP32[$16 + 12 >> 2] = HEAP32[$143 + 12 >> 2];
     __ZN12_GLOBAL__N_15Stack3popEv($103);
     __THREW__ = 0;
     $145 = invoke_iii(29, $agg$result | 0, $128 + 16 | 0) | 0;
     $146 = __THREW__;
     __THREW__ = 0;
     if ($146 & 1) {
      label = 60;
      break;
     }
     __THREW__ = 0;
     invoke_iii(20, $145 | 0, $vstr$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) {
      label = 60;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr$i);
     $151 = HEAP32[$128 + 4 >> 2] | 0;
     if (!$151) {
      $$0$i$i$i15$i = $128;
      while (1) {
       $156 = HEAP32[$$0$i$i$i15$i + 8 >> 2] | 0;
       if ((HEAP32[$156 >> 2] | 0) == ($$0$i$i$i15$i | 0)) {
        $$01$i$i$i$i = $156;
        break;
       } else $$0$i$i$i15$i = $156;
      }
     } else {
      $$0$i$i$i$i$i = $151;
      while (1) {
       $153 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
       if (!$153) {
        $$01$i$i$i$i = $$0$i$i$i$i$i;
        break;
       } else $$0$i$i$i$i$i = $153;
      }
     }
     if (($$01$i$i$i$i | 0) == ($94 | 0)) {
      label = 64;
      break;
     } else $128 = $$01$i$i$i$i;
    }
    if ((label | 0) == 35) {
     $104 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$i$index = $104;
     $lpad$phi$i$index7 = tempRet0;
     label = 37;
     break;
    } else if ((label | 0) == 59) {
     $160 = ___cxa_find_matching_catch() | 0;
     $161 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
     $$2$i = $160;
     $$24$i = $161;
     break;
    } else if ((label | 0) == 60) {
     $162 = ___cxa_find_matching_catch() | 0;
     $163 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($vstr$i);
     $$2$i = $162;
     $$24$i = $163;
     break;
    } else if ((label | 0) == 64) {
     $166 = HEAP32[$94 >> 2] | 0;
     __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, $166);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    }
   } while (0);
   if ((label | 0) == 37) {
    $$2$i = $lpad$phi$i$index;
    $$24$i = $lpad$phi$i$index7;
   }
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($fields$i, HEAP32[$94 >> 2] | 0);
   $$3$i = $$2$i;
   $$35$i = $$24$i;
  } else {
   $19 = $ss$i + 64 | 0;
   $20 = $ss$i + 8 | 0;
   HEAP32[$20 >> 2] = 2912;
   $21 = $ss$i + 12 | 0;
   HEAP32[$ss$i >> 2] = 2952;
   HEAP32[$19 >> 2] = 2972;
   HEAP32[$ss$i + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(41, $ss$i + 64 | 0, $21 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) {
    $37 = ___cxa_find_matching_catch() | 0;
    $$0$i$i = tempRet0;
    $$01$i$i = $37;
   } else {
    HEAP32[$ss$i + 136 >> 2] = 0;
    HEAP32[$ss$i + 140 >> 2] = -1;
    HEAP32[$ss$i >> 2] = 2892;
    HEAP32[$ss$i + 64 >> 2] = 2932;
    HEAP32[$20 >> 2] = 2912;
    __THREW__ = 0;
    invoke_vi(173, $21 | 0);
    $29 = __THREW__;
    __THREW__ = 0;
    do if ($29 & 1) {
     $39 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$i$i$index2Z2D = tempRet0;
     $eh$lpad$body$i$i$indexZ2D = $39;
    } else {
     HEAP32[$21 >> 2] = 2988;
     $31 = $ss$i + 44 | 0;
     HEAP32[$31 >> 2] = 0;
     HEAP32[$31 + 4 >> 2] = 0;
     HEAP32[$31 + 8 >> 2] = 0;
     HEAP32[$31 + 12 >> 2] = 0;
     HEAP32[$ss$i + 60 >> 2] = 24;
     HEAP32[$0 >> 2] = 0;
     HEAP32[$0 + 4 >> 2] = 0;
     HEAP32[$0 + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_vii(42, $21 | 0, $0 | 0);
     $33 = __THREW__;
     __THREW__ = 0;
     if ($33 & 1) {
      $35 = ___cxa_find_matching_catch() | 0;
      $36 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
      $eh$lpad$body$i$i$index2Z2D = $36;
      $eh$lpad$body$i$i$indexZ2D = $35;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $41 = $ss$i + 8 | 0;
     __THREW__ = 0;
     $42 = invoke_iiii(29, $41 | 0, 51891, 35) | 0;
     $43 = __THREW__;
     __THREW__ = 0;
     do if ($43 & 1) label = 24; else {
      __THREW__ = 0;
      invoke_vii(60, $2 | 0, HEAP32[$16 >> 2] | 0);
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) label = 24; else {
       $48 = HEAP8[$2 >> 0] | 0;
       $50 = ($48 & 1) == 0;
       __THREW__ = 0;
       $60 = invoke_iiii(29, $42 | 0, ($50 ? $2 + 1 | 0 : HEAP32[$2 + 8 >> 2] | 0) | 0, ($50 ? ($48 & 255) >>> 1 : HEAP32[$2 + 4 >> 2] | 0) | 0) | 0;
       $61 = __THREW__;
       __THREW__ = 0;
       if (!($61 & 1)) {
        __THREW__ = 0;
        $63 = invoke_iiii(29, $60 | 0, 51927, 2) | 0;
        $64 = __THREW__;
        __THREW__ = 0;
        if (!($64 & 1)) {
         __THREW__ = 0;
         $66 = invoke_iiii(29, $63 | 0, 51930, 61) | 0;
         $67 = __THREW__;
         __THREW__ = 0;
         if (!($67 & 1)) {
          __THREW__ = 0;
          invoke_iiii(29, $66 | 0, 51992, 23) | 0;
          $69 = __THREW__;
          __THREW__ = 0;
          if (!($69 & 1)) {
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
           $71 = ___cxa_allocate_exception(24) | 0;
           __THREW__ = 0;
           invoke_vii(43, $3 | 0, $21 | 0);
           $72 = __THREW__;
           __THREW__ = 0;
           if ($72 & 1) {
            $86 = ___cxa_find_matching_catch() | 0;
            $$0117$i = $86;
            $$0216$i = tempRet0;
           } else {
            __THREW__ = 0;
            invoke_viiii(16, $71 | 0, $vm + 56 | 0, $loc$i | 0, $3 | 0);
            $75 = __THREW__;
            __THREW__ = 0;
            if ($75 & 1) $$07$i = 1; else {
             __THREW__ = 0;
             invoke_viii(4, $71 | 0, 392, 179);
             __THREW__ = 0;
             $$07$i = 0;
            }
            $88 = ___cxa_find_matching_catch() | 0;
            $89 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
            if ($$07$i) {
             $$0117$i = $88;
             $$0216$i = $89;
            } else {
             $$1$i = $88;
             $$13$i = $89;
             break;
            }
           }
           ___cxa_free_exception($71 | 0);
           $$1$i = $$0117$i;
           $$13$i = $$0216$i;
           break;
          }
         }
        }
       }
       $84 = ___cxa_find_matching_catch() | 0;
       $85 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $$1$i = $84;
       $$13$i = $85;
      }
     } while (0);
     if ((label | 0) == 24) {
      $82 = ___cxa_find_matching_catch() | 0;
      $$1$i = $82;
      $$13$i = tempRet0;
     }
     HEAP32[$ss$i >> 2] = 2892;
     HEAP32[$19 >> 2] = 2932;
     HEAP32[$41 >> 2] = 2912;
     HEAP32[$21 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($31);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($21);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
     $$3$i = $$1$i;
     $$35$i = $$13$i;
     break L11;
    } while (0);
    $$0$i$i = $eh$lpad$body$i$i$index2Z2D;
    $$01$i$i = $eh$lpad$body$i$i$indexZ2D;
   }
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($19);
   $$3$i = $$01$i$i;
   $$35$i = $$0$i$i;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($loc$i);
  $$4$i = $$3$i;
  $$46$i = $$35$i;
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($agg$result, HEAP32[$10 >> 2] | 0);
 $eh$lpad$body$index12Z2D = $$46$i;
 $eh$lpad$body$indexZ2D = $$4$i;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier($this, $loc, $obj, $f) {
 $this = $this | 0;
 $loc = $loc | 0;
 $obj = $obj | 0;
 $f = $f | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$0$i7$i = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i14 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i7 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i8 = 0, $$0121 = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i10 = 0, $$013$i$i$i10$lcssa = 0, $$0220 = 0, $$04 = 0, $$1 = 0, $$13 = 0, $$idx$val2$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa101 = 0, $$lcssa104 = 0, $$lcssa105 = 0, $$pre = 0, $$pre$i$i$i$i$i$i = 0, $$pre$phi50Z2D = 0, $$pre$phi51Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phi53Z2D = 0, $$sroa$0$0$i$i = 0, $$sroa$0$0$i$i17 = 0, $0 = 0, $1 = 0, $105 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $117 = 0, $120 = 0, $124 = 0, $128 = 0, $13 = 0, $133 = 0, $134 = 0, $136 = 0, $139 = 0, $143 = 0, $148 = 0, $150 = 0, $152 = 0, $156 = 0, $157 = 0, $163 = 0, $164 = 0, $167 = 0, $171 = 0, $173 = 0, $177 = 0, $184 = 0, $187 = 0, $189 = 0, $190 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $22 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $46 = 0, $52 = 0, $53 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $73 = 0, $74 = 0, $75 = 0, $78 = 0, $80 = 0, $82 = 0, $85 = 0, $86 = 0, $90 = 0, $92 = 0, $94 = 0, $97 = 0, $__k$val$i = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa100 = 0, $__nd$0$i$i$lcssa99 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa102 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa103 = 0, $__parent$i = 0, $__r$0$i = 0, $binds = 0, $found_at = 0, $self = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $__parent$i = sp + 32 | 0;
 $found_at = sp + 28 | 0;
 $self = sp + 24 | 0;
 $0 = sp + 12 | 0;
 $binds = sp;
 HEAP32[$found_at >> 2] = 0;
 HEAP32[$self >> 2] = 0;
 $1 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $obj, $obj, 0, $found_at, $self) | 0;
 if (!$1) {
  $3 = ___cxa_allocate_exception(24) | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  $4 = HEAP8[$f >> 0] | 0;
  $11 = ($4 & 1) == 0 ? ($4 & 255) >>> 1 : HEAP32[$f + 4 >> 2] | 0;
  __THREW__ = 0;
  invoke_viiii(13, $0 | 0, 52016, 22, $11 + 22 | 0);
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 6; else {
   __THREW__ = 0;
   invoke_iiii(35, $0 | 0, ((HEAP8[$f >> 0] & 1) == 0 ? $f + 1 | 0 : HEAP32[$f + 8 >> 2] | 0) | 0, $11 | 0) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) label = 6; else {
    __THREW__ = 0;
    invoke_viiii(16, $3 | 0, $this + 56 | 0, $loc | 0, $0 | 0);
    $25 = __THREW__;
    __THREW__ = 0;
    if ($25 & 1) $$04 = 1; else {
     __THREW__ = 0;
     invoke_viii(4, $3 | 0, 392, 179);
     __THREW__ = 0;
     $$04 = 0;
    }
    $30 = ___cxa_find_matching_catch() | 0;
    $31 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    if ($$04) {
     $$0121 = $30;
     $$0220 = $31;
    } else {
     $$1 = $30;
     $$13 = $31;
     ___resumeException($$1 | 0);
    }
   }
  }
  if ((label | 0) == 6) {
   $28 = ___cxa_find_matching_catch() | 0;
   $29 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $$0121 = $28;
   $$0220 = $29;
  }
  ___cxa_free_exception($3 | 0);
  $$1 = $$0121;
  $$13 = $$0220;
  ___resumeException($$1 | 0);
 }
 $32 = ___dynamic_cast($1, 400, 416, 0) | 0;
 if ($32) {
  $34 = $32 + 24 | 0;
  $35 = HEAP32[$34 >> 2] | 0;
  if (!$35) label = 17; else {
   $$0$ph6$i$i$i = $34;
   $$01$ph5$i$i$i = $35;
   L18 : while (1) {
    $$013$i$i$i = $$01$ph5$i$i$i;
    while (1) {
     if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
      $$013$i$i$i$lcssa = $$013$i$i$i;
      break;
     }
     $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
     if (!$$013$i$i$i) {
      $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i;
      break L18;
     }
    }
    $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
    if (!$$01$ph5$i$i$i) {
     $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa;
     break;
    } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
   }
   if (($$0$ph$lcssa$i$i$i | 0) == ($34 | 0)) label = 17; else if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 17; else $$sroa$0$0$i$i = $$0$ph$lcssa$i$i$i;
  }
  if ((label | 0) == 17) $$sroa$0$0$i$i = $34;
  $46 = HEAP32[$$sroa$0$0$i$i + 24 >> 2] | 0;
  __ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE($this + 56 | 0, $loc, $32, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $32 + 8 | 0);
  $$0 = $46;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $52 = $1 + 28 + 4 | 0;
 $53 = HEAP32[$52 >> 2] | 0;
 if (!$53) label = 26; else {
  $$0$ph6$i$i$i7 = $52;
  $$01$ph5$i$i$i8 = $53;
  L32 : while (1) {
   $$013$i$i$i10 = $$01$ph5$i$i$i8;
   while (1) {
    if ((HEAP32[$$013$i$i$i10 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
     $$013$i$i$i10$lcssa = $$013$i$i$i10;
     break;
    }
    $$013$i$i$i10 = HEAP32[$$013$i$i$i10 + 4 >> 2] | 0;
    if (!$$013$i$i$i10) {
     $$0$ph$lcssa$i$i$i14 = $$0$ph6$i$i$i7;
     break L32;
    }
   }
   $$01$ph5$i$i$i8 = HEAP32[$$013$i$i$i10$lcssa >> 2] | 0;
   if (!$$01$ph5$i$i$i8) {
    $$0$ph$lcssa$i$i$i14 = $$013$i$i$i10$lcssa;
    break;
   } else $$0$ph6$i$i$i7 = $$013$i$i$i10$lcssa;
  }
  if (($$0$ph$lcssa$i$i$i14 | 0) == ($52 | 0)) label = 26; else if ((HEAP32[$$0$ph$lcssa$i$i$i14 + 16 >> 2] | 0) >>> 0 > $f >>> 0) label = 26; else $$sroa$0$0$i$i17 = $$0$ph$lcssa$i$i$i14;
 }
 if ((label | 0) == 26) $$sroa$0$0$i$i17 = $52;
 $64 = HEAP32[$$sroa$0$0$i$i17 + 20 >> 2] | 0;
 $66 = $binds + 4 | 0;
 HEAP32[$66 >> 2] = 0;
 $67 = $binds + 8 | 0;
 HEAP32[$67 >> 2] = 0;
 $68 = $binds + 4 | 0;
 HEAP32[$binds >> 2] = $68;
 $$idx$val2$i$i = HEAP32[$1 + 8 >> 2] | 0;
 $69 = $1 + 12 | 0;
 do if (($$idx$val2$i$i | 0) == ($69 | 0)) {
  $$pre$phi53Z2D = $68;
  $192 = HEAP32[$1 + 24 >> 2] | 0;
  $193 = $__parent$i;
  label = 67;
 } else {
  $73 = $68;
  $194 = $$idx$val2$i$i;
  $78 = $$idx$val2$i$i;
  while (1) {
   __THREW__ = 0;
   $74 = invoke_ii(67, 24) | 0;
   $75 = __THREW__;
   __THREW__ = 0;
   if ($75 & 1) {
    label = 58;
    break;
   }
   $80 = $78 + 16 | 0;
   $82 = HEAP32[$80 >> 2] | 0;
   $85 = HEAP32[$80 + 4 >> 2] | 0;
   $86 = $74 + 16 | 0;
   HEAP32[$86 >> 2] = $82;
   HEAP32[$86 + 4 >> 2] = $85;
   $90 = $82;
   $$pre$i$i$i$i$i$i = HEAP32[$68 >> 2] | 0;
   do if ((HEAP32[$binds >> 2] | 0) == ($68 | 0)) {
    $105 = $73;
    label = 36;
   } else {
    $92 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($92) {
     $$0$i$i$i$i$i$i$i$i = $68;
     while (1) {
      $97 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$97 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $97; else {
       $$01$i$i$i$i$i$i$i$i = $97;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $94 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$94) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $94;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $90 >>> 0) {
     $105 = $$01$i$i$i$i$i$i$i$i;
     label = 36;
    } else {
     if ($92) {
      HEAP32[$__parent$i >> 2] = $73;
      $$0$i$i$i$i1$i$i = $68;
      $120 = $73;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $90 >>> 0) {
       $108 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$108) {
        $$lcssa105 = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa103 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 42;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i = $108;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $90 >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 46;
       break;
      }
      $112 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
      $113 = HEAP32[$112 >> 2] | 0;
      if (!$113) {
       $$lcssa104 = $112;
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa102 = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 45;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i = $113;
     }
     if ((label | 0) == 42) {
      label = 0;
      $110 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa103;
      HEAP32[$__parent$i >> 2] = $110;
      $$0$i$i$i$i1$i$i = $$lcssa105;
      $120 = $110;
      break;
     } else if ((label | 0) == 45) {
      label = 0;
      $115 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa102;
      HEAP32[$__parent$i >> 2] = $115;
      $$0$i$i$i$i1$i$i = $$lcssa104;
      $120 = $115;
      break;
     } else if ((label | 0) == 46) {
      label = 0;
      $116 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      HEAP32[$__parent$i >> 2] = $116;
      $$0$i$i$i$i1$i$i = $__parent$i;
      $120 = $116;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 36) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$i >> 2] = $73;
     $$0$i$i$i$i1$i$i = $68;
     $120 = $73;
     break;
    } else {
     HEAP32[$__parent$i >> 2] = $105;
     $$0$i$i$i$i1$i$i = $105 + 4 | 0;
     $120 = $105;
     break;
    }
   } while (0);
   $117 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$117) {
    HEAP32[$74 >> 2] = 0;
    HEAP32[$74 + 4 >> 2] = 0;
    HEAP32[$74 + 8 >> 2] = $120;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $74;
    $124 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
    if (!$124) $128 = $74; else {
     HEAP32[$binds >> 2] = $124;
     $128 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$66 >> 2] | 0, $128);
    HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 1;
    $133 = $78;
   } else if (($117 | 0) == ($74 | 0)) $133 = $194; else {
    __ZdlPv($74);
    $133 = $194;
   }
   $134 = HEAP32[$133 + 4 >> 2] | 0;
   if (!$134) {
    $$0$i$i$i$i$i = $133;
    while (1) {
     $139 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$139 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $139;
      break;
     } else $$0$i$i$i$i$i = $139;
    }
   } else {
    $$0$i$i$i$i$i$i = $134;
    while (1) {
     $136 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$136) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $136;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($69 | 0)) break; else {
    $194 = $$01$i$i$i$i$i;
    $78 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 58) {
   $143 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$68 >> 2] | 0);
   ___resumeException($143 | 0);
  }
  $$pre = HEAP32[$68 >> 2] | 0;
  $__k$val$i = HEAP32[$1 + 24 >> 2] | 0;
  $148 = $__k$val$i;
  if (!$$pre) {
   $$pre$phi53Z2D = $68;
   $192 = $148;
   $193 = $__parent$i;
   label = 67;
  } else {
   $__nd$0$i$i = $$pre;
   while (1) {
    $150 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
    if ($150 >>> 0 > $__k$val$i >>> 0) {
     $152 = HEAP32[$__nd$0$i$i >> 2] | 0;
     if (!$152) {
      $$lcssa101 = $__nd$0$i$i;
      $__nd$0$i$i$lcssa100 = $__nd$0$i$i;
      label = 62;
      break;
     } else $__nd$0$be$in$i$i = $152;
    } else {
     if ($150 >>> 0 >= $__k$val$i >>> 0) {
      $__nd$0$i$i$lcssa = $__nd$0$i$i;
      label = 68;
      break;
     }
     $156 = $__nd$0$i$i + 4 | 0;
     $157 = HEAP32[$156 >> 2] | 0;
     if (!$157) {
      $$lcssa = $156;
      $__nd$0$i$i$lcssa99 = $__nd$0$i$i;
      label = 66;
      break;
     } else $__nd$0$be$in$i$i = $157;
    }
    $__nd$0$i$i = $__nd$0$be$in$i$i;
   }
   if ((label | 0) == 62) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa100;
    $$0$i7$i = $$lcssa101;
    $$pre$phi52Z2D = $68;
    $167 = $148;
    $171 = $__nd$0$i$i$lcssa100;
    $195 = $__parent$i;
    label = 69;
    break;
   } else if ((label | 0) == 66) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa99;
    $$0$i7$i = $$lcssa;
    $$pre$phi52Z2D = $68;
    $167 = $148;
    $171 = $__nd$0$i$i$lcssa99;
    $195 = $__parent$i;
    label = 69;
    break;
   } else if ((label | 0) == 68) {
    HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
    if (!$__nd$0$i$i$lcssa) {
     $$0$i7$i = $__parent$i;
     $$pre$phi52Z2D = $68;
     $167 = $148;
     $171 = $__nd$0$i$i$lcssa;
     $195 = $__parent$i;
     label = 69;
     break;
    } else {
     $$pre$phi51Z2D = $68;
     $196 = $__parent$i;
     $__r$0$i = $__nd$0$i$i$lcssa;
     label = 73;
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 67) {
  HEAP32[$__parent$i >> 2] = $68;
  $$0$i7$i = $68;
  $$pre$phi52Z2D = $$pre$phi53Z2D;
  $167 = $192;
  $171 = $68;
  $195 = $193;
  label = 69;
 }
 if ((label | 0) == 69) {
  __THREW__ = 0;
  $163 = invoke_ii(67, 24) | 0;
  $164 = __THREW__;
  __THREW__ = 0;
  if ($164 & 1) $$pre$phi50Z2D = $$pre$phi52Z2D; else {
   HEAP32[$163 + 16 >> 2] = $167;
   HEAP32[$163 + 20 >> 2] = 0;
   HEAP32[$163 >> 2] = 0;
   HEAP32[$163 + 4 >> 2] = 0;
   HEAP32[$163 + 8 >> 2] = $171;
   HEAP32[$$0$i7$i >> 2] = $163;
   $173 = HEAP32[HEAP32[$binds >> 2] >> 2] | 0;
   if (!$173) $177 = $163; else {
    HEAP32[$binds >> 2] = $173;
    $177 = HEAP32[$$0$i7$i >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$66 >> 2] | 0, $177);
   HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 1;
   $$pre$phi51Z2D = $$pre$phi52Z2D;
   $196 = $195;
   $__r$0$i = $163;
   label = 73;
  }
 }
 if ((label | 0) == 73) {
  HEAP32[$__r$0$i + 20 >> 2] = $64;
  __THREW__ = 0;
  invoke_viiiiii(10, $this + 56 | 0, $loc | 0, $1 | 0, HEAP32[$self >> 2] | 0, HEAP32[$found_at >> 2] | 0, $binds | 0);
  $184 = __THREW__;
  __THREW__ = 0;
  if ($184 & 1) $$pre$phi50Z2D = $$pre$phi51Z2D; else {
   $187 = HEAP32[$1 + 20 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$$pre$phi51Z2D >> 2] | 0);
   $$0 = $187;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $189 = ___cxa_find_matching_catch() | 0;
 $190 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($binds, HEAP32[$$pre$phi50Z2D >> 2] | 0);
 $$1 = $189;
 $$13 = $190;
 ___resumeException($$1 | 0);
 return 0;
}

function _free($mem) {
 $mem = $mem | 0;
 var $$lcssa = 0, $$pre$phi59Z2D = 0, $$pre$phi61Z2D = 0, $$pre$phiZ2D = 0, $$sum2 = 0, $1 = 0, $103 = 0, $104 = 0, $111 = 0, $112 = 0, $12 = 0, $120 = 0, $128 = 0, $133 = 0, $134 = 0, $137 = 0, $139 = 0, $14 = 0, $141 = 0, $15 = 0, $156 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $172 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $181 = 0, $182 = 0, $184 = 0, $185 = 0, $19 = 0, $191 = 0, $192 = 0, $2 = 0, $201 = 0, $206 = 0, $210 = 0, $216 = 0, $22 = 0, $231 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $24 = 0, $240 = 0, $241 = 0, $247 = 0, $252 = 0, $253 = 0, $256 = 0, $258 = 0, $26 = 0, $261 = 0, $266 = 0, $272 = 0, $276 = 0, $277 = 0, $284 = 0, $296 = 0, $301 = 0, $308 = 0, $309 = 0, $310 = 0, $318 = 0, $39 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $97 = 0, $F16$0 = 0, $I18$0 = 0, $K19$052 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$051 = 0, $T$051$lcssa = 0, $p$0 = 0, $psize$0 = 0, $psize$1 = 0, $sp$0$i = 0, $sp$0$in$i = 0;
 L1 : do if ($mem) {
  $1 = $mem + -8 | 0;
  $2 = HEAP32[1088] | 0;
  L3 : do if ($1 >>> 0 >= $2 >>> 0) {
   $5 = HEAP32[$mem + -4 >> 2] | 0;
   $6 = $5 & 3;
   if (($6 | 0) != 1) {
    $8 = $5 & -8;
    $9 = $mem + ($8 + -8) | 0;
    do if (!($5 & 1)) {
     $12 = HEAP32[$1 >> 2] | 0;
     if (!$6) break L1;
     $$sum2 = -8 - $12 | 0;
     $14 = $mem + $$sum2 | 0;
     $15 = $12 + $8 | 0;
     if ($14 >>> 0 < $2 >>> 0) break L3;
     if (($14 | 0) == (HEAP32[1089] | 0)) {
      $103 = $mem + ($8 + -4) | 0;
      $104 = HEAP32[$103 >> 2] | 0;
      if (($104 & 3 | 0) != 3) {
       $p$0 = $14;
       $psize$0 = $15;
       break;
      }
      HEAP32[1086] = $15;
      HEAP32[$103 >> 2] = $104 & -2;
      HEAP32[$mem + ($$sum2 + 4) >> 2] = $15 | 1;
      HEAP32[$9 >> 2] = $15;
      break L1;
     }
     $19 = $12 >>> 3;
     if ($12 >>> 0 < 256) {
      $22 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
      $24 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
      $26 = 4376 + ($19 << 1 << 2) | 0;
      do if (($22 | 0) != ($26 | 0)) {
       if ($22 >>> 0 >= $2 >>> 0) if ((HEAP32[$22 + 12 >> 2] | 0) == ($14 | 0)) break;
       _abort();
      } while (0);
      if (($24 | 0) == ($22 | 0)) {
       HEAP32[1084] = HEAP32[1084] & ~(1 << $19);
       $p$0 = $14;
       $psize$0 = $15;
       break;
      }
      do if (($24 | 0) == ($26 | 0)) $$pre$phi61Z2D = $24 + 8 | 0; else {
       if ($24 >>> 0 >= $2 >>> 0) {
        $39 = $24 + 8 | 0;
        if ((HEAP32[$39 >> 2] | 0) == ($14 | 0)) {
         $$pre$phi61Z2D = $39;
         break;
        }
       }
       _abort();
      } while (0);
      HEAP32[$22 + 12 >> 2] = $24;
      HEAP32[$$pre$phi61Z2D >> 2] = $22;
      $p$0 = $14;
      $psize$0 = $15;
      break;
     }
     $44 = HEAP32[$mem + ($$sum2 + 24) >> 2] | 0;
     $46 = HEAP32[$mem + ($$sum2 + 12) >> 2] | 0;
     do if (($46 | 0) == ($14 | 0)) {
      $57 = $mem + ($$sum2 + 20) | 0;
      $58 = HEAP32[$57 >> 2] | 0;
      if (!$58) {
       $60 = $mem + ($$sum2 + 16) | 0;
       $61 = HEAP32[$60 >> 2] | 0;
       if (!$61) {
        $R$1 = 0;
        break;
       } else {
        $R$0 = $61;
        $RP$0 = $60;
       }
      } else {
       $R$0 = $58;
       $RP$0 = $57;
      }
      while (1) {
       $63 = $R$0 + 20 | 0;
       $64 = HEAP32[$63 >> 2] | 0;
       if ($64) {
        $R$0 = $64;
        $RP$0 = $63;
        continue;
       }
       $66 = $R$0 + 16 | 0;
       $67 = HEAP32[$66 >> 2] | 0;
       if (!$67) {
        $R$0$lcssa = $R$0;
        $RP$0$lcssa = $RP$0;
        break;
       } else {
        $R$0 = $67;
        $RP$0 = $66;
       }
      }
      if ($RP$0$lcssa >>> 0 < $2 >>> 0) _abort(); else {
       HEAP32[$RP$0$lcssa >> 2] = 0;
       $R$1 = $R$0$lcssa;
       break;
      }
     } else {
      $49 = HEAP32[$mem + ($$sum2 + 8) >> 2] | 0;
      if ($49 >>> 0 >= $2 >>> 0) {
       $51 = $49 + 12 | 0;
       if ((HEAP32[$51 >> 2] | 0) == ($14 | 0)) {
        $54 = $46 + 8 | 0;
        if ((HEAP32[$54 >> 2] | 0) == ($14 | 0)) {
         HEAP32[$51 >> 2] = $46;
         HEAP32[$54 >> 2] = $49;
         $R$1 = $46;
         break;
        }
       }
      }
      _abort();
     } while (0);
     if (!$44) {
      $p$0 = $14;
      $psize$0 = $15;
     } else {
      $72 = HEAP32[$mem + ($$sum2 + 28) >> 2] | 0;
      $73 = 4640 + ($72 << 2) | 0;
      if (($14 | 0) == (HEAP32[$73 >> 2] | 0)) {
       HEAP32[$73 >> 2] = $R$1;
       if (!$R$1) {
        HEAP32[1085] = HEAP32[1085] & ~(1 << $72);
        $p$0 = $14;
        $psize$0 = $15;
        break;
       }
      } else {
       if ($44 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
       $82 = $44 + 16 | 0;
       if ((HEAP32[$82 >> 2] | 0) == ($14 | 0)) HEAP32[$82 >> 2] = $R$1; else HEAP32[$44 + 20 >> 2] = $R$1;
       if (!$R$1) {
        $p$0 = $14;
        $psize$0 = $15;
        break;
       }
      }
      $87 = HEAP32[1088] | 0;
      if ($R$1 >>> 0 < $87 >>> 0) _abort();
      HEAP32[$R$1 + 24 >> 2] = $44;
      $91 = HEAP32[$mem + ($$sum2 + 16) >> 2] | 0;
      do if ($91) if ($91 >>> 0 < $87 >>> 0) _abort(); else {
       HEAP32[$R$1 + 16 >> 2] = $91;
       HEAP32[$91 + 24 >> 2] = $R$1;
       break;
      } while (0);
      $97 = HEAP32[$mem + ($$sum2 + 20) >> 2] | 0;
      if (!$97) {
       $p$0 = $14;
       $psize$0 = $15;
      } else if ($97 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
       HEAP32[$R$1 + 20 >> 2] = $97;
       HEAP32[$97 + 24 >> 2] = $R$1;
       $p$0 = $14;
       $psize$0 = $15;
       break;
      }
     }
    } else {
     $p$0 = $1;
     $psize$0 = $8;
    } while (0);
    if ($p$0 >>> 0 < $9 >>> 0) {
     $111 = $mem + ($8 + -4) | 0;
     $112 = HEAP32[$111 >> 2] | 0;
     if ($112 & 1) {
      if (!($112 & 2)) {
       if (($9 | 0) == (HEAP32[1090] | 0)) {
        $120 = (HEAP32[1087] | 0) + $psize$0 | 0;
        HEAP32[1087] = $120;
        HEAP32[1090] = $p$0;
        HEAP32[$p$0 + 4 >> 2] = $120 | 1;
        if (($p$0 | 0) != (HEAP32[1089] | 0)) break L1;
        HEAP32[1089] = 0;
        HEAP32[1086] = 0;
        break L1;
       }
       if (($9 | 0) == (HEAP32[1089] | 0)) {
        $128 = (HEAP32[1086] | 0) + $psize$0 | 0;
        HEAP32[1086] = $128;
        HEAP32[1089] = $p$0;
        HEAP32[$p$0 + 4 >> 2] = $128 | 1;
        HEAP32[$p$0 + $128 >> 2] = $128;
        break L1;
       }
       $133 = ($112 & -8) + $psize$0 | 0;
       $134 = $112 >>> 3;
       do if ($112 >>> 0 < 256) {
        $137 = HEAP32[$mem + $8 >> 2] | 0;
        $139 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
        $141 = 4376 + ($134 << 1 << 2) | 0;
        do if (($137 | 0) != ($141 | 0)) {
         if ($137 >>> 0 >= (HEAP32[1088] | 0) >>> 0) if ((HEAP32[$137 + 12 >> 2] | 0) == ($9 | 0)) break;
         _abort();
        } while (0);
        if (($139 | 0) == ($137 | 0)) {
         HEAP32[1084] = HEAP32[1084] & ~(1 << $134);
         break;
        }
        do if (($139 | 0) == ($141 | 0)) $$pre$phi59Z2D = $139 + 8 | 0; else {
         if ($139 >>> 0 >= (HEAP32[1088] | 0) >>> 0) {
          $156 = $139 + 8 | 0;
          if ((HEAP32[$156 >> 2] | 0) == ($9 | 0)) {
           $$pre$phi59Z2D = $156;
           break;
          }
         }
         _abort();
        } while (0);
        HEAP32[$137 + 12 >> 2] = $139;
        HEAP32[$$pre$phi59Z2D >> 2] = $137;
       } else {
        $161 = HEAP32[$mem + ($8 + 16) >> 2] | 0;
        $163 = HEAP32[$mem + ($8 | 4) >> 2] | 0;
        do if (($163 | 0) == ($9 | 0)) {
         $175 = $mem + ($8 + 12) | 0;
         $176 = HEAP32[$175 >> 2] | 0;
         if (!$176) {
          $178 = $mem + ($8 + 8) | 0;
          $179 = HEAP32[$178 >> 2] | 0;
          if (!$179) {
           $R7$1 = 0;
           break;
          } else {
           $R7$0 = $179;
           $RP9$0 = $178;
          }
         } else {
          $R7$0 = $176;
          $RP9$0 = $175;
         }
         while (1) {
          $181 = $R7$0 + 20 | 0;
          $182 = HEAP32[$181 >> 2] | 0;
          if ($182) {
           $R7$0 = $182;
           $RP9$0 = $181;
           continue;
          }
          $184 = $R7$0 + 16 | 0;
          $185 = HEAP32[$184 >> 2] | 0;
          if (!$185) {
           $R7$0$lcssa = $R7$0;
           $RP9$0$lcssa = $RP9$0;
           break;
          } else {
           $R7$0 = $185;
           $RP9$0 = $184;
          }
         }
         if ($RP9$0$lcssa >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
          HEAP32[$RP9$0$lcssa >> 2] = 0;
          $R7$1 = $R7$0$lcssa;
          break;
         }
        } else {
         $166 = HEAP32[$mem + $8 >> 2] | 0;
         if ($166 >>> 0 >= (HEAP32[1088] | 0) >>> 0) {
          $169 = $166 + 12 | 0;
          if ((HEAP32[$169 >> 2] | 0) == ($9 | 0)) {
           $172 = $163 + 8 | 0;
           if ((HEAP32[$172 >> 2] | 0) == ($9 | 0)) {
            HEAP32[$169 >> 2] = $163;
            HEAP32[$172 >> 2] = $166;
            $R7$1 = $163;
            break;
           }
          }
         }
         _abort();
        } while (0);
        if ($161) {
         $191 = HEAP32[$mem + ($8 + 20) >> 2] | 0;
         $192 = 4640 + ($191 << 2) | 0;
         if (($9 | 0) == (HEAP32[$192 >> 2] | 0)) {
          HEAP32[$192 >> 2] = $R7$1;
          if (!$R7$1) {
           HEAP32[1085] = HEAP32[1085] & ~(1 << $191);
           break;
          }
         } else {
          if ($161 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
          $201 = $161 + 16 | 0;
          if ((HEAP32[$201 >> 2] | 0) == ($9 | 0)) HEAP32[$201 >> 2] = $R7$1; else HEAP32[$161 + 20 >> 2] = $R7$1;
          if (!$R7$1) break;
         }
         $206 = HEAP32[1088] | 0;
         if ($R7$1 >>> 0 < $206 >>> 0) _abort();
         HEAP32[$R7$1 + 24 >> 2] = $161;
         $210 = HEAP32[$mem + ($8 + 8) >> 2] | 0;
         do if ($210) if ($210 >>> 0 < $206 >>> 0) _abort(); else {
          HEAP32[$R7$1 + 16 >> 2] = $210;
          HEAP32[$210 + 24 >> 2] = $R7$1;
          break;
         } while (0);
         $216 = HEAP32[$mem + ($8 + 12) >> 2] | 0;
         if ($216) if ($216 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
          HEAP32[$R7$1 + 20 >> 2] = $216;
          HEAP32[$216 + 24 >> 2] = $R7$1;
          break;
         }
        }
       } while (0);
       HEAP32[$p$0 + 4 >> 2] = $133 | 1;
       HEAP32[$p$0 + $133 >> 2] = $133;
       if (($p$0 | 0) == (HEAP32[1089] | 0)) {
        HEAP32[1086] = $133;
        break L1;
       } else $psize$1 = $133;
      } else {
       HEAP32[$111 >> 2] = $112 & -2;
       HEAP32[$p$0 + 4 >> 2] = $psize$0 | 1;
       HEAP32[$p$0 + $psize$0 >> 2] = $psize$0;
       $psize$1 = $psize$0;
      }
      $231 = $psize$1 >>> 3;
      if ($psize$1 >>> 0 < 256) {
       $233 = $231 << 1;
       $234 = 4376 + ($233 << 2) | 0;
       $235 = HEAP32[1084] | 0;
       $236 = 1 << $231;
       if (!($235 & $236)) {
        HEAP32[1084] = $235 | $236;
        $$pre$phiZ2D = 4376 + ($233 + 2 << 2) | 0;
        $F16$0 = $234;
       } else {
        $240 = 4376 + ($233 + 2 << 2) | 0;
        $241 = HEAP32[$240 >> 2] | 0;
        if ($241 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
         $$pre$phiZ2D = $240;
         $F16$0 = $241;
        }
       }
       HEAP32[$$pre$phiZ2D >> 2] = $p$0;
       HEAP32[$F16$0 + 12 >> 2] = $p$0;
       HEAP32[$p$0 + 8 >> 2] = $F16$0;
       HEAP32[$p$0 + 12 >> 2] = $234;
       break L1;
      }
      $247 = $psize$1 >>> 8;
      if (!$247) $I18$0 = 0; else if ($psize$1 >>> 0 > 16777215) $I18$0 = 31; else {
       $252 = ($247 + 1048320 | 0) >>> 16 & 8;
       $253 = $247 << $252;
       $256 = ($253 + 520192 | 0) >>> 16 & 4;
       $258 = $253 << $256;
       $261 = ($258 + 245760 | 0) >>> 16 & 2;
       $266 = 14 - ($256 | $252 | $261) + ($258 << $261 >>> 15) | 0;
       $I18$0 = $psize$1 >>> ($266 + 7 | 0) & 1 | $266 << 1;
      }
      $272 = 4640 + ($I18$0 << 2) | 0;
      HEAP32[$p$0 + 28 >> 2] = $I18$0;
      HEAP32[$p$0 + 20 >> 2] = 0;
      HEAP32[$p$0 + 16 >> 2] = 0;
      $276 = HEAP32[1085] | 0;
      $277 = 1 << $I18$0;
      L168 : do if (!($276 & $277)) {
       HEAP32[1085] = $276 | $277;
       HEAP32[$272 >> 2] = $p$0;
       HEAP32[$p$0 + 24 >> 2] = $272;
       HEAP32[$p$0 + 12 >> 2] = $p$0;
       HEAP32[$p$0 + 8 >> 2] = $p$0;
      } else {
       $284 = HEAP32[$272 >> 2] | 0;
       L171 : do if ((HEAP32[$284 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) $T$0$lcssa = $284; else {
        $K19$052 = $psize$1 << (($I18$0 | 0) == 31 ? 0 : 25 - ($I18$0 >>> 1) | 0);
        $T$051 = $284;
        while (1) {
         $301 = $T$051 + 16 + ($K19$052 >>> 31 << 2) | 0;
         $296 = HEAP32[$301 >> 2] | 0;
         if (!$296) {
          $$lcssa = $301;
          $T$051$lcssa = $T$051;
          break;
         }
         if ((HEAP32[$296 + 4 >> 2] & -8 | 0) == ($psize$1 | 0)) {
          $T$0$lcssa = $296;
          break L171;
         } else {
          $K19$052 = $K19$052 << 1;
          $T$051 = $296;
         }
        }
        if ($$lcssa >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
         HEAP32[$$lcssa >> 2] = $p$0;
         HEAP32[$p$0 + 24 >> 2] = $T$051$lcssa;
         HEAP32[$p$0 + 12 >> 2] = $p$0;
         HEAP32[$p$0 + 8 >> 2] = $p$0;
         break L168;
        }
       } while (0);
       $308 = $T$0$lcssa + 8 | 0;
       $309 = HEAP32[$308 >> 2] | 0;
       $310 = HEAP32[1088] | 0;
       if ($309 >>> 0 >= $310 >>> 0 & $T$0$lcssa >>> 0 >= $310 >>> 0) {
        HEAP32[$309 + 12 >> 2] = $p$0;
        HEAP32[$308 >> 2] = $p$0;
        HEAP32[$p$0 + 8 >> 2] = $309;
        HEAP32[$p$0 + 12 >> 2] = $T$0$lcssa;
        HEAP32[$p$0 + 24 >> 2] = 0;
        break;
       } else _abort();
      } while (0);
      $318 = (HEAP32[1092] | 0) + -1 | 0;
      HEAP32[1092] = $318;
      if (!$318) $sp$0$in$i = 4792; else break L1;
      while (1) {
       $sp$0$i = HEAP32[$sp$0$in$i >> 2] | 0;
       if (!$sp$0$i) break; else $sp$0$in$i = $sp$0$i + 8 | 0;
      }
      HEAP32[1092] = -1;
      break L1;
     }
    }
   }
  } while (0);
  _abort();
 } while (0);
 return;
}

function __ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i = 0, $$01$i$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i$pre$i$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val19$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$lcssa$i$i = 0, $$lcssa29 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $104 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $118 = 0, $12 = 0, $120 = 0, $123 = 0, $125 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $135 = 0, $137 = 0, $139 = 0, $141 = 0, $142 = 0, $145 = 0, $146 = 0, $149 = 0, $150 = 0, $153 = 0, $156 = 0, $158 = 0, $160 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $179 = 0, $18 = 0, $183 = 0, $188 = 0, $191 = 0, $199 = 0, $2 = 0, $202 = 0, $205 = 0, $209 = 0, $21 = 0, $218 = 0, $223 = 0, $225 = 0, $229 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $236 = 0, $243 = 0, $246 = 0, $252 = 0, $254 = 0, $257 = 0, $26 = 0, $263 = 0, $264 = 0, $28 = 0, $31 = 0, $37 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $52 = 0, $53 = 0, $56 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $7 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $80 = 0, $81 = 0, $84 = 0, $86 = 0, $87 = 0, $90 = 0, $91 = 0, $94 = 0, $99 = 0, $__x$idx$val$i$i = 0, $__x$idx1$i = 0, $__x$idx1$val$i$i = 0, $__x$idx1$val$i$i$i$i = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index10Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i6$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$agg$result >> 2] = 16;
 HEAP32[$1 >> 2] = 0;
 $2 = $1 + 4 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $__x$idx1$i = $v + 4 | 0;
 $6 = (HEAP32[$__x$idx1$i >> 2] | 0) - (HEAP32[$v >> 2] | 0) | 0;
 $7 = $6 >> 2;
 do if (!$7) {
  $__x$idx$val$i$i = 0;
  $__x$idx1$val$i$i = 0;
 } else {
  if ($7 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(175, $1 | 0);
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) label = 4;
  } else label = 4;
  if ((label | 0) == 4) {
   __THREW__ = 0;
   $12 = invoke_ii(67, $6 | 0) | 0;
   $13 = __THREW__;
   __THREW__ = 0;
   if (!($13 & 1)) {
    HEAP32[$2 >> 2] = $12;
    HEAP32[$1 >> 2] = $12;
    HEAP32[$1 + 8 >> 2] = $12 + ($7 << 2);
    $17 = HEAP32[$v >> 2] | 0;
    $18 = HEAP32[$__x$idx1$i >> 2] | 0;
    if (($17 | 0) == ($18 | 0)) {
     $__x$idx$val$i$i = $12;
     $__x$idx1$val$i$i = $12;
     break;
    }
    $$01$i$i = $17;
    $21 = $12;
    while (1) {
     HEAP32[$21 >> 2] = HEAP32[$$01$i$i >> 2];
     $23 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
     HEAP32[$2 >> 2] = $23;
     $$01$i$i = $$01$i$i + 4 | 0;
     if (($$01$i$i | 0) == ($18 | 0)) {
      $$lcssa29 = $23;
      break;
     } else $21 = $23;
    }
    $__x$idx$val$i$i = HEAP32[$1 >> 2] | 0;
    $__x$idx1$val$i$i = $$lcssa29;
    break;
   }
  }
  $26 = ___cxa_find_matching_catch() | 0;
  $28 = HEAP32[$1 >> 2] | 0;
  if (!$28) ___resumeException($26 | 0);
  $31 = HEAP32[$2 >> 2] | 0;
  if (($31 | 0) != ($28 | 0)) HEAP32[$2 >> 2] = $31 + (~(($31 + -4 - $28 | 0) >>> 2) << 2);
  __ZdlPv($28);
  ___resumeException($26 | 0);
 } while (0);
 HEAP32[$0 >> 2] = 0;
 $37 = $0 + 4 | 0;
 HEAP32[$37 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $41 = $__x$idx1$val$i$i - $__x$idx$val$i$i | 0;
 $42 = $41 >> 2;
 L21 : do if (!$42) {
  $__x$idx1$val$i$i$i$i = 0;
  label = 25;
 } else {
  if ($42 >>> 0 > 1073741823) {
   __THREW__ = 0;
   invoke_vi(175, $0 | 0);
   $45 = __THREW__;
   __THREW__ = 0;
   if (!($45 & 1)) label = 17;
  } else label = 17;
  if ((label | 0) == 17) {
   __THREW__ = 0;
   $47 = invoke_ii(67, $41 | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if (!($48 & 1)) {
    HEAP32[$37 >> 2] = $47;
    HEAP32[$0 >> 2] = $47;
    HEAP32[$0 + 8 >> 2] = $47 + ($42 << 2);
    $52 = HEAP32[$1 >> 2] | 0;
    $53 = HEAP32[$2 >> 2] | 0;
    if (($52 | 0) == ($53 | 0)) {
     $__x$idx1$val$i$i$i$i = $47;
     label = 25;
     break;
    }
    $$01$i$i$i = $52;
    $56 = $47;
    while (1) {
     HEAP32[$56 >> 2] = HEAP32[$$01$i$i$i >> 2];
     $58 = (HEAP32[$37 >> 2] | 0) + 4 | 0;
     HEAP32[$37 >> 2] = $58;
     $$01$i$i$i = $$01$i$i$i + 4 | 0;
     if (($$01$i$i$i | 0) == ($53 | 0)) {
      $__x$idx1$val$i$i$i$i = $58;
      label = 25;
      break L21;
     } else $56 = $58;
    }
   }
  }
  $61 = ___cxa_find_matching_catch() | 0;
  $62 = tempRet0;
  $63 = HEAP32[$0 >> 2] | 0;
  $65 = $63;
  if (!$63) {
   $eh$lpad$body$index10Z2D = $62;
   $eh$lpad$body$indexZ2D = $61;
  } else {
   $66 = HEAP32[$37 >> 2] | 0;
   if (($66 | 0) != ($63 | 0)) HEAP32[$37 >> 2] = $66 + (~(($66 + -4 - $65 | 0) >>> 2) << 2);
   __ZdlPv($63);
   $eh$lpad$body$index10Z2D = $62;
   $eh$lpad$body$indexZ2D = $61;
  }
 } while (0);
 L36 : do if ((label | 0) == 25) {
  __THREW__ = 0;
  $72 = invoke_ii(67, 20) | 0;
  $73 = __THREW__;
  __THREW__ = 0;
  L38 : do if ($73 & 1) label = 70; else {
   HEAP32[$72 >> 2] = 3704;
   $75 = $72 + 8 | 0;
   HEAP32[$75 >> 2] = 0;
   $76 = $72 + 12 | 0;
   HEAP32[$76 >> 2] = 0;
   $77 = $72 + 16 | 0;
   HEAP32[$77 >> 2] = 0;
   $80 = $__x$idx1$val$i$i$i$i - (HEAP32[$0 >> 2] | 0) | 0;
   $81 = $80 >> 2;
   L40 : do if ($81) {
    if ($81 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(175, $75 | 0);
     $84 = __THREW__;
     __THREW__ = 0;
     if (!($84 & 1)) label = 29;
    } else label = 29;
    if ((label | 0) == 29) {
     __THREW__ = 0;
     $86 = invoke_ii(67, $80 | 0) | 0;
     $87 = __THREW__;
     __THREW__ = 0;
     if (!($87 & 1)) {
      HEAP32[$76 >> 2] = $86;
      HEAP32[$75 >> 2] = $86;
      HEAP32[$77 >> 2] = $86 + ($81 << 2);
      $90 = HEAP32[$0 >> 2] | 0;
      $91 = HEAP32[$37 >> 2] | 0;
      if (($90 | 0) == ($91 | 0)) break;
      $$01$i$i$i$i$i = $90;
      $94 = $86;
      while (1) {
       HEAP32[$94 >> 2] = HEAP32[$$01$i$i$i$i$i >> 2];
       $94 = (HEAP32[$76 >> 2] | 0) + 4 | 0;
       HEAP32[$76 >> 2] = $94;
       $$01$i$i$i$i$i = $$01$i$i$i$i$i + 4 | 0;
       if (($$01$i$i$i$i$i | 0) == ($91 | 0)) break L40;
      }
     }
    }
    $99 = ___cxa_find_matching_catch() | 0;
    $100 = tempRet0;
    $101 = HEAP32[$75 >> 2] | 0;
    $103 = $101;
    if ($101) {
     $104 = HEAP32[$76 >> 2] | 0;
     if (($104 | 0) != ($101 | 0)) HEAP32[$76 >> 2] = $104 + (~(($104 + -4 - $103 | 0) >>> 2) << 2);
     __ZdlPv($101);
    }
    __ZdlPv($72);
    $eh$lpad$body$i$index2Z2D = $100;
    $eh$lpad$body$i$indexZ2D = $99;
    break L38;
   } while (0);
   $110 = $this + 20 | 0;
   $111 = $72;
   $112 = $this + 24 | 0;
   $113 = HEAP32[$112 >> 2] | 0;
   $114 = $this + 28 | 0;
   $115 = HEAP32[$114 >> 2] | 0;
   if ($113 >>> 0 < $115 >>> 0) {
    HEAP32[$113 >> 2] = $111;
    $118 = (HEAP32[$112 >> 2] | 0) + 4 | 0;
    HEAP32[$112 >> 2] = $118;
    $$idx$pre$phi$i$iZZ2D = $110;
    $$idx1$val$i$i = $118;
   } else {
    $this$idx2$val$i$i$i$i = HEAP32[$110 >> 2] | 0;
    $120 = $this$idx2$val$i$i$i$i;
    $123 = ($113 - $120 >> 2) + 1 | 0;
    if ($123 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(175, $110 | 0);
     $125 = __THREW__;
     __THREW__ = 0;
     if ($125 & 1) {
      label = 70;
      break;
     }
     $$idx$val$i$i$pre$i$i$i$i = HEAP32[$110 >> 2] | 0;
     $$idx1$val$i$i$i$i$i$i = HEAP32[$114 >> 2] | 0;
     $130 = $$idx$val$i$i$pre$i$i$i$i;
     $158 = $$idx$val$i$i$pre$i$i$i$i;
    } else {
     $$idx1$val$i$i$i$i$i$i = $115;
     $130 = $this$idx2$val$i$i$i$i;
     $158 = $120;
    }
    $129 = $130;
    $131 = $$idx1$val$i$i$i$i$i$i - $129 | 0;
    if ($131 >> 2 >>> 0 < 536870911) {
     $137 = $131 >> 1;
     $139 = $137 >>> 0 < $123 >>> 0 ? $123 : $137;
     $141 = (HEAP32[$112 >> 2] | 0) - $129 | 0;
     $142 = $141 >> 2;
     if (!$139) {
      $$0$i8$i$i$i$i = 0;
      $149 = 0;
      $150 = $142;
      $156 = $141;
     } else {
      $$0$i7$i$i$i$i = $139;
      $263 = $142;
      $264 = $141;
      label = 45;
     }
    } else {
     $135 = (HEAP32[$112 >> 2] | 0) - $129 | 0;
     $$0$i7$i$i$i$i = 1073741823;
     $263 = $135 >> 2;
     $264 = $135;
     label = 45;
    }
    if ((label | 0) == 45) {
     __THREW__ = 0;
     $145 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
     $146 = __THREW__;
     __THREW__ = 0;
     if ($146 & 1) {
      label = 70;
      break;
     }
     $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
     $149 = $145;
     $150 = $263;
     $156 = $264;
    }
    HEAP32[$149 + ($150 << 2) >> 2] = $111;
    $153 = $149 + ($150 + 1 << 2) | 0;
    _memcpy($149 | 0, $130 | 0, $156 | 0) | 0;
    HEAP32[$110 >> 2] = $149;
    HEAP32[$112 >> 2] = $153;
    HEAP32[$114 >> 2] = $149 + ($$0$i8$i$i$i$i << 2);
    if (!$158) {
     $$idx$pre$phi$i$iZZ2D = $110;
     $$idx1$val$i$i = $153;
    } else {
     __ZdlPv($158);
     $$idx$pre$phi$i$iZZ2D = $110;
     $$idx1$val$i$i = HEAP32[$112 >> 2] | 0;
    }
   }
   $160 = $this + 16 | 0;
   HEAP8[$72 + 4 >> 0] = HEAP8[$160 >> 0] | 0;
   $166 = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
   $167 = $this + 36 | 0;
   HEAP32[$167 >> 2] = $166;
   $168 = HEAP32[$0 >> 2] | 0;
   $170 = $168;
   if (!$168) $179 = $166; else {
    $171 = HEAP32[$37 >> 2] | 0;
    if (($171 | 0) != ($168 | 0)) HEAP32[$37 >> 2] = $171 + (~(($171 + -4 - $170 | 0) >>> 2) << 2);
    __ZdlPv($168);
    $179 = HEAP32[$167 >> 2] | 0;
   }
   L80 : do if ($179 >>> 0 > (HEAP32[$this >> 2] | 0) >>> 0) {
    $183 = $this + 32 | 0;
    if (+($179 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$183 >> 2] | 0) >>> 0)) {
     __THREW__ = 0;
     invoke_vii(62, $this | 0, $72 | 0);
     $188 = __THREW__;
     __THREW__ = 0;
     do if (!($188 & 1)) {
      __THREW__ = 0;
      invoke_vii(63, $this + 56 | 0, $this | 0);
      $191 = __THREW__;
      __THREW__ = 0;
      if (!($191 & 1)) {
       if (HEAP32[$this + 40 >> 2] & 16) {
        __THREW__ = 0;
        invoke_vii(62, $this | 0, HEAP32[$this + 48 >> 2] | 0);
        $199 = __THREW__;
        __THREW__ = 0;
        if ($199 & 1) break;
       }
       $202 = (HEAP8[$160 >> 0] | 0) + 1 << 24 >> 24;
       HEAP8[$160 >> 0] = $202;
       $$idx6$i$i = $this + 20 | 0;
       $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx7$val12$i$i = HEAP32[$112 >> 2] | 0;
       L89 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
        $$idx5$val19$i$i = $$idx7$val12$i$i;
        $$idx6$val14$i$i = $$idx6$val11$i$i;
        $209 = $202;
        $i$013$i$i = 0;
        while (1) {
         $205 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
         if ((HEAP8[$205 + 4 >> 0] | 0) == $209 << 24 >> 24) {
          $$idx6$val$i$i = $$idx6$val14$i$i;
          $$idx7$val$i$i = $$idx5$val19$i$i;
          $i$1$i$i = $i$013$i$i;
         } else {
          if (!$205) {
           $$idx4$val$i$i = $$idx6$val14$i$i;
           $$idx5$val$i$i = $$idx5$val19$i$i;
          } else {
           FUNCTION_TABLE_vi[HEAP32[(HEAP32[$205 >> 2] | 0) + 4 >> 2] & 255]($205);
           $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $$idx5$val$i$i = HEAP32[$112 >> 2] | 0;
          }
          $218 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
          if (($i$013$i$i | 0) == ($218 | 0)) {
           $$idx6$val$pre$i$i = $$idx4$val$i$i;
           $223 = $$idx5$val$i$i;
          } else {
           HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($218 << 2) >> 2];
           $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
           $223 = HEAP32[$112 >> 2] | 0;
          }
          $scevgep4$i$i$i$i6$i = $223 + -4 | 0;
          HEAP32[$112 >> 2] = $scevgep4$i$i$i$i6$i;
          $$idx6$val$i$i = $$idx6$val$pre$i$i;
          $$idx7$val$i$i = $scevgep4$i$i$i$i6$i;
          $i$1$i$i = $i$013$i$i + -1 | 0;
         }
         $225 = $i$1$i$i + 1 | 0;
         $229 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
         if ($225 >>> 0 >= $229 >>> 0) {
          $$lcssa$i$i = $229;
          break L89;
         }
         $$idx5$val19$i$i = $$idx7$val$i$i;
         $$idx6$val14$i$i = $$idx6$val$i$i;
         $209 = HEAP8[$160 >> 0] | 0;
         $i$013$i$i = $225;
        }
       } while (0);
       HEAP32[$167 >> 2] = $$lcssa$i$i;
       HEAP32[$183 >> 2] = $$lcssa$i$i;
       break L80;
      }
     } while (0);
     $252 = ___cxa_find_matching_catch() | 0;
     $eh$lpad$body$index10Z2D = tempRet0;
     $eh$lpad$body$indexZ2D = $252;
     break L36;
    }
   } while (0);
   HEAP32[$agg$result + 8 >> 2] = $72;
   $243 = HEAP32[$1 >> 2] | 0;
   if (!$243) {
    STACKTOP = sp;
    return;
   }
   $246 = HEAP32[$2 >> 2] | 0;
   if (($246 | 0) != ($243 | 0)) HEAP32[$2 >> 2] = $246 + (~(($246 + -4 - $243 | 0) >>> 2) << 2);
   __ZdlPv($243);
   STACKTOP = sp;
   return;
  } while (0);
  if ((label | 0) == 70) {
   $231 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $231;
  }
  $233 = HEAP32[$0 >> 2] | 0;
  $235 = $233;
  if (!$233) {
   $eh$lpad$body$index10Z2D = $eh$lpad$body$i$index2Z2D;
   $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  } else {
   $236 = HEAP32[$37 >> 2] | 0;
   if (($236 | 0) != ($233 | 0)) HEAP32[$37 >> 2] = $236 + (~(($236 + -4 - $235 | 0) >>> 2) << 2);
   __ZdlPv($233);
   $eh$lpad$body$index10Z2D = $eh$lpad$body$i$index2Z2D;
   $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  }
 } while (0);
 $254 = HEAP32[$1 >> 2] | 0;
 if (!$254) ___resumeException($eh$lpad$body$indexZ2D | 0);
 $257 = HEAP32[$2 >> 2] | 0;
 if (($257 | 0) != ($254 | 0)) HEAP32[$2 >> 2] = $257 + (~(($257 + -4 - $254 | 0) >>> 2) << 2);
 __ZdlPv($254);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc($agg$result, $this, $k, $data) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $k = $k | 0;
 $data = $data | 0;
 var $$0 = 0, $$0$i = 0, $$0$i21 = 0, $$01 = 0, $$01$i = 0, $$01$i20 = 0, $$0339 = 0, $$0538 = 0, $$14 = 0, $$16 = 0, $$243 = 0, $$2742 = 0, $$3 = 0, $$38 = 0, $$4 = 0, $$49 = 0, $0 = 0, $1 = 0, $102 = 0, $104 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $112 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $120 = 0, $122 = 0, $123 = 0, $125 = 0, $127 = 0, $13 = 0, $137 = 0, $139 = 0, $140 = 0, $142 = 0, $144 = 0, $146 = 0, $148 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $155 = 0, $156 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $27 = 0, $3 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $44 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $67 = 0, $69 = 0, $71 = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $93 = 0, $94 = 0, $97 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$i18$index12Z2D = 0, $eh$lpad$body$i18$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, $ss1 = 0, $this$idx$val$idx$val$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $0 = sp + 332 | 0;
 $1 = sp + 320 | 0;
 $ss = sp + 176 | 0;
 $2 = sp + 160 | 0;
 $ss1 = sp + 16 | 0;
 $3 = sp;
 $this$idx$val$idx$val$i = HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0;
 $4 = $this$idx$val$idx$val$i + 8 | 0;
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $6 = $agg$result + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($6, $this$idx$val$idx$val$i + 12 | 0);
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $9 = $agg$result + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $9 | 0, $this$idx$val$idx$val$i + 24 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  ___resumeException($13 | 0);
 }
 $15 = $agg$result + 28 | 0;
 $16 = $this$idx$val$idx$val$i + 36 | 0;
 HEAP32[$15 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$15 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
 HEAP32[$15 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
 HEAP32[$15 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
 HEAP32[$agg$result >> 2] = HEAP32[$4 >> 2];
 $18 = HEAP32[$this >> 2] | 0;
 $20 = HEAP32[$18 + 4 >> 2] | 0;
 $21 = $20 + 4 | 0;
 $23 = HEAP32[$20 >> 2] | 0;
 HEAP32[$23 + 4 >> 2] = HEAP32[$21 >> 2];
 HEAP32[HEAP32[$21 >> 2] >> 2] = $23;
 $27 = $18 + 8 | 0;
 HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + -1;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 24 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20 + 12 | 0);
 __ZdlPv($20);
 if ((HEAP32[$agg$result >> 2] | 0) == ($k | 0)) {
  if (!$data) {
   STACKTOP = sp;
   return;
  }
  if (!(__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($6, $data) | 0)) {
   STACKTOP = sp;
   return;
  }
  $83 = $ss1 + 64 | 0;
  $93 = $ss1 + 8 | 0;
  HEAP32[$93 >> 2] = 2912;
  $94 = $ss1 + 12 | 0;
  HEAP32[$ss1 >> 2] = 2952;
  HEAP32[$83 >> 2] = 2972;
  HEAP32[$ss1 + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss1 + 64 | 0, $94 | 0);
  $97 = __THREW__;
  __THREW__ = 0;
  if ($97 & 1) {
   $110 = ___cxa_find_matching_catch() | 0;
   $$0$i21 = tempRet0;
   $$01$i20 = $110;
  } else {
   HEAP32[$ss1 + 136 >> 2] = 0;
   HEAP32[$ss1 + 140 >> 2] = -1;
   HEAP32[$ss1 >> 2] = 2892;
   HEAP32[$ss1 + 64 >> 2] = 2932;
   HEAP32[$93 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $94 | 0);
   $102 = __THREW__;
   __THREW__ = 0;
   do if ($102 & 1) {
    $112 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i18$index12Z2D = tempRet0;
    $eh$lpad$body$i18$indexZ2D = $112;
   } else {
    HEAP32[$94 >> 2] = 2988;
    $104 = $ss1 + 44 | 0;
    HEAP32[$104 >> 2] = 0;
    HEAP32[$104 + 4 >> 2] = 0;
    HEAP32[$104 + 8 >> 2] = 0;
    HEAP32[$104 + 12 >> 2] = 0;
    HEAP32[$ss1 + 60 >> 2] = 24;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $94 | 0, $0 | 0);
    $106 = __THREW__;
    __THREW__ = 0;
    if ($106 & 1) {
     $108 = ___cxa_find_matching_catch() | 0;
     $109 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($104);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($94);
     $eh$lpad$body$i18$index12Z2D = $109;
     $eh$lpad$body$i18$indexZ2D = $108;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $114 = $ss1 + 8 | 0;
    __THREW__ = 0;
    $115 = invoke_iiii(29, $114 | 0, 51726, 18) | 0;
    $116 = __THREW__;
    __THREW__ = 0;
    L21 : do if ($116 & 1) label = 47; else {
     $118 = _strlen($data) | 0;
     __THREW__ = 0;
     $119 = invoke_iiii(29, $115 | 0, $data | 0, $118 | 0) | 0;
     $120 = __THREW__;
     __THREW__ = 0;
     if ($120 & 1) label = 47; else {
      __THREW__ = 0;
      $122 = invoke_iiii(29, $119 | 0, 51716, 9) | 0;
      $123 = __THREW__;
      __THREW__ = 0;
      if ($123 & 1) label = 47; else {
       $125 = HEAP8[$6 >> 0] | 0;
       $127 = ($125 & 1) == 0;
       __THREW__ = 0;
       invoke_iiii(29, $122 | 0, ($127 ? $6 + 1 | 0 : HEAP32[$agg$result + 12 >> 2] | 0) | 0, ($127 ? ($125 & 255) >>> 1 : HEAP32[$agg$result + 8 >> 2] | 0) | 0) | 0;
       $137 = __THREW__;
       __THREW__ = 0;
       if ($137 & 1) label = 47; else {
        $139 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $3 | 0, $94 | 0);
        $140 = __THREW__;
        __THREW__ = 0;
        L26 : do if ($140 & 1) {
         $153 = ___cxa_find_matching_catch() | 0;
         $$243 = tempRet0;
         $$2742 = $153;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $139 | 0, $9 | 0);
         $142 = __THREW__;
         __THREW__ = 0;
         do if ($142 & 1) $$0 = 1; else {
          $144 = $139 + 12 | 0;
          HEAP32[$144 >> 2] = HEAP32[$15 >> 2];
          HEAP32[$144 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
          HEAP32[$144 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
          HEAP32[$144 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $139 + 28 | 0, $3 | 0);
          $146 = __THREW__;
          __THREW__ = 0;
          if ($146 & 1) {
           $148 = ___cxa_find_matching_catch() | 0;
           $149 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($139);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
           $$243 = $149;
           $$2742 = $148;
           break L26;
          } else {
           __THREW__ = 0;
           invoke_viii(4, $139 | 0, 8, 172);
           __THREW__ = 0;
           $$0 = 0;
           break;
          }
         } while (0);
         $155 = ___cxa_find_matching_catch() | 0;
         $156 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
         if ($$0) {
          $$243 = $156;
          $$2742 = $155;
         } else {
          $$3 = $156;
          $$38 = $155;
          break L21;
         }
        } while (0);
        ___cxa_free_exception($139 | 0);
        $$3 = $$243;
        $$38 = $$2742;
       }
      }
     }
    } while (0);
    if ((label | 0) == 47) {
     $151 = ___cxa_find_matching_catch() | 0;
     $$3 = tempRet0;
     $$38 = $151;
    }
    HEAP32[$ss1 >> 2] = 2892;
    HEAP32[$83 >> 2] = 2932;
    HEAP32[$114 >> 2] = 2912;
    HEAP32[$94 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($104);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($94);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($83);
    $$4 = $$3;
    $$49 = $$38;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i21 = $eh$lpad$body$i18$index12Z2D;
   $$01$i20 = $eh$lpad$body$i18$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($83);
  $eh$lpad$body$index7Z2D = $$0$i21;
  $eh$lpad$body$indexZ2D = $$01$i20;
 } else {
  $34 = $ss + 64 | 0;
  $35 = $ss + 8 | 0;
  HEAP32[$35 >> 2] = 2912;
  $36 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 2952;
  HEAP32[$34 >> 2] = 2972;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $36 | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if ($39 & 1) {
   $52 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $52;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 2892;
   HEAP32[$ss + 64 >> 2] = 2932;
   HEAP32[$35 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $36 | 0);
   $44 = __THREW__;
   __THREW__ = 0;
   do if ($44 & 1) {
    $54 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $54;
   } else {
    HEAP32[$36 >> 2] = 2988;
    $46 = $ss + 44 | 0;
    HEAP32[$46 >> 2] = 0;
    HEAP32[$46 + 4 >> 2] = 0;
    HEAP32[$46 + 8 >> 2] = 0;
    HEAP32[$46 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$1 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $36 | 0, $1 | 0);
    $48 = __THREW__;
    __THREW__ = 0;
    if ($48 & 1) {
     $50 = ___cxa_find_matching_catch() | 0;
     $51 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($36);
     $eh$lpad$body$i$index2Z2D = $51;
     $eh$lpad$body$i$indexZ2D = $50;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $56 = $ss + 8 | 0;
    __THREW__ = 0;
    $57 = invoke_iiii(29, $56 | 0, 51700, 15) | 0;
    $58 = __THREW__;
    __THREW__ = 0;
    L52 : do if ($58 & 1) label = 24; else {
     __THREW__ = 0;
     $60 = invoke_ii(70, $k | 0) | 0;
     $61 = __THREW__;
     __THREW__ = 0;
     if ($61 & 1) label = 24; else {
      $63 = _strlen($60) | 0;
      __THREW__ = 0;
      invoke_iiii(29, $57 | 0, $60 | 0, $63 | 0) | 0;
      $64 = __THREW__;
      __THREW__ = 0;
      if ($64 & 1) label = 24; else {
       __THREW__ = 0;
       $66 = invoke_iiii(29, $57 | 0, 51716, 9) | 0;
       $67 = __THREW__;
       __THREW__ = 0;
       if ($67 & 1) label = 24; else {
        __THREW__ = 0;
        invoke_vii(51, $66 | 0, $agg$result | 0);
        $69 = __THREW__;
        __THREW__ = 0;
        if ($69 & 1) label = 24; else {
         $71 = ___cxa_allocate_exception(40) | 0;
         __THREW__ = 0;
         invoke_vii(43, $2 | 0, $36 | 0);
         $72 = __THREW__;
         __THREW__ = 0;
         L58 : do if ($72 & 1) {
          $86 = ___cxa_find_matching_catch() | 0;
          $$0339 = tempRet0;
          $$0538 = $86;
         } else {
          __THREW__ = 0;
          invoke_vii(40, $71 | 0, $9 | 0);
          $74 = __THREW__;
          __THREW__ = 0;
          do if ($74 & 1) $$01 = 1; else {
           $76 = $71 + 12 | 0;
           HEAP32[$76 >> 2] = HEAP32[$15 >> 2];
           HEAP32[$76 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
           HEAP32[$76 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
           HEAP32[$76 + 12 >> 2] = HEAP32[$15 + 12 >> 2];
           __THREW__ = 0;
           invoke_vii(40, $71 + 28 | 0, $2 | 0);
           $78 = __THREW__;
           __THREW__ = 0;
           if ($78 & 1) {
            $80 = ___cxa_find_matching_catch() | 0;
            $81 = tempRet0;
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($71);
            __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
            $$0339 = $81;
            $$0538 = $80;
            break L58;
           } else {
            __THREW__ = 0;
            invoke_viii(4, $71 | 0, 8, 172);
            __THREW__ = 0;
            $$01 = 0;
            break;
           }
          } while (0);
          $88 = ___cxa_find_matching_catch() | 0;
          $89 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
          if ($$01) {
           $$0339 = $89;
           $$0538 = $88;
          } else {
           $$14 = $89;
           $$16 = $88;
           break L52;
          }
         } while (0);
         ___cxa_free_exception($71 | 0);
         $$14 = $$0339;
         $$16 = $$0538;
        }
       }
      }
     }
    } while (0);
    if ((label | 0) == 24) {
     $84 = ___cxa_find_matching_catch() | 0;
     $$14 = tempRet0;
     $$16 = $84;
    }
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$34 >> 2] = 2932;
    HEAP32[$56 >> 2] = 2912;
    HEAP32[$36 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($46);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($36);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($34);
    $$4 = $$14;
    $$49 = $$16;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    ___resumeException($$49 | 0);
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($34);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
 }
 $$4 = $eh$lpad$body$index7Z2D;
 $$49 = $eh$lpad$body$indexZ2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 ___resumeException($$49 | 0);
}

function __ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE($this, $loc, $builtin, $args, $params) {
 $this = $this | 0;
 $loc = $loc | 0;
 $builtin = $builtin | 0;
 $args = $args | 0;
 $params = $params | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $$03 = 0, $$1232 = 0, $$1431 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $0 = 0, $1 = 0, $10 = 0, $106 = 0, $110 = 0, $112 = 0, $114 = 0, $116 = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $133 = 0, $135 = 0, $137 = 0, $144 = 0, $148 = 0, $149 = 0, $150 = 0, $152 = 0, $153 = 0, $156 = 0, $159 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $166 = 0, $167 = 0, $169 = 0, $170 = 0, $173 = 0, $2 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $5 = 0, $54 = 0, $56 = 0, $6 = 0, $65 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $72 = 0, $74 = 0, $84 = 0, $87 = 0, $88 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $97 = 0, $99 = 0, $args$idx16$val = 0, $args$idx16$val2937 = 0, $args$idx17$val = 0, $args$idx8$val = 0, $args$idx9 = 0, $args$idx9$val = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body20$index9Z2D = 0, $eh$lpad$body20$indexZ2D = 0, $i$045 = 0, $params$idx$val = 0, $params$idx10 = 0, $params$idx13$val = 0, $params$idx13$val3039 = 0, $params$idx14$val = 0, $prefix$040 = 0, $prefix$138 = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $0 = sp + 12 | 0;
 $1 = sp + 184 | 0;
 $ss = sp + 24 | 0;
 $2 = sp + 208 | 0;
 $3 = sp + 232 | 0;
 $4 = sp;
 $5 = sp + 168 | 0;
 $6 = sp + 220 | 0;
 $args$idx8$val = HEAP32[$args >> 2] | 0;
 $args$idx9 = $args + 4 | 0;
 $args$idx9$val = HEAP32[$args$idx9 >> 2] | 0;
 $10 = $args$idx9$val - $args$idx8$val >> 4;
 $params$idx$val = HEAP32[$params >> 2] | 0;
 $params$idx10 = $params + 4 | 0;
 L1 : do if (($10 | 0) == ((HEAP32[$params$idx10 >> 2] | 0) - $params$idx$val >> 2 | 0)) {
  if (($args$idx9$val | 0) == ($args$idx8$val | 0)) {
   STACKTOP = sp;
   return;
  } else $i$045 = 0;
  do {
   if ((HEAP32[$args$idx8$val + ($i$045 << 4) >> 2] | 0) != (HEAP32[$params$idx$val + ($i$045 << 2) >> 2] | 0)) break L1;
   $i$045 = $i$045 + 1 | 0;
  } while ($i$045 >>> 0 < $10 >>> 0);
  STACKTOP = sp;
  return;
 } while (0);
 __Z21jsonlang_builtin_declm($1, $builtin);
 $24 = $ss + 64 | 0;
 $25 = $ss + 8 | 0;
 HEAP32[$25 >> 2] = 2912;
 $26 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$24 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $26 | 0);
 $29 = __THREW__;
 __THREW__ = 0;
 L10 : do if ($29 & 1) {
  $42 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $42;
  label = 24;
 } else {
  HEAP32[$ss + 136 >> 2] = 0;
  HEAP32[$ss + 140 >> 2] = -1;
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$ss + 64 >> 2] = 2932;
  HEAP32[$25 >> 2] = 2912;
  __THREW__ = 0;
  invoke_vi(173, $26 | 0);
  $34 = __THREW__;
  __THREW__ = 0;
  do if ($34 & 1) {
   $44 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $44;
  } else {
   HEAP32[$26 >> 2] = 2988;
   $36 = $ss + 44 | 0;
   HEAP32[$36 >> 2] = 0;
   HEAP32[$36 + 4 >> 2] = 0;
   HEAP32[$36 + 8 >> 2] = 0;
   HEAP32[$36 + 12 >> 2] = 0;
   HEAP32[$ss + 60 >> 2] = 24;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(42, $26 | 0, $0 | 0);
   $38 = __THREW__;
   __THREW__ = 0;
   if ($38 & 1) {
    $40 = ___cxa_find_matching_catch() | 0;
    $41 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
    $eh$lpad$body$i$index2Z2D = $41;
    $eh$lpad$body$i$indexZ2D = $40;
    break;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $46 = $ss + 8 | 0;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   $47 = HEAP8[$1 >> 0] | 0;
   $54 = ($47 & 1) == 0 ? ($47 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0;
   __THREW__ = 0;
   invoke_viiii(13, $3 | 0, 54278, 17, $54 + 17 | 0);
   $56 = __THREW__;
   __THREW__ = 0;
   L19 : do if ($56 & 1) label = 15; else {
    __THREW__ = 0;
    invoke_iiii(35, $3 | 0, ((HEAP8[$1 >> 0] & 1) == 0 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0) | 0, $54 | 0) | 0;
    $65 = __THREW__;
    __THREW__ = 0;
    if ($65 & 1) label = 15; else {
     __THREW__ = 0;
     $69 = invoke_iii(27, $3 | 0, 54296) | 0;
     $70 = __THREW__;
     __THREW__ = 0;
     do if ($70 & 1) {
      $116 = ___cxa_find_matching_catch() | 0;
      $$01 = $116;
      $$03 = tempRet0;
     } else {
      HEAP32[$2 >> 2] = HEAP32[$69 >> 2];
      HEAP32[$2 + 4 >> 2] = HEAP32[$69 + 4 >> 2];
      HEAP32[$2 + 8 >> 2] = HEAP32[$69 + 8 >> 2];
      HEAP32[$69 >> 2] = 0;
      HEAP32[$69 + 4 >> 2] = 0;
      HEAP32[$69 + 8 >> 2] = 0;
      $72 = HEAP8[$2 >> 0] | 0;
      $74 = ($72 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $46 | 0, ($74 ? $2 + 1 | 0 : HEAP32[$2 + 8 >> 2] | 0) | 0, ($74 ? ($72 & 255) >>> 1 : HEAP32[$2 + 4 >> 2] | 0) | 0) | 0;
      $84 = __THREW__;
      __THREW__ = 0;
      if ($84 & 1) {
       $118 = ___cxa_find_matching_catch() | 0;
       $119 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
       $$01 = $118;
       $$03 = $119;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
      $params$idx13$val = HEAP32[$params >> 2] | 0;
      $params$idx14$val = HEAP32[$params$idx10 >> 2] | 0;
      L28 : do if (($params$idx13$val | 0) != ($params$idx14$val | 0)) {
       $87 = $4 + 8 | 0;
       $88 = $4 + 1 | 0;
       $89 = $4 + 4 | 0;
       $params$idx13$val3039 = $params$idx13$val;
       $prefix$040 = 62848;
       while (1) {
        $90 = HEAP32[$params$idx13$val3039 >> 2] | 0;
        $91 = _strlen($prefix$040) | 0;
        __THREW__ = 0;
        $92 = invoke_iiii(29, $46 | 0, $prefix$040 | 0, $91 | 0) | 0;
        $93 = __THREW__;
        __THREW__ = 0;
        if ($93 & 1) {
         label = 26;
         break;
        }
        __THREW__ = 0;
        invoke_vii(60, $4 | 0, $90 | 0);
        $95 = __THREW__;
        __THREW__ = 0;
        if ($95 & 1) {
         label = 26;
         break;
        }
        $97 = HEAP8[$4 >> 0] | 0;
        $99 = ($97 & 1) == 0;
        __THREW__ = 0;
        invoke_iiii(29, $92 | 0, ($99 ? $88 : HEAP32[$87 >> 2] | 0) | 0, ($99 ? ($97 & 255) >>> 1 : HEAP32[$89 >> 2] | 0) | 0) | 0;
        $106 = __THREW__;
        __THREW__ = 0;
        if ($106 & 1) {
         label = 32;
         break;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        $params$idx13$val3039 = $params$idx13$val3039 + 4 | 0;
        if (($params$idx13$val3039 | 0) == ($params$idx14$val | 0)) break L28; else $prefix$040 = 51927;
       }
       if ((label | 0) == 26) {
        $112 = ___cxa_find_matching_catch() | 0;
        $eh$lpad$body20$index9Z2D = tempRet0;
        $eh$lpad$body20$indexZ2D = $112;
        label = 28;
        break L19;
       } else if ((label | 0) == 32) {
        $120 = ___cxa_find_matching_catch() | 0;
        $121 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
        $$2 = $120;
        $$25 = $121;
        break L19;
       }
      } while (0);
      __THREW__ = 0;
      invoke_iiii(29, $46 | 0, 54308, 11) | 0;
      $122 = __THREW__;
      __THREW__ = 0;
      if (!($122 & 1)) {
       $args$idx16$val = HEAP32[$args >> 2] | 0;
       $args$idx17$val = HEAP32[$args$idx9 >> 2] | 0;
       L41 : do if (($args$idx16$val | 0) != ($args$idx17$val | 0)) {
        $125 = $5 + 8 | 0;
        $126 = $5 + 1 | 0;
        $127 = $5 + 4 | 0;
        $args$idx16$val2937 = $args$idx16$val;
        $prefix$138 = 62848;
        while (1) {
         $128 = HEAP32[$args$idx16$val2937 >> 2] | 0;
         $129 = _strlen($prefix$138) | 0;
         __THREW__ = 0;
         $130 = invoke_iiii(29, $46 | 0, $prefix$138 | 0, $129 | 0) | 0;
         $131 = __THREW__;
         __THREW__ = 0;
         if ($131 & 1) {
          label = 25;
          break;
         }
         __THREW__ = 0;
         invoke_vii(60, $5 | 0, $128 | 0);
         $133 = __THREW__;
         __THREW__ = 0;
         if ($133 & 1) {
          label = 25;
          break;
         }
         $135 = HEAP8[$5 >> 0] | 0;
         $137 = ($135 & 1) == 0;
         __THREW__ = 0;
         invoke_iiii(29, $130 | 0, ($137 ? $126 : HEAP32[$125 >> 2] | 0) | 0, ($137 ? ($135 & 255) >>> 1 : HEAP32[$127 >> 2] | 0) | 0) | 0;
         $144 = __THREW__;
         __THREW__ = 0;
         if ($144 & 1) {
          label = 40;
          break;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         $args$idx16$val2937 = $args$idx16$val2937 + 16 | 0;
         if (($args$idx16$val2937 | 0) == ($args$idx17$val | 0)) break L41; else $prefix$138 = 51927;
        }
        if ((label | 0) == 25) {
         $110 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body20$index9Z2D = tempRet0;
         $eh$lpad$body20$indexZ2D = $110;
         label = 28;
         break L19;
        } else if ((label | 0) == 40) {
         $148 = ___cxa_find_matching_catch() | 0;
         $149 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
         $$2 = $148;
         $$25 = $149;
         break L19;
        }
       } while (0);
       __THREW__ = 0;
       invoke_iiii(29, $46 | 0, 54795, 1) | 0;
       $150 = __THREW__;
       __THREW__ = 0;
       if (!($150 & 1)) {
        $152 = ___cxa_allocate_exception(24) | 0;
        __THREW__ = 0;
        invoke_vii(43, $6 | 0, $26 | 0);
        $153 = __THREW__;
        __THREW__ = 0;
        if ($153 & 1) {
         $159 = ___cxa_find_matching_catch() | 0;
         $$1232 = $159;
         $$1431 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_viiii(16, $152 | 0, $this + 56 | 0, $loc | 0, $6 | 0);
         $156 = __THREW__;
         __THREW__ = 0;
         if ($156 & 1) $$0 = 1; else {
          __THREW__ = 0;
          invoke_viii(4, $152 | 0, 392, 179);
          __THREW__ = 0;
          $$0 = 0;
         }
         $161 = ___cxa_find_matching_catch() | 0;
         $162 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
         if ($$0) {
          $$1232 = $161;
          $$1431 = $162;
         } else {
          $$2 = $161;
          $$25 = $162;
          break L19;
         }
        }
        ___cxa_free_exception($152 | 0);
        $$2 = $$1232;
        $$25 = $$1431;
        break L19;
       }
      }
      $114 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body20$index9Z2D = tempRet0;
      $eh$lpad$body20$indexZ2D = $114;
      label = 28;
      break L19;
     } while (0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     $$2 = $$01;
     $$25 = $$03;
    }
   } while (0);
   if ((label | 0) == 15) {
    $67 = ___cxa_find_matching_catch() | 0;
    $68 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $eh$lpad$body20$index9Z2D = $68;
    $eh$lpad$body20$indexZ2D = $67;
    label = 28;
   }
   if ((label | 0) == 28) {
    $$2 = $eh$lpad$body20$indexZ2D;
    $$25 = $eh$lpad$body20$index9Z2D;
   }
   HEAP32[$ss >> 2] = 2892;
   HEAP32[$24 >> 2] = 2932;
   HEAP32[$46 >> 2] = 2912;
   HEAP32[$26 >> 2] = 2988;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($26);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
   $$3 = $$2;
   $$36 = $$25;
   break L10;
  } while (0);
  $$0$i = $eh$lpad$body$i$index2Z2D;
  $$01$i = $eh$lpad$body$i$indexZ2D;
  label = 24;
 } while (0);
 if ((label | 0) == 24) {
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($24);
  $$3 = $$01$i;
  $$36 = $$0$i;
 }
 $163 = $1 + 12 | 0;
 $164 = HEAP32[$163 >> 2] | 0;
 if (!$164) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($$3 | 0);
 }
 $166 = $1 + 16 | 0;
 $167 = HEAP32[$166 >> 2] | 0;
 if (($167 | 0) == ($164 | 0)) $173 = $164; else {
  $170 = $167;
  do {
   $169 = $170 + -12 | 0;
   HEAP32[$166 >> 2] = $169;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($169);
   $170 = HEAP32[$166 >> 2] | 0;
  } while (($170 | 0) != ($164 | 0));
  $173 = HEAP32[$163 >> 2] | 0;
 }
 __ZdlPv($173);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$3 | 0);
}

function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$lcssa = 0, $$pre$phi50Z2D = 0, $$pre$phi52Z2D = 0, $$pre$phiZ2D = 0, $$sum18 = 0, $$sum21 = 0, $0 = 0, $10 = 0, $100 = 0, $106 = 0, $108 = 0, $109 = 0, $11 = 0, $115 = 0, $123 = 0, $128 = 0, $129 = 0, $132 = 0, $134 = 0, $136 = 0, $149 = 0, $15 = 0, $154 = 0, $156 = 0, $159 = 0, $161 = 0, $164 = 0, $167 = 0, $168 = 0, $170 = 0, $171 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $18 = 0, $182 = 0, $183 = 0, $192 = 0, $197 = 0, $2 = 0, $20 = 0, $201 = 0, $207 = 0, $22 = 0, $222 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $231 = 0, $232 = 0, $238 = 0, $243 = 0, $244 = 0, $247 = 0, $249 = 0, $252 = 0, $257 = 0, $263 = 0, $267 = 0, $268 = 0, $275 = 0, $287 = 0, $292 = 0, $299 = 0, $300 = 0, $301 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $78 = 0, $83 = 0, $87 = 0, $9 = 0, $93 = 0, $99 = 0, $F16$0 = 0, $I19$0 = 0, $K20$043 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $R7$0 = 0, $R7$0$lcssa = 0, $R7$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $RP9$0 = 0, $RP9$0$lcssa = 0, $T$0$lcssa = 0, $T$042 = 0, $T$042$lcssa = 0, label = 0;
 $0 = $p + $psize | 0;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 do if (!($2 & 1)) {
  $5 = HEAP32[$p >> 2] | 0;
  if ($2 & 3) {
   $9 = $p + (0 - $5) | 0;
   $10 = $5 + $psize | 0;
   $11 = HEAP32[1088] | 0;
   if ($9 >>> 0 < $11 >>> 0) _abort();
   if (($9 | 0) == (HEAP32[1089] | 0)) {
    $99 = $p + ($psize + 4) | 0;
    $100 = HEAP32[$99 >> 2] | 0;
    if (($100 & 3 | 0) != 3) {
     $$0 = $9;
     $$02 = $10;
     label = 54;
     break;
    }
    HEAP32[1086] = $10;
    HEAP32[$99 >> 2] = $100 & -2;
    HEAP32[$p + (4 - $5) >> 2] = $10 | 1;
    HEAP32[$0 >> 2] = $10;
    break;
   }
   $15 = $5 >>> 3;
   if ($5 >>> 0 < 256) {
    $18 = HEAP32[$p + (8 - $5) >> 2] | 0;
    $20 = HEAP32[$p + (12 - $5) >> 2] | 0;
    $22 = 4376 + ($15 << 1 << 2) | 0;
    do if (($18 | 0) != ($22 | 0)) {
     if ($18 >>> 0 >= $11 >>> 0) if ((HEAP32[$18 + 12 >> 2] | 0) == ($9 | 0)) break;
     _abort();
    } while (0);
    if (($20 | 0) == ($18 | 0)) {
     HEAP32[1084] = HEAP32[1084] & ~(1 << $15);
     $$0 = $9;
     $$02 = $10;
     label = 54;
     break;
    }
    do if (($20 | 0) == ($22 | 0)) $$pre$phi52Z2D = $20 + 8 | 0; else {
     if ($20 >>> 0 >= $11 >>> 0) {
      $35 = $20 + 8 | 0;
      if ((HEAP32[$35 >> 2] | 0) == ($9 | 0)) {
       $$pre$phi52Z2D = $35;
       break;
      }
     }
     _abort();
    } while (0);
    HEAP32[$18 + 12 >> 2] = $20;
    HEAP32[$$pre$phi52Z2D >> 2] = $18;
    $$0 = $9;
    $$02 = $10;
    label = 54;
    break;
   }
   $40 = HEAP32[$p + (24 - $5) >> 2] | 0;
   $42 = HEAP32[$p + (12 - $5) >> 2] | 0;
   do if (($42 | 0) == ($9 | 0)) {
    $$sum18 = 16 - $5 | 0;
    $53 = $p + ($$sum18 + 4) | 0;
    $54 = HEAP32[$53 >> 2] | 0;
    if (!$54) {
     $56 = $p + $$sum18 | 0;
     $57 = HEAP32[$56 >> 2] | 0;
     if (!$57) {
      $R$1 = 0;
      break;
     } else {
      $R$0 = $57;
      $RP$0 = $56;
     }
    } else {
     $R$0 = $54;
     $RP$0 = $53;
    }
    while (1) {
     $59 = $R$0 + 20 | 0;
     $60 = HEAP32[$59 >> 2] | 0;
     if ($60) {
      $R$0 = $60;
      $RP$0 = $59;
      continue;
     }
     $62 = $R$0 + 16 | 0;
     $63 = HEAP32[$62 >> 2] | 0;
     if (!$63) {
      $R$0$lcssa = $R$0;
      $RP$0$lcssa = $RP$0;
      break;
     } else {
      $R$0 = $63;
      $RP$0 = $62;
     }
    }
    if ($RP$0$lcssa >>> 0 < $11 >>> 0) _abort(); else {
     HEAP32[$RP$0$lcssa >> 2] = 0;
     $R$1 = $R$0$lcssa;
     break;
    }
   } else {
    $45 = HEAP32[$p + (8 - $5) >> 2] | 0;
    if ($45 >>> 0 >= $11 >>> 0) {
     $47 = $45 + 12 | 0;
     if ((HEAP32[$47 >> 2] | 0) == ($9 | 0)) {
      $50 = $42 + 8 | 0;
      if ((HEAP32[$50 >> 2] | 0) == ($9 | 0)) {
       HEAP32[$47 >> 2] = $42;
       HEAP32[$50 >> 2] = $45;
       $R$1 = $42;
       break;
      }
     }
    }
    _abort();
   } while (0);
   if (!$40) {
    $$0 = $9;
    $$02 = $10;
    label = 54;
   } else {
    $68 = HEAP32[$p + (28 - $5) >> 2] | 0;
    $69 = 4640 + ($68 << 2) | 0;
    if (($9 | 0) == (HEAP32[$69 >> 2] | 0)) {
     HEAP32[$69 >> 2] = $R$1;
     if (!$R$1) {
      HEAP32[1085] = HEAP32[1085] & ~(1 << $68);
      $$0 = $9;
      $$02 = $10;
      label = 54;
      break;
     }
    } else {
     if ($40 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
     $78 = $40 + 16 | 0;
     if ((HEAP32[$78 >> 2] | 0) == ($9 | 0)) HEAP32[$78 >> 2] = $R$1; else HEAP32[$40 + 20 >> 2] = $R$1;
     if (!$R$1) {
      $$0 = $9;
      $$02 = $10;
      label = 54;
      break;
     }
    }
    $83 = HEAP32[1088] | 0;
    if ($R$1 >>> 0 < $83 >>> 0) _abort();
    HEAP32[$R$1 + 24 >> 2] = $40;
    $$sum21 = 16 - $5 | 0;
    $87 = HEAP32[$p + $$sum21 >> 2] | 0;
    do if ($87) if ($87 >>> 0 < $83 >>> 0) _abort(); else {
     HEAP32[$R$1 + 16 >> 2] = $87;
     HEAP32[$87 + 24 >> 2] = $R$1;
     break;
    } while (0);
    $93 = HEAP32[$p + ($$sum21 + 4) >> 2] | 0;
    if (!$93) {
     $$0 = $9;
     $$02 = $10;
     label = 54;
    } else if ($93 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
     HEAP32[$R$1 + 20 >> 2] = $93;
     HEAP32[$93 + 24 >> 2] = $R$1;
     $$0 = $9;
     $$02 = $10;
     label = 54;
     break;
    }
   }
  }
 } else {
  $$0 = $p;
  $$02 = $psize;
  label = 54;
 } while (0);
 L74 : do if ((label | 0) == 54) {
  $106 = HEAP32[1088] | 0;
  if ($0 >>> 0 < $106 >>> 0) _abort();
  $108 = $p + ($psize + 4) | 0;
  $109 = HEAP32[$108 >> 2] | 0;
  if (!($109 & 2)) {
   if (($0 | 0) == (HEAP32[1090] | 0)) {
    $115 = (HEAP32[1087] | 0) + $$02 | 0;
    HEAP32[1087] = $115;
    HEAP32[1090] = $$0;
    HEAP32[$$0 + 4 >> 2] = $115 | 1;
    if (($$0 | 0) != (HEAP32[1089] | 0)) break;
    HEAP32[1089] = 0;
    HEAP32[1086] = 0;
    break;
   }
   if (($0 | 0) == (HEAP32[1089] | 0)) {
    $123 = (HEAP32[1086] | 0) + $$02 | 0;
    HEAP32[1086] = $123;
    HEAP32[1089] = $$0;
    HEAP32[$$0 + 4 >> 2] = $123 | 1;
    HEAP32[$$0 + $123 >> 2] = $123;
    break;
   }
   $128 = ($109 & -8) + $$02 | 0;
   $129 = $109 >>> 3;
   do if ($109 >>> 0 < 256) {
    $132 = HEAP32[$p + ($psize + 8) >> 2] | 0;
    $134 = HEAP32[$p + ($psize + 12) >> 2] | 0;
    $136 = 4376 + ($129 << 1 << 2) | 0;
    do if (($132 | 0) != ($136 | 0)) {
     if ($132 >>> 0 >= $106 >>> 0) if ((HEAP32[$132 + 12 >> 2] | 0) == ($0 | 0)) break;
     _abort();
    } while (0);
    if (($134 | 0) == ($132 | 0)) {
     HEAP32[1084] = HEAP32[1084] & ~(1 << $129);
     break;
    }
    do if (($134 | 0) == ($136 | 0)) $$pre$phi50Z2D = $134 + 8 | 0; else {
     if ($134 >>> 0 >= $106 >>> 0) {
      $149 = $134 + 8 | 0;
      if ((HEAP32[$149 >> 2] | 0) == ($0 | 0)) {
       $$pre$phi50Z2D = $149;
       break;
      }
     }
     _abort();
    } while (0);
    HEAP32[$132 + 12 >> 2] = $134;
    HEAP32[$$pre$phi50Z2D >> 2] = $132;
   } else {
    $154 = HEAP32[$p + ($psize + 24) >> 2] | 0;
    $156 = HEAP32[$p + ($psize + 12) >> 2] | 0;
    do if (($156 | 0) == ($0 | 0)) {
     $167 = $p + ($psize + 20) | 0;
     $168 = HEAP32[$167 >> 2] | 0;
     if (!$168) {
      $170 = $p + ($psize + 16) | 0;
      $171 = HEAP32[$170 >> 2] | 0;
      if (!$171) {
       $R7$1 = 0;
       break;
      } else {
       $R7$0 = $171;
       $RP9$0 = $170;
      }
     } else {
      $R7$0 = $168;
      $RP9$0 = $167;
     }
     while (1) {
      $173 = $R7$0 + 20 | 0;
      $174 = HEAP32[$173 >> 2] | 0;
      if ($174) {
       $R7$0 = $174;
       $RP9$0 = $173;
       continue;
      }
      $176 = $R7$0 + 16 | 0;
      $177 = HEAP32[$176 >> 2] | 0;
      if (!$177) {
       $R7$0$lcssa = $R7$0;
       $RP9$0$lcssa = $RP9$0;
       break;
      } else {
       $R7$0 = $177;
       $RP9$0 = $176;
      }
     }
     if ($RP9$0$lcssa >>> 0 < $106 >>> 0) _abort(); else {
      HEAP32[$RP9$0$lcssa >> 2] = 0;
      $R7$1 = $R7$0$lcssa;
      break;
     }
    } else {
     $159 = HEAP32[$p + ($psize + 8) >> 2] | 0;
     if ($159 >>> 0 >= $106 >>> 0) {
      $161 = $159 + 12 | 0;
      if ((HEAP32[$161 >> 2] | 0) == ($0 | 0)) {
       $164 = $156 + 8 | 0;
       if ((HEAP32[$164 >> 2] | 0) == ($0 | 0)) {
        HEAP32[$161 >> 2] = $156;
        HEAP32[$164 >> 2] = $159;
        $R7$1 = $156;
        break;
       }
      }
     }
     _abort();
    } while (0);
    if ($154) {
     $182 = HEAP32[$p + ($psize + 28) >> 2] | 0;
     $183 = 4640 + ($182 << 2) | 0;
     if (($0 | 0) == (HEAP32[$183 >> 2] | 0)) {
      HEAP32[$183 >> 2] = $R7$1;
      if (!$R7$1) {
       HEAP32[1085] = HEAP32[1085] & ~(1 << $182);
       break;
      }
     } else {
      if ($154 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
      $192 = $154 + 16 | 0;
      if ((HEAP32[$192 >> 2] | 0) == ($0 | 0)) HEAP32[$192 >> 2] = $R7$1; else HEAP32[$154 + 20 >> 2] = $R7$1;
      if (!$R7$1) break;
     }
     $197 = HEAP32[1088] | 0;
     if ($R7$1 >>> 0 < $197 >>> 0) _abort();
     HEAP32[$R7$1 + 24 >> 2] = $154;
     $201 = HEAP32[$p + ($psize + 16) >> 2] | 0;
     do if ($201) if ($201 >>> 0 < $197 >>> 0) _abort(); else {
      HEAP32[$R7$1 + 16 >> 2] = $201;
      HEAP32[$201 + 24 >> 2] = $R7$1;
      break;
     } while (0);
     $207 = HEAP32[$p + ($psize + 20) >> 2] | 0;
     if ($207) if ($207 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
      HEAP32[$R7$1 + 20 >> 2] = $207;
      HEAP32[$207 + 24 >> 2] = $R7$1;
      break;
     }
    }
   } while (0);
   HEAP32[$$0 + 4 >> 2] = $128 | 1;
   HEAP32[$$0 + $128 >> 2] = $128;
   if (($$0 | 0) == (HEAP32[1089] | 0)) {
    HEAP32[1086] = $128;
    break;
   } else $$1 = $128;
  } else {
   HEAP32[$108 >> 2] = $109 & -2;
   HEAP32[$$0 + 4 >> 2] = $$02 | 1;
   HEAP32[$$0 + $$02 >> 2] = $$02;
   $$1 = $$02;
  }
  $222 = $$1 >>> 3;
  if ($$1 >>> 0 < 256) {
   $224 = $222 << 1;
   $225 = 4376 + ($224 << 2) | 0;
   $226 = HEAP32[1084] | 0;
   $227 = 1 << $222;
   if (!($226 & $227)) {
    HEAP32[1084] = $226 | $227;
    $$pre$phiZ2D = 4376 + ($224 + 2 << 2) | 0;
    $F16$0 = $225;
   } else {
    $231 = 4376 + ($224 + 2 << 2) | 0;
    $232 = HEAP32[$231 >> 2] | 0;
    if ($232 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
     $$pre$phiZ2D = $231;
     $F16$0 = $232;
    }
   }
   HEAP32[$$pre$phiZ2D >> 2] = $$0;
   HEAP32[$F16$0 + 12 >> 2] = $$0;
   HEAP32[$$0 + 8 >> 2] = $F16$0;
   HEAP32[$$0 + 12 >> 2] = $225;
   break;
  }
  $238 = $$1 >>> 8;
  if (!$238) $I19$0 = 0; else if ($$1 >>> 0 > 16777215) $I19$0 = 31; else {
   $243 = ($238 + 1048320 | 0) >>> 16 & 8;
   $244 = $238 << $243;
   $247 = ($244 + 520192 | 0) >>> 16 & 4;
   $249 = $244 << $247;
   $252 = ($249 + 245760 | 0) >>> 16 & 2;
   $257 = 14 - ($247 | $243 | $252) + ($249 << $252 >>> 15) | 0;
   $I19$0 = $$1 >>> ($257 + 7 | 0) & 1 | $257 << 1;
  }
  $263 = 4640 + ($I19$0 << 2) | 0;
  HEAP32[$$0 + 28 >> 2] = $I19$0;
  HEAP32[$$0 + 20 >> 2] = 0;
  HEAP32[$$0 + 16 >> 2] = 0;
  $267 = HEAP32[1085] | 0;
  $268 = 1 << $I19$0;
  if (!($267 & $268)) {
   HEAP32[1085] = $267 | $268;
   HEAP32[$263 >> 2] = $$0;
   HEAP32[$$0 + 24 >> 2] = $263;
   HEAP32[$$0 + 12 >> 2] = $$0;
   HEAP32[$$0 + 8 >> 2] = $$0;
   break;
  }
  $275 = HEAP32[$263 >> 2] | 0;
  L170 : do if ((HEAP32[$275 + 4 >> 2] & -8 | 0) == ($$1 | 0)) $T$0$lcssa = $275; else {
   $K20$043 = $$1 << (($I19$0 | 0) == 31 ? 0 : 25 - ($I19$0 >>> 1) | 0);
   $T$042 = $275;
   while (1) {
    $292 = $T$042 + 16 + ($K20$043 >>> 31 << 2) | 0;
    $287 = HEAP32[$292 >> 2] | 0;
    if (!$287) {
     $$lcssa = $292;
     $T$042$lcssa = $T$042;
     break;
    }
    if ((HEAP32[$287 + 4 >> 2] & -8 | 0) == ($$1 | 0)) {
     $T$0$lcssa = $287;
     break L170;
    } else {
     $K20$043 = $K20$043 << 1;
     $T$042 = $287;
    }
   }
   if ($$lcssa >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
    HEAP32[$$lcssa >> 2] = $$0;
    HEAP32[$$0 + 24 >> 2] = $T$042$lcssa;
    HEAP32[$$0 + 12 >> 2] = $$0;
    HEAP32[$$0 + 8 >> 2] = $$0;
    break L74;
   }
  } while (0);
  $299 = $T$0$lcssa + 8 | 0;
  $300 = HEAP32[$299 >> 2] | 0;
  $301 = HEAP32[1088] | 0;
  if ($300 >>> 0 >= $301 >>> 0 & $T$0$lcssa >>> 0 >= $301 >>> 0) {
   HEAP32[$300 + 12 >> 2] = $$0;
   HEAP32[$299 >> 2] = $$0;
   HEAP32[$$0 + 8 >> 2] = $300;
   HEAP32[$$0 + 12 >> 2] = $T$0$lcssa;
   HEAP32[$$0 + 24 >> 2] = 0;
   break;
  } else _abort();
 } while (0);
 return;
}

function __ZL23default_import_callbackPvPKcS1_Pi($ctx, $base, $file, $success) {
 $ctx = $ctx | 0;
 $base = $base | 0;
 $file = $file | 0;
 $success = $success | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i$i22 = 0, $$0$i$i27 = 0, $$0$i$i7 = 0, $$01 = 0, $$01$i = 0, $$03 = 0, $$1 = 0, $$12 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$byval_copy = 0, $$byval_copy6 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $108 = 0, $11 = 0, $112 = 0, $117 = 0, $120 = 0, $126 = 0, $127 = 0, $128 = 0, $130 = 0, $131 = 0, $133 = 0, $135 = 0, $141 = 0, $143 = 0, $146 = 0, $147 = 0, $152 = 0, $157 = 0, $159 = 0, $161 = 0, $167 = 0, $169 = 0, $17 = 0, $176 = 0, $177 = 0, $180 = 0, $184 = 0, $185 = 0, $186 = 0, $188 = 0, $19 = 0, $190 = 0, $196 = 0, $198 = 0, $2 = 0, $201 = 0, $202 = 0, $207 = 0, $209 = 0, $211 = 0, $213 = 0, $22 = 0, $23 = 0, $3 = 0, $33 = 0, $35 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $47 = 0, $5 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $80 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $abs_path = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $f = 0, $input = 0, $strlenfirst = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $$byval_copy6 = sp + 284 | 0;
 $$byval_copy = sp + 268 | 0;
 $0 = sp + 28 | 0;
 $1 = sp + 16 | 0;
 $abs_path = sp + 256 | 0;
 $2 = sp + 272 | 0;
 $3 = sp + 288 | 0;
 $f = sp + 40 | 0;
 $4 = sp;
 $input = sp + 240 | 0;
 $5 = sp + 12 | 0;
 $6 = sp + 252 | 0;
 $7 = sp + 228 | 0;
 $strlenfirst = HEAP8[$file >> 0] | 0;
 if (!($strlenfirst << 24 >> 24)) {
  HEAP32[$success >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($0, 54894, 40);
  $9 = HEAP8[$0 >> 0] | 0;
  $11 = ($9 & 1) == 0;
  $17 = ($11 ? ($9 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) + 1 | 0;
  if (!$17) $$0$i$i = 0; else {
   $19 = _malloc($17) | 0;
   if (!$19) {
    __THREW__ = 0;
    invoke_v(5);
    __THREW__ = 0;
    $22 = ___cxa_find_matching_catch() | 0;
    $23 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $$3 = $23;
    $$36 = $22;
    ___resumeException($$36 | 0);
   } else $$0$i$i = $19;
  }
  _strcpy($$0$i$i, $11 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $$1 = $$0$i$i;
  STACKTOP = sp;
  return $$1 | 0;
 }
 if ((HEAP8[$file + ((_strlen($file) | 0) + -1) >> 0] | 0) == 47) {
  HEAP32[$success >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 54935, 31);
  $33 = HEAP8[$1 >> 0] | 0;
  $35 = ($33 & 1) == 0;
  $41 = ($35 ? ($33 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0) + 1 | 0;
  if (!$41) $$0$i$i7 = 0; else {
   $43 = _malloc($41) | 0;
   if (!$43) {
    __THREW__ = 0;
    invoke_v(5);
    __THREW__ = 0;
    $46 = ___cxa_find_matching_catch() | 0;
    $47 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $$3 = $47;
    $$36 = $46;
    ___resumeException($$36 | 0);
   } else $$0$i$i7 = $43;
  }
  _strcpy($$0$i$i7, $35 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  $$1 = $$0$i$i7;
  STACKTOP = sp;
  return $$1 | 0;
 };
 HEAP32[$abs_path >> 2] = 0;
 HEAP32[$abs_path + 4 >> 2] = 0;
 HEAP32[$abs_path + 8 >> 2] = 0;
 do if ($strlenfirst << 24 >> 24 == 47) {
  __THREW__ = 0;
  invoke_iii(19, $abs_path | 0, $file | 0) | 0;
  $53 = __THREW__;
  __THREW__ = 0;
  if ($53 & 1) label = 13; else label = 24;
 } else {
  $57 = _strlen($base) | 0;
  __THREW__ = 0;
  invoke_viii(3, $3 | 0, $base | 0, $57 | 0);
  $58 = __THREW__;
  __THREW__ = 0;
  if ($58 & 1) label = 13; else {
   __THREW__ = 0;
   $60 = invoke_iii(27, $3 | 0, $file | 0) | 0;
   $61 = __THREW__;
   __THREW__ = 0;
   if ($61 & 1) {
    $74 = ___cxa_find_matching_catch() | 0;
    $75 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$2 = $75;
    $$25 = $74;
    break;
   };
   HEAP32[$2 >> 2] = HEAP32[$60 >> 2];
   HEAP32[$2 + 4 >> 2] = HEAP32[$60 + 4 >> 2];
   HEAP32[$2 + 8 >> 2] = HEAP32[$60 + 8 >> 2];
   HEAP32[$60 >> 2] = 0;
   HEAP32[$60 + 4 >> 2] = 0;
   HEAP32[$60 + 8 >> 2] = 0;
   if (!(HEAP8[$abs_path >> 0] & 1)) {
    HEAP8[$abs_path + 1 >> 0] = 0;
    HEAP8[$abs_path >> 0] = 0;
   } else {
    HEAP8[HEAP32[$abs_path + 8 >> 2] >> 0] = 0;
    HEAP32[$abs_path + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $abs_path | 0, 0);
   $70 = __THREW__;
   __THREW__ = 0;
   if ($70 & 1) {
    $72 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($72);
   } else {
    HEAP32[$abs_path >> 2] = HEAP32[$2 >> 2];
    HEAP32[$abs_path + 4 >> 2] = HEAP32[$2 + 4 >> 2];
    HEAP32[$abs_path + 8 >> 2] = HEAP32[$2 + 8 >> 2];
    HEAP32[$2 >> 2] = 0;
    HEAP32[$2 + 4 >> 2] = 0;
    HEAP32[$2 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    label = 24;
    break;
   }
  }
 } while (0);
 L33 : do if ((label | 0) == 13) {
  $55 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $55;
  label = 14;
 } else if ((label | 0) == 24) {
  $76 = $f + 108 | 0;
  $77 = $f + 8 | 0;
  HEAP32[$f >> 2] = 3724;
  HEAP32[$76 >> 2] = 3744;
  HEAP32[$f + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $f + 108 | 0, $77 | 0);
  $80 = __THREW__;
  __THREW__ = 0;
  do if ($80 & 1) {
   $87 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $87;
  } else {
   HEAP32[$f + 180 >> 2] = 0;
   HEAP32[$f + 184 >> 2] = -1;
   HEAP32[$f >> 2] = 3764;
   HEAP32[$f + 108 >> 2] = 3784;
   __THREW__ = 0;
   invoke_vi(181, $77 | 0);
   $85 = __THREW__;
   __THREW__ = 0;
   if ($85 & 1) {
    $89 = ___cxa_find_matching_catch() | 0;
    $$0$i = tempRet0;
    $$01$i = $89;
    break;
   }
   $91 = $f + 72 | 0;
   if (!(HEAP32[$91 >> 2] | 0)) {
    $101 = _fopen((HEAP8[$abs_path >> 0] & 1) == 0 ? $abs_path + 1 | 0 : HEAP32[$abs_path + 8 >> 2] | 0, 54797) | 0;
    HEAP32[$91 >> 2] = $101;
    if (!$101) label = 32; else {
     HEAP32[$f + 96 >> 2] = 8;
     __THREW__ = 0;
     invoke_vii(47, $f + (HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0) | 0, 0);
     $108 = __THREW__;
     __THREW__ = 0;
     if ($108 & 1) label = 40; else {
      $$pre$phiZ2D = $f;
      label = 33;
     }
    }
   } else label = 32;
   if ((label | 0) == 32) {
    $112 = HEAP32[(HEAP32[$f >> 2] | 0) + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(47, $f + $112 | 0, HEAP32[$f + ($112 + 16) >> 2] | 4 | 0);
    $117 = __THREW__;
    __THREW__ = 0;
    if ($117 & 1) label = 40; else {
     $$pre$phiZ2D = $f;
     label = 33;
    }
   }
   L47 : do if ((label | 0) == 33) {
    $120 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 | 0;
    L49 : do if (!(HEAP32[$f + ((HEAP32[$120 >> 2] | 0) + 16) >> 2] | 0)) {
     HEAP32[$input >> 2] = 0;
     HEAP32[$input + 4 >> 2] = 0;
     HEAP32[$input + 8 >> 2] = 0;
     HEAP32[$5 >> 2] = HEAP32[$f + ((HEAP32[$120 >> 2] | 0) + 24) >> 2];
     HEAP32[$6 >> 2] = 0;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
     HEAP32[$$byval_copy6 >> 2] = HEAP32[$6 >> 2];
     invoke_iiii(40, $input | 0, $$byval_copy | 0, $$byval_copy6 | 0) | 0;
     $157 = __THREW__;
     __THREW__ = 0;
     do if (!($157 & 1)) {
      HEAP32[$success >> 2] = 1;
      $159 = HEAP8[$input >> 0] | 0;
      $161 = ($159 & 1) == 0;
      $167 = ($161 ? ($159 & 255) >>> 1 : HEAP32[$input + 4 >> 2] | 0) + 1 | 0;
      if (!$167) $$0$i$i22 = 0; else {
       $169 = _malloc($167) | 0;
       if (!$169) {
        __THREW__ = 0;
        invoke_v(5);
        __THREW__ = 0;
        break;
       } else $$0$i$i22 = $169;
      }
      _strcpy($$0$i$i22, $161 ? $input + 1 | 0 : HEAP32[$input + 8 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
      $$0 = $$0$i$i22;
      break L49;
     } while (0);
     $176 = ___cxa_find_matching_catch(832) | 0;
     $177 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
     if (($177 | 0) != (_llvm_eh_typeid_for(832) | 0)) {
      $$12 = $177;
      $$14 = $176;
      break L47;
     }
     $180 = ___cxa_begin_catch($176 | 0) | 0;
     HEAP32[$success >> 2] = 0;
     $184 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$180 >> 2] | 0) + 8 >> 2] & 127]($180) | 0;
     $185 = _strlen($184) | 0;
     __THREW__ = 0;
     invoke_viii(3, $7 | 0, $184 | 0, $185 | 0);
     $186 = __THREW__;
     __THREW__ = 0;
     do if ($186 & 1) {
      $209 = ___cxa_find_matching_catch() | 0;
      $$01 = tempRet0;
      $$03 = $209;
     } else {
      $188 = HEAP8[$7 >> 0] | 0;
      $190 = ($188 & 1) == 0;
      $196 = ($190 ? ($188 & 255) >>> 1 : HEAP32[$7 + 4 >> 2] | 0) + 1 | 0;
      if (!$196) $$0$i$i27 = 0; else {
       $198 = _malloc($196) | 0;
       if (!$198) {
        __THREW__ = 0;
        invoke_v(5);
        __THREW__ = 0;
        $201 = ___cxa_find_matching_catch() | 0;
        $202 = tempRet0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
        $$01 = $202;
        $$03 = $201;
        break;
       } else $$0$i$i27 = $198;
      }
      _strcpy($$0$i$i27, $190 ? $7 + 1 | 0 : HEAP32[$7 + 8 >> 2] | 0) | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
      __THREW__ = 0;
      invoke_v(2);
      $207 = __THREW__;
      __THREW__ = 0;
      if ($207 & 1) {
       label = 40;
       break L47;
      } else {
       $$0 = $$0$i$i27;
       break L49;
      }
     } while (0);
     __THREW__ = 0;
     invoke_v(2);
     $211 = __THREW__;
     __THREW__ = 0;
     if (!($211 & 1)) {
      $$12 = $$01;
      $$14 = $$03;
      break L47;
     }
     $213 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($213);
    } else {
     HEAP32[$success >> 2] = 0;
     $126 = HEAP32[(___errno_location() | 0) >> 2] | 0;
     __THREW__ = 0;
     $127 = invoke_ii(71, $126 | 0) | 0;
     $128 = __THREW__;
     __THREW__ = 0;
     if ($128 & 1) {
      label = 40;
      break L47;
     }
     $130 = _strlen($127) | 0;
     __THREW__ = 0;
     invoke_viii(3, $4 | 0, $127 | 0, $130 | 0);
     $131 = __THREW__;
     __THREW__ = 0;
     if ($131 & 1) {
      label = 40;
      break L47;
     }
     $133 = HEAP8[$4 >> 0] | 0;
     $135 = ($133 & 1) == 0;
     $141 = ($135 ? ($133 & 255) >>> 1 : HEAP32[$4 + 4 >> 2] | 0) + 1 | 0;
     if (!$141) $$0$i$i17 = 0; else {
      $143 = _malloc($141) | 0;
      if (!$143) {
       __THREW__ = 0;
       invoke_v(5);
       __THREW__ = 0;
       $146 = ___cxa_find_matching_catch() | 0;
       $147 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
       $$12 = $147;
       $$14 = $146;
       break L47;
      } else $$0$i$i17 = $143;
     }
     _strcpy($$0$i$i17, $135 ? $4 + 1 | 0 : HEAP32[$4 + 8 >> 2] | 0) | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     $$0 = $$0$i$i17;
    } while (0);
    HEAP32[$f >> 2] = 3764;
    HEAP32[$76 >> 2] = 3784;
    __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($77);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($76);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
    $$1 = $$0;
    STACKTOP = sp;
    return $$1 | 0;
   } while (0);
   if ((label | 0) == 40) {
    $152 = ___cxa_find_matching_catch() | 0;
    $$12 = tempRet0;
    $$14 = $152;
   }
   HEAP32[$f >> 2] = 3764;
   HEAP32[$76 >> 2] = 3784;
   __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($77);
   __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($76);
   $$2 = $$12;
   $$25 = $$14;
   break L33;
  } while (0);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($76);
  $eh$lpad$body$index2Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
  label = 14;
 } while (0);
 if ((label | 0) == 14) {
  $$2 = $eh$lpad$body$index2Z2D;
  $$25 = $eh$lpad$body$indexZ2D;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($abs_path);
 $$3 = $$2;
 $$36 = $$25;
 ___resumeException($$36 | 0);
 return 0;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i11 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i17 = 0, $$044 = 0, $$081 = 0, $$lcssa = 0, $$ph$ph = 0, $$pre$i3$i$i19 = 0, $$pre$i3$i$i19$lcssa = 0, $100 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $116 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $132 = 0, $139 = 0, $147 = 0, $149 = 0, $154 = 0, $16 = 0, $161 = 0, $162 = 0, $168 = 0, $175 = 0, $176 = 0, $191 = 0, $193 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $30 = 0, $36 = 0, $39 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $54 = 0, $61 = 0, $62 = 0, $66 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $79 = 0, $80 = 0, $86 = 0, $87 = 0, $89 = 0, $9 = 0, $99 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off086 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0100 = 0, $__ky1$087 = 0, $__ky2$094 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$098 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$383 = 0, $__n_does_match$4 = 0, $__n_does_match$592 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$097 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$382 = 0, $__n_might_match$4 = 0, $__st$099 = 0, $__st$184 = 0, $__st$293 = 0, $__st$380 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 do if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(7);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $$ph$ph = 0;
    label = 6;
    break;
   }
  }
  $191 = $5;
  $__status$0 = $5;
  label = 11;
 } else {
  $191 = 0;
  $__status$0 = $__statbuf;
  label = 11;
 } while (0);
 L6 : do if ((label | 0) == 11) {
  if (($__kb | 0) == ($__ke | 0)) {
   $__n_does_match$0$lcssa = 0;
   $__n_might_match$0$lcssa = $3;
  } else {
   $__ky$0100 = $__kb;
   $__n_does_match$098 = 0;
   $__n_might_match$097 = $3;
   $__st$099 = $__status$0;
   while (1) {
    $22 = HEAP8[$__ky$0100 >> 0] | 0;
    if (!($22 & 1)) $30 = ($22 & 255) >>> 1; else $30 = HEAP32[$__ky$0100 + 4 >> 2] | 0;
    if (!$30) {
     HEAP8[$__st$099 >> 0] = 2;
     $__n_does_match$1 = $__n_does_match$098 + 1 | 0;
     $__n_might_match$1 = $__n_might_match$097 + -1 | 0;
    } else {
     HEAP8[$__st$099 >> 0] = 1;
     $__n_does_match$1 = $__n_does_match$098;
     $__n_might_match$1 = $__n_might_match$097;
    }
    $__ky$0100 = $__ky$0100 + 12 | 0;
    if (($__ky$0100 | 0) == ($__ke | 0)) {
     $__n_does_match$0$lcssa = $__n_does_match$1;
     $__n_might_match$0$lcssa = $__n_might_match$1;
     break;
    } else {
     $__n_does_match$098 = $__n_does_match$1;
     $__n_might_match$097 = $__n_might_match$1;
     $__st$099 = $__st$099 + 1 | 0;
    }
   }
  }
  $20 = ($__kb | 0) == ($__ke | 0);
  $21 = ($__kb | 0) == ($__ke | 0);
  $__indx$0 = 0;
  $__n_does_match$2 = $__n_does_match$0$lcssa;
  $__n_might_match$2 = $__n_might_match$0$lcssa;
  L20 : while (1) {
   $36 = HEAP32[$__b >> 2] | 0;
   do if (!$36) $66 = 1; else {
    $39 = HEAP32[$36 + 12 >> 2] | 0;
    if (($39 | 0) == (HEAP32[$36 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $46 = invoke_ii(HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] | 0, $36 | 0) | 0;
     $47 = __THREW__;
     __THREW__ = 0;
     if ($47 & 1) {
      label = 5;
      break L20;
     } else $$0$i$i$i$i = $46;
    } else $$0$i$i$i$i = HEAP32[$39 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $66 = 1;
     break;
    } else {
     $66 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   $51 = HEAP32[$__e >> 2] | 0;
   if (!$51) {
    $$pre$i3$i$i19 = 0;
    $67 = 1;
   } else {
    $54 = HEAP32[$51 + 12 >> 2] | 0;
    if (($54 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $61 = invoke_ii(HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] | 0, $51 | 0) | 0;
     $62 = __THREW__;
     __THREW__ = 0;
     if ($62 & 1) {
      label = 5;
      break;
     } else $$0$i$i1$i$i = $61;
    } else $$0$i$i1$i$i = HEAP32[$54 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i19 = 0;
     $67 = 1;
    } else {
     $$pre$i3$i$i19 = $51;
     $67 = 0;
    }
   }
   $70 = HEAP32[$__b >> 2] | 0;
   if (!(($__n_might_match$2 | 0) != 0 & ($66 ^ $67))) {
    $$lcssa = $70;
    $$pre$i3$i$i19$lcssa = $$pre$i3$i$i19;
    label = 66;
    break;
   }
   $72 = HEAP32[$70 + 12 >> 2] | 0;
   if (($72 | 0) == (HEAP32[$70 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $79 = invoke_ii(HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] | 0, $70 | 0) | 0;
    $80 = __THREW__;
    __THREW__ = 0;
    if ($80 & 1) {
     label = 5;
     break;
    } else $$0$i$i = $79;
   } else $$0$i$i = HEAP32[$72 >> 2] | 0;
   if ($__case_sensitive) $__c$0 = $$0$i$i; else {
    __THREW__ = 0;
    $86 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $$0$i$i | 0) | 0;
    $87 = __THREW__;
    __THREW__ = 0;
    if ($87 & 1) {
     label = 5;
     break;
    } else $__c$0 = $86;
   }
   $89 = $__indx$0 + 1 | 0;
   if ($20) {
    $__consume$0$off0$lcssa = 0;
    $__n_does_match$3$lcssa = $__n_does_match$2;
    $__n_might_match$3$lcssa = $__n_might_match$2;
   } else {
    $__consume$0$off086 = 0;
    $__ky1$087 = $__kb;
    $__n_does_match$383 = $__n_does_match$2;
    $__n_might_match$382 = $__n_might_match$2;
    $__st$184 = $__status$0;
    while (1) {
     do if ((HEAP8[$__st$184 >> 0] | 0) == 1) {
      if (!(HEAP8[$__ky1$087 >> 0] & 1)) $99 = $__ky1$087 + 4 | 0; else $99 = HEAP32[$__ky1$087 + 8 >> 2] | 0;
      $100 = HEAP32[$99 + ($__indx$0 << 2) >> 2] | 0;
      if ($__case_sensitive) $__kc$0 = $100; else {
       __THREW__ = 0;
       $104 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] | 0, $__ct | 0, $100 | 0) | 0;
       $105 = __THREW__;
       __THREW__ = 0;
       if ($105 & 1) {
        label = 4;
        break L20;
       } else $__kc$0 = $104;
      }
      if (($__c$0 | 0) != ($__kc$0 | 0)) {
       HEAP8[$__st$184 >> 0] = 0;
       $__consume$1$off0 = $__consume$0$off086;
       $__n_does_match$4 = $__n_does_match$383;
       $__n_might_match$4 = $__n_might_match$382 + -1 | 0;
       break;
      }
      $108 = HEAP8[$__ky1$087 >> 0] | 0;
      if (!($108 & 1)) $116 = ($108 & 255) >>> 1; else $116 = HEAP32[$__ky1$087 + 4 >> 2] | 0;
      if (($116 | 0) == ($89 | 0)) {
       HEAP8[$__st$184 >> 0] = 2;
       $__consume$1$off0 = 1;
       $__n_does_match$4 = $__n_does_match$383 + 1 | 0;
       $__n_might_match$4 = $__n_might_match$382 + -1 | 0;
      } else {
       $__consume$1$off0 = 1;
       $__n_does_match$4 = $__n_does_match$383;
       $__n_might_match$4 = $__n_might_match$382;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off086;
      $__n_does_match$4 = $__n_does_match$383;
      $__n_might_match$4 = $__n_might_match$382;
     } while (0);
     $__ky1$087 = $__ky1$087 + 12 | 0;
     if (($__ky1$087 | 0) == ($__ke | 0)) {
      $__consume$0$off0$lcssa = $__consume$1$off0;
      $__n_does_match$3$lcssa = $__n_does_match$4;
      $__n_might_match$3$lcssa = $__n_might_match$4;
      break;
     } else {
      $__consume$0$off086 = $__consume$1$off0;
      $__n_does_match$383 = $__n_does_match$4;
      $__n_might_match$382 = $__n_might_match$4;
      $__st$184 = $__st$184 + 1 | 0;
     }
    }
   }
   if (!$__consume$0$off0$lcssa) {
    $__indx$0 = $89;
    $__n_does_match$2 = $__n_does_match$3$lcssa;
    $__n_might_match$2 = $__n_might_match$3$lcssa;
    continue;
   }
   $123 = HEAP32[$__b >> 2] | 0;
   $124 = $123 + 12 | 0;
   $125 = HEAP32[$124 >> 2] | 0;
   if (($125 | 0) == (HEAP32[$123 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$123 >> 2] | 0) + 40 >> 2] | 0, $123 | 0) | 0;
    $132 = __THREW__;
    __THREW__ = 0;
    if ($132 & 1) {
     label = 5;
     break;
    }
   } else HEAP32[$124 >> 2] = $125 + 4;
   if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 < 2 | $21) {
    $__indx$0 = $89;
    $__n_does_match$2 = $__n_does_match$3$lcssa;
    $__n_might_match$2 = $__n_might_match$3$lcssa;
    continue;
   } else {
    $__ky2$094 = $__kb;
    $__n_does_match$592 = $__n_does_match$3$lcssa;
    $__st$293 = $__status$0;
   }
   while (1) {
    if ((HEAP8[$__st$293 >> 0] | 0) == 2) {
     $139 = HEAP8[$__ky2$094 >> 0] | 0;
     if (!($139 & 1)) $147 = ($139 & 255) >>> 1; else $147 = HEAP32[$__ky2$094 + 4 >> 2] | 0;
     if (($147 | 0) == ($89 | 0)) $__n_does_match$6 = $__n_does_match$592; else {
      HEAP8[$__st$293 >> 0] = 0;
      $__n_does_match$6 = $__n_does_match$592 + -1 | 0;
     }
    } else $__n_does_match$6 = $__n_does_match$592;
    $149 = $__ky2$094 + 12 | 0;
    if (($149 | 0) == ($__ke | 0)) {
     $__indx$0 = $89;
     $__n_does_match$2 = $__n_does_match$6;
     $__n_might_match$2 = $__n_might_match$3$lcssa;
     continue L20;
    } else {
     $__ky2$094 = $149;
     $__n_does_match$592 = $__n_does_match$6;
     $__st$293 = $__st$293 + 1 | 0;
    }
   }
  }
  if ((label | 0) == 4) {
   $9 = ___cxa_find_matching_catch() | 0;
   $16 = $191;
   $lpad$phi$index = $9;
   $lpad$phi$index3 = tempRet0;
   break;
  } else if ((label | 0) == 5) {
   $11 = ___cxa_find_matching_catch() | 0;
   $16 = $191;
   $lpad$phi$index = $11;
   $lpad$phi$index3 = tempRet0;
   break;
  } else if ((label | 0) == 66) {
   do if (!$$lcssa) $193 = 1; else {
    $154 = HEAP32[$$lcssa + 12 >> 2] | 0;
    if (($154 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $161 = invoke_ii(HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] | 0, $$lcssa | 0) | 0;
     $162 = __THREW__;
     __THREW__ = 0;
     if ($162 & 1) {
      $$ph$ph = $191;
      label = 6;
      break L6;
     } else $$0$i$i$i$i11 = $161;
    } else $$0$i$i$i$i11 = HEAP32[$154 >> 2] | 0;
    if (($$0$i$i$i$i11 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $193 = 1;
     break;
    } else {
     $193 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$$pre$i3$i$i19$lcssa) label = 79; else {
    $168 = HEAP32[$$pre$i3$i$i19$lcssa + 12 >> 2] | 0;
    if (($168 | 0) == (HEAP32[$$pre$i3$i$i19$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $175 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i19$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i19$lcssa | 0) | 0;
     $176 = __THREW__;
     __THREW__ = 0;
     if ($176 & 1) {
      $$ph$ph = $191;
      label = 6;
      break L6;
     } else $$0$i$i1$i$i17 = $175;
    } else $$0$i$i1$i$i17 = HEAP32[$168 >> 2] | 0;
    if (($$0$i$i1$i$i17 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 79;
     break;
    } else if ($193) break; else {
     label = 81;
     break;
    }
   } while (0);
   if ((label | 0) == 79) if ($193) label = 81;
   if ((label | 0) == 81) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   L113 : do if (($__kb | 0) == ($__ke | 0)) label = 85; else {
    $$081 = $__kb;
    $__st$380 = $__status$0;
    while (1) {
     if ((HEAP8[$__st$380 >> 0] | 0) == 2) {
      $$044 = $$081;
      break L113;
     }
     $$081 = $$081 + 12 | 0;
     if (($$081 | 0) == ($__ke | 0)) {
      label = 85;
      break;
     } else $__st$380 = $__st$380 + 1 | 0;
    }
   } while (0);
   if ((label | 0) == 85) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$044 = $__ke;
   }
   if ($191) _free($191);
   STACKTOP = sp;
   return $$044 | 0;
  }
 } while (0);
 if ((label | 0) == 6) {
  $13 = ___cxa_find_matching_catch() | 0;
  $16 = $$ph$ph;
  $lpad$phi$index = $13;
  $lpad$phi$index3 = tempRet0;
 }
 if ($16) _free($16);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $__e, $__kb, $__ke, $__ct, $__err, $__case_sensitive) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__kb = $__kb | 0;
 $__ke = $__ke | 0;
 $__ct = $__ct | 0;
 $__err = $__err | 0;
 $__case_sensitive = $__case_sensitive | 0;
 var $$0$i$i = 0, $$040 = 0, $$085 = 0, $$lcssa = 0, $$lcssa117 = 0, $$ph$ph = 0, $$pre$i2$i$i16 = 0, $$pre$i2$i$i16$lcssa = 0, $100 = 0, $101 = 0, $105 = 0, $106 = 0, $109 = 0, $11 = 0, $117 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $133 = 0, $140 = 0, $148 = 0, $150 = 0, $16 = 0, $162 = 0, $163 = 0, $166 = 0, $167 = 0, $176 = 0, $177 = 0, $191 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $30 = 0, $36 = 0, $46 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $62 = 0, $63 = 0, $66 = 0, $69 = 0, $7 = 0, $71 = 0, $78 = 0, $79 = 0, $83 = 0, $87 = 0, $88 = 0, $9 = 0, $90 = 0, $__c$0 = 0, $__consume$0$off0$lcssa = 0, $__consume$0$off090 = 0, $__consume$1$off0 = 0, $__indx$0 = 0, $__kc$0 = 0, $__ky$0104 = 0, $__ky1$091 = 0, $__ky2$098 = 0, $__n_does_match$0$lcssa = 0, $__n_does_match$0102 = 0, $__n_does_match$1 = 0, $__n_does_match$2 = 0, $__n_does_match$3$lcssa = 0, $__n_does_match$387 = 0, $__n_does_match$4 = 0, $__n_does_match$596 = 0, $__n_does_match$6 = 0, $__n_might_match$0$lcssa = 0, $__n_might_match$0101 = 0, $__n_might_match$1 = 0, $__n_might_match$2 = 0, $__n_might_match$3$lcssa = 0, $__n_might_match$386 = 0, $__n_might_match$4 = 0, $__st$0103 = 0, $__st$188 = 0, $__st$297 = 0, $__st$384 = 0, $__statbuf = 0, $__status$0 = 0, $lpad$phi$index = 0, $lpad$phi$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__statbuf = sp;
 $3 = ($__ke - $__kb | 0) / 12 | 0;
 do if ($3 >>> 0 > 100) {
  $5 = _malloc($3) | 0;
  if (!$5) {
   __THREW__ = 0;
   invoke_v(7);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $$ph$ph = 0;
    label = 6;
    break;
   }
  }
  $191 = $5;
  $__status$0 = $5;
  label = 11;
 } else {
  $191 = 0;
  $__status$0 = $__statbuf;
  label = 11;
 } while (0);
 L6 : do if ((label | 0) == 11) {
  if (($__kb | 0) == ($__ke | 0)) {
   $__n_does_match$0$lcssa = 0;
   $__n_might_match$0$lcssa = $3;
  } else {
   $__ky$0104 = $__kb;
   $__n_does_match$0102 = 0;
   $__n_might_match$0101 = $3;
   $__st$0103 = $__status$0;
   while (1) {
    $22 = HEAP8[$__ky$0104 >> 0] | 0;
    if (!($22 & 1)) $30 = ($22 & 255) >>> 1; else $30 = HEAP32[$__ky$0104 + 4 >> 2] | 0;
    if (!$30) {
     HEAP8[$__st$0103 >> 0] = 2;
     $__n_does_match$1 = $__n_does_match$0102 + 1 | 0;
     $__n_might_match$1 = $__n_might_match$0101 + -1 | 0;
    } else {
     HEAP8[$__st$0103 >> 0] = 1;
     $__n_does_match$1 = $__n_does_match$0102;
     $__n_might_match$1 = $__n_might_match$0101;
    }
    $__ky$0104 = $__ky$0104 + 12 | 0;
    if (($__ky$0104 | 0) == ($__ke | 0)) {
     $__n_does_match$0$lcssa = $__n_does_match$1;
     $__n_might_match$0$lcssa = $__n_might_match$1;
     break;
    } else {
     $__n_does_match$0102 = $__n_does_match$1;
     $__n_might_match$0101 = $__n_might_match$1;
     $__st$0103 = $__st$0103 + 1 | 0;
    }
   }
  }
  $20 = ($__kb | 0) == ($__ke | 0);
  $21 = ($__kb | 0) == ($__ke | 0);
  $__indx$0 = 0;
  $__n_does_match$2 = $__n_does_match$0$lcssa;
  $__n_might_match$2 = $__n_might_match$0$lcssa;
  L20 : while (1) {
   $36 = HEAP32[$__b >> 2] | 0;
   do if (!$36) $51 = 0; else if ((HEAP32[$36 + 12 >> 2] | 0) == (HEAP32[$36 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $46 = invoke_ii(HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] | 0, $36 | 0) | 0;
    $47 = __THREW__;
    __THREW__ = 0;
    if ($47 & 1) {
     label = 5;
     break L20;
    }
    if (($46 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $51 = 0;
     break;
    } else {
     $51 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $51 = $36; while (0);
   $50 = ($51 | 0) == 0;
   $52 = HEAP32[$__e >> 2] | 0;
   if (!$52) $$pre$i2$i$i16 = 0; else if ((HEAP32[$52 + 12 >> 2] | 0) == (HEAP32[$52 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $62 = invoke_ii(HEAP32[(HEAP32[$52 >> 2] | 0) + 36 >> 2] | 0, $52 | 0) | 0;
    $63 = __THREW__;
    __THREW__ = 0;
    if ($63 & 1) {
     label = 5;
     break;
    }
    if (($62 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i2$i$i16 = 0;
    } else $$pre$i2$i$i16 = $52;
   } else $$pre$i2$i$i16 = $52;
   $66 = ($$pre$i2$i$i16 | 0) == 0;
   $69 = HEAP32[$__b >> 2] | 0;
   if (!(($__n_might_match$2 | 0) != 0 & ($50 ^ $66))) {
    $$lcssa = $66;
    $$lcssa117 = $69;
    $$pre$i2$i$i16$lcssa = $$pre$i2$i$i16;
    label = 64;
    break;
   }
   $71 = HEAP32[$69 + 12 >> 2] | 0;
   if (($71 | 0) == (HEAP32[$69 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $78 = invoke_ii(HEAP32[(HEAP32[$69 >> 2] | 0) + 36 >> 2] | 0, $69 | 0) | 0;
    $79 = __THREW__;
    __THREW__ = 0;
    if ($79 & 1) {
     label = 5;
     break;
    } else $$0$i$i = $78;
   } else $$0$i$i = HEAPU8[$71 >> 0] | 0;
   $83 = $$0$i$i & 255;
   if ($__case_sensitive) $__c$0 = $83; else {
    __THREW__ = 0;
    $87 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $83 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 5;
     break;
    } else $__c$0 = $87;
   }
   $90 = $__indx$0 + 1 | 0;
   if ($20) {
    $__consume$0$off0$lcssa = 0;
    $__n_does_match$3$lcssa = $__n_does_match$2;
    $__n_might_match$3$lcssa = $__n_might_match$2;
   } else {
    $__consume$0$off090 = 0;
    $__ky1$091 = $__kb;
    $__n_does_match$387 = $__n_does_match$2;
    $__n_might_match$386 = $__n_might_match$2;
    $__st$188 = $__status$0;
    while (1) {
     do if ((HEAP8[$__st$188 >> 0] | 0) == 1) {
      if (!(HEAP8[$__ky1$091 >> 0] & 1)) $100 = $__ky1$091 + 1 | 0; else $100 = HEAP32[$__ky1$091 + 8 >> 2] | 0;
      $101 = HEAP8[$100 + $__indx$0 >> 0] | 0;
      if ($__case_sensitive) $__kc$0 = $101; else {
       __THREW__ = 0;
       $105 = invoke_iii(HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] | 0, $__ct | 0, $101 | 0) | 0;
       $106 = __THREW__;
       __THREW__ = 0;
       if ($106 & 1) {
        label = 4;
        break L20;
       } else $__kc$0 = $105;
      }
      if ($__c$0 << 24 >> 24 != $__kc$0 << 24 >> 24) {
       HEAP8[$__st$188 >> 0] = 0;
       $__consume$1$off0 = $__consume$0$off090;
       $__n_does_match$4 = $__n_does_match$387;
       $__n_might_match$4 = $__n_might_match$386 + -1 | 0;
       break;
      }
      $109 = HEAP8[$__ky1$091 >> 0] | 0;
      if (!($109 & 1)) $117 = ($109 & 255) >>> 1; else $117 = HEAP32[$__ky1$091 + 4 >> 2] | 0;
      if (($117 | 0) == ($90 | 0)) {
       HEAP8[$__st$188 >> 0] = 2;
       $__consume$1$off0 = 1;
       $__n_does_match$4 = $__n_does_match$387 + 1 | 0;
       $__n_might_match$4 = $__n_might_match$386 + -1 | 0;
      } else {
       $__consume$1$off0 = 1;
       $__n_does_match$4 = $__n_does_match$387;
       $__n_might_match$4 = $__n_might_match$386;
      }
     } else {
      $__consume$1$off0 = $__consume$0$off090;
      $__n_does_match$4 = $__n_does_match$387;
      $__n_might_match$4 = $__n_might_match$386;
     } while (0);
     $__ky1$091 = $__ky1$091 + 12 | 0;
     if (($__ky1$091 | 0) == ($__ke | 0)) {
      $__consume$0$off0$lcssa = $__consume$1$off0;
      $__n_does_match$3$lcssa = $__n_does_match$4;
      $__n_might_match$3$lcssa = $__n_might_match$4;
      break;
     } else {
      $__consume$0$off090 = $__consume$1$off0;
      $__n_does_match$387 = $__n_does_match$4;
      $__n_might_match$386 = $__n_might_match$4;
      $__st$188 = $__st$188 + 1 | 0;
     }
    }
   }
   if (!$__consume$0$off0$lcssa) {
    $__indx$0 = $90;
    $__n_does_match$2 = $__n_does_match$3$lcssa;
    $__n_might_match$2 = $__n_might_match$3$lcssa;
    continue;
   }
   $124 = HEAP32[$__b >> 2] | 0;
   $125 = $124 + 12 | 0;
   $126 = HEAP32[$125 >> 2] | 0;
   if (($126 | 0) == (HEAP32[$124 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$124 >> 2] | 0) + 40 >> 2] | 0, $124 | 0) | 0;
    $133 = __THREW__;
    __THREW__ = 0;
    if ($133 & 1) {
     label = 5;
     break;
    }
   } else HEAP32[$125 >> 2] = $126 + 1;
   if (($__n_does_match$3$lcssa + $__n_might_match$3$lcssa | 0) >>> 0 < 2 | $21) {
    $__indx$0 = $90;
    $__n_does_match$2 = $__n_does_match$3$lcssa;
    $__n_might_match$2 = $__n_might_match$3$lcssa;
    continue;
   } else {
    $__ky2$098 = $__kb;
    $__n_does_match$596 = $__n_does_match$3$lcssa;
    $__st$297 = $__status$0;
   }
   while (1) {
    if ((HEAP8[$__st$297 >> 0] | 0) == 2) {
     $140 = HEAP8[$__ky2$098 >> 0] | 0;
     if (!($140 & 1)) $148 = ($140 & 255) >>> 1; else $148 = HEAP32[$__ky2$098 + 4 >> 2] | 0;
     if (($148 | 0) == ($90 | 0)) $__n_does_match$6 = $__n_does_match$596; else {
      HEAP8[$__st$297 >> 0] = 0;
      $__n_does_match$6 = $__n_does_match$596 + -1 | 0;
     }
    } else $__n_does_match$6 = $__n_does_match$596;
    $150 = $__ky2$098 + 12 | 0;
    if (($150 | 0) == ($__ke | 0)) {
     $__indx$0 = $90;
     $__n_does_match$2 = $__n_does_match$6;
     $__n_might_match$2 = $__n_might_match$3$lcssa;
     continue L20;
    } else {
     $__ky2$098 = $150;
     $__n_does_match$596 = $__n_does_match$6;
     $__st$297 = $__st$297 + 1 | 0;
    }
   }
  }
  if ((label | 0) == 4) {
   $9 = ___cxa_find_matching_catch() | 0;
   $16 = $191;
   $lpad$phi$index = $9;
   $lpad$phi$index3 = tempRet0;
   break;
  } else if ((label | 0) == 5) {
   $11 = ___cxa_find_matching_catch() | 0;
   $16 = $191;
   $lpad$phi$index = $11;
   $lpad$phi$index3 = tempRet0;
   break;
  } else if ((label | 0) == 64) {
   do if (!$$lcssa117) $167 = 0; else if ((HEAP32[$$lcssa117 + 12 >> 2] | 0) == (HEAP32[$$lcssa117 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $162 = invoke_ii(HEAP32[(HEAP32[$$lcssa117 >> 2] | 0) + 36 >> 2] | 0, $$lcssa117 | 0) | 0;
    $163 = __THREW__;
    __THREW__ = 0;
    if ($163 & 1) {
     $$ph$ph = $191;
     label = 6;
     break L6;
    }
    if (($162 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $167 = 0;
     break;
    } else {
     $167 = HEAP32[$__b >> 2] | 0;
     break;
    }
   } else $167 = $$lcssa117; while (0);
   $166 = ($167 | 0) == 0;
   do if ($$lcssa) label = 76; else {
    if ((HEAP32[$$pre$i2$i$i16$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i16$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $176 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i16$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i16$lcssa | 0) | 0;
     $177 = __THREW__;
     __THREW__ = 0;
     if ($177 & 1) {
      $$ph$ph = $191;
      label = 6;
      break L6;
     }
     if (($176 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 76;
      break;
     }
    }
    if (!$166) label = 77;
   } while (0);
   if ((label | 0) == 76) if ($166) label = 77;
   if ((label | 0) == 77) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   L105 : do if (($__kb | 0) == ($__ke | 0)) label = 81; else {
    $$085 = $__kb;
    $__st$384 = $__status$0;
    while (1) {
     if ((HEAP8[$__st$384 >> 0] | 0) == 2) {
      $$040 = $$085;
      break L105;
     }
     $$085 = $$085 + 12 | 0;
     if (($$085 | 0) == ($__ke | 0)) {
      label = 81;
      break;
     } else $__st$384 = $__st$384 + 1 | 0;
    }
   } while (0);
   if ((label | 0) == 81) {
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
    $$040 = $__ke;
   }
   if ($191) _free($191);
   STACKTOP = sp;
   return $$040 | 0;
  }
 } while (0);
 if ((label | 0) == 6) {
  $13 = ___cxa_find_matching_catch() | 0;
  $16 = $$ph$ph;
  $lpad$phi$index = $13;
  $lpad$phi$index3 = tempRet0;
 }
 if ($16) _free($16);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function ___intscan($f, $base, $pok, $0, $1) {
 $f = $f | 0;
 $base = $base | 0;
 $pok = $pok | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$122 = 0, $$123 = 0, $$base21 = 0, $$lcssa = 0, $$lcssa130 = 0, $$lcssa131 = 0, $$lcssa132 = 0, $$lcssa133 = 0, $$lcssa134 = 0, $$lcssa135 = 0, $100 = 0, $101 = 0, $108 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $135 = 0, $136 = 0, $144 = 0, $149 = 0, $150 = 0, $152 = 0, $155 = 0, $157 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $185 = 0, $186 = 0, $187 = 0, $195 = 0, $201 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $222 = 0, $223 = 0, $224 = 0, $239 = 0, $25 = 0, $260 = 0, $262 = 0, $272 = 0, $281 = 0, $284 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $51 = 0, $6 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $91 = 0, $93 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$124 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$371 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$753 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $neg$1 = 0, $x$082 = 0, $x$146 = 0, $x$266 = 0, label = 0;
 L1 : do if ($base >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $286 = 0;
  $287 = 0;
 } else {
  $3 = $f + 4 | 0;
  $4 = $f + 100 | 0;
  do {
   $6 = HEAP32[$3 >> 2] | 0;
   if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $6 + 1;
    $13 = HEAPU8[$6 >> 0] | 0;
   } else $13 = ___shgetc($f) | 0;
  } while ((_isspace($13) | 0) != 0);
  $$lcssa135 = $13;
  L11 : do switch ($$lcssa135 | 0) {
  case 43:
  case 45:
   {
    $17 = (($$lcssa135 | 0) == 45) << 31 >> 31;
    $18 = HEAP32[$3 >> 2] | 0;
    if ($18 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $18 + 1;
     $c$0 = HEAPU8[$18 >> 0] | 0;
     $neg$0 = $17;
     break L11;
    } else {
     $c$0 = ___shgetc($f) | 0;
     $neg$0 = $17;
     break L11;
    }
    break;
   }
  default:
   {
    $c$0 = $$lcssa135;
    $neg$0 = 0;
   }
  } while (0);
  $25 = ($base | 0) == 0;
  do if (($base & -17 | 0) == 0 & ($c$0 | 0) == 48) {
   $29 = HEAP32[$3 >> 2] | 0;
   if ($29 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $29 + 1;
    $37 = HEAPU8[$29 >> 0] | 0;
   } else $37 = ___shgetc($f) | 0;
   if (($37 | 32 | 0) != 120) if ($25) {
    $$123 = 8;
    $c$124 = $37;
    label = 46;
    break;
   } else {
    $$1 = $base;
    $c$1 = $37;
    label = 32;
    break;
   }
   $39 = HEAP32[$3 >> 2] | 0;
   if ($39 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $39 + 1;
    $46 = HEAPU8[$39 >> 0] | 0;
   } else $46 = ___shgetc($f) | 0;
   if ((HEAPU8[57876 + ($46 + 1) >> 0] | 0) > 15) {
    $51 = (HEAP32[$4 >> 2] | 0) == 0;
    if (!$51) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    if (!$pok) {
     ___shlim($f, 0);
     $286 = 0;
     $287 = 0;
     break L1;
    }
    if ($51) {
     $286 = 0;
     $287 = 0;
     break L1;
    }
    HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    $286 = 0;
    $287 = 0;
    break L1;
   } else {
    $$123 = 16;
    $c$124 = $46;
    label = 46;
   }
  } else {
   $$base21 = $25 ? 10 : $base;
   if ((HEAPU8[57876 + ($c$0 + 1) >> 0] | 0) >>> 0 < $$base21 >>> 0) {
    $$1 = $$base21;
    $c$1 = $c$0;
    label = 32;
   } else {
    if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    ___shlim($f, 0);
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    $286 = 0;
    $287 = 0;
    break L1;
   }
  } while (0);
  if ((label | 0) == 32) if (($$1 | 0) == 10) {
   $67 = $c$1 + -48 | 0;
   if ($67 >>> 0 < 10) {
    $71 = $67;
    $x$082 = 0;
    while (1) {
     $70 = ($x$082 * 10 | 0) + $71 | 0;
     $72 = HEAP32[$3 >> 2] | 0;
     if ($72 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $72 + 1;
      $c$2$be = HEAPU8[$72 >> 0] | 0;
     } else $c$2$be = ___shgetc($f) | 0;
     $71 = $c$2$be + -48 | 0;
     if (!($71 >>> 0 < 10 & $70 >>> 0 < 429496729)) {
      $$lcssa134 = $70;
      $c$2$be$lcssa = $c$2$be;
      break;
     } else $x$082 = $70;
    }
    $288 = $$lcssa134;
    $289 = 0;
    $c$2$lcssa = $c$2$be$lcssa;
   } else {
    $288 = 0;
    $289 = 0;
    $c$2$lcssa = $c$1;
   }
   $83 = $c$2$lcssa + -48 | 0;
   if ($83 >>> 0 < 10) {
    $85 = $288;
    $86 = $289;
    $90 = $83;
    $c$371 = $c$2$lcssa;
    while (1) {
     $87 = ___muldi3($85 | 0, $86 | 0, 10, 0) | 0;
     $88 = tempRet0;
     $91 = (($90 | 0) < 0) << 31 >> 31;
     $93 = ~$91;
     if ($88 >>> 0 > $93 >>> 0 | ($88 | 0) == ($93 | 0) & $87 >>> 0 > ~$90 >>> 0) {
      $$lcssa = $90;
      $290 = $85;
      $291 = $86;
      $c$3$lcssa = $c$371;
      break;
     }
     $99 = _i64Add($87 | 0, $88 | 0, $90 | 0, $91 | 0) | 0;
     $100 = tempRet0;
     $101 = HEAP32[$3 >> 2] | 0;
     if ($101 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $101 + 1;
      $c$3$be = HEAPU8[$101 >> 0] | 0;
     } else $c$3$be = ___shgetc($f) | 0;
     $108 = $c$3$be + -48 | 0;
     if ($108 >>> 0 < 10 & ($100 >>> 0 < 429496729 | ($100 | 0) == 429496729 & $99 >>> 0 < 2576980378)) {
      $85 = $99;
      $86 = $100;
      $90 = $108;
      $c$371 = $c$3$be;
     } else {
      $$lcssa = $108;
      $290 = $99;
      $291 = $100;
      $c$3$lcssa = $c$3$be;
      break;
     }
    }
    if ($$lcssa >>> 0 > 9) {
     $260 = $291;
     $262 = $290;
     $neg$1 = $neg$0;
    } else {
     $$122 = 10;
     $292 = $290;
     $293 = $291;
     $c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $260 = $289;
    $262 = $288;
    $neg$1 = $neg$0;
   }
  } else {
   $$123 = $$1;
   $c$124 = $c$1;
   label = 46;
  }
  L63 : do if ((label | 0) == 46) {
   if (!($$123 + -1 & $$123)) {
    $128 = HEAP8[58133 + (($$123 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    $130 = HEAP8[57876 + ($c$124 + 1) >> 0] | 0;
    $131 = $130 & 255;
    if ($131 >>> 0 < $$123 >>> 0) {
     $135 = $131;
     $x$146 = 0;
     while (1) {
      $134 = $135 | $x$146 << $128;
      $136 = HEAP32[$3 >> 2] | 0;
      if ($136 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $136 + 1;
       $c$4$be = HEAPU8[$136 >> 0] | 0;
      } else $c$4$be = ___shgetc($f) | 0;
      $144 = HEAP8[57876 + ($c$4$be + 1) >> 0] | 0;
      $135 = $144 & 255;
      if (!($134 >>> 0 < 134217728 & $135 >>> 0 < $$123 >>> 0)) {
       $$lcssa130 = $134;
       $$lcssa131 = $144;
       $c$4$be$lcssa = $c$4$be;
       break;
      } else $x$146 = $134;
     }
     $152 = $$lcssa131;
     $155 = 0;
     $157 = $$lcssa130;
     $c$4$lcssa = $c$4$be$lcssa;
    } else {
     $152 = $130;
     $155 = 0;
     $157 = 0;
     $c$4$lcssa = $c$124;
    }
    $149 = _bitshift64Lshr(-1, -1, $128 | 0) | 0;
    $150 = tempRet0;
    if (($152 & 255) >>> 0 >= $$123 >>> 0 | ($155 >>> 0 > $150 >>> 0 | ($155 | 0) == ($150 | 0) & $157 >>> 0 > $149 >>> 0)) {
     $$122 = $$123;
     $292 = $157;
     $293 = $155;
     $c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $161 = $157;
     $162 = $155;
     $166 = $152;
    }
    while (1) {
     $163 = _bitshift64Shl($161 | 0, $162 | 0, $128 | 0) | 0;
     $164 = tempRet0;
     $167 = $166 & 255 | $163;
     $168 = HEAP32[$3 >> 2] | 0;
     if ($168 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $168 + 1;
      $c$5$be = HEAPU8[$168 >> 0] | 0;
     } else $c$5$be = ___shgetc($f) | 0;
     $166 = HEAP8[57876 + ($c$5$be + 1) >> 0] | 0;
     if (($166 & 255) >>> 0 >= $$123 >>> 0 | ($164 >>> 0 > $150 >>> 0 | ($164 | 0) == ($150 | 0) & $167 >>> 0 > $149 >>> 0)) {
      $$122 = $$123;
      $292 = $167;
      $293 = $164;
      $c$8 = $c$5$be;
      label = 72;
      break L63;
     } else {
      $161 = $167;
      $162 = $164;
     }
    }
   }
   $120 = HEAP8[57876 + ($c$124 + 1) >> 0] | 0;
   $121 = $120 & 255;
   if ($121 >>> 0 < $$123 >>> 0) {
    $186 = $121;
    $x$266 = 0;
    while (1) {
     $185 = $186 + (Math_imul($x$266, $$123) | 0) | 0;
     $187 = HEAP32[$3 >> 2] | 0;
     if ($187 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $187 + 1;
      $c$6$be = HEAPU8[$187 >> 0] | 0;
     } else $c$6$be = ___shgetc($f) | 0;
     $195 = HEAP8[57876 + ($c$6$be + 1) >> 0] | 0;
     $186 = $195 & 255;
     if (!($185 >>> 0 < 119304647 & $186 >>> 0 < $$123 >>> 0)) {
      $$lcssa132 = $185;
      $$lcssa133 = $195;
      $c$6$be$lcssa = $c$6$be;
      break;
     } else $x$266 = $185;
    }
    $201 = $$lcssa133;
    $294 = $$lcssa132;
    $295 = 0;
    $c$6$lcssa = $c$6$be$lcssa;
   } else {
    $201 = $120;
    $294 = 0;
    $295 = 0;
    $c$6$lcssa = $c$124;
   }
   if (($201 & 255) >>> 0 < $$123 >>> 0) {
    $203 = ___udivdi3(-1, -1, $$123 | 0, 0) | 0;
    $204 = tempRet0;
    $206 = $295;
    $208 = $294;
    $215 = $201;
    $c$753 = $c$6$lcssa;
    while (1) {
     if ($206 >>> 0 > $204 >>> 0 | ($206 | 0) == ($204 | 0) & $208 >>> 0 > $203 >>> 0) {
      $$122 = $$123;
      $292 = $208;
      $293 = $206;
      $c$8 = $c$753;
      label = 72;
      break L63;
     }
     $212 = ___muldi3($208 | 0, $206 | 0, $$123 | 0, 0) | 0;
     $213 = tempRet0;
     $214 = $215 & 255;
     if ($213 >>> 0 > 4294967295 | ($213 | 0) == -1 & $212 >>> 0 > ~$214 >>> 0) {
      $$122 = $$123;
      $292 = $208;
      $293 = $206;
      $c$8 = $c$753;
      label = 72;
      break L63;
     }
     $222 = _i64Add($214 | 0, 0, $212 | 0, $213 | 0) | 0;
     $223 = tempRet0;
     $224 = HEAP32[$3 >> 2] | 0;
     if ($224 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $224 + 1;
      $c$7$be = HEAPU8[$224 >> 0] | 0;
     } else $c$7$be = ___shgetc($f) | 0;
     $215 = HEAP8[57876 + ($c$7$be + 1) >> 0] | 0;
     if (($215 & 255) >>> 0 >= $$123 >>> 0) {
      $$122 = $$123;
      $292 = $222;
      $293 = $223;
      $c$8 = $c$7$be;
      label = 72;
      break;
     } else {
      $206 = $223;
      $208 = $222;
      $c$753 = $c$7$be;
     }
    }
   } else {
    $$122 = $$123;
    $292 = $294;
    $293 = $295;
    $c$8 = $c$6$lcssa;
    label = 72;
   }
  } while (0);
  if ((label | 0) == 72) if ((HEAPU8[57876 + ($c$8 + 1) >> 0] | 0) >>> 0 < $$122 >>> 0) {
   do {
    $239 = HEAP32[$3 >> 2] | 0;
    if ($239 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $239 + 1;
     $c$9$be = HEAPU8[$239 >> 0] | 0;
    } else $c$9$be = ___shgetc($f) | 0;
   } while ((HEAPU8[57876 + ($c$9$be + 1) >> 0] | 0) >>> 0 < $$122 >>> 0);
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $260 = $1;
   $262 = $0;
   $neg$1 = ($0 & 1 | 0) == 0 & 0 == 0 ? $neg$0 : 0;
  } else {
   $260 = $293;
   $262 = $292;
   $neg$1 = $neg$0;
  }
  if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
  if (!($260 >>> 0 < $1 >>> 0 | ($260 | 0) == ($1 | 0) & $262 >>> 0 < $0 >>> 0)) {
   if (!(($0 & 1 | 0) != 0 | 0 != 0 | ($neg$1 | 0) != 0)) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $272 = _i64Add($0 | 0, $1 | 0, -1, -1) | 0;
    $286 = tempRet0;
    $287 = $272;
    break;
   }
   if ($260 >>> 0 > $1 >>> 0 | ($260 | 0) == ($1 | 0) & $262 >>> 0 > $0 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $286 = $1;
    $287 = $0;
    break;
   }
  }
  $281 = (($neg$1 | 0) < 0) << 31 >> 31;
  $284 = _i64Subtract($262 ^ $neg$1 | 0, $260 ^ $281 | 0, $neg$1 | 0, $281 | 0) | 0;
  $286 = tempRet0;
  $287 = $284;
 } while (0);
 tempRet0 = $286;
 return $287 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $103 = 0, $107 = 0, $11 = 0, $110 = 0, $112 = 0, $115 = 0, $116 = 0, $12 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $44 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $57 = 0, $6 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 48 | 0;
 $$byval_copy26 = sp + 76 | 0;
 $1 = sp + 92 | 0;
 $2 = sp + 108 | 0;
 $3 = sp + 124 | 0;
 $4 = sp + 8 | 0;
 $5 = sp + 12 | 0;
 $6 = sp + 80 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 20 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 28 | 0;
 $11 = sp + 96 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 112 | 0;
 $14 = sp + 120 | 0;
 $15 = sp + 128 | 0;
 $16 = sp + 132 | 0;
 $17 = sp + 52 | 0;
 $18 = sp + 56 | 0;
 $19 = sp + 60 | 0;
 $20 = sp + 64 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 72 | 0;
 $23 = sp + 4 | 0;
 $24 = sp;
 $25 = sp + 88 | 0;
 $26 = sp + 84 | 0;
 $27 = sp + 32 | 0;
 $28 = sp + 36 | 0;
 $29 = sp + 100 | 0;
 $30 = sp + 40 | 0;
 $31 = sp + 116 | 0;
 $32 = sp + 44 | 0;
 HEAP32[$__err >> 2] = 0;
 $33 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$1 >> 2] = $33;
 __THREW__ = 0;
 $34 = invoke_iii(22, $1 | 0, 11156) | 0;
 $35 = __THREW__;
 __THREW__ = 0;
 if ($35 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($33) | 0;
  ___resumeException($38 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv($33) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$2 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$3 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 99:
  {
   $44 = $this + 8 | 0;
   $48 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 12 >> 2] & 127]($44) | 0;
   HEAP32[$4 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
   $51 = HEAP8[$48 >> 0] | 0;
   $53 = ($51 & 1) == 0;
   $56 = $48 + 4 | 0;
   $57 = $53 ? $56 : HEAP32[$48 + 8 >> 2] | 0;
   $62 = $57 + (($53 ? ($51 & 255) >>> 1 : HEAP32[$56 >> 2] | 0) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $57, $62) | 0;
   label = 28;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$6 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 68:
  {
   HEAP32[$7 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$8 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 11764, 11796) | 0;
   label = 28;
   break;
  }
 case 70:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 11796, 11828) | 0;
   label = 28;
   break;
  }
 case 72:
  {
   HEAP32[$11 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 73:
  {
   HEAP32[$12 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 106:
  {
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$13 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 109:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 77:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$15 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 112:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 114:
  {
   HEAP32[$18 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 11828, 11872) | 0;
   label = 28;
   break;
  }
 case 82:
  {
   HEAP32[$20 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$21 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 11872, 11892) | 0;
   label = 28;
   break;
  }
 case 83:
  {
   HEAP32[$22 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 84:
  {
   HEAP32[$23 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$24 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 11892, 11924) | 0;
   label = 28;
   break;
  }
 case 119:
  {
   HEAP32[$25 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 120:
  {
   $99 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$26 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $$sroa$07$0 = FUNCTION_TABLE_iiiiiii[$99 & 63]($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm) | 0;
   break;
  }
 case 88:
  {
   $103 = $this + 8 | 0;
   $107 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$103 >> 2] | 0) + 24 >> 2] & 127]($103) | 0;
   HEAP32[$28 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$29 >> 2] = HEAP32[$__e >> 2];
   $110 = HEAP8[$107 >> 0] | 0;
   $112 = ($110 & 1) == 0;
   $115 = $107 + 4 | 0;
   $116 = $112 ? $115 : HEAP32[$107 + 8 >> 2] | 0;
   $121 = $116 + (($112 ? ($110 & 255) >>> 1 : HEAP32[$115 >> 2] | 0) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $116, $121) | 0;
   label = 28;
   break;
  }
 case 121:
  {
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 89:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 37:
  {
   HEAP32[$32 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$32 >> 2];
   __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 28;
  }
 } while (0);
 if ((label | 0) == 28) $$sroa$07$0 = HEAP32[$__b >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$07$0 | 0;
}

function __ZNSt3__16locale5__impC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$lcssa = 0, $$pre$i$i$i = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $85 = 0, $87 = 0, $9 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 11140;
 $2 = $this + 8 | 0;
 __THREW__ = 0;
 invoke_vii(75, $2 | 0, 28);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $83 = ___cxa_find_matching_catch() | 0;
  $$1 = tempRet0;
  $$12 = $83;
 } else {
  $5 = $this + 144 | 0;
  __THREW__ = 0;
  invoke_viii(3, $5 | 0, 62835, 1);
  $6 = __THREW__;
  __THREW__ = 0;
  if ($6 & 1) {
   $85 = ___cxa_find_matching_catch() | 0;
   $$0 = tempRet0;
   $$01 = $85;
  } else {
   $8 = HEAP32[$2 >> 2] | 0;
   $9 = $this + 12 | 0;
   $$pre$i$i$i = HEAP32[$9 >> 2] | 0;
   if (($$pre$i$i$i | 0) != ($8 | 0)) {
    $12 = $$pre$i$i$i;
    while (1) {
     $11 = $12 + -4 | 0;
     if (($11 | 0) == ($8 | 0)) {
      $$lcssa = $11;
      break;
     } else $12 = $11;
    }
    HEAP32[$9 >> 2] = $$lcssa;
   }
   HEAP32[495] = 0;
   HEAP32[494] = 10068;
   __THREW__ = 0;
   invoke_vii(76, $this | 0, 1976);
   $14 = __THREW__;
   __THREW__ = 0;
   do if ($14 & 1) label = 42; else {
    HEAP32[497] = 0;
    HEAP32[496] = 10108;
    __THREW__ = 0;
    invoke_vii(77, $this | 0, 1984);
    $16 = __THREW__;
    __THREW__ = 0;
    if ($16 & 1) label = 42; else {
     HEAP32[499] = 0;
     HEAP32[498] = 11180;
     HEAP32[500] = 0;
     HEAP8[2004] = 0;
     HEAP32[500] = __ZNSt3__15ctypeIcE13classic_tableEv() | 0;
     __THREW__ = 0;
     invoke_vii(78, $this | 0, 1992);
     $19 = __THREW__;
     __THREW__ = 0;
     if ($19 & 1) label = 42; else {
      HEAP32[503] = 0;
      HEAP32[502] = 11428;
      __THREW__ = 0;
      invoke_vii(79, $this | 0, 2008);
      $21 = __THREW__;
      __THREW__ = 0;
      if ($21 & 1) label = 42; else {
       HEAP32[505] = 0;
       HEAP32[504] = 11496;
       __THREW__ = 0;
       invoke_vii(80, $this | 0, 2016);
       $23 = __THREW__;
       __THREW__ = 0;
       if ($23 & 1) label = 42; else {
        __THREW__ = 0;
        invoke_vii(81, 2024, 1);
        $25 = __THREW__;
        __THREW__ = 0;
        if ($25 & 1) label = 42; else {
         __THREW__ = 0;
         invoke_vii(82, $this | 0, 2024);
         $27 = __THREW__;
         __THREW__ = 0;
         if ($27 & 1) label = 42; else {
          HEAP32[511] = 0;
          HEAP32[510] = 11544;
          __THREW__ = 0;
          invoke_vii(83, $this | 0, 2040);
          $29 = __THREW__;
          __THREW__ = 0;
          if ($29 & 1) label = 42; else {
           HEAP32[513] = 0;
           HEAP32[512] = 11592;
           __THREW__ = 0;
           invoke_vii(84, $this | 0, 2048);
           $31 = __THREW__;
           __THREW__ = 0;
           if ($31 & 1) label = 42; else {
            __ZNSt3__18numpunctIcEC2Ej(2056, 1);
            __THREW__ = 0;
            invoke_vii(85, $this | 0, 2056);
            $33 = __THREW__;
            __THREW__ = 0;
            if ($33 & 1) label = 42; else {
             __ZNSt3__18numpunctIwEC2Ej(2080, 1);
             __THREW__ = 0;
             invoke_vii(86, $this | 0, 2080);
             $35 = __THREW__;
             __THREW__ = 0;
             if ($35 & 1) label = 42; else {
              HEAP32[529] = 0;
              HEAP32[528] = 10148;
              __THREW__ = 0;
              invoke_vii(87, $this | 0, 2112);
              $37 = __THREW__;
              __THREW__ = 0;
              if ($37 & 1) label = 42; else {
               HEAP32[531] = 0;
               HEAP32[530] = 10220;
               __THREW__ = 0;
               invoke_vii(88, $this | 0, 2120);
               $39 = __THREW__;
               __THREW__ = 0;
               if ($39 & 1) label = 42; else {
                HEAP32[533] = 0;
                HEAP32[532] = 10292;
                __THREW__ = 0;
                invoke_vii(89, $this | 0, 2128);
                $41 = __THREW__;
                __THREW__ = 0;
                if ($41 & 1) label = 42; else {
                 HEAP32[535] = 0;
                 HEAP32[534] = 10352;
                 __THREW__ = 0;
                 invoke_vii(90, $this | 0, 2136);
                 $43 = __THREW__;
                 __THREW__ = 0;
                 if ($43 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[537] = 0;
                 HEAP32[536] = 10660;
                 __THREW__ = 0;
                 invoke_vii(91, $this | 0, 2144);
                 $45 = __THREW__;
                 __THREW__ = 0;
                 if ($45 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[539] = 0;
                 HEAP32[538] = 10724;
                 __THREW__ = 0;
                 invoke_vii(92, $this | 0, 2152);
                 $47 = __THREW__;
                 __THREW__ = 0;
                 if ($47 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[541] = 0;
                 HEAP32[540] = 10788;
                 __THREW__ = 0;
                 invoke_vii(93, $this | 0, 2160);
                 $49 = __THREW__;
                 __THREW__ = 0;
                 if ($49 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[543] = 0;
                 HEAP32[542] = 10852;
                 __THREW__ = 0;
                 invoke_vii(94, $this | 0, 2168);
                 $51 = __THREW__;
                 __THREW__ = 0;
                 if ($51 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[545] = 0;
                 HEAP32[544] = 10916;
                 __THREW__ = 0;
                 invoke_vii(95, $this | 0, 2176);
                 $53 = __THREW__;
                 __THREW__ = 0;
                 if ($53 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[547] = 0;
                 HEAP32[546] = 10952;
                 __THREW__ = 0;
                 invoke_vii(96, $this | 0, 2184);
                 $55 = __THREW__;
                 __THREW__ = 0;
                 if ($55 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[549] = 0;
                 HEAP32[548] = 10988;
                 __THREW__ = 0;
                 invoke_vii(97, $this | 0, 2192);
                 $57 = __THREW__;
                 __THREW__ = 0;
                 if ($57 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[551] = 0;
                 HEAP32[550] = 11024;
                 __THREW__ = 0;
                 invoke_vii(98, $this | 0, 2200);
                 $59 = __THREW__;
                 __THREW__ = 0;
                 if ($59 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[553] = 0;
                 HEAP32[552] = 10412;
                 HEAP32[554] = 10460;
                 __THREW__ = 0;
                 invoke_vii(99, $this | 0, 2208);
                 $61 = __THREW__;
                 __THREW__ = 0;
                 if ($61 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[557] = 0;
                 HEAP32[556] = 10504;
                 HEAP32[558] = 10552;
                 __THREW__ = 0;
                 invoke_vii(100, $this | 0, 2224);
                 $63 = __THREW__;
                 __THREW__ = 0;
                 if ($63 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[561] = 0;
                 HEAP32[560] = 11408;
                 __THREW__ = 0;
                 $65 = invoke_i(2) | 0;
                 $66 = __THREW__;
                 __THREW__ = 0;
                 if ($66 & 1) {
                  $68 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body$index3Z2D = tempRet0;
                  $eh$lpad$body$indexZ2D = $68;
                  break;
                 }
                 HEAP32[562] = $65;
                 HEAP32[560] = 10596;
                 __THREW__ = 0;
                 invoke_vii(101, $this | 0, 2240);
                 $70 = __THREW__;
                 __THREW__ = 0;
                 if ($70 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[565] = 0;
                 HEAP32[564] = 11408;
                 __THREW__ = 0;
                 $72 = invoke_i(2) | 0;
                 $73 = __THREW__;
                 __THREW__ = 0;
                 if ($73 & 1) {
                  $75 = ___cxa_find_matching_catch() | 0;
                  $eh$lpad$body$index3Z2D = tempRet0;
                  $eh$lpad$body$indexZ2D = $75;
                  break;
                 }
                 HEAP32[566] = $72;
                 HEAP32[564] = 10628;
                 __THREW__ = 0;
                 invoke_vii(102, $this | 0, 2256);
                 $77 = __THREW__;
                 __THREW__ = 0;
                 if ($77 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[569] = 0;
                 HEAP32[568] = 11060;
                 __THREW__ = 0;
                 invoke_vii(103, $this | 0, 2272);
                 $79 = __THREW__;
                 __THREW__ = 0;
                 if ($79 & 1) {
                  label = 42;
                  break;
                 }
                 HEAP32[571] = 0;
                 HEAP32[570] = 11100;
                 __THREW__ = 0;
                 invoke_vii(104, $this | 0, 2280);
                 $81 = __THREW__;
                 __THREW__ = 0;
                 if ($81 & 1) {
                  label = 42;
                  break;
                 }
                 return;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while (0);
   if ((label | 0) == 42) {
    $87 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index3Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $87;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $$0 = $eh$lpad$body$index3Z2D;
   $$01 = $eh$lpad$body$indexZ2D;
  }
  __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($2);
  $$1 = $$0;
  $$12 = $$01;
 }
 ___resumeException($$12 | 0);
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($this, $__b, $__e, $__iob, $__err, $__tm, $__fmt, $0) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $0 = $0 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$07$0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $108 = 0, $11 = 0, $111 = 0, $113 = 0, $117 = 0, $12 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $44 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $57 = 0, $6 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy30 = sp + 48 | 0;
 $$byval_copy26 = sp + 76 | 0;
 $1 = sp + 92 | 0;
 $2 = sp + 108 | 0;
 $3 = sp + 124 | 0;
 $4 = sp + 8 | 0;
 $5 = sp + 12 | 0;
 $6 = sp + 80 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 20 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 28 | 0;
 $11 = sp + 96 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 112 | 0;
 $14 = sp + 120 | 0;
 $15 = sp + 128 | 0;
 $16 = sp + 132 | 0;
 $17 = sp + 52 | 0;
 $18 = sp + 56 | 0;
 $19 = sp + 60 | 0;
 $20 = sp + 64 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 72 | 0;
 $23 = sp + 4 | 0;
 $24 = sp;
 $25 = sp + 88 | 0;
 $26 = sp + 84 | 0;
 $27 = sp + 32 | 0;
 $28 = sp + 36 | 0;
 $29 = sp + 100 | 0;
 $30 = sp + 40 | 0;
 $31 = sp + 116 | 0;
 $32 = sp + 44 | 0;
 HEAP32[$__err >> 2] = 0;
 $33 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$1 >> 2] = $33;
 __THREW__ = 0;
 $34 = invoke_iii(22, $1 | 0, 11164) | 0;
 $35 = __THREW__;
 __THREW__ = 0;
 if ($35 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($33) | 0;
  ___resumeException($38 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv($33) | 0;
 do switch ($__fmt << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$2 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$2 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$3 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$3 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 99:
  {
   $44 = $this + 8 | 0;
   $48 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 12 >> 2] & 127]($44) | 0;
   HEAP32[$4 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$5 >> 2] = HEAP32[$__e >> 2];
   $51 = HEAP8[$48 >> 0] | 0;
   $53 = ($51 & 1) == 0;
   $57 = $53 ? $48 + 1 | 0 : HEAP32[$48 + 8 >> 2] | 0;
   $63 = $57 + ($53 ? ($51 & 255) >>> 1 : HEAP32[$48 + 4 >> 2] | 0) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $57, $63) | 0;
   label = 28;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$6 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$6 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 12 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 68:
  {
   HEAP32[$7 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$8 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 62865, 62873) | 0;
   label = 28;
   break;
  }
 case 70:
  {
   HEAP32[$9 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$10 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 62873, 62881) | 0;
   label = 28;
   break;
  }
 case 72:
  {
   HEAP32[$11 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 73:
  {
   HEAP32[$12 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 106:
  {
   HEAP32[$13 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$13 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 28 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 109:
  {
   HEAP32[$14 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 77:
  {
   HEAP32[$15 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$15 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 4 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$16 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 112:
  {
   HEAP32[$17 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 8 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 114:
  {
   HEAP32[$18 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$19 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 62881, 62892) | 0;
   label = 28;
   break;
  }
 case 82:
  {
   HEAP32[$20 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$21 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 62892, 62897) | 0;
   label = 28;
   break;
  }
 case 83:
  {
   HEAP32[$22 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 84:
  {
   HEAP32[$23 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$24 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, 62897, 62905) | 0;
   label = 28;
   break;
  }
 case 119:
  {
   HEAP32[$25 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 120:
  {
   $100 = HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$26 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$27 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $$sroa$07$0 = FUNCTION_TABLE_iiiiiii[$100 & 63]($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm) | 0;
   break;
  }
 case 88:
  {
   $104 = $this + 8 | 0;
   $108 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$104 >> 2] | 0) + 24 >> 2] & 127]($104) | 0;
   HEAP32[$28 >> 2] = HEAP32[$__b >> 2];
   HEAP32[$29 >> 2] = HEAP32[$__e >> 2];
   $111 = HEAP8[$108 >> 0] | 0;
   $113 = ($111 & 1) == 0;
   $117 = $113 ? $108 + 1 | 0 : HEAP32[$108 + 8 >> 2] | 0;
   $123 = $117 + ($113 ? ($111 & 255) >>> 1 : HEAP32[$108 + 4 >> 2] | 0) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$__b >> 2] = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy26, $$byval_copy30, $__iob, $__err, $__tm, $117, $123) | 0;
   label = 28;
   break;
  }
 case 121:
  {
   HEAP32[$30 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 89:
  {
   HEAP32[$31 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 case 37:
  {
   HEAP32[$32 >> 2] = HEAP32[$__e >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$32 >> 2];
   __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $$byval_copy30, $__err, $34);
   label = 28;
   break;
  }
 default:
  {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   label = 28;
  }
 } while (0);
 if ((label | 0) == 28) $$sroa$07$0 = HEAP32[$__b >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$07$0 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i9 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i15 = 0, $$01 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i11 = 0, $$pre$i3$i$i = 0, $0 = 0, $104 = 0, $105 = 0, $110 = 0, $116 = 0, $12 = 0, $123 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $133 = 0, $134 = 0, $139 = 0, $146 = 0, $147 = 0, $153 = 0, $160 = 0, $161 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $4 = 0, $41 = 0, $42 = 0, $46 = 0, $49 = 0, $56 = 0, $57 = 0, $6 = 0, $62 = 0, $68 = 0, $7 = 0, $72 = 0, $79 = 0, $80 = 0, $86 = 0, $88 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $98 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 320 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 200 | 0;
 $__grouping = sp + 188 | 0;
 $0 = sp + 8 | 0;
 $__buf = sp + 176 | 0;
 $__a_end = sp + 4 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 304 | 0;
 $__dc = sp + 308 | 0;
 HEAP32[$__grouping >> 2] = 0;
 HEAP32[$__grouping + 4 >> 2] = 0;
 HEAP32[$__grouping + 8 >> 2] = 0;
 __THREW__ = 0;
 $3 = invoke_ii(68, $__iob | 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 do if ($4 & 1) {
  $88 = ___cxa_find_matching_catch() | 0;
  $$0 = $88;
  $$01 = tempRet0;
 } else {
  HEAP32[$0 >> 2] = $3;
  __THREW__ = 0;
  $6 = invoke_iii(22, $0 | 0, 11156) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] | 0, $6 | 0, 61448, 61474, $__atoms | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
    HEAP32[$__buf >> 2] = 0;
    HEAP32[$__buf + 4 >> 2] = 0;
    HEAP32[$__buf + 8 >> 2] = 0;
    if (!(HEAP8[$__buf >> 0] & 1)) $21 = 10; else $21 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $21 | 0, 0);
    $22 = __THREW__;
    __THREW__ = 0;
    L10 : do if ($22 & 1) label = 31; else {
     $27 = $__buf + 8 | 0;
     $29 = $__buf + 1 | 0;
     $30 = (HEAP8[$__buf >> 0] & 1) == 0 ? $29 : HEAP32[$27 >> 2] | 0;
     HEAP32[$__a_end >> 2] = $30;
     HEAP32[$__g_end >> 2] = $__g;
     HEAP32[$__dc >> 2] = 0;
     $31 = $__buf + 4 | 0;
     $$pre$i$i$i11 = HEAP32[$__b >> 2] | 0;
     $__a$0 = $30;
     L12 : while (1) {
      if (!$$pre$i$i$i11) {
       $$pre$i$i$i = 0;
       $168 = 1;
      } else {
       $34 = HEAP32[$$pre$i$i$i11 + 12 >> 2] | 0;
       if (($34 | 0) == (HEAP32[$$pre$i$i$i11 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $41 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i11 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i11 | 0) | 0;
        $42 = __THREW__;
        __THREW__ = 0;
        if ($42 & 1) {
         label = 30;
         break;
        } else $$0$i$i$i$i9 = $41;
       } else $$0$i$i$i$i9 = HEAP32[$34 >> 2] | 0;
       if (($$0$i$i$i$i9 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $$pre$i$i$i = 0;
        $168 = 1;
       } else {
        $$pre$i$i$i = $$pre$i$i$i11;
        $168 = 0;
       }
      }
      $46 = HEAP32[$__e >> 2] | 0;
      do if (!$46) label = 20; else {
       $49 = HEAP32[$46 + 12 >> 2] | 0;
       if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
        __THREW__ = 0;
        $56 = invoke_ii(HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] | 0, $46 | 0) | 0;
        $57 = __THREW__;
        __THREW__ = 0;
        if ($57 & 1) {
         label = 30;
         break L12;
        } else $$0$i$i1$i$i15 = $56;
       } else $$0$i$i1$i$i15 = HEAP32[$49 >> 2] | 0;
       if (($$0$i$i1$i$i15 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 20;
        break;
       } else if ($168) {
        $169 = $46;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;
        $$pre$i3$i$i = $46;
        $__a$2 = $__a$0;
        break L12;
       }
      } while (0);
      if ((label | 0) == 20) {
       label = 0;
       if ($168) {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;
        $$pre$i3$i$i = 0;
        $__a$2 = $__a$0;
        break;
       } else $169 = 0;
      }
      $62 = HEAP8[$__buf >> 0] | 0;
      $68 = ($62 & 1) == 0 ? ($62 & 255) >>> 1 : HEAP32[$31 >> 2] | 0;
      if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $68 | 0)) {
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $68 << 1 | 0, 0);
       $72 = __THREW__;
       __THREW__ = 0;
       if ($72 & 1) {
        label = 30;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $79 = 10; else $79 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $79 | 0, 0);
       $80 = __THREW__;
       __THREW__ = 0;
       if ($80 & 1) {
        label = 30;
        break;
       }
       $86 = (HEAP8[$__buf >> 0] & 1) == 0 ? $29 : HEAP32[$27 >> 2] | 0;
       HEAP32[$__a_end >> 2] = $86 + $68;
       $__a$1 = $86;
      } else $__a$1 = $__a$0;
      $96 = $$pre$i$i$i + 12 | 0;
      $97 = HEAP32[$96 >> 2] | 0;
      $98 = $$pre$i$i$i + 16 | 0;
      if (($97 | 0) == (HEAP32[$98 >> 2] | 0)) {
       __THREW__ = 0;
       $104 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
       $105 = __THREW__;
       __THREW__ = 0;
       if ($105 & 1) {
        label = 30;
        break;
       } else $$0$i$i = $104;
      } else $$0$i$i = HEAP32[$97 >> 2] | 0;
      if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
       $$pre$i$i$i$lcssa = $$pre$i$i$i;
       $$pre$i3$i$i = $169;
       $__a$2 = $__a$1;
       break;
      }
      $110 = HEAP32[$96 >> 2] | 0;
      if (($110 | 0) == (HEAP32[$98 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
       $116 = __THREW__;
       __THREW__ = 0;
       if ($116 & 1) {
        label = 30;
        break;
       } else {
        $$pre$i$i$i11 = $$pre$i$i$i;
        $__a$0 = $__a$1;
        continue;
       }
      } else {
       HEAP32[$96 >> 2] = $110 + 4;
       $$pre$i$i$i11 = $$pre$i$i$i;
       $__a$0 = $__a$1;
       continue;
      }
     }
     if ((label | 0) == 30) {
      $92 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $92;
      $lpad$phi$index2 = tempRet0;
      break;
     }
     __THREW__ = 0;
     invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
     $123 = __THREW__;
     __THREW__ = 0;
     if ($123 & 1) label = 31; else {
      $125 = HEAP8[$__buf >> 0] | 0;
      $126 = HEAP32[$27 >> 2] | 0;
      __THREW__ = 0;
      $127 = invoke_i(2) | 0;
      $128 = __THREW__;
      __THREW__ = 0;
      if ($128 & 1) label = 31; else {
       __THREW__ = 0;
       HEAP32[$vararg_buffer >> 2] = $__v;
       $133 = invoke_iiiii(10, (($125 & 1) == 0 ? $29 : $126) | 0, $127 | 0, 62832, $vararg_buffer | 0) | 0;
       $134 = __THREW__;
       __THREW__ = 0;
       if ($134 & 1) label = 31; else {
        if (($133 | 0) != 1) HEAP32[$__err >> 2] = 4;
        if (!$$pre$i$i$i$lcssa) $170 = 1; else {
         $139 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
         if (($139 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $146 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
          $147 = __THREW__;
          __THREW__ = 0;
          if ($147 & 1) {
           label = 31;
           break;
          } else $$0$i$i$i$i = $146;
         } else $$0$i$i$i$i = HEAP32[$139 >> 2] | 0;
         if (($$0$i$i$i$i | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $170 = 1;
         } else $170 = 0;
        }
        do if (!$$pre$i3$i$i) label = 57; else {
         $153 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
         if (($153 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $160 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
          $161 = __THREW__;
          __THREW__ = 0;
          if ($161 & 1) {
           label = 31;
           break L10;
          } else $$0$i$i1$i$i = $160;
         } else $$0$i$i1$i$i = HEAP32[$153 >> 2] | 0;
         if (($$0$i$i1$i$i | 0) == -1) {
          HEAP32[$__e >> 2] = 0;
          label = 57;
          break;
         } else if ($170) break; else {
          label = 59;
          break;
         }
        } while (0);
        if ((label | 0) == 57) if ($170) label = 59;
        if ((label | 0) == 59) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
        $167 = HEAP32[$__b >> 2] | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
        STACKTOP = sp;
        return $167 | 0;
       }
      }
     }
    } while (0);
    if ((label | 0) == 31) {
     $94 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $94;
     $lpad$phi$index2 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    $$0 = $lpad$phi$index;
    $$01 = $lpad$phi$index2;
    break;
   }
  }
  $90 = ___cxa_find_matching_catch() | 0;
  $91 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
  $$0 = $90;
  $$01 = $91;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0 | 0);
 return 0;
}

function __ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i50 = 0, $$01$i$i645 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $107 = 0, $108 = 0, $110 = 0, $111 = 0, $119 = 0, $123 = 0, $125 = 0, $13 = 0, $139 = 0, $140 = 0, $142 = 0, $15 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $158 = 0, $162 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $171 = 0, $176 = 0, $177 = 0, $179 = 0, $180 = 0, $181 = 0, $186 = 0, $187 = 0, $19 = 0, $192 = 0, $198 = 0, $21 = 0, $23 = 0, $25 = 0, $32 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $69 = 0, $70 = 0, $73 = 0, $75 = 0, $78 = 0, $88 = 0, $9 = 0, $94 = 0, $96 = 0, $98 = 0, $__dc$047 = 0, $__dc$1 = 0, $__dg$048 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$243 = 0, $__nf$243$lcssa = 0, $__nf$3 = 0, $__ns$056 = 0, $__ns$152 = 0, $__ns$2 = 0, $__p$049 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11156) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11312) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 switch ($5 << 24 >> 24) {
 case 43:
 case 45:
  {
   __THREW__ = 0;
   $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $5 | 0) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if ($10 & 1) label = 8; else {
    $13 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $13 + 4;
    HEAP32[$13 >> 2] = $9;
    $__nf$0 = $__nb + 1 | 0;
    label = 10;
   }
   break;
  }
 default:
  {
   $__nf$0 = $__nb;
   label = 10;
  }
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  L6 : do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $32 = $__nf$0 + 1 | 0;
   switch (HEAP8[$32 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     label = 11;
     break L6;
    }
   }
   __THREW__ = 0;
   $37 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
   $38 = __THREW__;
   __THREW__ = 0;
   if ($38 & 1) {
    label = 8;
    break L4;
   }
   $40 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $40 + 4;
   HEAP32[$40 >> 2] = $37;
   $42 = $__nf$0 + 2 | 0;
   __THREW__ = 0;
   $47 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$32 >> 0] | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    label = 8;
    break L4;
   }
   $50 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $50 + 4;
   HEAP32[$50 >> 2] = $47;
   if ($42 >>> 0 < $__ne >>> 0) {
    $__ns$056 = $42;
    while (1) {
     $53 = HEAP8[$__ns$056 >> 0] | 0;
     __THREW__ = 0;
     $54 = invoke_i(2) | 0;
     $55 = __THREW__;
     __THREW__ = 0;
     if ($55 & 1) break;
     __THREW__ = 0;
     $58 = invoke_iii(35, $53 << 24 >> 24 | 0, $54 | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) break;
     if (!$58) {
      $__nf$1 = $42;
      $__ns$2 = $__ns$056;
      break L6;
     }
     $62 = $__ns$056 + 1 | 0;
     if ($62 >>> 0 < $__ne >>> 0) $__ns$056 = $62; else {
      $__nf$1 = $42;
      $__ns$2 = $62;
      break L6;
     }
    }
    $21 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $21;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } else {
    $__nf$1 = $42;
    $__ns$2 = $42;
   }
  } else label = 11; else label = 11; while (0);
  L18 : do if ((label | 0) == 11) if ($__nf$0 >>> 0 < $__ne >>> 0) {
   $__ns$152 = $__nf$0;
   while (1) {
    $64 = HEAP8[$__ns$152 >> 0] | 0;
    __THREW__ = 0;
    $65 = invoke_i(2) | 0;
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) break;
    __THREW__ = 0;
    $69 = invoke_iii(36, $64 << 24 >> 24 | 0, $65 | 0) | 0;
    $70 = __THREW__;
    __THREW__ = 0;
    if ($70 & 1) break;
    if (!$69) {
     $__nf$1 = $__nf$0;
     $__ns$2 = $__ns$152;
     break L18;
    }
    $73 = $__ns$152 + 1 | 0;
    if ($73 >>> 0 < $__ne >>> 0) $__ns$152 = $73; else {
     $__nf$1 = $__nf$0;
     $__ns$2 = $73;
     break L18;
    }
   }
   $19 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $19;
   $lpad$phi$index5 = tempRet0;
   break L4;
  } else {
   $__nf$1 = $__nf$0;
   $__ns$2 = $__nf$0;
  } while (0);
  $75 = HEAP8[$__grouping >> 0] | 0;
  $78 = $__grouping + 4 | 0;
  if (!((($75 & 1) == 0 ? ($75 & 255) >>> 1 : HEAP32[$78 >> 2] | 0) | 0)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $88 = __THREW__;
   __THREW__ = 0;
   if ($88 & 1) {
    label = 8;
    break;
   }
   $94 = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1 << 2) | 0;
   HEAP32[$__oe >> 2] = $94;
   $$pre$phiZ2D = $0;
   $198 = $94;
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $96 = $__ns$2 + -1 | 0;
    if ($__nf$1 >>> 0 < $96 >>> 0) {
     $$01$i$i50 = $__nf$1;
     $100 = $96;
     do {
      $98 = HEAP8[$$01$i$i50 >> 0] | 0;
      HEAP8[$$01$i$i50 >> 0] = HEAP8[$100 >> 0] | 0;
      HEAP8[$100 >> 0] = $98;
      $$01$i$i50 = $$01$i$i50 + 1 | 0;
      $100 = $100 + -1 | 0;
     } while ($$01$i$i50 >>> 0 < $100 >>> 0);
    }
   }
   __THREW__ = 0;
   $107 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $108 = __THREW__;
   __THREW__ = 0;
   if ($108 & 1) {
    label = 8;
    break;
   }
   $110 = $__grouping + 8 | 0;
   $111 = $__grouping + 1 | 0;
   L37 : do if ($__nf$1 >>> 0 < $__ns$2 >>> 0) {
    $__dc$047 = 0;
    $__dg$048 = 0;
    $__p$049 = $__nf$1;
    while (1) {
     $119 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $111 : HEAP32[$110 >> 2] | 0) + $__dg$048 >> 0] | 0;
     if ($119 << 24 >> 24 > 0 & ($__dc$047 | 0) == ($119 << 24 >> 24 | 0)) {
      $123 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $123 + 4;
      HEAP32[$123 >> 2] = $107;
      $125 = HEAP8[$__grouping >> 0] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$048 >>> 0 < ((($125 & 1) == 0 ? ($125 & 255) >>> 1 : HEAP32[$78 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$048 | 0;
     } else {
      $__dc$1 = $__dc$047;
      $__dg$1 = $__dg$048;
     }
     __THREW__ = 0;
     $139 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$049 >> 0] | 0) | 0;
     $140 = __THREW__;
     __THREW__ = 0;
     if ($140 & 1) break;
     $142 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $142 + 4;
     HEAP32[$142 >> 2] = $139;
     $__p$049 = $__p$049 + 1 | 0;
     if ($__p$049 >>> 0 >= $__ns$2 >>> 0) break L37; else {
      $__dc$047 = $__dc$1 + 1 | 0;
      $__dg$048 = $__dg$1;
     }
    }
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } while (0);
   $150 = $__ob + ($__nf$1 - $__nb << 2) | 0;
   $151 = HEAP32[$__oe >> 2] | 0;
   if (($150 | 0) == ($151 | 0)) {
    $$pre$phiZ2D = $0;
    $198 = $150;
   } else {
    $153 = $151 + -4 | 0;
    if ($150 >>> 0 < $153 >>> 0) {
     $$01$i$i645 = $150;
     $158 = $153;
     do {
      $156 = HEAP32[$$01$i$i645 >> 2] | 0;
      HEAP32[$$01$i$i645 >> 2] = HEAP32[$158 >> 2];
      HEAP32[$158 >> 2] = $156;
      $$01$i$i645 = $$01$i$i645 + 4 | 0;
      $158 = $158 + -4 | 0;
     } while ($$01$i$i645 >>> 0 < $158 >>> 0);
     $$pre$phiZ2D = $0;
     $198 = $151;
    } else {
     $$pre$phiZ2D = $0;
     $198 = $151;
    }
   }
  }
  L50 : do if ($__ns$2 >>> 0 < $__ne >>> 0) {
   $__nf$243 = $__ns$2;
   while (1) {
    $162 = HEAP8[$__nf$243 >> 0] | 0;
    if ($162 << 24 >> 24 == 46) {
     $__nf$243$lcssa = $__nf$243;
     break;
    }
    __THREW__ = 0;
    $176 = invoke_iii(HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $162 | 0) | 0;
    $177 = __THREW__;
    __THREW__ = 0;
    if ($177 & 1) {
     label = 4;
     break;
    }
    $179 = HEAP32[$__oe >> 2] | 0;
    $180 = $179 + 4 | 0;
    HEAP32[$__oe >> 2] = $180;
    HEAP32[$179 >> 2] = $176;
    $181 = $__nf$243 + 1 | 0;
    if ($181 >>> 0 < $__ne >>> 0) $__nf$243 = $181; else {
     $186 = $180;
     $__nf$3 = $181;
     break L50;
    }
   }
   if ((label | 0) == 4) {
    $15 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $15;
    $lpad$phi$index5 = tempRet0;
    break L4;
   }
   __THREW__ = 0;
   $167 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
   $168 = __THREW__;
   __THREW__ = 0;
   if ($168 & 1) {
    label = 8;
    break L4;
   }
   $170 = HEAP32[$__oe >> 2] | 0;
   $171 = $170 + 4 | 0;
   HEAP32[$__oe >> 2] = $171;
   HEAP32[$170 >> 2] = $167;
   $186 = $171;
   $__nf$3 = $__nf$243$lcssa + 1 | 0;
  } else {
   $186 = $198;
   $__nf$3 = $__ns$2;
  } while (0);
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, $186 | 0) | 0;
  $187 = __THREW__;
  __THREW__ = 0;
  if ($187 & 1) label = 8; else {
   $192 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3 << 2) | 0;
   HEAP32[$__oe >> 2] = $192;
   HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $192 : $__ob + ($__np - $__nb << 2) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 8) {
  $23 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $23;
  $lpad$phi$index5 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i$i$i5 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i11 = 0, $$0$i$i1$i$i26 = 0, $$0$i$i17 = 0, $$0$ph$be = 0, $$0$ph89 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa97 = 0, $$lcssa98 = 0, $$ph = 0, $$pre$i$i$i22 = 0, $$pre$i$i$i7 = 0, $$pre$i3$i$i13 = 0, $$pre$i3$i$i1344 = 0, $$pre$i3$i$i1345 = 0, $0 = 0, $1 = 0, $10 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $122 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $143 = 0, $150 = 0, $161 = 0, $171 = 0, $174 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $2 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $37 = 0, $4 = 0, $45 = 0, $5 = 0, $51 = 0, $52 = 0, $61 = 0, $62 = 0, $63 = 0, $66 = 0, $69 = 0, $8 = 0, $83 = 0, $94 = 0, $96 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $3;
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 11156) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $37 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
  ___resumeException($37 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
 HEAP32[$__err >> 2] = 0;
 $8 = HEAP32[$__b >> 2] | 0;
 L4 : do if (($__fmtb | 0) == ($__fmte | 0)) $$pre$i$i$i22 = $8; else {
  $$0$ph89 = $__fmtb;
  $10 = $8;
  L5 : while (1) {
   $11 = $10;
   if (!$10) {
    $130 = 0;
    $187 = 1;
    $62 = $11;
   } else {
    $13 = HEAP32[$10 + 12 >> 2] | 0;
    if (($13 | 0) == (HEAP32[$10 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0; else $$0$i$i$i$i = HEAP32[$13 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $130 = 0;
     $187 = 1;
     $62 = 0;
    } else {
     $130 = $10;
     $187 = 0;
     $62 = $11;
    }
   }
   $23 = HEAP32[$__e >> 2] | 0;
   $25 = $23;
   do if (!$23) {
    $$ph = $25;
    label = 15;
   } else {
    $27 = HEAP32[$23 + 12 >> 2] | 0;
    if (($27 | 0) == (HEAP32[$23 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$23 >> 2] | 0) + 36 >> 2] & 127]($23) | 0; else $$0$i$i1$i$i = HEAP32[$27 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$ph = 0;
     label = 15;
     break;
    } else if ($187) {
     $188 = $23;
     $63 = $25;
     break;
    } else {
     $$lcssa = $130;
     label = 17;
     break L5;
    }
   } while (0);
   if ((label | 0) == 15) {
    label = 0;
    if ($187) {
     $$lcssa = $130;
     label = 17;
     break;
    } else {
     $188 = 0;
     $63 = $$ph;
    }
   }
   L27 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$$0$ph89 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
    $45 = $$0$ph89 + 4 | 0;
    if (($45 | 0) == ($__fmte | 0)) {
     $$lcssa97 = $130;
     label = 21;
     break L5;
    }
    $51 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$45 >> 2] | 0, 0) | 0;
    switch ($51 << 24 >> 24) {
    case 48:
    case 69:
     {
      $52 = $$0$ph89 + 8 | 0;
      if (($52 | 0) == ($__fmte | 0)) {
       $$lcssa98 = $130;
       label = 24;
       break L5;
      }
      $66 = $45;
      $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, HEAP32[$52 >> 2] | 0, 0) | 0;
      $__opt$0 = $51;
      break;
     }
    default:
     {
      $66 = $$0$ph89;
      $__cmd$0 = $51;
      $__opt$0 = 0;
     }
    }
    $61 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
    HEAP32[$1 >> 2] = $62;
    HEAP32[$2 >> 2] = $63;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$__b >> 2] = FUNCTION_TABLE_iiiiiiiii[$61 & 15]($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0) | 0;
    $$0$ph$be = $66 + 8 | 0;
   } else {
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$0$ph89 >> 2] | 0) | 0) $$0$pn = $$0$ph89; else {
     $129 = $130 + 12 | 0;
     $131 = HEAP32[$129 >> 2] | 0;
     $132 = $130 + 16 | 0;
     if (($131 | 0) == (HEAP32[$132 >> 2] | 0)) $$0$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($130) | 0; else $$0$i$i17 = HEAP32[$131 >> 2] | 0;
     $143 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $$0$i$i17) | 0;
     if (($143 | 0) != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, HEAP32[$$0$ph89 >> 2] | 0) | 0)) {
      label = 61;
      break L5;
     }
     $150 = HEAP32[$129 >> 2] | 0;
     if (($150 | 0) == (HEAP32[$132 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 40 >> 2] & 127]($130) | 0; else HEAP32[$129 >> 2] = $150 + 4;
     $$0$ph$be = $$0$ph89 + 4 | 0;
     break;
    }
    while (1) {
     $$2 = $$0$pn + 4 | 0;
     if (($$2 | 0) == ($__fmte | 0)) {
      $$2$lcssa = $__fmte;
      break;
     }
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, HEAP32[$$2 >> 2] | 0) | 0) $$0$pn = $$2; else {
      $$2$lcssa = $$2;
      break;
     }
    }
    $$pre$i$i$i7 = $130;
    $$pre$i3$i$i13 = $188;
    $94 = $188;
    while (1) {
     if (!$$pre$i$i$i7) {
      $106 = 1;
      $108 = 0;
     } else {
      $83 = HEAP32[$$pre$i$i$i7 + 12 >> 2] | 0;
      if (($83 | 0) == (HEAP32[$$pre$i$i$i7 + 16 >> 2] | 0)) $$0$i$i$i$i5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i7 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i7) | 0; else $$0$i$i$i$i5 = HEAP32[$83 >> 2] | 0;
      if (($$0$i$i$i$i5 | 0) == -1) {
       HEAP32[$__b >> 2] = 0;
       $106 = 1;
       $108 = 0;
      } else {
       $106 = 0;
       $108 = $$pre$i$i$i7;
      }
     }
     do if (!$94) {
      $$pre$i3$i$i1345 = $$pre$i3$i$i13;
      label = 44;
     } else {
      $96 = HEAP32[$94 + 12 >> 2] | 0;
      if (($96 | 0) == (HEAP32[$94 + 16 >> 2] | 0)) $$0$i$i1$i$i11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$94 >> 2] | 0) + 36 >> 2] & 127]($94) | 0; else $$0$i$i1$i$i11 = HEAP32[$96 >> 2] | 0;
      if (($$0$i$i1$i$i11 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       $$pre$i3$i$i1345 = 0;
       label = 44;
       break;
      } else if ($106 ^ ($$pre$i3$i$i13 | 0) == 0) {
       $$pre$i3$i$i1344 = $$pre$i3$i$i13;
       $189 = $$pre$i3$i$i13;
       break;
      } else {
       $$0$ph$be = $$2$lcssa;
       break L27;
      }
     } while (0);
     if ((label | 0) == 44) {
      label = 0;
      if ($106) {
       $$0$ph$be = $$2$lcssa;
       break L27;
      } else {
       $$pre$i3$i$i1344 = $$pre$i3$i$i1345;
       $189 = 0;
      }
     }
     $107 = $108 + 12 | 0;
     $109 = HEAP32[$107 >> 2] | 0;
     $110 = $108 + 16 | 0;
     if (($109 | 0) == (HEAP32[$110 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$108 >> 2] | 0) + 36 >> 2] & 127]($108) | 0; else $$0$i$i = HEAP32[$109 >> 2] | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) {
      $$0$ph$be = $$2$lcssa;
      break L27;
     }
     $122 = HEAP32[$107 >> 2] | 0;
     if (($122 | 0) == (HEAP32[$110 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$108 >> 2] | 0) + 40 >> 2] & 127]($108) | 0;
      $$pre$i$i$i7 = $108;
      $$pre$i3$i$i13 = $$pre$i3$i$i1344;
      $94 = $189;
      continue;
     } else {
      HEAP32[$107 >> 2] = $122 + 4;
      $$pre$i$i$i7 = $108;
      $$pre$i3$i$i13 = $$pre$i3$i$i1344;
      $94 = $189;
      continue;
     }
    }
   } while (0);
   $69 = HEAP32[$__b >> 2] | 0;
   if (($$0$ph$be | 0) != ($__fmte | 0) & (HEAP32[$__err >> 2] | 0) == 0) {
    $$0$ph89 = $$0$ph$be;
    $10 = $69;
   } else {
    $$pre$i$i$i22 = $69;
    break L4;
   }
  }
  if ((label | 0) == 17) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = $$lcssa;
   break;
  } else if ((label | 0) == 21) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = $$lcssa97;
   break;
  } else if ((label | 0) == 24) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = $$lcssa98;
   break;
  } else if ((label | 0) == 61) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i22 = HEAP32[$__b >> 2] | 0;
   break;
  }
 } while (0);
 if (!$$pre$i$i$i22) {
  $186 = 0;
  $190 = 1;
 } else {
  $161 = HEAP32[$$pre$i$i$i22 + 12 >> 2] | 0;
  if (($161 | 0) == (HEAP32[$$pre$i$i$i22 + 16 >> 2] | 0)) $$0$i$i$i$i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i22 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i22) | 0; else $$0$i$i$i$i20 = HEAP32[$161 >> 2] | 0;
  if (($$0$i$i$i$i20 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $186 = 0;
   $190 = 1;
  } else {
   $186 = $$pre$i$i$i22;
   $190 = 0;
  }
 }
 $171 = HEAP32[$__e >> 2] | 0;
 do if (!$171) label = 74; else {
  $174 = HEAP32[$171 + 12 >> 2] | 0;
  if (($174 | 0) == (HEAP32[$171 + 16 >> 2] | 0)) $$0$i$i1$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$171 >> 2] | 0) + 36 >> 2] & 127]($171) | 0; else $$0$i$i1$i$i26 = HEAP32[$174 >> 2] | 0;
  if (($$0$i$i1$i$i26 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 74;
   break;
  } else if ($190) break; else {
   label = 76;
   break;
  }
 } while (0);
 if ((label | 0) == 74) if ($190) label = 76;
 if ((label | 0) == 76) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return $186 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i10 = 0, $$pre$i2$i$i = 0, $0 = 0, $103 = 0, $104 = 0, $111 = 0, $117 = 0, $12 = 0, $124 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $134 = 0, $135 = 0, $147 = 0, $148 = 0, $151 = 0, $152 = 0, $162 = 0, $163 = 0, $168 = 0, $169 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $56 = 0, $57 = 0, $6 = 0, $61 = 0, $67 = 0, $7 = 0, $71 = 0, $78 = 0, $79 = 0, $85 = 0, $87 = 0, $89 = 0, $90 = 0, $91 = 0, $93 = 0, $95 = 0, $96 = 0, $97 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $vararg_buffer = sp;
 $__atoms = sp + 208 | 0;
 $__grouping = sp + 188 | 0;
 $0 = sp + 200 | 0;
 $__buf = sp + 8 | 0;
 $__a_end = sp + 4 | 0;
 $__g = sp + 24 | 0;
 $__g_end = sp + 184 | 0;
 $__dc = sp + 204 | 0;
 HEAP32[$__grouping >> 2] = 0;
 HEAP32[$__grouping + 4 >> 2] = 0;
 HEAP32[$__grouping + 8 >> 2] = 0;
 __THREW__ = 0;
 $3 = invoke_ii(68, $__iob | 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 do if ($4 & 1) {
  $87 = ___cxa_find_matching_catch() | 0;
  $$0 = $87;
  $$01 = tempRet0;
 } else {
  HEAP32[$0 >> 2] = $3;
  __THREW__ = 0;
  $6 = invoke_iii(22, $0 | 0, 11164) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] | 0, $6 | 0, 61448, 61474, $__atoms | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if (!($12 & 1)) {
    __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
    HEAP32[$__buf >> 2] = 0;
    HEAP32[$__buf + 4 >> 2] = 0;
    HEAP32[$__buf + 8 >> 2] = 0;
    if (!(HEAP8[$__buf >> 0] & 1)) $21 = 10; else $21 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $21 | 0, 0);
    $22 = __THREW__;
    __THREW__ = 0;
    L10 : do if ($22 & 1) label = 30; else {
     $27 = $__buf + 8 | 0;
     $29 = $__buf + 1 | 0;
     $30 = (HEAP8[$__buf >> 0] & 1) == 0 ? $29 : HEAP32[$27 >> 2] | 0;
     HEAP32[$__a_end >> 2] = $30;
     HEAP32[$__g_end >> 2] = $__g;
     HEAP32[$__dc >> 2] = 0;
     $31 = $__buf + 4 | 0;
     $$pre$i$i$i10 = HEAP32[$__b >> 2] | 0;
     $__a$0 = $30;
     L12 : while (1) {
      if (!$$pre$i$i$i10) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i10 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i10 + 16 >> 2] | 0)) {
       __THREW__ = 0;
       $41 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i10 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i10 | 0) | 0;
       $42 = __THREW__;
       __THREW__ = 0;
       if ($42 & 1) {
        label = 29;
        break;
       }
       if (($41 | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $$pre$i$i$i = 0;
       } else $$pre$i$i$i = $$pre$i$i$i10;
      } else $$pre$i$i$i = $$pre$i$i$i10;
      $45 = ($$pre$i$i$i | 0) == 0;
      $46 = HEAP32[$__e >> 2] | 0;
      do if (!$46) label = 19; else {
       if ((HEAP32[$46 + 12 >> 2] | 0) != (HEAP32[$46 + 16 >> 2] | 0)) if ($45) {
        $169 = $46;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;
        $$pre$i2$i$i = $46;
        $__a$2 = $__a$0;
        break L12;
       }
       __THREW__ = 0;
       $56 = invoke_ii(HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] | 0, $46 | 0) | 0;
       $57 = __THREW__;
       __THREW__ = 0;
       if ($57 & 1) {
        label = 29;
        break L12;
       }
       if (($56 | 0) == -1) {
        HEAP32[$__e >> 2] = 0;
        label = 19;
        break;
       } else if ($45) {
        $169 = $46;
        break;
       } else {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;
        $$pre$i2$i$i = $46;
        $__a$2 = $__a$0;
        break L12;
       }
      } while (0);
      if ((label | 0) == 19) {
       label = 0;
       if ($45) {
        $$pre$i$i$i$lcssa = $$pre$i$i$i;
        $$pre$i2$i$i = 0;
        $__a$2 = $__a$0;
        break;
       } else $169 = 0;
      }
      $61 = HEAP8[$__buf >> 0] | 0;
      $67 = ($61 & 1) == 0 ? ($61 & 255) >>> 1 : HEAP32[$31 >> 2] | 0;
      if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $67 | 0)) {
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $67 << 1 | 0, 0);
       $71 = __THREW__;
       __THREW__ = 0;
       if ($71 & 1) {
        label = 29;
        break;
       }
       if (!(HEAP8[$__buf >> 0] & 1)) $78 = 10; else $78 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
       __THREW__ = 0;
       invoke_viii(5, $__buf | 0, $78 | 0, 0);
       $79 = __THREW__;
       __THREW__ = 0;
       if ($79 & 1) {
        label = 29;
        break;
       }
       $85 = (HEAP8[$__buf >> 0] & 1) == 0 ? $29 : HEAP32[$27 >> 2] | 0;
       HEAP32[$__a_end >> 2] = $85 + $67;
       $__a$1 = $85;
      } else $__a$1 = $__a$0;
      $95 = $$pre$i$i$i + 12 | 0;
      $96 = HEAP32[$95 >> 2] | 0;
      $97 = $$pre$i$i$i + 16 | 0;
      if (($96 | 0) == (HEAP32[$97 >> 2] | 0)) {
       __THREW__ = 0;
       $103 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
       $104 = __THREW__;
       __THREW__ = 0;
       if ($104 & 1) {
        label = 29;
        break;
       } else $$0$i$i = $103;
      } else $$0$i$i = HEAPU8[$96 >> 0] | 0;
      if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, 16, $__a$1, $__a_end, $__dc, 0, $__grouping, $__g, $__g_end, $__atoms) | 0) {
       $$pre$i$i$i$lcssa = $$pre$i$i$i;
       $$pre$i2$i$i = $169;
       $__a$2 = $__a$1;
       break;
      }
      $111 = HEAP32[$95 >> 2] | 0;
      if (($111 | 0) == (HEAP32[$97 >> 2] | 0)) {
       __THREW__ = 0;
       invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
       $117 = __THREW__;
       __THREW__ = 0;
       if ($117 & 1) {
        label = 29;
        break;
       } else {
        $$pre$i$i$i10 = $$pre$i$i$i;
        $__a$0 = $__a$1;
        continue;
       }
      } else {
       HEAP32[$95 >> 2] = $111 + 1;
       $$pre$i$i$i10 = $$pre$i$i$i;
       $__a$0 = $__a$1;
       continue;
      }
     }
     if ((label | 0) == 29) {
      $91 = ___cxa_find_matching_catch() | 0;
      $lpad$phi$index = $91;
      $lpad$phi$index2 = tempRet0;
      break;
     }
     __THREW__ = 0;
     invoke_viii(5, $__buf | 0, (HEAP32[$__a_end >> 2] | 0) - $__a$2 | 0, 0);
     $124 = __THREW__;
     __THREW__ = 0;
     if ($124 & 1) label = 30; else {
      $126 = HEAP8[$__buf >> 0] | 0;
      $127 = HEAP32[$27 >> 2] | 0;
      __THREW__ = 0;
      $128 = invoke_i(2) | 0;
      $129 = __THREW__;
      __THREW__ = 0;
      if ($129 & 1) label = 30; else {
       __THREW__ = 0;
       HEAP32[$vararg_buffer >> 2] = $__v;
       $134 = invoke_iiiii(10, (($126 & 1) == 0 ? $29 : $127) | 0, $128 | 0, 62832, $vararg_buffer | 0) | 0;
       $135 = __THREW__;
       __THREW__ = 0;
       if ($135 & 1) label = 30; else {
        if (($134 | 0) != 1) HEAP32[$__err >> 2] = 4;
        if (!$$pre$i$i$i$lcssa) $152 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
         __THREW__ = 0;
         $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
         $148 = __THREW__;
         __THREW__ = 0;
         if ($148 & 1) {
          label = 30;
          break;
         }
         if (($147 | 0) == -1) {
          HEAP32[$__b >> 2] = 0;
          $152 = 0;
         } else $152 = $$pre$i$i$i$lcssa;
        } else $152 = $$pre$i$i$i$lcssa;
        $151 = ($152 | 0) == 0;
        do if (!$$pre$i2$i$i) label = 55; else {
         if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
          __THREW__ = 0;
          $162 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
          $163 = __THREW__;
          __THREW__ = 0;
          if ($163 & 1) {
           label = 30;
           break L10;
          }
          if (($162 | 0) == -1) {
           HEAP32[$__e >> 2] = 0;
           label = 55;
           break;
          }
         }
         if (!$151) label = 56;
        } while (0);
        if ((label | 0) == 55) if ($151) label = 56;
        if ((label | 0) == 56) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
        $168 = HEAP32[$__b >> 2] | 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
        STACKTOP = sp;
        return $168 | 0;
       }
      }
     }
    } while (0);
    if ((label | 0) == 30) {
     $93 = ___cxa_find_matching_catch() | 0;
     $lpad$phi$index = $93;
     $lpad$phi$index2 = tempRet0;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
    $$0 = $lpad$phi$index;
    $$01 = $lpad$phi$index2;
    break;
   }
  }
  $89 = ___cxa_find_matching_catch() | 0;
  $90 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
  $$0 = $89;
  $$01 = $90;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($$0 | 0);
 return 0;
}

function __ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i46 = 0, $$01$i$i641 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $107 = 0, $108 = 0, $110 = 0, $111 = 0, $119 = 0, $123 = 0, $125 = 0, $13 = 0, $139 = 0, $140 = 0, $142 = 0, $15 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $158 = 0, $162 = 0, $167 = 0, $168 = 0, $17 = 0, $170 = 0, $176 = 0, $177 = 0, $179 = 0, $181 = 0, $187 = 0, $19 = 0, $192 = 0, $21 = 0, $23 = 0, $25 = 0, $32 = 0, $37 = 0, $38 = 0, $40 = 0, $42 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $59 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $69 = 0, $70 = 0, $73 = 0, $75 = 0, $78 = 0, $88 = 0, $9 = 0, $96 = 0, $98 = 0, $__dc$043 = 0, $__dc$1 = 0, $__dg$044 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__nf$240 = 0, $__nf$240$lcssa = 0, $__nf$3 = 0, $__ns$052 = 0, $__ns$148 = 0, $__ns$2 = 0, $__p$045 = 0, $lpad$phi$index = 0, $lpad$phi$index5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11164) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11304) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 HEAP32[$__oe >> 2] = $__ob;
 $5 = HEAP8[$__nb >> 0] | 0;
 switch ($5 << 24 >> 24) {
 case 43:
 case 45:
  {
   __THREW__ = 0;
   $9 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $5 | 0) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if ($10 & 1) label = 8; else {
    $13 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $13 + 1;
    HEAP8[$13 >> 0] = $9;
    $__nf$0 = $__nb + 1 | 0;
    label = 10;
   }
   break;
  }
 default:
  {
   $__nf$0 = $__nb;
   label = 10;
  }
 }
 L4 : do if ((label | 0) == 10) {
  $25 = $__ne;
  L6 : do if (($25 - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $32 = $__nf$0 + 1 | 0;
   switch (HEAP8[$32 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     label = 11;
     break L6;
    }
   }
   __THREW__ = 0;
   $37 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
   $38 = __THREW__;
   __THREW__ = 0;
   if ($38 & 1) {
    label = 8;
    break L4;
   }
   $40 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $40 + 1;
   HEAP8[$40 >> 0] = $37;
   $42 = $__nf$0 + 2 | 0;
   __THREW__ = 0;
   $47 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$32 >> 0] | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    label = 8;
    break L4;
   }
   $50 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $50 + 1;
   HEAP8[$50 >> 0] = $47;
   if ($42 >>> 0 < $__ne >>> 0) {
    $__ns$052 = $42;
    while (1) {
     $53 = HEAP8[$__ns$052 >> 0] | 0;
     __THREW__ = 0;
     $54 = invoke_i(2) | 0;
     $55 = __THREW__;
     __THREW__ = 0;
     if ($55 & 1) break;
     __THREW__ = 0;
     $58 = invoke_iii(35, $53 << 24 >> 24 | 0, $54 | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) break;
     if (!$58) {
      $__nf$1 = $42;
      $__ns$2 = $__ns$052;
      break L6;
     }
     $62 = $__ns$052 + 1 | 0;
     if ($62 >>> 0 < $__ne >>> 0) $__ns$052 = $62; else {
      $__nf$1 = $42;
      $__ns$2 = $62;
      break L6;
     }
    }
    $21 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $21;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } else {
    $__nf$1 = $42;
    $__ns$2 = $42;
   }
  } else label = 11; else label = 11; while (0);
  L18 : do if ((label | 0) == 11) if ($__nf$0 >>> 0 < $__ne >>> 0) {
   $__ns$148 = $__nf$0;
   while (1) {
    $64 = HEAP8[$__ns$148 >> 0] | 0;
    __THREW__ = 0;
    $65 = invoke_i(2) | 0;
    $66 = __THREW__;
    __THREW__ = 0;
    if ($66 & 1) break;
    __THREW__ = 0;
    $69 = invoke_iii(36, $64 << 24 >> 24 | 0, $65 | 0) | 0;
    $70 = __THREW__;
    __THREW__ = 0;
    if ($70 & 1) break;
    if (!$69) {
     $__nf$1 = $__nf$0;
     $__ns$2 = $__ns$148;
     break L18;
    }
    $73 = $__ns$148 + 1 | 0;
    if ($73 >>> 0 < $__ne >>> 0) $__ns$148 = $73; else {
     $__nf$1 = $__nf$0;
     $__ns$2 = $73;
     break L18;
    }
   }
   $19 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $19;
   $lpad$phi$index5 = tempRet0;
   break L4;
  } else {
   $__nf$1 = $__nf$0;
   $__ns$2 = $__nf$0;
  } while (0);
  $75 = HEAP8[$__grouping >> 0] | 0;
  $78 = $__grouping + 4 | 0;
  if (!((($75 & 1) == 0 ? ($75 & 255) >>> 1 : HEAP32[$78 >> 2] | 0) | 0)) {
   __THREW__ = 0;
   invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$1 | 0, $__ns$2 | 0, HEAP32[$__oe >> 2] | 0) | 0;
   $88 = __THREW__;
   __THREW__ = 0;
   if ($88 & 1) {
    label = 8;
    break;
   }
   HEAP32[$__oe >> 2] = (HEAP32[$__oe >> 2] | 0) + ($__ns$2 - $__nf$1);
   $$pre$phiZ2D = $0;
  } else {
   if (($__nf$1 | 0) != ($__ns$2 | 0)) {
    $96 = $__ns$2 + -1 | 0;
    if ($__nf$1 >>> 0 < $96 >>> 0) {
     $$01$i$i46 = $__nf$1;
     $100 = $96;
     do {
      $98 = HEAP8[$$01$i$i46 >> 0] | 0;
      HEAP8[$$01$i$i46 >> 0] = HEAP8[$100 >> 0] | 0;
      HEAP8[$100 >> 0] = $98;
      $$01$i$i46 = $$01$i$i46 + 1 | 0;
      $100 = $100 + -1 | 0;
     } while ($$01$i$i46 >>> 0 < $100 >>> 0);
    }
   }
   __THREW__ = 0;
   $107 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
   $108 = __THREW__;
   __THREW__ = 0;
   if ($108 & 1) {
    label = 8;
    break;
   }
   $110 = $__grouping + 8 | 0;
   $111 = $__grouping + 1 | 0;
   L37 : do if ($__nf$1 >>> 0 < $__ns$2 >>> 0) {
    $__dc$043 = 0;
    $__dg$044 = 0;
    $__p$045 = $__nf$1;
    while (1) {
     $119 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $111 : HEAP32[$110 >> 2] | 0) + $__dg$044 >> 0] | 0;
     if ($119 << 24 >> 24 > 0 & ($__dc$043 | 0) == ($119 << 24 >> 24 | 0)) {
      $123 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $123 + 1;
      HEAP8[$123 >> 0] = $107;
      $125 = HEAP8[$__grouping >> 0] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$044 >>> 0 < ((($125 & 1) == 0 ? ($125 & 255) >>> 1 : HEAP32[$78 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$044 | 0;
     } else {
      $__dc$1 = $__dc$043;
      $__dg$1 = $__dg$044;
     }
     __THREW__ = 0;
     $139 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$045 >> 0] | 0) | 0;
     $140 = __THREW__;
     __THREW__ = 0;
     if ($140 & 1) break;
     $142 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $142 + 1;
     HEAP8[$142 >> 0] = $139;
     $__p$045 = $__p$045 + 1 | 0;
     if ($__p$045 >>> 0 >= $__ns$2 >>> 0) break L37; else {
      $__dc$043 = $__dc$1 + 1 | 0;
      $__dg$044 = $__dg$1;
     }
    }
    $17 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $17;
    $lpad$phi$index5 = tempRet0;
    break L4;
   } while (0);
   $150 = $__ob + ($__nf$1 - $__nb) | 0;
   $151 = HEAP32[$__oe >> 2] | 0;
   if (($150 | 0) == ($151 | 0)) $$pre$phiZ2D = $0; else {
    $153 = $151 + -1 | 0;
    if ($150 >>> 0 < $153 >>> 0) {
     $$01$i$i641 = $150;
     $158 = $153;
     do {
      $156 = HEAP8[$$01$i$i641 >> 0] | 0;
      HEAP8[$$01$i$i641 >> 0] = HEAP8[$158 >> 0] | 0;
      HEAP8[$158 >> 0] = $156;
      $$01$i$i641 = $$01$i$i641 + 1 | 0;
      $158 = $158 + -1 | 0;
     } while ($$01$i$i641 >>> 0 < $158 >>> 0);
     $$pre$phiZ2D = $0;
    } else $$pre$phiZ2D = $0;
   }
  }
  L50 : do if ($__ns$2 >>> 0 < $__ne >>> 0) {
   $__nf$240 = $__ns$2;
   while (1) {
    $162 = HEAP8[$__nf$240 >> 0] | 0;
    if ($162 << 24 >> 24 == 46) {
     $__nf$240$lcssa = $__nf$240;
     break;
    }
    __THREW__ = 0;
    $176 = invoke_iii(HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $162 | 0) | 0;
    $177 = __THREW__;
    __THREW__ = 0;
    if ($177 & 1) {
     label = 4;
     break;
    }
    $179 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $179 + 1;
    HEAP8[$179 >> 0] = $176;
    $181 = $__nf$240 + 1 | 0;
    if ($181 >>> 0 < $__ne >>> 0) $__nf$240 = $181; else {
     $__nf$3 = $181;
     break L50;
    }
   }
   if ((label | 0) == 4) {
    $15 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $15;
    $lpad$phi$index5 = tempRet0;
    break L4;
   }
   __THREW__ = 0;
   $167 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] | 0, $1 | 0) | 0;
   $168 = __THREW__;
   __THREW__ = 0;
   if ($168 & 1) {
    label = 8;
    break L4;
   }
   $170 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $170 + 1;
   HEAP8[$170 >> 0] = $167;
   $__nf$3 = $__nf$240$lcssa + 1 | 0;
  } else $__nf$3 = $__ns$2; while (0);
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nf$3 | 0, $__ne | 0, HEAP32[$__oe >> 2] | 0) | 0;
  $187 = __THREW__;
  __THREW__ = 0;
  if ($187 & 1) label = 8; else {
   $192 = (HEAP32[$__oe >> 2] | 0) + ($25 - $__nf$3) | 0;
   HEAP32[$__oe >> 2] = $192;
   HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $192 : $__ob + ($__np - $__nb) | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return;
  }
 } while (0);
 if ((label | 0) == 8) {
  $23 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $23;
  $lpad$phi$index5 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__z) {
 $__root = $__root | 0;
 $__z = $__z | 0;
 var $$0 = 0, $$0$i$i = 0, $$1 = 0, $$2 = 0, $$2$be = 0, $$4 = 0, $$6 = 0, $$cast9 = 0, $$lcssa = 0, $$lcssa105 = 0, $$lcssa120 = 0, $$lcssa22 = 0, $$ph = 0, $$pre = 0, $$pre$phi29Z2D = 0, $0 = 0, $10 = 0, $101 = 0, $103 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $116 = 0, $117 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $127 = 0, $130 = 0, $135 = 0, $136 = 0, $137 = 0, $14 = 0, $140 = 0, $143 = 0, $148 = 0, $15 = 0, $151 = 0, $152 = 0, $157 = 0, $16 = 0, $164 = 0, $165 = 0, $170 = 0, $175 = 0, $178 = 0, $179 = 0, $18 = 0, $182 = 0, $185 = 0, $188 = 0, $19 = 0, $193 = 0, $194 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $204 = 0, $207 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $35 = 0, $38 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $67 = 0, $71 = 0, $77 = 0, $8 = 0, $84 = 0, $91 = 0, $97 = 0, $__w$0 = 0, $__w$1 = 0, $__w$1$be$in = 0, $__w$2 = 0, $__w$2$lcssa = 0, $__w$2101 = 0, $__w$2102 = 0, $__w$3 = 0, $__w$4 = 0, $__w$4112 = 0, $__w$4113 = 0, $__w$5 = 0, label = 0;
 $0 = HEAP32[$__z >> 2] | 0;
 do if (!$0) {
  $$ph = $__z;
  label = 5;
 } else {
  $3 = HEAP32[$__z + 4 >> 2] | 0;
  if (!$3) {
   $11 = $__z;
   $14 = $0;
   $211 = $__z;
   label = 7;
   break;
  } else {
   $$0$i$i = $3;
   while (1) {
    $5 = HEAP32[$$0$i$i >> 2] | 0;
    if (!$5) {
     $$ph = $$0$i$i;
     label = 5;
     break;
    } else $$0$i$i = $5;
   }
  }
 } while (0);
 if ((label | 0) == 5) {
  $8 = HEAP32[$$ph + 4 >> 2] | 0;
  if (!$8) {
   $$pre$phi29Z2D = $$ph + 8 | 0;
   $18 = $$ph;
   $19 = 0;
   $212 = 0;
   $35 = $$ph;
  } else {
   $11 = $$ph;
   $14 = $8;
   $211 = $$ph;
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  $10 = $11 + 8 | 0;
  HEAP32[$14 + 8 >> 2] = HEAP32[$10 >> 2];
  $$pre$phi29Z2D = $10;
  $18 = $11;
  $19 = $14;
  $212 = 1;
  $35 = $211;
 }
 $15 = HEAP32[$$pre$phi29Z2D >> 2] | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) == ($18 | 0)) {
  HEAP32[$15 >> 2] = $19;
  if (($18 | 0) == ($__root | 0)) {
   $$0 = $19;
   $__w$0 = 0;
  } else {
   $$0 = $__root;
   $__w$0 = HEAP32[$15 + 4 >> 2] | 0;
  }
 } else {
  HEAP32[$15 + 4 >> 2] = $19;
  $$0 = $__root;
  $__w$0 = $16;
 }
 $24 = $18 + 12 | 0;
 $26 = (HEAP8[$24 >> 0] | 0) != 0;
 if (($18 | 0) == ($__z | 0)) $$1 = $$0; else {
  $28 = $__z + 8 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  HEAP32[$$pre$phi29Z2D >> 2] = $29;
  $$cast9 = $29;
  if ((HEAP32[HEAP32[$28 >> 2] >> 2] | 0) == ($__z | 0)) HEAP32[$$cast9 >> 2] = $18; else HEAP32[$$cast9 + 4 >> 2] = $18;
  $34 = HEAP32[$__z >> 2] | 0;
  HEAP32[$35 >> 2] = $34;
  HEAP32[$34 + 8 >> 2] = $18;
  $38 = HEAP32[$__z + 4 >> 2] | 0;
  HEAP32[$18 + 4 >> 2] = $38;
  if ($38) HEAP32[$38 + 8 >> 2] = $18;
  HEAP8[$24 >> 0] = HEAP8[$__z + 12 >> 0] | 0;
  $$1 = ($$0 | 0) == ($__z | 0) ? $18 : $$0;
 }
 if (!($26 & ($$1 | 0) != 0)) return;
 if ($212) {
  HEAP8[$19 + 12 >> 0] = 1;
  return;
 } else {
  $$2 = $$1;
  $__w$1 = $__w$0;
 }
 while (1) {
  $48 = HEAP32[$__w$1 + 8 >> 2] | 0;
  $51 = $__w$1 + 12 | 0;
  $53 = (HEAP8[$51 >> 0] | 0) != 0;
  if ((HEAP32[$48 >> 2] | 0) == ($__w$1 | 0)) {
   if ($53) {
    $$6 = $$2;
    $__w$4 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $135 = HEAP32[$48 >> 2] | 0;
    $136 = $135 + 4 | 0;
    $137 = HEAP32[$136 >> 2] | 0;
    HEAP32[$48 >> 2] = $137;
    if ($137) HEAP32[$137 + 8 >> 2] = $48;
    $140 = $48 + 8 | 0;
    HEAP32[$135 + 8 >> 2] = HEAP32[$140 >> 2];
    $143 = HEAP32[$140 >> 2] | 0;
    if ((HEAP32[$143 >> 2] | 0) == ($48 | 0)) HEAP32[$143 >> 2] = $135; else HEAP32[$143 + 4 >> 2] = $135;
    HEAP32[$136 >> 2] = $48;
    HEAP32[$140 >> 2] = $135;
    $148 = HEAP32[$__w$1 + 4 >> 2] | 0;
    $$6 = ($$2 | 0) == ($148 | 0) ? $__w$1 : $$2;
    $__w$4 = HEAP32[$148 >> 2] | 0;
   }
   $151 = HEAP32[$__w$4 >> 2] | 0;
   $152 = ($151 | 0) == 0;
   if (!$152) if (!(HEAP8[$151 + 12 >> 0] | 0)) {
    $175 = $151;
    $__w$4112 = $__w$4;
    label = 68;
    break;
   }
   $157 = HEAP32[$__w$4 + 4 >> 2] | 0;
   if ($157) if (!(HEAP8[$157 + 12 >> 0] | 0)) {
    label = 67;
    break;
   }
   HEAP8[$__w$4 + 12 >> 0] = 0;
   $164 = HEAP32[$__w$4 + 8 >> 2] | 0;
   $165 = $164 + 12 | 0;
   if (($164 | 0) == ($$6 | 0) | (HEAP8[$165 >> 0] | 0) == 0) {
    $$lcssa120 = $165;
    label = 64;
    break;
   }
   $170 = HEAP32[$164 + 8 >> 2] | 0;
   $$2$be = $$6;
   $__w$1$be$in = (HEAP32[$170 >> 2] | 0) == ($164 | 0) ? $170 + 4 | 0 : $170;
  } else {
   if ($53) {
    $$4 = $$2;
    $__w$2 = $__w$1;
   } else {
    HEAP8[$51 >> 0] = 1;
    HEAP8[$48 + 12 >> 0] = 0;
    $55 = $48 + 4 | 0;
    $56 = HEAP32[$55 >> 2] | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    HEAP32[$55 >> 2] = $57;
    if ($57) HEAP32[$57 + 8 >> 2] = $48;
    $60 = $48 + 8 | 0;
    HEAP32[$56 + 8 >> 2] = HEAP32[$60 >> 2];
    $63 = HEAP32[$60 >> 2] | 0;
    if ((HEAP32[$63 >> 2] | 0) == ($48 | 0)) HEAP32[$63 >> 2] = $56; else HEAP32[$63 + 4 >> 2] = $56;
    HEAP32[$56 >> 2] = $48;
    HEAP32[$60 >> 2] = $56;
    $67 = HEAP32[$__w$1 >> 2] | 0;
    $$4 = ($$2 | 0) == ($67 | 0) ? $__w$1 : $$2;
    $__w$2 = HEAP32[$67 + 4 >> 2] | 0;
   }
   $71 = HEAP32[$__w$2 >> 2] | 0;
   if ($71) if (!(HEAP8[$71 + 12 >> 0] | 0)) {
    $$lcssa = $__w$2;
    $$lcssa105 = $71;
    $__w$2$lcssa = $__w$2;
    label = 38;
    break;
   }
   $77 = HEAP32[$__w$2 + 4 >> 2] | 0;
   if ($77) if (!(HEAP8[$77 + 12 >> 0] | 0)) {
    $213 = $71;
    $214 = $__w$2;
    $97 = $77;
    $__w$2101 = $__w$2;
    label = 39;
    break;
   }
   HEAP8[$__w$2 + 12 >> 0] = 0;
   $84 = HEAP32[$__w$2 + 8 >> 2] | 0;
   if (($84 | 0) == ($$4 | 0)) {
    $$lcssa22 = $$4;
    label = 36;
    break;
   }
   if (!(HEAP8[$84 + 12 >> 0] | 0)) {
    $$lcssa22 = $84;
    label = 36;
    break;
   }
   $91 = HEAP32[$84 + 8 >> 2] | 0;
   $$2$be = $$4;
   $__w$1$be$in = (HEAP32[$91 >> 2] | 0) == ($84 | 0) ? $91 + 4 | 0 : $91;
  }
  $$2 = $$2$be;
  $__w$1 = HEAP32[$__w$1$be$in >> 2] | 0;
 }
 if ((label | 0) == 36) {
  HEAP8[$$lcssa22 + 12 >> 0] = 1;
  return;
 } else if ((label | 0) == 38) {
  $$pre = HEAP32[$__w$2$lcssa + 4 >> 2] | 0;
  if (!$$pre) {
   $101 = $$lcssa105;
   $105 = $$lcssa;
   $__w$2102 = $__w$2$lcssa;
   label = 40;
  } else {
   $213 = $$lcssa105;
   $214 = $$lcssa;
   $97 = $$pre;
   $__w$2101 = $__w$2$lcssa;
   label = 39;
  }
 } else if ((label | 0) == 64) {
  HEAP8[$$lcssa120 >> 0] = 1;
  return;
 } else if ((label | 0) == 67) if ($152) {
  $__w$4113 = $__w$4;
  label = 69;
 } else {
  $175 = $151;
  $__w$4112 = $__w$4;
  label = 68;
 }
 if ((label | 0) == 39) if (!(HEAP8[$97 + 12 >> 0] | 0)) {
  $121 = $97;
  $__w$3 = $__w$2101;
  label = 46;
 } else {
  $101 = $213;
  $105 = $214;
  $__w$2102 = $__w$2101;
  label = 40;
 } else if ((label | 0) == 68) if (!(HEAP8[$175 + 12 >> 0] | 0)) {
  $198 = $175;
  $__w$5 = $__w$4112;
  label = 75;
 } else {
  $__w$4113 = $__w$4112;
  label = 69;
 }
 if ((label | 0) == 40) {
  HEAP8[$101 + 12 >> 0] = 1;
  HEAP8[$__w$2102 + 12 >> 0] = 0;
  $103 = $101 + 4 | 0;
  $104 = HEAP32[$103 >> 2] | 0;
  HEAP32[$105 >> 2] = $104;
  if ($104) HEAP32[$104 + 8 >> 2] = $__w$2102;
  $108 = $__w$2102 + 8 | 0;
  HEAP32[$101 + 8 >> 2] = HEAP32[$108 >> 2];
  $111 = HEAP32[$108 >> 2] | 0;
  if ((HEAP32[$111 >> 2] | 0) == ($__w$2102 | 0)) HEAP32[$111 >> 2] = $101; else HEAP32[$111 + 4 >> 2] = $101;
  HEAP32[$103 >> 2] = $__w$2102;
  HEAP32[$108 >> 2] = $101;
  $121 = $__w$2102;
  $__w$3 = $101;
  label = 46;
 } else if ((label | 0) == 69) {
  $178 = $__w$4113 + 4 | 0;
  $179 = HEAP32[$178 >> 2] | 0;
  HEAP8[$179 + 12 >> 0] = 1;
  HEAP8[$__w$4113 + 12 >> 0] = 0;
  $182 = HEAP32[$179 >> 2] | 0;
  HEAP32[$178 >> 2] = $182;
  if ($182) HEAP32[$182 + 8 >> 2] = $__w$4113;
  $185 = $__w$4113 + 8 | 0;
  HEAP32[$179 + 8 >> 2] = HEAP32[$185 >> 2];
  $188 = HEAP32[$185 >> 2] | 0;
  if ((HEAP32[$188 >> 2] | 0) == ($__w$4113 | 0)) HEAP32[$188 >> 2] = $179; else HEAP32[$188 + 4 >> 2] = $179;
  HEAP32[$179 >> 2] = $__w$4113;
  HEAP32[$185 >> 2] = $179;
  $198 = $__w$4113;
  $__w$5 = $179;
  label = 75;
 }
 if ((label | 0) == 46) {
  $116 = HEAP32[$__w$3 + 8 >> 2] | 0;
  $117 = $116 + 12 | 0;
  HEAP8[$__w$3 + 12 >> 0] = HEAP8[$117 >> 0] | 0;
  HEAP8[$117 >> 0] = 1;
  HEAP8[$121 + 12 >> 0] = 1;
  $122 = $116 + 4 | 0;
  $123 = HEAP32[$122 >> 2] | 0;
  $124 = HEAP32[$123 >> 2] | 0;
  HEAP32[$122 >> 2] = $124;
  if ($124) HEAP32[$124 + 8 >> 2] = $116;
  $127 = $116 + 8 | 0;
  HEAP32[$123 + 8 >> 2] = HEAP32[$127 >> 2];
  $130 = HEAP32[$127 >> 2] | 0;
  if ((HEAP32[$130 >> 2] | 0) == ($116 | 0)) HEAP32[$130 >> 2] = $123; else HEAP32[$130 + 4 >> 2] = $123;
  HEAP32[$123 >> 2] = $116;
  HEAP32[$127 >> 2] = $123;
  return;
 } else if ((label | 0) == 75) {
  $193 = HEAP32[$__w$5 + 8 >> 2] | 0;
  $194 = $193 + 12 | 0;
  HEAP8[$__w$5 + 12 >> 0] = HEAP8[$194 >> 0] | 0;
  HEAP8[$194 >> 0] = 1;
  HEAP8[$198 + 12 >> 0] = 1;
  $199 = HEAP32[$193 >> 2] | 0;
  $200 = $199 + 4 | 0;
  $201 = HEAP32[$200 >> 2] | 0;
  HEAP32[$193 >> 2] = $201;
  if ($201) HEAP32[$201 + 8 >> 2] = $193;
  $204 = $193 + 8 | 0;
  HEAP32[$199 + 8 >> 2] = HEAP32[$204 >> 2];
  $207 = HEAP32[$204 >> 2] | 0;
  if ((HEAP32[$207 >> 2] | 0) == ($193 | 0)) HEAP32[$207 >> 2] = $199; else HEAP32[$207 + 4 >> 2] = $199;
  HEAP32[$200 >> 2] = $193;
  HEAP32[$204 >> 2] = $199;
  return;
 }
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $__b, $__e, $__iob, $__err, $__tm, $__fmtb, $__fmte) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 $__fmtb = $__fmtb | 0;
 $__fmte = $__fmte | 0;
 var $$0$i$i = 0, $$0$i$i26 = 0, $$0$ph$be = 0, $$0$ph86 = 0, $$0$pn = 0, $$2 = 0, $$2$lcssa = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$lcssa = 0, $$lcssa94 = 0, $$lcssa95 = 0, $$pre$i$i$i17 = 0, $$pre$i$i$i8 = 0, $$pre$i2$i$i21 = 0, $$pre$i2$i$i2139 = 0, $$pre$i2$i$i2140 = 0, $0 = 0, $1 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $12 = 0, $129 = 0, $136 = 0, $137 = 0, $138 = 0, $151 = 0, $158 = 0, $178 = 0, $179 = 0, $180 = 0, $194 = 0, $195 = 0, $196 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $38 = 0, $4 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $62 = 0, $63 = 0, $64 = 0, $67 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $79 = 0, $9 = 0, $96 = 0, $97 = 0, $99 = 0, $__cmd$0 = 0, $__opt$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy1 = sp + 16 | 0;
 $$byval_copy = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 $3 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $3;
 __THREW__ = 0;
 $4 = invoke_iii(22, $0 | 0, 11164) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
  ___resumeException($38 | 0);
 }
 __ZNSt3__114__shared_count16__release_sharedEv($3) | 0;
 HEAP32[$__err >> 2] = 0;
 $7 = $4 + 8 | 0;
 $9 = HEAP32[$__b >> 2] | 0;
 L4 : do if (($__fmtb | 0) == ($__fmte | 0)) $$pre$i$i$i8 = $9; else {
  $$0$ph86 = $__fmtb;
  $11 = $9;
  L5 : while (1) {
   $12 = $11;
   if (!$11) {
    $24 = 0;
    $63 = $12;
   } else if ((HEAP32[$11 + 12 >> 2] | 0) == (HEAP32[$11 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$11 >> 2] | 0) + 36 >> 2] & 127]($11) | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $24 = 0;
    $63 = 0;
   } else {
    $24 = $11;
    $63 = $12;
   } else {
    $24 = $11;
    $63 = $12;
   }
   $23 = ($24 | 0) == 0;
   $25 = HEAP32[$__e >> 2] | 0;
   $27 = $25;
   do if (!$25) {
    $194 = $27;
    label = 12;
   } else {
    if ((HEAP32[$25 + 12 >> 2] | 0) == (HEAP32[$25 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$25 >> 2] | 0) + 36 >> 2] & 127]($25) | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $194 = 0;
     label = 12;
     break;
    }
    if ($23) {
     $195 = $25;
     $64 = $27;
    } else {
     $$lcssa = $24;
     label = 13;
     break L5;
    }
   } while (0);
   if ((label | 0) == 12) {
    label = 0;
    if ($23) {
     $$lcssa = $24;
     label = 13;
     break;
    } else {
     $195 = 0;
     $64 = $194;
    }
   }
   L21 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$$0$ph86 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
    $46 = $$0$ph86 + 1 | 0;
    if (($46 | 0) == ($__fmte | 0)) {
     $$lcssa94 = $24;
     label = 17;
     break L5;
    }
    $52 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$46 >> 0] | 0, 0) | 0;
    switch ($52 << 24 >> 24) {
    case 48:
    case 69:
     {
      $53 = $$0$ph86 + 2 | 0;
      if (($53 | 0) == ($__fmte | 0)) {
       $$lcssa95 = $24;
       label = 20;
       break L5;
      }
      $67 = $46;
      $__cmd$0 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, HEAP8[$53 >> 0] | 0, 0) | 0;
      $__opt$0 = $52;
      break;
     }
    default:
     {
      $67 = $$0$ph86;
      $__cmd$0 = $52;
      $__opt$0 = 0;
     }
    }
    $62 = HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] | 0;
    HEAP32[$1 >> 2] = $63;
    HEAP32[$2 >> 2] = $64;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$__b >> 2] = FUNCTION_TABLE_iiiiiiiii[$62 & 15]($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $__cmd$0, $__opt$0) | 0;
    $$0$ph$be = $67 + 2 | 0;
   } else {
    $71 = HEAP8[$$0$ph86 >> 0] | 0;
    if ($71 << 24 >> 24 > -1) {
     $73 = HEAP32[$7 >> 2] | 0;
     if (HEAP16[$73 + ($71 << 24 >> 24 << 1) >> 1] & 8192) {
      $$0$pn = $$0$ph86;
      while (1) {
       $$2 = $$0$pn + 1 | 0;
       if (($$2 | 0) == ($__fmte | 0)) {
        $$2$lcssa = $__fmte;
        break;
       }
       $79 = HEAP8[$$2 >> 0] | 0;
       if ($79 << 24 >> 24 <= -1) {
        $$2$lcssa = $$2;
        break;
       }
       if (!(HEAP16[$73 + ($79 << 24 >> 24 << 1) >> 1] & 8192)) {
        $$2$lcssa = $$2;
        break;
       } else $$0$pn = $$2;
      }
      $$pre$i$i$i17 = $24;
      $$pre$i2$i$i21 = $195;
      $99 = $195;
      while (1) {
       if (!$$pre$i$i$i17) $97 = 0; else if ((HEAP32[$$pre$i$i$i17 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i17 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i17 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i17) | 0) == -1) {
        HEAP32[$__b >> 2] = 0;
        $97 = 0;
       } else $97 = $$pre$i$i$i17; else $97 = $$pre$i$i$i17;
       $96 = ($97 | 0) == 0;
       do if (!$99) {
        $$pre$i2$i$i2140 = $$pre$i2$i$i21;
        label = 39;
       } else {
        if ((HEAP32[$99 + 12 >> 2] | 0) != (HEAP32[$99 + 16 >> 2] | 0)) if ($96) {
         $$pre$i2$i$i2139 = $$pre$i2$i$i21;
         $196 = $99;
         break;
        } else {
         $$0$ph$be = $$2$lcssa;
         break L21;
        }
        if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$99 >> 2] | 0) + 36 >> 2] & 127]($99) | 0) == -1) {
         HEAP32[$__e >> 2] = 0;
         $$pre$i2$i$i2140 = 0;
         label = 39;
         break;
        } else if ($96 ^ ($$pre$i2$i$i21 | 0) == 0) {
         $$pre$i2$i$i2139 = $$pre$i2$i$i21;
         $196 = $$pre$i2$i$i21;
         break;
        } else {
         $$0$ph$be = $$2$lcssa;
         break L21;
        }
       } while (0);
       if ((label | 0) == 39) {
        label = 0;
        if ($96) {
         $$0$ph$be = $$2$lcssa;
         break L21;
        } else {
         $$pre$i2$i$i2139 = $$pre$i2$i$i2140;
         $196 = 0;
        }
       }
       $111 = $97 + 12 | 0;
       $112 = HEAP32[$111 >> 2] | 0;
       $113 = $97 + 16 | 0;
       if (($112 | 0) == (HEAP32[$113 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$97 >> 2] | 0) + 36 >> 2] & 127]($97) | 0; else $$0$i$i = HEAPU8[$112 >> 0] | 0;
       if (($$0$i$i & 255) << 24 >> 24 <= -1) {
        $$0$ph$be = $$2$lcssa;
        break L21;
       }
       if (!(HEAP16[(HEAP32[$7 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
        $$0$ph$be = $$2$lcssa;
        break L21;
       }
       $129 = HEAP32[$111 >> 2] | 0;
       if (($129 | 0) == (HEAP32[$113 >> 2] | 0)) {
        FUNCTION_TABLE_ii[HEAP32[(HEAP32[$97 >> 2] | 0) + 40 >> 2] & 127]($97) | 0;
        $$pre$i$i$i17 = $97;
        $$pre$i2$i$i21 = $$pre$i2$i$i2139;
        $99 = $196;
        continue;
       } else {
        HEAP32[$111 >> 2] = $129 + 1;
        $$pre$i$i$i17 = $97;
        $$pre$i2$i$i21 = $$pre$i2$i$i2139;
        $99 = $196;
        continue;
       }
      }
     }
    }
    $136 = $24 + 12 | 0;
    $137 = HEAP32[$136 >> 2] | 0;
    $138 = $24 + 16 | 0;
    if (($137 | 0) == (HEAP32[$138 >> 2] | 0)) $$0$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 36 >> 2] & 127]($24) | 0; else $$0$i$i26 = HEAPU8[$137 >> 0] | 0;
    $151 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $$0$i$i26 & 255) | 0;
    if ($151 << 24 >> 24 != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, HEAP8[$$0$ph86 >> 0] | 0) | 0) << 24 >> 24) {
     label = 57;
     break L5;
    }
    $158 = HEAP32[$136 >> 2] | 0;
    if (($158 | 0) == (HEAP32[$138 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 40 >> 2] & 127]($24) | 0; else HEAP32[$136 >> 2] = $158 + 1;
    $$0$ph$be = $$0$ph86 + 1 | 0;
   } while (0);
   $70 = HEAP32[$__b >> 2] | 0;
   if (($$0$ph$be | 0) != ($__fmte | 0) & (HEAP32[$__err >> 2] | 0) == 0) {
    $$0$ph86 = $$0$ph$be;
    $11 = $70;
   } else {
    $$pre$i$i$i8 = $70;
    break L4;
   }
  }
  if ((label | 0) == 13) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = $$lcssa;
   break;
  } else if ((label | 0) == 17) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = $$lcssa94;
   break;
  } else if ((label | 0) == 20) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = $$lcssa95;
   break;
  } else if ((label | 0) == 57) {
   HEAP32[$__err >> 2] = 4;
   $$pre$i$i$i8 = HEAP32[$__b >> 2] | 0;
   break;
  }
 } while (0);
 if (!$$pre$i$i$i8) $179 = 0; else if ((HEAP32[$$pre$i$i$i8 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i8 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i8 >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i8) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $179 = 0;
 } else $179 = $$pre$i$i$i8; else $179 = $$pre$i$i$i8;
 $178 = ($179 | 0) == 0;
 $180 = HEAP32[$__e >> 2] | 0;
 do if (!$180) label = 67; else {
  if ((HEAP32[$180 + 12 >> 2] | 0) == (HEAP32[$180 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$180 >> 2] | 0) + 36 >> 2] & 127]($180) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 67;
   break;
  }
  if (!$178) label = 68;
 } while (0);
 if ((label | 0) == 67) if ($178) label = 68;
 if ((label | 0) == 68) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 STACKTOP = sp;
 return $179 | 0;
}

function __ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$pre$phi39Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $11 = 0, $111 = 0, $113 = 0, $119 = 0, $12 = 0, $13 = 0, $130 = 0, $132 = 0, $154 = 0, $156 = 0, $16 = 0, $170 = 0, $172 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $35 = 0, $4 = 0, $46 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $70 = 0, $72 = 0, $8 = 0, $86 = 0, $88 = 0, $9 = 0, $96 = 0, $97 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp;
 $1 = sp + 16 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 80 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 108 | 0;
 $7 = sp + 56 | 0;
 $8 = sp + 52 | 0;
 $9 = sp + 28 | 0;
 $10 = sp + 4 | 0;
 $11 = sp + 68 | 0;
 do if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10772) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) {
    $29 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($29);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$1 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
    HEAP32[$1 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $$pre$phiZ2D = $12;
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $35 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $35;
   HEAP8[$__pat + 1 >> 0] = $35 >> 8;
   HEAP8[$__pat + 2 >> 0] = $35 >> 16;
   HEAP8[$__pat + 3 >> 0] = $35 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $46 = __THREW__;
   __THREW__ = 0;
   if ($46 & 1) {
    $48 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($48);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$3 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
    $$pre$phiZ2D = $12;
    break;
   }
  } while (0);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $70 = __THREW__;
  __THREW__ = 0;
  if ($70 & 1) {
   $72 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($72);
  };
  HEAP32[$__grp >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $86 = __THREW__;
  __THREW__ = 0;
  if ($86 & 1) {
   $88 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($88);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
   break;
  }
 } else {
  $96 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10708) | 0;
  $97 = HEAP32[$96 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$97 + 44 >> 2] & 127]($6, $96);
   $100 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $100;
   HEAP8[$__pat + 1 >> 0] = $100 >> 8;
   HEAP8[$__pat + 2 >> 0] = $100 >> 16;
   HEAP8[$__pat + 3 >> 0] = $100 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 32 >> 2] & 127]($7, $96);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $111 = __THREW__;
   __THREW__ = 0;
   if ($111 & 1) {
    $113 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($113);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$7 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$7 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
    $$pre$phi39Z2D = $96;
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$97 + 40 >> 2] & 127]($8, $96);
   $119 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $119;
   HEAP8[$__pat + 1 >> 0] = $119 >> 8;
   HEAP8[$__pat + 2 >> 0] = $119 >> 16;
   HEAP8[$__pat + 3 >> 0] = $119 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$96 >> 2] | 0) + 28 >> 2] & 127]($9, $96);
   if (!(HEAP8[$__sn >> 0] & 1)) {
    HEAP8[$__sn + 1 >> 0] = 0;
    HEAP8[$__sn >> 0] = 0;
   } else {
    HEAP8[HEAP32[$__sn + 8 >> 2] >> 0] = 0;
    HEAP32[$__sn + 4 >> 2] = 0;
   }
   __THREW__ = 0;
   invoke_vii(45, $__sn | 0, 0);
   $130 = __THREW__;
   __THREW__ = 0;
   if ($130 & 1) {
    $132 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($132);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$9 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
    $$pre$phi39Z2D = $96;
    break;
   }
  } while (0);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 12 >> 2] & 127]($96) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 16 >> 2] & 127]($96) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi39Z2D >> 2] | 0) + 20 >> 2] & 127]($10, $96);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $154 = __THREW__;
  __THREW__ = 0;
  if ($154 & 1) {
   $156 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($156);
  };
  HEAP32[$__grp >> 2] = HEAP32[$10 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi39Z2D >> 2] | 0) + 24 >> 2] & 127]($11, $96);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $170 = __THREW__;
  __THREW__ = 0;
  if ($170 & 1) {
   $172 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($172);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$11 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   HEAP32[$11 >> 2] = 0;
   HEAP32[$11 + 4 >> 2] = 0;
   HEAP32[$11 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$96 >> 2] | 0) + 36 >> 2] & 127]($96) | 0;
   break;
  }
 } while (0);
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($__intl, $__neg, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__intl = $__intl | 0;
 $__neg = $__neg | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $107 = 0, $109 = 0, $11 = 0, $115 = 0, $12 = 0, $125 = 0, $127 = 0, $13 = 0, $149 = 0, $151 = 0, $16 = 0, $164 = 0, $166 = 0, $2 = 0, $26 = 0, $28 = 0, $3 = 0, $34 = 0, $4 = 0, $44 = 0, $46 = 0, $5 = 0, $6 = 0, $68 = 0, $7 = 0, $70 = 0, $8 = 0, $83 = 0, $85 = 0, $9 = 0, $93 = 0, $94 = 0, $97 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp;
 $1 = sp + 16 | 0;
 $2 = sp + 92 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 80 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 108 | 0;
 $7 = sp + 56 | 0;
 $8 = sp + 52 | 0;
 $9 = sp + 28 | 0;
 $10 = sp + 4 | 0;
 $11 = sp + 68 | 0;
 do if ($__intl) {
  $12 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10900) | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$13 + 44 >> 2] & 127]($0, $12);
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP8[$__pat >> 0] = $16;
   HEAP8[$__pat + 1 >> 0] = $16 >> 8;
   HEAP8[$__pat + 2 >> 0] = $16 >> 16;
   HEAP8[$__pat + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 127]($1, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(74, $__sn | 0, 0);
   $26 = __THREW__;
   __THREW__ = 0;
   if ($26 & 1) {
    $28 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($28);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$1 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
    HEAP32[$1 >> 2] = 0;
    HEAP32[$1 + 4 >> 2] = 0;
    HEAP32[$1 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$13 + 40 >> 2] & 127]($2, $12);
   $34 = HEAP32[$2 >> 2] | 0;
   HEAP8[$__pat >> 0] = $34;
   HEAP8[$__pat + 1 >> 0] = $34 >> 8;
   HEAP8[$__pat + 2 >> 0] = $34 >> 16;
   HEAP8[$__pat + 3 >> 0] = $34 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 127]($3, $12);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(74, $__sn | 0, 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if ($44 & 1) {
    $46 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($46);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$3 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
    break;
   }
  } while (0);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 127]($4, $12);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  };
  HEAP32[$__grp >> 2] = HEAP32[$4 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 127]($5, $12);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__sym | 0, 0);
  $83 = __THREW__;
  __THREW__ = 0;
  if ($83 & 1) {
   $85 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($85);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$5 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($5);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
   break;
  }
 } else {
  $93 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10836) | 0;
  $94 = HEAP32[$93 >> 2] | 0;
  do if ($__neg) {
   FUNCTION_TABLE_vii[HEAP32[$94 + 44 >> 2] & 127]($6, $93);
   $97 = HEAP32[$6 >> 2] | 0;
   HEAP8[$__pat >> 0] = $97;
   HEAP8[$__pat + 1 >> 0] = $97 >> 8;
   HEAP8[$__pat + 2 >> 0] = $97 >> 16;
   HEAP8[$__pat + 3 >> 0] = $97 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 32 >> 2] & 127]($7, $93);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(74, $__sn | 0, 0);
   $107 = __THREW__;
   __THREW__ = 0;
   if ($107 & 1) {
    $109 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($109);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$7 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    HEAP32[$7 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
    break;
   }
  } else {
   FUNCTION_TABLE_vii[HEAP32[$94 + 40 >> 2] & 127]($8, $93);
   $115 = HEAP32[$8 >> 2] | 0;
   HEAP8[$__pat >> 0] = $115;
   HEAP8[$__pat + 1 >> 0] = $115 >> 8;
   HEAP8[$__pat + 2 >> 0] = $115 >> 16;
   HEAP8[$__pat + 3 >> 0] = $115 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 28 >> 2] & 127]($9, $93);
   if (!(HEAP8[$__sn >> 0] & 1)) HEAP8[$__sn >> 0] = 0; else HEAP32[HEAP32[$__sn + 8 >> 2] >> 2] = 0;
   HEAP32[$__sn + 4 >> 2] = 0;
   __THREW__ = 0;
   invoke_vii(74, $__sn | 0, 0);
   $125 = __THREW__;
   __THREW__ = 0;
   if ($125 & 1) {
    $127 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($127);
   } else {
    HEAP32[$__sn >> 2] = HEAP32[$9 >> 2];
    HEAP32[$__sn + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$__sn + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    HEAP32[$9 >> 2] = 0;
    HEAP32[$9 + 4 >> 2] = 0;
    HEAP32[$9 + 8 >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
    break;
   }
  } while (0);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 12 >> 2] & 127]($93) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 16 >> 2] & 127]($93) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 20 >> 2] & 127]($10, $93);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $149 = __THREW__;
  __THREW__ = 0;
  if ($149 & 1) {
   $151 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($151);
  };
  HEAP32[$__grp >> 2] = HEAP32[$10 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  HEAP32[$10 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$93 >> 2] | 0) + 24 >> 2] & 127]($11, $93);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__sym | 0, 0);
  $164 = __THREW__;
  __THREW__ = 0;
  if ($164 & 1) {
   $166 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($166);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$11 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   HEAP32[$11 >> 2] = 0;
   HEAP32[$11 + 4 >> 2] = 0;
   HEAP32[$11 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] & 127]($93) | 0;
   break;
  }
 } while (0);
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$$027 = 0, $$0$i$i$lcssa = 0, $$0$i$i35 = 0, $$0$i$i9$lcssa = 0, $$0$i$i958 = 0, $$01$i$i56 = 0, $$062 = 0, $$2 = 0, $$lcssa = 0, $$lcssa34 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $124 = 0, $126 = 0, $127 = 0, $129 = 0, $13 = 0, $138 = 0, $142 = 0, $143 = 0, $147 = 0, $149 = 0, $151 = 0, $153 = 0, $158 = 0, $160 = 0, $164 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $173 = 0, $174 = 0, $18 = 0, $2 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $65 = 0, $7 = 0, $71 = 0, $77 = 0, $8 = 0, $82 = 0, $83 = 0, $87 = 0, $89 = 0, $9 = 0, $95 = 0, $97 = 0, $98 = 0, $__d$0$lcssa = 0, $__d$0$lcssa26 = 0, $__d$036 = 0, $__d$142 = 0, $__d$2 = 0, $__d$351 = 0, $__f$043 = 0, $__f$146 = 0, $__gl$0$ph = 0, $__gl$054 = 0, $__gl$1 = 0, $__ig$053 = 0, $__ig$1 = 0, $__ng$052 = 0, $__ng$1 = 0, $__p$061 = 0, $scevgep29 = 0, $umax28 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 4 | 0;
 $1 = $__sn + 8 | 0;
 $2 = $__sn + 1 | 0;
 $3 = $__sym + 4 | 0;
 $5 = ($__flags & 512 | 0) == 0;
 $6 = $__sym + 8 | 0;
 $7 = $__sym + 1 | 0;
 $8 = $__ct + 8 | 0;
 $9 = ($__fd | 0) > 0;
 $10 = $__grp + 4 | 0;
 $11 = $__grp + 8 | 0;
 $12 = $__grp + 1 | 0;
 $13 = $__fd + 1 | 0;
 $17 = -2 - $__fd - (($__fd | 0) < 0 ? ~$__fd : -1) | 0;
 $18 = ($__fd | 0) > 0;
 $$062 = $__db;
 $__p$061 = 0;
 while (1) {
  switch (HEAP8[$__pat + $__p$061 >> 0] | 0) {
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$062;
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 32) | 0;
    $28 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $28 + 1;
    HEAP8[$28 >> 0] = $27;
    $$2 = $$062;
    break;
   }
  case 3:
   {
    $30 = HEAP8[$__sn >> 0] | 0;
    $32 = ($30 & 1) == 0;
    if (!(($32 ? ($30 & 255) >>> 1 : HEAP32[$0 >> 2] | 0) | 0)) $$2 = $$062; else {
     $40 = HEAP8[($32 ? $2 : HEAP32[$1 >> 2] | 0) >> 0] | 0;
     $41 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $41 + 1;
     HEAP8[$41 >> 0] = $40;
     $$2 = $$062;
    }
    break;
   }
  case 2:
   {
    $43 = HEAP8[$__sym >> 0] | 0;
    $45 = ($43 & 1) == 0;
    $49 = $45 ? ($43 & 255) >>> 1 : HEAP32[$3 >> 2] | 0;
    if ($5 | ($49 | 0) == 0) $$2 = $$062; else {
     $52 = $45 ? $7 : HEAP32[$6 >> 2] | 0;
     $53 = $52 + $49 | 0;
     $54 = HEAP32[$__me >> 2] | 0;
     if (!$49) $$0$i$i9$lcssa = $54; else {
      $$0$i$i958 = $54;
      $57 = $52;
      while (1) {
       HEAP8[$$0$i$i958 >> 0] = HEAP8[$57 >> 0] | 0;
       $57 = $57 + 1 | 0;
       $59 = $$0$i$i958 + 1 | 0;
       if (($57 | 0) == ($53 | 0)) {
        $$0$i$i9$lcssa = $59;
        break;
       } else $$0$i$i958 = $59;
      }
     }
     HEAP32[$__me >> 2] = $$0$i$i9$lcssa;
     $$2 = $$062;
    }
    break;
   }
  case 4:
   {
    $61 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$062 + 1 | 0 : $$062;
    $$$027 = $$$0;
    $63 = HEAP32[$8 >> 2] | 0;
    L15 : do if ($$$0 >>> 0 < $__de >>> 0) {
     $__d$036 = $$$0;
     while (1) {
      $65 = HEAP8[$__d$036 >> 0] | 0;
      if ($65 << 24 >> 24 <= -1) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      if (!(HEAP16[$63 + ($65 << 24 >> 24 << 1) >> 1] & 2048)) {
       $__d$0$lcssa = $__d$036;
       break L15;
      }
      $71 = $__d$036 + 1 | 0;
      if ($71 >>> 0 < $__de >>> 0) $__d$036 = $71; else {
       $__d$0$lcssa = $71;
       break;
      }
     }
    } else $__d$0$lcssa = $$$0; while (0);
    $__d$0$lcssa26 = $__d$0$lcssa;
    if ($9) {
     $77 = -2 - $__d$0$lcssa26 - ~($__d$0$lcssa26 >>> 0 > $$$027 >>> 0 ? $$$027 : $__d$0$lcssa26) | 0;
     $umax28 = $17 >>> 0 > $77 >>> 0 ? $17 : $77;
     if ($__d$0$lcssa >>> 0 > $$$0 >>> 0 & $18) {
      $__d$142 = $__d$0$lcssa;
      $__f$043 = $__fd;
      while (1) {
       $__d$142 = $__d$142 + -1 | 0;
       $82 = HEAP8[$__d$142 >> 0] | 0;
       $83 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $83 + 1;
       HEAP8[$83 >> 0] = $82;
       $87 = ($__f$043 | 0) > 1;
       if (!($__d$142 >>> 0 > $$$0 >>> 0 & $87)) {
        $$lcssa = $87;
        break;
       } else $__f$043 = $__f$043 + -1 | 0;
      }
     } else $$lcssa = $18;
     $89 = $13 + $umax28 | 0;
     $scevgep29 = $__d$0$lcssa + ($umax28 + 1) | 0;
     if ($$lcssa) $97 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0; else $97 = 0;
     $95 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $95 + 1;
     if (($89 | 0) > 0) {
      $98 = $95;
      $__f$146 = $89;
      while (1) {
       HEAP8[$98 >> 0] = $97;
       $101 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $101 + 1;
       if (($__f$146 | 0) > 1) {
        $98 = $101;
        $__f$146 = $__f$146 + -1 | 0;
       } else {
        $$lcssa34 = $101;
        break;
       }
      }
     } else $$lcssa34 = $95;
     HEAP8[$$lcssa34 >> 0] = $__dp;
     $__d$2 = $scevgep29;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $107 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 28 >> 2] & 63]($__ct, 48) | 0;
     $108 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $108 + 1;
     HEAP8[$108 >> 0] = $107;
    } else {
     $110 = HEAP8[$__grp >> 0] | 0;
     $112 = ($110 & 1) == 0;
     if (!(($112 ? ($110 & 255) >>> 1 : HEAP32[$10 >> 2] | 0) | 0)) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($112 ? $12 : HEAP32[$11 >> 2] | 0) >> 0] | 0;
     if (($__d$2 | 0) != ($$$0 | 0)) {
      $__d$351 = $__d$2;
      $__gl$054 = $__gl$0$ph;
      $__ig$053 = 0;
      $__ng$052 = 0;
      while (1) {
       if (($__ng$052 | 0) == ($__gl$054 | 0)) {
        $124 = HEAP32[$__me >> 2] | 0;
        HEAP32[$__me >> 2] = $124 + 1;
        HEAP8[$124 >> 0] = $__ts;
        $126 = $__ig$053 + 1 | 0;
        $127 = HEAP8[$__grp >> 0] | 0;
        $129 = ($127 & 1) == 0;
        if ($126 >>> 0 < ($129 ? ($127 & 255) >>> 1 : HEAP32[$10 >> 2] | 0) >>> 0) {
         $138 = HEAP8[($129 ? $12 : HEAP32[$11 >> 2] | 0) + $126 >> 0] | 0;
         $__gl$1 = $138 << 24 >> 24 == 127 ? -1 : $138 << 24 >> 24;
         $__ig$1 = $126;
         $__ng$1 = 0;
        } else {
         $__gl$1 = $__ng$052;
         $__ig$1 = $126;
         $__ng$1 = 0;
        }
       } else {
        $__gl$1 = $__gl$054;
        $__ig$1 = $__ig$053;
        $__ng$1 = $__ng$052;
       }
       $__d$351 = $__d$351 + -1 | 0;
       $142 = HEAP8[$__d$351 >> 0] | 0;
       $143 = HEAP32[$__me >> 2] | 0;
       HEAP32[$__me >> 2] = $143 + 1;
       HEAP8[$143 >> 0] = $142;
       if (($__d$351 | 0) == ($$$0 | 0)) break; else {
        $__gl$054 = $__gl$1;
        $__ig$053 = $__ig$1;
        $__ng$052 = $__ng$1 + 1 | 0;
       }
      }
     }
    }
    $147 = HEAP32[$__me >> 2] | 0;
    if (($61 | 0) == ($147 | 0)) $$2 = $$$0; else {
     $149 = $147 + -1 | 0;
     if ($61 >>> 0 < $149 >>> 0) {
      $$01$i$i56 = $61;
      $153 = $149;
      do {
       $151 = HEAP8[$$01$i$i56 >> 0] | 0;
       HEAP8[$$01$i$i56 >> 0] = HEAP8[$153 >> 0] | 0;
       HEAP8[$153 >> 0] = $151;
       $$01$i$i56 = $$01$i$i56 + 1 | 0;
       $153 = $153 + -1 | 0;
      } while ($$01$i$i56 >>> 0 < $153 >>> 0);
      $$2 = $$$0;
     } else $$2 = $$$0;
    }
    break;
   }
  default:
   $$2 = $$062;
  }
  $__p$061 = $__p$061 + 1 | 0;
  if (($__p$061 | 0) == 4) break; else $$062 = $$2;
 }
 $158 = HEAP8[$__sn >> 0] | 0;
 $160 = ($158 & 1) == 0;
 $164 = $160 ? ($158 & 255) >>> 1 : HEAP32[$0 >> 2] | 0;
 if ($164 >>> 0 > 1) {
  $167 = $160 ? $2 : HEAP32[$1 >> 2] | 0;
  $168 = $167 + $164 | 0;
  $169 = HEAP32[$__me >> 2] | 0;
  if (($164 | 0) == 1) $$0$i$i$lcssa = $169; else {
   $$0$i$i35 = $169;
   $173 = $167 + 1 | 0;
   while (1) {
    HEAP8[$$0$i$i35 >> 0] = HEAP8[$173 >> 0] | 0;
    $174 = $$0$i$i35 + 1 | 0;
    $173 = $173 + 1 | 0;
    if (($173 | 0) == ($168 | 0)) {
     $$0$i$i$lcssa = $174;
     break;
    } else $$0$i$i35 = $174;
   }
  }
  HEAP32[$__me >> 2] = $$0$i$i$lcssa;
 }
 switch ($__flags & 176 | 0) {
 case 32:
  {
   HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$__mi >> 2] = $__mb;
 }
 return;
}

function __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($this, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $import_callback_context) {
 $this = $this | 0;
 $alloc = $alloc | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $import_callback_context = $import_callback_context | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01 = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val19$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$lcssa$i$i = 0, $$sroa$2 = 0, $0 = 0, $1 = 0, $104 = 0, $107 = 0, $13 = 0, $14 = 0, $16 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $64 = 0, $66 = 0, $67 = 0, $72 = 0, $75 = 0, $79 = 0, $88 = 0, $93 = 0, $95 = 0, $99 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 28 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $$sroa$2 = sp;
 HEAP32[$this >> 2] = ~~$gc_min_objects >>> 0;
 HEAPF64[$this + 8 >> 3] = $gc_growth_trigger;
 $4 = $this + 16 | 0;
 HEAP8[$4 >> 0] = 0;
 $5 = $this + 20 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = 0;
 HEAP32[$5 + 16 >> 2] = 0;
 $6 = $this + 56 | 0;
 HEAP32[$6 >> 2] = 3580;
 HEAP32[$this + 60 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = $max_stack;
 HEAP32[$this + 68 >> 2] = 0;
 HEAP32[$this + 72 >> 2] = 0;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 80 >> 2] = $alloc;
 $13 = $this + 84 | 0;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 54539, 13);
 $14 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($14 & 1) {
  $62 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $62;
 } else {
  $16 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($alloc, $1) | 0;
  L4 : do if (($16 | 0) == ($alloc + 4 | 0)) {
   __THREW__ = 0;
   $21 = invoke_ii(67, 12) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   do if ($22 & 1) label = 18; else {
    __THREW__ = 0;
    invoke_vii(40, $21 | 0, $1 | 0);
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     $29 = ___cxa_find_matching_catch() | 0;
     $30 = tempRet0;
     __ZdlPv($21);
     $eh$lpad$body$index2Z2D = $30;
     $eh$lpad$body$indexZ2D = $29;
     break;
    }
    __THREW__ = 0;
    $26 = invoke_iii(23, $alloc | 0, $1 | 0) | 0;
    $27 = __THREW__;
    __THREW__ = 0;
    if ($27 & 1) label = 18; else {
     HEAP32[$26 >> 2] = $21;
     $$0$i = $21;
     break L4;
    }
   } while (0);
   if ((label | 0) == 18) {
    $64 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index2Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $64;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$0 = $eh$lpad$body$index2Z2D;
   $$01 = $eh$lpad$body$indexZ2D;
   break L1;
  } else $$0$i = HEAP32[$16 + 28 >> 2] | 0; while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  HEAP32[$13 >> 2] = $$0$i;
  $31 = $this + 88 | 0;
  HEAP32[$this + 92 >> 2] = 0;
  HEAP32[$this + 96 >> 2] = 0;
  $34 = $this + 92 | 0;
  HEAP32[$31 >> 2] = $34;
  $35 = $this + 100 | 0;
  HEAP32[$this + 104 >> 2] = 0;
  HEAP32[$this + 108 >> 2] = 0;
  $38 = $this + 104 | 0;
  HEAP32[$35 >> 2] = $38;
  $39 = HEAP32[$ext_vars >> 2] | 0;
  $40 = $ext_vars + 4 | 0;
  if (($39 | 0) == ($40 | 0)) {
   $58 = $this + 112 | 0;
   HEAP32[$58 >> 2] = $import_callback;
   $59 = $this + 116 | 0;
   HEAP32[$59 >> 2] = $import_callback_context;
   $60 = $this + 40 | 0;
   HEAP32[$60 >> 2] = 0;
   $61 = $this + 44 | 0;
   HEAP32[$61 >> 2] = HEAP32[$$sroa$2 >> 2];
   HEAP32[$61 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
   HEAP32[$61 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
   STACKTOP = sp;
   return;
  }
  $42 = $38;
  $44 = $39;
  $48 = $39;
  while (1) {
   HEAP32[$0 >> 2] = $42;
   __THREW__ = 0;
   HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
   invoke_iiii(37, $35 | 0, $$byval_copy | 0, $44 + 16 | 0) | 0;
   $45 = __THREW__;
   __THREW__ = 0;
   if ($45 & 1) {
    label = 20;
    break;
   }
   $49 = HEAP32[$48 + 4 >> 2] | 0;
   if (!$49) {
    $$0$i$i$i$i$i = $48;
    while (1) {
     $54 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$54 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $54;
      break;
     } else $$0$i$i$i$i$i = $54;
    }
   } else {
    $$0$i$i$i$i$i$i = $49;
    while (1) {
     $51 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$51) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $51;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($40 | 0)) {
    label = 16;
    break;
   } else {
    $44 = $$01$i$i$i$i$i;
    $48 = $$01$i$i$i$i$i;
   }
  }
  if ((label | 0) == 16) {
   $58 = $this + 112 | 0;
   HEAP32[$58 >> 2] = $import_callback;
   $59 = $this + 116 | 0;
   HEAP32[$59 >> 2] = $import_callback_context;
   $60 = $this + 40 | 0;
   HEAP32[$60 >> 2] = 0;
   $61 = $this + 44 | 0;
   HEAP32[$61 >> 2] = HEAP32[$$sroa$2 >> 2];
   HEAP32[$61 + 4 >> 2] = HEAP32[$$sroa$2 + 4 >> 2];
   HEAP32[$61 + 8 >> 2] = HEAP32[$$sroa$2 + 8 >> 2];
   STACKTOP = sp;
   return;
  } else if ((label | 0) == 20) {
   $66 = ___cxa_find_matching_catch() | 0;
   $67 = tempRet0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($35, HEAP32[$38 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($31, HEAP32[$34 >> 2] | 0);
   $$0 = $67;
   $$01 = $66;
   break;
  }
 } while (0);
 HEAP32[$6 >> 2] = 3580;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this + 68 | 0);
 $72 = (HEAP8[$4 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$4 >> 0] = $72;
 $$idx6$val11$i$i = HEAP32[$5 >> 2] | 0;
 $$idx7$i$i = $this + 24 | 0;
 $$idx7$val12$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
 L33 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) {
  $$lcssa$i$i = 0;
  $104 = $$idx6$val11$i$i;
  $107 = $$idx6$val11$i$i;
 } else {
  $$idx5$val19$i$i = $$idx7$val12$i$i;
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $79 = $72;
  $i$013$i$i = 0;
  while (1) {
   $75 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$75 + 4 >> 0] | 0) == $79 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx5$val19$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$75) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx5$val19$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$75 >> 2] | 0) + 4 >> 2] & 255]($75);
     $$idx4$val$i$i = HEAP32[$5 >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $88 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($88 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $93 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($88 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$5 >> 2] | 0;
     $93 = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $93 + -4 | 0;
    HEAP32[$$idx7$i$i >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $95 = $i$1$i$i + 1 | 0;
   $99 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($95 >>> 0 >= $99 >>> 0) {
    $$lcssa$i$i = $99;
    $104 = $$idx6$val$i$i;
    $107 = $$idx7$val$i$i;
    break L33;
   }
   $$idx5$val19$i$i = $$idx7$val$i$i;
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $79 = HEAP8[$4 >> 0] | 0;
   $i$013$i$i = $95;
  }
 } while (0);
 HEAP32[$this + 36 >> 2] = $$lcssa$i$i;
 HEAP32[$this + 32 >> 2] = $$lcssa$i$i;
 if (!$104) ___resumeException($$01 | 0);
 if (($107 | 0) != ($104 | 0)) HEAP32[$$idx7$i$i >> 2] = $107 + (~(($107 + -4 - $104 | 0) >>> 2) << 2);
 __ZdlPv($104);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $100 = 0, $103 = 0, $114 = 0, $119 = 0, $122 = 0.0, $123 = 0, $128 = 0, $13 = 0, $135 = 0, $136 = 0, $142 = 0, $149 = 0, $15 = 0, $150 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $7 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 184 | 0;
 $__thousands_sep = sp + 4 | 0;
 $__grouping = sp + 8 | 0;
 $__buf = sp + 196 | 0;
 $__a_end = sp;
 $__g = sp + 24 | 0;
 $__g_end = sp + 192 | 0;
 $__dc = sp + 188 | 0;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($8 & 1) label = 26; else {
  $13 = $__buf + 8 | 0;
  $15 = $__buf + 1 | 0;
  $16 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L6 : while (1) {
   if (!$$pre$i$i$i6) {
    $$pre$i$i$i = 0;
    $157 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $157 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i6;
     $157 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($157) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($157) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i6 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i6 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0)) {
   $114 = HEAP32[$__g_end >> 2] | 0;
   if (($114 - $__g | 0) < 160) {
    $119 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $114 + 4;
    HEAP32[$114 >> 2] = $119;
   }
  }
  __THREW__ = 0;
  $122 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if ($123 & 1) label = 26; else {
   HEAPF32[$__v >> 2] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $159 = 1; else {
    $128 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($128 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $135 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $135;
    } else $$0$i$i$i$i = HEAP32[$128 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $159 = 1;
    } else $159 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $142 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $149;
    } else $$0$i$i1$i$i = HEAP32[$142 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($159) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($159) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $156 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $156 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $100 = 0, $103 = 0, $114 = 0, $119 = 0, $122 = 0.0, $123 = 0, $128 = 0, $13 = 0, $135 = 0, $136 = 0, $142 = 0, $149 = 0, $15 = 0, $150 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $7 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 184 | 0;
 $__thousands_sep = sp + 4 | 0;
 $__grouping = sp + 8 | 0;
 $__buf = sp + 196 | 0;
 $__a_end = sp;
 $__g = sp + 24 | 0;
 $__g_end = sp + 192 | 0;
 $__dc = sp + 188 | 0;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($8 & 1) label = 26; else {
  $13 = $__buf + 8 | 0;
  $15 = $__buf + 1 | 0;
  $16 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L6 : while (1) {
   if (!$$pre$i$i$i6) {
    $$pre$i$i$i = 0;
    $157 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $157 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i6;
     $157 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($157) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($157) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i6 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i6 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0)) {
   $114 = HEAP32[$__g_end >> 2] | 0;
   if (($114 - $__g | 0) < 160) {
    $119 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $114 + 4;
    HEAP32[$114 >> 2] = $119;
   }
  }
  __THREW__ = 0;
  $122 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if ($123 & 1) label = 26; else {
   HEAPF64[$__v >> 3] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $159 = 1; else {
    $128 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($128 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $135 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $135;
    } else $$0$i$i$i$i = HEAP32[$128 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $159 = 1;
    } else $159 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $142 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $149;
    } else $$0$i$i1$i$i = HEAP32[$142 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($159) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($159) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $156 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $156 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i4 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i10 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i6 = 0, $$pre$i3$i$i = 0, $100 = 0, $103 = 0, $114 = 0, $119 = 0, $122 = 0.0, $123 = 0, $128 = 0, $13 = 0, $135 = 0, $136 = 0, $142 = 0, $149 = 0, $15 = 0, $150 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $7 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 184 | 0;
 $__thousands_sep = sp + 4 | 0;
 $__grouping = sp + 8 | 0;
 $__buf = sp + 196 | 0;
 $__a_end = sp;
 $__g = sp + 24 | 0;
 $__g_end = sp + 192 | 0;
 $__dc = sp + 188 | 0;
 $__in_units = sp + 337 | 0;
 $__exp = sp + 336 | 0;
 __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($8 & 1) label = 26; else {
  $13 = $__buf + 8 | 0;
  $15 = $__buf + 1 | 0;
  $16 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP32[$__decimal_point >> 2] | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i6 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L6 : while (1) {
   if (!$$pre$i$i$i6) {
    $$pre$i$i$i = 0;
    $157 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i6 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i6 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i6 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i6 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i4 = $29;
    } else $$0$i$i$i$i4 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i4 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $157 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i6;
     $157 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i10 = $44;
    } else $$0$i$i1$i$i10 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i10 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($157) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($157) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i6 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i6 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if (!((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0)) {
   $114 = HEAP32[$__g_end >> 2] | 0;
   if (($114 - $__g | 0) < 160) {
    $119 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $114 + 4;
    HEAP32[$114 >> 2] = $119;
   }
  }
  __THREW__ = 0;
  $122 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if ($123 & 1) label = 26; else {
   HEAPF64[$__v >> 3] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $159 = 1; else {
    $128 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($128 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $135 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $136 = __THREW__;
     __THREW__ = 0;
     if ($136 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $135;
    } else $$0$i$i$i$i = HEAP32[$128 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $159 = 1;
    } else $159 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $142 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($142 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $149;
    } else $$0$i$i1$i$i = HEAP32[$142 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($159) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($159) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $156 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $156 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($__mb, $__mi, $__me, $__flags, $__db, $__de, $__ct, $__neg, $__pat, $__dp, $__ts, $__grp, $__sym, $__sn, $__fd) {
 $__mb = $__mb | 0;
 $__mi = $__mi | 0;
 $__me = $__me | 0;
 $__flags = $__flags | 0;
 $__db = $__db | 0;
 $__de = $__de | 0;
 $__ct = $__ct | 0;
 $__neg = $__neg | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__sn = $__sn | 0;
 $__fd = $__fd | 0;
 var $$$0 = 0, $$0$i$i30 = 0, $$0$i$i954 = 0, $$01$i$i52 = 0, $$057 = 0, $$2 = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa67 = 0, $0 = 0, $1 = 0, $10 = 0, $107 = 0, $108 = 0, $109 = 0, $110 = 0, $112 = 0, $120 = 0, $124 = 0, $126 = 0, $130 = 0, $131 = 0, $133 = 0, $135 = 0, $140 = 0, $142 = 0, $146 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $155 = 0, $158 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $53 = 0, $6 = 0, $61 = 0, $65 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $79 = 0, $8 = 0, $82 = 0, $83 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $__d$0$lcssa = 0, $__d$031 = 0, $__d$1$lcssa = 0, $__d$137 = 0, $__d$2 = 0, $__d$347 = 0, $__f$0$lcssa = 0, $__f$038 = 0, $__f$143 = 0, $__gl$0$ph = 0, $__gl$050 = 0, $__gl$1 = 0, $__ig$049 = 0, $__ig$1 = 0, $__me$promoted = 0, $__ng$048 = 0, $__ng$1 = 0, $__p$056 = 0;
 HEAP32[$__me >> 2] = $__mb;
 $0 = $__sn + 4 | 0;
 $1 = $__sn + 8 | 0;
 $2 = $__sym + 4 | 0;
 $4 = ($__flags & 512 | 0) == 0;
 $5 = $__sym + 8 | 0;
 $6 = ($__fd | 0) > 0;
 $7 = $__grp + 4 | 0;
 $8 = $__grp + 8 | 0;
 $9 = $__grp + 1 | 0;
 $10 = ($__fd | 0) > 0;
 $$057 = $__db;
 $__p$056 = 0;
 while (1) {
  switch (HEAP8[$__pat + $__p$056 >> 0] | 0) {
  case 0:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $$2 = $$057;
    break;
   }
  case 1:
   {
    HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
    $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 32) | 0;
    $20 = HEAP32[$__me >> 2] | 0;
    HEAP32[$__me >> 2] = $20 + 4;
    HEAP32[$20 >> 2] = $19;
    $$2 = $$057;
    break;
   }
  case 3:
   {
    $22 = HEAP8[$__sn >> 0] | 0;
    $24 = ($22 & 1) == 0;
    if (!(($24 ? ($22 & 255) >>> 1 : HEAP32[$0 >> 2] | 0) | 0)) $$2 = $$057; else {
     $32 = HEAP32[($24 ? $0 : HEAP32[$1 >> 2] | 0) >> 2] | 0;
     $33 = HEAP32[$__me >> 2] | 0;
     HEAP32[$__me >> 2] = $33 + 4;
     HEAP32[$33 >> 2] = $32;
     $$2 = $$057;
    }
    break;
   }
  case 2:
   {
    $35 = HEAP8[$__sym >> 0] | 0;
    $37 = ($35 & 1) == 0;
    $41 = $37 ? ($35 & 255) >>> 1 : HEAP32[$2 >> 2] | 0;
    if ($4 | ($41 | 0) == 0) $$2 = $$057; else {
     $44 = $37 ? $2 : HEAP32[$5 >> 2] | 0;
     $45 = $44 + ($41 << 2) | 0;
     $46 = HEAP32[$__me >> 2] | 0;
     if ($41) {
      $$0$i$i954 = $46;
      $49 = $44;
      while (1) {
       HEAP32[$$0$i$i954 >> 2] = HEAP32[$49 >> 2];
       $49 = $49 + 4 | 0;
       if (($49 | 0) == ($45 | 0)) break; else $$0$i$i954 = $$0$i$i954 + 4 | 0;
      }
     }
     HEAP32[$__me >> 2] = $46 + ($41 << 2);
     $$2 = $$057;
    }
    break;
   }
  case 4:
   {
    $53 = HEAP32[$__me >> 2] | 0;
    $$$0 = $__neg ? $$057 + 4 | 0 : $$057;
    L15 : do if ($$$0 >>> 0 < $__de >>> 0) {
     $__d$031 = $$$0;
     while (1) {
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, HEAP32[$__d$031 >> 2] | 0) | 0)) {
       $__d$0$lcssa = $__d$031;
       break L15;
      }
      $61 = $__d$031 + 4 | 0;
      if ($61 >>> 0 < $__de >>> 0) $__d$031 = $61; else {
       $__d$0$lcssa = $61;
       break;
      }
     }
    } else $__d$0$lcssa = $$$0; while (0);
    if ($6) {
     if ($__d$0$lcssa >>> 0 > $$$0 >>> 0 & $10) {
      $68 = HEAP32[$__me >> 2] | 0;
      $__d$137 = $__d$0$lcssa;
      $__f$038 = $__fd;
      while (1) {
       $65 = $__d$137 + -4 | 0;
       $67 = $68 + 4 | 0;
       HEAP32[$68 >> 2] = HEAP32[$65 >> 2];
       $69 = $__f$038 + -1 | 0;
       $71 = ($__f$038 | 0) > 1;
       if ($65 >>> 0 > $$$0 >>> 0 & $71) {
        $68 = $67;
        $__d$137 = $65;
        $__f$038 = $69;
       } else {
        $$lcssa63 = $65;
        $$lcssa64 = $69;
        $$lcssa65 = $71;
        $$lcssa67 = $67;
        break;
       }
      }
      HEAP32[$__me >> 2] = $$lcssa67;
      $$lcssa = $$lcssa65;
      $__d$1$lcssa = $$lcssa63;
      $__f$0$lcssa = $$lcssa64;
     } else {
      $$lcssa = $10;
      $__d$1$lcssa = $__d$0$lcssa;
      $__f$0$lcssa = $__fd;
     }
     if ($$lcssa) $83 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0; else $83 = 0;
     $__me$promoted = HEAP32[$__me >> 2] | 0;
     $79 = $__f$0$lcssa + (($__f$0$lcssa | 0) < 0 ? ~$__f$0$lcssa : -1) | 0;
     if (($__f$0$lcssa | 0) > 0) {
      $82 = $__me$promoted;
      $__f$143 = $__f$0$lcssa;
      while (1) {
       HEAP32[$82 >> 2] = $83;
       if (($__f$143 | 0) > 1) {
        $82 = $82 + 4 | 0;
        $__f$143 = $__f$143 + -1 | 0;
       } else break;
      }
     }
     HEAP32[$__me >> 2] = $__me$promoted + ($79 + 2 << 2);
     HEAP32[$__me$promoted + ($79 + 1 << 2) >> 2] = $__dp;
     $__d$2 = $__d$1$lcssa;
    } else $__d$2 = $__d$0$lcssa;
    if (($__d$2 | 0) == ($$$0 | 0)) {
     $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 44 >> 2] & 63]($__ct, 48) | 0;
     $91 = HEAP32[$__me >> 2] | 0;
     $92 = $91 + 4 | 0;
     HEAP32[$__me >> 2] = $92;
     HEAP32[$91 >> 2] = $90;
     $130 = $92;
    } else {
     $93 = HEAP8[$__grp >> 0] | 0;
     $95 = ($93 & 1) == 0;
     $96 = HEAP32[$7 >> 2] | 0;
     if (!(($95 ? ($93 & 255) >>> 1 : $96) | 0)) $__gl$0$ph = -1; else $__gl$0$ph = HEAP8[($95 ? $9 : HEAP32[$8 >> 2] | 0) >> 0] | 0;
     if (($__d$2 | 0) != ($$$0 | 0)) {
      $__d$347 = $__d$2;
      $__gl$050 = $__gl$0$ph;
      $__ig$049 = 0;
      $__ng$048 = 0;
      while (1) {
       $107 = HEAP32[$__me >> 2] | 0;
       if (($__ng$048 | 0) == ($__gl$050 | 0)) {
        $108 = $107 + 4 | 0;
        HEAP32[$__me >> 2] = $108;
        HEAP32[$107 >> 2] = $__ts;
        $109 = $__ig$049 + 1 | 0;
        $110 = HEAP8[$__grp >> 0] | 0;
        $112 = ($110 & 1) == 0;
        if ($109 >>> 0 < ($112 ? ($110 & 255) >>> 1 : $96) >>> 0) {
         $120 = HEAP8[($112 ? $9 : HEAP32[$8 >> 2] | 0) + $109 >> 0] | 0;
         $126 = $108;
         $__gl$1 = $120 << 24 >> 24 == 127 ? -1 : $120 << 24 >> 24;
         $__ig$1 = $109;
         $__ng$1 = 0;
        } else {
         $126 = $108;
         $__gl$1 = $__ng$048;
         $__ig$1 = $109;
         $__ng$1 = 0;
        }
       } else {
        $126 = $107;
        $__gl$1 = $__gl$050;
        $__ig$1 = $__ig$049;
        $__ng$1 = $__ng$048;
       }
       $__d$347 = $__d$347 + -4 | 0;
       $124 = HEAP32[$__d$347 >> 2] | 0;
       HEAP32[$__me >> 2] = $126 + 4;
       HEAP32[$126 >> 2] = $124;
       if (($__d$347 | 0) == ($$$0 | 0)) break; else {
        $__gl$050 = $__gl$1;
        $__ig$049 = $__ig$1;
        $__ng$048 = $__ng$1 + 1 | 0;
       }
      }
     }
     $130 = HEAP32[$__me >> 2] | 0;
    }
    if (($53 | 0) == ($130 | 0)) $$2 = $$$0; else {
     $131 = $130 + -4 | 0;
     if ($53 >>> 0 < $131 >>> 0) {
      $$01$i$i52 = $53;
      $135 = $131;
      do {
       $133 = HEAP32[$$01$i$i52 >> 2] | 0;
       HEAP32[$$01$i$i52 >> 2] = HEAP32[$135 >> 2];
       HEAP32[$135 >> 2] = $133;
       $$01$i$i52 = $$01$i$i52 + 4 | 0;
       $135 = $135 + -4 | 0;
      } while ($$01$i$i52 >>> 0 < $135 >>> 0);
      $$2 = $$$0;
     } else $$2 = $$$0;
    }
    break;
   }
  default:
   $$2 = $$057;
  }
  $__p$056 = $__p$056 + 1 | 0;
  if (($__p$056 | 0) == 4) break; else $$057 = $$2;
 }
 $140 = HEAP8[$__sn >> 0] | 0;
 $142 = ($140 & 1) == 0;
 $146 = $142 ? ($140 & 255) >>> 1 : HEAP32[$0 >> 2] | 0;
 if ($146 >>> 0 > 1) {
  $149 = $142 ? $0 : HEAP32[$1 >> 2] | 0;
  $150 = $149 + 4 | 0;
  $151 = $149 + ($146 << 2) | 0;
  $152 = HEAP32[$__me >> 2] | 0;
  $155 = $151 - $150 | 0;
  if (($146 | 0) != 1) {
   $$0$i$i30 = $152;
   $158 = $150;
   while (1) {
    HEAP32[$$0$i$i30 >> 2] = HEAP32[$158 >> 2];
    $158 = $158 + 4 | 0;
    if (($158 | 0) == ($151 | 0)) break; else $$0$i$i30 = $$0$i$i30 + 4 | 0;
   }
  }
  HEAP32[$__me >> 2] = $152 + ($155 >>> 2 << 2);
 }
 switch ($__flags & 176 | 0) {
 case 32:
  {
   HEAP32[$__mi >> 2] = HEAP32[$__me >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$__mi >> 2] = $__mb;
 }
 return;
}

function __ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj($agg$result, $this, $element_kind, $obj_level) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $element_kind = $element_kind | 0;
 $obj_level = $obj_level | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$020 = 0, $$0319 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $$3 = 0, $$36 = 0, $$lcssa = 0, $0 = 0, $1 = 0, $101 = 0, $104 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $79 = 0, $84 = 0, $86 = 0, $9 = 0, $92 = 0, $95 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $exprs = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $0 = sp + 216 | 0;
 $exprs = sp + 204 | 0;
 $1 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $2 = sp;
 HEAP32[$exprs >> 2] = 0;
 $3 = $exprs + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$exprs + 8 >> 2] = 0;
 __THREW__ = 0;
 invoke_viiiii(4, $1 | 0, $this | 0, $exprs | 0, $element_kind | 0, $obj_level | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($5 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$3 = $18;
  $$36 = tempRet0;
 } else {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 16 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 4 | 0);
  HEAP32[$agg$result >> 2] = 0;
  $9 = $agg$result + 4 | 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  $11 = HEAP32[$exprs >> 2] | 0;
  $12 = HEAP32[$3 >> 2] | 0;
  L4 : do if (($11 | 0) == ($12 | 0)) $84 = $11; else {
   $14 = $agg$result + 8 | 0;
   $16 = $11;
   while (1) {
    $15 = HEAP32[$16 >> 2] | 0;
    if (!$15) {
     $$lcssa = 0;
     label = 7;
     break;
    }
    $20 = ___dynamic_cast($15, 48, 376, 0) | 0;
    if (!$20) {
     $$lcssa = $15;
     label = 7;
     break;
    }
    $72 = $20 + 48 | 0;
    $73 = HEAP32[$9 >> 2] | 0;
    if (($73 | 0) == (HEAP32[$14 >> 2] | 0)) {
     __THREW__ = 0;
     invoke_vii(54, $agg$result | 0, $72 | 0);
     $79 = __THREW__;
     __THREW__ = 0;
     if ($79 & 1) {
      label = 22;
      break;
     }
    } else {
     HEAP32[$73 >> 2] = HEAP32[$72 >> 2];
     HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 4;
    }
    $16 = $16 + 4 | 0;
    if (($16 | 0) == ($12 | 0)) {
     label = 33;
     break;
    }
   }
   L14 : do if ((label | 0) == 7) {
    $22 = $ss + 64 | 0;
    $23 = $ss + 8 | 0;
    HEAP32[$23 >> 2] = 2912;
    $24 = $ss + 12 | 0;
    HEAP32[$ss >> 2] = 2952;
    HEAP32[$22 >> 2] = 2972;
    HEAP32[$ss + 4 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(41, $ss + 64 | 0, $24 | 0);
    $27 = __THREW__;
    __THREW__ = 0;
    if ($27 & 1) {
     $40 = ___cxa_find_matching_catch() | 0;
     $$0$i = tempRet0;
     $$01$i = $40;
    } else {
     HEAP32[$ss + 136 >> 2] = 0;
     HEAP32[$ss + 140 >> 2] = -1;
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$ss + 64 >> 2] = 2932;
     HEAP32[$23 >> 2] = 2912;
     __THREW__ = 0;
     invoke_vi(173, $24 | 0);
     $32 = __THREW__;
     __THREW__ = 0;
     do if ($32 & 1) {
      $42 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body$i$index2Z2D = tempRet0;
      $eh$lpad$body$i$indexZ2D = $42;
     } else {
      HEAP32[$24 >> 2] = 2988;
      $34 = $ss + 44 | 0;
      HEAP32[$34 >> 2] = 0;
      HEAP32[$34 + 4 >> 2] = 0;
      HEAP32[$34 + 8 >> 2] = 0;
      HEAP32[$34 + 12 >> 2] = 0;
      HEAP32[$ss + 60 >> 2] = 24;
      HEAP32[$0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      __THREW__ = 0;
      invoke_vii(42, $24 | 0, $0 | 0);
      $36 = __THREW__;
      __THREW__ = 0;
      if ($36 & 1) {
       $38 = ___cxa_find_matching_catch() | 0;
       $39 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
       __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($24);
       $eh$lpad$body$i$index2Z2D = $39;
       $eh$lpad$body$i$indexZ2D = $38;
       break;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $44 = $ss + 8 | 0;
      __THREW__ = 0;
      $45 = invoke_iiii(29, $44 | 0, 50962, 19) | 0;
      $46 = __THREW__;
      __THREW__ = 0;
      L25 : do if ($46 & 1) label = 24; else {
       __THREW__ = 0;
       invoke_iii(26, $45 | 0, $$lcssa | 0) | 0;
       $48 = __THREW__;
       __THREW__ = 0;
       if ($48 & 1) label = 24; else {
        $50 = ___cxa_allocate_exception(40) | 0;
        __THREW__ = 0;
        invoke_vii(43, $2 | 0, $24 | 0);
        $51 = __THREW__;
        __THREW__ = 0;
        L28 : do if ($51 & 1) {
         $68 = ___cxa_find_matching_catch() | 0;
         $$020 = $68;
         $$0319 = tempRet0;
        } else {
         __THREW__ = 0;
         invoke_vii(40, $50 | 0, $$lcssa + 4 | 0);
         $54 = __THREW__;
         __THREW__ = 0;
         do if ($54 & 1) $$01 = 1; else {
          $56 = $50 + 12 | 0;
          $57 = $$lcssa + 16 | 0;
          HEAP32[$56 >> 2] = HEAP32[$57 >> 2];
          HEAP32[$56 + 4 >> 2] = HEAP32[$57 + 4 >> 2];
          HEAP32[$56 + 8 >> 2] = HEAP32[$57 + 8 >> 2];
          HEAP32[$56 + 12 >> 2] = HEAP32[$57 + 12 >> 2];
          __THREW__ = 0;
          invoke_vii(40, $50 + 28 | 0, $2 | 0);
          $59 = __THREW__;
          __THREW__ = 0;
          if ($59 & 1) {
           $61 = ___cxa_find_matching_catch() | 0;
           $62 = tempRet0;
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($50);
           __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
           $$020 = $61;
           $$0319 = $62;
           break L28;
          } else {
           __THREW__ = 0;
           invoke_viii(4, $50 | 0, 8, 172);
           __THREW__ = 0;
           $$01 = 0;
           break;
          }
         } while (0);
         $70 = ___cxa_find_matching_catch() | 0;
         $71 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
         if ($$01) {
          $$020 = $70;
          $$0319 = $71;
         } else {
          $$1 = $70;
          $$14 = $71;
          break L25;
         }
        } while (0);
        ___cxa_free_exception($50 | 0);
        $$1 = $$020;
        $$14 = $$0319;
       }
      } while (0);
      if ((label | 0) == 24) {
       $66 = ___cxa_find_matching_catch() | 0;
       $$1 = $66;
       $$14 = tempRet0;
      }
      HEAP32[$ss >> 2] = 2892;
      HEAP32[$22 >> 2] = 2932;
      HEAP32[$44 >> 2] = 2912;
      HEAP32[$24 >> 2] = 2988;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($34);
      __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($24);
      __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($22);
      $$2 = $$1;
      $$25 = $$14;
      break L14;
     } while (0);
     $$0$i = $eh$lpad$body$i$index2Z2D;
     $$01$i = $eh$lpad$body$i$indexZ2D;
    }
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($22);
    $eh$lpad$body$index7Z2D = $$0$i;
    $eh$lpad$body$indexZ2D = $$01$i;
    label = 23;
   } else if ((label | 0) == 22) {
    $64 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index7Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $64;
    label = 23;
   } else if ((label | 0) == 33) {
    $84 = HEAP32[$exprs >> 2] | 0;
    break L4;
   } while (0);
   if ((label | 0) == 23) {
    $$2 = $eh$lpad$body$indexZ2D;
    $$25 = $eh$lpad$body$index7Z2D;
   }
   $92 = HEAP32[$agg$result >> 2] | 0;
   if (!$92) {
    $$3 = $$2;
    $$36 = $$25;
    break L1;
   }
   $95 = HEAP32[$9 >> 2] | 0;
   if (($95 | 0) != ($92 | 0)) HEAP32[$9 >> 2] = $95 + (~(($95 + -4 - $92 | 0) >>> 2) << 2);
   __ZdlPv($92);
   $$3 = $$2;
   $$36 = $$25;
   break L1;
  } while (0);
  if (!$84) {
   STACKTOP = sp;
   return;
  }
  $86 = HEAP32[$3 >> 2] | 0;
  if (($86 | 0) != ($84 | 0)) HEAP32[$3 >> 2] = $86 + (~(($86 + -4 - $84 | 0) >>> 2) << 2);
  __ZdlPv($84);
  STACKTOP = sp;
  return;
 } while (0);
 $101 = HEAP32[$exprs >> 2] | 0;
 if (!$101) ___resumeException($$3 | 0);
 $104 = HEAP32[$3 >> 2] | 0;
 if (($104 | 0) != ($101 | 0)) HEAP32[$3 >> 2] = $104 + (~(($104 + -4 - $101 | 0) >>> 2) << 2);
 __ZdlPv($101);
 ___resumeException($$3 | 0);
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $100 = 0, $103 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $131 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $152 = 0, $153 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 160 | 0;
 $__thousands_sep = sp + 280 | 0;
 $__grouping = sp + 264 | 0;
 $__buf = sp + 284 | 0;
 $__a_end = sp + 300 | 0;
 $__g = sp;
 $__g_end = sp + 276 | 0;
 $__dc = sp + 296 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 26; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i5) {
    $$pre$i$i$i = 0;
    $160 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $160 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
     $160 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($160) {
     $161 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($160) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = tempRet0;
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) label = 26; else {
   $124 = $__v;
   HEAP32[$124 >> 2] = $120;
   HEAP32[$124 + 4 >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $162 = 1; else {
    $131 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($131 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $138 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $139 = __THREW__;
     __THREW__ = 0;
     if ($139 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $138;
    } else $$0$i$i$i$i = HEAP32[$131 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 1;
    } else $162 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $145 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($145 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $152 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $153 = __THREW__;
     __THREW__ = 0;
     if ($153 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $152;
    } else $$0$i$i1$i$i = HEAP32[$145 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($162) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($162) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $159 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $159 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $100 = 0, $103 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $131 = 0, $138 = 0, $139 = 0, $14 = 0, $145 = 0, $152 = 0, $153 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 160 | 0;
 $__thousands_sep = sp + 280 | 0;
 $__grouping = sp + 264 | 0;
 $__buf = sp + 284 | 0;
 $__a_end = sp + 300 | 0;
 $__g = sp;
 $__g_end = sp + 276 | 0;
 $__dc = sp + 296 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 26; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i5) {
    $$pre$i$i$i = 0;
    $160 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $160 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
     $160 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($160) {
     $161 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($160) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = tempRet0;
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) label = 26; else {
   $124 = $__v;
   HEAP32[$124 >> 2] = $120;
   HEAP32[$124 + 4 >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $162 = 1; else {
    $131 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($131 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $138 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $139 = __THREW__;
     __THREW__ = 0;
     if ($139 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $138;
    } else $$0$i$i$i$i = HEAP32[$131 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $162 = 1;
    } else $162 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $145 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($145 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $152 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $153 = __THREW__;
     __THREW__ = 0;
     if ($153 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $152;
    } else $$0$i$i1$i$i = HEAP32[$145 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($162) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($162) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $159 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $159 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$0$lcssa$i = 0, $$01 = 0, $$112 = 0, $$113 = 0, $$1210 = 0, $$1211 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre6 = 0, $0 = 0, $103 = 0, $104 = 0, $110 = 0, $112 = 0, $115 = 0, $117 = 0, $12 = 0, $121 = 0, $122 = 0, $123 = 0, $125 = 0, $13 = 0, $14 = 0, $143 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $69 = 0, $7 = 0, $73 = 0, $76 = 0, $78 = 0, $8 = 0, $81 = 0, $88 = 0, $89 = 0, $93 = 0, $96 = 0, $__loc = 0, $__nbuf = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$216 = 0, $__neg = 0, $__w$017 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 576 | 0;
 $$byval_copy = sp + 432 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 24 | 0;
 $__wb = sp + 16 | 0;
 $__wn = sp + 8 | 0;
 $__loc = sp + 4 | 0;
 $__neg = sp + 572 | 0;
 $0 = sp + 424 | 0;
 $__nbuf = sp + 472 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 187;
 $3 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 $4 = invoke_ii(68, $__iob | 0) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$112 = $34;
  $$1210 = tempRet0;
  $121 = 187;
  $122 = $__wbuf;
  label = 47;
 } else {
  HEAP32[$__loc >> 2] = $4;
  __THREW__ = 0;
  $7 = invoke_iii(22, $__loc | 0, 11156) | 0;
  $8 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($8 & 1) label = 10; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $12 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
   $13 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $12 | 0, $__err | 0, $__neg | 0, $7 | 0, $__wb | 0, $__wn | 0, $3 | 0) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) label = 10; else {
    L7 : do if ($13) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] | 0, $7 | 0, 62957, 62967, $$byval_copy | 0) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if ($19 & 1) {
      label = 10;
      break L4;
     }
     $21 = HEAP32[$__wn >> 2] | 0;
     $22 = HEAP32[$__wb >> 2] | 0;
     $25 = $21 - $22 | 0;
     if (($25 | 0) > 392) {
      $29 = _malloc(($25 >> 2) + 2 | 0) | 0;
      $30 = $29;
      if (!$29) {
       __THREW__ = 0;
       invoke_v(7);
       $32 = __THREW__;
       __THREW__ = 0;
       if ($32 & 1) $41 = $30; else {
        $76 = $30;
        $__nc$0 = 0;
        label = 13;
       }
      } else {
       $76 = $30;
       $__nc$0 = $29;
       label = 13;
      }
     } else {
      $76 = 0;
      $__nc$0 = $__nbuf;
      label = 13;
     }
     do if ((label | 0) == 13) {
      if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
       HEAP8[$__nc$0 >> 0] = 45;
       $__nc$1 = $__nc$0 + 1 | 0;
      }
      $46 = $$byval_copy + 40 | 0;
      $47 = $$byval_copy;
      if ($22 >>> 0 < $21 >>> 0) {
       $49 = $$byval_copy + 4 | 0;
       $50 = $49 + 4 | 0;
       $51 = $50 + 4 | 0;
       $52 = $51 + 4 | 0;
       $53 = $52 + 4 | 0;
       $54 = $53 + 4 | 0;
       $55 = $54 + 4 | 0;
       $56 = $55 + 4 | 0;
       $57 = $56 + 4 | 0;
       $__nc$216 = $__nc$1;
       $__w$017 = $22;
       while (1) {
        $58 = HEAP32[$__w$017 >> 2] | 0;
        do if ((HEAP32[$$byval_copy >> 2] | 0) == ($58 | 0)) $$0$lcssa$i = $$byval_copy; else if ((HEAP32[$49 >> 2] | 0) == ($58 | 0)) $$0$lcssa$i = $49; else if ((HEAP32[$50 >> 2] | 0) == ($58 | 0)) $$0$lcssa$i = $50; else if ((HEAP32[$51 >> 2] | 0) == ($58 | 0)) $$0$lcssa$i = $51; else if ((HEAP32[$52 >> 2] | 0) == ($58 | 0)) $$0$lcssa$i = $52; else {
         if ((HEAP32[$53 >> 2] | 0) == ($58 | 0)) {
          $$0$lcssa$i = $53;
          break;
         }
         if ((HEAP32[$54 >> 2] | 0) == ($58 | 0)) {
          $$0$lcssa$i = $54;
          break;
         }
         if ((HEAP32[$55 >> 2] | 0) == ($58 | 0)) {
          $$0$lcssa$i = $55;
          break;
         }
         if ((HEAP32[$56 >> 2] | 0) == ($58 | 0)) {
          $$0$lcssa$i = $56;
          break;
         }
         $$0$lcssa$i = (HEAP32[$57 >> 2] | 0) == ($58 | 0) ? $57 : $46;
        } while (0);
        HEAP8[$__nc$216 >> 0] = HEAP8[62957 + ($$0$lcssa$i - $47 >> 2) >> 0] | 0;
        $__w$017 = $__w$017 + 4 | 0;
        $69 = $__nc$216 + 1 | 0;
        if ($__w$017 >>> 0 >= (HEAP32[$__wn >> 2] | 0) >>> 0) {
         $__nc$2$lcssa = $69;
         break;
        } else $__nc$216 = $69;
       }
      } else $__nc$2$lcssa = $__nc$1;
      HEAP8[$__nc$2$lcssa >> 0] = 0;
      HEAP32[$vararg_buffer >> 2] = $__v;
      if ((_sscanf($__nbuf, 62937, $vararg_buffer) | 0) != 1) {
       __THREW__ = 0;
       invoke_vi(188, 62941);
       $73 = __THREW__;
       __THREW__ = 0;
       if ($73 & 1) {
        $41 = $76;
        break;
       }
      }
      if ($76) _free($76);
      break L7;
     } while (0);
     $38 = ___cxa_find_matching_catch() | 0;
     $39 = tempRet0;
     if (!$41) {
      $$0 = $38;
      $$01 = $39;
      $$phi$trans$insert$pre$phiZZZZ2D = $__wb;
      break L4;
     }
     _free($41);
     $$0 = $38;
     $$01 = $39;
     $$phi$trans$insert$pre$phiZZZZ2D = $__wb;
     break L4;
    } while (0);
    $78 = HEAP32[$__b >> 2] | 0;
    do if (!$78) $143 = 1; else {
     $81 = HEAP32[$78 + 12 >> 2] | 0;
     if (($81 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $88 = invoke_ii(HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] | 0, $78 | 0) | 0;
      $89 = __THREW__;
      __THREW__ = 0;
      if ($89 & 1) {
       label = 10;
       break L4;
      } else $$0$i$i$i$i = $88;
     } else $$0$i$i$i$i = HEAP32[$81 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $143 = 1;
      break;
     } else {
      $143 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $93 = HEAP32[$__e >> 2] | 0;
    do if (!$93) label = 38; else {
     $96 = HEAP32[$93 + 12 >> 2] | 0;
     if (($96 | 0) == (HEAP32[$93 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $103 = invoke_ii(HEAP32[(HEAP32[$93 >> 2] | 0) + 36 >> 2] | 0, $93 | 0) | 0;
      $104 = __THREW__;
      __THREW__ = 0;
      if ($104 & 1) {
       label = 10;
       break L4;
      } else $$0$i$i1$i$i = $103;
     } else $$0$i$i1$i$i = HEAP32[$96 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 38;
      break;
     } else if ($143) break; else {
      label = 40;
      break;
     }
    } while (0);
    if ((label | 0) == 38) if ($143) label = 40;
    if ((label | 0) == 40) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $110 = HEAP32[$__b >> 2] | 0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $112 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($112) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$2 >> 2] | 0, $112 | 0);
     $115 = __THREW__;
     __THREW__ = 0;
     if ($115 & 1) {
      $117 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($117);
     }
    }
    STACKTOP = sp;
    return $110 | 0;
   }
  } while (0);
  if ((label | 0) == 10) {
   $36 = ___cxa_find_matching_catch() | 0;
   $$0 = $36;
   $$01 = tempRet0;
   $$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre6 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D >> 2] | 0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D >> 2] = 0;
  if (!$$pre6) {
   $$113 = $$0;
   $$1211 = $$01;
  } else {
   $$112 = $$0;
   $$1210 = $$01;
   $121 = HEAP32[$2 >> 2] | 0;
   $122 = $$pre6;
   label = 47;
  }
 }
 if ((label | 0) == 47) {
  __THREW__ = 0;
  invoke_vi($121 | 0, $122 | 0);
  $123 = __THREW__;
  __THREW__ = 0;
  if ($123 & 1) {
   $125 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($125);
  } else {
   $$113 = $$112;
   $$1211 = $$1210;
  }
 }
 ___resumeException($$113 | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $100 = 0, $103 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 160 | 0;
 $__thousands_sep = sp + 280 | 0;
 $__grouping = sp + 264 | 0;
 $__buf = sp + 284 | 0;
 $__a_end = sp + 300 | 0;
 $__g = sp;
 $__g_end = sp + 276 | 0;
 $__dc = sp + 296 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 26; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i5) {
    $$pre$i$i$i = 0;
    $155 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $155 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
     $155 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($155) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($155) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if ($121 & 1) label = 26; else {
   HEAP16[$__v >> 1] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $157 = 1; else {
    $126 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $157 = 1;
    } else $157 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($157) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($157) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $154 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $154 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $100 = 0, $103 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 160 | 0;
 $__thousands_sep = sp + 280 | 0;
 $__grouping = sp + 264 | 0;
 $__buf = sp + 284 | 0;
 $__a_end = sp + 300 | 0;
 $__g = sp;
 $__g_end = sp + 276 | 0;
 $__dc = sp + 296 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 26; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i5) {
    $$pre$i$i$i = 0;
    $155 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $155 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
     $155 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($155) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($155) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if ($121 & 1) label = 26; else {
   HEAP32[$__v >> 2] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $157 = 1; else {
    $126 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $157 = 1;
    } else $157 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($157) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($157) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $154 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $154 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $100 = 0, $103 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 160 | 0;
 $__thousands_sep = sp + 280 | 0;
 $__grouping = sp + 264 | 0;
 $__buf = sp + 284 | 0;
 $__a_end = sp + 300 | 0;
 $__g = sp;
 $__g_end = sp + 276 | 0;
 $__dc = sp + 296 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 26; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i5) {
    $$pre$i$i$i = 0;
    $155 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $155 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
     $155 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($155) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($155) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if ($121 & 1) label = 26; else {
   HEAP32[$__v >> 2] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $157 = 1; else {
    $126 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $157 = 1;
    } else $157 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($157) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($157) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $154 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $154 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i9 = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i3$i$i = 0, $0 = 0, $100 = 0, $103 = 0, $112 = 0, $117 = 0, $120 = 0, $121 = 0, $126 = 0, $133 = 0, $134 = 0, $14 = 0, $140 = 0, $147 = 0, $148 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $29 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $45 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $68 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $__atoms = sp + 160 | 0;
 $__thousands_sep = sp + 280 | 0;
 $__grouping = sp + 264 | 0;
 $__buf = sp + 284 | 0;
 $__a_end = sp + 300 | 0;
 $__g = sp;
 $__g_end = sp + 276 | 0;
 $__dc = sp + 296 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 26; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP32[$__thousands_sep >> 2] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i5) {
    $$pre$i$i$i = 0;
    $155 = 1;
   } else {
    $22 = HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0;
    if (($22 | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
     $30 = __THREW__;
     __THREW__ = 0;
     if ($30 & 1) {
      label = 25;
      break;
     } else $$0$i$i$i$i3 = $29;
    } else $$0$i$i$i$i3 = HEAP32[$22 >> 2] | 0;
    if (($$0$i$i$i$i3 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
     $155 = 1;
    } else {
     $$pre$i$i$i = $$pre$i$i$i5;
     $155 = 0;
    }
   }
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 17; else {
    $37 = HEAP32[$34 + 12 >> 2] | 0;
    if (($37 | 0) == (HEAP32[$34 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     if ($45 & 1) {
      label = 25;
      break L6;
     } else $$0$i$i1$i$i9 = $44;
    } else $$0$i$i1$i$i9 = HEAP32[$37 >> 2] | 0;
    if (($$0$i$i1$i$i9 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 17;
     break;
    } else if ($155) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 17) {
    label = 0;
    if ($155) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i3$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $50 = HEAP8[$__buf >> 0] | 0;
   $56 = ($50 & 1) == 0 ? ($50 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $56 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $56 << 1 | 0, 0);
    $60 = __THREW__;
    __THREW__ = 0;
    if ($60 & 1) {
     label = 25;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $67 = 10; else $67 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $67 | 0, 0);
    $68 = __THREW__;
    __THREW__ = 0;
    if ($68 & 1) {
     label = 25;
     break;
    }
    $74 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $74 + $56;
    $__a$1 = $74;
   } else $__a$1 = $__a$0;
   $80 = $$pre$i$i$i + 12 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   $82 = $$pre$i$i$i + 16 | 0;
   if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    $88 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     label = 25;
     break;
    } else $$0$i$i = $88;
   } else $$0$i$i = HEAP32[$81 >> 2] | 0;
   if (__ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($$0$i$i, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i3$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $94 = HEAP32[$80 >> 2] | 0;
   if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $100 = __THREW__;
    __THREW__ = 0;
    if ($100 & 1) {
     label = 25;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$80 >> 2] = $94 + 4;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 25) {
   $76 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $76;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $103 = HEAP8[$__grouping >> 0] | 0;
  if ((($103 & 1) == 0 ? ($103 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $112 = HEAP32[$__g_end >> 2] | 0;
   if (($112 - $__g | 0) < 160) {
    $117 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $112 + 4;
    HEAP32[$112 >> 2] = $117;
   }
  }
  __THREW__ = 0;
  $120 = invoke_iiiii(15, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $121 = __THREW__;
  __THREW__ = 0;
  if ($121 & 1) label = 26; else {
   HEAP32[$__v >> 2] = $120;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $157 = 1; else {
    $126 = HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0;
    if (($126 | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $133 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
     $134 = __THREW__;
     __THREW__ = 0;
     if ($134 & 1) {
      label = 26;
      break;
     } else $$0$i$i$i$i = $133;
    } else $$0$i$i$i$i = HEAP32[$126 >> 2] | 0;
    if (($$0$i$i$i$i | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $157 = 1;
    } else $157 = 0;
   }
   do if (!$$pre$i3$i$i) label = 51; else {
    $140 = HEAP32[$$pre$i3$i$i + 12 >> 2] | 0;
    if (($140 | 0) == (HEAP32[$$pre$i3$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $147 = invoke_ii(HEAP32[(HEAP32[$$pre$i3$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i3$i$i | 0) | 0;
     $148 = __THREW__;
     __THREW__ = 0;
     if ($148 & 1) {
      label = 26;
      break L4;
     } else $$0$i$i1$i$i = $147;
    } else $$0$i$i1$i$i = HEAP32[$140 >> 2] | 0;
    if (($$0$i$i1$i$i | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 51;
     break;
    } else if ($157) break; else {
     label = 53;
     break;
    }
   } while (0);
   if ((label | 0) == 51) if ($157) label = 53;
   if ((label | 0) == 53) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $154 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $154 | 0;
  }
 } while (0);
 if ((label | 0) == 26) {
  $78 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $78;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($agg$result, $this, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $v = $v | 0;
 var $$0$i7$i$i$i$i = 0, $$0$i8$i$i$i$i = 0, $$idx$pre$phi$i$iZZ2D = 0, $$idx$val$i$i$pre$i$i$i$i = 0, $$idx1$val$i$i = 0, $$idx1$val$i$i$i$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val19$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $102 = 0, $11 = 0, $111 = 0, $116 = 0, $118 = 0, $12 = 0, $122 = 0, $124 = 0, $126 = 0, $127 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $69 = 0, $70 = 0, $76 = 0, $8 = 0, $81 = 0, $84 = 0, $92 = 0, $95 = 0, $98 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0, $this$idx2$val$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$agg$result >> 2] = 19;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($1, $v);
 __THREW__ = 0;
 invoke_vii(40, $0 | 0, $1 | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if (!($2 & 1)) {
  __THREW__ = 0;
  $4 = invoke_ii(67, 20) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  do if ($5 & 1) label = 33; else {
   HEAP32[$4 >> 2] = 3672;
   __THREW__ = 0;
   invoke_vii(40, $4 + 8 | 0, $0 | 0);
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) {
    $60 = ___cxa_find_matching_catch() | 0;
    $61 = tempRet0;
    __ZdlPv($4);
    $eh$lpad$body$i$index2Z2D = $61;
    $eh$lpad$body$i$indexZ2D = $60;
    break;
   }
   $10 = $this + 20 | 0;
   $11 = $4;
   $12 = $this + 24 | 0;
   $13 = HEAP32[$12 >> 2] | 0;
   $14 = $this + 28 | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   if ($13 >>> 0 < $15 >>> 0) {
    HEAP32[$13 >> 2] = $11;
    $18 = (HEAP32[$12 >> 2] | 0) + 4 | 0;
    HEAP32[$12 >> 2] = $18;
    $$idx$pre$phi$i$iZZ2D = $10;
    $$idx1$val$i$i = $18;
   } else {
    $this$idx2$val$i$i$i$i = HEAP32[$10 >> 2] | 0;
    $20 = $this$idx2$val$i$i$i$i;
    $23 = ($13 - $20 >> 2) + 1 | 0;
    if ($23 >>> 0 > 1073741823) {
     __THREW__ = 0;
     invoke_vi(175, $10 | 0);
     $25 = __THREW__;
     __THREW__ = 0;
     if ($25 & 1) {
      label = 33;
      break;
     }
     $$idx$val$i$i$pre$i$i$i$i = HEAP32[$10 >> 2] | 0;
     $$idx1$val$i$i$i$i$i$i = HEAP32[$14 >> 2] | 0;
     $30 = $$idx$val$i$i$pre$i$i$i$i;
     $58 = $$idx$val$i$i$pre$i$i$i$i;
    } else {
     $$idx1$val$i$i$i$i$i$i = $15;
     $30 = $this$idx2$val$i$i$i$i;
     $58 = $20;
    }
    $29 = $30;
    $31 = $$idx1$val$i$i$i$i$i$i - $29 | 0;
    if ($31 >> 2 >>> 0 < 536870911) {
     $37 = $31 >> 1;
     $39 = $37 >>> 0 < $23 >>> 0 ? $23 : $37;
     $41 = (HEAP32[$12 >> 2] | 0) - $29 | 0;
     $42 = $41 >> 2;
     if (!$39) {
      $$0$i8$i$i$i$i = 0;
      $49 = 0;
      $50 = $42;
      $56 = $41;
     } else {
      $$0$i7$i$i$i$i = $39;
      $129 = $42;
      $130 = $41;
      label = 12;
     }
    } else {
     $35 = (HEAP32[$12 >> 2] | 0) - $29 | 0;
     $$0$i7$i$i$i$i = 1073741823;
     $129 = $35 >> 2;
     $130 = $35;
     label = 12;
    }
    if ((label | 0) == 12) {
     __THREW__ = 0;
     $45 = invoke_ii(67, $$0$i7$i$i$i$i << 2 | 0) | 0;
     $46 = __THREW__;
     __THREW__ = 0;
     if ($46 & 1) {
      label = 33;
      break;
     }
     $$0$i8$i$i$i$i = $$0$i7$i$i$i$i;
     $49 = $45;
     $50 = $129;
     $56 = $130;
    }
    HEAP32[$49 + ($50 << 2) >> 2] = $11;
    $53 = $49 + ($50 + 1 << 2) | 0;
    _memcpy($49 | 0, $30 | 0, $56 | 0) | 0;
    HEAP32[$10 >> 2] = $49;
    HEAP32[$12 >> 2] = $53;
    HEAP32[$14 >> 2] = $49 + ($$0$i8$i$i$i$i << 2);
    if (!$58) {
     $$idx$pre$phi$i$iZZ2D = $10;
     $$idx1$val$i$i = $53;
    } else {
     __ZdlPv($58);
     $$idx$pre$phi$i$iZZ2D = $10;
     $$idx1$val$i$i = HEAP32[$12 >> 2] | 0;
    }
   }
   $62 = $this + 16 | 0;
   HEAP8[$4 + 4 >> 0] = HEAP8[$62 >> 0] | 0;
   $69 = $this + 36 | 0;
   HEAP32[$69 >> 2] = $$idx1$val$i$i - (HEAP32[$$idx$pre$phi$i$iZZ2D >> 2] | 0) >> 2;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $70 = HEAP32[$69 >> 2] | 0;
   if ($70 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) {
    $126 = $agg$result + 8 | 0;
    HEAP32[$126 >> 2] = $4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
   $76 = $this + 32 | 0;
   if (!(+($70 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$76 >> 2] | 0) >>> 0))) {
    $126 = $agg$result + 8 | 0;
    HEAP32[$126 >> 2] = $4;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
   __THREW__ = 0;
   invoke_vii(62, $this | 0, $4 | 0);
   $81 = __THREW__;
   __THREW__ = 0;
   if ($81 & 1) break L1;
   __THREW__ = 0;
   invoke_vii(63, $this + 56 | 0, $this | 0);
   $84 = __THREW__;
   __THREW__ = 0;
   if ($84 & 1) break L1;
   if (HEAP32[$this + 40 >> 2] & 16) {
    __THREW__ = 0;
    invoke_vii(62, $this | 0, HEAP32[$this + 48 >> 2] | 0);
    $92 = __THREW__;
    __THREW__ = 0;
    if ($92 & 1) break L1;
   }
   $95 = (HEAP8[$62 >> 0] | 0) + 1 << 24 >> 24;
   HEAP8[$62 >> 0] = $95;
   $$idx6$i$i = $this + 20 | 0;
   $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
   $$idx7$val12$i$i = HEAP32[$12 >> 2] | 0;
   L35 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) $$lcssa$i$i = 0; else {
    $$idx5$val19$i$i = $$idx7$val12$i$i;
    $$idx6$val14$i$i = $$idx6$val11$i$i;
    $102 = $95;
    $i$013$i$i = 0;
    while (1) {
     $98 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
     if ((HEAP8[$98 + 4 >> 0] | 0) == $102 << 24 >> 24) {
      $$idx6$val$i$i = $$idx6$val14$i$i;
      $$idx7$val$i$i = $$idx5$val19$i$i;
      $i$1$i$i = $i$013$i$i;
     } else {
      if (!$98) {
       $$idx4$val$i$i = $$idx6$val14$i$i;
       $$idx5$val$i$i = $$idx5$val19$i$i;
      } else {
       FUNCTION_TABLE_vi[HEAP32[(HEAP32[$98 >> 2] | 0) + 4 >> 2] & 255]($98);
       $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $$idx5$val$i$i = HEAP32[$12 >> 2] | 0;
      }
      $111 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
      if (($i$013$i$i | 0) == ($111 | 0)) {
       $$idx6$val$pre$i$i = $$idx4$val$i$i;
       $116 = $$idx5$val$i$i;
      } else {
       HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($111 << 2) >> 2];
       $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
       $116 = HEAP32[$12 >> 2] | 0;
      }
      $scevgep4$i$i$i$i$i = $116 + -4 | 0;
      HEAP32[$12 >> 2] = $scevgep4$i$i$i$i$i;
      $$idx6$val$i$i = $$idx6$val$pre$i$i;
      $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
      $i$1$i$i = $i$013$i$i + -1 | 0;
     }
     $118 = $i$1$i$i + 1 | 0;
     $122 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
     if ($118 >>> 0 >= $122 >>> 0) {
      $$lcssa$i$i = $122;
      break L35;
     }
     $$idx5$val19$i$i = $$idx7$val$i$i;
     $$idx6$val14$i$i = $$idx6$val$i$i;
     $102 = HEAP8[$62 >> 0] | 0;
     $i$013$i$i = $118;
    }
   } while (0);
   HEAP32[$69 >> 2] = $$lcssa$i$i;
   HEAP32[$76 >> 2] = $$lcssa$i$i;
   $126 = $agg$result + 8 | 0;
   HEAP32[$126 >> 2] = $4;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   STACKTOP = sp;
   return;
  } while (0);
  if ((label | 0) == 33) {
   $124 = ___cxa_find_matching_catch() | 0;
   $eh$lpad$body$i$index2Z2D = tempRet0;
   $eh$lpad$body$i$indexZ2D = $124;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $eh$lpad$body$index7Z2D = $eh$lpad$body$i$index2Z2D;
  $eh$lpad$body$indexZ2D = $eh$lpad$body$i$indexZ2D;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 } while (0);
 $127 = ___cxa_find_matching_catch() | 0;
 $eh$lpad$body$index7Z2D = tempRet0;
 $eh$lpad$body$indexZ2D = $127;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $101 = 0, $104 = 0, $115 = 0, $120 = 0, $123 = 0.0, $124 = 0, $13 = 0, $136 = 0, $137 = 0, $140 = 0, $141 = 0, $15 = 0, $151 = 0, $152 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $7 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 240 | 0;
 $__grouping = sp;
 $__buf = sp + 188 | 0;
 $__a_end = sp + 184 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 176 | 0;
 $__dc = sp + 180 | 0;
 $__in_units = sp + 241 | 0;
 $__exp = sp + 242 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($8 & 1) label = 25; else {
  $13 = $__buf + 8 | 0;
  $15 = $__buf + 1 | 0;
  $16 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L6 : while (1) {
   if (!$$pre$i$i$i5) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i5;
   } else $$pre$i$i$i = $$pre$i$i$i5;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0)) {
   $115 = HEAP32[$__g_end >> 2] | 0;
   if (($115 - $__g | 0) < 160) {
    $120 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $115 + 4;
    HEAP32[$115 >> 2] = $120;
   }
  }
  __THREW__ = 0;
  $123 = +invoke_diii(1, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $124 = __THREW__;
  __THREW__ = 0;
  if ($124 & 1) label = 25; else {
   HEAPF32[$__v >> 2] = $123;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $141 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $136 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     label = 25;
     break;
    }
    if (($136 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $141 = 0;
    } else $141 = $$pre$i$i$i$lcssa;
   } else $141 = $$pre$i$i$i$lcssa;
   $140 = ($141 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $151 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $152 = __THREW__;
     __THREW__ = 0;
     if ($152 & 1) {
      label = 25;
      break L4;
     }
     if (($151 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$140) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($140) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $157 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $157 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $101 = 0, $104 = 0, $115 = 0, $120 = 0, $123 = 0.0, $124 = 0, $13 = 0, $136 = 0, $137 = 0, $140 = 0, $141 = 0, $15 = 0, $151 = 0, $152 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $7 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 240 | 0;
 $__grouping = sp;
 $__buf = sp + 188 | 0;
 $__a_end = sp + 184 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 176 | 0;
 $__dc = sp + 180 | 0;
 $__in_units = sp + 241 | 0;
 $__exp = sp + 242 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($8 & 1) label = 25; else {
  $13 = $__buf + 8 | 0;
  $15 = $__buf + 1 | 0;
  $16 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L6 : while (1) {
   if (!$$pre$i$i$i5) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i5;
   } else $$pre$i$i$i = $$pre$i$i$i5;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0)) {
   $115 = HEAP32[$__g_end >> 2] | 0;
   if (($115 - $__g | 0) < 160) {
    $120 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $115 + 4;
    HEAP32[$115 >> 2] = $120;
   }
  }
  __THREW__ = 0;
  $123 = +invoke_diii(3, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $124 = __THREW__;
  __THREW__ = 0;
  if ($124 & 1) label = 25; else {
   HEAPF64[$__v >> 3] = $123;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $141 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $136 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     label = 25;
     break;
    }
    if (($136 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $141 = 0;
    } else $141 = $$pre$i$i$i$lcssa;
   } else $141 = $$pre$i$i$i$lcssa;
   $140 = ($141 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $151 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $152 = __THREW__;
     __THREW__ = 0;
     if ($152 & 1) {
      label = 25;
      break L4;
     }
     if (($151 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$140) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($140) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $157 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $157 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i5 = 0, $$pre$i2$i$i = 0, $101 = 0, $104 = 0, $115 = 0, $120 = 0, $123 = 0.0, $124 = 0, $13 = 0, $136 = 0, $137 = 0, $140 = 0, $141 = 0, $15 = 0, $151 = 0, $152 = 0, $157 = 0, $158 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $7 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__decimal_point = 0, $__exp = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__in_units = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $__atoms = sp + 208 | 0;
 $__decimal_point = sp + 200 | 0;
 $__thousands_sep = sp + 240 | 0;
 $__grouping = sp;
 $__buf = sp + 188 | 0;
 $__a_end = sp + 184 | 0;
 $__g = sp + 16 | 0;
 $__g_end = sp + 176 | 0;
 $__dc = sp + 180 | 0;
 $__in_units = sp + 241 | 0;
 $__exp = sp + 242 | 0;
 __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($__grouping, $__iob, $__atoms, $__decimal_point, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $7 = 10; else $7 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $7 | 0, 0);
 $8 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($8 & 1) label = 25; else {
  $13 = $__buf + 8 | 0;
  $15 = $__buf + 1 | 0;
  $16 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $16;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  HEAP8[$__in_units >> 0] = 1;
  HEAP8[$__exp >> 0] = 69;
  $17 = $__buf + 4 | 0;
  $18 = HEAP8[$__decimal_point >> 0] | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i5 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $16;
  L6 : while (1) {
   if (!$$pre$i$i$i5) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i5 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i5 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i5 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i5 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i5;
   } else $$pre$i$i$i = $$pre$i$i$i5;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $158 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $158 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$17 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $15 : HEAP32[$13 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i & 255, $__in_units, $__exp, $__a$1, $__a_end, $18, $19, $__grouping, $__g, $__g_end, $__dc, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $158;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i5 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i5 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if (!((HEAP8[$__in_units >> 0] | 0) == 0 ? 1 : ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) == 0)) {
   $115 = HEAP32[$__g_end >> 2] | 0;
   if (($115 - $__g | 0) < 160) {
    $120 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $115 + 4;
    HEAP32[$115 >> 2] = $120;
   }
  }
  __THREW__ = 0;
  $123 = +invoke_diii(2, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0);
  $124 = __THREW__;
  __THREW__ = 0;
  if ($124 & 1) label = 25; else {
   HEAPF64[$__v >> 3] = $123;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $141 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $136 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $137 = __THREW__;
    __THREW__ = 0;
    if ($137 & 1) {
     label = 25;
     break;
    }
    if (($136 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $141 = 0;
    } else $141 = $$pre$i$i$i$lcssa;
   } else $141 = $$pre$i$i$i$lcssa;
   $140 = ($141 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $151 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $152 = __THREW__;
     __THREW__ = 0;
     if ($152 & 1) {
      label = 25;
      break L4;
     }
     if (($151 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$140) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($140) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $157 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $157 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $106 = 0, $108 = 0, $122 = 0, $124 = 0, $14 = 0, $146 = 0, $148 = 0, $162 = 0, $164 = 0, $2 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $41 = 0, $43 = 0, $5 = 0, $6 = 0, $65 = 0, $67 = 0, $7 = 0, $8 = 0, $81 = 0, $83 = 0, $9 = 0, $91 = 0, $95 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp;
 $1 = sp + 40 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 4 | 0;
 $4 = sp + 88 | 0;
 $5 = sp + 100 | 0;
 $6 = sp + 28 | 0;
 $7 = sp + 64 | 0;
 $8 = sp + 52 | 0;
 $9 = sp + 16 | 0;
 do if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10772) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $25 = __THREW__;
  __THREW__ = 0;
  if ($25 & 1) {
   $27 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($27);
  };
  HEAP32[$__nsn >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  };
  HEAP32[$__psn >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $65 = __THREW__;
  __THREW__ = 0;
  if ($65 & 1) {
   $67 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($67);
  };
  HEAP32[$__grp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $81 = __THREW__;
  __THREW__ = 0;
  if ($81 & 1) {
   $83 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($83);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$4 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
   break;
  }
 } else {
  $91 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10708) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 44 >> 2] & 127]($5, $91);
  $95 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $95;
  HEAP8[$__pat + 1 >> 0] = $95 >> 8;
  HEAP8[$__pat + 2 >> 0] = $95 >> 16;
  HEAP8[$__pat + 3 >> 0] = $95 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 32 >> 2] & 127]($6, $91);
  if (!(HEAP8[$__nsn >> 0] & 1)) {
   HEAP8[$__nsn + 1 >> 0] = 0;
   HEAP8[$__nsn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__nsn + 8 >> 2] >> 0] = 0;
   HEAP32[$__nsn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__nsn | 0, 0);
  $106 = __THREW__;
  __THREW__ = 0;
  if ($106 & 1) {
   $108 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($108);
  };
  HEAP32[$__nsn >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 28 >> 2] & 127]($7, $91);
  if (!(HEAP8[$__psn >> 0] & 1)) {
   HEAP8[$__psn + 1 >> 0] = 0;
   HEAP8[$__psn >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__psn + 8 >> 2] >> 0] = 0;
   HEAP32[$__psn + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__psn | 0, 0);
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) {
   $124 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($124);
  };
  HEAP32[$__psn >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
  HEAP8[$__dp >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 12 >> 2] & 127]($91) | 0;
  HEAP8[$__ts >> 0] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 16 >> 2] & 127]($91) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 20 >> 2] & 127]($8, $91);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $146 = __THREW__;
  __THREW__ = 0;
  if ($146 & 1) {
   $148 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($148);
  };
  HEAP32[$__grp >> 2] = HEAP32[$8 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$91 >> 2] | 0) + 24 >> 2] & 127]($9, $91);
  if (!(HEAP8[$__sym >> 0] & 1)) {
   HEAP8[$__sym + 1 >> 0] = 0;
   HEAP8[$__sym >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__sym + 8 >> 2] >> 0] = 0;
   HEAP32[$__sym + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__sym | 0, 0);
  $162 = __THREW__;
  __THREW__ = 0;
  if ($162 & 1) {
   $164 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($164);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$9 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   HEAP32[$9 >> 2] = 0;
   HEAP32[$9 + 4 >> 2] = 0;
   HEAP32[$9 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0;
   break;
  }
 } while (0);
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$lcssa$i = 0, $$01 = 0, $$113 = 0, $$114 = 0, $$1211 = 0, $$1212 = 0, $$byval_copy = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$pre7 = 0, $0 = 0, $102 = 0, $103 = 0, $108 = 0, $110 = 0, $113 = 0, $115 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $67 = 0, $7 = 0, $71 = 0, $74 = 0, $76 = 0, $8 = 0, $86 = 0, $87 = 0, $90 = 0, $91 = 0, $92 = 0, $__atoms = 0, $__loc = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2$lcssa = 0, $__nc$217 = 0, $__neg = 0, $__w$018 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp + 24 | 0;
 $vararg_buffer = sp;
 $__wbuf = sp + 136 | 0;
 $__wb = sp + 8 | 0;
 $__wn = sp + 4 | 0;
 $__loc = sp + 20 | 0;
 $__neg = sp + 236 | 0;
 $0 = sp + 16 | 0;
 $__atoms = sp + 124 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 187;
 $3 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 $4 = invoke_ii(68, $__iob | 0) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$113 = $33;
  $$1211 = tempRet0;
  $119 = 187;
  $120 = $__wbuf;
  label = 45;
 } else {
  HEAP32[$__loc >> 2] = $4;
  __THREW__ = 0;
  $7 = invoke_iii(22, $__loc | 0, 11164) | 0;
  $8 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($8 & 1) label = 10; else {
   HEAP8[$__neg >> 0] = 0;
   HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
   $12 = HEAP32[$__iob + 4 >> 2] | 0;
   __THREW__ = 0;
   HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
   $13 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $12 | 0, $__err | 0, $__neg | 0, $7 | 0, $__wb | 0, $__wn | 0, $3 | 0) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) label = 10; else {
    L7 : do if ($13) {
     __THREW__ = 0;
     invoke_iiiii(HEAP32[(HEAP32[$7 >> 2] | 0) + 32 >> 2] | 0, $7 | 0, 62926, 62936, $__atoms | 0) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if ($19 & 1) {
      label = 10;
      break L4;
     }
     $21 = HEAP32[$__wn >> 2] | 0;
     $22 = HEAP32[$__wb >> 2] | 0;
     $25 = $21 - $22 | 0;
     if (($25 | 0) > 98) {
      $28 = _malloc($25 + 2 | 0) | 0;
      $29 = $28;
      if (!$28) {
       __THREW__ = 0;
       invoke_v(7);
       $31 = __THREW__;
       __THREW__ = 0;
       if ($31 & 1) $40 = $29; else {
        $74 = $29;
        $__nc$0 = 0;
        label = 13;
       }
      } else {
       $74 = $29;
       $__nc$0 = $28;
       label = 13;
      }
     } else {
      $74 = 0;
      $__nc$0 = $$byval_copy;
      label = 13;
     }
     do if ((label | 0) == 13) {
      if (!(HEAP8[$__neg >> 0] | 0)) $__nc$1 = $__nc$0; else {
       HEAP8[$__nc$0 >> 0] = 45;
       $__nc$1 = $__nc$0 + 1 | 0;
      }
      $45 = $__atoms + 10 | 0;
      $46 = $__atoms;
      if ($22 >>> 0 < $21 >>> 0) {
       $48 = $__atoms + 1 | 0;
       $49 = $48 + 1 | 0;
       $50 = $49 + 1 | 0;
       $51 = $50 + 1 | 0;
       $52 = $51 + 1 | 0;
       $53 = $52 + 1 | 0;
       $54 = $53 + 1 | 0;
       $55 = $54 + 1 | 0;
       $56 = $55 + 1 | 0;
       $__nc$217 = $__nc$1;
       $__w$018 = $22;
       while (1) {
        $57 = HEAP8[$__w$018 >> 0] | 0;
        do if ((HEAP8[$__atoms >> 0] | 0) == $57 << 24 >> 24) $$0$lcssa$i = $__atoms; else if ((HEAP8[$48 >> 0] | 0) == $57 << 24 >> 24) $$0$lcssa$i = $48; else if ((HEAP8[$49 >> 0] | 0) == $57 << 24 >> 24) $$0$lcssa$i = $49; else if ((HEAP8[$50 >> 0] | 0) == $57 << 24 >> 24) $$0$lcssa$i = $50; else if ((HEAP8[$51 >> 0] | 0) == $57 << 24 >> 24) $$0$lcssa$i = $51; else {
         if ((HEAP8[$52 >> 0] | 0) == $57 << 24 >> 24) {
          $$0$lcssa$i = $52;
          break;
         }
         if ((HEAP8[$53 >> 0] | 0) == $57 << 24 >> 24) {
          $$0$lcssa$i = $53;
          break;
         }
         if ((HEAP8[$54 >> 0] | 0) == $57 << 24 >> 24) {
          $$0$lcssa$i = $54;
          break;
         }
         if ((HEAP8[$55 >> 0] | 0) == $57 << 24 >> 24) {
          $$0$lcssa$i = $55;
          break;
         }
         $$0$lcssa$i = (HEAP8[$56 >> 0] | 0) == $57 << 24 >> 24 ? $56 : $45;
        } while (0);
        HEAP8[$__nc$217 >> 0] = HEAP8[62926 + ($$0$lcssa$i - $46) >> 0] | 0;
        $__w$018 = $__w$018 + 1 | 0;
        $67 = $__nc$217 + 1 | 0;
        if ($__w$018 >>> 0 >= (HEAP32[$__wn >> 2] | 0) >>> 0) {
         $__nc$2$lcssa = $67;
         break;
        } else $__nc$217 = $67;
       }
      } else $__nc$2$lcssa = $__nc$1;
      HEAP8[$__nc$2$lcssa >> 0] = 0;
      HEAP32[$vararg_buffer >> 2] = $__v;
      if ((_sscanf($$byval_copy, 62937, $vararg_buffer) | 0) != 1) {
       __THREW__ = 0;
       invoke_vi(188, 62941);
       $71 = __THREW__;
       __THREW__ = 0;
       if ($71 & 1) {
        $40 = $74;
        break;
       }
      }
      if ($74) _free($74);
      break L7;
     } while (0);
     $37 = ___cxa_find_matching_catch() | 0;
     $38 = tempRet0;
     if (!$40) {
      $$0 = $37;
      $$01 = $38;
      $$phi$trans$insert$pre$phiZZZZ2D = $__wb;
      break L4;
     }
     _free($40);
     $$0 = $37;
     $$01 = $38;
     $$phi$trans$insert$pre$phiZZZZ2D = $__wb;
     break L4;
    } while (0);
    $76 = HEAP32[$__b >> 2] | 0;
    do if (!$76) $91 = 0; else if ((HEAP32[$76 + 12 >> 2] | 0) == (HEAP32[$76 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $86 = invoke_ii(HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] | 0, $76 | 0) | 0;
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) {
      label = 10;
      break L4;
     }
     if (($86 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $91 = 0;
      break;
     } else {
      $91 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $91 = $76; while (0);
    $90 = ($91 | 0) == 0;
    $92 = HEAP32[$__e >> 2] | 0;
    do if (!$92) label = 37; else {
     if ((HEAP32[$92 + 12 >> 2] | 0) == (HEAP32[$92 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $102 = invoke_ii(HEAP32[(HEAP32[$92 >> 2] | 0) + 36 >> 2] | 0, $92 | 0) | 0;
      $103 = __THREW__;
      __THREW__ = 0;
      if ($103 & 1) {
       label = 10;
       break L4;
      }
      if (($102 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 37;
       break;
      }
     }
     if (!$90) label = 38;
    } while (0);
    if ((label | 0) == 37) if ($90) label = 38;
    if ((label | 0) == 38) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $108 = HEAP32[$__b >> 2] | 0;
    __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
    $110 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($110) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$2 >> 2] | 0, $110 | 0);
     $113 = __THREW__;
     __THREW__ = 0;
     if ($113 & 1) {
      $115 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($115);
     }
    }
    STACKTOP = sp;
    return $108 | 0;
   }
  } while (0);
  if ((label | 0) == 10) {
   $35 = ___cxa_find_matching_catch() | 0;
   $$0 = $35;
   $$01 = tempRet0;
   $$phi$trans$insert$pre$phiZZZZ2D = $__wb;
  }
  __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$__loc >> 2] | 0) | 0;
  $$pre7 = HEAP32[$$phi$trans$insert$pre$phiZZZZ2D >> 2] | 0;
  HEAP32[$$phi$trans$insert$pre$phiZZZZ2D >> 2] = 0;
  if (!$$pre7) {
   $$114 = $$0;
   $$1212 = $$01;
  } else {
   $$113 = $$0;
   $$1211 = $$01;
   $119 = HEAP32[$2 >> 2] | 0;
   $120 = $$pre7;
   label = 45;
  }
 }
 if ((label | 0) == 45) {
  __THREW__ = 0;
  invoke_vi($119 | 0, $120 | 0);
  $121 = __THREW__;
  __THREW__ = 0;
  if ($121 & 1) {
   $123 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($123);
  } else {
   $$114 = $$113;
   $$1212 = $$1211;
  }
 }
 ___resumeException($$114 | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $101 = 0, $104 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $123 = 0, $125 = 0, $139 = 0, $14 = 0, $140 = 0, $143 = 0, $144 = 0, $154 = 0, $155 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 16 | 0;
 $__buf = sp + 4 | 0;
 $__a_end = sp + 192 | 0;
 $__g = sp + 32 | 0;
 $__g_end = sp;
 $__dc = sp + 28 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 25; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i4) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i4;
   } else $$pre$i$i$i = $$pre$i$i$i4;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $161 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $161 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i4 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(20, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = tempRet0;
  $123 = __THREW__;
  __THREW__ = 0;
  if ($123 & 1) label = 25; else {
   $125 = $__v;
   HEAP32[$125 >> 2] = $121;
   HEAP32[$125 + 4 >> 2] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $144 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $139 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $140 = __THREW__;
    __THREW__ = 0;
    if ($140 & 1) {
     label = 25;
     break;
    }
    if (($139 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $144 = 0;
    } else $144 = $$pre$i$i$i$lcssa;
   } else $144 = $$pre$i$i$i$lcssa;
   $143 = ($144 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $154 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $155 = __THREW__;
     __THREW__ = 0;
     if ($155 & 1) {
      label = 25;
      break L4;
     }
     if (($154 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$143) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($143) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $160 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $160 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $101 = 0, $104 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $123 = 0, $125 = 0, $139 = 0, $14 = 0, $140 = 0, $143 = 0, $144 = 0, $154 = 0, $155 = 0, $16 = 0, $160 = 0, $161 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 16 | 0;
 $__buf = sp + 4 | 0;
 $__a_end = sp + 192 | 0;
 $__g = sp + 32 | 0;
 $__g_end = sp;
 $__dc = sp + 28 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 25; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i4) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i4;
   } else $$pre$i$i$i = $$pre$i$i$i4;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $161 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $161 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $161 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $161;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i4 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(16, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = tempRet0;
  $123 = __THREW__;
  __THREW__ = 0;
  if ($123 & 1) label = 25; else {
   $125 = $__v;
   HEAP32[$125 >> 2] = $121;
   HEAP32[$125 + 4 >> 2] = $122;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $144 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $139 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $140 = __THREW__;
    __THREW__ = 0;
    if ($140 & 1) {
     label = 25;
     break;
    }
    if (($139 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $144 = 0;
    } else $144 = $$pre$i$i$i$lcssa;
   } else $144 = $$pre$i$i$i$lcssa;
   $143 = ($144 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $154 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $155 = __THREW__;
     __THREW__ = 0;
     if ($155 & 1) {
      label = 25;
      break L4;
     }
     if (($154 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$143) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($143) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $160 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $160 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($this, $loc, $file) {
 $this = $this | 0;
 $loc = $loc | 0;
 $file = $file | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $$1 = 0, $$13 = 0, $$2 = 0, $$24 = 0, $$3 = 0, $$35 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $35 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $49 = 0, $56 = 0, $58 = 0, $6 = 0, $65 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $84 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $99 = 0, $dir = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, $eh$lpad$body9$index7Z2D = 0, $eh$lpad$body9$indexZ2D = 0, $input = 0, $key = 0, $msg = 0, $success = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $dir = sp + 64 | 0;
 $key = sp + 40 | 0;
 $success = sp + 36 | 0;
 $input = sp + 24 | 0;
 $msg = sp + 12 | 0;
 $0 = sp;
 $1 = __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($loc, 47, -1) | 0;
 if (($1 | 0) == -1) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($dir, 62848, 0); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($dir, $loc, 0, $1 + 1 | 0, $loc);
 __THREW__ = 0;
 invoke_vii(40, $key | 0, $dir | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 do if ($4 & 1) {
  $17 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $17;
 } else {
  $6 = $key + 12 | 0;
  __THREW__ = 0;
  invoke_vii(40, $6 | 0, $file | 0);
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch() | 0;
   $10 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
   $eh$lpad$body$index2Z2D = $10;
   $eh$lpad$body$indexZ2D = $9;
   break;
  }
  $11 = $this + 88 | 0;
  __THREW__ = 0;
  $12 = invoke_iii(32, $11 | 0, $key | 0) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if ($13 & 1) label = 11; else {
   $15 = HEAP32[$12 >> 2] | 0;
   if ($15) {
    $$0 = $15;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
    STACKTOP = sp;
    return $$0 | 0;
   }
   HEAP32[$success >> 2] = 0;
   $35 = $file + 8 | 0;
   $37 = $file + 1 | 0;
   __THREW__ = 0;
   $39 = invoke_iiiii(HEAP32[$this + 112 >> 2] | 0, HEAP32[$this + 116 >> 2] | 0, ((HEAP8[$dir >> 0] & 1) == 0 ? $dir + 1 | 0 : HEAP32[$dir + 8 >> 2] | 0) | 0, ((HEAP8[$file >> 0] & 1) == 0 ? $37 : HEAP32[$35 >> 2] | 0) | 0, $success | 0) | 0;
   $40 = __THREW__;
   __THREW__ = 0;
   if ($40 & 1) label = 11; else {
    $42 = _strlen($39) | 0;
    __THREW__ = 0;
    invoke_viii(3, $input | 0, $39 | 0, $42 | 0);
    $43 = __THREW__;
    __THREW__ = 0;
    if ($43 & 1) label = 11; else {
     __THREW__ = 0;
     invoke_iii(19, $input | 0, $39 | 0) | 0;
     $45 = __THREW__;
     __THREW__ = 0;
     do if ($45 & 1) label = 23; else {
      _free($39);
      if (HEAP32[$success >> 2] | 0) {
       __THREW__ = 0;
       $99 = invoke_ii(67, 12) | 0;
       $100 = __THREW__;
       __THREW__ = 0;
       if ($100 & 1) {
        label = 23;
        break;
       }
       __THREW__ = 0;
       invoke_vii(40, $99 | 0, $input | 0);
       $102 = __THREW__;
       __THREW__ = 0;
       if ($102 & 1) {
        $107 = ___cxa_find_matching_catch() | 0;
        $108 = tempRet0;
        __ZdlPv($99);
        $$1 = $107;
        $$13 = $108;
        break;
       }
       __THREW__ = 0;
       $104 = invoke_iii(32, $11 | 0, $key | 0) | 0;
       $105 = __THREW__;
       __THREW__ = 0;
       if ($105 & 1) {
        label = 23;
        break;
       }
       HEAP32[$104 >> 2] = $99;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
       $$0 = $99;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
       STACKTOP = sp;
       return $$0 | 0;
      };
      HEAP32[$0 >> 2] = 0;
      HEAP32[$0 + 4 >> 2] = 0;
      HEAP32[$0 + 8 >> 2] = 0;
      $49 = HEAP8[$file >> 0] | 0;
      $56 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$file + 4 >> 2] | 0;
      __THREW__ = 0;
      invoke_viiii(13, $0 | 0, 54454, 22, $56 + 22 | 0);
      $58 = __THREW__;
      __THREW__ = 0;
      if (!($58 & 1)) {
       __THREW__ = 0;
       invoke_iiii(35, $0 | 0, ((HEAP8[$file >> 0] & 1) == 0 ? $37 : HEAP32[$35 >> 2] | 0) | 0, $56 | 0) | 0;
       $65 = __THREW__;
       __THREW__ = 0;
       if (!($65 & 1)) {
        __THREW__ = 0;
        $69 = invoke_iii(27, $0 | 0, 52634) | 0;
        $70 = __THREW__;
        __THREW__ = 0;
        if ($70 & 1) {
         $93 = ___cxa_find_matching_catch() | 0;
         $94 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
         $$1 = $93;
         $$13 = $94;
         break;
        };
        HEAP32[$msg >> 2] = HEAP32[$69 >> 2];
        HEAP32[$msg + 4 >> 2] = HEAP32[$69 + 4 >> 2];
        HEAP32[$msg + 8 >> 2] = HEAP32[$69 + 8 >> 2];
        HEAP32[$69 >> 2] = 0;
        HEAP32[$69 + 4 >> 2] = 0;
        HEAP32[$69 + 8 >> 2] = 0;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
        $72 = HEAP8[$input >> 0] | 0;
        $74 = ($72 & 1) == 0;
        __THREW__ = 0;
        invoke_iiii(35, $msg | 0, ($74 ? $input + 1 | 0 : HEAP32[$input + 8 >> 2] | 0) | 0, ($74 ? ($72 & 255) >>> 1 : HEAP32[$input + 4 >> 2] | 0) | 0) | 0;
        $84 = __THREW__;
        __THREW__ = 0;
        do if ($84 & 1) label = 26; else {
         $86 = ___cxa_allocate_exception(24) | 0;
         __THREW__ = 0;
         invoke_viiii(16, $86 | 0, $this + 56 | 0, $loc | 0, $msg | 0);
         $88 = __THREW__;
         __THREW__ = 0;
         if ($88 & 1) {
          $97 = ___cxa_find_matching_catch() | 0;
          $98 = tempRet0;
          ___cxa_free_exception($86 | 0);
          $$01 = $97;
          $$02 = $98;
          break;
         } else {
          __THREW__ = 0;
          invoke_viii(4, $86 | 0, 392, 179);
          __THREW__ = 0;
          label = 26;
          break;
         }
        } while (0);
        if ((label | 0) == 26) {
         $95 = ___cxa_find_matching_catch() | 0;
         $$01 = $95;
         $$02 = tempRet0;
        }
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($msg);
        $$1 = $$01;
        $$13 = $$02;
        break;
       }
      }
      $67 = ___cxa_find_matching_catch() | 0;
      $68 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
      $eh$lpad$body9$index7Z2D = $68;
      $eh$lpad$body9$indexZ2D = $67;
      label = 24;
     } while (0);
     if ((label | 0) == 23) {
      $91 = ___cxa_find_matching_catch() | 0;
      $eh$lpad$body9$index7Z2D = tempRet0;
      $eh$lpad$body9$indexZ2D = $91;
      label = 24;
     }
     if ((label | 0) == 24) {
      $$1 = $eh$lpad$body9$indexZ2D;
      $$13 = $eh$lpad$body9$index7Z2D;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($input);
     $$2 = $$1;
     $$24 = $$13;
    }
   }
  }
  if ((label | 0) == 11) {
   $19 = ___cxa_find_matching_catch() | 0;
   $$2 = $19;
   $$24 = tempRet0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($key);
  $$3 = $$2;
  $$35 = $$24;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
  ___resumeException($$3 | 0);
 } while (0);
 $$3 = $eh$lpad$body$indexZ2D;
 $$35 = $eh$lpad$body$index2Z2D;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($dir);
 ___resumeException($$3 | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $101 = 0, $104 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $149 = 0, $150 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 16 | 0;
 $__buf = sp + 4 | 0;
 $__a_end = sp + 192 | 0;
 $__g = sp + 32 | 0;
 $__g_end = sp;
 $__dc = sp + 28 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 25; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i4) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i4;
   } else $$pre$i$i$i = $$pre$i$i$i4;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i4 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(17, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) label = 25; else {
   HEAP16[$__v >> 1] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $139 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) {
     label = 25;
     break;
    }
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $139 = 0;
    } else $139 = $$pre$i$i$i$lcssa;
   } else $139 = $$pre$i$i$i$lcssa;
   $138 = ($139 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 25;
      break L4;
     }
     if (($149 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$138) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($138) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $155 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $155 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $101 = 0, $104 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $149 = 0, $150 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 16 | 0;
 $__buf = sp + 4 | 0;
 $__a_end = sp + 192 | 0;
 $__g = sp + 32 | 0;
 $__g_end = sp;
 $__dc = sp + 28 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 25; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i4) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i4;
   } else $$pre$i$i$i = $$pre$i$i$i4;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i4 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(19, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) label = 25; else {
   HEAP32[$__v >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $139 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) {
     label = 25;
     break;
    }
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $139 = 0;
    } else $139 = $$pre$i$i$i$lcssa;
   } else $139 = $$pre$i$i$i$lcssa;
   $138 = ($139 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 25;
      break L4;
     }
     if (($149 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$138) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($138) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $155 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $155 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $101 = 0, $104 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $149 = 0, $150 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 16 | 0;
 $__buf = sp + 4 | 0;
 $__a_end = sp + 192 | 0;
 $__g = sp + 32 | 0;
 $__g_end = sp;
 $__dc = sp + 28 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 25; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i4) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i4;
   } else $$pre$i$i$i = $$pre$i$i$i4;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i4 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(18, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) label = 25; else {
   HEAP32[$__v >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $139 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) {
     label = 25;
     break;
    }
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $139 = 0;
    } else $139 = $$pre$i$i$i$lcssa;
   } else $139 = $$pre$i$i$i$lcssa;
   $138 = ($139 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 25;
      break L4;
     }
     if (($149 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$138) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($138) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $155 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $155 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$lcssa = 0, $$pre$i$i$i4 = 0, $$pre$i2$i$i = 0, $0 = 0, $101 = 0, $104 = 0, $113 = 0, $118 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $149 = 0, $150 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $49 = 0, $55 = 0, $59 = 0, $66 = 0, $67 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $9 = 0, $95 = 0, $__a$0 = 0, $__a$1 = 0, $__a$2 = 0, $__a_end = 0, $__atoms = 0, $__buf = 0, $__dc = 0, $__g = 0, $__g_end = 0, $__grouping = 0, $__thousands_sep = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__atoms = sp + 198 | 0;
 $__thousands_sep = sp + 196 | 0;
 $__grouping = sp + 16 | 0;
 $__buf = sp + 4 | 0;
 $__a_end = sp + 192 | 0;
 $__g = sp + 32 | 0;
 $__g_end = sp;
 $__dc = sp + 28 | 0;
 $0 = __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($__iob) | 0;
 __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($__grouping, $__iob, $__atoms, $__thousands_sep);
 HEAP32[$__buf >> 2] = 0;
 HEAP32[$__buf + 4 >> 2] = 0;
 HEAP32[$__buf + 8 >> 2] = 0;
 if (!(HEAP8[$__buf >> 0] & 1)) $8 = 10; else $8 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
 __THREW__ = 0;
 invoke_viii(5, $__buf | 0, $8 | 0, 0);
 $9 = __THREW__;
 __THREW__ = 0;
 L4 : do if ($9 & 1) label = 25; else {
  $14 = $__buf + 8 | 0;
  $16 = $__buf + 1 | 0;
  $17 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
  HEAP32[$__a_end >> 2] = $17;
  HEAP32[$__g_end >> 2] = $__g;
  HEAP32[$__dc >> 2] = 0;
  $18 = $__buf + 4 | 0;
  $19 = HEAP8[$__thousands_sep >> 0] | 0;
  $$pre$i$i$i4 = HEAP32[$__b >> 2] | 0;
  $__a$0 = $17;
  L6 : while (1) {
   if (!$$pre$i$i$i4) $$pre$i$i$i = 0; else if ((HEAP32[$$pre$i$i$i4 + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i4 + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $29 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i4 >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i4 | 0) | 0;
    $30 = __THREW__;
    __THREW__ = 0;
    if ($30 & 1) {
     label = 24;
     break;
    }
    if (($29 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $$pre$i$i$i = 0;
    } else $$pre$i$i$i = $$pre$i$i$i4;
   } else $$pre$i$i$i = $$pre$i$i$i4;
   $33 = ($$pre$i$i$i | 0) == 0;
   $34 = HEAP32[$__e >> 2] | 0;
   do if (!$34) label = 16; else {
    if ((HEAP32[$34 + 12 >> 2] | 0) != (HEAP32[$34 + 16 >> 2] | 0)) if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
    __THREW__ = 0;
    $44 = invoke_ii(HEAP32[(HEAP32[$34 >> 2] | 0) + 36 >> 2] | 0, $34 | 0) | 0;
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) {
     label = 24;
     break L6;
    }
    if (($44 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     label = 16;
     break;
    } else if ($33) {
     $156 = $34;
     break;
    } else {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = $34;
     $__a$2 = $__a$0;
     break L6;
    }
   } while (0);
   if ((label | 0) == 16) {
    label = 0;
    if ($33) {
     $$pre$i$i$i$lcssa = $$pre$i$i$i;
     $$pre$i2$i$i = 0;
     $__a$2 = $__a$0;
     break;
    } else $156 = 0;
   }
   $49 = HEAP8[$__buf >> 0] | 0;
   $55 = ($49 & 1) == 0 ? ($49 & 255) >>> 1 : HEAP32[$18 >> 2] | 0;
   if ((HEAP32[$__a_end >> 2] | 0) == ($__a$0 + $55 | 0)) {
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $55 << 1 | 0, 0);
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     label = 24;
     break;
    }
    if (!(HEAP8[$__buf >> 0] & 1)) $66 = 10; else $66 = (HEAP32[$__buf >> 2] & -2) + -1 | 0;
    __THREW__ = 0;
    invoke_viii(5, $__buf | 0, $66 | 0, 0);
    $67 = __THREW__;
    __THREW__ = 0;
    if ($67 & 1) {
     label = 24;
     break;
    }
    $73 = (HEAP8[$__buf >> 0] & 1) == 0 ? $16 : HEAP32[$14 >> 2] | 0;
    HEAP32[$__a_end >> 2] = $73 + $55;
    $__a$1 = $73;
   } else $__a$1 = $__a$0;
   $79 = $$pre$i$i$i + 12 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   $81 = $$pre$i$i$i + 16 | 0;
   if (($80 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    $87 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     label = 24;
     break;
    } else $$0$i$i = $87;
   } else $$0$i$i = HEAPU8[$80 >> 0] | 0;
   if (__ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($$0$i$i & 255, $0, $__a$1, $__a_end, $__dc, $19, $__grouping, $__g, $__g_end, $__atoms) | 0) {
    $$pre$i$i$i$lcssa = $$pre$i$i$i;
    $$pre$i2$i$i = $156;
    $__a$2 = $__a$1;
    break;
   }
   $95 = HEAP32[$79 >> 2] | 0;
   if (($95 | 0) == (HEAP32[$81 >> 2] | 0)) {
    __THREW__ = 0;
    invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 40 >> 2] | 0, $$pre$i$i$i | 0) | 0;
    $101 = __THREW__;
    __THREW__ = 0;
    if ($101 & 1) {
     label = 24;
     break;
    } else {
     $$pre$i$i$i4 = $$pre$i$i$i;
     $__a$0 = $__a$1;
     continue;
    }
   } else {
    HEAP32[$79 >> 2] = $95 + 1;
    $$pre$i$i$i4 = $$pre$i$i$i;
    $__a$0 = $__a$1;
    continue;
   }
  }
  if ((label | 0) == 24) {
   $75 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $75;
   $lpad$phi$index2 = tempRet0;
   break;
  }
  $104 = HEAP8[$__grouping >> 0] | 0;
  if ((($104 & 1) == 0 ? ($104 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
   $113 = HEAP32[$__g_end >> 2] | 0;
   if (($113 - $__g | 0) < 160) {
    $118 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $113 + 4;
    HEAP32[$113 >> 2] = $118;
   }
  }
  __THREW__ = 0;
  $121 = invoke_iiiii(15, $__a$2 | 0, HEAP32[$__a_end >> 2] | 0, $__err | 0, $0 | 0) | 0;
  $122 = __THREW__;
  __THREW__ = 0;
  if ($122 & 1) label = 25; else {
   HEAP32[$__v >> 2] = $121;
   __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, HEAP32[$__g_end >> 2] | 0, $__err);
   if (!$$pre$i$i$i$lcssa) $139 = 0; else if ((HEAP32[$$pre$i$i$i$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i$lcssa + 16 >> 2] | 0)) {
    __THREW__ = 0;
    $134 = invoke_ii(HEAP32[(HEAP32[$$pre$i$i$i$lcssa >> 2] | 0) + 36 >> 2] | 0, $$pre$i$i$i$lcssa | 0) | 0;
    $135 = __THREW__;
    __THREW__ = 0;
    if ($135 & 1) {
     label = 25;
     break;
    }
    if (($134 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $139 = 0;
    } else $139 = $$pre$i$i$i$lcssa;
   } else $139 = $$pre$i$i$i$lcssa;
   $138 = ($139 | 0) == 0;
   do if (!$$pre$i2$i$i) label = 49; else {
    if ((HEAP32[$$pre$i2$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $149 = invoke_ii(HEAP32[(HEAP32[$$pre$i2$i$i >> 2] | 0) + 36 >> 2] | 0, $$pre$i2$i$i | 0) | 0;
     $150 = __THREW__;
     __THREW__ = 0;
     if ($150 & 1) {
      label = 25;
      break L4;
     }
     if (($149 | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 49;
      break;
     }
    }
    if (!$138) label = 50;
   } while (0);
   if ((label | 0) == 49) if ($138) label = 50;
   if ((label | 0) == 50) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
   $155 = HEAP32[$__b >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
   STACKTOP = sp;
   return $155 | 0;
  }
 } while (0);
 if ((label | 0) == 25) {
  $77 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $77;
  $lpad$phi$index2 = tempRet0;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__buf);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
 return 0;
}

function __ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($__intl, $__loc, $__pat, $__dp, $__ts, $__grp, $__sym, $__psn, $__nsn, $__fd) {
 $__intl = $__intl | 0;
 $__loc = $__loc | 0;
 $__pat = $__pat | 0;
 $__dp = $__dp | 0;
 $__ts = $__ts | 0;
 $__grp = $__grp | 0;
 $__sym = $__sym | 0;
 $__psn = $__psn | 0;
 $__nsn = $__nsn | 0;
 $__fd = $__fd | 0;
 var $0 = 0, $1 = 0, $10 = 0, $102 = 0, $104 = 0, $117 = 0, $119 = 0, $14 = 0, $141 = 0, $143 = 0, $156 = 0, $158 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $39 = 0, $4 = 0, $41 = 0, $5 = 0, $6 = 0, $63 = 0, $65 = 0, $7 = 0, $78 = 0, $8 = 0, $80 = 0, $88 = 0, $9 = 0, $92 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $0 = sp;
 $1 = sp + 40 | 0;
 $2 = sp + 76 | 0;
 $3 = sp + 4 | 0;
 $4 = sp + 88 | 0;
 $5 = sp + 100 | 0;
 $6 = sp + 28 | 0;
 $7 = sp + 64 | 0;
 $8 = sp + 52 | 0;
 $9 = sp + 16 | 0;
 do if ($__intl) {
  $10 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10900) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 44 >> 2] & 127]($0, $10);
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP8[$__pat >> 0] = $14;
  HEAP8[$__pat + 1 >> 0] = $14 >> 8;
  HEAP8[$__pat + 2 >> 0] = $14 >> 16;
  HEAP8[$__pat + 3 >> 0] = $14 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 32 >> 2] & 127]($1, $10);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__nsn | 0, 0);
  $24 = __THREW__;
  __THREW__ = 0;
  if ($24 & 1) {
   $26 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($26);
  };
  HEAP32[$__nsn >> 2] = HEAP32[$1 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($1);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 127]($2, $10);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__psn | 0, 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if ($39 & 1) {
   $41 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($41);
  };
  HEAP32[$__psn >> 2] = HEAP32[$2 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$2 + 8 >> 2];
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($2);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 127]($3, $10);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $63 = __THREW__;
  __THREW__ = 0;
  if ($63 & 1) {
   $65 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($65);
  };
  HEAP32[$__grp >> 2] = HEAP32[$3 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 127]($4, $10);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__sym | 0, 0);
  $78 = __THREW__;
  __THREW__ = 0;
  if ($78 & 1) {
   $80 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($80);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$4 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($4);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 127]($10) | 0;
   break;
  }
 } else {
  $88 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 10836) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 44 >> 2] & 127]($5, $88);
  $92 = HEAP32[$5 >> 2] | 0;
  HEAP8[$__pat >> 0] = $92;
  HEAP8[$__pat + 1 >> 0] = $92 >> 8;
  HEAP8[$__pat + 2 >> 0] = $92 >> 16;
  HEAP8[$__pat + 3 >> 0] = $92 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 32 >> 2] & 127]($6, $88);
  if (!(HEAP8[$__nsn >> 0] & 1)) HEAP8[$__nsn >> 0] = 0; else HEAP32[HEAP32[$__nsn + 8 >> 2] >> 2] = 0;
  HEAP32[$__nsn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__nsn | 0, 0);
  $102 = __THREW__;
  __THREW__ = 0;
  if ($102 & 1) {
   $104 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($104);
  };
  HEAP32[$__nsn >> 2] = HEAP32[$6 >> 2];
  HEAP32[$__nsn + 4 >> 2] = HEAP32[$6 + 4 >> 2];
  HEAP32[$__nsn + 8 >> 2] = HEAP32[$6 + 8 >> 2];
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 127]($7, $88);
  if (!(HEAP8[$__psn >> 0] & 1)) HEAP8[$__psn >> 0] = 0; else HEAP32[HEAP32[$__psn + 8 >> 2] >> 2] = 0;
  HEAP32[$__psn + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__psn | 0, 0);
  $117 = __THREW__;
  __THREW__ = 0;
  if ($117 & 1) {
   $119 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($119);
  };
  HEAP32[$__psn >> 2] = HEAP32[$7 >> 2];
  HEAP32[$__psn + 4 >> 2] = HEAP32[$7 + 4 >> 2];
  HEAP32[$__psn + 8 >> 2] = HEAP32[$7 + 8 >> 2];
  HEAP32[$7 >> 2] = 0;
  HEAP32[$7 + 4 >> 2] = 0;
  HEAP32[$7 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($7);
  HEAP32[$__dp >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 12 >> 2] & 127]($88) | 0;
  HEAP32[$__ts >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 16 >> 2] & 127]($88) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 20 >> 2] & 127]($8, $88);
  if (!(HEAP8[$__grp >> 0] & 1)) {
   HEAP8[$__grp + 1 >> 0] = 0;
   HEAP8[$__grp >> 0] = 0;
  } else {
   HEAP8[HEAP32[$__grp + 8 >> 2] >> 0] = 0;
   HEAP32[$__grp + 4 >> 2] = 0;
  }
  __THREW__ = 0;
  invoke_vii(45, $__grp | 0, 0);
  $141 = __THREW__;
  __THREW__ = 0;
  if ($141 & 1) {
   $143 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($143);
  };
  HEAP32[$__grp >> 2] = HEAP32[$8 >> 2];
  HEAP32[$__grp + 4 >> 2] = HEAP32[$8 + 4 >> 2];
  HEAP32[$__grp + 8 >> 2] = HEAP32[$8 + 8 >> 2];
  HEAP32[$8 >> 2] = 0;
  HEAP32[$8 + 4 >> 2] = 0;
  HEAP32[$8 + 8 >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$88 >> 2] | 0) + 24 >> 2] & 127]($9, $88);
  if (!(HEAP8[$__sym >> 0] & 1)) HEAP8[$__sym >> 0] = 0; else HEAP32[HEAP32[$__sym + 8 >> 2] >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(74, $__sym | 0, 0);
  $156 = __THREW__;
  __THREW__ = 0;
  if ($156 & 1) {
   $158 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($158);
  } else {
   HEAP32[$__sym >> 2] = HEAP32[$9 >> 2];
   HEAP32[$__sym + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$__sym + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   HEAP32[$9 >> 2] = 0;
   HEAP32[$9 + 4 >> 2] = 0;
   HEAP32[$9 + 8 >> 2] = 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($9);
   $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 127]($88) | 0;
   break;
  }
 } while (0);
 HEAP32[$__fd >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc($alloc, $file, $input) {
 $alloc = $alloc | 0;
 $file = $file | 0;
 $input = $input | 0;
 var $$0$i = 0, $$01 = 0, $$01$i = 0, $$012 = 0, $$0311 = 0, $$1 = 0, $$14 = 0, $$2 = 0, $$25 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $48 = 0, $49 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $64 = 0, $68 = 0, $7 = 0, $70 = 0, $80 = 0, $84 = 0, $86 = 0, $88 = 0, $__f$01$i$i = 0, $__f$01$i$i8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $parser = 0, $ss = 0, $token_list = 0, label = 0, sp = 0, $__f$01$i$i8$looptemp = 0, $__f$01$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 180 | 0;
 $token_list = sp + 168 | 0;
 $parser = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 __Z12jsonlang_lexRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPKc($token_list, $file, $input);
 HEAP32[$parser >> 2] = $token_list;
 HEAP32[$parser + 4 >> 2] = $alloc;
 __THREW__ = 0;
 $3 = invoke_iiii(32, $parser | 0, 15, 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($4 & 1) {
  $56 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index7Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $56;
  label = 19;
 } else {
  $6 = $token_list + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ((HEAP32[$7 + 8 >> 2] | 0) == 31) {
   $64 = $token_list + 8 | 0;
   if (!(HEAP32[$64 >> 2] | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   }
   $68 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
   $70 = HEAP32[$7 >> 2] | 0;
   HEAP32[$70 + 4 >> 2] = HEAP32[$68 >> 2];
   HEAP32[HEAP32[$68 >> 2] >> 2] = $70;
   HEAP32[$64 >> 2] = 0;
   if (($7 | 0) == ($token_list | 0)) {
    STACKTOP = sp;
    return $3 | 0;
   } else $__f$01$i$i8 = $7;
   do {
    $__f$01$i$i8$looptemp = $__f$01$i$i8;
    $__f$01$i$i8 = HEAP32[$__f$01$i$i8 + 4 >> 2] | 0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i8$looptemp + 24 | 0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i8$looptemp + 12 | 0);
    __ZdlPv($__f$01$i$i8$looptemp);
   } while (($__f$01$i$i8 | 0) != ($token_list | 0));
   STACKTOP = sp;
   return $3 | 0;
  }
  $11 = $ss + 64 | 0;
  $12 = $ss + 8 | 0;
  HEAP32[$12 >> 2] = 2912;
  $13 = $ss + 12 | 0;
  HEAP32[$ss >> 2] = 2952;
  HEAP32[$11 >> 2] = 2972;
  HEAP32[$ss + 4 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(41, $ss + 64 | 0, $13 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $29 = ___cxa_find_matching_catch() | 0;
   $$0$i = tempRet0;
   $$01$i = $29;
  } else {
   HEAP32[$ss + 136 >> 2] = 0;
   HEAP32[$ss + 140 >> 2] = -1;
   HEAP32[$ss >> 2] = 2892;
   HEAP32[$ss + 64 >> 2] = 2932;
   HEAP32[$12 >> 2] = 2912;
   __THREW__ = 0;
   invoke_vi(173, $13 | 0);
   $21 = __THREW__;
   __THREW__ = 0;
   do if ($21 & 1) {
    $31 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$i$index2Z2D = tempRet0;
    $eh$lpad$body$i$indexZ2D = $31;
   } else {
    HEAP32[$13 >> 2] = 2988;
    $23 = $ss + 44 | 0;
    HEAP32[$23 >> 2] = 0;
    HEAP32[$23 + 4 >> 2] = 0;
    HEAP32[$23 + 8 >> 2] = 0;
    HEAP32[$23 + 12 >> 2] = 0;
    HEAP32[$ss + 60 >> 2] = 24;
    HEAP32[$0 >> 2] = 0;
    HEAP32[$0 + 4 >> 2] = 0;
    HEAP32[$0 + 8 >> 2] = 0;
    __THREW__ = 0;
    invoke_vii(42, $13 | 0, $0 | 0);
    $25 = __THREW__;
    __THREW__ = 0;
    if ($25 & 1) {
     $27 = ___cxa_find_matching_catch() | 0;
     $28 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
     $eh$lpad$body$i$index2Z2D = $28;
     $eh$lpad$body$i$indexZ2D = $27;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    $33 = $ss + 8 | 0;
    __THREW__ = 0;
    $34 = invoke_iiii(29, $33 | 0, 50732, 16) | 0;
    $35 = __THREW__;
    __THREW__ = 0;
    L24 : do if ($35 & 1) label = 20; else {
     __THREW__ = 0;
     invoke_vii(51, $34 | 0, (HEAP32[$6 >> 2] | 0) + 8 | 0);
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) label = 20; else {
      $41 = ___cxa_allocate_exception(40) | 0;
      $42 = HEAP32[$6 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(43, $1 | 0, $13 | 0);
      $43 = __THREW__;
      __THREW__ = 0;
      L27 : do if ($43 & 1) {
       $60 = ___cxa_find_matching_catch() | 0;
       $$012 = $60;
       $$0311 = tempRet0;
      } else {
       __THREW__ = 0;
       invoke_vii(40, $41 | 0, $42 + 24 | 0);
       $46 = __THREW__;
       __THREW__ = 0;
       do if ($46 & 1) $$01 = 1; else {
        $48 = $41 + 12 | 0;
        $49 = $42 + 36 | 0;
        HEAP32[$48 >> 2] = HEAP32[$49 >> 2];
        HEAP32[$48 + 4 >> 2] = HEAP32[$49 + 4 >> 2];
        HEAP32[$48 + 8 >> 2] = HEAP32[$49 + 8 >> 2];
        HEAP32[$48 + 12 >> 2] = HEAP32[$49 + 12 >> 2];
        __THREW__ = 0;
        invoke_vii(40, $41 + 28 | 0, $1 | 0);
        $51 = __THREW__;
        __THREW__ = 0;
        if ($51 & 1) {
         $53 = ___cxa_find_matching_catch() | 0;
         $54 = tempRet0;
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($41);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
         $$012 = $53;
         $$0311 = $54;
         break L27;
        } else {
         __THREW__ = 0;
         invoke_viii(4, $41 | 0, 8, 172);
         __THREW__ = 0;
         $$01 = 0;
         break;
        }
       } while (0);
       $62 = ___cxa_find_matching_catch() | 0;
       $63 = tempRet0;
       __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
       if ($$01) {
        $$012 = $62;
        $$0311 = $63;
       } else {
        $$1 = $62;
        $$14 = $63;
        break L24;
       }
      } while (0);
      ___cxa_free_exception($41 | 0);
      $$1 = $$012;
      $$14 = $$0311;
     }
    } while (0);
    if ((label | 0) == 20) {
     $58 = ___cxa_find_matching_catch() | 0;
     $$1 = $58;
     $$14 = tempRet0;
    }
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$11 >> 2] = 2932;
    HEAP32[$33 >> 2] = 2912;
    HEAP32[$13 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($13);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
    $$2 = $$1;
    $$25 = $$14;
    break L1;
   } while (0);
   $$0$i = $eh$lpad$body$i$index2Z2D;
   $$01$i = $eh$lpad$body$i$indexZ2D;
  }
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($11);
  $eh$lpad$body$index7Z2D = $$0$i;
  $eh$lpad$body$indexZ2D = $$01$i;
  label = 19;
 } while (0);
 if ((label | 0) == 19) {
  $$2 = $eh$lpad$body$indexZ2D;
  $$25 = $eh$lpad$body$index7Z2D;
 }
 $80 = $token_list + 8 | 0;
 if (!(HEAP32[$80 >> 2] | 0)) ___resumeException($$2 | 0);
 $84 = HEAP32[$token_list + 4 >> 2] | 0;
 $86 = (HEAP32[$token_list >> 2] | 0) + 4 | 0;
 $88 = HEAP32[$84 >> 2] | 0;
 HEAP32[$88 + 4 >> 2] = HEAP32[$86 >> 2];
 HEAP32[HEAP32[$86 >> 2] >> 2] = $88;
 HEAP32[$80 >> 2] = 0;
 if (($84 | 0) == ($token_list | 0)) ___resumeException($$2 | 0); else $__f$01$i$i = $84;
 do {
  $__f$01$i$i$looptemp = $__f$01$i$i;
  $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 24 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__f$01$i$i$looptemp + 12 | 0);
  __ZdlPv($__f$01$i$i$looptemp);
 } while (($__f$01$i$i | 0) != ($token_list | 0));
 ___resumeException($$2 | 0);
 return 0;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($this, $__s, $__intl, $__iob, $__fl, $__units) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre17 = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $107 = 0, $11 = 0, $114 = 0, $117 = 0, $118 = 0, $119 = 0, $120 = 0, $123 = 0, $125 = 0, $127 = 0, $13 = 0, $130 = 0, $132 = 0, $134 = 0, $137 = 0, $139 = 0, $140 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $34 = 0, $4 = 0, $46 = 0, $47 = 0, $49 = 0, $53 = 0, $6 = 0, $61 = 0, $7 = 0, $73 = 0, $81 = 0, $9 = 0, $93 = 0, $95 = 0, $96 = 0, $98 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 992 | 0;
 $$byval_copy = sp;
 $vararg_buffer1 = sp + 8 | 0;
 $__buf = sp + 888 | 0;
 $__bb = sp + 428 | 0;
 $__digits = sp + 432 | 0;
 $__loc = sp + 16 | 0;
 $__pat = sp + 988 | 0;
 $__dp = sp + 880 | 0;
 $__ts = sp + 836 | 0;
 $__grp = sp + 840 | 0;
 $__sym = sp + 852 | 0;
 $__sn = sp + 864 | 0;
 $__fd = sp + 876 | 0;
 $__mbuf = sp + 24 | 0;
 $__mi = sp + 832 | 0;
 $__me = sp + 424 | 0;
 $0 = sp + 884 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[$$byval_copy >> 3] = $__units;
 $1 = _snprintf($__buf, 100, 62968, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(2) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $139 = 0;
   $140 = 0;
   label = 7;
  } else {
   __THREW__ = 0;
   HEAPF64[$vararg_buffer1 >> 3] = $__units;
   $6 = invoke_iiiii(11, $__bb | 0, $3 | 0, 62968, $vararg_buffer1 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $139 = 0;
    $140 = 0;
    label = 7;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(7);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $139 = 0;
      $140 = 0;
      label = 7;
      break;
     }
     $16 = HEAP32[$__bb >> 2] | 0;
    } else $16 = $9;
    $15 = $16;
    $18 = _malloc($6 << 2) | 0;
    $19 = $18;
    if (!$18) {
     __THREW__ = 0;
     invoke_v(7);
     $21 = __THREW__;
     __THREW__ = 0;
     if ($21 & 1) {
      $139 = $15;
      $140 = $19;
      label = 7;
     } else {
      $127 = $19;
      $130 = $15;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $127 = $19;
     $130 = $15;
     $__db$0 = $18;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $127 = 0;
  $130 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  $23 = invoke_ii(68, $__iob | 0) | 0;
  $24 = __THREW__;
  __THREW__ = 0;
  if ($24 & 1) {
   $139 = $130;
   $140 = $127;
   label = 7;
  } else {
   HEAP32[$__loc >> 2] = $23;
   __THREW__ = 0;
   $26 = invoke_iii(22, $__loc | 0, 11156) | 0;
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) label = 22; else {
    $29 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$26 >> 2] | 0) + 48 >> 2] | 0, $26 | 0, $29 | 0, $29 + $__n$0 | 0, $__db$0 | 0) | 0;
    $34 = __THREW__;
    __THREW__ = 0;
    if ($34 & 1) label = 22; else {
     if (!$__n$0) $46 = 0; else $46 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     HEAP32[$__grp >> 2] = 0;
     HEAP32[$__grp + 4 >> 2] = 0;
     HEAP32[$__grp + 8 >> 2] = 0;
     HEAP32[$__sym >> 2] = 0;
     HEAP32[$__sym + 4 >> 2] = 0;
     HEAP32[$__sym + 8 >> 2] = 0;
     HEAP32[$__sn >> 2] = 0;
     HEAP32[$__sn + 4 >> 2] = 0;
     HEAP32[$__sn + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(4, $__intl | 0, $46 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $47 = __THREW__;
     __THREW__ = 0;
     if ($47 & 1) {
      $102 = ___cxa_find_matching_catch() | 0;
      $$0 = $102;
      $$01 = tempRet0;
      $$pre17 = $23;
     } else {
      $49 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($49 | 0)) {
       $53 = HEAP8[$__sn >> 0] | 0;
       $61 = HEAP8[$__sym >> 0] | 0;
       $93 = ($__n$0 - $49 << 1 | 1) + $49 + (($53 & 1) == 0 ? ($53 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($61 & 1) == 0 ? ($61 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
      } else {
       $73 = HEAP8[$__sn >> 0] | 0;
       $81 = HEAP8[$__sym >> 0] | 0;
       $93 = $49 + 2 + (($73 & 1) == 0 ? ($73 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($81 & 1) == 0 ? ($81 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
      }
      if ($93 >>> 0 > 100) {
       $95 = _malloc($93 << 2) | 0;
       $96 = $95;
       if (!$95) {
        __THREW__ = 0;
        invoke_v(7);
        $98 = __THREW__;
        __THREW__ = 0;
        if ($98 & 1) $107 = $96; else {
         $123 = $96;
         $__mb$0 = 0;
         label = 26;
        }
       } else {
        $123 = $96;
        $__mb$0 = $95;
        label = 26;
       }
      } else {
       $123 = 0;
       $__mb$0 = $__mbuf;
       label = 26;
      }
      if ((label | 0) == 26) {
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + ($__n$0 << 2) | 0, $26 | 0, $46 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $49 | 0);
       $114 = __THREW__;
       __THREW__ = 0;
       if ($114 & 1) $107 = $123; else {
        HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
        $117 = HEAP32[$__mi >> 2] | 0;
        $118 = HEAP32[$__me >> 2] | 0;
        __THREW__ = 0;
        HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
        $119 = invoke_iiiiiii(40, $$byval_copy | 0, $__mb$0 | 0, $117 | 0, $118 | 0, $__iob | 0, $__fl | 0) | 0;
        $120 = __THREW__;
        __THREW__ = 0;
        if ($120 & 1) $107 = $123; else {
         if (!$123) $125 = $23; else {
          _free($123);
          $125 = HEAP32[$__loc >> 2] | 0;
         }
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
         __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         __ZNSt3__114__shared_count16__release_sharedEv($125) | 0;
         if ($127) _free($127);
         if ($130) _free($130);
         STACKTOP = sp;
         return $119 | 0;
        }
       }
      }
      $104 = ___cxa_find_matching_catch() | 0;
      $105 = tempRet0;
      if (!$107) {
       $$0 = $104;
       $$01 = $105;
       $$pre17 = $23;
      } else {
       _free($107);
       $$0 = $104;
       $$01 = $105;
       $$pre17 = HEAP32[$__loc >> 2] | 0;
      }
     }
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
     $132 = $$pre17;
    }
   }
   if ((label | 0) == 22) {
    $100 = ___cxa_find_matching_catch() | 0;
    $$1 = $100;
    $$12 = tempRet0;
    $132 = $23;
   }
   __ZNSt3__114__shared_count16__release_sharedEv($132) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $134 = $127;
   $137 = $130;
  }
 }
 if ((label | 0) == 7) {
  $13 = ___cxa_find_matching_catch() | 0;
  $$2 = $13;
  $$23 = tempRet0;
  $134 = $140;
  $137 = $139;
 }
 if ($134) _free($134);
 if ($137) _free($137);
 ___resumeException($$2 | 0);
 return 0;
}

function _mbsrtowcs($ws, $src, $wn, $st) {
 $ws = $ws | 0;
 $src = $src | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$0 = 0, $$02$ph = 0, $$0219 = 0, $$03 = 0, $$1 = 0, $$1$lcssa = 0, $$14$lcssa = 0, $$1415 = 0, $$2 = 0, $$2$lcssa = 0, $$25 = 0, $$25$lcssa = 0, $$3 = 0, $$36 = 0, $$4 = 0, $$434 = 0, $$47$ph = 0, $$4718 = 0, $$48 = 0, $$5 = 0, $$5$lcssa = 0, $$6 = 0, $$6$lcssa = 0, $$7 = 0, $$8 = 0, $$833 = 0, $$in = 0, $$lcssa102 = 0, $$lcssa90 = 0, $$lcssa94 = 0, $$lcssa96 = 0, $$lcssa97 = 0, $$lcssa98 = 0, $0 = 0, $101 = 0, $107 = 0, $108 = 0, $116 = 0, $118 = 0, $121 = 0, $126 = 0, $128 = 0, $131 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $33 = 0, $40 = 0, $47 = 0, $54 = 0, $63 = 0, $7 = 0, $71 = 0, $87 = 0, $90 = 0, $91 = 0, $93 = 0, $94 = 0, $97 = 0, $c$2 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $s$0 = 0, $s$1$lcssa = 0, $s$10 = 0, $s$1035 = 0, $s$109 = 0, $s$116 = 0, $s$2 = 0, $s$2$lcssa = 0, $s$3 = 0, $s$4 = 0, $s$5$lcssa = 0, $s$5$ph = 0, $s$520 = 0, $s$6 = 0, $s$6$lcssa = 0, $s$7 = 0, $s$7$lcssa = 0, $s$8 = 0, $s$9 = 0, label = 0;
 $0 = HEAP32[$src >> 2] | 0;
 if (!$st) label = 5; else {
  $2 = HEAP32[$st >> 2] | 0;
  if (!$2) label = 5; else if (!$ws) {
   $$36 = $wn;
   $c$2 = $2;
   $s$3 = $0;
   label = 16;
  } else {
   HEAP32[$st >> 2] = 0;
   $$3 = $ws;
   $$7 = $wn;
   $c$4 = $2;
   $s$8 = $0;
   label = 37;
  }
 }
 if ((label | 0) == 5) if (!$ws) {
  $$03 = $wn;
  $s$0 = $0;
  label = 7;
 } else {
  $$02$ph = $ws;
  $$47$ph = $wn;
  $s$5$ph = $0;
  label = 6;
 }
 L7 : while (1) if ((label | 0) == 6) {
  label = 0;
  if (!$$47$ph) {
   $s$5$lcssa = $s$5$ph;
   label = 26;
   break;
  } else {
   $$0219 = $$02$ph;
   $$4718 = $$47$ph;
   $s$520 = $s$5$ph;
  }
  while (1) {
   $63 = HEAP8[$s$520 >> 0] | 0;
   do if ((($63 & 255) + -1 | 0) >>> 0 < 127) if ($$4718 >>> 0 > 4 & ($s$520 & 3 | 0) == 0) {
    $$1 = $$0219;
    $$5 = $$4718;
    $s$6 = $s$520;
    while (1) {
     $71 = HEAP32[$s$6 >> 2] | 0;
     if (($71 + -16843009 | $71) & -2139062144) {
      $$1$lcssa = $$1;
      $$5$lcssa = $$5;
      $$lcssa94 = $71;
      $s$6$lcssa = $s$6;
      label = 32;
      break;
     }
     HEAP32[$$1 >> 2] = $71 & 255;
     HEAP32[$$1 + 4 >> 2] = HEAPU8[$s$6 + 1 >> 0];
     HEAP32[$$1 + 8 >> 2] = HEAPU8[$s$6 + 2 >> 0];
     $87 = $s$6 + 4 | 0;
     $90 = $$1 + 16 | 0;
     HEAP32[$$1 + 12 >> 2] = HEAPU8[$s$6 + 3 >> 0];
     $91 = $$5 + -4 | 0;
     if ($91 >>> 0 > 4) {
      $$1 = $90;
      $$5 = $91;
      $s$6 = $87;
     } else {
      $$lcssa96 = $87;
      $$lcssa97 = $90;
      $$lcssa98 = $91;
      label = 31;
      break;
     }
    }
    if ((label | 0) == 31) {
     label = 0;
     $$2 = $$lcssa97;
     $$6 = $$lcssa98;
     $94 = HEAP8[$$lcssa96 >> 0] | 0;
     $s$7 = $$lcssa96;
     break;
    } else if ((label | 0) == 32) {
     label = 0;
     $$2 = $$1$lcssa;
     $$6 = $$5$lcssa;
     $94 = $$lcssa94 & 255;
     $s$7 = $s$6$lcssa;
     break;
    }
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } else {
    $$2 = $$0219;
    $$6 = $$4718;
    $94 = $63;
    $s$7 = $s$520;
   } while (0);
   $93 = $94 & 255;
   if (($93 + -1 | 0) >>> 0 >= 127) {
    $$2$lcssa = $$2;
    $$6$lcssa = $$6;
    $$lcssa102 = $93;
    $s$7$lcssa = $s$7;
    break;
   }
   $97 = $s$7 + 1 | 0;
   HEAP32[$$2 >> 2] = $93;
   $$4718 = $$6 + -1 | 0;
   if (!$$4718) {
    $s$5$lcssa = $97;
    label = 26;
    break L7;
   } else {
    $$0219 = $$2 + 4 | 0;
    $s$520 = $97;
   }
  }
  $101 = $$lcssa102 + -194 | 0;
  if ($101 >>> 0 > 50) {
   $$434 = $$2$lcssa;
   $$833 = $$6$lcssa;
   $s$1035 = $s$7$lcssa;
   label = 48;
   break;
  }
  $$3 = $$2$lcssa;
  $$7 = $$6$lcssa;
  $c$4 = HEAP32[4116 + ($101 << 2) >> 2] | 0;
  $s$8 = $s$7$lcssa + 1 | 0;
  label = 37;
  continue;
 } else if ((label | 0) == 7) {
  label = 0;
  $7 = HEAP8[$s$0 >> 0] | 0;
  if ((($7 & 255) + -1 | 0) >>> 0 < 127) if (!($s$0 & 3)) {
   $14 = HEAP32[$s$0 >> 2] | 0;
   if (!(($14 + -16843009 | $14) & -2139062144)) {
    $$1415 = $$03;
    $s$116 = $s$0;
    while (1) {
     $19 = $s$116 + 4 | 0;
     $20 = $$1415 + -4 | 0;
     $21 = HEAP32[$19 >> 2] | 0;
     if (!(($21 + -16843009 | $21) & -2139062144)) {
      $$1415 = $20;
      $s$116 = $19;
     } else {
      $$14$lcssa = $20;
      $$in = $21;
      $s$1$lcssa = $19;
      break;
     }
    }
   } else {
    $$14$lcssa = $$03;
    $$in = $14;
    $s$1$lcssa = $s$0;
   }
   $$25 = $$14$lcssa;
   $28 = $$in & 255;
   $s$2 = $s$1$lcssa;
  } else {
   $$25 = $$03;
   $28 = $7;
   $s$2 = $s$0;
  } else {
   $$25 = $$03;
   $28 = $7;
   $s$2 = $s$0;
  }
  $27 = $28 & 255;
  if (($27 + -1 | 0) >>> 0 < 127) {
   $$03 = $$25 + -1 | 0;
   $s$0 = $s$2 + 1 | 0;
   label = 7;
   continue;
  } else {
   $$25$lcssa = $$25;
   $$lcssa90 = $27;
   $s$2$lcssa = $s$2;
  }
  $33 = $$lcssa90 + -194 | 0;
  if ($33 >>> 0 > 50) {
   $$434 = $ws;
   $$833 = $$25$lcssa;
   $s$1035 = $s$2$lcssa;
   label = 48;
   break;
  }
  $$36 = $$25$lcssa;
  $c$2 = HEAP32[4116 + ($33 << 2) >> 2] | 0;
  $s$3 = $s$2$lcssa + 1 | 0;
  label = 16;
  continue;
 } else if ((label | 0) == 16) {
  label = 0;
  $40 = (HEAPU8[$s$3 >> 0] | 0) >>> 3;
  if (($40 + -16 | $40 + ($c$2 >> 26)) >>> 0 > 7) {
   label = 17;
   break;
  }
  $47 = $s$3 + 1 | 0;
  if (!($c$2 & 33554432)) $s$4 = $47; else {
   if ((HEAP8[$47 >> 0] & -64) << 24 >> 24 != -128) {
    label = 20;
    break;
   }
   $54 = $s$3 + 2 | 0;
   if (!($c$2 & 524288)) $s$4 = $54; else {
    if ((HEAP8[$54 >> 0] & -64) << 24 >> 24 != -128) {
     label = 23;
     break;
    }
    $s$4 = $s$3 + 3 | 0;
   }
  }
  $$03 = $$36 + -1 | 0;
  $s$0 = $s$4;
  label = 7;
  continue;
 } else if ((label | 0) == 37) {
  label = 0;
  $107 = HEAPU8[$s$8 >> 0] | 0;
  $108 = $107 >>> 3;
  if (($108 + -16 | $108 + ($c$4 >> 26)) >>> 0 > 7) {
   label = 38;
   break;
  }
  $116 = $s$8 + 1 | 0;
  $118 = $107 + -128 | $c$4 << 6;
  if (($118 | 0) < 0) {
   $121 = HEAPU8[$116 >> 0] | 0;
   if (($121 & 192 | 0) != 128) {
    label = 41;
    break;
   }
   $126 = $s$8 + 2 | 0;
   $128 = $121 + -128 | $118 << 6;
   if (($128 | 0) < 0) {
    $131 = HEAPU8[$126 >> 0] | 0;
    if (($131 & 192 | 0) != 128) {
     label = 44;
     break;
    }
    $c$5 = $131 + -128 | $128 << 6;
    $s$9 = $s$8 + 3 | 0;
   } else {
    $c$5 = $128;
    $s$9 = $126;
   }
  } else {
   $c$5 = $118;
   $s$9 = $116;
  }
  HEAP32[$$3 >> 2] = $c$5;
  $$02$ph = $$3 + 4 | 0;
  $$47$ph = $$7 + -1 | 0;
  $s$5$ph = $s$9;
  label = 6;
  continue;
 }
 if ((label | 0) == 17) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 20) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 23) {
  $$4 = $ws;
  $$8 = $$36;
  $c$6 = $c$2;
  $s$10 = $s$3 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 26) {
  HEAP32[$src >> 2] = $s$5$lcssa;
  $$0 = $wn;
 } else if ((label | 0) == 38) {
  $$4 = $$3;
  $$8 = $$7;
  $c$6 = $c$4;
  $s$10 = $s$8 + -1 | 0;
  label = 47;
 } else if ((label | 0) == 41) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
  label = 52;
 } else if ((label | 0) == 44) {
  $$48 = $$3;
  $s$109 = $s$8 + -1 | 0;
  label = 52;
 }
 if ((label | 0) == 47) if (!$c$6) {
  $$434 = $$4;
  $$833 = $$8;
  $s$1035 = $s$10;
  label = 48;
 } else {
  $$48 = $$4;
  $s$109 = $s$10;
  label = 52;
 }
 if ((label | 0) == 48) if (!(HEAP8[$s$1035 >> 0] | 0)) {
  if ($$434) {
   HEAP32[$$434 >> 2] = 0;
   HEAP32[$src >> 2] = 0;
  }
  $$0 = $wn - $$833 | 0;
 } else {
  $$48 = $$434;
  $s$109 = $s$1035;
  label = 52;
 }
 if ((label | 0) == 52) {
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  if (!$$48) $$0 = -1; else {
   HEAP32[$src >> 2] = $s$109;
   $$0 = -1;
  }
 }
 return $$0 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($this, $__s, $__intl, $__iob, $__fl, $__units) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__units = +$__units;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$byval_copy = 0, $$pre20 = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $103 = 0, $105 = 0, $11 = 0, $112 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $121 = 0, $123 = 0, $125 = 0, $128 = 0, $13 = 0, $130 = 0, $132 = 0, $135 = 0, $137 = 0, $138 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $33 = 0, $4 = 0, $45 = 0, $46 = 0, $48 = 0, $52 = 0, $6 = 0, $60 = 0, $7 = 0, $72 = 0, $80 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $96 = 0, $98 = 0, $__bb = 0, $__buf = 0, $__db$0 = 0, $__digits = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__n$0 = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 $$byval_copy = sp;
 $vararg_buffer1 = sp + 8 | 0;
 $__buf = sp + 76 | 0;
 $__bb = sp + 36 | 0;
 $__digits = sp + 176 | 0;
 $__loc = sp + 68 | 0;
 $__pat = sp + 276 | 0;
 $__dp = sp + 380 | 0;
 $__ts = sp + 381 | 0;
 $__grp = sp + 40 | 0;
 $__sym = sp + 16 | 0;
 $__sn = sp + 56 | 0;
 $__fd = sp + 52 | 0;
 $__mbuf = sp + 280 | 0;
 $__mi = sp + 32 | 0;
 $__me = sp + 28 | 0;
 $0 = sp + 72 | 0;
 HEAP32[$__bb >> 2] = $__buf;
 HEAPF64[$$byval_copy >> 3] = $__units;
 $1 = _snprintf($__buf, 100, 62968, $$byval_copy) | 0;
 do if ($1 >>> 0 > 99) {
  __THREW__ = 0;
  $3 = invoke_i(2) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $137 = 0;
   $138 = 0;
   label = 7;
  } else {
   __THREW__ = 0;
   HEAPF64[$vararg_buffer1 >> 3] = $__units;
   $6 = invoke_iiiii(11, $__bb | 0, $3 | 0, 62968, $vararg_buffer1 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $137 = 0;
    $138 = 0;
    label = 7;
   } else {
    $9 = HEAP32[$__bb >> 2] | 0;
    if (!$9) {
     __THREW__ = 0;
     invoke_v(7);
     $11 = __THREW__;
     __THREW__ = 0;
     if ($11 & 1) {
      $137 = 0;
      $138 = 0;
      label = 7;
      break;
     }
     $16 = HEAP32[$__bb >> 2] | 0;
    } else $16 = $9;
    $15 = $16;
    $17 = _malloc($6) | 0;
    $18 = $17;
    if (!$17) {
     __THREW__ = 0;
     invoke_v(7);
     $20 = __THREW__;
     __THREW__ = 0;
     if ($20 & 1) {
      $137 = $15;
      $138 = $18;
      label = 7;
     } else {
      $125 = $18;
      $128 = $15;
      $__db$0 = 0;
      $__n$0 = $6;
      label = 10;
     }
    } else {
     $125 = $18;
     $128 = $15;
     $__db$0 = $17;
     $__n$0 = $6;
     label = 10;
    }
   }
  }
 } else {
  $125 = 0;
  $128 = 0;
  $__db$0 = $__digits;
  $__n$0 = $1;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  __THREW__ = 0;
  $22 = invoke_ii(68, $__iob | 0) | 0;
  $23 = __THREW__;
  __THREW__ = 0;
  if ($23 & 1) {
   $137 = $128;
   $138 = $125;
   label = 7;
  } else {
   HEAP32[$__loc >> 2] = $22;
   __THREW__ = 0;
   $25 = invoke_iii(22, $__loc | 0, 11164) | 0;
   $26 = __THREW__;
   __THREW__ = 0;
   if ($26 & 1) label = 22; else {
    $28 = HEAP32[$__bb >> 2] | 0;
    __THREW__ = 0;
    invoke_iiiii(HEAP32[(HEAP32[$25 >> 2] | 0) + 32 >> 2] | 0, $25 | 0, $28 | 0, $28 + $__n$0 | 0, $__db$0 | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if ($33 & 1) label = 22; else {
     if (!$__n$0) $45 = 0; else $45 = (HEAP8[HEAP32[$__bb >> 2] >> 0] | 0) == 45;
     HEAP32[$__grp >> 2] = 0;
     HEAP32[$__grp + 4 >> 2] = 0;
     HEAP32[$__grp + 8 >> 2] = 0;
     HEAP32[$__sym >> 2] = 0;
     HEAP32[$__sym + 4 >> 2] = 0;
     HEAP32[$__sym + 8 >> 2] = 0;
     HEAP32[$__sn >> 2] = 0;
     HEAP32[$__sn + 4 >> 2] = 0;
     HEAP32[$__sn + 8 >> 2] = 0;
     __THREW__ = 0;
     invoke_viiiiiiiiii(3, $__intl | 0, $45 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
     $46 = __THREW__;
     __THREW__ = 0;
     if ($46 & 1) {
      $100 = ___cxa_find_matching_catch() | 0;
      $$0 = $100;
      $$01 = tempRet0;
      $$pre20 = $22;
     } else {
      $48 = HEAP32[$__fd >> 2] | 0;
      if (($__n$0 | 0) > ($48 | 0)) {
       $52 = HEAP8[$__sn >> 0] | 0;
       $60 = HEAP8[$__sym >> 0] | 0;
       $92 = ($__n$0 - $48 << 1 | 1) + $48 + (($52 & 1) == 0 ? ($52 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($60 & 1) == 0 ? ($60 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
      } else {
       $72 = HEAP8[$__sn >> 0] | 0;
       $80 = HEAP8[$__sym >> 0] | 0;
       $92 = $48 + 2 + (($72 & 1) == 0 ? ($72 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($80 & 1) == 0 ? ($80 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
      }
      if ($92 >>> 0 > 100) {
       $93 = _malloc($92) | 0;
       $94 = $93;
       if (!$93) {
        __THREW__ = 0;
        invoke_v(7);
        $96 = __THREW__;
        __THREW__ = 0;
        if ($96 & 1) $105 = $94; else {
         $121 = $94;
         $__mb$0 = 0;
         label = 26;
        }
       } else {
        $121 = $94;
        $__mb$0 = $93;
        label = 26;
       }
      } else {
       $121 = 0;
       $__mb$0 = $__mbuf;
       label = 26;
      }
      if ((label | 0) == 26) {
       __THREW__ = 0;
       invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $__db$0 | 0, $__db$0 + $__n$0 | 0, $25 | 0, $45 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $48 | 0);
       $112 = __THREW__;
       __THREW__ = 0;
       if ($112 & 1) $105 = $121; else {
        HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
        $115 = HEAP32[$__mi >> 2] | 0;
        $116 = HEAP32[$__me >> 2] | 0;
        __THREW__ = 0;
        HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
        $117 = invoke_iiiiiii(39, $$byval_copy | 0, $__mb$0 | 0, $115 | 0, $116 | 0, $__iob | 0, $__fl | 0) | 0;
        $118 = __THREW__;
        __THREW__ = 0;
        if ($118 & 1) $105 = $121; else {
         if (!$121) $123 = $22; else {
          _free($121);
          $123 = HEAP32[$__loc >> 2] | 0;
         }
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
         __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
         __ZNSt3__114__shared_count16__release_sharedEv($123) | 0;
         if ($125) _free($125);
         if ($128) _free($128);
         STACKTOP = sp;
         return $117 | 0;
        }
       }
      }
      $102 = ___cxa_find_matching_catch() | 0;
      $103 = tempRet0;
      if (!$105) {
       $$0 = $102;
       $$01 = $103;
       $$pre20 = $22;
      } else {
       _free($105);
       $$0 = $102;
       $$01 = $103;
       $$pre20 = HEAP32[$__loc >> 2] | 0;
      }
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
     $$1 = $$0;
     $$12 = $$01;
     $130 = $$pre20;
    }
   }
   if ((label | 0) == 22) {
    $98 = ___cxa_find_matching_catch() | 0;
    $$1 = $98;
    $$12 = tempRet0;
    $130 = $22;
   }
   __ZNSt3__114__shared_count16__release_sharedEv($130) | 0;
   $$2 = $$1;
   $$23 = $$12;
   $132 = $125;
   $135 = $128;
  }
 }
 if ((label | 0) == 7) {
  $13 = ___cxa_find_matching_catch() | 0;
  $$2 = $13;
  $$23 = tempRet0;
  $132 = $138;
  $135 = $137;
 }
 if ($132) _free($132);
 if ($135) _free($135);
 ___resumeException($$2 | 0);
 return 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$01$be = 0, $$01165 = 0, $$01165$lcssa223 = 0, $$02$be = 0, $$02164 = 0, $$02164$lcssa230 = 0, $$1$lcssa = 0, $$1157 = 0, $$1157$lcssa215 = 0, $$1157$lcssa216 = 0, $$2 = 0, $$lcssa = 0, $$lcssa238 = 0, $$lcssa244 = 0, $$lcssa252 = 0, $$pre = 0, $103 = 0, $14 = 0, $15 = 0, $19 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $33 = 0, $35 = 0, $38 = 0, $40 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $59 = 0, $6 = 0, $61 = 0, $71 = 0, $77 = 0, $78 = 0, $79 = 0, $82 = 0, $84 = 0, $86 = 0, $89 = 0, $9 = 0, $91 = 0, $97 = 0, $fend$0$lcssa = 0, $fend$0169 = 0, $fend$1$be = 0, $fend$1166 = 0, $fend$2$lcssa = 0, $fend$2158 = 0, $save_state = 0, $storemerge156 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 L1 : do if (($frm | 0) == ($frm_end | 0)) $fend$0$lcssa = $frm_end; else {
  $fend$0169 = $frm;
  while (1) {
   if (!(HEAP8[$fend$0169 >> 0] | 0)) {
    $fend$0$lcssa = $fend$0169;
    break L1;
   }
   $fend$0169 = $fend$0169 + 1 | 0;
   if (($fend$0169 | 0) == ($frm_end | 0)) {
    $fend$0$lcssa = $frm_end;
    break;
   }
  }
 } while (0);
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $5 = $to_end;
 $6 = $this + 8 | 0;
 L6 : do if (($to | 0) == ($to_end | 0) | ($frm | 0) == ($frm_end | 0)) {
  $103 = $frm;
  label = 47;
 } else {
  $$01165 = $frm;
  $$02164 = $to;
  $fend$1166 = $fend$0$lcssa;
  L7 : while (1) {
   $9 = $st;
   $14 = HEAP32[$9 + 4 >> 2] | 0;
   $15 = $save_state;
   HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$15 + 4 >> 2] = $14;
   $19 = $fend$1166;
   $26 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
   __THREW__ = 0;
   $27 = invoke_iiiiii(27, $$02164 | 0, $frm_nxt | 0, $19 - $$01165 | 0, $5 - $$02164 >> 2 | 0, $st | 0) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) {
    $$lcssa244 = $26;
    label = 9;
    break;
   }
   if ($26) {
    __THREW__ = 0;
    invoke_ii(73, $26 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if ($31 & 1) {
     label = 8;
     break;
    }
   }
   switch ($27 | 0) {
   case 0:
    {
     $$0 = 2;
     break L6;
     break;
    }
   case -1:
    {
     $$01165$lcssa223 = $$01165;
     $$02164$lcssa230 = $$02164;
     $$lcssa238 = $19;
     label = 14;
     break L7;
     break;
    }
   default:
    {}
   }
   $71 = (HEAP32[$to_nxt >> 2] | 0) + ($27 << 2) | 0;
   HEAP32[$to_nxt >> 2] = $71;
   if (($71 | 0) == ($to_end | 0)) {
    label = 31;
    break;
   }
   $$pre = HEAP32[$frm_nxt >> 2] | 0;
   if (($fend$1166 | 0) == ($frm_end | 0)) {
    $$01$be = $$pre;
    $$02$be = $71;
    $fend$1$be = $frm_end;
   } else {
    $77 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
    __THREW__ = 0;
    $78 = invoke_iiiii(14, $71 | 0, $$pre | 0, 1, $st | 0) | 0;
    $79 = __THREW__;
    __THREW__ = 0;
    if ($79 & 1) {
     $$lcssa252 = $77;
     label = 38;
     break;
    }
    if ($77) {
     __THREW__ = 0;
     invoke_ii(73, $77 | 0) | 0;
     $82 = __THREW__;
     __THREW__ = 0;
     if ($82 & 1) {
      label = 37;
      break;
     }
    }
    if ($78) {
     $$0 = 2;
     break L6;
    }
    HEAP32[$to_nxt >> 2] = (HEAP32[$to_nxt >> 2] | 0) + 4;
    $97 = (HEAP32[$frm_nxt >> 2] | 0) + 1 | 0;
    HEAP32[$frm_nxt >> 2] = $97;
    L22 : do if (($97 | 0) == ($frm_end | 0)) $fend$2$lcssa = $frm_end; else {
     $fend$2158 = $97;
     while (1) {
      if (!(HEAP8[$fend$2158 >> 0] | 0)) {
       $fend$2$lcssa = $fend$2158;
       break L22;
      }
      $fend$2158 = $fend$2158 + 1 | 0;
      if (($fend$2158 | 0) == ($frm_end | 0)) {
       $fend$2$lcssa = $frm_end;
       break;
      }
     }
    } while (0);
    $$01$be = $97;
    $$02$be = HEAP32[$to_nxt >> 2] | 0;
    $fend$1$be = $fend$2$lcssa;
   }
   if (($$02$be | 0) == ($to_end | 0) | ($$01$be | 0) == ($frm_end | 0)) {
    $103 = $$01$be;
    label = 47;
    break L6;
   } else {
    $$01165 = $$01$be;
    $$02164 = $$02$be;
    $fend$1166 = $fend$1$be;
   }
  }
  if ((label | 0) == 8) {
   $33 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($33);
  } else if ((label | 0) == 9) {
   $35 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa244) {
    __THREW__ = 0;
    invoke_ii(73, $$lcssa244 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     $40 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($40);
    }
   }
   ___resumeException($35 | 0);
  } else if ((label | 0) == 14) {
   HEAP32[$to_nxt >> 2] = $$02164$lcssa230;
   L36 : do if (($$01165$lcssa223 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) $$1$lcssa = $$01165$lcssa223; else {
    $$1157 = $$01165$lcssa223;
    $storemerge156 = $$02164$lcssa230;
    L37 : while (1) {
     $47 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
     __THREW__ = 0;
     $48 = invoke_iiiii(14, $storemerge156 | 0, $$1157 | 0, $$lcssa238 - $$1157 | 0, $save_state | 0) | 0;
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) {
      $$lcssa = $47;
      label = 19;
      break;
     }
     if ($47) {
      __THREW__ = 0;
      invoke_ii(73, $47 | 0) | 0;
      $52 = __THREW__;
      __THREW__ = 0;
      if ($52 & 1) {
       label = 18;
       break;
      }
     }
     switch ($48 | 0) {
     case -1:
      {
       $$1157$lcssa215 = $$1157;
       label = 25;
       break L37;
       break;
      }
     case -2:
      {
       $$1157$lcssa216 = $$1157;
       label = 26;
       break L37;
       break;
      }
     case 0:
      {
       $$2 = $$1157 + 1 | 0;
       break;
      }
     default:
      $$2 = $$1157 + $48 | 0;
     }
     $storemerge156 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
     HEAP32[$to_nxt >> 2] = $storemerge156;
     if (($$2 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
      $$1$lcssa = $$2;
      break L36;
     } else $$1157 = $$2;
    }
    if ((label | 0) == 18) {
     $54 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($54);
    } else if ((label | 0) == 19) {
     $56 = ___cxa_find_matching_catch() | 0;
     if ($$lcssa) {
      __THREW__ = 0;
      invoke_ii(73, $$lcssa | 0) | 0;
      $59 = __THREW__;
      __THREW__ = 0;
      if ($59 & 1) {
       $61 = ___cxa_find_matching_catch(0) | 0;
       ___clang_call_terminate($61);
      }
     }
     ___resumeException($56 | 0);
    } else if ((label | 0) == 25) {
     HEAP32[$frm_nxt >> 2] = $$1157$lcssa215;
     $$0 = 2;
     break L6;
    } else if ((label | 0) == 26) {
     HEAP32[$frm_nxt >> 2] = $$1157$lcssa216;
     $$0 = 1;
     break L6;
    }
   } while (0);
   HEAP32[$frm_nxt >> 2] = $$1$lcssa;
   $$0 = ($$1$lcssa | 0) != ($frm_end | 0) & 1;
   break;
  } else if ((label | 0) == 31) {
   $103 = HEAP32[$frm_nxt >> 2] | 0;
   label = 47;
   break;
  } else if ((label | 0) == 37) {
   $84 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($84);
  } else if ((label | 0) == 38) {
   $86 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa252) {
    __THREW__ = 0;
    invoke_ii(73, $$lcssa252 | 0) | 0;
    $89 = __THREW__;
    __THREW__ = 0;
    if ($89 & 1) {
     $91 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($91);
    }
   }
   ___resumeException($86 | 0);
  }
 } while (0);
 if ((label | 0) == 47) $$0 = ($103 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __Z23jsonlang_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $str) {
 $agg$result = $agg$result | 0;
 $str = $str | 0;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $61 = 0, $63 = 0, $65 = 0, $69 = 0, $70 = 0, $75 = 0, $8 = 0, $88 = 0, $90 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $i$013 = 0, $lpad$phi$index = 0, $lpad$phi$index7 = 0, $ss = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $1 = sp + 157 | 0;
 $2 = sp + 156 | 0;
 $ss = sp;
 $3 = $ss + 64 | 0;
 $4 = $ss + 8 | 0;
 HEAP32[$4 >> 2] = 2912;
 $5 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$3 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $5 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $21 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $21;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 2892;
 HEAP32[$ss + 64 >> 2] = 2932;
 HEAP32[$4 >> 2] = 2912;
 __THREW__ = 0;
 invoke_vi(173, $5 | 0);
 $13 = __THREW__;
 __THREW__ = 0;
 do if ($13 & 1) {
  $23 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $23;
 } else {
  HEAP32[$5 >> 2] = 2988;
  $15 = $ss + 44 | 0;
  HEAP32[$15 >> 2] = 0;
  HEAP32[$15 + 4 >> 2] = 0;
  HEAP32[$15 + 8 >> 2] = 0;
  HEAP32[$15 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $5 | 0, $0 | 0);
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) {
   $19 = ___cxa_find_matching_catch() | 0;
   $20 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
   $eh$lpad$body$i$index2Z2D = $20;
   $eh$lpad$body$i$indexZ2D = $19;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $25 = $ss + 8 | 0;
  HEAP8[$2 >> 0] = 34;
  __THREW__ = 0;
  invoke_iiii(29, $25 | 0, $2 | 0, 1) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   $28 = HEAP8[$str >> 0] | 0;
   $31 = $str + 4 | 0;
   L13 : do if ((($28 & 1) == 0 ? ($28 & 255) >>> 1 : HEAP32[$31 >> 2] | 0) | 0) {
    $37 = $str + 8 | 0;
    $38 = $str + 1 | 0;
    $40 = $28;
    $i$013 = 0;
    L15 : while (1) {
     $45 = HEAP8[(($40 & 1) == 0 ? $38 : HEAP32[$37 >> 2] | 0) + $i$013 >> 0] | 0;
     L17 : do switch ($45 << 24 >> 24 | 0) {
     case 34:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50217, 2) | 0;
       $51 = __THREW__;
       __THREW__ = 0;
       if ($51 & 1) break L15;
       break;
      }
     case 92:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50220, 2) | 0;
       $53 = __THREW__;
       __THREW__ = 0;
       if ($53 & 1) break L15;
       break;
      }
     case 8:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50223, 2) | 0;
       $55 = __THREW__;
       __THREW__ = 0;
       if ($55 & 1) break L15;
       break;
      }
     case 12:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50226, 2) | 0;
       $57 = __THREW__;
       __THREW__ = 0;
       if ($57 & 1) break L15;
       break;
      }
     case 10:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50229, 2) | 0;
       $59 = __THREW__;
       __THREW__ = 0;
       if ($59 & 1) break L15;
       break;
      }
     case 13:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50232, 2) | 0;
       $61 = __THREW__;
       __THREW__ = 0;
       if ($61 & 1) break L15;
       break;
      }
     case 9:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50235, 2) | 0;
       $63 = __THREW__;
       __THREW__ = 0;
       if ($63 & 1) break L15;
       break;
      }
     case 0:
      {
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, 50238, 6) | 0;
       $65 = __THREW__;
       __THREW__ = 0;
       if ($65 & 1) break L15;
       break;
      }
     default:
      if ($45 << 24 >> 24 < 32 | $45 << 24 >> 24 == 127) {
       __THREW__ = 0;
       $69 = invoke_iiii(29, $25 | 0, 50245, 2) | 0;
       $70 = __THREW__;
       __THREW__ = 0;
       if ($70 & 1) break L15;
       $75 = $69 + ((HEAP32[(HEAP32[$69 >> 2] | 0) + -12 >> 2] | 0) + 4) | 0;
       HEAP32[$75 >> 2] = HEAP32[$75 >> 2] & -75 | 8;
       HEAP32[$69 + ((HEAP32[(HEAP32[$69 >> 2] | 0) + -12 >> 2] | 0) + 76) >> 2] = 48;
       HEAP32[$69 + ((HEAP32[(HEAP32[$69 >> 2] | 0) + -12 >> 2] | 0) + 12) >> 2] = 4;
       __THREW__ = 0;
       invoke_iii(24, $69 | 0, $45 & 255 | 0) | 0;
       $88 = __THREW__;
       __THREW__ = 0;
       if ($88 & 1) break L15; else break L17;
      } else {
       HEAP8[$1 >> 0] = $45;
       __THREW__ = 0;
       invoke_iiii(29, $25 | 0, $1 | 0, 1) | 0;
       $90 = __THREW__;
       __THREW__ = 0;
       if ($90 & 1) break L15;
       break L17;
      }
     } while (0);
     $i$013 = $i$013 + 1 | 0;
     $40 = HEAP8[$str >> 0] | 0;
     if ($i$013 >>> 0 >= (($40 & 1) == 0 ? ($40 & 255) >>> 1 : HEAP32[$31 >> 2] | 0) >>> 0) break L13;
    }
    $47 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $47;
    $lpad$phi$index7 = tempRet0;
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$3 >> 2] = 2932;
    HEAP32[$25 >> 2] = 2912;
    HEAP32[$5 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
    ___resumeException($lpad$phi$index | 0);
   } while (0);
   HEAP8[$0 >> 0] = 34;
   __THREW__ = 0;
   invoke_iiii(29, $25 | 0, $0 | 0, 1) | 0;
   $101 = __THREW__;
   __THREW__ = 0;
   if (!($101 & 1)) {
    __THREW__ = 0;
    invoke_vii(43, $agg$result | 0, $5 | 0);
    $103 = __THREW__;
    __THREW__ = 0;
    if (!($103 & 1)) {
     HEAP32[$ss >> 2] = 2892;
     HEAP32[$3 >> 2] = 2932;
     HEAP32[$25 >> 2] = 2912;
     HEAP32[$5 >> 2] = 2988;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
     __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
     __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
     STACKTOP = sp;
     return;
    }
   }
  }
  $49 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $49;
  $lpad$phi$index7 = tempRet0;
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$3 >> 2] = 2932;
  HEAP32[$25 >> 2] = 2912;
  HEAP32[$5 >> 2] = 2988;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($5);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
  ___resumeException($lpad$phi$index | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($3);
 ___resumeException($$01$i | 0);
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($this, $st, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $$01$be = 0, $$01128 = 0, $$01128$lcssa170 = 0, $$02$be = 0, $$02127 = 0, $$02127$lcssa177 = 0, $$1$lcssa = 0, $$1113 = 0, $$lcssa = 0, $$lcssa183 = 0, $$lcssa191 = 0, $100 = 0, $105 = 0, $111 = 0, $14 = 0, $15 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $33 = 0, $35 = 0, $38 = 0, $40 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $59 = 0, $6 = 0, $61 = 0, $66 = 0, $70 = 0, $76 = 0, $77 = 0, $78 = 0, $81 = 0, $83 = 0, $85 = 0, $88 = 0, $9 = 0, $90 = 0, $99 = 0, $fend$0$lcssa = 0, $fend$0133 = 0, $fend$1$be = 0, $fend$1129 = 0, $fend$2$lcssa = 0, $fend$2120 = 0, $n$0117 = 0, $p$0118 = 0, $save_state = 0, $tmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $save_state = sp;
 $tmp = sp + 8 | 0;
 L1 : do if (($frm | 0) == ($frm_end | 0)) $fend$0$lcssa = $frm_end; else {
  $fend$0133 = $frm;
  while (1) {
   if (!(HEAP32[$fend$0133 >> 2] | 0)) {
    $fend$0$lcssa = $fend$0133;
    break L1;
   }
   $fend$0133 = $fend$0133 + 4 | 0;
   if (($fend$0133 | 0) == ($frm_end | 0)) {
    $fend$0$lcssa = $frm_end;
    break;
   }
  }
 } while (0);
 HEAP32[$to_nxt >> 2] = $to;
 HEAP32[$frm_nxt >> 2] = $frm;
 $5 = $to_end;
 $6 = $this + 8 | 0;
 L6 : do if (($to | 0) == ($to_end | 0) | ($frm | 0) == ($frm_end | 0)) {
  $111 = $frm;
  label = 47;
 } else {
  $$01128 = $frm;
  $$02127 = $to;
  $fend$1129 = $fend$0$lcssa;
  L7 : while (1) {
   $9 = $st;
   $14 = HEAP32[$9 + 4 >> 2] | 0;
   $15 = $save_state;
   HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$15 + 4 >> 2] = $14;
   $26 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
   __THREW__ = 0;
   $27 = invoke_iiiiii(26, $$02127 | 0, $frm_nxt | 0, $fend$1129 - $$01128 >> 2 | 0, $5 - $$02127 | 0, $st | 0) | 0;
   $28 = __THREW__;
   __THREW__ = 0;
   if ($28 & 1) {
    $$lcssa183 = $26;
    label = 9;
    break;
   }
   if ($26) {
    __THREW__ = 0;
    invoke_ii(73, $26 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if ($31 & 1) {
     label = 8;
     break;
    }
   }
   switch ($27 | 0) {
   case 0:
    {
     $$0 = 1;
     break L6;
     break;
    }
   case -1:
    {
     $$01128$lcssa170 = $$01128;
     $$02127$lcssa177 = $$02127;
     label = 14;
     break L7;
     break;
    }
   default:
    {}
   }
   $70 = (HEAP32[$to_nxt >> 2] | 0) + $27 | 0;
   HEAP32[$to_nxt >> 2] = $70;
   if (($70 | 0) == ($to_end | 0)) {
    label = 27;
    break;
   }
   if (($fend$1129 | 0) == ($frm_end | 0)) {
    $$01$be = HEAP32[$frm_nxt >> 2] | 0;
    $$02$be = $70;
    $fend$1$be = $frm_end;
   } else {
    $76 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
    __THREW__ = 0;
    $77 = invoke_iiii(45, $tmp | 0, 0, $st | 0) | 0;
    $78 = __THREW__;
    __THREW__ = 0;
    if ($78 & 1) {
     $$lcssa191 = $76;
     label = 35;
     break;
    }
    if ($76) {
     __THREW__ = 0;
     invoke_ii(73, $76 | 0) | 0;
     $81 = __THREW__;
     __THREW__ = 0;
     if ($81 & 1) {
      label = 34;
      break;
     }
    }
    if (($77 | 0) == -1) {
     $$0 = 2;
     break L6;
    }
    if ($77 >>> 0 > ($5 - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) {
     $$0 = 1;
     break L6;
    }
    if ($77) {
     $n$0117 = $77;
     $p$0118 = $tmp;
     while (1) {
      $99 = HEAP8[$p$0118 >> 0] | 0;
      $100 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $100 + 1;
      HEAP8[$100 >> 0] = $99;
      $n$0117 = $n$0117 + -1 | 0;
      if (!$n$0117) break; else $p$0118 = $p$0118 + 1 | 0;
     }
    }
    $105 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
    HEAP32[$frm_nxt >> 2] = $105;
    L28 : do if (($105 | 0) == ($frm_end | 0)) $fend$2$lcssa = $frm_end; else {
     $fend$2120 = $105;
     while (1) {
      if (!(HEAP32[$fend$2120 >> 2] | 0)) {
       $fend$2$lcssa = $fend$2120;
       break L28;
      }
      $fend$2120 = $fend$2120 + 4 | 0;
      if (($fend$2120 | 0) == ($frm_end | 0)) {
       $fend$2$lcssa = $frm_end;
       break;
      }
     }
    } while (0);
    $$01$be = $105;
    $$02$be = HEAP32[$to_nxt >> 2] | 0;
    $fend$1$be = $fend$2$lcssa;
   }
   if (($$02$be | 0) == ($to_end | 0) | ($$01$be | 0) == ($frm_end | 0)) {
    $111 = $$01$be;
    label = 47;
    break L6;
   } else {
    $$01128 = $$01$be;
    $$02127 = $$02$be;
    $fend$1129 = $fend$1$be;
   }
  }
  if ((label | 0) == 8) {
   $33 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($33);
  } else if ((label | 0) == 9) {
   $35 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa183) {
    __THREW__ = 0;
    invoke_ii(73, $$lcssa183 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) {
     $40 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($40);
    }
   }
   ___resumeException($35 | 0);
  } else if ((label | 0) == 14) {
   HEAP32[$to_nxt >> 2] = $$02127$lcssa177;
   L42 : do if (($$01128$lcssa170 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) $$1$lcssa = $$01128$lcssa170; else {
    $$1113 = $$01128$lcssa170;
    $47 = $$02127$lcssa177;
    while (1) {
     $44 = HEAP32[$$1113 >> 2] | 0;
     $46 = _uselocale(HEAP32[$6 >> 2] | 0) | 0;
     __THREW__ = 0;
     $48 = invoke_iiii(45, $47 | 0, $44 | 0, $save_state | 0) | 0;
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) {
      $$lcssa = $46;
      break;
     }
     if ($46) {
      __THREW__ = 0;
      invoke_ii(73, $46 | 0) | 0;
      $52 = __THREW__;
      __THREW__ = 0;
      if ($52 & 1) {
       label = 18;
       break;
      }
     }
     if (($48 | 0) == -1) {
      $$1$lcssa = $$1113;
      break L42;
     }
     $47 = (HEAP32[$to_nxt >> 2] | 0) + $48 | 0;
     HEAP32[$to_nxt >> 2] = $47;
     $66 = $$1113 + 4 | 0;
     if (($66 | 0) == (HEAP32[$frm_nxt >> 2] | 0)) {
      $$1$lcssa = $66;
      break L42;
     } else $$1113 = $66;
    }
    if ((label | 0) == 18) {
     $54 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($54);
    }
    $56 = ___cxa_find_matching_catch() | 0;
    if ($$lcssa) {
     __THREW__ = 0;
     invoke_ii(73, $$lcssa | 0) | 0;
     $59 = __THREW__;
     __THREW__ = 0;
     if ($59 & 1) {
      $61 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($61);
     }
    }
    ___resumeException($56 | 0);
   } while (0);
   HEAP32[$frm_nxt >> 2] = $$1$lcssa;
   $$0 = 2;
   break;
  } else if ((label | 0) == 27) {
   $111 = HEAP32[$frm_nxt >> 2] | 0;
   label = 47;
   break;
  } else if ((label | 0) == 34) {
   $83 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($83);
  } else if ((label | 0) == 35) {
   $85 = ___cxa_find_matching_catch() | 0;
   if ($$lcssa191) {
    __THREW__ = 0;
    invoke_ii(73, $$lcssa191 | 0) | 0;
    $88 = __THREW__;
    __THREW__ = 0;
    if ($88 & 1) {
     $90 = ___cxa_find_matching_catch(0) | 0;
     ___clang_call_terminate($90);
    }
   }
   ___resumeException($85 | 0);
  }
 } while (0);
 if ((label | 0) == 47) $$0 = ($111 | 0) != ($frm_end | 0) & 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm($this, $up_values, $self, $offset, $params, $body, $builtin) {
 $this = $this | 0;
 $up_values = $up_values | 0;
 $self = $self | 0;
 $offset = $offset | 0;
 $params = $params | 0;
 $body = $body | 0;
 $builtin = $builtin | 0;
 var $$0 = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i$i$i$i$i$i = 0, $$0$i$i$i$i1$i$i = 0, $$01 = 0, $$01$i$i$i$i$i = 0, $$01$i$i$i$i$i$i$i$i = 0, $$idx$val2$i$i = 0, $$idx2$val$i22$i$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa27 = 0, $$pre$i$i$i$i$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, $57 = 0, $6 = 0, $61 = 0, $66 = 0, $67 = 0, $69 = 0, $7 = 0, $72 = 0, $79 = 0, $8 = 0, $83 = 0, $84 = 0, $86 = 0, $87 = 0, $89 = 0, $__nd$0$i20$i$i$i$i$in$i$i = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa25 = 0, $__nd$0$i20$i$i$i$i$in$i$i$lcssa26 = 0, $__parent$sroa$0$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$sroa$0$i$i$i$i$i = sp;
 HEAP32[$this >> 2] = 3688;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 16 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $this + 12 | 0;
 HEAP32[$0 >> 2] = $3;
 $$idx$val2$i$i = HEAP32[$up_values >> 2] | 0;
 $4 = $up_values + 4 | 0;
 L1 : do if (($$idx$val2$i$i | 0) != ($4 | 0)) {
  $6 = $3;
  $11 = $$idx$val2$i$i;
  $89 = $$idx$val2$i$i;
  while (1) {
   __THREW__ = 0;
   $7 = invoke_ii(67, 24) | 0;
   $8 = __THREW__;
   __THREW__ = 0;
   if ($8 & 1) break;
   $13 = $11 + 16 | 0;
   $15 = HEAP32[$13 >> 2] | 0;
   $18 = HEAP32[$13 + 4 >> 2] | 0;
   $19 = $7 + 16 | 0;
   HEAP32[$19 >> 2] = $15;
   HEAP32[$19 + 4 >> 2] = $18;
   $23 = $15;
   $$pre$i$i$i$i$i$i = HEAP32[$3 >> 2] | 0;
   do if ((HEAP32[$0 >> 2] | 0) == ($3 | 0)) {
    $38 = $6;
    label = 9;
   } else {
    $25 = ($$pre$i$i$i$i$i$i | 0) == 0;
    if ($25) {
     $$0$i$i$i$i$i$i$i$i = $3;
     while (1) {
      $30 = HEAP32[$$0$i$i$i$i$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$30 >> 2] | 0) == ($$0$i$i$i$i$i$i$i$i | 0)) $$0$i$i$i$i$i$i$i$i = $30; else {
       $$01$i$i$i$i$i$i$i$i = $30;
       break;
      }
     }
    } else {
     $$0$i$i$i$i$i$i$i$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $27 = HEAP32[$$0$i$i$i$i$i$i$i$i$i + 4 >> 2] | 0;
      if (!$27) {
       $$01$i$i$i$i$i$i$i$i = $$0$i$i$i$i$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i$i$i$i$i = $27;
     }
    }
    if ((HEAP32[$$01$i$i$i$i$i$i$i$i + 16 >> 2] | 0) >>> 0 < $23 >>> 0) {
     $38 = $$01$i$i$i$i$i$i$i$i;
     label = 9;
    } else {
     if ($25) {
      HEAP32[$__parent$sroa$0$i$i$i$i$i >> 2] = $6;
      $$0$i$i$i$i1$i$i = $3;
      $53 = $6;
      break;
     } else $__nd$0$i20$i$i$i$i$in$i$i = $$pre$i$i$i$i$i$i;
     while (1) {
      $$idx2$val$i22$i$i$i$i$i$i = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i + 16 >> 2] | 0;
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 > $23 >>> 0) {
       $41 = HEAP32[$__nd$0$i20$i$i$i$i$in$i$i >> 2] | 0;
       if (!$41) {
        $$lcssa27 = $__nd$0$i20$i$i$i$i$in$i$i;
        $__nd$0$i20$i$i$i$i$in$i$i$lcssa26 = $__nd$0$i20$i$i$i$i$in$i$i;
        label = 15;
        break;
       } else {
        $__nd$0$i20$i$i$i$i$in$i$i = $41;
        continue;
       }
      }
      if ($$idx2$val$i22$i$i$i$i$i$i >>> 0 >= $23 >>> 0) {
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 19;
       break;
      }
      $45 = $__nd$0$i20$i$i$i$i$in$i$i + 4 | 0;
      $46 = HEAP32[$45 >> 2] | 0;
      if (!$46) {
       $$lcssa = $45;
       $__nd$0$i20$i$i$i$i$in$i$i$lcssa25 = $__nd$0$i20$i$i$i$i$in$i$i;
       label = 18;
       break;
      } else $__nd$0$i20$i$i$i$i$in$i$i = $46;
     }
     if ((label | 0) == 15) {
      label = 0;
      $43 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa26;
      HEAP32[$__parent$sroa$0$i$i$i$i$i >> 2] = $43;
      $$0$i$i$i$i1$i$i = $$lcssa27;
      $53 = $43;
      break;
     } else if ((label | 0) == 18) {
      label = 0;
      $48 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa25;
      HEAP32[$__parent$sroa$0$i$i$i$i$i >> 2] = $48;
      $$0$i$i$i$i1$i$i = $$lcssa;
      $53 = $48;
      break;
     } else if ((label | 0) == 19) {
      label = 0;
      $49 = $__nd$0$i20$i$i$i$i$in$i$i$lcssa;
      HEAP32[$__parent$sroa$0$i$i$i$i$i >> 2] = $49;
      $$0$i$i$i$i1$i$i = $__parent$sroa$0$i$i$i$i$i;
      $53 = $49;
      break;
     }
    }
   } while (0);
   do if ((label | 0) == 9) {
    label = 0;
    if (!$$pre$i$i$i$i$i$i) {
     HEAP32[$__parent$sroa$0$i$i$i$i$i >> 2] = $6;
     $$0$i$i$i$i1$i$i = $3;
     $53 = $6;
     break;
    } else {
     HEAP32[$__parent$sroa$0$i$i$i$i$i >> 2] = $38;
     $$0$i$i$i$i1$i$i = $38 + 4 | 0;
     $53 = $38;
     break;
    }
   } while (0);
   $50 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
   if (!$50) {
    HEAP32[$7 >> 2] = 0;
    HEAP32[$7 + 4 >> 2] = 0;
    HEAP32[$7 + 8 >> 2] = $53;
    HEAP32[$$0$i$i$i$i1$i$i >> 2] = $7;
    $57 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
    if (!$57) $61 = $7; else {
     HEAP32[$0 >> 2] = $57;
     $61 = HEAP32[$$0$i$i$i$i1$i$i >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 >> 2] | 0, $61);
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
    $66 = $11;
   } else if (($50 | 0) == ($7 | 0)) $66 = $89; else {
    __ZdlPv($7);
    $66 = $89;
   }
   $67 = HEAP32[$66 + 4 >> 2] | 0;
   if (!$67) {
    $$0$i$i$i$i$i = $66;
    while (1) {
     $72 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$72 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $72;
      break;
     } else $$0$i$i$i$i$i = $72;
    }
   } else {
    $$0$i$i$i$i$i$i = $67;
    while (1) {
     $69 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$69) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $69;
    }
   }
   if (($$01$i$i$i$i$i | 0) == ($4 | 0)) break L1; else {
    $11 = $$01$i$i$i$i$i;
    $89 = $$01$i$i$i$i$i;
   }
  }
  $83 = ___cxa_find_matching_catch() | 0;
  $84 = tempRet0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$3 >> 2] | 0);
  $$0 = $84;
  $$01 = $83;
  ___resumeException($$01 | 0);
 } while (0);
 HEAP32[$this + 20 >> 2] = $self;
 HEAP32[$this + 24 >> 2] = $offset;
 __THREW__ = 0;
 invoke_vii(55, $this + 28 | 0, $params | 0);
 $79 = __THREW__;
 __THREW__ = 0;
 if (!($79 & 1)) {
  HEAP32[$this + 40 >> 2] = $body;
  HEAP32[$this + 44 >> 2] = $builtin;
  STACKTOP = sp;
  return;
 }
 $86 = ___cxa_find_matching_catch() | 0;
 $87 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$3 >> 2] | 0);
 $$0 = $87;
 $$01 = $86;
 ___resumeException($$01 | 0);
}

function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0, $106 = 0, $109 = 0, $110 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0, $118 = 0, $119 = 0, $124 = 0, $125 = 0, $134 = 0, $139 = 0, $143 = 0, $149 = 0, $159 = 0, $168 = 0, $2 = 0, $20 = 0, $3 = 0, $33 = 0, $35 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $91 = 0, $96 = 0, $98 = 0, $R$0 = 0, $R$0$lcssa = 0, $R$1 = 0, $RP$0 = 0, $RP$0$lcssa = 0, $newp$0 = 0, $storemerge = 0, $storemerge21 = 0;
 $0 = $p + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 & -8;
 $3 = $p + $2 | 0;
 $4 = HEAP32[1088] | 0;
 $5 = $1 & 3;
 if (($5 | 0) != 1 & $p >>> 0 >= $4 >>> 0 & $p >>> 0 < $3 >>> 0) {
  $7 = $p + ($2 | 4) | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if ($8 & 1) {
   do if (!$5) if ($nb >>> 0 < 256) $newp$0 = 0; else {
    if ($2 >>> 0 >= ($nb + 4 | 0) >>> 0) if (($2 - $nb | 0) >>> 0 <= HEAP32[1204] << 1 >>> 0) {
     $newp$0 = $p;
     break;
    }
    $newp$0 = 0;
   } else {
    if ($2 >>> 0 >= $nb >>> 0) {
     $20 = $2 - $nb | 0;
     if ($20 >>> 0 <= 15) {
      $newp$0 = $p;
      break;
     }
     HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
     HEAP32[$p + ($nb + 4) >> 2] = $20 | 3;
     HEAP32[$7 >> 2] = HEAP32[$7 >> 2] | 1;
     _dispose_chunk($p + $nb | 0, $20);
     $newp$0 = $p;
     break;
    }
    if (($3 | 0) == (HEAP32[1090] | 0)) {
     $33 = (HEAP32[1087] | 0) + $2 | 0;
     if ($33 >>> 0 <= $nb >>> 0) {
      $newp$0 = 0;
      break;
     }
     $35 = $33 - $nb | 0;
     HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
     HEAP32[$p + ($nb + 4) >> 2] = $35 | 1;
     HEAP32[1090] = $p + $nb;
     HEAP32[1087] = $35;
     $newp$0 = $p;
     break;
    }
    if (($3 | 0) == (HEAP32[1089] | 0)) {
     $45 = (HEAP32[1086] | 0) + $2 | 0;
     if ($45 >>> 0 < $nb >>> 0) {
      $newp$0 = 0;
      break;
     }
     $47 = $45 - $nb | 0;
     if ($47 >>> 0 > 15) {
      HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
      HEAP32[$p + ($nb + 4) >> 2] = $47 | 1;
      HEAP32[$p + $45 >> 2] = $47;
      $56 = $p + ($45 + 4) | 0;
      HEAP32[$56 >> 2] = HEAP32[$56 >> 2] & -2;
      $storemerge = $p + $nb | 0;
      $storemerge21 = $47;
     } else {
      HEAP32[$0 >> 2] = $1 & 1 | $45 | 2;
      $62 = $p + ($45 + 4) | 0;
      HEAP32[$62 >> 2] = HEAP32[$62 >> 2] | 1;
      $storemerge = 0;
      $storemerge21 = 0;
     }
     HEAP32[1086] = $storemerge21;
     HEAP32[1089] = $storemerge;
     $newp$0 = $p;
     break;
    }
    if (!($8 & 2)) {
     $68 = ($8 & -8) + $2 | 0;
     if ($68 >>> 0 < $nb >>> 0) $newp$0 = 0; else {
      $70 = $68 - $nb | 0;
      $71 = $8 >>> 3;
      do if ($8 >>> 0 < 256) {
       $74 = HEAP32[$p + ($2 + 8) >> 2] | 0;
       $76 = HEAP32[$p + ($2 + 12) >> 2] | 0;
       $78 = 4376 + ($71 << 1 << 2) | 0;
       do if (($74 | 0) != ($78 | 0)) {
        if ($74 >>> 0 >= $4 >>> 0) if ((HEAP32[$74 + 12 >> 2] | 0) == ($3 | 0)) break;
        _abort();
       } while (0);
       if (($76 | 0) == ($74 | 0)) {
        HEAP32[1084] = HEAP32[1084] & ~(1 << $71);
        break;
       }
       do if (($76 | 0) == ($78 | 0)) $$pre$phiZ2D = $76 + 8 | 0; else {
        if ($76 >>> 0 >= $4 >>> 0) {
         $91 = $76 + 8 | 0;
         if ((HEAP32[$91 >> 2] | 0) == ($3 | 0)) {
          $$pre$phiZ2D = $91;
          break;
         }
        }
        _abort();
       } while (0);
       HEAP32[$74 + 12 >> 2] = $76;
       HEAP32[$$pre$phiZ2D >> 2] = $74;
      } else {
       $96 = HEAP32[$p + ($2 + 24) >> 2] | 0;
       $98 = HEAP32[$p + ($2 + 12) >> 2] | 0;
       do if (($98 | 0) == ($3 | 0)) {
        $109 = $p + ($2 + 20) | 0;
        $110 = HEAP32[$109 >> 2] | 0;
        if (!$110) {
         $112 = $p + ($2 + 16) | 0;
         $113 = HEAP32[$112 >> 2] | 0;
         if (!$113) {
          $R$1 = 0;
          break;
         } else {
          $R$0 = $113;
          $RP$0 = $112;
         }
        } else {
         $R$0 = $110;
         $RP$0 = $109;
        }
        while (1) {
         $115 = $R$0 + 20 | 0;
         $116 = HEAP32[$115 >> 2] | 0;
         if ($116) {
          $R$0 = $116;
          $RP$0 = $115;
          continue;
         }
         $118 = $R$0 + 16 | 0;
         $119 = HEAP32[$118 >> 2] | 0;
         if (!$119) {
          $R$0$lcssa = $R$0;
          $RP$0$lcssa = $RP$0;
          break;
         } else {
          $R$0 = $119;
          $RP$0 = $118;
         }
        }
        if ($RP$0$lcssa >>> 0 < $4 >>> 0) _abort(); else {
         HEAP32[$RP$0$lcssa >> 2] = 0;
         $R$1 = $R$0$lcssa;
         break;
        }
       } else {
        $101 = HEAP32[$p + ($2 + 8) >> 2] | 0;
        if ($101 >>> 0 >= $4 >>> 0) {
         $103 = $101 + 12 | 0;
         if ((HEAP32[$103 >> 2] | 0) == ($3 | 0)) {
          $106 = $98 + 8 | 0;
          if ((HEAP32[$106 >> 2] | 0) == ($3 | 0)) {
           HEAP32[$103 >> 2] = $98;
           HEAP32[$106 >> 2] = $101;
           $R$1 = $98;
           break;
          }
         }
        }
        _abort();
       } while (0);
       if ($96) {
        $124 = HEAP32[$p + ($2 + 28) >> 2] | 0;
        $125 = 4640 + ($124 << 2) | 0;
        if (($3 | 0) == (HEAP32[$125 >> 2] | 0)) {
         HEAP32[$125 >> 2] = $R$1;
         if (!$R$1) {
          HEAP32[1085] = HEAP32[1085] & ~(1 << $124);
          break;
         }
        } else {
         if ($96 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort();
         $134 = $96 + 16 | 0;
         if ((HEAP32[$134 >> 2] | 0) == ($3 | 0)) HEAP32[$134 >> 2] = $R$1; else HEAP32[$96 + 20 >> 2] = $R$1;
         if (!$R$1) break;
        }
        $139 = HEAP32[1088] | 0;
        if ($R$1 >>> 0 < $139 >>> 0) _abort();
        HEAP32[$R$1 + 24 >> 2] = $96;
        $143 = HEAP32[$p + ($2 + 16) >> 2] | 0;
        do if ($143) if ($143 >>> 0 < $139 >>> 0) _abort(); else {
         HEAP32[$R$1 + 16 >> 2] = $143;
         HEAP32[$143 + 24 >> 2] = $R$1;
         break;
        } while (0);
        $149 = HEAP32[$p + ($2 + 20) >> 2] | 0;
        if ($149) if ($149 >>> 0 < (HEAP32[1088] | 0) >>> 0) _abort(); else {
         HEAP32[$R$1 + 20 >> 2] = $149;
         HEAP32[$149 + 24 >> 2] = $R$1;
         break;
        }
       }
      } while (0);
      if ($70 >>> 0 < 16) {
       HEAP32[$0 >> 2] = $68 | $1 & 1 | 2;
       $159 = $p + ($68 | 4) | 0;
       HEAP32[$159 >> 2] = HEAP32[$159 >> 2] | 1;
       $newp$0 = $p;
       break;
      } else {
       HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
       HEAP32[$p + ($nb + 4) >> 2] = $70 | 3;
       $168 = $p + ($68 | 4) | 0;
       HEAP32[$168 >> 2] = HEAP32[$168 >> 2] | 1;
       _dispose_chunk($p + $nb | 0, $70);
       $newp$0 = $p;
       break;
      }
     }
    } else $newp$0 = 0;
   } while (0);
   return $newp$0 | 0;
  }
 }
 _abort();
 return 0;
}

function __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i17 = 0, $$0$i$i$i$i2 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i23 = 0, $$0$i$i1$i$i8 = 0, $$0$i$i14 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i3$i$i10 = 0, $$pre$i3$i$i25 = 0, $$pre$i3$i$i25$lcssa = 0, $0 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $124 = 0, $13 = 0, $136 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $60 = 0, $63 = 0, $74 = 0, $76 = 0, $86 = 0, $87 = 0, $90 = 0, $92 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $148 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $148 = 1;
   break;
  } else {
   $148 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($148) {
   $149 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($148) label = 16; else {
  $149 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i) | 0)) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   $$01 = 0;
   break;
  }
  $49 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24;
  $50 = HEAP32[$__b >> 2] | 0;
  $51 = $50 + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  if (($52 | 0) == (HEAP32[$50 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$50 >> 2] | 0) + 40 >> 2] & 127]($50) | 0;
   $$0$in = $__n;
   $$pre$i3$i$i10 = $149;
   $74 = $149;
   $__r$0$in = $49;
  } else {
   HEAP32[$51 >> 2] = $52 + 4;
   $$0$in = $__n;
   $$pre$i3$i$i10 = $149;
   $74 = $149;
   $__r$0$in = $49;
  }
  while (1) {
   $__r$0 = $__r$0$in + -48 | 0;
   $$0 = $$0$in + -1 | 0;
   $60 = HEAP32[$__b >> 2] | 0;
   do if (!$60) $86 = 1; else {
    $63 = HEAP32[$60 + 12 >> 2] | 0;
    if (($63 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) $$0$i$i$i$i2 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0; else $$0$i$i$i$i2 = HEAP32[$63 >> 2] | 0;
    if (($$0$i$i$i$i2 | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $86 = 1;
     break;
    } else {
     $86 = (HEAP32[$__b >> 2] | 0) == 0;
     break;
    }
   } while (0);
   do if (!$74) {
    $$pre$i3$i$i25 = $$pre$i3$i$i10;
    $150 = 0;
    $87 = 1;
   } else {
    $76 = HEAP32[$74 + 12 >> 2] | 0;
    if (($76 | 0) == (HEAP32[$74 + 16 >> 2] | 0)) $$0$i$i1$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$74 >> 2] | 0) + 36 >> 2] & 127]($74) | 0; else $$0$i$i1$i$i8 = HEAP32[$76 >> 2] | 0;
    if (($$0$i$i1$i$i8 | 0) == -1) {
     HEAP32[$__e >> 2] = 0;
     $$pre$i3$i$i25 = 0;
     $150 = 0;
     $87 = 1;
     break;
    } else {
     $$pre$i3$i$i25 = $$pre$i3$i$i10;
     $150 = $$pre$i3$i$i10;
     $87 = ($$pre$i3$i$i10 | 0) == 0;
     break;
    }
   } while (0);
   $90 = HEAP32[$__b >> 2] | 0;
   if (!(($$0$in | 0) > 1 & ($86 ^ $87))) {
    $$lcssa = $90;
    $$pre$i3$i$i25$lcssa = $$pre$i3$i$i25;
    $__r$0$lcssa = $__r$0;
    break;
   }
   $92 = HEAP32[$90 + 12 >> 2] | 0;
   if (($92 | 0) == (HEAP32[$90 + 16 >> 2] | 0)) $$0$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$90 >> 2] | 0) + 36 >> 2] & 127]($90) | 0; else $$0$i$i14 = HEAP32[$92 >> 2] | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 2048, $$0$i$i14) | 0)) {
    $$01 = $__r$0;
    break L22;
   }
   $111 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i14, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
   $112 = HEAP32[$__b >> 2] | 0;
   $113 = $112 + 12 | 0;
   $114 = HEAP32[$113 >> 2] | 0;
   if (($114 | 0) == (HEAP32[$112 + 16 >> 2] | 0)) {
    FUNCTION_TABLE_ii[HEAP32[(HEAP32[$112 >> 2] | 0) + 40 >> 2] & 127]($112) | 0;
    $$0$in = $$0;
    $$pre$i3$i$i10 = $$pre$i3$i$i25;
    $74 = $150;
    $__r$0$in = $111;
    continue;
   } else {
    HEAP32[$113 >> 2] = $114 + 4;
    $$0$in = $$0;
    $$pre$i3$i$i10 = $$pre$i3$i$i25;
    $74 = $150;
    $__r$0$in = $111;
    continue;
   }
  }
  do if (!$$lcssa) $151 = 1; else {
   $124 = HEAP32[$$lcssa + 12 >> 2] | 0;
   if (($124 | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) $$0$i$i$i$i17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0; else $$0$i$i$i$i17 = HEAP32[$124 >> 2] | 0;
   if (($$0$i$i$i$i17 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $151 = 1;
    break;
   } else {
    $151 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i25$lcssa) label = 60; else {
   $136 = HEAP32[$$pre$i3$i$i25$lcssa + 12 >> 2] | 0;
   if (($136 | 0) == (HEAP32[$$pre$i3$i$i25$lcssa + 16 >> 2] | 0)) $$0$i$i1$i$i23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i25$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i25$lcssa) | 0; else $$0$i$i1$i$i23 = HEAP32[$136 >> 2] | 0;
   if (($$0$i$i1$i$i23 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 60;
    break;
   } else if ($151) {
    $$01 = $__r$0$lcssa;
    break L22;
   } else break;
  } while (0);
  if ((label | 0) == 60) if (!$151) {
   $$01 = $__r$0$lcssa;
   break;
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
  $$01 = $__r$0$lcssa;
 } while (0);
 return $$01 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $49 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $64 = 0, $67 = 0, $70 = 0, $77 = 0, $78 = 0, $79 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$0$off023 = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off025 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$024 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $59 = HEAP32[$this + 12 >> 2] | 0;
   $60 = $this + 16 + ($59 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this + 16 | 0, $info, $current_ptr, $path_below, $use_strcmp);
   $61 = $this + 24 | 0;
   if (($59 | 0) <= 1) break;
   $64 = HEAP32[$this + 8 >> 2] | 0;
   if (!($64 & 2)) {
    $67 = $info + 36 | 0;
    if ((HEAP32[$67 >> 2] | 0) != 1) {
     if (!($64 & 1)) {
      $79 = $info + 54 | 0;
      $p2$2 = $61;
      while (1) {
       if (HEAP8[$79 >> 0] | 0) break L1;
       if ((HEAP32[$67 >> 2] | 0) == 1) break L1;
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2, $info, $current_ptr, $path_below, $use_strcmp);
       $p2$2 = $p2$2 + 8 | 0;
       if ($p2$2 >>> 0 >= $60 >>> 0) break L1;
      }
     }
     $77 = $info + 24 | 0;
     $78 = $info + 54 | 0;
     $p2$1 = $61;
     while (1) {
      if (HEAP8[$78 >> 0] | 0) break L1;
      if ((HEAP32[$67 >> 2] | 0) == 1) if ((HEAP32[$77 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1, $info, $current_ptr, $path_below, $use_strcmp);
      $p2$1 = $p2$1 + 8 | 0;
      if ($p2$1 >>> 0 >= $60 >>> 0) break L1;
     }
    }
   }
   $70 = $info + 54 | 0;
   $p2$0 = $61;
   while (1) {
    if (HEAP8[$70 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0, $info, $current_ptr, $path_below, $use_strcmp);
    $p2$0 = $p2$0 + 8 | 0;
    if ($p2$0 >>> 0 >= $60 >>> 0) break L1;
   }
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $24 = HEAP32[$this + 12 >> 2] | 0;
    $25 = $this + 16 + ($24 << 3) | 0;
    $26 = $info + 52 | 0;
    $27 = $info + 53 | 0;
    $28 = $info + 54 | 0;
    $29 = $this + 8 | 0;
    $30 = $info + 24 | 0;
    L34 : do if (($24 | 0) > 0) {
     $does_dst_type_point_to_our_static_type$0$off023 = 0;
     $is_dst_type_derived_from_static_type$0$off025 = 0;
     $p$024 = $this + 16 | 0;
     while (1) {
      HEAP8[$26 >> 0] = 0;
      HEAP8[$27 >> 0] = 0;
      __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$024, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
      if (HEAP8[$28 >> 0] | 0) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;
       $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off025;
       label = 20;
       break L34;
      }
      do if (!(HEAP8[$27 >> 0] | 0)) {
       $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;
       $is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off025;
      } else {
       if (!(HEAP8[$26 >> 0] | 0)) if (!(HEAP32[$29 >> 2] & 1)) {
        $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off023;
        $is_dst_type_derived_from_static_type$2$off0 = 1;
        label = 20;
        break L34;
       } else {
        $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off023;
        $is_dst_type_derived_from_static_type$1$off0 = 1;
        break;
       }
       if ((HEAP32[$30 >> 2] | 0) == 1) break L34;
       if (!(HEAP32[$29 >> 2] & 2)) break L34; else {
        $does_dst_type_point_to_our_static_type$1$off0 = 1;
        $is_dst_type_derived_from_static_type$1$off0 = 1;
       }
      } while (0);
      $p$024 = $p$024 + 8 | 0;
      if ($p$024 >>> 0 >= $25 >>> 0) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$1$off0;
       $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$1$off0;
       label = 20;
       break;
      } else {
       $does_dst_type_point_to_our_static_type$0$off023 = $does_dst_type_point_to_our_static_type$1$off0;
       $is_dst_type_derived_from_static_type$0$off025 = $is_dst_type_derived_from_static_type$1$off0;
      }
     }
    } else {
     $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0;
     $is_dst_type_derived_from_static_type$2$off0 = 0;
     label = 20;
    } while (0);
    do if ((label | 0) == 20) {
     if ($does_dst_type_point_to_our_static_type$0$off0$lcssa) label = 24; else {
      HEAP32[$14 >> 2] = $current_ptr;
      $49 = $info + 40 | 0;
      HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 1;
      if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$30 >> 2] | 0) == 2) {
       HEAP8[$28 >> 0] = 1;
       if ($is_dst_type_derived_from_static_type$2$off0) break;
      } else label = 24; else label = 24;
     }
     if ((label | 0) == 24) if ($is_dst_type_derived_from_static_type$2$off0) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i413 = 0, $$01$i$i9 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $107 = 0, $108 = 0, $110 = 0, $116 = 0, $118 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $133 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $68 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $87 = 0, $91 = 0, $93 = 0, $__dc$010 = 0, $__dc$1 = 0, $__dg$011 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$012 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11156) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11312) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 $8 = $__grouping + 4 | 0;
 L1 : do if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) | 0)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 5; else {
   $20 = $__nb;
   $22 = $__ob + ($__ne - $20 << 2) | 0;
   HEAP32[$__oe >> 2] = $22;
   $$pre$phiZ2D = $20;
   $133 = $22;
   label = 28;
  }
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  switch ($27 << 24 >> 24) {
  case 43:
  case 45:
   {
    __THREW__ = 0;
    $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, $27 | 0) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     label = 5;
     break L1;
    }
    $35 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $35 + 4;
    HEAP32[$35 >> 2] = $31;
    $__nf$0 = $__nb + 1 | 0;
    break;
   }
  default:
   $__nf$0 = $__nb;
  }
  L9 : do if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   switch (HEAP8[$43 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $__nf$1 = $__nf$0;
     break L9;
    }
   }
   __THREW__ = 0;
   $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, 48) | 0;
   $49 = __THREW__;
   __THREW__ = 0;
   if ($49 & 1) {
    label = 5;
    break L1;
   }
   $51 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $51 + 4;
   HEAP32[$51 >> 2] = $48;
   __THREW__ = 0;
   $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
   $58 = __THREW__;
   __THREW__ = 0;
   if ($58 & 1) {
    label = 5;
    break L1;
   }
   $61 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $61 + 4;
   HEAP32[$61 >> 2] = $57;
   $__nf$1 = $__nf$0 + 2 | 0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0; while (0);
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $64 = $__ne + -1 | 0;
   if ($__nf$1 >>> 0 < $64 >>> 0) {
    $$01$i$i413 = $__nf$1;
    $68 = $64;
    do {
     $66 = HEAP8[$$01$i$i413 >> 0] | 0;
     HEAP8[$$01$i$i413 >> 0] = HEAP8[$68 >> 0] | 0;
     HEAP8[$68 >> 0] = $66;
     $$01$i$i413 = $$01$i$i413 + 1 | 0;
     $68 = $68 + -1 | 0;
    } while ($$01$i$i413 >>> 0 < $68 >>> 0);
   }
  }
  __THREW__ = 0;
  $75 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $76 = __THREW__;
  __THREW__ = 0;
  if ($76 & 1) label = 5; else {
   $78 = $__grouping + 8 | 0;
   $79 = $__grouping + 1 | 0;
   L22 : do if ($__nf$1 >>> 0 < $__ne >>> 0) {
    $__dc$010 = 0;
    $__dg$011 = 0;
    $__p$012 = $__nf$1;
    while (1) {
     $87 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $79 : HEAP32[$78 >> 2] | 0) + $__dg$011 >> 0] | 0;
     if ($87 << 24 >> 24 != 0 & ($__dc$010 | 0) == ($87 << 24 >> 24 | 0)) {
      $91 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $91 + 4;
      HEAP32[$91 >> 2] = $75;
      $93 = HEAP8[$__grouping >> 0] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$011 >>> 0 < ((($93 & 1) == 0 ? ($93 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$011 | 0;
     } else {
      $__dc$1 = $__dc$010;
      $__dg$1 = $__dg$011;
     }
     __THREW__ = 0;
     $107 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 44 >> 2] | 0, $0 | 0, HEAP8[$__p$012 >> 0] | 0) | 0;
     $108 = __THREW__;
     __THREW__ = 0;
     if ($108 & 1) break;
     $110 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $110 + 4;
     HEAP32[$110 >> 2] = $107;
     $__p$012 = $__p$012 + 1 | 0;
     if ($__p$012 >>> 0 >= $__ne >>> 0) break L22; else {
      $__dc$010 = $__dc$1 + 1 | 0;
      $__dg$011 = $__dg$1;
     }
    }
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    break L1;
   } while (0);
   $116 = $__nb;
   $118 = $__ob + ($__nf$1 - $116 << 2) | 0;
   $119 = HEAP32[$__oe >> 2] | 0;
   if (($118 | 0) == ($119 | 0)) {
    $$pre$phiZ2D = $116;
    $133 = $118;
    label = 28;
   } else {
    $121 = $119 + -4 | 0;
    if ($118 >>> 0 < $121 >>> 0) {
     $$01$i$i9 = $118;
     $125 = $121;
     do {
      $123 = HEAP32[$$01$i$i9 >> 2] | 0;
      HEAP32[$$01$i$i9 >> 2] = HEAP32[$125 >> 2];
      HEAP32[$125 >> 2] = $123;
      $$01$i$i9 = $$01$i$i9 + 4 | 0;
      $125 = $125 + -4 | 0;
     } while ($$01$i$i9 >>> 0 < $125 >>> 0);
     $$pre$phiZ2D = $116;
     $133 = $119;
     label = 28;
    } else {
     $$pre$phiZ2D = $116;
     $133 = $119;
     label = 28;
    }
   }
  }
 } while (0);
 if ((label | 0) == 5) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
 } else if ((label | 0) == 28) {
  HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $133 : $__ob + ($__np - $$pre$phiZ2D << 2) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($agg$result, $tok, $while_) {
 $agg$result = $agg$result | 0;
 $tok = $tok | 0;
 $while_ = $while_ | 0;
 var $$0 = 0, $$0$i = 0, $$01 = 0, $$01$i = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $50 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $60 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $7 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $eh$lpad$body$index7Z2D = 0, $eh$lpad$body$indexZ2D = 0, $ss = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $0 = sp + 160 | 0;
 $ss = sp + 16 | 0;
 $1 = sp;
 $2 = $ss + 64 | 0;
 $3 = $ss + 8 | 0;
 HEAP32[$3 >> 2] = 2912;
 $4 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$2 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $4 | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $20;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 2892;
 HEAP32[$ss + 64 >> 2] = 2932;
 HEAP32[$3 >> 2] = 2912;
 __THREW__ = 0;
 invoke_vi(173, $4 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 do if ($12 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $22;
 } else {
  HEAP32[$4 >> 2] = 2988;
  $14 = $ss + 44 | 0;
  HEAP32[$14 >> 2] = 0;
  HEAP32[$14 + 4 >> 2] = 0;
  HEAP32[$14 + 8 >> 2] = 0;
  HEAP32[$14 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $4 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
   $eh$lpad$body$i$index2Z2D = $19;
   $eh$lpad$body$i$indexZ2D = $18;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $24 = $ss + 8 | 0;
  __THREW__ = 0;
  $25 = invoke_iiii(29, $24 | 0, 51423, 12) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   __THREW__ = 0;
   $29 = invoke_ii(70, HEAP32[$tok >> 2] | 0) | 0;
   $30 = __THREW__;
   __THREW__ = 0;
   if (!($30 & 1)) {
    $32 = _strlen($29) | 0;
    __THREW__ = 0;
    invoke_iiii(29, $25 | 0, $29 | 0, $32 | 0) | 0;
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) {
     __THREW__ = 0;
     $35 = invoke_iiii(29, $25 | 0, 51436, 7) | 0;
     $36 = __THREW__;
     __THREW__ = 0;
     if (!($36 & 1)) {
      $38 = HEAP8[$while_ >> 0] | 0;
      $40 = ($38 & 1) == 0;
      __THREW__ = 0;
      invoke_iiii(29, $35 | 0, ($40 ? $while_ + 1 | 0 : HEAP32[$while_ + 8 >> 2] | 0) | 0, ($40 ? ($38 & 255) >>> 1 : HEAP32[$while_ + 4 >> 2] | 0) | 0) | 0;
      $50 = __THREW__;
      __THREW__ = 0;
      if (!($50 & 1)) {
       __THREW__ = 0;
       invoke_vii(43, $1 | 0, $4 | 0);
       $52 = __THREW__;
       __THREW__ = 0;
       if (!($52 & 1)) {
        __THREW__ = 0;
        invoke_vii(40, $agg$result | 0, $tok + 16 | 0);
        $55 = __THREW__;
        __THREW__ = 0;
        do if ($55 & 1) {
         $66 = ___cxa_find_matching_catch() | 0;
         $eh$lpad$body$index7Z2D = tempRet0;
         $eh$lpad$body$indexZ2D = $66;
        } else {
         $57 = $agg$result + 12 | 0;
         $58 = $tok + 28 | 0;
         HEAP32[$57 >> 2] = HEAP32[$58 >> 2];
         HEAP32[$57 + 4 >> 2] = HEAP32[$58 + 4 >> 2];
         HEAP32[$57 + 8 >> 2] = HEAP32[$58 + 8 >> 2];
         HEAP32[$57 + 12 >> 2] = HEAP32[$58 + 12 >> 2];
         __THREW__ = 0;
         invoke_vii(40, $agg$result + 28 | 0, $1 | 0);
         $60 = __THREW__;
         __THREW__ = 0;
         if ($60 & 1) {
          $62 = ___cxa_find_matching_catch() | 0;
          $63 = tempRet0;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
          $eh$lpad$body$index7Z2D = $63;
          $eh$lpad$body$indexZ2D = $62;
          break;
         } else {
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
          HEAP32[$ss >> 2] = 2892;
          HEAP32[$2 >> 2] = 2932;
          HEAP32[$24 >> 2] = 2912;
          HEAP32[$4 >> 2] = 2988;
          __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
          __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
          __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
          STACKTOP = sp;
          return;
         }
        } while (0);
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
        $$0 = $eh$lpad$body$indexZ2D;
        $$01 = $eh$lpad$body$index7Z2D;
        HEAP32[$ss >> 2] = 2892;
        HEAP32[$2 >> 2] = 2932;
        HEAP32[$24 >> 2] = 2912;
        HEAP32[$4 >> 2] = 2988;
        __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
        __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
        __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
        ___resumeException($$0 | 0);
       }
      }
     }
    }
   }
  }
  $64 = ___cxa_find_matching_catch() | 0;
  $$0 = $64;
  $$01 = tempRet0;
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$2 >> 2] = 2932;
  HEAP32[$24 >> 2] = 2912;
  HEAP32[$4 >> 2] = 2988;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($4);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
  ___resumeException($$0 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($2);
 ___resumeException($$01$i | 0);
}

function __ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($__nb, $__np, $__ne, $__ob, $__op, $__oe, $__loc) {
 $__nb = $__nb | 0;
 $__np = $__np | 0;
 $__ne = $__ne | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__loc = $__loc | 0;
 var $$01$i$i10 = 0, $$01$i$i414 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $107 = 0, $108 = 0, $110 = 0, $116 = 0, $118 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $133 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $57 = 0, $58 = 0, $61 = 0, $64 = 0, $66 = 0, $68 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $8 = 0, $87 = 0, $91 = 0, $93 = 0, $__dc$011 = 0, $__dc$1 = 0, $__dg$012 = 0, $__dg$1 = 0, $__grouping = 0, $__nf$0 = 0, $__nf$1 = 0, $__p$013 = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__grouping = sp;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11164) | 0;
 $1 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11304) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 20 >> 2] & 127]($__grouping, $1);
 $5 = HEAP8[$__grouping >> 0] | 0;
 $8 = $__grouping + 4 | 0;
 L1 : do if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) | 0)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] | 0, $0 | 0, $__nb | 0, $__ne | 0, $__ob | 0) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) label = 5; else {
   $20 = $__nb;
   $22 = $__ob + ($__ne - $20) | 0;
   HEAP32[$__oe >> 2] = $22;
   $$pre$phiZ2D = $20;
   $133 = $22;
   label = 29;
  }
 } else {
  HEAP32[$__oe >> 2] = $__ob;
  $27 = HEAP8[$__nb >> 0] | 0;
  switch ($27 << 24 >> 24) {
  case 43:
  case 45:
   {
    __THREW__ = 0;
    $31 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, $27 | 0) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     label = 5;
     break L1;
    }
    $35 = HEAP32[$__oe >> 2] | 0;
    HEAP32[$__oe >> 2] = $35 + 1;
    HEAP8[$35 >> 0] = $31;
    $__nf$0 = $__nb + 1 | 0;
    break;
   }
  default:
   $__nf$0 = $__nb;
  }
  L9 : do if (($__ne - $__nf$0 | 0) > 1) if ((HEAP8[$__nf$0 >> 0] | 0) == 48) {
   $43 = $__nf$0 + 1 | 0;
   switch (HEAP8[$43 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $__nf$1 = $__nf$0;
     break L9;
    }
   }
   __THREW__ = 0;
   $48 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, 48) | 0;
   $49 = __THREW__;
   __THREW__ = 0;
   if ($49 & 1) {
    label = 5;
    break L1;
   }
   $51 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $51 + 1;
   HEAP8[$51 >> 0] = $48;
   __THREW__ = 0;
   $57 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$43 >> 0] | 0) | 0;
   $58 = __THREW__;
   __THREW__ = 0;
   if ($58 & 1) {
    label = 5;
    break L1;
   }
   $61 = HEAP32[$__oe >> 2] | 0;
   HEAP32[$__oe >> 2] = $61 + 1;
   HEAP8[$61 >> 0] = $57;
   $__nf$1 = $__nf$0 + 2 | 0;
  } else $__nf$1 = $__nf$0; else $__nf$1 = $__nf$0; while (0);
  if (($__nf$1 | 0) != ($__ne | 0)) {
   $64 = $__ne + -1 | 0;
   if ($__nf$1 >>> 0 < $64 >>> 0) {
    $$01$i$i414 = $__nf$1;
    $68 = $64;
    do {
     $66 = HEAP8[$$01$i$i414 >> 0] | 0;
     HEAP8[$$01$i$i414 >> 0] = HEAP8[$68 >> 0] | 0;
     HEAP8[$68 >> 0] = $66;
     $$01$i$i414 = $$01$i$i414 + 1 | 0;
     $68 = $68 + -1 | 0;
    } while ($$01$i$i414 >>> 0 < $68 >>> 0);
   }
  }
  __THREW__ = 0;
  $75 = invoke_ii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0) | 0;
  $76 = __THREW__;
  __THREW__ = 0;
  if ($76 & 1) label = 5; else {
   $78 = $__grouping + 8 | 0;
   $79 = $__grouping + 1 | 0;
   L22 : do if ($__nf$1 >>> 0 < $__ne >>> 0) {
    $__dc$011 = 0;
    $__dg$012 = 0;
    $__p$013 = $__nf$1;
    while (1) {
     $87 = HEAP8[((HEAP8[$__grouping >> 0] & 1) == 0 ? $79 : HEAP32[$78 >> 2] | 0) + $__dg$012 >> 0] | 0;
     if ($87 << 24 >> 24 != 0 & ($__dc$011 | 0) == ($87 << 24 >> 24 | 0)) {
      $91 = HEAP32[$__oe >> 2] | 0;
      HEAP32[$__oe >> 2] = $91 + 1;
      HEAP8[$91 >> 0] = $75;
      $93 = HEAP8[$__grouping >> 0] | 0;
      $__dc$1 = 0;
      $__dg$1 = ($__dg$012 >>> 0 < ((($93 & 1) == 0 ? ($93 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) + -1 | 0) >>> 0 & 1) + $__dg$012 | 0;
     } else {
      $__dc$1 = $__dc$011;
      $__dg$1 = $__dg$012;
     }
     __THREW__ = 0;
     $107 = invoke_iii(HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] | 0, $0 | 0, HEAP8[$__p$013 >> 0] | 0) | 0;
     $108 = __THREW__;
     __THREW__ = 0;
     if ($108 & 1) break;
     $110 = HEAP32[$__oe >> 2] | 0;
     HEAP32[$__oe >> 2] = $110 + 1;
     HEAP8[$110 >> 0] = $107;
     $__p$013 = $__p$013 + 1 | 0;
     if ($__p$013 >>> 0 >= $__ne >>> 0) break L22; else {
      $__dc$011 = $__dc$1 + 1 | 0;
      $__dg$012 = $__dg$1;
     }
    }
    $23 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $23;
    $lpad$phi$index2 = tempRet0;
    break L1;
   } while (0);
   $116 = $__nb;
   $118 = $__ob + ($__nf$1 - $116) | 0;
   $119 = HEAP32[$__oe >> 2] | 0;
   if (($118 | 0) == ($119 | 0)) {
    $$pre$phiZ2D = $116;
    $133 = $118;
    label = 29;
   } else {
    $121 = $119 + -1 | 0;
    if ($118 >>> 0 < $121 >>> 0) {
     $$01$i$i10 = $118;
     $125 = $121;
     do {
      $123 = HEAP8[$$01$i$i10 >> 0] | 0;
      HEAP8[$$01$i$i10 >> 0] = HEAP8[$125 >> 0] | 0;
      HEAP8[$125 >> 0] = $123;
      $$01$i$i10 = $$01$i$i10 + 1 | 0;
      $125 = $125 + -1 | 0;
     } while ($$01$i$i10 >>> 0 < $125 >>> 0);
    }
    $$pre$phiZ2D = $116;
    $133 = HEAP32[$__oe >> 2] | 0;
    label = 29;
   }
  }
 } while (0);
 if ((label | 0) == 5) {
  $25 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $25;
  $lpad$phi$index2 = tempRet0;
 } else if ((label | 0) == 29) {
  HEAP32[$__op >> 2] = ($__np | 0) == ($__ne | 0) ? $133 : $__ob + ($__np - $$pre$phiZ2D) | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
  STACKTOP = sp;
  return;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grouping);
 ___resumeException($lpad$phi$index | 0);
}

function __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $__e, $__err, $__ct, $__n) {
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i10 = 0, $$0$in = 0, $$01 = 0, $$lcssa = 0, $$pre$i2$i$i20 = 0, $$pre$i2$i$i20$lcssa = 0, $$pre$i2$i$i7 = 0, $0 = 0, $107 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $142 = 0, $143 = 0, $157 = 0, $28 = 0, $30 = 0, $40 = 0, $42 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $65 = 0, $77 = 0, $78 = 0, $80 = 0, $92 = 0, $95 = 0, $97 = 0, $__r$0 = 0, $__r$0$in = 0, $__r$0$lcssa = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $13 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $13 = 0;
  break;
 } else {
  $13 = HEAP32[$__b >> 2] | 0;
  break;
 } else $13 = $0; while (0);
 $12 = ($13 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($12) {
   $157 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($12) label = 12; else {
  $157 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) {
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6;
  $$01 = 0;
 } else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  $40 = $$0$i$i & 255;
  if ($40 << 24 >> 24 > -1) {
   $42 = $__ct + 8 | 0;
   if (HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
    $54 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $40, 0) | 0) << 24 >> 24;
    $55 = HEAP32[$__b >> 2] | 0;
    $56 = $55 + 12 | 0;
    $57 = HEAP32[$56 >> 2] | 0;
    if (($57 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) {
     FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 40 >> 2] & 127]($55) | 0;
     $$0$in = $__n;
     $$pre$i2$i$i7 = $157;
     $80 = $157;
     $__r$0$in = $54;
    } else {
     HEAP32[$56 >> 2] = $57 + 1;
     $$0$in = $__n;
     $$pre$i2$i$i7 = $157;
     $80 = $157;
     $__r$0$in = $54;
    }
    while (1) {
     $__r$0 = $__r$0$in + -48 | 0;
     $$0 = $$0$in + -1 | 0;
     $65 = HEAP32[$__b >> 2] | 0;
     do if (!$65) $78 = 0; else if ((HEAP32[$65 + 12 >> 2] | 0) == (HEAP32[$65 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 127]($65) | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $78 = 0;
      break;
     } else {
      $78 = HEAP32[$__b >> 2] | 0;
      break;
     } else $78 = $65; while (0);
     $77 = ($78 | 0) == 0;
     if (!$80) {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $92 = 0;
     } else if ((HEAP32[$80 + 12 >> 2] | 0) == (HEAP32[$80 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      $$pre$i2$i$i20 = 0;
      $92 = 0;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $92 = $$pre$i2$i$i7;
     } else {
      $$pre$i2$i$i20 = $$pre$i2$i$i7;
      $92 = $80;
     }
     $95 = HEAP32[$__b >> 2] | 0;
     if (!(($$0$in | 0) > 1 & ($77 ^ ($92 | 0) == 0))) {
      $$lcssa = $95;
      $$pre$i2$i$i20$lcssa = $$pre$i2$i$i20;
      $__r$0$lcssa = $__r$0;
      break;
     }
     $97 = HEAP32[$95 + 12 >> 2] | 0;
     if (($97 | 0) == (HEAP32[$95 + 16 >> 2] | 0)) $$0$i$i10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$95 >> 2] | 0) + 36 >> 2] & 127]($95) | 0; else $$0$i$i10 = HEAPU8[$97 >> 0] | 0;
     $107 = $$0$i$i10 & 255;
     if ($107 << 24 >> 24 <= -1) {
      $$01 = $__r$0;
      break L16;
     }
     if (!(HEAP16[(HEAP32[$42 >> 2] | 0) + ($$0$i$i10 << 24 >> 24 << 1) >> 1] & 2048)) {
      $$01 = $__r$0;
      break L16;
     }
     $120 = ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $107, 0) | 0) << 24 >> 24) + ($__r$0 * 10 | 0) | 0;
     $121 = HEAP32[$__b >> 2] | 0;
     $122 = $121 + 12 | 0;
     $123 = HEAP32[$122 >> 2] | 0;
     if (($123 | 0) == (HEAP32[$121 + 16 >> 2] | 0)) {
      FUNCTION_TABLE_ii[HEAP32[(HEAP32[$121 >> 2] | 0) + 40 >> 2] & 127]($121) | 0;
      $$0$in = $$0;
      $$pre$i2$i$i7 = $$pre$i2$i$i20;
      $80 = $92;
      $__r$0$in = $120;
      continue;
     } else {
      HEAP32[$122 >> 2] = $123 + 1;
      $$0$in = $$0;
      $$pre$i2$i$i7 = $$pre$i2$i$i20;
      $80 = $92;
      $__r$0$in = $120;
      continue;
     }
    }
    do if (!$$lcssa) $143 = 0; else if ((HEAP32[$$lcssa + 12 >> 2] | 0) == (HEAP32[$$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$lcssa >> 2] | 0) + 36 >> 2] & 127]($$lcssa) | 0) == -1) {
     HEAP32[$__b >> 2] = 0;
     $143 = 0;
     break;
    } else {
     $143 = HEAP32[$__b >> 2] | 0;
     break;
    } else $143 = $$lcssa; while (0);
    $142 = ($143 | 0) == 0;
    do if (!$$pre$i2$i$i20$lcssa) label = 50; else {
     if ((HEAP32[$$pre$i2$i$i20$lcssa + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i20$lcssa + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i20$lcssa >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i20$lcssa) | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 50;
      break;
     }
     if ($142) {
      $$01 = $__r$0$lcssa;
      break L16;
     }
    } while (0);
    if ((label | 0) == 50) if (!$142) {
     $$01 = $__r$0$lcssa;
     break;
    }
    HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $$01 = $__r$0$lcssa;
    break;
   }
  }
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
  $$01 = 0;
 } while (0);
 return $$01 | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$lcssa36 = 0, $$phi$trans$insert = 0, $$phi$trans$insert12 = 0, $$phi$trans$insert9 = 0, $$pre = 0, $$pre$phi18Z2D = 0, $$pre$phi20Z2D = 0, $$pre$phi22Z2D = 0, $$pre$phi26Z2D = 0, $$pre$phiZ2D = 0, $$pre13 = 0, $$pre16$pre$phiZZ2D = 0, $$pre19$pre$phiZZ2D = 0, $0 = 0, $100 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $12 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $27 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $38 = 0, $39 = 0, $40 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $55 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $66 = 0, $67 = 0, $70 = 0, $72 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $85 = 0, $91 = 0, $94 = 0, $98 = 0, $99 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 16)) {
  HEAP32[$this + 8 >> 2] = 0;
  HEAP32[$this + 12 >> 2] = 0;
  HEAP32[$this + 16 >> 2] = 0;
  $12 = HEAP32[$this + 52 >> 2] | 0;
  do if ($12 >>> 0 > 8) if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $27 = HEAP32[$this + 56 >> 2] | 0;
   $31 = $27 + ((HEAP32[$this + 60 >> 2] | 0) + -1) | 0;
   HEAP32[$this + 24 >> 2] = $27;
   $33 = $this + 20 | 0;
   HEAP32[$33 >> 2] = $27;
   $34 = $this + 28 | 0;
   HEAP32[$34 >> 2] = $31;
   $$pre16$pre$phiZZ2D = $33;
   $$pre19$pre$phiZZ2D = $34;
   $106 = $27;
   $107 = $31;
   $108 = $27;
   break;
  } else {
   $18 = HEAP32[$this + 32 >> 2] | 0;
   $20 = $18 + ($12 + -1) | 0;
   HEAP32[$this + 24 >> 2] = $18;
   $22 = $this + 20 | 0;
   HEAP32[$22 >> 2] = $18;
   $23 = $this + 28 | 0;
   HEAP32[$23 >> 2] = $20;
   $$pre16$pre$phiZZ2D = $22;
   $$pre19$pre$phiZZ2D = $23;
   $106 = $18;
   $107 = $20;
   $108 = $18;
   break;
  } else {
   HEAP32[$this + 24 >> 2] = 0;
   $38 = $this + 20 | 0;
   HEAP32[$38 >> 2] = 0;
   $39 = $this + 28 | 0;
   HEAP32[$39 >> 2] = 0;
   $$pre16$pre$phiZZ2D = $38;
   $$pre19$pre$phiZZ2D = $39;
   $106 = 0;
   $107 = 0;
   $108 = 0;
  } while (0);
  HEAP32[$3 >> 2] = 16;
  $$pre$phi18Z2D = $$pre16$pre$phiZZ2D;
  $$pre$phi20Z2D = $$pre19$pre$phiZZ2D;
  $$pre$phi22Z2D = $$pre19$pre$phiZZ2D;
  $$pre$phiZ2D = $$pre16$pre$phiZZ2D;
  $103 = $108;
  $104 = $107;
  $105 = $106;
 } else {
  $$phi$trans$insert = $this + 20 | 0;
  $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
  $$phi$trans$insert9 = $this + 28 | 0;
  $$pre$phi18Z2D = $$phi$trans$insert;
  $$pre$phi20Z2D = $$phi$trans$insert9;
  $$pre$phi22Z2D = $$phi$trans$insert9;
  $$pre$phiZ2D = $$phi$trans$insert;
  $103 = $$pre;
  $104 = HEAP32[$$phi$trans$insert9 >> 2] | 0;
  $105 = $$pre;
 }
 $40 = ($__c | 0) == -1;
 $$phi$trans$insert12 = $this + 24 | 0;
 $$pre13 = HEAP32[$$phi$trans$insert12 >> 2] | 0;
 if ($40) {
  $48 = $$pre13;
  $49 = $105;
 } else {
  if (!$$pre13) {
   HEAP32[$$phi$trans$insert12 >> 2] = $__1buf;
   HEAP32[$$pre$phiZ2D >> 2] = $__1buf;
   HEAP32[$$pre$phi20Z2D >> 2] = $__1buf + 1;
   $44 = $__1buf;
  } else $44 = $$pre13;
  HEAP8[$44 >> 0] = $__c;
  $46 = (HEAP32[$$phi$trans$insert12 >> 2] | 0) + 1 | 0;
  HEAP32[$$phi$trans$insert12 >> 2] = $46;
  $48 = $46;
  $49 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 if (($48 | 0) != ($49 | 0)) {
  L23 : do if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $59 = $this + 32 | 0;
   $60 = HEAP32[$59 >> 2] | 0;
   HEAP32[$__extbe >> 2] = $60;
   $61 = $this + 68 | 0;
   $62 = HEAP32[$61 >> 2] | 0;
   if (!$62) {
    $67 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($67);
    ___cxa_throw($67 | 0, 656, 81);
   }
   $65 = $this + 72 | 0;
   $66 = $this + 52 | 0;
   $70 = $60;
   $72 = $62;
   $75 = $49;
   $76 = $48;
   while (1) {
    $77 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$72 >> 2] | 0) + 12 >> 2] & 15]($72, $65, $75, $76, $__e, $70, $70 + (HEAP32[$66 >> 2] | 0) | 0, $__extbe) | 0;
    $79 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    if ((HEAP32[$__e >> 2] | 0) == ($79 | 0)) {
     $$0 = -1;
     label = 31;
     break;
    }
    if (($77 | 0) == 3) {
     $$lcssa36 = $79;
     label = 23;
     break;
    }
    if ($77 >>> 0 >= 2) {
     $$0 = -1;
     label = 31;
     break;
    }
    $91 = HEAP32[$59 >> 2] | 0;
    $94 = (HEAP32[$__extbe >> 2] | 0) - $91 | 0;
    if ((_fwrite($91, 1, $94, HEAP32[$0 >> 2] | 0) | 0) != ($94 | 0)) {
     $$0 = -1;
     label = 31;
     break;
    }
    if (($77 | 0) != 1) {
     $$pre$phi26Z2D = $$phi$trans$insert12;
     break L23;
    }
    $98 = HEAP32[$__e >> 2] | 0;
    $99 = HEAP32[$$phi$trans$insert12 >> 2] | 0;
    HEAP32[$$pre$phi18Z2D >> 2] = $98;
    HEAP32[$$pre$phi20Z2D >> 2] = $99;
    HEAP32[$$phi$trans$insert12 >> 2] = $99;
    $100 = HEAP32[$61 >> 2] | 0;
    if (!$100) {
     label = 20;
     break;
    }
    $70 = HEAP32[$59 >> 2] | 0;
    $72 = $100;
    $75 = $98;
    $76 = $99;
   }
   if ((label | 0) == 20) {
    $67 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($67);
    ___cxa_throw($67 | 0, 656, 81);
   } else if ((label | 0) == 23) {
    $85 = (HEAP32[$$phi$trans$insert12 >> 2] | 0) - $$lcssa36 | 0;
    if ((_fwrite($$lcssa36, 1, $85, HEAP32[$0 >> 2] | 0) | 0) == ($85 | 0)) {
     $$pre$phi26Z2D = $$phi$trans$insert12;
     break;
    } else $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   } else if ((label | 0) == 31) {
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else {
   $55 = $48 - $49 | 0;
   if ((_fwrite($49, 1, $55, HEAP32[$0 >> 2] | 0) | 0) == ($55 | 0)) {
    $$pre$phi26Z2D = $$phi$trans$insert12;
    break;
   } else {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } while (0);
  HEAP32[$$pre$phi26Z2D >> 2] = $103;
  HEAP32[$$pre$phi18Z2D >> 2] = $103;
  HEAP32[$$pre$phi22Z2D >> 2] = $104;
 }
 $$0 = $40 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre19 = 0, $0 = 0, $1 = 0, $104 = 0, $105 = 0, $109 = 0, $113 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $126 = 0, $128 = 0, $129 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $46 = 0, $5 = 0, $54 = 0, $66 = 0, $7 = 0, $74 = 0, $8 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 20 | 0;
 $__loc = sp + 24 | 0;
 $__pat = sp + 60 | 0;
 $__dp = sp + 64 | 0;
 $__ts = sp + 65 | 0;
 $__grp = sp;
 $__sym = sp + 48 | 0;
 $__sn = sp + 32 | 0;
 $__fd = sp + 12 | 0;
 $__mbuf = sp + 68 | 0;
 $__mi = sp + 44 | 0;
 $__me = sp + 28 | 0;
 $0 = sp + 16 | 0;
 $1 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $1;
 __THREW__ = 0;
 $2 = invoke_iii(22, $__loc | 0, 11164) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) label = 13; else {
  $5 = HEAP8[$__digits >> 0] | 0;
  $7 = ($5 & 1) == 0;
  $8 = $__digits + 4 | 0;
  if (!(($7 ? ($5 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) | 0)) $32 = 0; else {
   $18 = HEAP8[($7 ? $__digits + 1 | 0 : HEAP32[$__digits + 8 >> 2] | 0) >> 0] | 0;
   __THREW__ = 0;
   $22 = invoke_iii(HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] | 0, $2 | 0, 45) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) {
    label = 13;
    break;
   }
   $32 = $18 << 24 >> 24 == $22 << 24 >> 24;
  }
  HEAP32[$__grp >> 2] = 0;
  HEAP32[$__grp + 4 >> 2] = 0;
  HEAP32[$__grp + 8 >> 2] = 0;
  HEAP32[$__sym >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  HEAP32[$__sym + 8 >> 2] = 0;
  HEAP32[$__sn >> 2] = 0;
  HEAP32[$__sn + 4 >> 2] = 0;
  HEAP32[$__sn + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_viiiiiiiiii(3, $__intl | 0, $32 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $33 = __THREW__;
  __THREW__ = 0;
  if ($33 & 1) {
   $94 = ___cxa_find_matching_catch() | 0;
   $$0 = $94;
   $$01 = tempRet0;
   $$pre19 = $1;
  } else {
   $35 = HEAP8[$__digits >> 0] | 0;
   $38 = HEAP32[$8 >> 2] | 0;
   $41 = ($35 & 1) == 0 ? ($35 & 255) >>> 1 : $38;
   $42 = HEAP32[$__fd >> 2] | 0;
   if (($41 | 0) > ($42 | 0)) {
    $46 = HEAP8[$__sn >> 0] | 0;
    $54 = HEAP8[$__sym >> 0] | 0;
    $86 = ($41 - $42 << 1 | 1) + $42 + (($46 & 1) == 0 ? ($46 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($54 & 1) == 0 ? ($54 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
   } else {
    $66 = HEAP8[$__sn >> 0] | 0;
    $74 = HEAP8[$__sym >> 0] | 0;
    $86 = $42 + 2 + (($66 & 1) == 0 ? ($66 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($74 & 1) == 0 ? ($74 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
   }
   if ($86 >>> 0 > 100) {
    $87 = _malloc($86) | 0;
    $88 = $87;
    if (!$87) {
     __THREW__ = 0;
     invoke_v(7);
     $90 = __THREW__;
     __THREW__ = 0;
     if ($90 & 1) $99 = $88; else {
      $104 = HEAP8[$__digits >> 0] | 0;
      $113 = HEAP32[$8 >> 2] | 0;
      $126 = $88;
      $__mb$0 = 0;
      label = 17;
     }
    } else {
     $104 = $35;
     $113 = $38;
     $126 = $88;
     $__mb$0 = $87;
     label = 17;
    }
   } else {
    $104 = $35;
    $113 = $38;
    $126 = 0;
    $__mb$0 = $__mbuf;
    label = 17;
   }
   if ((label | 0) == 17) {
    $105 = ($104 & 1) == 0;
    $109 = $105 ? $__digits + 1 | 0 : HEAP32[$__digits + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiiiiiiiiiiiiii(1, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $109 | 0, $109 + ($105 ? ($104 & 255) >>> 1 : $113) | 0, $2 | 0, $32 | 0, $__pat | 0, HEAP8[$__dp >> 0] | 0, HEAP8[$__ts >> 0] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $42 | 0);
    $117 = __THREW__;
    __THREW__ = 0;
    if ($117 & 1) $99 = $126; else {
     HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
     $120 = HEAP32[$__mi >> 2] | 0;
     $121 = HEAP32[$__me >> 2] | 0;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $122 = invoke_iiiiiii(39, $$byval_copy | 0, $__mb$0 | 0, $120 | 0, $121 | 0, $__iob | 0, $__fl | 0) | 0;
     $123 = __THREW__;
     __THREW__ = 0;
     if ($123 & 1) $99 = $126; else {
      if (!$126) $128 = $1; else {
       _free($126);
       $128 = HEAP32[$__loc >> 2] | 0;
      }
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
      __ZNSt3__114__shared_count16__release_sharedEv($128) | 0;
      STACKTOP = sp;
      return $122 | 0;
     }
    }
   }
   $96 = ___cxa_find_matching_catch() | 0;
   $97 = tempRet0;
   if (!$99) {
    $$0 = $96;
    $$01 = $97;
    $$pre19 = $1;
   } else {
    _free($99);
    $$0 = $96;
    $$01 = $97;
    $$pre19 = HEAP32[$__loc >> 2] | 0;
   }
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sn);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
  $129 = $$pre19;
 } while (0);
 if ((label | 0) == 13) {
  $92 = ___cxa_find_matching_catch() | 0;
  $$1 = $92;
  $$12 = tempRet0;
  $129 = $1;
 }
 __ZNSt3__114__shared_count16__release_sharedEv($129) | 0;
 ___resumeException($$1 | 0);
 return 0;
}

function __ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this, $__s, $__intl, $__iob, $__fl, $__digits) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__digits = $__digits | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$byval_copy = 0, $$pre18 = 0, $0 = 0, $1 = 0, $104 = 0, $105 = 0, $108 = 0, $112 = 0, $116 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $125 = 0, $127 = 0, $128 = 0, $17 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $31 = 0, $32 = 0, $34 = 0, $37 = 0, $40 = 0, $41 = 0, $45 = 0, $5 = 0, $53 = 0, $65 = 0, $7 = 0, $73 = 0, $8 = 0, $85 = 0, $87 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $99 = 0, $__dp = 0, $__fd = 0, $__grp = 0, $__loc = 0, $__mb$0 = 0, $__mbuf = 0, $__me = 0, $__mi = 0, $__pat = 0, $__sn = 0, $__sym = 0, $__ts = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 $$byval_copy = sp;
 $__loc = sp + 416 | 0;
 $__pat = sp + 472 | 0;
 $__dp = sp + 436 | 0;
 $__ts = sp + 440 | 0;
 $__grp = sp + 448 | 0;
 $__sym = sp + 460 | 0;
 $__sn = sp + 424 | 0;
 $__fd = sp + 420 | 0;
 $__mbuf = sp + 16 | 0;
 $__mi = sp + 4 | 0;
 $__me = sp + 444 | 0;
 $0 = sp + 8 | 0;
 $1 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $1;
 __THREW__ = 0;
 $2 = invoke_iii(22, $__loc | 0, 11156) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) label = 13; else {
  $5 = HEAP8[$__digits >> 0] | 0;
  $7 = ($5 & 1) == 0;
  $8 = $__digits + 4 | 0;
  if (!(($7 ? ($5 & 255) >>> 1 : HEAP32[$8 >> 2] | 0) | 0)) $31 = 0; else {
   $17 = HEAP32[($7 ? $8 : HEAP32[$__digits + 8 >> 2] | 0) >> 2] | 0;
   __THREW__ = 0;
   $21 = invoke_iii(HEAP32[(HEAP32[$2 >> 2] | 0) + 44 >> 2] | 0, $2 | 0, 45) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    label = 13;
    break;
   }
   $31 = ($17 | 0) == ($21 | 0);
  }
  HEAP32[$__grp >> 2] = 0;
  HEAP32[$__grp + 4 >> 2] = 0;
  HEAP32[$__grp + 8 >> 2] = 0;
  HEAP32[$__sym >> 2] = 0;
  HEAP32[$__sym + 4 >> 2] = 0;
  HEAP32[$__sym + 8 >> 2] = 0;
  HEAP32[$__sn >> 2] = 0;
  HEAP32[$__sn + 4 >> 2] = 0;
  HEAP32[$__sn + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_viiiiiiiiii(4, $__intl | 0, $31 | 0, $__loc | 0, $__pat | 0, $__dp | 0, $__ts | 0, $__grp | 0, $__sym | 0, $__sn | 0, $__fd | 0);
  $32 = __THREW__;
  __THREW__ = 0;
  if ($32 & 1) {
   $94 = ___cxa_find_matching_catch() | 0;
   $$0 = $94;
   $$01 = tempRet0;
   $$pre18 = $1;
  } else {
   $34 = HEAP8[$__digits >> 0] | 0;
   $37 = HEAP32[$8 >> 2] | 0;
   $40 = ($34 & 1) == 0 ? ($34 & 255) >>> 1 : $37;
   $41 = HEAP32[$__fd >> 2] | 0;
   if (($40 | 0) > ($41 | 0)) {
    $45 = HEAP8[$__sn >> 0] | 0;
    $53 = HEAP8[$__sym >> 0] | 0;
    $85 = ($40 - $41 << 1 | 1) + $41 + (($45 & 1) == 0 ? ($45 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($53 & 1) == 0 ? ($53 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
   } else {
    $65 = HEAP8[$__sn >> 0] | 0;
    $73 = HEAP8[$__sym >> 0] | 0;
    $85 = $41 + 2 + (($65 & 1) == 0 ? ($65 & 255) >>> 1 : HEAP32[$__sn + 4 >> 2] | 0) + (($73 & 1) == 0 ? ($73 & 255) >>> 1 : HEAP32[$__sym + 4 >> 2] | 0) | 0;
   }
   if ($85 >>> 0 > 100) {
    $87 = _malloc($85 << 2) | 0;
    $88 = $87;
    if (!$87) {
     __THREW__ = 0;
     invoke_v(7);
     $90 = __THREW__;
     __THREW__ = 0;
     if ($90 & 1) $99 = $88; else {
      $104 = HEAP8[$__digits >> 0] | 0;
      $112 = HEAP32[$8 >> 2] | 0;
      $125 = $88;
      $__mb$0 = 0;
      label = 17;
     }
    } else {
     $104 = $34;
     $112 = $37;
     $125 = $88;
     $__mb$0 = $87;
     label = 17;
    }
   } else {
    $104 = $34;
    $112 = $37;
    $125 = 0;
    $__mb$0 = $__mbuf;
    label = 17;
   }
   if ((label | 0) == 17) {
    $105 = ($104 & 1) == 0;
    $108 = $105 ? $8 : HEAP32[$__digits + 8 >> 2] | 0;
    __THREW__ = 0;
    invoke_viiiiiiiiiiiiiii(2, $__mb$0 | 0, $__mi | 0, $__me | 0, HEAP32[$__iob + 4 >> 2] | 0, $108 | 0, $108 + (($105 ? ($104 & 255) >>> 1 : $112) << 2) | 0, $2 | 0, $31 | 0, $__pat | 0, HEAP32[$__dp >> 2] | 0, HEAP32[$__ts >> 2] | 0, $__grp | 0, $__sym | 0, $__sn | 0, $41 | 0);
    $116 = __THREW__;
    __THREW__ = 0;
    if ($116 & 1) $99 = $125; else {
     HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
     $119 = HEAP32[$__mi >> 2] | 0;
     $120 = HEAP32[$__me >> 2] | 0;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $121 = invoke_iiiiiii(40, $$byval_copy | 0, $__mb$0 | 0, $119 | 0, $120 | 0, $__iob | 0, $__fl | 0) | 0;
     $122 = __THREW__;
     __THREW__ = 0;
     if ($122 & 1) $99 = $125; else {
      if (!$125) $127 = $1; else {
       _free($125);
       $127 = HEAP32[$__loc >> 2] | 0;
      }
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
      __ZNSt3__114__shared_count16__release_sharedEv($127) | 0;
      STACKTOP = sp;
      return $121 | 0;
     }
    }
   }
   $96 = ___cxa_find_matching_catch() | 0;
   $97 = tempRet0;
   if (!$99) {
    $$0 = $96;
    $$01 = $97;
    $$pre18 = $1;
   } else {
    _free($99);
    $$0 = $96;
    $$01 = $97;
    $$pre18 = HEAP32[$__loc >> 2] | 0;
   }
  }
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sn);
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sym);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__grp);
  $$1 = $$0;
  $$12 = $$01;
  $128 = $$pre18;
 } while (0);
 if ((label | 0) == 13) {
  $92 = ___cxa_find_matching_catch() | 0;
  $$1 = $92;
  $$12 = tempRet0;
  $128 = $1;
 }
 __ZNSt3__114__shared_count16__release_sharedEv($128) | 0;
 ___resumeException($$1 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter7captureERKNSt3__16vectorIPK10IdentifierNS1_9allocatorIS5_EEEE($agg$result, $this, $free_vars$0$0$0$val, $free_vars$0$0$1$val) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $free_vars$0$0$0$val = $free_vars$0$0$0$val | 0;
 $free_vars$0$0$1$val = $free_vars$0$0$1$val | 0;
 var $$0$i7$i = 0, $$0$ph$lcssa$i$i$i$i = 0, $$0$ph$lcssa$i$i$i$i$lcssa = 0, $$0$ph6$i$i$i$i = 0, $$01$ph5$i$i$i$i = 0, $$013$i$i$i$i = 0, $$013$i$i$i$i$lcssa = 0, $$idx$i = 0, $$idx$val$i = 0, $$idx1$i = 0, $$lcssa = 0, $$lcssa40 = 0, $$lcssa41 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $2 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $36 = 0, $37 = 0, $4 = 0, $42 = 0, $43 = 0, $49 = 0, $5 = 0, $51 = 0, $55 = 0, $59 = 0, $__nd$0$be$in$i$i = 0, $__nd$0$i$i = 0, $__nd$0$i$i$lcssa = 0, $__nd$0$i$i$lcssa38 = 0, $__nd$0$i$i$lcssa39 = 0, $__parent$i = 0, $__r$0$i = 0, $free_vars$0$0$0$val19 = 0, $i$0$in$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent$i = sp;
 $0 = $agg$result + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $agg$result + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $2;
 if (($free_vars$0$0$0$val | 0) == ($free_vars$0$0$1$val | 0)) {
  STACKTOP = sp;
  return;
 }
 $$idx$i = $this + 68 | 0;
 $$idx1$i = $this + 72 | 0;
 $4 = $2;
 $free_vars$0$0$0$val19 = $free_vars$0$0$0$val;
 while (1) {
  $5 = HEAP32[$free_vars$0$0$0$val19 >> 2] | 0;
  $$idx$val$i = HEAP32[$$idx$i >> 2] | 0;
  $i$0$in$i = ((HEAP32[$$idx1$i >> 2] | 0) - $$idx$val$i | 0) / 144 | 0;
  do {
   if (($i$0$in$i | 0) <= 0) break;
   $i$0$in$i = $i$0$in$i + -1 | 0;
   $11 = $$idx$val$i + ($i$0$in$i * 144 | 0) + 132 | 0;
   $12 = HEAP32[$11 >> 2] | 0;
   if ($12) {
    $$0$ph6$i$i$i$i = $11;
    $$01$ph5$i$i$i$i = $12;
    L10 : while (1) {
     $$013$i$i$i$i = $$01$ph5$i$i$i$i;
     while (1) {
      if ((HEAP32[$$013$i$i$i$i + 16 >> 2] | 0) >>> 0 >= $5 >>> 0) {
       $$013$i$i$i$i$lcssa = $$013$i$i$i$i;
       break;
      }
      $$013$i$i$i$i = HEAP32[$$013$i$i$i$i + 4 >> 2] | 0;
      if (!$$013$i$i$i$i) {
       $$0$ph$lcssa$i$i$i$i = $$0$ph6$i$i$i$i;
       break L10;
      }
     }
     $$01$ph5$i$i$i$i = HEAP32[$$013$i$i$i$i$lcssa >> 2] | 0;
     if (!$$01$ph5$i$i$i$i) {
      $$0$ph$lcssa$i$i$i$i = $$013$i$i$i$i$lcssa;
      break;
     } else $$0$ph6$i$i$i$i = $$013$i$i$i$i$lcssa;
    }
    if (($$0$ph$lcssa$i$i$i$i | 0) != ($11 | 0)) if ((HEAP32[$$0$ph$lcssa$i$i$i$i + 16 >> 2] | 0) >>> 0 <= $5 >>> 0) {
     $$0$ph$lcssa$i$i$i$i$lcssa = $$0$ph$lcssa$i$i$i$i;
     label = 13;
     break;
    }
   }
  } while ((HEAP32[$$idx$val$i + ($i$0$in$i * 144 | 0) >> 2] | 0) != 5);
  if ((label | 0) == 13) {
   label = 0;
   $24 = HEAP32[$$0$ph$lcssa$i$i$i$i$lcssa + 20 >> 2] | 0;
   if ($24) {
    $26 = HEAP32[$2 >> 2] | 0;
    $28 = $5;
    do if (!$26) {
     HEAP32[$__parent$i >> 2] = $2;
     $$0$i7$i = $2;
     $49 = $4;
     label = 24;
    } else {
     $__nd$0$i$i = $26;
     while (1) {
      $30 = HEAP32[$__nd$0$i$i + 16 >> 2] | 0;
      if ($30 >>> 0 > $5 >>> 0) {
       $32 = HEAP32[$__nd$0$i$i >> 2] | 0;
       if (!$32) {
        $$lcssa40 = $__nd$0$i$i;
        $__nd$0$i$i$lcssa39 = $__nd$0$i$i;
        label = 17;
        break;
       } else $__nd$0$be$in$i$i = $32;
      } else {
       if ($30 >>> 0 >= $5 >>> 0) {
        $__nd$0$i$i$lcssa = $__nd$0$i$i;
        label = 23;
        break;
       }
       $36 = $__nd$0$i$i + 4 | 0;
       $37 = HEAP32[$36 >> 2] | 0;
       if (!$37) {
        $$lcssa = $36;
        $__nd$0$i$i$lcssa38 = $__nd$0$i$i;
        label = 21;
        break;
       } else $__nd$0$be$in$i$i = $37;
      }
      $__nd$0$i$i = $__nd$0$be$in$i$i;
     }
     if ((label | 0) == 17) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa39;
      $$0$i7$i = $$lcssa40;
      $49 = $__nd$0$i$i$lcssa39;
      label = 24;
      break;
     } else if ((label | 0) == 21) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa38;
      $$0$i7$i = $$lcssa;
      $49 = $__nd$0$i$i$lcssa38;
      label = 24;
      break;
     } else if ((label | 0) == 23) {
      label = 0;
      HEAP32[$__parent$i >> 2] = $__nd$0$i$i$lcssa;
      if (!$__nd$0$i$i$lcssa) {
       $$0$i7$i = $__parent$i;
       $49 = $__nd$0$i$i$lcssa;
       label = 24;
       break;
      } else {
       $__r$0$i = $__nd$0$i$i$lcssa;
       break;
      }
     }
    } while (0);
    if ((label | 0) == 24) {
     label = 0;
     __THREW__ = 0;
     $42 = invoke_ii(67, 24) | 0;
     $43 = __THREW__;
     __THREW__ = 0;
     if ($43 & 1) {
      $$lcssa41 = $26;
      label = 29;
      break;
     }
     HEAP32[$42 + 16 >> 2] = $28;
     HEAP32[$42 + 20 >> 2] = 0;
     HEAP32[$42 >> 2] = 0;
     HEAP32[$42 + 4 >> 2] = 0;
     HEAP32[$42 + 8 >> 2] = $49;
     HEAP32[$$0$i7$i >> 2] = $42;
     $51 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
     if (!$51) $55 = $42; else {
      HEAP32[$agg$result >> 2] = $51;
      $55 = HEAP32[$$0$i7$i >> 2] | 0;
     }
     __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$0 >> 2] | 0, $55);
     HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
     $__r$0$i = $42;
    }
    HEAP32[$__r$0$i + 20 >> 2] = $24;
   }
  }
  $free_vars$0$0$0$val19 = $free_vars$0$0$0$val19 + 4 | 0;
  if (($free_vars$0$0$0$val19 | 0) == ($free_vars$0$0$1$val | 0)) {
   label = 31;
   break;
  }
 }
 if ((label | 0) == 29) {
  $59 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($agg$result, $$lcssa41);
  ___resumeException($59 | 0);
 } else if ((label | 0) == 31) {
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i1440 = 0, $$0$i35 = 0, $$1 = 0, $$14 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $102 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $31 = 0, $34 = 0, $5 = 0, $54 = 0, $55 = 0, $57 = 0, $59 = 0, $61 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $79 = 0, $80 = 0, $88 = 0, $91 = 0, $__bn$i = 0, $__bn$i12 = 0, $__buf$i = 0, $__buf$i11 = 0, $__mb$i = 0, $__mb$i10 = 0, $__ndflt = 0, $__nn$i = 0, $__p$0$i1638 = 0, $__p$0$i34 = 0, $__wn$i = 0, $lpad$phi$index = 0, $lpad$phi$index10 = 0, $lpad$phi30$index = 0, $lpad$phi30$index3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $__mb$i10 = sp;
 $__buf$i11 = sp + 192 | 0;
 $__bn$i12 = sp + 8 | 0;
 $__wn$i = sp + 12 | 0;
 $__mb$i = sp + 56 | 0;
 $__buf$i = sp + 64 | 0;
 $__bn$i = sp + 16 | 0;
 $__nn$i = sp + 44 | 0;
 $__ndflt = sp + 32 | 0;
 $0 = sp + 48 | 0;
 $1 = sp + 24 | 0;
 HEAP32[$__ndflt >> 2] = 0;
 HEAP32[$__ndflt + 4 >> 2] = 0;
 HEAP32[$__ndflt + 8 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 >> 2] = 11640;
 $5 = HEAP8[$__dflt >> 0] | 0;
 $7 = ($5 & 1) == 0;
 $10 = $__dflt + 4 | 0;
 $11 = $7 ? $10 : HEAP32[$__dflt + 8 >> 2] | 0;
 $15 = $7 ? ($5 & 255) >>> 1 : HEAP32[$10 >> 2] | 0;
 $16 = $11 + ($15 << 2) | 0;
 $17 = $__buf$i11 + 32 | 0;
 L1 : do if (($15 | 0) > 0) {
  $$0$i1440 = $11;
  L2 : while (1) {
   HEAP32[$__wn$i >> 2] = $$0$i1440;
   __THREW__ = 0;
   $22 = invoke_iiiiiiiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] | 0, $0 | 0, $__mb$i10 | 0, $$0$i1440 | 0, $16 | 0, $__wn$i | 0, $__buf$i11 | 0, $17 | 0, $__bn$i12 | 0) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) {
    label = 12;
    break;
   }
   if (($22 | 0) == 2 ? 1 : (HEAP32[$__wn$i >> 2] | 0) == ($$0$i1440 | 0)) {
    label = 5;
    break;
   }
   if ($__buf$i11 >>> 0 < (HEAP32[$__bn$i12 >> 2] | 0) >>> 0) {
    $__p$0$i1638 = $__buf$i11;
    do {
     __THREW__ = 0;
     invoke_vii(44, $__ndflt | 0, HEAP8[$__p$0$i1638 >> 0] | 0);
     $34 = __THREW__;
     __THREW__ = 0;
     if ($34 & 1) {
      label = 11;
      break L2;
     }
     $__p$0$i1638 = $__p$0$i1638 + 1 | 0;
    } while ($__p$0$i1638 >>> 0 < (HEAP32[$__bn$i12 >> 2] | 0) >>> 0);
   }
   $$0$i1440 = HEAP32[$__wn$i >> 2] | 0;
   if (!(($22 | 0) != 2 & $$0$i1440 >>> 0 < $16 >>> 0)) {
    label = 9;
    break L1;
   }
  }
  if ((label | 0) == 5) {
   __THREW__ = 0;
   invoke_vi(188, 62905);
   __THREW__ = 0;
   $31 = ___cxa_find_matching_catch() | 0;
   $lpad$phi30$index = $31;
   $lpad$phi30$index3 = tempRet0;
  } else if ((label | 0) == 11) {
   $59 = ___cxa_find_matching_catch() | 0;
   $lpad$phi30$index = $59;
   $lpad$phi30$index3 = tempRet0;
  } else if ((label | 0) == 12) {
   $61 = ___cxa_find_matching_catch() | 0;
   $lpad$phi30$index = $61;
   $lpad$phi30$index3 = tempRet0;
  }
  $$1 = $lpad$phi30$index;
  $$14 = $lpad$phi30$index3;
 } else label = 9; while (0);
 L16 : do if ((label | 0) == 9) {
  __THREW__ = 0;
  $54 = invoke_iiiii(13, (($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, ((HEAP8[$__ndflt >> 0] & 1) == 0 ? $__ndflt + 1 | 0 : HEAP32[$__ndflt + 8 >> 2] | 0) | 0) | 0;
  $55 = __THREW__;
  __THREW__ = 0;
  if ($55 & 1) {
   $57 = ___cxa_find_matching_catch() | 0;
   $$1 = $57;
   $$14 = tempRet0;
   break;
  }
  HEAP32[$agg$result >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 >> 2] = 11688;
  $66 = _strlen($54) | 0;
  $67 = $54 + $66 | 0;
  $68 = $67;
  $69 = $__buf$i + 128 | 0;
  L21 : do if (($66 | 0) > 0) {
   $$0$i35 = $54;
   L22 : while (1) {
    HEAP32[$__nn$i >> 2] = $$0$i35;
    __THREW__ = 0;
    $79 = invoke_iiiiiiiii(HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] | 0, $1 | 0, $__mb$i | 0, $$0$i35 | 0, (($68 - $$0$i35 | 0) > 32 ? $$0$i35 + 32 | 0 : $67) | 0, $__nn$i | 0, $__buf$i | 0, $69 | 0, $__bn$i | 0) | 0;
    $80 = __THREW__;
    __THREW__ = 0;
    if ($80 & 1) {
     label = 24;
     break;
    }
    if (($79 | 0) == 2 ? 1 : (HEAP32[$__nn$i >> 2] | 0) == ($$0$i35 | 0)) {
     label = 18;
     break;
    }
    if ($__buf$i >>> 0 < (HEAP32[$__bn$i >> 2] | 0) >>> 0) {
     $__p$0$i34 = $__buf$i;
     do {
      __THREW__ = 0;
      invoke_vii(73, $agg$result | 0, HEAP32[$__p$0$i34 >> 2] | 0);
      $91 = __THREW__;
      __THREW__ = 0;
      if ($91 & 1) {
       label = 23;
       break L22;
      }
      $__p$0$i34 = $__p$0$i34 + 4 | 0;
     } while ($__p$0$i34 >>> 0 < (HEAP32[$__bn$i >> 2] | 0) >>> 0);
    }
    $$0$i35 = HEAP32[$__nn$i >> 2] | 0;
    if (!(($79 | 0) != 2 & $$0$i35 >>> 0 < $67 >>> 0)) break L21;
   }
   if ((label | 0) == 18) {
    __THREW__ = 0;
    invoke_vi(188, 62905);
    __THREW__ = 0;
    $88 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $88;
    $lpad$phi$index10 = tempRet0;
   } else if ((label | 0) == 23) {
    $100 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $100;
    $lpad$phi$index10 = tempRet0;
   } else if ((label | 0) == 24) {
    $102 = ___cxa_find_matching_catch() | 0;
    $lpad$phi$index = $102;
    $lpad$phi$index10 = tempRet0;
   }
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($agg$result);
   $$1 = $lpad$phi$index;
   $$14 = $lpad$phi$index10;
   break L16;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
  STACKTOP = sp;
  return;
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$1 | 0);
}

function _fmod($x, $y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $106 = 0, $107 = 0, $11 = 0, $112 = 0, $114 = 0, $116 = 0, $119 = 0, $12 = 0, $121 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $146 = 0, $149 = 0, $150 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $2 = 0, $23 = 0.0, $25 = 0, $26 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $45 = 0, $46 = 0, $55 = 0, $6 = 0, $60 = 0, $61 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $78 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $93 = 0, $95 = 0, $97 = 0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $6 = $4 & 2047;
 $7 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
 $12 = tempRet0;
 L1 : do if (($11 | 0) == 0 & ($12 | 0) == 0) label = 3; else {
  $16 = $3 & 2147483647;
  if ($16 >>> 0 > 2146435072 | ($16 | 0) == 2146435072 & $2 >>> 0 > 0 | ($6 | 0) == 2047) label = 3; else {
   $25 = _bitshift64Shl($0 | 0, $1 | 0, 1) | 0;
   $26 = tempRet0;
   if (!($26 >>> 0 > $12 >>> 0 | ($26 | 0) == ($12 | 0) & $25 >>> 0 > $11 >>> 0)) return +(($25 | 0) == ($11 | 0) & ($26 | 0) == ($12 | 0) ? $x * 0.0 : $x);
   if (!$6) {
    $37 = _bitshift64Shl($0 | 0, $1 | 0, 12) | 0;
    $38 = tempRet0;
    if (($38 | 0) > -1 | ($38 | 0) == -1 & $37 >>> 0 > 4294967295) {
     $45 = $37;
     $46 = $38;
     $ex$026 = 0;
     while (1) {
      $44 = $ex$026 + -1 | 0;
      $45 = _bitshift64Shl($45 | 0, $46 | 0, 1) | 0;
      $46 = tempRet0;
      if (!(($46 | 0) > -1 | ($46 | 0) == -1 & $45 >>> 0 > 4294967295)) {
       $ex$0$lcssa = $44;
       break;
      } else $ex$026 = $44;
     }
    } else $ex$0$lcssa = 0;
    $55 = _bitshift64Shl($0 | 0, $1 | 0, 1 - $ex$0$lcssa | 0) | 0;
    $83 = $55;
    $84 = tempRet0;
    $ex$1 = $ex$0$lcssa;
   } else {
    $83 = $0;
    $84 = $1 & 1048575 | 1048576;
    $ex$1 = $6;
   }
   if (!$9) {
    $60 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $61 = tempRet0;
    if (($61 | 0) > -1 | ($61 | 0) == -1 & $60 >>> 0 > 4294967295) {
     $68 = $60;
     $69 = $61;
     $ey$020 = 0;
     while (1) {
      $67 = $ey$020 + -1 | 0;
      $68 = _bitshift64Shl($68 | 0, $69 | 0, 1) | 0;
      $69 = tempRet0;
      if (!(($69 | 0) > -1 | ($69 | 0) == -1 & $68 >>> 0 > 4294967295)) {
       $ey$0$lcssa = $67;
       break;
      } else $ey$020 = $67;
     }
    } else $ey$0$lcssa = 0;
    $78 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $ey$0$lcssa | 0) | 0;
    $85 = $78;
    $86 = tempRet0;
    $ey$1$ph = $ey$0$lcssa;
   } else {
    $85 = $2;
    $86 = $3 & 1048575 | 1048576;
    $ey$1$ph = $9;
   }
   $87 = _i64Subtract($83 | 0, $84 | 0, $85 | 0, $86 | 0) | 0;
   $88 = tempRet0;
   $93 = ($88 | 0) > -1 | ($88 | 0) == -1 & $87 >>> 0 > 4294967295;
   L23 : do if (($ex$1 | 0) > ($ey$1$ph | 0)) {
    $152 = $93;
    $153 = $87;
    $154 = $88;
    $95 = $83;
    $97 = $84;
    $ex$212 = $ex$1;
    while (1) {
     if ($152) if (($95 | 0) == ($85 | 0) & ($97 | 0) == ($86 | 0)) break; else {
      $100 = $153;
      $101 = $154;
     } else {
      $100 = $95;
      $101 = $97;
     }
     $102 = _bitshift64Shl($100 | 0, $101 | 0, 1) | 0;
     $103 = tempRet0;
     $104 = $ex$212 + -1 | 0;
     $106 = _i64Subtract($102 | 0, $103 | 0, $85 | 0, $86 | 0) | 0;
     $107 = tempRet0;
     $112 = ($107 | 0) > -1 | ($107 | 0) == -1 & $106 >>> 0 > 4294967295;
     if (($104 | 0) > ($ey$1$ph | 0)) {
      $152 = $112;
      $153 = $106;
      $154 = $107;
      $95 = $102;
      $97 = $103;
      $ex$212 = $104;
     } else {
      $$lcssa7 = $112;
      $114 = $102;
      $116 = $103;
      $155 = $106;
      $156 = $107;
      $ex$2$lcssa = $104;
      break L23;
     }
    }
    $$0 = $x * 0.0;
    break L1;
   } else {
    $$lcssa7 = $93;
    $114 = $83;
    $116 = $84;
    $155 = $87;
    $156 = $88;
    $ex$2$lcssa = $ex$1;
   } while (0);
   if ($$lcssa7) if (($114 | 0) == ($85 | 0) & ($116 | 0) == ($86 | 0)) {
    $$0 = $x * 0.0;
    break;
   } else {
    $119 = $156;
    $121 = $155;
   } else {
    $119 = $116;
    $121 = $114;
   }
   if ($119 >>> 0 < 1048576 | ($119 | 0) == 1048576 & $121 >>> 0 < 0) {
    $126 = $121;
    $127 = $119;
    $ex$39 = $ex$2$lcssa;
    while (1) {
     $128 = _bitshift64Shl($126 | 0, $127 | 0, 1) | 0;
     $129 = tempRet0;
     $130 = $ex$39 + -1 | 0;
     if ($129 >>> 0 < 1048576 | ($129 | 0) == 1048576 & $128 >>> 0 < 0) {
      $126 = $128;
      $127 = $129;
      $ex$39 = $130;
     } else {
      $137 = $128;
      $138 = $129;
      $ex$3$lcssa = $130;
      break;
     }
    }
   } else {
    $137 = $121;
    $138 = $119;
    $ex$3$lcssa = $ex$2$lcssa;
   }
   if (($ex$3$lcssa | 0) > 0) {
    $139 = _i64Add($137 | 0, $138 | 0, 0, -1048576) | 0;
    $140 = tempRet0;
    $141 = _bitshift64Shl($ex$3$lcssa | 0, 0, 52) | 0;
    $149 = $140 | tempRet0;
    $150 = $139 | $141;
   } else {
    $146 = _bitshift64Lshr($137 | 0, $138 | 0, 1 - $ex$3$lcssa | 0) | 0;
    $149 = tempRet0;
    $150 = $146;
   }
   HEAP32[tempDoublePtr >> 2] = $150;
   HEAP32[tempDoublePtr + 4 >> 2] = $149 | $10;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 } while (0);
 if ((label | 0) == 3) {
  $23 = $x * $y;
  $$0 = $23 / $23;
 }
 return +$$0;
}

function __ZN12_GLOBAL__N_15Stack4dumpEv($this) {
 $this = $this | 0;
 var $$idx = 0, $$idx1 = 0, $$idx3$val = 0, $0 = 0, $13 = 0, $19 = 0, $20 = 0, $22 = 0, $30 = 0, $33 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $6 = 0, $60 = 0, $66 = 0, $67 = 0, $72 = 0, $73 = 0, $75 = 0, $8 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $i$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $$idx = $this + 12 | 0;
 $$idx1 = $this + 16 | 0;
 L1 : do if ((HEAP32[$$idx1 >> 2] | 0) != (HEAP32[$$idx >> 2] | 0)) {
  $i$07 = 0;
  while (1) {
   $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8496, 52524, 6) | 0, $i$07) | 0, 52531, 4) | 0;
   $$idx3$val = HEAP32[$$idx >> 2] | 0;
   $5 = $$idx3$val + ($i$07 * 144 | 0) + 8 | 0;
   $6 = HEAP8[$5 >> 0] | 0;
   $8 = ($6 & 1) == 0;
   $9 = $$idx3$val + ($i$07 * 144 | 0) + 12 | 0;
   $13 = $8 ? ($6 & 255) >>> 1 : HEAP32[$9 >> 2] | 0;
   if ($13) __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, $8 ? $5 + 1 | 0 : HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 16 >> 2] | 0, $13) | 0;
   $19 = $$idx3$val + ($i$07 * 144 | 0) + 20 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   do if ($20) {
    $22 = HEAP8[$5 >> 0] | 0;
    if (!((($22 & 1) == 0 ? ($22 & 255) >>> 1 : HEAP32[$9 >> 2] | 0) | 0)) $33 = $20; else {
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 54760, 1) | 0;
     $33 = HEAP32[$19 >> 2] | 0;
    }
    $30 = $$idx3$val + ($i$07 * 144 | 0) + 28 | 0;
    if (($33 | 0) != (HEAP32[$30 >> 2] | 0)) {
     $44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 54789, 1) | 0;
     $47 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($44, HEAP32[$19 >> 2] | 0) | 0, 54760, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($47, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 24 >> 2] | 0) | 0;
     $50 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($44, 54791, 3) | 0;
     $53 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($50, HEAP32[$30 >> 2] | 0) | 0, 54760, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($53, HEAP32[$$idx3$val + ($i$07 * 144 | 0) + 32 >> 2] | 0) | 0;
     __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($50, 54795, 1) | 0;
     break;
    }
    $34 = $$idx3$val + ($i$07 * 144 | 0) + 24 | 0;
    $36 = $$idx3$val + ($i$07 * 144 | 0) + 32 | 0;
    $38 = (HEAP32[$34 >> 2] | 0) == (HEAP32[$36 >> 2] | 0);
    $40 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($4, $33) | 0, 54760, 1) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($40, HEAP32[$34 >> 2] | 0) | 0;
    if (!$38) {
     $42 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 54787, 1) | 0;
     __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($42, HEAP32[$36 >> 2] | 0) | 0;
    }
   } while (0);
   $56 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($4, 52536, 2) | 0;
   $60 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($56, HEAP32[(HEAP32[$$idx >> 2] | 0) + ($i$07 * 144 | 0) >> 2] | 0) | 0, 54795, 1) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($60 + (HEAP32[(HEAP32[$60 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $66 = invoke_iii(22, $0 | 0, 11164) | 0;
   $67 = __THREW__;
   __THREW__ = 0;
   if ($67 & 1) {
    label = 14;
    break;
   }
   __THREW__ = 0;
   $72 = invoke_iii(HEAP32[(HEAP32[$66 >> 2] | 0) + 28 >> 2] | 0, $66 | 0, 10) | 0;
   $73 = __THREW__;
   __THREW__ = 0;
   if ($73 & 1) {
    label = 14;
    break;
   }
   __ZNSt3__16localeD2Ev($0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($60, $72) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($60) | 0;
   $i$07 = $i$07 + 1 | 0;
   if ($i$07 >>> 0 >= (((HEAP32[$$idx1 >> 2] | 0) - (HEAP32[$$idx >> 2] | 0) | 0) / 144 | 0) >>> 0) break L1;
  }
  if ((label | 0) == 14) {
   $75 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__16localeD2Ev($0);
   ___resumeException($75 | 0);
  }
 } while (0);
 HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv(8496 + (HEAP32[(HEAP32[2124] | 0) + -12 >> 2] | 0) | 0) | 0;
 __THREW__ = 0;
 $88 = invoke_iii(22, $0 | 0, 11164) | 0;
 $89 = __THREW__;
 __THREW__ = 0;
 if ($89 & 1) {
  $97 = ___cxa_find_matching_catch() | 0;
  $98 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($97 | 0);
 }
 __THREW__ = 0;
 $94 = invoke_iii(HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] | 0, $88 | 0, 10) | 0;
 $95 = __THREW__;
 __THREW__ = 0;
 if ($95 & 1) {
  $97 = ___cxa_find_matching_catch() | 0;
  $98 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($97 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(8496, $94) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(8496) | 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0$i$i$i$i = 0, $$0$i$i1$i$i = 0, $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $10 = 0, $100 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $61 = 0, $62 = 0, $68 = 0, $7 = 0, $76 = 0, $77 = 0, $8 = 0, $83 = 0, $84 = 0, $87 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $96 = 0, $98 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$013 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 $$byval_copy = sp + 4 | 0;
 $__wbuf = sp + 16 | 0;
 $__wb = sp + 8 | 0;
 $__wn = sp + 420 | 0;
 $__loc = sp;
 $__neg = sp + 424 | 0;
 $0 = sp + 416 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 187;
 $3 = $__wbuf + 400 | 0;
 __THREW__ = 0;
 $4 = invoke_ii(68, $__iob | 0) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $33 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$011 = $33;
  $$019 = tempRet0;
  $95 = $__wbuf;
  label = 38;
 } else {
  HEAP32[$__loc >> 2] = $4;
  __THREW__ = 0;
  $7 = invoke_iii(22, $__loc | 0, 11156) | 0;
  $8 = __THREW__;
  __THREW__ = 0;
  L4 : do if (!($8 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $10 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $10;
   $12 = HEAP32[$__iob + 4 >> 2] | 0;
   $13 = $10;
   __THREW__ = 0;
   HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
   $14 = invoke_iiiiiiiiiiii(2, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $12 | 0, $__err | 0, $__neg | 0, $7 | 0, $__wb | 0, $__wn | 0, $3 | 0) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    if ($14) {
     if (!(HEAP8[$__v >> 0] & 1)) HEAP8[$__v >> 0] = 0; else HEAP32[HEAP32[$__v + 8 >> 2] >> 2] = 0;
     HEAP32[$__v + 4 >> 2] = 0;
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $28 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 44 >> 2] | 0, $7 | 0, 45) | 0;
      $29 = __THREW__;
      __THREW__ = 0;
      if ($29 & 1) break;
      __THREW__ = 0;
      invoke_vii(73, $__v | 0, $28 | 0);
      $31 = __THREW__;
      __THREW__ = 0;
      if ($31 & 1) break;
     }
     __THREW__ = 0;
     $38 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 44 >> 2] | 0, $7 | 0, 48) | 0;
     $39 = __THREW__;
     __THREW__ = 0;
     if ($39 & 1) break;
     $41 = HEAP32[$__wb >> 2] | 0;
     $42 = HEAP32[$__wn >> 2] | 0;
     $43 = $42 + -4 | 0;
     L18 : do if ($41 >>> 0 < $43 >>> 0) {
      $__w$013 = $41;
      while (1) {
       if ((HEAP32[$__w$013 >> 2] | 0) != ($38 | 0)) {
        $__w$0$lcssa = $__w$013;
        break L18;
       }
       $47 = $__w$013 + 4 | 0;
       if ($47 >>> 0 < $43 >>> 0) $__w$013 = $47; else {
        $__w$0$lcssa = $47;
        break;
       }
      }
     } else $__w$0$lcssa = $41; while (0);
     __THREW__ = 0;
     invoke_iiii(44, $__v | 0, $__w$0$lcssa | 0, $42 | 0) | 0;
     $49 = __THREW__;
     __THREW__ = 0;
     if ($49 & 1) break;
    }
    $51 = HEAP32[$__b >> 2] | 0;
    do if (!$51) $100 = 1; else {
     $54 = HEAP32[$51 + 12 >> 2] | 0;
     if (($54 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $61 = invoke_ii(HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] | 0, $51 | 0) | 0;
      $62 = __THREW__;
      __THREW__ = 0;
      if ($62 & 1) break L4; else $$0$i$i$i$i = $61;
     } else $$0$i$i$i$i = HEAP32[$54 >> 2] | 0;
     if (($$0$i$i$i$i | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $100 = 1;
      break;
     } else {
      $100 = (HEAP32[$__b >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$10) label = 30; else {
     $68 = HEAP32[$13 + 12 >> 2] | 0;
     if (($68 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $76 = invoke_ii(HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] | 0, $13 | 0) | 0;
      $77 = __THREW__;
      __THREW__ = 0;
      if ($77 & 1) break L4; else $$0$i$i1$i$i = $76;
     } else $$0$i$i1$i$i = HEAP32[$68 >> 2] | 0;
     if (($$0$i$i1$i$i | 0) == -1) {
      HEAP32[$__e >> 2] = 0;
      label = 30;
      break;
     } else if ($100) break; else {
      label = 32;
      break;
     }
    } while (0);
    if ((label | 0) == 30) if ($100) label = 32;
    if ((label | 0) == 32) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $83 = HEAP32[$__b >> 2] | 0;
    __ZNSt3__114__shared_count16__release_sharedEv($4) | 0;
    $84 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($84) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$2 >> 2] | 0, $84 | 0);
     $87 = __THREW__;
     __THREW__ = 0;
     if ($87 & 1) {
      $89 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($89);
     }
    }
    STACKTOP = sp;
    return $83 | 0;
   }
  } while (0);
  $91 = ___cxa_find_matching_catch() | 0;
  $92 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv($4) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$0110 = $92;
   $$012 = $91;
  } else {
   $$011 = $91;
   $$019 = $92;
   $95 = $$pre;
   label = 38;
  }
 }
 if ((label | 0) == 38) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$2 >> 2] | 0, $95 | 0);
  $96 = __THREW__;
  __THREW__ = 0;
  if ($96 & 1) {
   $98 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($98);
  } else {
   $$0110 = $$019;
   $$012 = $$011;
  }
 }
 ___resumeException($$012 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_($this, $args, $args1, $args2, $args3) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $$0$i7$i$i$i = 0, $$0$i8$i$i$i = 0, $$idx$pre$phi$iZZ2D = 0, $$idx$val$i$i$pre$i$i$i = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx4$val$i = 0, $$idx5$val$i = 0, $$idx5$val19$i = 0, $$idx6$i = 0, $$idx6$val$i = 0, $$idx6$val$pre$i = 0, $$idx6$val11$i = 0, $$idx6$val14$i = 0, $$idx7$val$i = 0, $$idx7$val12$i = 0, $$lcssa$i = 0, $0 = 0, $10 = 0, $102 = 0, $104 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $27 = 0, $28 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $48 = 0, $51 = 0, $53 = 0, $55 = 0, $61 = 0, $62 = 0, $68 = 0, $81 = 0, $84 = 0, $88 = 0, $9 = 0, $97 = 0, $i$013$i = 0, $i$1$i = 0, $scevgep4$i$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0;
 $0 = __Znwj(56) | 0;
 HEAP32[$0 >> 2] = 3592;
 HEAP8[$0 + 5 >> 0] = 0;
 HEAP32[$0 + 24 >> 2] = $args;
 $4 = $0 + 32 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = $4;
 HEAP32[$0 + 40 >> 2] = $args1;
 HEAP32[$0 + 44 >> 2] = $args2;
 HEAP32[$0 + 48 >> 2] = $args3;
 $9 = $this + 20 | 0;
 $10 = $0;
 $11 = $this + 24 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = $this + 28 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if ($12 >>> 0 < $14 >>> 0) {
  HEAP32[$12 >> 2] = $10;
  $17 = (HEAP32[$11 >> 2] | 0) + 4 | 0;
  HEAP32[$11 >> 2] = $17;
  $$idx$pre$phi$iZZ2D = $9;
  $$idx1$val$i = $17;
 } else {
  $this$idx2$val$i$i$i = HEAP32[$9 >> 2] | 0;
  $19 = $this$idx2$val$i$i$i;
  $22 = ($12 - $19 >> 2) + 1 | 0;
  if ($22 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($9);
   $$idx$val$i$i$pre$i$i$i = HEAP32[$9 >> 2] | 0;
   $$idx1$val$i$i$i$i$i = HEAP32[$13 >> 2] | 0;
   $27 = $$idx$val$i$i$pre$i$i$i;
   $53 = $$idx$val$i$i$pre$i$i$i;
  } else {
   $$idx1$val$i$i$i$i$i = $14;
   $27 = $this$idx2$val$i$i$i;
   $53 = $19;
  }
  $26 = $27;
  $28 = $$idx1$val$i$i$i$i$i - $26 | 0;
  if ($28 >> 2 >>> 0 < 536870911) {
   $34 = $28 >> 1;
   $36 = $34 >>> 0 < $22 >>> 0 ? $22 : $34;
   $38 = (HEAP32[$11 >> 2] | 0) - $26 | 0;
   $39 = $38 >> 2;
   if (!$36) {
    $$0$i8$i$i$i = 0;
    $44 = 0;
    $45 = $39;
    $51 = $38;
   } else {
    $$0$i7$i$i$i = $36;
    $110 = $39;
    $111 = $38;
    label = 8;
   }
  } else {
   $32 = (HEAP32[$11 >> 2] | 0) - $26 | 0;
   $$0$i7$i$i$i = 1073741823;
   $110 = $32 >> 2;
   $111 = $32;
   label = 8;
  }
  if ((label | 0) == 8) {
   $$0$i8$i$i$i = $$0$i7$i$i$i;
   $44 = __Znwj($$0$i7$i$i$i << 2) | 0;
   $45 = $110;
   $51 = $111;
  }
  HEAP32[$44 + ($45 << 2) >> 2] = $10;
  $48 = $44 + ($45 + 1 << 2) | 0;
  _memcpy($44 | 0, $27 | 0, $51 | 0) | 0;
  HEAP32[$9 >> 2] = $44;
  HEAP32[$11 >> 2] = $48;
  HEAP32[$13 >> 2] = $44 + ($$0$i8$i$i$i << 2);
  if (!$53) {
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = $48;
  } else {
   __ZdlPv($53);
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = HEAP32[$11 >> 2] | 0;
  }
 }
 $55 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$55 >> 0] | 0;
 $61 = $$idx1$val$i - (HEAP32[$$idx$pre$phi$iZZ2D >> 2] | 0) >> 2;
 $62 = $this + 36 | 0;
 HEAP32[$62 >> 2] = $61;
 if ($61 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) return $0 | 0;
 $68 = $this + 32 | 0;
 if (!(+($61 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$68 >> 2] | 0) >>> 0))) return $0 | 0;
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 56 | 0, $this);
 if (HEAP32[$this + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 48 >> 2] | 0);
 $81 = (HEAP8[$55 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$55 >> 0] = $81;
 $$idx6$i = $this + 20 | 0;
 $$idx6$val11$i = HEAP32[$$idx6$i >> 2] | 0;
 $$idx7$val12$i = HEAP32[$11 >> 2] | 0;
 L24 : do if (($$idx7$val12$i | 0) == ($$idx6$val11$i | 0)) $$lcssa$i = 0; else {
  $$idx5$val19$i = $$idx7$val12$i;
  $$idx6$val14$i = $$idx6$val11$i;
  $88 = $81;
  $i$013$i = 0;
  while (1) {
   $84 = HEAP32[$$idx6$val14$i + ($i$013$i << 2) >> 2] | 0;
   if ((HEAP8[$84 + 4 >> 0] | 0) == $88 << 24 >> 24) {
    $$idx6$val$i = $$idx6$val14$i;
    $$idx7$val$i = $$idx5$val19$i;
    $i$1$i = $i$013$i;
   } else {
    if (!$84) {
     $$idx4$val$i = $$idx6$val14$i;
     $$idx5$val$i = $$idx5$val19$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$84 >> 2] | 0) + 4 >> 2] & 255]($84);
     $$idx4$val$i = HEAP32[$$idx6$i >> 2] | 0;
     $$idx5$val$i = HEAP32[$11 >> 2] | 0;
    }
    $97 = ($$idx5$val$i - $$idx4$val$i >> 2) + -1 | 0;
    if (($i$013$i | 0) == ($97 | 0)) {
     $$idx6$val$pre$i = $$idx4$val$i;
     $102 = $$idx5$val$i;
    } else {
     HEAP32[$$idx4$val$i + ($i$013$i << 2) >> 2] = HEAP32[$$idx4$val$i + ($97 << 2) >> 2];
     $$idx6$val$pre$i = HEAP32[$$idx6$i >> 2] | 0;
     $102 = HEAP32[$11 >> 2] | 0;
    }
    $scevgep4$i$i$i$i = $102 + -4 | 0;
    HEAP32[$11 >> 2] = $scevgep4$i$i$i$i;
    $$idx6$val$i = $$idx6$val$pre$i;
    $$idx7$val$i = $scevgep4$i$i$i$i;
    $i$1$i = $i$013$i + -1 | 0;
   }
   $104 = $i$1$i + 1 | 0;
   $108 = $$idx7$val$i - $$idx6$val$i >> 2;
   if ($104 >>> 0 >= $108 >>> 0) {
    $$lcssa$i = $108;
    break L24;
   }
   $$idx5$val19$i = $$idx7$val$i;
   $$idx6$val14$i = $$idx6$val$i;
   $88 = HEAP8[$55 >> 0] | 0;
   $i$013$i = $104;
  }
 } while (0);
 HEAP32[$62 >> 2] = $$lcssa$i;
 HEAP32[$68 >> 2] = $$lcssa$i;
 return $0 | 0;
}

function __ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($this, $__b, $__e, $__intl, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__intl = $__intl | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$011 = 0, $$0110 = 0, $$012 = 0, $$019 = 0, $$byval_copy = 0, $$pre = 0, $0 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $62 = 0, $63 = 0, $66 = 0, $67 = 0, $7 = 0, $78 = 0, $79 = 0, $8 = 0, $84 = 0, $85 = 0, $88 = 0, $90 = 0, $92 = 0, $93 = 0, $96 = 0, $97 = 0, $99 = 0, $__loc = 0, $__neg = 0, $__w$0$lcssa = 0, $__w$013 = 0, $__wb = 0, $__wbuf = 0, $__wn = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp;
 $__wbuf = sp + 28 | 0;
 $__wb = sp + 8 | 0;
 $__wn = sp + 24 | 0;
 $__loc = sp + 20 | 0;
 $__neg = sp + 128 | 0;
 $0 = sp + 16 | 0;
 HEAP32[$__wb >> 2] = $__wbuf;
 $2 = $__wb + 4 | 0;
 HEAP32[$2 >> 2] = 187;
 $3 = $__wbuf + 100 | 0;
 __THREW__ = 0;
 $4 = invoke_ii(68, $__iob | 0) | 0;
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  HEAP32[$__wb >> 2] = 0;
  $$011 = $34;
  $$019 = tempRet0;
  $96 = $__wbuf;
  label = 36;
 } else {
  HEAP32[$__loc >> 2] = $4;
  __THREW__ = 0;
  $7 = invoke_iii(22, $__loc | 0, 11164) | 0;
  $8 = __THREW__;
  __THREW__ = 0;
  L4 : do if (!($8 & 1)) {
   HEAP8[$__neg >> 0] = 0;
   $10 = HEAP32[$__e >> 2] | 0;
   HEAP32[$0 >> 2] = $10;
   $12 = HEAP32[$__iob + 4 >> 2] | 0;
   $13 = $10;
   __THREW__ = 0;
   HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
   $14 = invoke_iiiiiiiiiiii(1, $__b | 0, $$byval_copy | 0, $__intl | 0, $__loc | 0, $12 | 0, $__err | 0, $__neg | 0, $7 | 0, $__wb | 0, $__wn | 0, $3 | 0) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    if ($14) {
     if (!(HEAP8[$__v >> 0] & 1)) {
      HEAP8[$__v + 1 >> 0] = 0;
      HEAP8[$__v >> 0] = 0;
     } else {
      HEAP8[HEAP32[$__v + 8 >> 2] >> 0] = 0;
      HEAP32[$__v + 4 >> 2] = 0;
     }
     if (HEAP8[$__neg >> 0] | 0) {
      __THREW__ = 0;
      $29 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 45) | 0;
      $30 = __THREW__;
      __THREW__ = 0;
      if ($30 & 1) break;
      __THREW__ = 0;
      invoke_vii(44, $__v | 0, $29 | 0);
      $32 = __THREW__;
      __THREW__ = 0;
      if ($32 & 1) break;
     }
     __THREW__ = 0;
     $39 = invoke_iii(HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] | 0, $7 | 0, 48) | 0;
     $40 = __THREW__;
     __THREW__ = 0;
     if ($40 & 1) break;
     $42 = HEAP32[$__wb >> 2] | 0;
     $43 = HEAP32[$__wn >> 2] | 0;
     $44 = $43 + -1 | 0;
     L18 : do if ($42 >>> 0 < $44 >>> 0) {
      $__w$013 = $42;
      while (1) {
       if ((HEAP8[$__w$013 >> 0] | 0) != $39 << 24 >> 24) {
        $__w$0$lcssa = $__w$013;
        break L18;
       }
       $48 = $__w$013 + 1 | 0;
       if ($48 >>> 0 < $44 >>> 0) $__w$013 = $48; else {
        $__w$0$lcssa = $48;
        break;
       }
      }
     } else $__w$0$lcssa = $42; while (0);
     __THREW__ = 0;
     invoke_iiii(43, $__v | 0, $__w$0$lcssa | 0, $43 | 0) | 0;
     $50 = __THREW__;
     __THREW__ = 0;
     if ($50 & 1) break;
    }
    $52 = HEAP32[$__b >> 2] | 0;
    do if (!$52) $67 = 0; else if ((HEAP32[$52 + 12 >> 2] | 0) == (HEAP32[$52 + 16 >> 2] | 0)) {
     __THREW__ = 0;
     $62 = invoke_ii(HEAP32[(HEAP32[$52 >> 2] | 0) + 36 >> 2] | 0, $52 | 0) | 0;
     $63 = __THREW__;
     __THREW__ = 0;
     if ($63 & 1) break L4;
     if (($62 | 0) == -1) {
      HEAP32[$__b >> 2] = 0;
      $67 = 0;
      break;
     } else {
      $67 = HEAP32[$__b >> 2] | 0;
      break;
     }
    } else $67 = $52; while (0);
    $66 = ($67 | 0) == 0;
    do if (!$10) label = 29; else {
     if ((HEAP32[$13 + 12 >> 2] | 0) == (HEAP32[$13 + 16 >> 2] | 0)) {
      __THREW__ = 0;
      $78 = invoke_ii(HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] | 0, $13 | 0) | 0;
      $79 = __THREW__;
      __THREW__ = 0;
      if ($79 & 1) break L4;
      if (($78 | 0) == -1) {
       HEAP32[$__e >> 2] = 0;
       label = 29;
       break;
      }
     }
     if (!$66) label = 30;
    } while (0);
    if ((label | 0) == 29) if ($66) label = 30;
    if ((label | 0) == 30) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
    $84 = HEAP32[$__b >> 2] | 0;
    __ZNSt3__114__shared_count16__release_sharedEv($4) | 0;
    $85 = HEAP32[$__wb >> 2] | 0;
    HEAP32[$__wb >> 2] = 0;
    if ($85) {
     __THREW__ = 0;
     invoke_vi(HEAP32[$2 >> 2] | 0, $85 | 0);
     $88 = __THREW__;
     __THREW__ = 0;
     if ($88 & 1) {
      $90 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($90);
     }
    }
    STACKTOP = sp;
    return $84 | 0;
   }
  } while (0);
  $92 = ___cxa_find_matching_catch() | 0;
  $93 = tempRet0;
  __ZNSt3__114__shared_count16__release_sharedEv($4) | 0;
  $$pre = HEAP32[$__wb >> 2] | 0;
  HEAP32[$__wb >> 2] = 0;
  if (!$$pre) {
   $$0110 = $93;
   $$012 = $92;
  } else {
   $$011 = $92;
   $$019 = $93;
   $96 = $$pre;
   label = 36;
  }
 }
 if ((label | 0) == 36) {
  __THREW__ = 0;
  invoke_vi(HEAP32[$2 >> 2] | 0, $96 | 0);
  $97 = __THREW__;
  __THREW__ = 0;
  if ($97 & 1) {
   $99 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($99);
  } else {
   $$0110 = $$019;
   $$012 = $$011;
  }
 }
 ___resumeException($$012 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierDniDnEEEPT_DpT0_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $$0$i7$i$i$i = 0, $$0$i8$i$i$i = 0, $$idx$pre$phi$iZZ2D = 0, $$idx$val$i$i$pre$i$i$i = 0, $$idx1$val$i = 0, $$idx1$val$i$i$i$i$i = 0, $$idx4$val$i = 0, $$idx5$val$i = 0, $$idx5$val19$i = 0, $$idx6$i = 0, $$idx6$val$i = 0, $$idx6$val$pre$i = 0, $$idx6$val11$i = 0, $$idx6$val14$i = 0, $$idx7$val$i = 0, $$idx7$val12$i = 0, $$lcssa$i = 0, $0 = 0, $10 = 0, $102 = 0, $104 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $27 = 0, $28 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $48 = 0, $51 = 0, $53 = 0, $55 = 0, $61 = 0, $62 = 0, $68 = 0, $81 = 0, $84 = 0, $88 = 0, $9 = 0, $97 = 0, $i$013$i = 0, $i$1$i = 0, $scevgep4$i$i$i$i = 0, $this$idx2$val$i$i$i = 0, label = 0;
 $0 = __Znwj(56) | 0;
 HEAP32[$0 >> 2] = 3592;
 HEAP8[$0 + 5 >> 0] = 0;
 HEAP32[$0 + 24 >> 2] = $args;
 $4 = $0 + 32 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 36 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = $4;
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$0 + 44 >> 2] = 0;
 HEAP32[$0 + 48 >> 2] = 0;
 $9 = $this + 20 | 0;
 $10 = $0;
 $11 = $this + 24 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = $this + 28 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if ($12 >>> 0 < $14 >>> 0) {
  HEAP32[$12 >> 2] = $10;
  $17 = (HEAP32[$11 >> 2] | 0) + 4 | 0;
  HEAP32[$11 >> 2] = $17;
  $$idx$pre$phi$iZZ2D = $9;
  $$idx1$val$i = $17;
 } else {
  $this$idx2$val$i$i$i = HEAP32[$9 >> 2] | 0;
  $19 = $this$idx2$val$i$i$i;
  $22 = ($12 - $19 >> 2) + 1 | 0;
  if ($22 >>> 0 > 1073741823) {
   __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($9);
   $$idx$val$i$i$pre$i$i$i = HEAP32[$9 >> 2] | 0;
   $$idx1$val$i$i$i$i$i = HEAP32[$13 >> 2] | 0;
   $27 = $$idx$val$i$i$pre$i$i$i;
   $53 = $$idx$val$i$i$pre$i$i$i;
  } else {
   $$idx1$val$i$i$i$i$i = $14;
   $27 = $this$idx2$val$i$i$i;
   $53 = $19;
  }
  $26 = $27;
  $28 = $$idx1$val$i$i$i$i$i - $26 | 0;
  if ($28 >> 2 >>> 0 < 536870911) {
   $34 = $28 >> 1;
   $36 = $34 >>> 0 < $22 >>> 0 ? $22 : $34;
   $38 = (HEAP32[$11 >> 2] | 0) - $26 | 0;
   $39 = $38 >> 2;
   if (!$36) {
    $$0$i8$i$i$i = 0;
    $44 = 0;
    $45 = $39;
    $51 = $38;
   } else {
    $$0$i7$i$i$i = $36;
    $110 = $39;
    $111 = $38;
    label = 8;
   }
  } else {
   $32 = (HEAP32[$11 >> 2] | 0) - $26 | 0;
   $$0$i7$i$i$i = 1073741823;
   $110 = $32 >> 2;
   $111 = $32;
   label = 8;
  }
  if ((label | 0) == 8) {
   $$0$i8$i$i$i = $$0$i7$i$i$i;
   $44 = __Znwj($$0$i7$i$i$i << 2) | 0;
   $45 = $110;
   $51 = $111;
  }
  HEAP32[$44 + ($45 << 2) >> 2] = $10;
  $48 = $44 + ($45 + 1 << 2) | 0;
  _memcpy($44 | 0, $27 | 0, $51 | 0) | 0;
  HEAP32[$9 >> 2] = $44;
  HEAP32[$11 >> 2] = $48;
  HEAP32[$13 >> 2] = $44 + ($$0$i8$i$i$i << 2);
  if (!$53) {
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = $48;
  } else {
   __ZdlPv($53);
   $$idx$pre$phi$iZZ2D = $9;
   $$idx1$val$i = HEAP32[$11 >> 2] | 0;
  }
 }
 $55 = $this + 16 | 0;
 HEAP8[$0 + 4 >> 0] = HEAP8[$55 >> 0] | 0;
 $61 = $$idx1$val$i - (HEAP32[$$idx$pre$phi$iZZ2D >> 2] | 0) >> 2;
 $62 = $this + 36 | 0;
 HEAP32[$62 >> 2] = $61;
 if ($61 >>> 0 <= (HEAP32[$this >> 2] | 0) >>> 0) return $0 | 0;
 $68 = $this + 32 | 0;
 if (!(+($61 >>> 0) > +HEAPF64[$this + 8 >> 3] * +((HEAP32[$68 >> 2] | 0) >>> 0))) return $0 | 0;
 __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, $0);
 __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this + 56 | 0, $this);
 if (HEAP32[$this + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($this, HEAP32[$this + 48 >> 2] | 0);
 $81 = (HEAP8[$55 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$55 >> 0] = $81;
 $$idx6$i = $this + 20 | 0;
 $$idx6$val11$i = HEAP32[$$idx6$i >> 2] | 0;
 $$idx7$val12$i = HEAP32[$11 >> 2] | 0;
 L24 : do if (($$idx7$val12$i | 0) == ($$idx6$val11$i | 0)) $$lcssa$i = 0; else {
  $$idx5$val19$i = $$idx7$val12$i;
  $$idx6$val14$i = $$idx6$val11$i;
  $88 = $81;
  $i$013$i = 0;
  while (1) {
   $84 = HEAP32[$$idx6$val14$i + ($i$013$i << 2) >> 2] | 0;
   if ((HEAP8[$84 + 4 >> 0] | 0) == $88 << 24 >> 24) {
    $$idx6$val$i = $$idx6$val14$i;
    $$idx7$val$i = $$idx5$val19$i;
    $i$1$i = $i$013$i;
   } else {
    if (!$84) {
     $$idx4$val$i = $$idx6$val14$i;
     $$idx5$val$i = $$idx5$val19$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$84 >> 2] | 0) + 4 >> 2] & 255]($84);
     $$idx4$val$i = HEAP32[$$idx6$i >> 2] | 0;
     $$idx5$val$i = HEAP32[$11 >> 2] | 0;
    }
    $97 = ($$idx5$val$i - $$idx4$val$i >> 2) + -1 | 0;
    if (($i$013$i | 0) == ($97 | 0)) {
     $$idx6$val$pre$i = $$idx4$val$i;
     $102 = $$idx5$val$i;
    } else {
     HEAP32[$$idx4$val$i + ($i$013$i << 2) >> 2] = HEAP32[$$idx4$val$i + ($97 << 2) >> 2];
     $$idx6$val$pre$i = HEAP32[$$idx6$i >> 2] | 0;
     $102 = HEAP32[$11 >> 2] | 0;
    }
    $scevgep4$i$i$i$i = $102 + -4 | 0;
    HEAP32[$11 >> 2] = $scevgep4$i$i$i$i;
    $$idx6$val$i = $$idx6$val$pre$i;
    $$idx7$val$i = $scevgep4$i$i$i$i;
    $i$1$i = $i$013$i + -1 | 0;
   }
   $104 = $i$1$i + 1 | 0;
   $108 = $$idx7$val$i - $$idx6$val$i >> 2;
   if ($104 >>> 0 >= $108 >>> 0) {
    $$lcssa$i = $108;
    break L24;
   }
   $$idx5$val19$i = $$idx7$val$i;
   $$idx6$val14$i = $$idx6$val$i;
   $88 = HEAP8[$55 >> 0] | 0;
   $i$013$i = $104;
  }
 } while (0);
 HEAP32[$62 >> 2] = $$lcssa$i;
 HEAP32[$68 >> 2] = $$lcssa$i;
 return $0 | 0;
}

function __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa85 = 0, $$lcssa86 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $77 = 0, $79 = 0, $81 = 0, $93 = 0, $96 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$150 = 0, $frm_nxt$2 = 0, $nchar16_t$049 = 0, $nchar16_t$1 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 L7 : do if (($mx | 0) != 0 & $frm_nxt$1$ph >>> 0 < $frm_end >>> 0) {
  $frm_nxt$150 = $frm_nxt$1$ph;
  $nchar16_t$049 = 0;
  L8 : while (1) {
   $16 = HEAP8[$frm_nxt$150 >> 0] | 0;
   $17 = $16 & 255;
   if ($17 >>> 0 > $Maxcode >>> 0) {
    $frm_nxt$1$lcssa = $frm_nxt$150;
    label = 42;
    break L7;
   }
   do if ($16 << 24 >> 24 > -1) {
    $frm_nxt$2 = $frm_nxt$150 + 1 | 0;
    $nchar16_t$1 = $nchar16_t$049;
   } else {
    if (($16 & 255) < 194) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    if (($16 & 255) < 224) {
     if (($$pre - $frm_nxt$150 | 0) < 2) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $28 = HEAPU8[$frm_nxt$150 + 1 >> 0] | 0;
     if (($28 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$150 + 2 | 0;
     $nchar16_t$1 = $nchar16_t$049;
     break;
    }
    if (($16 & 255) < 240) {
     $38 = $frm_nxt$150;
     if (($$pre - $38 | 0) < 3) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $42 = HEAP8[$frm_nxt$150 + 1 >> 0] | 0;
     $44 = HEAP8[$frm_nxt$150 + 2 >> 0] | 0;
     switch ($17 | 0) {
     case 224:
      {
       if (($42 & -32) << 24 >> 24 != -96) {
        $$lcssa85 = $38;
        label = 20;
        break L8;
       }
       break;
      }
     case 237:
      {
       if (($42 & -32) << 24 >> 24 != -128) {
        $$lcssa84 = $38;
        label = 22;
        break L8;
       }
       break;
      }
     default:
      if (($42 & -64) << 24 >> 24 != -128) {
       $$lcssa86 = $38;
       label = 24;
       break L8;
      }
     }
     $57 = $44 & 255;
     if (($57 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$150;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$150 + 3 | 0;
     $nchar16_t$1 = $nchar16_t$049;
     break;
    }
    if (($16 & 255) >= 245) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $71 = $frm_nxt$150;
    if (($mx - $nchar16_t$049 | 0) >>> 0 < 2 | ($$pre - $71 | 0) < 4) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $77 = HEAP8[$frm_nxt$150 + 1 >> 0] | 0;
    $79 = HEAP8[$frm_nxt$150 + 2 >> 0] | 0;
    $81 = HEAP8[$frm_nxt$150 + 3 >> 0] | 0;
    switch ($17 | 0) {
    case 240:
     {
      if (($77 + 112 & 255) >= 48) {
       $$lcssa82 = $71;
       label = 32;
       break L8;
      }
      break;
     }
    case 244:
     {
      if (($77 & -16) << 24 >> 24 != -128) {
       $$lcssa = $71;
       label = 34;
       break L8;
      }
      break;
     }
    default:
     if (($77 & -64) << 24 >> 24 != -128) {
      $$lcssa83 = $71;
      label = 36;
      break L8;
     }
    }
    $93 = $79 & 255;
    if (($93 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $96 = $81 & 255;
    if (($96 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    if ((($77 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $93 << 6 & 4032 | $96 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$150;
     label = 42;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$150 + 4 | 0;
    $nchar16_t$1 = $nchar16_t$049 + 1 | 0;
   } while (0);
   $nchar16_t$049 = $nchar16_t$1 + 1 | 0;
   if (!($nchar16_t$049 >>> 0 < $mx >>> 0 & $frm_nxt$2 >>> 0 < $frm_end >>> 0)) {
    $frm_nxt$1$lcssa = $frm_nxt$2;
    label = 42;
    break L7;
   } else $frm_nxt$150 = $frm_nxt$2;
  }
  if ((label | 0) == 20) {
   $$0 = $$lcssa85 - $frm | 0;
   break;
  } else if ((label | 0) == 22) {
   $$0 = $$lcssa84 - $frm | 0;
   break;
  } else if ((label | 0) == 24) {
   $$0 = $$lcssa86 - $frm | 0;
   break;
  } else if ((label | 0) == 32) {
   $$0 = $$lcssa82 - $frm | 0;
   break;
  } else if ((label | 0) == 34) {
   $$0 = $$lcssa - $frm | 0;
   break;
  } else if ((label | 0) == 36) {
   $$0 = $$lcssa83 - $frm | 0;
   break;
  }
 } else {
  $frm_nxt$1$lcssa = $frm_nxt$1$ph;
  label = 42;
 } while (0);
 if ((label | 0) == 42) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $16 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $5 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $__nd$0$be$in$i = 0, $__nd$0$be$in$i3 = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa64 = 0, $__nd$0$i$lcssa65 = 0, $__nd$0$i2 = 0, $__nd$0$i2$lcssa = 0, $__nd$0$i2$lcssa61 = 0, $__nd$0$i2$lcssa62 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 $3 = $1;
 if (($1 | 0) != ($0 | 0)) {
  $5 = HEAP32[$__v >> 2] | 0;
  $6 = HEAP32[$1 + 16 >> 2] | 0;
  if ($5 >>> 0 >= $6 >>> 0) {
   if ($6 >>> 0 >= $5 >>> 0) {
    HEAP32[$__parent >> 2] = $3;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $41 = $1 + 4 | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   $43 = ($42 | 0) == 0;
   if ($43) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $47 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$47 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $47;
      break;
     } else $$0$i$i$i$i$i = $47;
    }
   } else {
    $$0$i$i$i$i$i$i = $42;
    while (1) {
     $44 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$44) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $44;
    }
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($5 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $54 = HEAP32[$0 >> 2] | 0;
    if (!$54) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     return $$0 | 0;
    } else $__nd$0$i = $54;
    while (1) {
     $57 = HEAP32[$__nd$0$i + 16 >> 2] | 0;
     if ($5 >>> 0 < $57 >>> 0) {
      $59 = HEAP32[$__nd$0$i >> 2] | 0;
      if (!$59) {
       $$lcssa67 = $__nd$0$i;
       $__nd$0$i$lcssa65 = $__nd$0$i;
       label = 33;
       break;
      } else $__nd$0$be$in$i = $59;
     } else {
      if ($57 >>> 0 >= $5 >>> 0) {
       $__nd$0$i$lcssa = $__nd$0$i;
       label = 38;
       break;
      }
      $62 = $__nd$0$i + 4 | 0;
      $63 = HEAP32[$62 >> 2] | 0;
      if (!$63) {
       $$lcssa66 = $62;
       $__nd$0$i$lcssa64 = $__nd$0$i;
       label = 37;
       break;
      } else $__nd$0$be$in$i = $63;
     }
     $__nd$0$i = $__nd$0$be$in$i;
    }
    if ((label | 0) == 33) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa65;
     $$0 = $$lcssa67;
     return $$0 | 0;
    } else if ((label | 0) == 37) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa64;
     $$0 = $$lcssa66;
     return $$0 | 0;
    } else if ((label | 0) == 38) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
     $$0 = $__parent;
     return $$0 | 0;
    }
   }
   if ($43) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $41;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $27 = $3; else {
  $10 = HEAP32[$1 >> 2] | 0;
  if (!$10) {
   $$0$i$i = $1;
   while (1) {
    $16 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$16 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $16; else {
     $$01$i$i = $16;
     break;
    }
   }
  } else {
   $$0$i$i$i = $10;
   while (1) {
    $13 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$13) {
     $$01$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $13;
   }
  }
  $22 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $22 >>> 0) $27 = $$01$i$i; else {
   $29 = HEAP32[$0 >> 2] | 0;
   if (!$29) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    return $$0 | 0;
   } else $__nd$0$i2 = $29;
   while (1) {
    $32 = HEAP32[$__nd$0$i2 + 16 >> 2] | 0;
    if ($22 >>> 0 < $32 >>> 0) {
     $34 = HEAP32[$__nd$0$i2 >> 2] | 0;
     if (!$34) {
      $$lcssa63 = $__nd$0$i2;
      $__nd$0$i2$lcssa62 = $__nd$0$i2;
      label = 14;
      break;
     } else $__nd$0$be$in$i3 = $34;
    } else {
     if ($32 >>> 0 >= $22 >>> 0) {
      $__nd$0$i2$lcssa = $__nd$0$i2;
      label = 19;
      break;
     }
     $37 = $__nd$0$i2 + 4 | 0;
     $38 = HEAP32[$37 >> 2] | 0;
     if (!$38) {
      $$lcssa = $37;
      $__nd$0$i2$lcssa61 = $__nd$0$i2;
      label = 18;
      break;
     } else $__nd$0$be$in$i3 = $38;
    }
    $__nd$0$i2 = $__nd$0$be$in$i3;
   }
   if ((label | 0) == 14) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa62;
    $$0 = $$lcssa63;
    return $$0 | 0;
   } else if ((label | 0) == 18) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa61;
    $$0 = $$lcssa;
    return $$0 | 0;
   } else if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa;
    $$0 = $__parent;
    return $$0 | 0;
   }
  }
 }
 if (!(HEAP32[$1 >> 2] | 0)) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  $26 = $27;
  HEAP32[$__parent >> 2] = $26;
  $$0 = $26 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb($agg$result, $obj_) {
 $agg$result = $agg$result | 0;
 $obj_ = $obj_ | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i2 = 0, $$01 = 0, $$01$i$i$i = 0, $$lcssa = 0, $$lcssa24 = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $47 = 0, $51 = 0, $55 = 0, $57 = 0, $6 = 0, $60 = 0, $64 = 0, $7 = 0, $9 = 0, $__nd$0$be$in$i$i$i = 0, $__nd$0$i$i$i = 0, $__nd$0$i$i$i$lcssa = 0, $__nd$0$i$i$i$lcssa22 = 0, $__nd$0$i$i$i$lcssa23 = 0, $__parent$i$i = 0, $counter = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__parent$i$i = sp + 16 | 0;
 $counter = sp + 12 | 0;
 $0 = sp;
 HEAP32[$counter >> 2] = 0;
 $1 = $agg$result + 4 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $agg$result + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $agg$result + 4 | 0;
 HEAP32[$agg$result >> 2] = $3;
 __THREW__ = 0;
 invoke_viiii(18, $0 | 0, $obj_ | 0, $counter | 0, 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  $$0 = $11;
  $$01 = tempRet0;
  $$pre$phiZ2D = $3;
  $64 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $64);
  ___resumeException($$0 | 0);
 }
 $6 = HEAP32[$0 >> 2] | 0;
 $7 = $0 + 4 | 0;
 if (($6 | 0) == ($7 | 0)) {
  $10 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $10);
  STACKTOP = sp;
  return;
 }
 $9 = $3;
 $17 = $6;
 while (1) {
  if ((HEAP32[$17 + 20 >> 2] | 0) != 1) {
   $20 = $17 + 16 | 0;
   $21 = HEAP32[$3 >> 2] | 0;
   do if (!$21) {
    HEAP32[$__parent$i$i >> 2] = $3;
    $$0$i$i$i2 = $3;
    $45 = $9;
   } else {
    $23 = HEAP32[$20 >> 2] | 0;
    $__nd$0$i$i$i = $21;
    while (1) {
     $25 = HEAP32[$__nd$0$i$i$i + 16 >> 2] | 0;
     if ($23 >>> 0 < $25 >>> 0) {
      $27 = HEAP32[$__nd$0$i$i$i >> 2] | 0;
      if (!$27) {
       $$lcssa24 = $__nd$0$i$i$i;
       $__nd$0$i$i$i$lcssa23 = $__nd$0$i$i$i;
       label = 12;
       break;
      } else $__nd$0$be$in$i$i$i = $27;
     } else {
      if ($25 >>> 0 >= $23 >>> 0) {
       $__nd$0$i$i$i$lcssa = $__nd$0$i$i$i;
       label = 17;
       break;
      }
      $31 = $__nd$0$i$i$i + 4 | 0;
      $32 = HEAP32[$31 >> 2] | 0;
      if (!$32) {
       $$lcssa = $31;
       $__nd$0$i$i$i$lcssa22 = $__nd$0$i$i$i;
       label = 16;
       break;
      } else $__nd$0$be$in$i$i$i = $32;
     }
     $__nd$0$i$i$i = $__nd$0$be$in$i$i$i;
    }
    if ((label | 0) == 12) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa23;
     $$0$i$i$i2 = $$lcssa24;
     $45 = $__nd$0$i$i$i$lcssa23;
     break;
    } else if ((label | 0) == 16) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa22;
     $$0$i$i$i2 = $$lcssa;
     $45 = $__nd$0$i$i$i$lcssa22;
     break;
    } else if ((label | 0) == 17) {
     label = 0;
     HEAP32[$__parent$i$i >> 2] = $__nd$0$i$i$i$lcssa;
     $$0$i$i$i2 = $__parent$i$i;
     $45 = $__nd$0$i$i$i$lcssa;
     break;
    }
   } while (0);
   if (!(HEAP32[$$0$i$i$i2 >> 2] | 0)) {
    __THREW__ = 0;
    $38 = invoke_ii(67, 20) | 0;
    $39 = __THREW__;
    __THREW__ = 0;
    if ($39 & 1) break;
    HEAP32[$38 + 16 >> 2] = HEAP32[$20 >> 2];
    HEAP32[$38 >> 2] = 0;
    HEAP32[$38 + 4 >> 2] = 0;
    HEAP32[$38 + 8 >> 2] = $45;
    HEAP32[$$0$i$i$i2 >> 2] = $38;
    $47 = HEAP32[HEAP32[$agg$result >> 2] >> 2] | 0;
    if (!$47) $51 = $38; else {
     HEAP32[$agg$result >> 2] = $47;
     $51 = HEAP32[$$0$i$i$i2 >> 2] | 0;
    }
    __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$1 >> 2] | 0, $51);
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
   }
  }
  $55 = HEAP32[$17 + 4 >> 2] | 0;
  if (!$55) {
   $$0$i$i$i = $17;
   while (1) {
    $60 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$60 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$01$i$i$i = $60;
     break;
    } else $$0$i$i$i = $60;
   }
  } else {
   $$0$i$i$i$i = $55;
   while (1) {
    $57 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$57) {
     $$01$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $57;
   }
  }
  if (($$01$i$i$i | 0) == ($7 | 0)) {
   label = 4;
   break;
  } else $17 = $$01$i$i$i;
 }
 if ((label | 0) == 4) {
  $10 = HEAP32[$7 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, $10);
  STACKTOP = sp;
  return;
 }
 $13 = ___cxa_find_matching_catch() | 0;
 $14 = tempRet0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($0, HEAP32[$7 >> 2] | 0);
 $$0 = $13;
 $$01 = $14;
 $$pre$phiZ2D = $3;
 $64 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($agg$result, $64);
 ___resumeException($$0 | 0);
}

function __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$01$i = 0, $$lcssa = 0, $$pre$phi9Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $50 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $59 = 0, $62 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $77 = 0, $79 = 0, $82 = 0, $84 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, dest = 0, src = 0, stop = 0, $$01$i$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $__v + 4 | 0;
 if (($2 | 0) == ($0 | 0)) {
  $$pre$phi9Z2D = $3;
  $$pre$phiZ2D = $this;
  $87 = HEAP32[$3 >> 2] | 0;
  $88 = $0;
  HEAP32[$$pre$phiZ2D >> 2] = $87;
  HEAP32[$$pre$phi9Z2D >> 2] = $88;
  $89 = $__v + 8 | 0;
  $90 = HEAP32[$1 >> 2] | 0;
  $91 = HEAP32[$89 >> 2] | 0;
  HEAP32[$1 >> 2] = $91;
  HEAP32[$89 >> 2] = $90;
  $92 = $this + 8 | 0;
  $93 = $__v + 12 | 0;
  $94 = HEAP32[$92 >> 2] | 0;
  $95 = HEAP32[$93 >> 2] | 0;
  HEAP32[$92 >> 2] = $95;
  HEAP32[$93 >> 2] = $94;
  $96 = HEAP32[$$pre$phi9Z2D >> 2] | 0;
  HEAP32[$__v >> 2] = $96;
  return;
 }
 $$01$i = $2;
 $7 = HEAP32[$3 >> 2] | 0;
 while (1) {
  $$01$i$looptemp = $$01$i;
  $$01$i = $$01$i + -144 | 0;
  $9 = $$01$i;
  $14 = HEAP32[$9 + 4 >> 2] | 0;
  $15 = $7 + -144 | 0;
  HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
  HEAP32[$15 + 4 >> 2] = $14;
  $19 = $7 + -136 | 0;
  $20 = $$01$i$looptemp + -136 | 0;
  HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
  HEAP32[$19 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
  HEAP32[$19 + 8 >> 2] = HEAP32[$20 + 8 >> 2];
  HEAP32[$20 >> 2] = 0;
  HEAP32[$20 + 4 >> 2] = 0;
  HEAP32[$20 + 8 >> 2] = 0;
  $21 = $7 + -124 | 0;
  $22 = $$01$i$looptemp + -124 | 0;
  HEAP32[$21 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$21 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
  HEAP32[$21 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
  HEAP32[$21 + 12 >> 2] = HEAP32[$22 + 12 >> 2];
  dest = $7 + -108 | 0;
  src = $$01$i$looptemp + -108 | 0;
  stop = dest + 40 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $25 = $7 + -68 | 0;
  $26 = $$01$i$looptemp + -68 | 0;
  HEAP32[$25 >> 2] = HEAP32[$26 >> 2];
  $30 = HEAP32[$$01$i$looptemp + -64 >> 2] | 0;
  HEAP32[$7 + -64 >> 2] = $30;
  $31 = $$01$i$looptemp + -60 | 0;
  $33 = HEAP32[$31 >> 2] | 0;
  HEAP32[$7 + -60 >> 2] = $33;
  $35 = $7 + -64 | 0;
  if (!$33) HEAP32[$25 >> 2] = $35; else {
   HEAP32[$30 + 8 >> 2] = $35;
   $38 = $$01$i$looptemp + -64 | 0;
   HEAP32[$26 >> 2] = $38;
   HEAP32[$38 >> 2] = 0;
   HEAP32[$31 >> 2] = 0;
  }
  $39 = $7 + -56 | 0;
  $40 = $$01$i$looptemp + -56 | 0;
  HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
  $42 = $7 + -52 | 0;
  $43 = $$01$i$looptemp + -52 | 0;
  HEAP32[$42 >> 2] = HEAP32[$43 >> 2];
  $47 = HEAP32[$$01$i$looptemp + -48 >> 2] | 0;
  HEAP32[$7 + -48 >> 2] = $47;
  $48 = $$01$i$looptemp + -44 | 0;
  $50 = HEAP32[$48 >> 2] | 0;
  HEAP32[$7 + -44 >> 2] = $50;
  $52 = $7 + -48 | 0;
  if (!$50) HEAP32[$42 >> 2] = $52; else {
   HEAP32[$47 + 8 >> 2] = $52;
   $55 = $$01$i$looptemp + -48 | 0;
   HEAP32[$43 >> 2] = $55;
   HEAP32[$55 >> 2] = 0;
   HEAP32[$48 >> 2] = 0;
  }
  HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
  $57 = $7 + -40 | 0;
  $58 = $$01$i$looptemp + -40 | 0;
  HEAP32[$57 >> 2] = 0;
  $59 = $7 + -36 | 0;
  HEAP32[$59 >> 2] = 0;
  HEAP32[$7 + -32 >> 2] = 0;
  HEAP32[$57 >> 2] = HEAP32[$58 >> 2];
  $62 = $$01$i$looptemp + -36 | 0;
  HEAP32[$59 >> 2] = HEAP32[$62 >> 2];
  $64 = $$01$i$looptemp + -32 | 0;
  HEAP32[$7 + -32 >> 2] = HEAP32[$64 >> 2];
  HEAP32[$64 >> 2] = 0;
  HEAP32[$62 >> 2] = 0;
  HEAP32[$58 >> 2] = 0;
  $67 = $7 + -28 | 0;
  $68 = $$01$i$looptemp + -28 | 0;
  HEAP32[$67 >> 2] = HEAP32[$68 >> 2];
  HEAP32[$67 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
  HEAP32[$67 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
  $69 = $7 + -16 | 0;
  $70 = $$01$i$looptemp + -16 | 0;
  HEAP32[$69 >> 2] = HEAP32[$70 >> 2];
  $74 = HEAP32[$$01$i$looptemp + -12 >> 2] | 0;
  HEAP32[$7 + -12 >> 2] = $74;
  $75 = $$01$i$looptemp + -8 | 0;
  $77 = HEAP32[$75 >> 2] | 0;
  HEAP32[$7 + -8 >> 2] = $77;
  $79 = $7 + -12 | 0;
  if (!$77) HEAP32[$69 >> 2] = $79; else {
   HEAP32[$74 + 8 >> 2] = $79;
   $82 = $$01$i$looptemp + -12 | 0;
   HEAP32[$70 >> 2] = $82;
   HEAP32[$82 >> 2] = 0;
   HEAP32[$75 >> 2] = 0;
  }
  $84 = (HEAP32[$3 >> 2] | 0) + -144 | 0;
  HEAP32[$3 >> 2] = $84;
  if (($$01$i | 0) == ($0 | 0)) {
   $$lcssa = $84;
   break;
  } else $7 = $84;
 }
 $$pre$phi9Z2D = $3;
 $$pre$phiZ2D = $this;
 $87 = $$lcssa;
 $88 = HEAP32[$this >> 2] | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $87;
 HEAP32[$$pre$phi9Z2D >> 2] = $88;
 $89 = $__v + 8 | 0;
 $90 = HEAP32[$1 >> 2] | 0;
 $91 = HEAP32[$89 >> 2] | 0;
 HEAP32[$1 >> 2] = $91;
 HEAP32[$89 >> 2] = $90;
 $92 = $this + 8 | 0;
 $93 = $__v + 12 | 0;
 $94 = HEAP32[$92 >> 2] | 0;
 $95 = HEAP32[$93 >> 2] | 0;
 HEAP32[$92 >> 2] = $95;
 HEAP32[$93 >> 2] = $94;
 $96 = HEAP32[$$pre$phi9Z2D >> 2] | 0;
 HEAP32[$__v >> 2] = $96;
 return;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$110 = 0, $$139 = 0, $$byval_copy = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $62 = 0, $65 = 0, $67 = 0, $68 = 0, $70 = 0, $74 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $$byval_copy = sp + 312 | 0;
 $vararg_buffer9 = sp + 16 | 0;
 $vararg_buffer5 = sp + 48 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp + 32 | 0;
 $__fmt = sp;
 $__nar = sp + 316 | 0;
 $__nb = sp + 296 | 0;
 $__o = sp + 68 | 0;
 $__op = sp + 64 | 0;
 $__oe = sp + 308 | 0;
 $0 = sp + 304 | 0;
 $1 = sp + 300 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 62848, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 L5 : do if (($__nc$0 | 0) > 29) {
  __THREW__ = 0;
  $16 = invoke_i(2) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  $18 = $17 & 1;
  if ($9) {
   if (!$18) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
    $21 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if (!($22 & 1)) {
     $__nc$1 = $21;
     label = 12;
    }
   }
  } else if (!$18) {
   __THREW__ = 0;
   HEAP32[$vararg_buffer9 >> 2] = HEAP32[$__iob + 8 >> 2];
   HEAPF64[$vararg_buffer9 + 8 >> 3] = $__v;
   $28 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
   $29 = __THREW__;
   __THREW__ = 0;
   if (!($29 & 1)) {
    $__nc$1 = $28;
    label = 12;
   }
  }
  do if ((label | 0) == 12) {
   $31 = HEAP32[$__nb >> 2] | 0;
   if (!$31) {
    __THREW__ = 0;
    invoke_v(7);
    $33 = __THREW__;
    __THREW__ = 0;
    if ($33 & 1) break;
    $36 = HEAP32[$__nb >> 2] | 0;
   } else $36 = $31;
   $38 = $36;
   $65 = $36;
   $__nc$2 = $__nc$1;
   label = 16;
   break L5;
  } while (0);
  $24 = ___cxa_find_matching_catch() | 0;
  $$110 = $24;
  $$139 = tempRet0;
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $65 = 0;
  $__nc$2 = $__nc$0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  $37 = $38 + $__nc$2 | 0;
  $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
  do if (($38 | 0) == ($__nar | 0)) {
   $52 = $__nar;
   $62 = 0;
   $__ob$0 = $__o;
   label = 22;
  } else {
   $42 = _malloc($__nc$2 << 3) | 0;
   if (!$42) {
    __THREW__ = 0;
    invoke_v(7);
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     $74 = 0;
     label = 20;
     break;
    }
    $$pre7 = HEAP32[$__nb >> 2] | 0;
   } else $$pre7 = $38;
   $52 = $$pre7;
   $62 = $42;
   $__ob$0 = $42;
   label = 22;
  } while (0);
  do if ((label | 0) == 22) {
   __THREW__ = 0;
   $49 = invoke_ii(68, $__iob | 0) | 0;
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) {
    $74 = $62;
    label = 20;
   } else {
    HEAP32[$0 >> 2] = $49;
    __THREW__ = 0;
    invoke_viiiiiii(5, $52 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $53 = __THREW__;
    __THREW__ = 0;
    if ($53 & 1) {
     $67 = ___cxa_find_matching_catch() | 0;
     $68 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv($49) | 0;
     $$0 = $67;
     $$02 = $68;
     $70 = $62;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv($49) | 0;
    HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
    $56 = HEAP32[$__op >> 2] | 0;
    $57 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    $58 = invoke_iiiiiii(40, $$byval_copy | 0, $__ob$0 | 0, $56 | 0, $57 | 0, $__iob | 0, $__fl | 0) | 0;
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     $74 = $62;
     label = 20;
    } else {
     HEAP32[$__s >> 2] = $58;
     if ($62) _free($62);
     if ($65) _free($65);
     STACKTOP = sp;
     return $58 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 20) {
   $46 = ___cxa_find_matching_catch() | 0;
   $$0 = $46;
   $$02 = tempRet0;
   $70 = $74;
  }
  if ($70) _free($70);
  if (!$65) {
   $$110 = $$0;
   $$139 = $$02;
  } else {
   _free($65);
   $$110 = $$0;
   $$139 = $$02;
  }
 }
 ___resumeException($$110 | 0);
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$112 = 0, $$1311 = 0, $$byval_copy = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $44 = 0, $46 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $62 = 0, $65 = 0, $67 = 0, $68 = 0, $70 = 0, $74 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 84 | 0;
 $vararg_buffer9 = sp + 16 | 0;
 $vararg_buffer5 = sp + 48 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp + 32 | 0;
 $__fmt = sp;
 $__nar = sp + 88 | 0;
 $__nb = sp + 68 | 0;
 $__o = sp + 118 | 0;
 $__op = sp + 80 | 0;
 $__oe = sp + 76 | 0;
 $0 = sp + 64 | 0;
 $1 = sp + 72 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 62848, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 L5 : do if (($__nc$0 | 0) > 29) {
  __THREW__ = 0;
  $16 = invoke_i(2) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  $18 = $17 & 1;
  if ($9) {
   if (!$18) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
    $21 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if (!($22 & 1)) {
     $__nc$1 = $21;
     label = 12;
    }
   }
  } else if (!$18) {
   __THREW__ = 0;
   HEAP32[$vararg_buffer9 >> 2] = HEAP32[$__iob + 8 >> 2];
   HEAPF64[$vararg_buffer9 + 8 >> 3] = $__v;
   $28 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
   $29 = __THREW__;
   __THREW__ = 0;
   if (!($29 & 1)) {
    $__nc$1 = $28;
    label = 12;
   }
  }
  do if ((label | 0) == 12) {
   $31 = HEAP32[$__nb >> 2] | 0;
   if (!$31) {
    __THREW__ = 0;
    invoke_v(7);
    $33 = __THREW__;
    __THREW__ = 0;
    if ($33 & 1) break;
    $36 = HEAP32[$__nb >> 2] | 0;
   } else $36 = $31;
   $38 = $36;
   $65 = $36;
   $__nc$2 = $__nc$1;
   label = 16;
   break L5;
  } while (0);
  $24 = ___cxa_find_matching_catch() | 0;
  $$112 = $24;
  $$1311 = tempRet0;
 } else {
  $38 = HEAP32[$__nb >> 2] | 0;
  $65 = 0;
  $__nc$2 = $__nc$0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  $37 = $38 + $__nc$2 | 0;
  $39 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($38, $37, $__iob) | 0;
  do if (($38 | 0) == ($__nar | 0)) {
   $52 = $__nar;
   $62 = 0;
   $__ob$0 = $__o;
   label = 22;
  } else {
   $42 = _malloc($__nc$2 << 1) | 0;
   if (!$42) {
    __THREW__ = 0;
    invoke_v(7);
    $44 = __THREW__;
    __THREW__ = 0;
    if ($44 & 1) {
     $74 = 0;
     label = 20;
     break;
    }
    $$pre9 = HEAP32[$__nb >> 2] | 0;
   } else $$pre9 = $38;
   $52 = $$pre9;
   $62 = $42;
   $__ob$0 = $42;
   label = 22;
  } while (0);
  do if ((label | 0) == 22) {
   __THREW__ = 0;
   $49 = invoke_ii(68, $__iob | 0) | 0;
   $50 = __THREW__;
   __THREW__ = 0;
   if ($50 & 1) {
    $74 = $62;
    label = 20;
   } else {
    HEAP32[$0 >> 2] = $49;
    __THREW__ = 0;
    invoke_viiiiiii(3, $52 | 0, $39 | 0, $37 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $53 = __THREW__;
    __THREW__ = 0;
    if ($53 & 1) {
     $67 = ___cxa_find_matching_catch() | 0;
     $68 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv($49) | 0;
     $$0 = $67;
     $$02 = $68;
     $70 = $62;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv($49) | 0;
    HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
    $56 = HEAP32[$__op >> 2] | 0;
    $57 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    $58 = invoke_iiiiiii(39, $$byval_copy | 0, $__ob$0 | 0, $56 | 0, $57 | 0, $__iob | 0, $__fl | 0) | 0;
    $59 = __THREW__;
    __THREW__ = 0;
    if ($59 & 1) {
     $74 = $62;
     label = 20;
    } else {
     HEAP32[$__s >> 2] = $58;
     if ($62) _free($62);
     if ($65) _free($65);
     STACKTOP = sp;
     return $58 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 20) {
   $46 = ___cxa_find_matching_catch() | 0;
   $$0 = $46;
   $$02 = tempRet0;
   $70 = $74;
  }
  if ($70) _free($70);
  if (!$65) {
   $$112 = $$0;
   $$1311 = $$02;
  } else {
   _free($65);
   $$112 = $$0;
   $$1311 = $$02;
  }
 }
 ___resumeException($$112 | 0);
 return 0;
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $$lcssa = 0, $$lcssa63 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $16 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $5 = 0, $54 = 0, $57 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $__nd$0$be$in$i = 0, $__nd$0$be$in$i3 = 0, $__nd$0$i = 0, $__nd$0$i$lcssa = 0, $__nd$0$i$lcssa64 = 0, $__nd$0$i$lcssa65 = 0, $__nd$0$i2 = 0, $__nd$0$i2$lcssa = 0, $__nd$0$i2$lcssa61 = 0, $__nd$0$i2$lcssa62 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 $3 = $1;
 if (($1 | 0) != ($0 | 0)) {
  $5 = HEAP32[$__v >> 2] | 0;
  $6 = HEAP32[$1 + 16 >> 2] | 0;
  if ($5 >>> 0 >= $6 >>> 0) {
   if ($6 >>> 0 >= $5 >>> 0) {
    HEAP32[$__parent >> 2] = $3;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $41 = $1 + 4 | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   $43 = ($42 | 0) == 0;
   if ($43) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $47 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$47 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $47;
      break;
     } else $$0$i$i$i$i$i = $47;
    }
   } else {
    $$0$i$i$i$i$i$i = $42;
    while (1) {
     $44 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$44) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $44;
    }
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) if ($5 >>> 0 >= (HEAP32[$$01$i$i$i$i$i + 16 >> 2] | 0) >>> 0) {
    $54 = HEAP32[$0 >> 2] | 0;
    if (!$54) {
     HEAP32[$__parent >> 2] = $0;
     $$0 = $0;
     return $$0 | 0;
    } else $__nd$0$i = $54;
    while (1) {
     $57 = HEAP32[$__nd$0$i + 16 >> 2] | 0;
     if ($5 >>> 0 < $57 >>> 0) {
      $59 = HEAP32[$__nd$0$i >> 2] | 0;
      if (!$59) {
       $$lcssa67 = $__nd$0$i;
       $__nd$0$i$lcssa65 = $__nd$0$i;
       label = 33;
       break;
      } else $__nd$0$be$in$i = $59;
     } else {
      if ($57 >>> 0 >= $5 >>> 0) {
       $__nd$0$i$lcssa = $__nd$0$i;
       label = 38;
       break;
      }
      $62 = $__nd$0$i + 4 | 0;
      $63 = HEAP32[$62 >> 2] | 0;
      if (!$63) {
       $$lcssa66 = $62;
       $__nd$0$i$lcssa64 = $__nd$0$i;
       label = 37;
       break;
      } else $__nd$0$be$in$i = $63;
     }
     $__nd$0$i = $__nd$0$be$in$i;
    }
    if ((label | 0) == 33) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa65;
     $$0 = $$lcssa67;
     return $$0 | 0;
    } else if ((label | 0) == 37) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa64;
     $$0 = $$lcssa66;
     return $$0 | 0;
    } else if ((label | 0) == 38) {
     HEAP32[$__parent >> 2] = $__nd$0$i$lcssa;
     $$0 = $__parent;
     return $$0 | 0;
    }
   }
   if ($43) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $41;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $27 = $3; else {
  $10 = HEAP32[$1 >> 2] | 0;
  if (!$10) {
   $$0$i$i = $1;
   while (1) {
    $16 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$16 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $16; else {
     $$01$i$i = $16;
     break;
    }
   }
  } else {
   $$0$i$i$i = $10;
   while (1) {
    $13 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$13) {
     $$01$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $13;
   }
  }
  $22 = HEAP32[$__v >> 2] | 0;
  if ((HEAP32[$$01$i$i + 16 >> 2] | 0) >>> 0 < $22 >>> 0) $27 = $$01$i$i; else {
   $29 = HEAP32[$0 >> 2] | 0;
   if (!$29) {
    HEAP32[$__parent >> 2] = $0;
    $$0 = $0;
    return $$0 | 0;
   } else $__nd$0$i2 = $29;
   while (1) {
    $32 = HEAP32[$__nd$0$i2 + 16 >> 2] | 0;
    if ($22 >>> 0 < $32 >>> 0) {
     $34 = HEAP32[$__nd$0$i2 >> 2] | 0;
     if (!$34) {
      $$lcssa63 = $__nd$0$i2;
      $__nd$0$i2$lcssa62 = $__nd$0$i2;
      label = 14;
      break;
     } else $__nd$0$be$in$i3 = $34;
    } else {
     if ($32 >>> 0 >= $22 >>> 0) {
      $__nd$0$i2$lcssa = $__nd$0$i2;
      label = 19;
      break;
     }
     $37 = $__nd$0$i2 + 4 | 0;
     $38 = HEAP32[$37 >> 2] | 0;
     if (!$38) {
      $$lcssa = $37;
      $__nd$0$i2$lcssa61 = $__nd$0$i2;
      label = 18;
      break;
     } else $__nd$0$be$in$i3 = $38;
    }
    $__nd$0$i2 = $__nd$0$be$in$i3;
   }
   if ((label | 0) == 14) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa62;
    $$0 = $$lcssa63;
    return $$0 | 0;
   } else if ((label | 0) == 18) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa61;
    $$0 = $$lcssa;
    return $$0 | 0;
   } else if ((label | 0) == 19) {
    HEAP32[$__parent >> 2] = $__nd$0$i2$lcssa;
    $$0 = $__parent;
    return $$0 | 0;
   }
  }
 }
 if (!(HEAP32[$1 >> 2] | 0)) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  $26 = $27;
  HEAP32[$__parent >> 2] = $26;
  $$0 = $26 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$110 = 0, $$139 = 0, $$byval_copy = 0, $$pre7 = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $72 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $$byval_copy = sp + 304 | 0;
 $vararg_buffer9 = sp + 16 | 0;
 $vararg_buffer5 = sp + 40 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp + 24 | 0;
 $__fmt = sp;
 $__nar = sp + 308 | 0;
 $__nb = sp + 288 | 0;
 $__o = sp + 60 | 0;
 $__op = sp + 56 | 0;
 $__oe = sp + 300 | 0;
 $0 = sp + 296 | 0;
 $1 = sp + 292 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 62849, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 L5 : do if (($__nc$0 | 0) > 29) {
  __THREW__ = 0;
  $16 = invoke_i(2) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  $18 = $17 & 1;
  if ($9) {
   if (!$18) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
    $21 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if (!($22 & 1)) {
     $__nc$1 = $21;
     label = 12;
    }
   }
  } else if (!$18) {
   __THREW__ = 0;
   HEAPF64[$vararg_buffer9 >> 3] = $__v;
   $26 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
   $27 = __THREW__;
   __THREW__ = 0;
   if (!($27 & 1)) {
    $__nc$1 = $26;
    label = 12;
   }
  }
  do if ((label | 0) == 12) {
   $29 = HEAP32[$__nb >> 2] | 0;
   if (!$29) {
    __THREW__ = 0;
    invoke_v(7);
    $31 = __THREW__;
    __THREW__ = 0;
    if ($31 & 1) break;
    $34 = HEAP32[$__nb >> 2] | 0;
   } else $34 = $29;
   $36 = $34;
   $63 = $34;
   $__nc$2 = $__nc$1;
   label = 16;
   break L5;
  } while (0);
  $24 = ___cxa_find_matching_catch() | 0;
  $$110 = $24;
  $$139 = tempRet0;
 } else {
  $36 = HEAP32[$__nb >> 2] | 0;
  $63 = 0;
  $__nc$2 = $__nc$0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  $35 = $36 + $__nc$2 | 0;
  $37 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($36, $35, $__iob) | 0;
  do if (($36 | 0) == ($__nar | 0)) {
   $50 = $__nar;
   $60 = 0;
   $__ob$0 = $__o;
   label = 22;
  } else {
   $40 = _malloc($__nc$2 << 3) | 0;
   if (!$40) {
    __THREW__ = 0;
    invoke_v(7);
    $42 = __THREW__;
    __THREW__ = 0;
    if ($42 & 1) {
     $72 = 0;
     label = 20;
     break;
    }
    $$pre7 = HEAP32[$__nb >> 2] | 0;
   } else $$pre7 = $36;
   $50 = $$pre7;
   $60 = $40;
   $__ob$0 = $40;
   label = 22;
  } while (0);
  do if ((label | 0) == 22) {
   __THREW__ = 0;
   $47 = invoke_ii(68, $__iob | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $72 = $60;
    label = 20;
   } else {
    HEAP32[$0 >> 2] = $47;
    __THREW__ = 0;
    invoke_viiiiiii(5, $50 | 0, $37 | 0, $35 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     $65 = ___cxa_find_matching_catch() | 0;
     $66 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv($47) | 0;
     $$0 = $65;
     $$02 = $66;
     $68 = $60;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv($47) | 0;
    HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
    $54 = HEAP32[$__op >> 2] | 0;
    $55 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    $56 = invoke_iiiiiii(40, $$byval_copy | 0, $__ob$0 | 0, $54 | 0, $55 | 0, $__iob | 0, $__fl | 0) | 0;
    $57 = __THREW__;
    __THREW__ = 0;
    if ($57 & 1) {
     $72 = $60;
     label = 20;
    } else {
     HEAP32[$__s >> 2] = $56;
     if ($60) _free($60);
     if ($63) _free($63);
     STACKTOP = sp;
     return $56 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 20) {
   $44 = ___cxa_find_matching_catch() | 0;
   $$0 = $44;
   $$02 = tempRet0;
   $68 = $72;
  }
  if ($68) _free($68);
  if (!$63) {
   $$110 = $$0;
   $$139 = $$02;
  } else {
   _free($63);
   $$110 = $$0;
   $$139 = $$02;
  }
 }
 ___resumeException($$110 | 0);
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = +$__v;
 var $$0 = 0, $$02 = 0, $$112 = 0, $$1311 = 0, $$byval_copy = 0, $$pre9 = 0, $0 = 0, $1 = 0, $10 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $72 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__nb = 0, $__nc$0 = 0, $__nc$1 = 0, $__nc$2 = 0, $__o = 0, $__ob$0 = 0, $__oe = 0, $__op = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $$byval_copy = sp + 76 | 0;
 $vararg_buffer9 = sp + 16 | 0;
 $vararg_buffer5 = sp + 40 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp + 24 | 0;
 $__fmt = sp;
 $__nar = sp + 80 | 0;
 $__nb = sp + 60 | 0;
 $__o = sp + 110 | 0;
 $__op = sp + 72 | 0;
 $__oe = sp + 68 | 0;
 $0 = sp + 56 | 0;
 $1 = sp + 64 | 0;
 $2 = $__fmt;
 HEAP32[$2 >> 2] = 37;
 HEAP32[$2 + 4 >> 2] = 0;
 $9 = __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmt + 1 | 0, 62849, HEAP32[$__iob + 4 >> 2] | 0) | 0;
 HEAP32[$__nb >> 2] = $__nar;
 $10 = __ZNSt3__16__clocEv() | 0;
 if ($9) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$__iob + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $__v;
  $__nc$0 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 30, $10, $__fmt, $vararg_buffer2) | 0;
 }
 L5 : do if (($__nc$0 | 0) > 29) {
  __THREW__ = 0;
  $16 = invoke_i(2) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  $18 = $17 & 1;
  if ($9) {
   if (!$18) {
    __THREW__ = 0;
    HEAP32[$vararg_buffer5 >> 2] = HEAP32[$__iob + 8 >> 2];
    HEAPF64[$vararg_buffer5 + 8 >> 3] = $__v;
    $21 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer5 | 0) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if (!($22 & 1)) {
     $__nc$1 = $21;
     label = 12;
    }
   }
  } else if (!$18) {
   __THREW__ = 0;
   HEAPF64[$vararg_buffer9 >> 3] = $__v;
   $26 = invoke_iiiii(11, $__nb | 0, $16 | 0, $__fmt | 0, $vararg_buffer9 | 0) | 0;
   $27 = __THREW__;
   __THREW__ = 0;
   if (!($27 & 1)) {
    $__nc$1 = $26;
    label = 12;
   }
  }
  do if ((label | 0) == 12) {
   $29 = HEAP32[$__nb >> 2] | 0;
   if (!$29) {
    __THREW__ = 0;
    invoke_v(7);
    $31 = __THREW__;
    __THREW__ = 0;
    if ($31 & 1) break;
    $34 = HEAP32[$__nb >> 2] | 0;
   } else $34 = $29;
   $36 = $34;
   $63 = $34;
   $__nc$2 = $__nc$1;
   label = 16;
   break L5;
  } while (0);
  $24 = ___cxa_find_matching_catch() | 0;
  $$112 = $24;
  $$1311 = tempRet0;
 } else {
  $36 = HEAP32[$__nb >> 2] | 0;
  $63 = 0;
  $__nc$2 = $__nc$0;
  label = 16;
 } while (0);
 if ((label | 0) == 16) {
  $35 = $36 + $__nc$2 | 0;
  $37 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($36, $35, $__iob) | 0;
  do if (($36 | 0) == ($__nar | 0)) {
   $50 = $__nar;
   $60 = 0;
   $__ob$0 = $__o;
   label = 22;
  } else {
   $40 = _malloc($__nc$2 << 1) | 0;
   if (!$40) {
    __THREW__ = 0;
    invoke_v(7);
    $42 = __THREW__;
    __THREW__ = 0;
    if ($42 & 1) {
     $72 = 0;
     label = 20;
     break;
    }
    $$pre9 = HEAP32[$__nb >> 2] | 0;
   } else $$pre9 = $36;
   $50 = $$pre9;
   $60 = $40;
   $__ob$0 = $40;
   label = 22;
  } while (0);
  do if ((label | 0) == 22) {
   __THREW__ = 0;
   $47 = invoke_ii(68, $__iob | 0) | 0;
   $48 = __THREW__;
   __THREW__ = 0;
   if ($48 & 1) {
    $72 = $60;
    label = 20;
   } else {
    HEAP32[$0 >> 2] = $47;
    __THREW__ = 0;
    invoke_viiiiiii(3, $50 | 0, $37 | 0, $35 | 0, $__ob$0 | 0, $__op | 0, $__oe | 0, $0 | 0);
    $51 = __THREW__;
    __THREW__ = 0;
    if ($51 & 1) {
     $65 = ___cxa_find_matching_catch() | 0;
     $66 = tempRet0;
     __ZNSt3__114__shared_count16__release_sharedEv($47) | 0;
     $$0 = $65;
     $$02 = $66;
     $68 = $60;
     break;
    }
    __ZNSt3__114__shared_count16__release_sharedEv($47) | 0;
    HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
    $54 = HEAP32[$__op >> 2] | 0;
    $55 = HEAP32[$__oe >> 2] | 0;
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
    $56 = invoke_iiiiiii(39, $$byval_copy | 0, $__ob$0 | 0, $54 | 0, $55 | 0, $__iob | 0, $__fl | 0) | 0;
    $57 = __THREW__;
    __THREW__ = 0;
    if ($57 & 1) {
     $72 = $60;
     label = 20;
    } else {
     HEAP32[$__s >> 2] = $56;
     if ($60) _free($60);
     if ($63) _free($63);
     STACKTOP = sp;
     return $56 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 20) {
   $44 = ___cxa_find_matching_catch() | 0;
   $$0 = $44;
   $$02 = tempRet0;
   $68 = $72;
  }
  if ($68) _free($68);
  if (!$63) {
   $$112 = $$0;
   $$1311 = $$02;
  } else {
   _free($63);
   $$112 = $$0;
   $$1311 = $$02;
  }
 }
 ___resumeException($$112 | 0);
 return 0;
}

function __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$pre = 0, $16 = 0, $17 = 0, $28 = 0, $38 = 0, $42 = 0, $44 = 0, $57 = 0, $71 = 0, $75 = 0, $77 = 0, $79 = 0, $91 = 0, $94 = 0, $frm_nxt$1$lcssa = 0, $frm_nxt$1$ph = 0, $frm_nxt$148 = 0, $frm_nxt$2 = 0, $nchar32_t$047 = 0, label = 0;
 $$pre = $frm_end;
 if (!($mode & 4)) $frm_nxt$1$ph = $frm; else if (($$pre - $frm | 0) > 2) if ((HEAP8[$frm >> 0] | 0) == -17) if ((HEAP8[$frm + 1 >> 0] | 0) == -69) $frm_nxt$1$ph = (HEAP8[$frm + 2 >> 0] | 0) == -65 ? $frm + 3 | 0 : $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm; else $frm_nxt$1$ph = $frm;
 L7 : do if (($mx | 0) != 0 & $frm_nxt$1$ph >>> 0 < $frm_end >>> 0) {
  $frm_nxt$148 = $frm_nxt$1$ph;
  $nchar32_t$047 = 0;
  L8 : while (1) {
   $16 = HEAP8[$frm_nxt$148 >> 0] | 0;
   $17 = $16 & 255;
   do if ($16 << 24 >> 24 > -1) {
    if ($17 >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$148 + 1 | 0;
   } else {
    if (($16 & 255) < 194) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    if (($16 & 255) < 224) {
     if (($$pre - $frm_nxt$148 | 0) < 2) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $28 = HEAPU8[$frm_nxt$148 + 1 >> 0] | 0;
     if (($28 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     if (($28 & 63 | $17 << 6 & 1984) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$148 + 2 | 0;
     break;
    }
    if (($16 & 255) < 240) {
     $38 = $frm_nxt$148;
     if (($$pre - $38 | 0) < 3) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $42 = HEAP8[$frm_nxt$148 + 1 >> 0] | 0;
     $44 = HEAP8[$frm_nxt$148 + 2 >> 0] | 0;
     switch ($17 | 0) {
     case 224:
      {
       if (($42 & -32) << 24 >> 24 != -96) {
        $$lcssa83 = $38;
        label = 20;
        break L8;
       }
       break;
      }
     case 237:
      {
       if (($42 & -32) << 24 >> 24 != -128) {
        $$lcssa82 = $38;
        label = 22;
        break L8;
       }
       break;
      }
     default:
      if (($42 & -64) << 24 >> 24 != -128) {
       $$lcssa84 = $38;
       label = 24;
       break L8;
      }
     }
     $57 = $44 & 255;
     if (($57 & 192 | 0) != 128) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     if ((($42 & 255) << 6 & 4032 | $17 << 12 & 61440 | $57 & 63) >>> 0 > $Maxcode >>> 0) {
      $frm_nxt$1$lcssa = $frm_nxt$148;
      label = 42;
      break L7;
     }
     $frm_nxt$2 = $frm_nxt$148 + 3 | 0;
     break;
    }
    if (($16 & 255) >= 245) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $71 = $frm_nxt$148;
    if (($$pre - $71 | 0) < 4) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $75 = HEAP8[$frm_nxt$148 + 1 >> 0] | 0;
    $77 = HEAP8[$frm_nxt$148 + 2 >> 0] | 0;
    $79 = HEAP8[$frm_nxt$148 + 3 >> 0] | 0;
    switch ($17 | 0) {
    case 240:
     {
      if (($75 + 112 & 255) >= 48) {
       $$lcssa80 = $71;
       label = 32;
       break L8;
      }
      break;
     }
    case 244:
     {
      if (($75 & -16) << 24 >> 24 != -128) {
       $$lcssa = $71;
       label = 34;
       break L8;
      }
      break;
     }
    default:
     if (($75 & -64) << 24 >> 24 != -128) {
      $$lcssa81 = $71;
      label = 36;
      break L8;
     }
    }
    $91 = $77 & 255;
    if (($91 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $94 = $79 & 255;
    if (($94 & 192 | 0) != 128) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    if ((($75 & 255) << 12 & 258048 | $17 << 18 & 1835008 | $91 << 6 & 4032 | $94 & 63) >>> 0 > $Maxcode >>> 0) {
     $frm_nxt$1$lcssa = $frm_nxt$148;
     label = 42;
     break L7;
    }
    $frm_nxt$2 = $frm_nxt$148 + 4 | 0;
   } while (0);
   $nchar32_t$047 = $nchar32_t$047 + 1 | 0;
   if (!($nchar32_t$047 >>> 0 < $mx >>> 0 & $frm_nxt$2 >>> 0 < $frm_end >>> 0)) {
    $frm_nxt$1$lcssa = $frm_nxt$2;
    label = 42;
    break L7;
   } else $frm_nxt$148 = $frm_nxt$2;
  }
  if ((label | 0) == 20) {
   $$0 = $$lcssa83 - $frm | 0;
   break;
  } else if ((label | 0) == 22) {
   $$0 = $$lcssa82 - $frm | 0;
   break;
  } else if ((label | 0) == 24) {
   $$0 = $$lcssa84 - $frm | 0;
   break;
  } else if ((label | 0) == 32) {
   $$0 = $$lcssa80 - $frm | 0;
   break;
  } else if ((label | 0) == 34) {
   $$0 = $$lcssa - $frm | 0;
   break;
  } else if ((label | 0) == 36) {
   $$0 = $$lcssa81 - $frm | 0;
   break;
  }
 } else {
  $frm_nxt$1$lcssa = $frm_nxt$1$ph;
  label = 42;
 } while (0);
 if ((label | 0) == 42) $$0 = $frm_nxt$1$lcssa - $frm | 0;
 return $$0 | 0;
}

function __ZNKSt3__120__time_get_c_storageIwE8__monthsEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $62 = 0, $8 = 0;
 L1 : do if (!(HEAP8[2512] | 0)) if (___cxa_guard_acquire(2512) | 0) {
  if (!(HEAP8[2520] | 0)) if (___cxa_guard_acquire(2520) | 0) {
   $8 = 12960;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 13248);
   ___cxa_atexit(194, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2520);
  }
  __THREW__ = 0;
  invoke_iii(37, 12960, 13248) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  do if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(37, 12972, 13280) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(37, 12984, 13316) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(37, 12996, 13340) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(37, 13008, 13364) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(37, 13020, 13380) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(37, 13032, 13400) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(37, 13044, 13420) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(37, 13056, 13448) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(37, 13068, 13488) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(37, 13080, 13520) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(37, 13092, 13556) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(37, 13104, 13592) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(37, 13116, 13608) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                __THREW__ = 0;
                invoke_iii(37, 13128, 13624) | 0;
                $41 = __THREW__;
                __THREW__ = 0;
                if (!($41 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(37, 13140, 13640) | 0;
                 $43 = __THREW__;
                 __THREW__ = 0;
                 if ($43 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13152, 13364) | 0;
                 $45 = __THREW__;
                 __THREW__ = 0;
                 if ($45 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13164, 13656) | 0;
                 $47 = __THREW__;
                 __THREW__ = 0;
                 if ($47 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13176, 13672) | 0;
                 $49 = __THREW__;
                 __THREW__ = 0;
                 if ($49 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13188, 13688) | 0;
                 $51 = __THREW__;
                 __THREW__ = 0;
                 if ($51 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13200, 13704) | 0;
                 $53 = __THREW__;
                 __THREW__ = 0;
                 if ($53 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13212, 13720) | 0;
                 $55 = __THREW__;
                 __THREW__ = 0;
                 if ($55 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13224, 13736) | 0;
                 $57 = __THREW__;
                 __THREW__ = 0;
                 if ($57 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(37, 13236, 13752) | 0;
                 $59 = __THREW__;
                 __THREW__ = 0;
                 if ($59 & 1) break;
                 HEAP32[3442] = 12960;
                 ___cxa_guard_release(2512);
                 break L1;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while (0);
  $62 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2512);
  ___resumeException($62 | 0);
 } while (0);
 return HEAP32[3442] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE8__monthsEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $62 = 0, $8 = 0;
 L1 : do if (!(HEAP8[2496] | 0)) if (___cxa_guard_acquire(2496) | 0) {
  if (!(HEAP8[2504] | 0)) if (___cxa_guard_acquire(2504) | 0) {
   $8 = 12668;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 12956);
   ___cxa_atexit(193, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2504);
  }
  __THREW__ = 0;
  invoke_iii(19, 12668, 63070) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  do if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 12680, 63078) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 12692, 63087) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 12704, 63093) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 12716, 63099) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 12728, 63103) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 12740, 63108) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 12752, 63113) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 12764, 63120) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 12776, 63130) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 12788, 63138) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 12800, 63147) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 12812, 63156) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(19, 12824, 63160) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                __THREW__ = 0;
                invoke_iii(19, 12836, 63164) | 0;
                $41 = __THREW__;
                __THREW__ = 0;
                if (!($41 & 1)) {
                 __THREW__ = 0;
                 invoke_iii(19, 12848, 63168) | 0;
                 $43 = __THREW__;
                 __THREW__ = 0;
                 if ($43 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12860, 63099) | 0;
                 $45 = __THREW__;
                 __THREW__ = 0;
                 if ($45 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12872, 63172) | 0;
                 $47 = __THREW__;
                 __THREW__ = 0;
                 if ($47 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12884, 63176) | 0;
                 $49 = __THREW__;
                 __THREW__ = 0;
                 if ($49 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12896, 63180) | 0;
                 $51 = __THREW__;
                 __THREW__ = 0;
                 if ($51 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12908, 63184) | 0;
                 $53 = __THREW__;
                 __THREW__ = 0;
                 if ($53 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12920, 63188) | 0;
                 $55 = __THREW__;
                 __THREW__ = 0;
                 if ($55 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12932, 63192) | 0;
                 $57 = __THREW__;
                 __THREW__ = 0;
                 if ($57 & 1) break;
                 __THREW__ = 0;
                 invoke_iii(19, 12944, 63196) | 0;
                 $59 = __THREW__;
                 __THREW__ = 0;
                 if ($59 & 1) break;
                 HEAP32[3239] = 12668;
                 ___cxa_guard_release(2496);
                 break L1;
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  } while (0);
  $62 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2496);
  ___resumeException($62 | 0);
 } while (0);
 return HEAP32[3239] | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $$0$i = 0, $$phi$trans$insert = 0, $$phi$trans$insert1 = 0, $$pre$phi5Z2D = 0, $$pre$phiZ2D = 0, $$pre2 = 0, $$sink1$i = 0, $$sink2$i = 0, $0 = 0, $101 = 0, $102 = 0, $107 = 0, $110 = 0, $112 = 0, $114 = 0, $116 = 0, $125 = 0, $126 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $36 = 0, $40 = 0, $42 = 0, $43 = 0, $50 = 0, $57 = 0, $59 = 0, $60 = 0, $64 = 0, $66 = 0, $67 = 0, $68 = 0, $73 = 0, $79 = 0, $84 = 0, $85 = 0, $86 = 0, $88 = 0, $91 = 0, $95 = 0, $96 = 0, $__1buf = 0, $__c$0 = 0, $__inext = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__1buf = sp + 4 | 0;
 $__inext = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 92 | 0;
 if (!(HEAP32[$3 >> 2] & 8)) {
  HEAP32[$this + 24 >> 2] = 0;
  HEAP32[$this + 20 >> 2] = 0;
  HEAP32[$this + 28 >> 2] = 0;
  if (!(HEAP8[$this + 98 >> 0] | 0)) {
   $19 = HEAP32[$this + 56 >> 2] | 0;
   $$sink1$i = $19 + (HEAP32[$this + 60 >> 2] | 0) | 0;
   $$sink2$i = $19;
  } else {
   $14 = HEAP32[$this + 32 >> 2] | 0;
   $$sink1$i = $14 + (HEAP32[$this + 52 >> 2] | 0) | 0;
   $$sink2$i = $14;
  }
  HEAP32[$this + 8 >> 2] = $$sink2$i;
  $24 = $this + 12 | 0;
  HEAP32[$24 >> 2] = $$sink1$i;
  HEAP32[$this + 16 >> 2] = $$sink1$i;
  HEAP32[$3 >> 2] = 8;
  $$0$i = 1;
  $$pre$phiZ2D = $24;
  $27 = $$sink1$i;
 } else {
  $$phi$trans$insert = $this + 12 | 0;
  $$0$i = 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $27 = HEAP32[$$phi$trans$insert >> 2] | 0;
 }
 if (!$27) {
  $28 = $__1buf + 1 | 0;
  HEAP32[$this + 8 >> 2] = $__1buf;
  HEAP32[$$pre$phiZ2D >> 2] = $28;
  HEAP32[$this + 16 >> 2] = $28;
  $40 = $28;
 } else $40 = $27;
 $$phi$trans$insert1 = $this + 16 | 0;
 $$pre2 = HEAP32[$$phi$trans$insert1 >> 2] | 0;
 if ($$0$i) $42 = 0; else {
  $36 = ($$pre2 - (HEAP32[$this + 8 >> 2] | 0) | 0) / 2 | 0;
  $42 = $36 >>> 0 > 4 ? 4 : $36;
 }
 do if (($40 | 0) == ($$pre2 | 0)) {
  $43 = $this + 8 | 0;
  _memmove(HEAP32[$43 >> 2] | 0, $40 + (0 - $42) | 0, $42 | 0) | 0;
  if (HEAP8[$this + 98 >> 0] | 0) {
   $50 = HEAP32[$43 >> 2] | 0;
   $57 = _fread($50 + $42 | 0, 1, (HEAP32[$$phi$trans$insert1 >> 2] | 0) - $42 - $50 | 0, HEAP32[$0 >> 2] | 0) | 0;
   if (!$57) {
    $$pre$phi5Z2D = $43;
    $__c$0 = -1;
    break;
   }
   $59 = HEAP32[$43 >> 2] | 0;
   $60 = $59 + $42 | 0;
   HEAP32[$$pre$phiZ2D >> 2] = $60;
   HEAP32[$$phi$trans$insert1 >> 2] = $59 + ($57 + $42);
   $$pre$phi5Z2D = $43;
   $__c$0 = HEAPU8[$60 >> 0] | 0;
   break;
  }
  $64 = $this + 32 | 0;
  $66 = $this + 36 | 0;
  $67 = HEAP32[$66 >> 2] | 0;
  $68 = $this + 40 | 0;
  _memmove(HEAP32[$64 >> 2] | 0, $67 | 0, (HEAP32[$68 >> 2] | 0) - $67 | 0) | 0;
  $73 = HEAP32[$64 >> 2] | 0;
  $79 = $73 + ((HEAP32[$68 >> 2] | 0) - (HEAP32[$66 >> 2] | 0)) | 0;
  HEAP32[$66 >> 2] = $79;
  if (($73 | 0) == ($this + 44 | 0)) $85 = 8; else $85 = HEAP32[$this + 52 >> 2] | 0;
  $84 = $73 + $85 | 0;
  HEAP32[$68 >> 2] = $84;
  $86 = $this + 60 | 0;
  $88 = (HEAP32[$86 >> 2] | 0) - $42 | 0;
  $91 = $84 - $79 | 0;
  $95 = $this + 72 | 0;
  $96 = $95;
  $101 = HEAP32[$96 + 4 >> 2] | 0;
  $102 = $this + 80 | 0;
  HEAP32[$102 >> 2] = HEAP32[$96 >> 2];
  HEAP32[$102 + 4 >> 2] = $101;
  $107 = _fread($79, 1, $91 >>> 0 < $88 >>> 0 ? $91 : $88, HEAP32[$0 >> 2] | 0) | 0;
  if (!$107) {
   $$pre$phi5Z2D = $43;
   $__c$0 = -1;
  } else {
   $110 = HEAP32[$this + 68 >> 2] | 0;
   if (!$110) {
    $112 = ___cxa_allocate_exception(4) | 0;
    __ZNSt8bad_castC2Ev($112);
    ___cxa_throw($112 | 0, 656, 81);
   }
   $114 = (HEAP32[$66 >> 2] | 0) + $107 | 0;
   HEAP32[$68 >> 2] = $114;
   $116 = HEAP32[$43 >> 2] | 0;
   if ((FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$110 >> 2] | 0) + 16 >> 2] & 15]($110, $95, HEAP32[$64 >> 2] | 0, $114, $66, $116 + $42 | 0, $116 + (HEAP32[$86 >> 2] | 0) | 0, $__inext) | 0) == 3) {
    $125 = HEAP32[$64 >> 2] | 0;
    $126 = HEAP32[$68 >> 2] | 0;
    HEAP32[$43 >> 2] = $125;
    HEAP32[$$pre$phiZ2D >> 2] = $125;
    HEAP32[$$phi$trans$insert1 >> 2] = $126;
    $$pre$phi5Z2D = $43;
    $__c$0 = HEAPU8[$125 >> 0] | 0;
    break;
   }
   $130 = HEAP32[$__inext >> 2] | 0;
   $131 = HEAP32[$43 >> 2] | 0;
   $132 = $131 + $42 | 0;
   if (($130 | 0) == ($132 | 0)) {
    $$pre$phi5Z2D = $43;
    $__c$0 = -1;
   } else {
    HEAP32[$43 >> 2] = $131;
    HEAP32[$$pre$phiZ2D >> 2] = $132;
    HEAP32[$$phi$trans$insert1 >> 2] = $130;
    $$pre$phi5Z2D = $43;
    $__c$0 = HEAPU8[$132 >> 0] | 0;
   }
  }
 } else {
  $$pre$phi5Z2D = $this + 8 | 0;
  $__c$0 = HEAPU8[$40 >> 0] | 0;
 } while (0);
 if ((HEAP32[$$pre$phi5Z2D >> 2] | 0) != ($__1buf | 0)) {
  $$0 = $__c$0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$$pre$phi5Z2D >> 2] = 0;
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 HEAP32[$$phi$trans$insert1 >> 2] = 0;
 $$0 = $__c$0;
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange($agg$result, $this, $loc) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 var $$0 = 0, $$0$i = 0, $$01$i = 0, $$016 = 0, $$035 = 0, $$12 = 0, $$14 = 0, $0 = 0, $1 = 0, $11 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $35 = 0, $37 = 0, $47 = 0, $49 = 0, $50 = 0, $53 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $0 = sp + 168 | 0;
 $ss = sp + 24 | 0;
 $1 = sp + 12 | 0;
 $2 = sp;
 $3 = $this + 40 | 0;
 if ((HEAP32[$3 >> 2] | 0) == 19) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, (HEAP32[$this + 48 >> 2] | 0) + 8 | 0);
  STACKTOP = sp;
  return;
 }
 $6 = $ss + 64 | 0;
 $7 = $ss + 8 | 0;
 HEAP32[$7 >> 2] = 2912;
 $8 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$6 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $8 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $24 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $24;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 2892;
 HEAP32[$ss + 64 >> 2] = 2932;
 HEAP32[$7 >> 2] = 2912;
 __THREW__ = 0;
 invoke_vi(173, $8 | 0);
 $16 = __THREW__;
 __THREW__ = 0;
 do if ($16 & 1) {
  $26 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $26;
 } else {
  HEAP32[$8 >> 2] = 2988;
  $18 = $ss + 44 | 0;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$18 + 4 >> 2] = 0;
  HEAP32[$18 + 8 >> 2] = 0;
  HEAP32[$18 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $8 | 0, $0 | 0);
  $20 = __THREW__;
  __THREW__ = 0;
  if ($20 & 1) {
   $22 = ___cxa_find_matching_catch() | 0;
   $23 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
   $eh$lpad$body$i$index2Z2D = $23;
   $eh$lpad$body$i$indexZ2D = $22;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $28 = $ss + 8 | 0;
  __THREW__ = 0;
  $29 = invoke_iiii(29, $28 | 0, 52640, 29) | 0;
  $30 = __THREW__;
  __THREW__ = 0;
  do if ($30 & 1) label = 16; else {
   __THREW__ = 0;
   invoke_vii(60, $1 | 0, HEAP32[$3 >> 2] | 0);
   $33 = __THREW__;
   __THREW__ = 0;
   if ($33 & 1) label = 16; else {
    $35 = HEAP8[$1 >> 0] | 0;
    $37 = ($35 & 1) == 0;
    __THREW__ = 0;
    invoke_iiii(29, $29 | 0, ($37 ? $1 + 1 | 0 : HEAP32[$1 + 8 >> 2] | 0) | 0, ($37 ? ($35 & 255) >>> 1 : HEAP32[$1 + 4 >> 2] | 0) | 0) | 0;
    $47 = __THREW__;
    __THREW__ = 0;
    if ($47 & 1) {
     $58 = ___cxa_find_matching_catch() | 0;
     $59 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
     $$12 = $59;
     $$14 = $58;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    $49 = ___cxa_allocate_exception(24) | 0;
    __THREW__ = 0;
    invoke_vii(43, $2 | 0, $8 | 0);
    $50 = __THREW__;
    __THREW__ = 0;
    if ($50 & 1) {
     $60 = ___cxa_find_matching_catch() | 0;
     $$016 = tempRet0;
     $$035 = $60;
    } else {
     __THREW__ = 0;
     invoke_viiii(16, $49 | 0, $this + 56 | 0, $loc | 0, $2 | 0);
     $53 = __THREW__;
     __THREW__ = 0;
     if ($53 & 1) $$0 = 1; else {
      __THREW__ = 0;
      invoke_viii(4, $49 | 0, 392, 179);
      __THREW__ = 0;
      $$0 = 0;
     }
     $62 = ___cxa_find_matching_catch() | 0;
     $63 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     if ($$0) {
      $$016 = $63;
      $$035 = $62;
     } else {
      $$12 = $63;
      $$14 = $62;
      break;
     }
    }
    ___cxa_free_exception($49 | 0);
    $$12 = $$016;
    $$14 = $$035;
   }
  } while (0);
  if ((label | 0) == 16) {
   $56 = ___cxa_find_matching_catch() | 0;
   $$12 = tempRet0;
   $$14 = $56;
  }
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$6 >> 2] = 2932;
  HEAP32[$28 >> 2] = 2912;
  HEAP32[$8 >> 2] = 2988;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($18);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($8);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
  ___resumeException($$14 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($6);
 ___resumeException($$01$i | 0);
}

function __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$pre = 0, $$pre$phiZ2D = 0, $100 = 0, $104 = 0, $107 = 0, $128 = 0, $134 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0, $3 = 0, $36 = 0, $42 = 0, $51 = 0, $53 = 0, $60 = 0, $69 = 0, $79 = 0, $81 = 0, $83 = 0, $89 = 0, $92 = 0, $98 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) {
  $$pre = $to;
  $$pre$phiZ2D = $frm_end;
 } else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre = HEAP32[$to_nxt >> 2] | 0;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  }
 }
 $16 = $to_end;
 $17 = HEAP32[$frm_nxt >> 2] | 0;
 $18 = $17 >>> 0 < $frm_end >>> 0;
 L9 : do if ($18 & $$pre >>> 0 < $to_end >>> 0) {
  $22 = $17;
  $27 = $$pre;
  while (1) {
   $21 = HEAP8[$22 >> 0] | 0;
   $23 = $21 & 255;
   if ($23 >>> 0 > $Maxcode >>> 0) {
    $$0 = 2;
    break L9;
   }
   do if ($21 << 24 >> 24 > -1) {
    HEAP16[$27 >> 1] = $21 & 255;
    HEAP32[$frm_nxt >> 2] = $22 + 1;
   } else {
    if (($21 & 255) < 194) {
     $$0 = 2;
     break L9;
    }
    if (($21 & 255) < 224) {
     if (($$pre$phiZ2D - $22 | 0) < 2) {
      $$0 = 1;
      break L9;
     }
     $36 = HEAPU8[$22 + 1 >> 0] | 0;
     if (($36 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $42 = $36 & 63 | $23 << 6 & 1984;
     if ($42 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP16[$27 >> 1] = $42;
     HEAP32[$frm_nxt >> 2] = $22 + 2;
     break;
    }
    if (($21 & 255) < 240) {
     if (($$pre$phiZ2D - $22 | 0) < 3) {
      $$0 = 1;
      break L9;
     }
     $51 = HEAP8[$22 + 1 >> 0] | 0;
     $53 = HEAP8[$22 + 2 >> 0] | 0;
     switch ($23 | 0) {
     case 224:
      {
       if (($51 & -32) << 24 >> 24 != -96) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     case 237:
      {
       if (($51 & -32) << 24 >> 24 != -128) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     default:
      if (($51 & -64) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
     }
     $60 = $53 & 255;
     if (($60 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $69 = ($51 & 255) << 6 & 4032 | $23 << 12 | $60 & 63;
     if (($69 & 65535) >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP16[$27 >> 1] = $69;
     HEAP32[$frm_nxt >> 2] = $22 + 3;
     break;
    }
    if (($21 & 255) >= 245) {
     $$0 = 2;
     break L9;
    }
    if (($$pre$phiZ2D - $22 | 0) < 4) {
     $$0 = 1;
     break L9;
    }
    $79 = HEAP8[$22 + 1 >> 0] | 0;
    $81 = HEAP8[$22 + 2 >> 0] | 0;
    $83 = HEAP8[$22 + 3 >> 0] | 0;
    switch ($23 | 0) {
    case 240:
     {
      if (($79 + 112 & 255) >= 48) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    case 244:
     {
      if (($79 & -16) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($79 & -64) << 24 >> 24 != -128) {
      $$0 = 2;
      break L9;
     }
    }
    $89 = $81 & 255;
    if (($89 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    $92 = $83 & 255;
    if (($92 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    if (($16 - $27 | 0) < 4) {
     $$0 = 1;
     break L9;
    }
    $98 = $23 & 7;
    $100 = $79 & 255;
    $104 = $89 << 6;
    $107 = $92 & 63;
    if (($100 << 12 & 258048 | $98 << 18 | $104 & 4032 | $107) >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $100 << 2 & 60 | $89 >>> 4 & 3 | (($100 >>> 4 & 3 | $98 << 2) << 6) + 16320 | 55296;
    $128 = $27 + 2 | 0;
    HEAP32[$to_nxt >> 2] = $128;
    HEAP16[$128 >> 1] = $107 | $104 & 960 | 56320;
    HEAP32[$frm_nxt >> 2] = (HEAP32[$frm_nxt >> 2] | 0) + 4;
   } while (0);
   $27 = (HEAP32[$to_nxt >> 2] | 0) + 2 | 0;
   HEAP32[$to_nxt >> 2] = $27;
   $22 = HEAP32[$frm_nxt >> 2] | 0;
   $134 = $22 >>> 0 < $frm_end >>> 0;
   if (!($134 & $27 >>> 0 < $to_end >>> 0)) {
    $$lcssa = $134;
    label = 39;
    break;
   }
  }
 } else {
  $$lcssa = $18;
  label = 39;
 } while (0);
 if ((label | 0) == 39) $$0 = $$lcssa & 1;
 return $$0 | 0;
}

function __ZNSt3__18ios_base4InitC2Ev($this) {
 $this = $this | 0;
 var $$sum$i1 = 0, $$sum$i11 = 0, $$sum1$i12 = 0, $$sum1$i2 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $22 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $45 = 0, $5 = 0, $52 = 0, $54 = 0, $56 = 0, $60 = 0, $62 = 0, $64 = 0, $69 = 0, $71 = 0, $79 = 0, $81 = 0, $83 = 0, $9 = 0, $94 = 0;
 $0 = HEAP32[1081] | 0;
 __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(9088, $0, 9144);
 HEAP32[2102] = 9836;
 HEAP32[2104] = 9856;
 HEAP32[2103] = 0;
 $1 = HEAP32[2456] | 0;
 __THREW__ = 0;
 invoke_vii(41, 8408 + $1 | 0, 9088);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $5 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(8416);
  ___resumeException($5 | 0);
 }
 HEAP32[8408 + ($1 + 72) >> 2] = 0;
 HEAP32[8408 + ($1 + 76) >> 2] = -1;
 $9 = HEAP32[1082] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(9192, $9, 9152);
 HEAP32[2124] = 9916;
 HEAP32[2125] = 9936;
 $10 = HEAP32[2476] | 0;
 __THREW__ = 0;
 invoke_vii(41, 8496 + $10 | 0, 9192);
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(8500);
  ___resumeException($14 | 0);
 }
 $$sum$i1 = $10 + 72 | 0;
 HEAP32[8496 + $$sum$i1 >> 2] = 0;
 $$sum1$i2 = $10 + 76 | 0;
 HEAP32[8496 + $$sum1$i2 >> 2] = -1;
 $18 = HEAP32[1080] | 0;
 __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(9240, $18, 9160);
 HEAP32[2145] = 9916;
 HEAP32[2146] = 9936;
 __THREW__ = 0;
 invoke_vii(41, 8580 + $10 | 0, 9240);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $22 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(8584);
  ___resumeException($22 | 0);
 }
 HEAP32[8580 + $$sum$i1 >> 2] = 0;
 HEAP32[8580 + $$sum1$i2 >> 2] = -1;
 $30 = HEAP32[8580 + ((HEAP32[(HEAP32[2145] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
 HEAP32[2166] = 9916;
 HEAP32[2167] = 9936;
 __THREW__ = 0;
 invoke_vii(41, 8664 + $10 | 0, $30 | 0);
 $32 = __THREW__;
 __THREW__ = 0;
 if ($32 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(8668);
  ___resumeException($34 | 0);
 }
 HEAP32[8664 + $$sum$i1 >> 2] = 0;
 HEAP32[8664 + $$sum1$i2 >> 2] = -1;
 HEAP32[8408 + ((HEAP32[(HEAP32[2102] | 0) + -12 >> 2] | 0) + 72) >> 2] = 8496;
 $45 = 8580 + ((HEAP32[(HEAP32[2145] | 0) + -12 >> 2] | 0) + 4) | 0;
 HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 8192;
 HEAP32[8580 + ((HEAP32[(HEAP32[2145] | 0) + -12 >> 2] | 0) + 72) >> 2] = 8496;
 __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(9288, $0, 9168);
 HEAP32[2187] = 9876;
 HEAP32[2189] = 9896;
 HEAP32[2188] = 0;
 $52 = HEAP32[2466] | 0;
 __THREW__ = 0;
 invoke_vii(41, 8748 + $52 | 0, 9288);
 $54 = __THREW__;
 __THREW__ = 0;
 if ($54 & 1) {
  $56 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(8756);
  ___resumeException($56 | 0);
 }
 HEAP32[8748 + ($52 + 72) >> 2] = 0;
 HEAP32[8748 + ($52 + 76) >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(9344, $9, 9176);
 HEAP32[2209] = 9956;
 HEAP32[2210] = 9976;
 $60 = HEAP32[2486] | 0;
 __THREW__ = 0;
 invoke_vii(41, 8836 + $60 | 0, 9344);
 $62 = __THREW__;
 __THREW__ = 0;
 if ($62 & 1) {
  $64 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(8840);
  ___resumeException($64 | 0);
 }
 $$sum$i11 = $60 + 72 | 0;
 HEAP32[8836 + $$sum$i11 >> 2] = 0;
 $$sum1$i12 = $60 + 76 | 0;
 HEAP32[8836 + $$sum1$i12 >> 2] = -1;
 __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(9392, $18, 9184);
 HEAP32[2230] = 9956;
 HEAP32[2231] = 9976;
 __THREW__ = 0;
 invoke_vii(41, 8920 + $60 | 0, 9392);
 $69 = __THREW__;
 __THREW__ = 0;
 if ($69 & 1) {
  $71 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(8924);
  ___resumeException($71 | 0);
 }
 HEAP32[8920 + $$sum$i11 >> 2] = 0;
 HEAP32[8920 + $$sum1$i12 >> 2] = -1;
 $79 = HEAP32[8920 + ((HEAP32[(HEAP32[2230] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
 HEAP32[2251] = 9956;
 HEAP32[2252] = 9976;
 __THREW__ = 0;
 invoke_vii(41, 9004 + $60 | 0, $79 | 0);
 $81 = __THREW__;
 __THREW__ = 0;
 if ($81 & 1) {
  $83 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev(9008);
  ___resumeException($83 | 0);
 } else {
  HEAP32[9004 + $$sum$i11 >> 2] = 0;
  HEAP32[9004 + $$sum1$i12 >> 2] = -1;
  HEAP32[8748 + ((HEAP32[(HEAP32[2187] | 0) + -12 >> 2] | 0) + 72) >> 2] = 8836;
  $94 = 8920 + ((HEAP32[(HEAP32[2230] | 0) + -12 >> 2] | 0) + 4) | 0;
  HEAP32[$94 >> 2] = HEAP32[$94 >> 2] | 8192;
  HEAP32[8920 + ((HEAP32[(HEAP32[2230] | 0) + -12 >> 2] | 0) + 72) >> 2] = 8836;
  return;
 }
}

function __Z19jsonlang_vm_executeP9AllocatorPK3ASTRKNSt3__13mapINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESB_NS4_4lessISB_EENS9_INS4_4pairIKSB_SB_EEEEEEjddPFPcPvPKcSO_PiESM_b($agg$result, $alloc, $ast, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx, $string_output) {
 $agg$result = $agg$result | 0;
 $alloc = $alloc | 0;
 $ast = $ast | 0;
 $ext_vars = $ext_vars | 0;
 $max_stack = $max_stack | 0;
 $gc_min_objects = +$gc_min_objects;
 $gc_growth_trigger = +$gc_growth_trigger;
 $import_callback = $import_callback | 0;
 $ctx = $ctx | 0;
 $string_output = $string_output | 0;
 var $$0 = 0, $$01 = 0, $$1 = 0, $$12 = 0, $$2 = 0, $$23 = 0, $$3 = 0, $$34 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, $vm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $vm = sp;
 $0 = sp + 184 | 0;
 $1 = sp + 172 | 0;
 $2 = sp + 144 | 0;
 $3 = sp + 132 | 0;
 $4 = sp + 120 | 0;
 __ZN12_GLOBAL__N_111InterpreterC2EP9AllocatorRKNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_NS3_4lessISA_EENS8_INS3_4pairIKSA_SA_EEEEEEjddPFPcPvPKcSN_PiESL_($vm, $alloc, $ext_vars, $max_stack, $gc_min_objects, $gc_growth_trigger, $import_callback, $ctx);
 __THREW__ = 0;
 invoke_vii(59, $vm | 0, $ast | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 do if (!($5 & 1)) {
  __THREW__ = 0;
  if ($string_output) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, 51870, 20);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
   __THREW__ = 0;
   invoke_vii(40, $0 | 0, $1 | 0);
   $9 = __THREW__;
   __THREW__ = 0;
   do if ($9 & 1) {
    $16 = ___cxa_find_matching_catch() | 0;
    $$0 = tempRet0;
    $$01 = $16;
   } else {
    $11 = $0 + 12 | 0;
    HEAP32[$11 >> 2] = 0;
    HEAP32[$11 + 4 >> 2] = 0;
    HEAP32[$11 + 8 >> 2] = 0;
    HEAP32[$11 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(10, $agg$result | 0, $vm | 0, $0 | 0);
    $12 = __THREW__;
    __THREW__ = 0;
    if ($12 & 1) {
     $18 = ___cxa_find_matching_catch() | 0;
     $19 = tempRet0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
     $$0 = $19;
     $$01 = $18;
     break;
    }
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
    __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
    STACKTOP = sp;
    return;
   } while (0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   $$3 = $$0;
   $$34 = $$01;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($3, 51870, 20);
  $20 = __THREW__;
  __THREW__ = 0;
  if (!($20 & 1)) {
   __THREW__ = 0;
   invoke_vii(40, $2 | 0, $3 | 0);
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $29 = ___cxa_find_matching_catch() | 0;
    $$2 = tempRet0;
    $$23 = $29;
   } else {
    $24 = $2 + 12 | 0;
    HEAP32[$24 >> 2] = 0;
    HEAP32[$24 + 4 >> 2] = 0;
    HEAP32[$24 + 8 >> 2] = 0;
    HEAP32[$24 + 12 >> 2] = 0;
    __THREW__ = 0;
    invoke_viii(3, $4 | 0, 62848, 0);
    $25 = __THREW__;
    __THREW__ = 0;
    do if ($25 & 1) {
     $31 = ___cxa_find_matching_catch() | 0;
     $$1 = tempRet0;
     $$12 = $31;
    } else {
     __THREW__ = 0;
     invoke_viiiii(6, $agg$result | 0, $vm | 0, $2 | 0, 1, $4 | 0);
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) {
      $33 = ___cxa_find_matching_catch() | 0;
      $34 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
      $$1 = $34;
      $$12 = $33;
      break;
     }
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
     __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
     STACKTOP = sp;
     return;
    } while (0);
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
    $$2 = $$1;
    $$23 = $$12;
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3);
   $$3 = $$2;
   $$34 = $$23;
   __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
   ___resumeException($$34 | 0);
  }
 } while (0);
 $14 = ___cxa_find_matching_catch() | 0;
 $$3 = tempRet0;
 $$34 = $14;
 __ZN12_GLOBAL__N_111InterpreterD2Ev($vm);
 ___resumeException($$34 | 0);
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $__hint, $__parent, $__v) {
 $this = $this | 0;
 $__hint = $__hint | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i = 0, $$01$i$i$i$i$i = 0, $0 = 0, $1 = 0, $101 = 0, $102 = 0, $104 = 0, $109 = 0, $116 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $38 = 0, $4 = 0, $41 = 0, $44 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $56 = 0, $57 = 0, $59 = 0, $64 = 0, $7 = 0, $75 = 0, $82 = 0, $83 = 0, $87 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$__hint >> 2] | 0;
 $3 = $1;
 if (($1 | 0) != ($0 | 0)) {
  $4 = $1 + 16 | 0;
  $5 = HEAP8[$__v >> 0] | 0;
  $7 = ($5 & 1) == 0;
  $12 = $7 ? ($5 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $13 = HEAP8[$4 >> 0] | 0;
  $15 = ($13 & 1) == 0;
  $20 = $15 ? ($13 & 255) >>> 1 : HEAP32[$1 + 20 >> 2] | 0;
  $24 = $7 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $28 = $15 ? $4 + 1 | 0 : HEAP32[$1 + 24 >> 2] | 0;
  $29 = $20 >>> 0 < $12 >>> 0;
  $31 = _memcmp($24, $28, $29 ? $20 : $12) | 0;
  $33 = $12 >>> 0 < $20 >>> 0;
  if (((($31 | 0) == 0 ? ($33 ? -2147483648 : 0) : $31) | 0) >= 0) {
   $87 = _memcmp($28, $24, $33 ? $12 : $20) | 0;
   if (((($87 | 0) == 0 ? ($29 ? -2147483648 : 0) : $87) | 0) >= 0) {
    HEAP32[$__parent >> 2] = $3;
    $$0 = $__parent;
    return $$0 | 0;
   }
   $91 = $1 + 4 | 0;
   $92 = HEAP32[$91 >> 2] | 0;
   $93 = ($92 | 0) == 0;
   if ($93) {
    $$0$i$i$i$i$i = $1;
    while (1) {
     $97 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$97 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
      $$01$i$i$i$i$i = $97;
      break;
     } else $$0$i$i$i$i$i = $97;
    }
   } else {
    $$0$i$i$i$i$i$i = $92;
    while (1) {
     $94 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
     if (!$94) {
      $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
      break;
     } else $$0$i$i$i$i$i$i = $94;
    }
   }
   if (($$01$i$i$i$i$i | 0) != ($0 | 0)) {
    $101 = $$01$i$i$i$i$i + 16 | 0;
    $102 = HEAP8[$101 >> 0] | 0;
    $104 = ($102 & 1) == 0;
    $109 = $104 ? ($102 & 255) >>> 1 : HEAP32[$$01$i$i$i$i$i + 20 >> 2] | 0;
    $116 = _memcmp($24, $104 ? $101 + 1 | 0 : HEAP32[$$01$i$i$i$i$i + 24 >> 2] | 0, $109 >>> 0 < $12 >>> 0 ? $109 : $12) | 0;
    if (((($116 | 0) == 0 ? ($12 >>> 0 < $109 >>> 0 ? -2147483648 : 0) : $116) | 0) >= 0) {
     $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
     return $$0 | 0;
    }
   }
   if ($93) {
    HEAP32[$__parent >> 2] = $1;
    $$0 = $91;
    return $$0 | 0;
   } else {
    HEAP32[$__parent >> 2] = $$01$i$i$i$i$i;
    $$0 = $$01$i$i$i$i$i;
    return $$0 | 0;
   }
  }
 }
 if (($1 | 0) == (HEAP32[$this >> 2] | 0)) $83 = $3; else {
  $38 = HEAP32[$1 >> 2] | 0;
  if (!$38) {
   $$0$i$i = $1;
   while (1) {
    $44 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if ((HEAP32[$44 >> 2] | 0) == ($$0$i$i | 0)) $$0$i$i = $44; else {
     $$01$i$i = $44;
     break;
    }
   }
  } else {
   $$0$i$i$i = $38;
   while (1) {
    $41 = HEAP32[$$0$i$i$i + 4 >> 2] | 0;
    if (!$41) {
     $$01$i$i = $$0$i$i$i;
     break;
    } else $$0$i$i$i = $41;
   }
  }
  $48 = $$01$i$i + 16 | 0;
  $49 = HEAP8[$48 >> 0] | 0;
  $51 = ($49 & 1) == 0;
  $56 = $51 ? ($49 & 255) >>> 1 : HEAP32[$$01$i$i + 20 >> 2] | 0;
  $57 = HEAP8[$__v >> 0] | 0;
  $59 = ($57 & 1) == 0;
  $64 = $59 ? ($57 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $75 = _memcmp($51 ? $48 + 1 | 0 : HEAP32[$$01$i$i + 24 >> 2] | 0, $59 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0, $64 >>> 0 < $56 >>> 0 ? $64 : $56) | 0;
  if (((($75 | 0) == 0 ? ($56 >>> 0 < $64 >>> 0 ? -2147483648 : 0) : $75) | 0) < 0) $83 = $$01$i$i; else {
   $$0 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) | 0;
   return $$0 | 0;
  }
 }
 if (!(HEAP32[$1 >> 2] | 0)) {
  HEAP32[$__parent >> 2] = $1;
  $$0 = $1;
  return $$0 | 0;
 } else {
  $82 = $83;
  HEAP32[$__parent >> 2] = $82;
  $$0 = $82 + 4 | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0$i$i$i = 0, $$idx1$val$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $22 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $48 = 0, $54 = 0, $55 = 0, $56 = 0, $63 = 0, $65 = 0, $67 = 0, $68 = 0, $80 = 0, $9 = 0, $__v$i$i = 0, $this$idx$val$i$i = 0, $this$idx2$val$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v$i$i = sp;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $this + 20 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($2 >>> 0 < $4 >>> 0) {
  HEAP32[$2 >> 2] = $args;
  HEAP32[$2 + 4 >> 2] = $args1;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($2 + 8 | 0, $args1 + 4 | 0);
  $9 = $2 + 20 | 0;
  $10 = $args1 + 16 | 0;
  HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP8[$2 + 36 >> 0] = 0;
  HEAP32[$2 + 72 >> 2] = 0;
  HEAP32[$2 + 80 >> 2] = 0;
  HEAP32[$2 + 84 >> 2] = 0;
  HEAP32[$2 + 76 >> 2] = $2 + 80;
  HEAP32[$2 + 88 >> 2] = 0;
  HEAP32[$2 + 96 >> 2] = 0;
  HEAP32[$2 + 100 >> 2] = 0;
  HEAP32[$2 + 92 >> 2] = $2 + 96;
  $22 = $2 + 104 | 0;
  HEAP32[$2 + 132 >> 2] = 0;
  HEAP32[$2 + 136 >> 2] = 0;
  HEAP32[$22 >> 2] = 0;
  HEAP32[$22 + 4 >> 2] = 0;
  HEAP32[$22 + 8 >> 2] = 0;
  HEAP32[$22 + 12 >> 2] = 0;
  HEAP32[$22 + 16 >> 2] = 0;
  HEAP32[$22 + 20 >> 2] = 0;
  HEAP32[$2 + 128 >> 2] = $2 + 132;
  HEAP32[$2 + 40 >> 2] = 0;
  HEAP32[$2 + 56 >> 2] = 0;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 144;
  STACKTOP = sp;
  return;
 }
 $this$idx2$val$i$i = HEAP32[$0 >> 2] | 0;
 $36 = (($2 - $this$idx2$val$i$i | 0) / 144 | 0) + 1 | 0;
 if ($36 >>> 0 > 29826161) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($0);
  $$idx1$val$i$i$i$i = HEAP32[$3 >> 2] | 0;
  $this$idx$val$i$i = HEAP32[$0 >> 2] | 0;
 } else {
  $$idx1$val$i$i$i$i = $4;
  $this$idx$val$i$i = $this$idx2$val$i$i;
 }
 $39 = $this$idx$val$i$i;
 $41 = ($$idx1$val$i$i$i$i - $39 | 0) / 144 | 0;
 if ($41 >>> 0 < 14913080) {
  $43 = $41 << 1;
  $$0$i$i$i = $43 >>> 0 < $36 >>> 0 ? $36 : $43;
 } else $$0$i$i$i = 29826161;
 $48 = ((HEAP32[$1 >> 2] | 0) - $39 | 0) / 144 | 0;
 HEAP32[$__v$i$i + 12 >> 2] = 0;
 HEAP32[$__v$i$i + 16 >> 2] = $this + 20;
 if (!$$0$i$i$i) $54 = 0; else $54 = __Znwj($$0$i$i$i * 144 | 0) | 0;
 HEAP32[$__v$i$i >> 2] = $54;
 $55 = $54 + ($48 * 144 | 0) | 0;
 $56 = $__v$i$i + 8 | 0;
 HEAP32[$56 >> 2] = $55;
 HEAP32[$__v$i$i + 4 >> 2] = $55;
 HEAP32[$__v$i$i + 12 >> 2] = $54 + ($$0$i$i$i * 144 | 0);
 HEAP32[$55 >> 2] = $args;
 HEAP32[$54 + ($48 * 144 | 0) + 4 >> 2] = $args1;
 __THREW__ = 0;
 invoke_vii(40, $54 + ($48 * 144 | 0) + 8 | 0, $args1 + 4 | 0);
 $63 = __THREW__;
 __THREW__ = 0;
 if ($63 & 1) {
  $65 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
  ___resumeException($65 | 0);
 }
 $67 = $54 + ($48 * 144 | 0) + 20 | 0;
 $68 = $args1 + 16 | 0;
 HEAP32[$67 >> 2] = HEAP32[$68 >> 2];
 HEAP32[$67 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
 HEAP32[$67 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
 HEAP32[$67 + 12 >> 2] = HEAP32[$68 + 12 >> 2];
 HEAP8[$54 + ($48 * 144 | 0) + 36 >> 0] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 72 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 80 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 84 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 76 >> 2] = $54 + ($48 * 144 | 0) + 80;
 HEAP32[$54 + ($48 * 144 | 0) + 88 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 96 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 100 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 92 >> 2] = $54 + ($48 * 144 | 0) + 96;
 $80 = $54 + ($48 * 144 | 0) + 104 | 0;
 HEAP32[$54 + ($48 * 144 | 0) + 132 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 136 >> 2] = 0;
 HEAP32[$80 >> 2] = 0;
 HEAP32[$80 + 4 >> 2] = 0;
 HEAP32[$80 + 8 >> 2] = 0;
 HEAP32[$80 + 12 >> 2] = 0;
 HEAP32[$80 + 16 >> 2] = 0;
 HEAP32[$80 + 20 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 128 >> 2] = $54 + ($48 * 144 | 0) + 132;
 HEAP32[$54 + ($48 * 144 | 0) + 40 >> 2] = 0;
 HEAP32[$54 + ($48 * 144 | 0) + 56 >> 2] = 0;
 HEAP32[$56 >> 2] = $54 + (($48 + 1 | 0) * 144 | 0);
 __ZNSt3__16vectorIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $__v$i$i);
 __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($__v$i$i);
 STACKTOP = sp;
 return;
}

function __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_($__root, $__x) {
 $__root = $__root | 0;
 $__x = $__x | 0;
 var $$06 = 0, $$06$lcssa57 = 0, $$06$lcssa58 = 0, $$lcssa = 0, $$lcssa59 = 0, $$lcssa60 = 0, $$lcssa61 = 0, $$lcssa62 = 0, $$lcssa63 = 0, $$lcssa64 = 0, $$lcssa65 = 0, $$lcssa66 = 0, $$lcssa67 = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $30 = 0, $31 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $47 = 0, $5 = 0, $52 = 0, $62 = 0, $63 = 0, $64 = 0, $67 = 0, $68 = 0, $69 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $82 = 0, $85 = 0, label = 0, $$06$looptemp = 0;
 $0 = ($__x | 0) == ($__root | 0);
 HEAP8[$__x + 12 >> 0] = $0 & 1;
 if ($0) return; else $$06 = $__x;
 while (1) {
  $4 = HEAP32[$$06 + 8 >> 2] | 0;
  $5 = $4 + 12 | 0;
  if (HEAP8[$5 >> 0] | 0) {
   label = 37;
   break;
  }
  $8 = $4 + 8 | 0;
  $$06$looptemp = $$06;
  $$06 = HEAP32[$8 >> 2] | 0;
  $10 = HEAP32[$$06 >> 2] | 0;
  if (($10 | 0) == ($4 | 0)) {
   $13 = HEAP32[$$06 + 4 >> 2] | 0;
   if (!$13) {
    $$06$lcssa58 = $$06$looptemp;
    $$lcssa60 = $4;
    $$lcssa61 = $8;
    $$lcssa63 = $8;
    $$lcssa65 = $$06;
    $$lcssa67 = $$06;
    label = 7;
    break;
   }
   $15 = $13 + 12 | 0;
   if (HEAP8[$15 >> 0] | 0) {
    $$06$lcssa58 = $$06$looptemp;
    $$lcssa60 = $4;
    $$lcssa61 = $8;
    $$lcssa63 = $8;
    $$lcssa65 = $$06;
    $$lcssa67 = $$06;
    label = 7;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$06 + 12 >> 0] = ($$06 | 0) == ($__root | 0) & 1;
   HEAP8[$15 >> 0] = 1;
  } else {
   if (!$10) {
    $$06$lcssa57 = $$06$looptemp;
    $$lcssa = $8;
    $$lcssa59 = $4;
    $$lcssa62 = $8;
    $$lcssa64 = $$06;
    $$lcssa66 = $$06;
    label = 24;
    break;
   }
   $52 = $10 + 12 | 0;
   if (HEAP8[$52 >> 0] | 0) {
    $$06$lcssa57 = $$06$looptemp;
    $$lcssa = $8;
    $$lcssa59 = $4;
    $$lcssa62 = $8;
    $$lcssa64 = $$06;
    $$lcssa66 = $$06;
    label = 24;
    break;
   }
   HEAP8[$5 >> 0] = 1;
   HEAP8[$$06 + 12 >> 0] = ($$06 | 0) == ($__root | 0) & 1;
   HEAP8[$52 >> 0] = 1;
  }
  if (($$06 | 0) == ($__root | 0)) {
   label = 37;
   break;
  }
 }
 if ((label | 0) == 7) {
  if ((HEAP32[$$lcssa60 >> 2] | 0) == ($$06$lcssa58 | 0)) {
   $36 = $$lcssa60;
   $38 = $$lcssa67;
  } else {
   $24 = $$lcssa60 + 4 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   HEAP32[$24 >> 2] = $26;
   if (!$26) $30 = $$lcssa65; else {
    HEAP32[$26 + 8 >> 2] = $$lcssa60;
    $30 = HEAP32[$$lcssa61 >> 2] | 0;
   }
   $29 = $25 + 8 | 0;
   HEAP32[$29 >> 2] = $30;
   $31 = HEAP32[$$lcssa63 >> 2] | 0;
   if ((HEAP32[$31 >> 2] | 0) == ($$lcssa60 | 0)) HEAP32[$31 >> 2] = $25; else HEAP32[$31 + 4 >> 2] = $25;
   HEAP32[$25 >> 2] = $$lcssa60;
   HEAP32[$$lcssa61 >> 2] = $25;
   $36 = $25;
   $38 = HEAP32[$29 >> 2] | 0;
  }
  HEAP8[$36 + 12 >> 0] = 1;
  HEAP8[$38 + 12 >> 0] = 0;
  $39 = HEAP32[$38 >> 2] | 0;
  $40 = $39 + 4 | 0;
  $41 = HEAP32[$40 >> 2] | 0;
  HEAP32[$38 >> 2] = $41;
  if ($41) HEAP32[$41 + 8 >> 2] = $38;
  $44 = $38 + 8 | 0;
  HEAP32[$39 + 8 >> 2] = HEAP32[$44 >> 2];
  $47 = HEAP32[$44 >> 2] | 0;
  if ((HEAP32[$47 >> 2] | 0) == ($38 | 0)) HEAP32[$47 >> 2] = $39; else HEAP32[$47 + 4 >> 2] = $39;
  HEAP32[$40 >> 2] = $38;
  HEAP32[$44 >> 2] = $39;
  return;
 } else if ((label | 0) == 24) {
  if ((HEAP32[$$lcssa59 >> 2] | 0) == ($$06$lcssa57 | 0)) {
   $62 = HEAP32[$$lcssa59 >> 2] | 0;
   $63 = $62 + 4 | 0;
   $64 = HEAP32[$63 >> 2] | 0;
   HEAP32[$$lcssa59 >> 2] = $64;
   if (!$64) $68 = $$lcssa64; else {
    HEAP32[$64 + 8 >> 2] = $$lcssa59;
    $68 = HEAP32[$$lcssa >> 2] | 0;
   }
   $67 = $62 + 8 | 0;
   HEAP32[$67 >> 2] = $68;
   $69 = HEAP32[$$lcssa62 >> 2] | 0;
   if ((HEAP32[$69 >> 2] | 0) == ($$lcssa59 | 0)) HEAP32[$69 >> 2] = $62; else HEAP32[$69 + 4 >> 2] = $62;
   HEAP32[$63 >> 2] = $$lcssa59;
   HEAP32[$$lcssa >> 2] = $62;
   $74 = $62;
   $76 = HEAP32[$67 >> 2] | 0;
  } else {
   $74 = $$lcssa59;
   $76 = $$lcssa66;
  }
  HEAP8[$74 + 12 >> 0] = 1;
  HEAP8[$76 + 12 >> 0] = 0;
  $77 = $76 + 4 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  $79 = HEAP32[$78 >> 2] | 0;
  HEAP32[$77 >> 2] = $79;
  if ($79) HEAP32[$79 + 8 >> 2] = $76;
  $82 = $76 + 8 | 0;
  HEAP32[$78 + 8 >> 2] = HEAP32[$82 >> 2];
  $85 = HEAP32[$82 >> 2] | 0;
  if ((HEAP32[$85 >> 2] | 0) == ($76 | 0)) HEAP32[$85 >> 2] = $78; else HEAP32[$85 + 4 >> 2] = $78;
  HEAP32[$78 >> 2] = $76;
  HEAP32[$82 >> 2] = $78;
  return;
 } else if ((label | 0) == 37) return;
}

function __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$lcssa = 0, $$pre = 0, $$pre$phiZ2D = 0, $101 = 0, $107 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $3 = 0, $34 = 0, $40 = 0, $48 = 0, $50 = 0, $57 = 0, $67 = 0, $75 = 0, $77 = 0, $79 = 0, $85 = 0, $88 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 if (!($mode & 4)) {
  $$pre = $to;
  $$pre$phiZ2D = $frm_end;
 } else {
  $2 = HEAP32[$frm_nxt >> 2] | 0;
  $3 = $frm_end;
  if (($3 - $2 | 0) > 2) if ((HEAP8[$2 >> 0] | 0) == -17) if ((HEAP8[$2 + 1 >> 0] | 0) == -69) if ((HEAP8[$2 + 2 >> 0] | 0) == -65) {
   HEAP32[$frm_nxt >> 2] = $2 + 3;
   $$pre = HEAP32[$to_nxt >> 2] | 0;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  } else {
   $$pre = $to;
   $$pre$phiZ2D = $3;
  }
 }
 $16 = HEAP32[$frm_nxt >> 2] | 0;
 $17 = $16 >>> 0 < $frm_end >>> 0;
 L9 : do if ($17 & $$pre >>> 0 < $to_end >>> 0) {
  $21 = $16;
  $25 = $$pre;
  while (1) {
   $20 = HEAP8[$21 >> 0] | 0;
   $22 = $20 & 255;
   do if ($20 << 24 >> 24 > -1) {
    if ($22 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L9;
    }
    HEAP32[$25 >> 2] = $22;
    HEAP32[$frm_nxt >> 2] = $21 + 1;
   } else {
    if (($20 & 255) < 194) {
     $$0 = 2;
     break L9;
    }
    if (($20 & 255) < 224) {
     if (($$pre$phiZ2D - $21 | 0) < 2) {
      $$0 = 1;
      break L9;
     }
     $34 = HEAPU8[$21 + 1 >> 0] | 0;
     if (($34 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $40 = $34 & 63 | $22 << 6 & 1984;
     if ($40 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP32[$25 >> 2] = $40;
     HEAP32[$frm_nxt >> 2] = $21 + 2;
     break;
    }
    if (($20 & 255) < 240) {
     if (($$pre$phiZ2D - $21 | 0) < 3) {
      $$0 = 1;
      break L9;
     }
     $48 = HEAP8[$21 + 1 >> 0] | 0;
     $50 = HEAP8[$21 + 2 >> 0] | 0;
     switch ($22 | 0) {
     case 224:
      {
       if (($48 & -32) << 24 >> 24 != -96) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     case 237:
      {
       if (($48 & -32) << 24 >> 24 != -128) {
        $$0 = 2;
        break L9;
       }
       break;
      }
     default:
      if (($48 & -64) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
     }
     $57 = $50 & 255;
     if (($57 & 192 | 0) != 128) {
      $$0 = 2;
      break L9;
     }
     $67 = ($48 & 255) << 6 & 4032 | $22 << 12 & 61440 | $57 & 63;
     if ($67 >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L9;
     }
     HEAP32[$25 >> 2] = $67;
     HEAP32[$frm_nxt >> 2] = $21 + 3;
     break;
    }
    if (($20 & 255) >= 245) {
     $$0 = 2;
     break L9;
    }
    if (($$pre$phiZ2D - $21 | 0) < 4) {
     $$0 = 1;
     break L9;
    }
    $75 = HEAP8[$21 + 1 >> 0] | 0;
    $77 = HEAP8[$21 + 2 >> 0] | 0;
    $79 = HEAP8[$21 + 3 >> 0] | 0;
    switch ($22 | 0) {
    case 240:
     {
      if (($75 + 112 & 255) >= 48) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    case 244:
     {
      if (($75 & -16) << 24 >> 24 != -128) {
       $$0 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($75 & -64) << 24 >> 24 != -128) {
      $$0 = 2;
      break L9;
     }
    }
    $85 = $77 & 255;
    if (($85 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    $88 = $79 & 255;
    if (($88 & 192 | 0) != 128) {
     $$0 = 2;
     break L9;
    }
    $101 = ($75 & 255) << 12 & 258048 | $22 << 18 & 1835008 | $85 << 6 & 4032 | $88 & 63;
    if ($101 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L9;
    }
    HEAP32[$25 >> 2] = $101;
    HEAP32[$frm_nxt >> 2] = $21 + 4;
   } while (0);
   $25 = (HEAP32[$to_nxt >> 2] | 0) + 4 | 0;
   HEAP32[$to_nxt >> 2] = $25;
   $21 = HEAP32[$frm_nxt >> 2] | 0;
   $107 = $21 >>> 0 < $frm_end >>> 0;
   if (!($107 & $25 >>> 0 < $to_end >>> 0)) {
    $$lcssa = $107;
    label = 38;
    break;
   }
  }
 } else {
  $$lcssa = $17;
  label = 38;
 } while (0);
 if ((label | 0) == 38) $$0 = $$lcssa & 1;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, $curr, $start_from, $counter, $self) {
 $f = $f | 0;
 $root = $root | 0;
 $curr = $curr | 0;
 $start_from = $start_from | 0;
 $counter = $counter | 0;
 $self = $self | 0;
 var $$0 = 0, $$0$ph$lcssa$i$i$i = 0, $$0$ph$lcssa$i$i$i9 = 0, $$0$ph6$i$i$i = 0, $$0$ph6$i$i$i2 = 0, $$01$ph5$i$i$i = 0, $$01$ph5$i$i$i3 = 0, $$013$i$i$i = 0, $$013$i$i$i$lcssa = 0, $$013$i$i$i5 = 0, $$013$i$i$i5$lcssa = 0, $0 = 0, $10 = 0, $12 = 0, $15 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $36 = 0, $38 = 0, $39 = 0, $50 = 0, $6 = 0, $counter2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $counter2 = sp;
 $0 = ($curr | 0) == 0;
 do if ($0) {
  $50 = HEAP32[$counter >> 2] | 0;
  label = 28;
 } else {
  $2 = ___dynamic_cast($curr, 432, 456, 0) | 0;
  if ($2) {
   $6 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 12 >> 2] | 0, $start_from, $counter, $self) | 0;
   if ($6) {
    $$0 = $6;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $10 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $root, HEAP32[$2 + 8 >> 2] | 0, $start_from, $counter, $self) | 0;
   if (!$10) break; else $$0 = $10;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $12 = ___dynamic_cast($curr, 432, 472, 0) | 0;
  if ($12) {
   HEAP32[$counter2 >> 2] = 0;
   $15 = HEAP32[$12 + 8 >> 2] | 0;
   $18 = __ZN12_GLOBAL__N_111Interpreter10findObjectEPK10IdentifierPNS_10HeapObjectES5_jRjRS5_($f, $15, $15, HEAP32[$12 + 12 >> 2] | 0, $counter2, $self) | 0;
   if (!$18) break;
   HEAP32[$counter >> 2] = HEAP32[$counter2 >> 2];
   $$0 = $18;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = HEAP32[$counter >> 2] | 0;
  if ($0 | $21 >>> 0 < $start_from >>> 0) {
   $50 = $21;
   label = 28;
  } else {
   $23 = ___dynamic_cast($curr, 432, 416, 0) | 0;
   if ($23) {
    $25 = $23 + 24 | 0;
    $26 = HEAP32[$25 >> 2] | 0;
    if (!$26) {
     $50 = $21;
     label = 28;
     break;
    } else {
     $$0$ph6$i$i$i2 = $25;
     $$01$ph5$i$i$i3 = $26;
    }
    L19 : while (1) {
     $$013$i$i$i5 = $$01$ph5$i$i$i3;
     while (1) {
      if ((HEAP32[$$013$i$i$i5 + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
       $$013$i$i$i5$lcssa = $$013$i$i$i5;
       break;
      }
      $$013$i$i$i5 = HEAP32[$$013$i$i$i5 + 4 >> 2] | 0;
      if (!$$013$i$i$i5) {
       $$0$ph$lcssa$i$i$i9 = $$0$ph6$i$i$i2;
       break L19;
      }
     }
     $$01$ph5$i$i$i3 = HEAP32[$$013$i$i$i5$lcssa >> 2] | 0;
     if (!$$01$ph5$i$i$i3) {
      $$0$ph$lcssa$i$i$i9 = $$013$i$i$i5$lcssa;
      break;
     } else $$0$ph6$i$i$i2 = $$013$i$i$i5$lcssa;
    }
    if (($$0$ph$lcssa$i$i$i9 | 0) == ($25 | 0)) {
     $50 = $21;
     label = 28;
     break;
    }
    if ((HEAP32[$$0$ph$lcssa$i$i$i9 + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
     $50 = $21;
     label = 28;
     break;
    }
    HEAP32[$self >> 2] = $root;
    $$0 = $23;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $36 = ___dynamic_cast($curr, 432, 488, 0) | 0;
   if (!$36) {
    $50 = $21;
    label = 28;
   } else {
    $38 = $36 + 32 | 0;
    $39 = HEAP32[$38 >> 2] | 0;
    if (!$39) {
     $50 = $21;
     label = 28;
    } else {
     $$0$ph6$i$i$i = $38;
     $$01$ph5$i$i$i = $39;
     L31 : while (1) {
      $$013$i$i$i = $$01$ph5$i$i$i;
      while (1) {
       if ((HEAP32[$$013$i$i$i + 16 >> 2] | 0) >>> 0 >= $f >>> 0) {
        $$013$i$i$i$lcssa = $$013$i$i$i;
        break;
       }
       $$013$i$i$i = HEAP32[$$013$i$i$i + 4 >> 2] | 0;
       if (!$$013$i$i$i) {
        $$0$ph$lcssa$i$i$i = $$0$ph6$i$i$i;
        break L31;
       }
      }
      $$01$ph5$i$i$i = HEAP32[$$013$i$i$i$lcssa >> 2] | 0;
      if (!$$01$ph5$i$i$i) {
       $$0$ph$lcssa$i$i$i = $$013$i$i$i$lcssa;
       break;
      } else $$0$ph6$i$i$i = $$013$i$i$i$lcssa;
     }
     if (($$0$ph$lcssa$i$i$i | 0) == ($38 | 0)) {
      $50 = $21;
      label = 28;
     } else if ((HEAP32[$$0$ph$lcssa$i$i$i + 16 >> 2] | 0) >>> 0 > $f >>> 0) {
      $50 = $21;
      label = 28;
     } else {
      HEAP32[$self >> 2] = $root;
      $$0 = $36;
      STACKTOP = sp;
      return $$0 | 0;
     }
    }
   }
  }
 } while (0);
 if ((label | 0) == 28) HEAP32[$counter >> 2] = $50 + 1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $52 = 0, $54 = 0, $55 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 48 | 0;
 $$byval_copy = sp + 16 | 0;
 $__lv = sp + 4 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 52 | 0;
 $2 = sp;
 $3 = sp + 12 | 0;
 $__names = sp + 24 | 0;
 $4 = sp + 20 | 0;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$1 >> 2];
  $14 = FUNCTION_TABLE_iiiiiii[$11 & 63]($this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv) | 0;
  HEAP32[$__b >> 2] = $14;
  switch (HEAP32[$__lv >> 2] | 0) {
  case 0:
   {
    HEAP8[$__v >> 0] = 0;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  case 1:
   {
    HEAP8[$__v >> 0] = 1;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  default:
   {
    HEAP8[$__v >> 0] = 1;
    HEAP32[$__err >> 2] = 4;
    $$sroa$01$0 = $14;
    break L1;
   }
  }
 } else {
  $16 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$2 >> 2] = $16;
  __THREW__ = 0;
  $17 = invoke_iii(22, $2 | 0, 11156) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  do if ($18 & 1) {
   $44 = ___cxa_find_matching_catch() | 0;
   $45 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv($16) | 0;
   $$0 = $44;
   $$03 = $45;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv($16) | 0;
   $20 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
   HEAP32[$3 >> 2] = $20;
   __THREW__ = 0;
   $21 = invoke_iii(22, $3 | 0, 11312) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $46 = ___cxa_find_matching_catch() | 0;
    $47 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv($20) | 0;
    $$0 = $46;
    $$03 = $47;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv($20) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) $$02 = $__names; else {
    $29 = $__names + 12 | 0;
    __THREW__ = 0;
    invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $29 | 0, $21 | 0);
    $33 = __THREW__;
    __THREW__ = 0;
    if ($33 & 1) $$02 = $29; else {
     HEAP32[$4 >> 2] = HEAP32[$__e >> 2];
     __THREW__ = 0;
     HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
     $37 = invoke_iiiiiiii(8, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
     $38 = __THREW__;
     __THREW__ = 0;
     if ($38 & 1) {
      $54 = ___cxa_find_matching_catch() | 0;
      $55 = tempRet0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
      $$0 = $54;
      $$03 = $55;
      break;
     } else {
      HEAP8[$__v >> 0] = ($37 | 0) == ($__names | 0) & 1;
      $42 = HEAP32[$__b >> 2] | 0;
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__names);
      $$sroa$01$0 = $42;
      break L1;
     }
    }
   }
   $48 = ___cxa_find_matching_catch() | 0;
   $49 = tempRet0;
   if (($__names | 0) == ($$02 | 0)) {
    $$0 = $48;
    $$03 = $49;
   } else {
    $52 = $$02;
    do {
     $52 = $52 + -12 | 0;
     __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($52);
    } while (($52 | 0) != ($__names | 0));
    $$0 = $48;
    $$03 = $49;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return $$sroa$01$0 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$02 = 0, $$03 = 0, $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$01$0 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $52 = 0, $54 = 0, $55 = 0, $__lv = 0, $__names = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy2 = sp + 48 | 0;
 $$byval_copy = sp + 16 | 0;
 $__lv = sp + 4 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 52 | 0;
 $2 = sp;
 $3 = sp + 12 | 0;
 $__names = sp + 24 | 0;
 $4 = sp + 20 | 0;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  HEAP32[$__lv >> 2] = -1;
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$1 >> 2];
  $14 = FUNCTION_TABLE_iiiiiii[$11 & 63]($this, $$byval_copy, $$byval_copy2, $__iob, $__err, $__lv) | 0;
  HEAP32[$__b >> 2] = $14;
  switch (HEAP32[$__lv >> 2] | 0) {
  case 0:
   {
    HEAP8[$__v >> 0] = 0;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  case 1:
   {
    HEAP8[$__v >> 0] = 1;
    $$sroa$01$0 = $14;
    break L1;
    break;
   }
  default:
   {
    HEAP8[$__v >> 0] = 1;
    HEAP32[$__err >> 2] = 4;
    $$sroa$01$0 = $14;
    break L1;
   }
  }
 } else {
  $16 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$2 >> 2] = $16;
  __THREW__ = 0;
  $17 = invoke_iii(22, $2 | 0, 11164) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  do if ($18 & 1) {
   $44 = ___cxa_find_matching_catch() | 0;
   $45 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv($16) | 0;
   $$0 = $44;
   $$03 = $45;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv($16) | 0;
   $20 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
   HEAP32[$3 >> 2] = $20;
   __THREW__ = 0;
   $21 = invoke_iii(22, $3 | 0, 11304) | 0;
   $22 = __THREW__;
   __THREW__ = 0;
   if ($22 & 1) {
    $46 = ___cxa_find_matching_catch() | 0;
    $47 = tempRet0;
    __ZNSt3__114__shared_count16__release_sharedEv($20) | 0;
    $$0 = $46;
    $$03 = $47;
    break;
   }
   __ZNSt3__114__shared_count16__release_sharedEv($20) | 0;
   __THREW__ = 0;
   invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $__names | 0, $21 | 0);
   $27 = __THREW__;
   __THREW__ = 0;
   if ($27 & 1) $$02 = $__names; else {
    $29 = $__names + 12 | 0;
    __THREW__ = 0;
    invoke_vii(HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] | 0, $29 | 0, $21 | 0);
    $33 = __THREW__;
    __THREW__ = 0;
    if ($33 & 1) $$02 = $29; else {
     HEAP32[$4 >> 2] = HEAP32[$__e >> 2];
     __THREW__ = 0;
     HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
     $37 = invoke_iiiiiiii(7, $__b | 0, $$byval_copy2 | 0, $__names | 0, $__names + 24 | 0, $17 | 0, $__err | 0, 1) | 0;
     $38 = __THREW__;
     __THREW__ = 0;
     if ($38 & 1) {
      $54 = ___cxa_find_matching_catch() | 0;
      $55 = tempRet0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
      $$0 = $54;
      $$03 = $55;
      break;
     } else {
      HEAP8[$__v >> 0] = ($37 | 0) == ($__names | 0) & 1;
      $42 = HEAP32[$__b >> 2] | 0;
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names + 12 | 0);
      __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__names);
      $$sroa$01$0 = $42;
      break L1;
     }
    }
   }
   $48 = ___cxa_find_matching_catch() | 0;
   $49 = tempRet0;
   if (($__names | 0) == ($$02 | 0)) {
    $$0 = $48;
    $$03 = $49;
   } else {
    $52 = $$02;
    do {
     $52 = $52 + -12 | 0;
     __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($52);
    } while (($52 | 0) != ($__names | 0));
    $$0 = $48;
    $$03 = $49;
   }
  } while (0);
  ___resumeException($$0 | 0);
 } while (0);
 STACKTOP = sp;
 return $$sroa$01$0 | 0;
}

function __ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_($this, $lr, $binds, $body) {
 $this = $this | 0;
 $lr = $lr | 0;
 $binds = $binds | 0;
 $body = $body | 0;
 var $$0$i$i$i$i$i = 0, $$0$i$i$i$i$i$i = 0, $$01$i$i$i$i$i = 0, $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $39 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $54 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $8 = 0, $9 = 0, $__parent$i$i$i$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i$i$i$i$i = sp + 4 | 0;
 $0 = sp;
 HEAP32[$this >> 2] = 3192;
 $1 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($1, $lr);
 $2 = $this + 16 | 0;
 $3 = $lr + 12 | 0;
 HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$2 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 10;
 $5 = $this + 36 | 0;
 HEAP32[$5 >> 2] = 0;
 $6 = $this + 40 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 3260;
 $8 = $this + 48 | 0;
 $9 = $this + 52 | 0;
 HEAP32[$9 >> 2] = 0;
 $10 = $this + 56 | 0;
 HEAP32[$10 >> 2] = 0;
 $11 = $this + 52 | 0;
 HEAP32[$8 >> 2] = $11;
 $12 = HEAP32[$binds >> 2] | 0;
 $13 = $binds + 4 | 0;
 if (($12 | 0) == ($13 | 0)) {
  $58 = $this + 60 | 0;
  HEAP32[$58 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $15 = $11;
 $20 = $12;
 $48 = $12;
 while (1) {
  __THREW__ = 0;
  $16 = invoke_ii(67, 24) | 0;
  $17 = __THREW__;
  __THREW__ = 0;
  if ($17 & 1) break;
  $21 = $16 + 16 | 0;
  $22 = $20 + 16 | 0;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $21;
  HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$28 + 4 >> 2] = $27;
  HEAP32[$0 >> 2] = $15;
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $32 = __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_SH_EEiEESK_RKT_($8, $$byval_copy, $__parent$i$i$i$i$i, $21) | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  if (!$33) {
   $35 = HEAP32[$__parent$i$i$i$i$i >> 2] | 0;
   HEAP32[$16 >> 2] = 0;
   HEAP32[$16 + 4 >> 2] = 0;
   HEAP32[$16 + 8 >> 2] = $35;
   HEAP32[$32 >> 2] = $16;
   $39 = HEAP32[HEAP32[$8 >> 2] >> 2] | 0;
   if (!$39) $43 = $16; else {
    HEAP32[$8 >> 2] = $39;
    $43 = HEAP32[$32 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$9 >> 2] | 0, $43);
   HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
  } else if (($33 | 0) != ($16 | 0)) __ZdlPv($16);
  $49 = HEAP32[$48 + 4 >> 2] | 0;
  if (!$49) {
   $$0$i$i$i$i$i = $48;
   while (1) {
    $54 = HEAP32[$$0$i$i$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$54 >> 2] | 0) == ($$0$i$i$i$i$i | 0)) {
     $$01$i$i$i$i$i = $54;
     break;
    } else $$0$i$i$i$i$i = $54;
   }
  } else {
   $$0$i$i$i$i$i$i = $49;
   while (1) {
    $51 = HEAP32[$$0$i$i$i$i$i$i >> 2] | 0;
    if (!$51) {
     $$01$i$i$i$i$i = $$0$i$i$i$i$i$i;
     break;
    } else $$0$i$i$i$i$i$i = $51;
   }
  }
  if (($$01$i$i$i$i$i | 0) == ($13 | 0)) {
   label = 14;
   break;
  } else {
   $20 = $$01$i$i$i$i$i;
   $48 = $$01$i$i$i$i$i;
  }
 }
 if ((label | 0) == 14) {
  $58 = $this + 60 | 0;
  HEAP32[$58 >> 2] = $body;
  STACKTOP = sp;
  return;
 }
 $59 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($8, HEAP32[$11 >> 2] | 0);
 HEAP32[$this >> 2] = 3192;
 $62 = HEAP32[$5 >> 2] | 0;
 if (!$62) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  ___resumeException($59 | 0);
 }
 $65 = HEAP32[$6 >> 2] | 0;
 if (($65 | 0) != ($62 | 0)) HEAP32[$6 >> 2] = $65 + (~(($65 + -4 - $62 | 0) >>> 2) << 2);
 __ZdlPv($62);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($59 | 0);
}

function __ZN12_GLOBAL__N_111InterpreterD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $$idx4$val$i$i = 0, $$idx5$val$i$i = 0, $$idx5$val19$i$i = 0, $$idx6$i$i = 0, $$idx6$val$i$i = 0, $$idx6$val$pre$i$i = 0, $$idx6$val11$i$i = 0, $$idx6$val14$i$i = 0, $$idx7$i$i = 0, $$idx7$val$i$i = 0, $$idx7$val12$i$i = 0, $$lcssa$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $2 = 0, $24 = 0, $26 = 0, $29 = 0, $33 = 0, $42 = 0, $47 = 0, $49 = 0, $5 = 0, $53 = 0, $58 = 0, $6 = 0, $61 = 0, $9 = 0, $i$013$i$i = 0, $i$1$i$i = 0, $scevgep4$i$i$i$i$i = 0;
 $0 = $this + 88 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 92 | 0;
 if (($1 | 0) != ($2 | 0)) {
  $5 = $1;
  while (1) {
   $6 = HEAP32[$5 + 40 >> 2] | 0;
   if ($6) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    __ZdlPv($6);
   }
   $9 = HEAP32[$5 + 4 >> 2] | 0;
   if (!$9) {
    $$0$i$i$i = $5;
    while (1) {
     $14 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$14 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$01$i$i$i = $14;
      break;
     } else $$0$i$i$i = $14;
    }
   } else {
    $$0$i$i$i$i = $9;
    while (1) {
     $11 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$11) {
      $$01$i$i$i = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $11;
    }
   }
   if (($$01$i$i$i | 0) == ($2 | 0)) break; else $5 = $$01$i$i$i;
  }
 }
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 100 | 0, HEAP32[$this + 104 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($0, HEAP32[$2 >> 2] | 0);
 HEAP32[$this + 56 >> 2] = 3580;
 __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this + 68 | 0);
 $24 = $this + 16 | 0;
 $26 = (HEAP8[$24 >> 0] | 0) + 1 << 24 >> 24;
 HEAP8[$24 >> 0] = $26;
 $$idx6$i$i = $this + 20 | 0;
 $$idx6$val11$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
 $$idx7$i$i = $this + 24 | 0;
 $$idx7$val12$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
 L16 : do if (($$idx7$val12$i$i | 0) == ($$idx6$val11$i$i | 0)) {
  $$lcssa$i$i = 0;
  $58 = $$idx6$val11$i$i;
  $61 = $$idx6$val11$i$i;
 } else {
  $$idx5$val19$i$i = $$idx7$val12$i$i;
  $$idx6$val14$i$i = $$idx6$val11$i$i;
  $33 = $26;
  $i$013$i$i = 0;
  while (1) {
   $29 = HEAP32[$$idx6$val14$i$i + ($i$013$i$i << 2) >> 2] | 0;
   if ((HEAP8[$29 + 4 >> 0] | 0) == $33 << 24 >> 24) {
    $$idx6$val$i$i = $$idx6$val14$i$i;
    $$idx7$val$i$i = $$idx5$val19$i$i;
    $i$1$i$i = $i$013$i$i;
   } else {
    if (!$29) {
     $$idx4$val$i$i = $$idx6$val14$i$i;
     $$idx5$val$i$i = $$idx5$val19$i$i;
    } else {
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$29 >> 2] | 0) + 4 >> 2] & 255]($29);
     $$idx4$val$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $$idx5$val$i$i = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $42 = ($$idx5$val$i$i - $$idx4$val$i$i >> 2) + -1 | 0;
    if (($i$013$i$i | 0) == ($42 | 0)) {
     $$idx6$val$pre$i$i = $$idx4$val$i$i;
     $47 = $$idx5$val$i$i;
    } else {
     HEAP32[$$idx4$val$i$i + ($i$013$i$i << 2) >> 2] = HEAP32[$$idx4$val$i$i + ($42 << 2) >> 2];
     $$idx6$val$pre$i$i = HEAP32[$$idx6$i$i >> 2] | 0;
     $47 = HEAP32[$$idx7$i$i >> 2] | 0;
    }
    $scevgep4$i$i$i$i$i = $47 + -4 | 0;
    HEAP32[$$idx7$i$i >> 2] = $scevgep4$i$i$i$i$i;
    $$idx6$val$i$i = $$idx6$val$pre$i$i;
    $$idx7$val$i$i = $scevgep4$i$i$i$i$i;
    $i$1$i$i = $i$013$i$i + -1 | 0;
   }
   $49 = $i$1$i$i + 1 | 0;
   $53 = $$idx7$val$i$i - $$idx6$val$i$i >> 2;
   if ($49 >>> 0 >= $53 >>> 0) {
    $$lcssa$i$i = $53;
    $58 = $$idx6$val$i$i;
    $61 = $$idx7$val$i$i;
    break L16;
   }
   $$idx5$val19$i$i = $$idx7$val$i$i;
   $$idx6$val14$i$i = $$idx6$val$i$i;
   $33 = HEAP8[$24 >> 0] | 0;
   $i$013$i$i = $49;
  }
 } while (0);
 HEAP32[$this + 36 >> 2] = $$lcssa$i$i;
 HEAP32[$this + 32 >> 2] = $$lcssa$i$i;
 if (!$58) return;
 if (($61 | 0) != ($58 | 0)) HEAP32[$$idx7$i$i >> 2] = $61 + (~(($61 + -4 - $58 | 0) >>> 2) << 2);
 __ZdlPv($58);
 return;
}

function __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $10 = 0, $102 = 0, $107 = 0, $110 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $14 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $50 = 0, $55 = 0, $6 = 0, $61 = 0, $63 = 0, $70 = 0, $8 = 0, $80 = 0, $84 = 0, $93 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $10 = $frm_end;
  $$pre = HEAP32[$frm_nxt >> 2] | 0;
  if ($$pre >>> 0 < $frm_end >>> 0) {
   $13 = $$pre;
   while (1) {
    $12 = HEAP16[$13 >> 1] | 0;
    $14 = $12 & 65535;
    if ($14 >>> 0 > $Maxcode >>> 0) {
     $$0 = 2;
     break L4;
    }
    do if (($12 & 65535) < 128) {
     $17 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $17 | 0) < 1) {
      $$0 = 1;
      break L4;
     }
     HEAP32[$to_nxt >> 2] = $17 + 1;
     HEAP8[$17 >> 0] = $12;
    } else {
     if (($12 & 65535) < 2048) {
      $24 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $24 | 0) < 2) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $24 + 1;
      HEAP8[$24 >> 0] = $14 >>> 6 | 192;
      $35 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $35 + 1;
      HEAP8[$35 >> 0] = $14 & 63 | 128;
      break;
     }
     if (($12 & 65535) < 55296) {
      $38 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $38 | 0) < 3) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $38 + 1;
      HEAP8[$38 >> 0] = $14 >>> 12 | 224;
      $50 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $50 + 1;
      HEAP8[$50 >> 0] = $14 >>> 6 & 63 | 128;
      $55 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $55 + 1;
      HEAP8[$55 >> 0] = $14 & 63 | 128;
      break;
     }
     if (($12 & 65535) >= 56320) {
      if (($12 & 65535) < 57344) {
       $$0 = 2;
       break L4;
      }
      $110 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $110 | 0) < 3) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $110 + 1;
      HEAP8[$110 >> 0] = $14 >>> 12 | 224;
      $122 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $122 + 1;
      HEAP8[$122 >> 0] = $14 >>> 6 & 63 | 128;
      $127 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $127 + 1;
      HEAP8[$127 >> 0] = $14 & 63 | 128;
      break;
     }
     if (($10 - $13 | 0) < 4) {
      $$0 = 1;
      break L4;
     }
     $61 = $13 + 2 | 0;
     $63 = HEAPU16[$61 >> 1] | 0;
     if (($63 & 64512 | 0) != 56320) {
      $$0 = 2;
      break L4;
     }
     if (($$pre1 - (HEAP32[$to_nxt >> 2] | 0) | 0) < 4) {
      $$0 = 1;
      break L4;
     }
     $70 = $14 & 960;
     if ((($70 << 10) + 65536 | $14 << 10 & 64512 | $63 & 1023) >>> 0 > $Maxcode >>> 0) {
      $$0 = 2;
      break L4;
     }
     HEAP32[$frm_nxt >> 2] = $61;
     $80 = ($70 >>> 6) + 1 | 0;
     $84 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $84 + 1;
     HEAP8[$84 >> 0] = $80 >>> 2 | 240;
     $93 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $93 + 1;
     HEAP8[$93 >> 0] = $14 >>> 2 & 15 | $80 << 4 & 48 | 128;
     $102 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $102 + 1;
     HEAP8[$102 >> 0] = $14 << 4 & 48 | $63 >>> 6 & 15 | 128;
     $107 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $107 + 1;
     HEAP8[$107 >> 0] = $63 & 63 | 128;
    } while (0);
    $13 = (HEAP32[$frm_nxt >> 2] | 0) + 2 | 0;
    HEAP32[$frm_nxt >> 2] = $13;
    if ($13 >>> 0 >= $frm_end >>> 0) {
     $$0 = 0;
     break;
    }
   }
  } else $$0 = 0;
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i3 = 0, $$0$i4 = 0, $$01$i$i = 0, $$lcssa = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $0 = 0, $12 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $48 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $67 = 0, $7 = 0, $72 = 0, $9 = 0, label = 0, $$01$i$i$looptemp = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $7 = (((HEAP32[$0 >> 2] | 0) - $2 | 0) / 40 | 0) + 1 | 0;
 if ($7 >>> 0 > 107374182) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $13 = HEAP32[$this >> 2] | 0;
 } else $13 = $2;
 $9 = $this + 8 | 0;
 $12 = $13;
 $15 = ((HEAP32[$9 >> 2] | 0) - $12 | 0) / 40 | 0;
 if ($15 >>> 0 < 53687091) {
  $21 = $15 << 1;
  $23 = $21 >>> 0 < $7 >>> 0 ? $7 : $21;
  $27 = ((HEAP32[$0 >> 2] | 0) - $12 | 0) / 40 | 0;
  if (!$23) {
   $$0$i4 = 0;
   $32 = 0;
   $33 = $27;
  } else {
   $$0$i3 = $23;
   $72 = $27;
   label = 6;
  }
 } else {
  $$0$i3 = 107374182;
  $72 = ((HEAP32[$0 >> 2] | 0) - $12 | 0) / 40 | 0;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i4 = $$0$i3;
  $32 = __Znwj($$0$i3 * 40 | 0) | 0;
  $33 = $72;
 }
 $31 = $32 + ($33 * 40 | 0) | 0;
 $34 = $31;
 $36 = $32 + ($$0$i4 * 40 | 0) | 0;
 HEAP32[$31 >> 2] = HEAP32[$__x >> 2];
 HEAP32[$31 + 4 >> 2] = HEAP32[$__x + 4 >> 2];
 HEAP32[$31 + 8 >> 2] = HEAP32[$__x + 8 >> 2];
 HEAP32[$__x >> 2] = 0;
 HEAP32[$__x + 4 >> 2] = 0;
 HEAP32[$__x + 8 >> 2] = 0;
 $37 = $32 + ($33 * 40 | 0) + 12 | 0;
 $38 = $__x + 12 | 0;
 HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
 HEAP32[$37 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
 HEAP32[$37 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
 HEAP32[$37 + 12 >> 2] = HEAP32[$38 + 12 >> 2];
 $39 = $32 + ($33 * 40 | 0) + 28 | 0;
 $40 = $__x + 28 | 0;
 HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
 HEAP32[$39 + 4 >> 2] = HEAP32[$40 + 4 >> 2];
 HEAP32[$39 + 8 >> 2] = HEAP32[$40 + 8 >> 2];
 HEAP32[$40 >> 2] = 0;
 HEAP32[$40 + 4 >> 2] = 0;
 HEAP32[$40 + 8 >> 2] = 0;
 $42 = $32 + (($33 + 1 | 0) * 40 | 0) | 0;
 $43 = HEAP32[$this >> 2] | 0;
 $44 = HEAP32[$0 >> 2] | 0;
 if (($44 | 0) == ($43 | 0)) {
  $$pre$phi$iZ2D = $this;
  $$pre$phiZ2D = $0;
  $60 = $34;
  $62 = $43;
  $64 = $44;
 } else {
  $$01$i$i = $44;
  $49 = $31;
  $56 = $34;
  while (1) {
   $48 = $49 + -40 | 0;
   $$01$i$i$looptemp = $$01$i$i;
   $$01$i$i = $$01$i$i + -40 | 0;
   HEAP32[$48 >> 2] = HEAP32[$$01$i$i >> 2];
   HEAP32[$48 + 4 >> 2] = HEAP32[$$01$i$i + 4 >> 2];
   HEAP32[$48 + 8 >> 2] = HEAP32[$$01$i$i + 8 >> 2];
   HEAP32[$$01$i$i >> 2] = 0;
   HEAP32[$$01$i$i + 4 >> 2] = 0;
   HEAP32[$$01$i$i + 8 >> 2] = 0;
   $51 = $49 + -28 | 0;
   $52 = $$01$i$i$looptemp + -28 | 0;
   HEAP32[$51 >> 2] = HEAP32[$52 >> 2];
   HEAP32[$51 + 4 >> 2] = HEAP32[$52 + 4 >> 2];
   HEAP32[$51 + 8 >> 2] = HEAP32[$52 + 8 >> 2];
   HEAP32[$51 + 12 >> 2] = HEAP32[$52 + 12 >> 2];
   $53 = $49 + -12 | 0;
   $54 = $$01$i$i$looptemp + -12 | 0;
   HEAP32[$53 >> 2] = HEAP32[$54 >> 2];
   HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2];
   HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2];
   HEAP32[$54 >> 2] = 0;
   HEAP32[$54 + 4 >> 2] = 0;
   HEAP32[$54 + 8 >> 2] = 0;
   $49 = $56 + -40 | 0;
   $58 = $49;
   if (($$01$i$i | 0) == ($43 | 0)) {
    $$lcssa = $58;
    break;
   } else $56 = $58;
  }
  $$pre$phi$iZ2D = $this;
  $$pre$phiZ2D = $0;
  $60 = $$lcssa;
  $62 = HEAP32[$this >> 2] | 0;
  $64 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$$pre$phi$iZ2D >> 2] = $60;
 HEAP32[$$pre$phiZ2D >> 2] = $42;
 HEAP32[$9 >> 2] = $36;
 $61 = $62;
 $63 = $64;
 if (($63 | 0) != ($61 | 0)) {
  $67 = $63;
  do {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67 + -12 | 0);
   $67 = $67 + -40 | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($67);
  } while (($67 | 0) != ($61 | 0));
 }
 if (!$62) return;
 __ZdlPv($62);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi5Z2D = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi5Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 19;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 10336) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($19) | 0;
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 11164) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $$pre$phi7Z2D = $19;
       $37 = $35;
       label = 10;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $$pre$phi7Z2D = $19;
     $37 = $21;
     label = 10;
    } while (0);
    if ((label | 0) == 10) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 40 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $41 = invoke_iiiiii($40 | 0, $11 | 0, $$byval_copy | 0, $$pre$phi7Z2D | 0, $37 & 255 | 0, $__n | 0) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      if ($41) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(47, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi5Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 19;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 19) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $$pre$phi5Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZL10bop_string8BinaryOp($agg$result, $bop) {
 $agg$result = $agg$result | 0;
 $bop = $bop | 0;
 var $0 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($bop | 0) {
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54320, 1);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54322, 1);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54196, 1);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54787, 1);
   STACKTOP = sp;
   return;
  }
 case 4:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54324, 2);
   STACKTOP = sp;
   return;
  }
 case 5:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54327, 2);
   STACKTOP = sp;
   return;
  }
 case 6:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52377, 1);
   STACKTOP = sp;
   return;
  }
 case 7:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54330, 2);
   STACKTOP = sp;
   return;
  }
 case 8:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54333, 1);
   STACKTOP = sp;
   return;
  }
 case 9:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54335, 2);
   STACKTOP = sp;
   return;
  }
 case 10:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54338, 2);
   STACKTOP = sp;
   return;
  }
 case 11:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54341, 2);
   STACKTOP = sp;
   return;
  }
 case 12:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54344, 1);
   STACKTOP = sp;
   return;
  }
 case 13:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54346, 1);
   STACKTOP = sp;
   return;
  }
 case 14:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54348, 1);
   STACKTOP = sp;
   return;
  }
 case 15:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54350, 2);
   STACKTOP = sp;
   return;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54353, 2);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 54356, 46) | 0, $bop) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $8 = invoke_iii(22, $0 | 0, 11164) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   }
   __THREW__ = 0;
   $14 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] | 0, $8 | 0, 10) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if ($15 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $14) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi5Z2D = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi5Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 19;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 10336) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($19) | 0;
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 11164) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $$pre$phi7Z2D = $19;
       $37 = $35;
       label = 10;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $$pre$phi7Z2D = $19;
     $37 = $21;
     label = 10;
    } while (0);
    if ((label | 0) == 10) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $41 = invoke_iiiiii($40 | 0, $11 | 0, $$byval_copy | 0, $$pre$phi7Z2D | 0, $37 & 255 | 0, $__n | 0) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      if ($41) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(47, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi5Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 19;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 19) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $$pre$phi5Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi5Z2D = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi5Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 19;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 10336) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($19) | 0;
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 11164) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $$pre$phi7Z2D = $19;
       $37 = $35;
       label = 10;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $$pre$phi7Z2D = $19;
     $37 = $21;
     label = 10;
    } while (0);
    if ((label | 0) == 10) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $41 = invoke_iiiiii($40 | 0, $11 | 0, $$byval_copy | 0, $$pre$phi7Z2D | 0, $37 & 255 | 0, $__n | 0) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      if ($41) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(47, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi5Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 19;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 19) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $$pre$phi5Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi5Z2D = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi5Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 19;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 10336) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($19) | 0;
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 11164) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $$pre$phi7Z2D = $19;
       $37 = $35;
       label = 10;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $$pre$phi7Z2D = $19;
     $37 = $21;
     label = 10;
    } while (0);
    if ((label | 0) == 10) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 24 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $41 = invoke_iiiiii($40 | 0, $11 | 0, $$byval_copy | 0, $$pre$phi7Z2D | 0, $37 & 255 | 0, $__n | 0) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      if ($41) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(47, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi5Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 19;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 19) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $$pre$phi5Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi6Z2D = 0, $$pre$phi8Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi6Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 19;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 10336) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($19) | 0;
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 11164) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $$pre$phi8Z2D = $19;
       $37 = $35;
       label = 10;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $$pre$phi8Z2D = $19;
     $37 = $21;
     label = 10;
    } while (0);
    if ((label | 0) == 10) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $41 = invoke_iiiiii($40 | 0, $11 | 0, $$byval_copy | 0, $$pre$phi8Z2D | 0, $37 & 255 | 0, $__n | 0) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      if ($41) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(47, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi6Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 19;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 19) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $$pre$phi6Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd($this, $__n) {
 $this = $this | 0;
 $__n = +$__n;
 var $$0 = 0, $$1 = 0, $$byval_copy = 0, $$pre$phi5Z2D = 0, $$pre$phi7Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $47 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $64 = 0, $66 = 0, $68 = 0, $70 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $1 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $2 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($2 & 1) {
  $54 = ___cxa_find_matching_catch(0) | 0;
  $$1 = $54;
  $$pre$phi5Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 19;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   HEAP32[$1 >> 2] = __ZNKSt3__18ios_base6getlocEv($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $11 = invoke_iii(22, $1 | 0, 10336) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $58 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__16localeD2Ev($1);
    $$0 = $58;
   } else {
    __ZNSt3__16localeD2Ev($1);
    $16 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    $18 = HEAP32[$this + ($16 + 24) >> 2] | 0;
    $19 = $this + $16 | 0;
    $20 = $this + ($16 + 76) | 0;
    $21 = HEAP32[$20 >> 2] | 0;
    do if (($21 | 0) == -1) {
     HEAP32[$$byval_copy >> 2] = __ZNKSt3__18ios_base6getlocEv($19) | 0;
     __THREW__ = 0;
     $24 = invoke_iii(22, $$byval_copy | 0, 11164) | 0;
     $25 = __THREW__;
     __THREW__ = 0;
     if (!($25 & 1)) {
      __THREW__ = 0;
      $30 = invoke_iii(HEAP32[(HEAP32[$24 >> 2] | 0) + 28 >> 2] | 0, $24 | 0, 32) | 0;
      $31 = __THREW__;
      __THREW__ = 0;
      if (!($31 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $35 = $30 << 24 >> 24;
       HEAP32[$20 >> 2] = $35;
       $$pre$phi7Z2D = $19;
       $37 = $35;
       label = 10;
       break;
      }
     }
     $33 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $33;
    } else {
     $$pre$phi7Z2D = $19;
     $37 = $21;
     label = 10;
    } while (0);
    if ((label | 0) == 10) {
     $40 = HEAP32[(HEAP32[$11 >> 2] | 0) + 32 >> 2] | 0;
     HEAP32[$0 >> 2] = $18;
     __THREW__ = 0;
     HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
     $41 = invoke_iiiiid($40 | 0, $11 | 0, $$byval_copy | 0, $$pre$phi7Z2D | 0, $37 & 255 | 0, +$__n) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      if ($41) break;
      $47 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
      __THREW__ = 0;
      invoke_vii(47, $this + $47 | 0, HEAP32[$this + ($47 + 16) >> 2] | 5 | 0);
      $52 = __THREW__;
      __THREW__ = 0;
      if (!($52 & 1)) break;
     }
     $56 = ___cxa_find_matching_catch(0) | 0;
     $eh$lpad$body$indexZ2D = $56;
    }
    $$0 = $eh$lpad$body$indexZ2D;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$1 = $$0;
   $$pre$phi5Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 19;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 19) {
  ___cxa_begin_catch($$1 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $$pre$phi5Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $64 = __THREW__;
  __THREW__ = 0;
  if (!($64 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $66 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $68 = __THREW__;
  __THREW__ = 0;
  if ($68 & 1) {
   $70 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($70);
  } else ___resumeException($66 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $103 = 0, $116 = 0, $121 = 0, $122 = 0, $127 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $4 = 0, $46 = 0, $51 = 0, $52 = 0, $6 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $76 = 0, $8 = 0, $88 = 0, $92 = 0, $93 = 0, $__c$0 = 0, $__extbe = 0, $__state = 0, $__update_st$0$off0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbe = sp + 8 | 0;
 $__state = sp;
 $0 = $this + 64 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $3 = $this + 68 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 656, 81);
 }
 $7 = $this + 92 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 do if (!($8 & 16)) {
  if ($8 & 8) {
   $46 = $this + 80 | 0;
   $51 = HEAP32[$46 + 4 >> 2] | 0;
   $52 = $__state;
   HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
   HEAP32[$52 + 4 >> 2] = $51;
   do if (!(HEAP8[$this + 98 >> 0] | 0)) {
    $69 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
    $72 = $this + 36 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    $76 = (HEAP32[$this + 40 >> 2] | 0) - $73 | 0;
    if (($69 | 0) > 0) {
     $__c$0 = (Math_imul((HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0, $69) | 0) + $76 | 0;
     $__update_st$0$off0 = 0;
     break;
    }
    $88 = HEAP32[$this + 12 >> 2] | 0;
    if (($88 | 0) == (HEAP32[$this + 16 >> 2] | 0)) {
     $__c$0 = $76;
     $__update_st$0$off0 = 0;
    } else {
     $92 = HEAP32[$3 >> 2] | 0;
     $93 = $this + 32 | 0;
     $103 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$92 >> 2] | 0) + 32 >> 2] & 31]($92, $__state, HEAP32[$93 >> 2] | 0, $73, $88 - (HEAP32[$this + 8 >> 2] | 0) | 0) | 0;
     $__c$0 = $76 - $103 + (HEAP32[$72 >> 2] | 0) - (HEAP32[$93 >> 2] | 0) | 0;
     $__update_st$0$off0 = 1;
    }
   } else {
    $__c$0 = (HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) | 0;
    $__update_st$0$off0 = 0;
   } while (0);
   if (___fseeko(HEAP32[$0 >> 2] | 0, 0 - $__c$0 | 0, 1) | 0) {
    $$0 = -1;
    STACKTOP = sp;
    return $$0 | 0;
   }
   if ($__update_st$0$off0) {
    $116 = $__state;
    $121 = HEAP32[$116 + 4 >> 2] | 0;
    $122 = $this + 72 | 0;
    HEAP32[$122 >> 2] = HEAP32[$116 >> 2];
    HEAP32[$122 + 4 >> 2] = $121;
   }
   $127 = HEAP32[$this + 32 >> 2] | 0;
   HEAP32[$this + 40 >> 2] = $127;
   HEAP32[$this + 36 >> 2] = $127;
   HEAP32[$this + 8 >> 2] = 0;
   HEAP32[$this + 12 >> 2] = 0;
   HEAP32[$this + 16 >> 2] = 0;
   HEAP32[$7 >> 2] = 0;
  }
 } else {
  if ((HEAP32[$this + 24 >> 2] | 0) != (HEAP32[$this + 20 >> 2] | 0)) if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, -1) | 0) == -1) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $21 = $this + 72 | 0;
  $22 = $this + 32 | 0;
  $23 = $this + 52 | 0;
  L29 : while (1) {
   $24 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$22 >> 2] | 0;
   $31 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$24 >> 2] | 0) + 20 >> 2] & 31]($24, $21, $25, $25 + (HEAP32[$23 >> 2] | 0) | 0, $__extbe) | 0;
   $33 = HEAP32[$22 >> 2] | 0;
   $36 = (HEAP32[$__extbe >> 2] | 0) - $33 | 0;
   if ((_fwrite($33, 1, $36, HEAP32[$0 >> 2] | 0) | 0) != ($36 | 0)) {
    $$0 = -1;
    label = 23;
    break;
   }
   switch ($31 | 0) {
   case 1:
    break;
   case 2:
    {
     $$0 = -1;
     label = 23;
     break L29;
     break;
    }
   default:
    {
     label = 10;
     break L29;
    }
   }
  }
  if ((label | 0) == 10) {
   if (!(_fflush(HEAP32[$0 >> 2] | 0) | 0)) break; else $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  } else if ((label | 0) == 23) {
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$$$i$i$i$i1 = 0, $$$$i$i1$i$i2 = 0, $$0 = 0, $$lcssa = 0, $$lcssa24 = 0, $0 = 0, $1 = 0, $10 = 0, $103 = 0, $104 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $36 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $54 = 0, $56 = 0, $61 = 0, $68 = 0, $73 = 0, $75 = 0, $79 = 0, $83 = 0, $84 = 0, $86 = 0, $91 = 0, $98 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa22 = 0, $__nd$0$lcssa23 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $15 = $__k + 12 | 0;
 $16 = HEAP8[$15 >> 0] | 0;
 $18 = ($16 & 1) == 0;
 $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__k + 16 >> 2] | 0;
 $27 = $18 ? $15 + 1 | 0 : HEAP32[$__k + 20 >> 2] | 0;
 $__nd$0 = $1;
 L5 : while (1) {
  $28 = $__nd$0 + 16 | 0;
  $29 = HEAP8[$28 >> 0] | 0;
  $31 = ($29 & 1) == 0;
  $36 = $31 ? ($29 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $40 = $31 ? $28 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $41 = $36 >>> 0 < $10 >>> 0;
  $42 = $41 ? $36 : $10;
  $43 = _memcmp($14, $40, $42) | 0;
  $45 = $10 >>> 0 < $36 >>> 0;
  $$$$i$i$i$i1 = $45 ? -2147483648 : 0;
  do if (((($43 | 0) == 0 ? $$$$i$i$i$i1 : $43) | 0) < 0) label = 6; else {
   $48 = $45 ? $10 : $36;
   $49 = _memcmp($40, $14, $48) | 0;
   $$$$i$i1$i$i2 = $41 ? -2147483648 : 0;
   if (((($49 | 0) == 0 ? $$$$i$i1$i$i2 : $49) | 0) >= 0) {
    $53 = $__nd$0 + 28 | 0;
    $54 = HEAP8[$53 >> 0] | 0;
    $56 = ($54 & 1) == 0;
    $61 = $56 ? ($54 & 255) >>> 1 : HEAP32[$__nd$0 + 32 >> 2] | 0;
    $68 = _memcmp($27, $56 ? $53 + 1 | 0 : HEAP32[$__nd$0 + 36 >> 2] | 0, $61 >>> 0 < $23 >>> 0 ? $61 : $23) | 0;
    if (((($68 | 0) == 0 ? ($23 >>> 0 < $61 >>> 0 ? -2147483648 : 0) : $68) | 0) < 0) {
     label = 6;
     break;
    }
   }
   $75 = _memcmp($40, $14, $48) | 0;
   if (((($75 | 0) == 0 ? $$$$i$i1$i$i2 : $75) | 0) >= 0) {
    $79 = _memcmp($14, $40, $42) | 0;
    if (((($79 | 0) == 0 ? $$$$i$i$i$i1 : $79) | 0) < 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 14;
     break L5;
    }
    $83 = $__nd$0 + 28 | 0;
    $84 = HEAP8[$83 >> 0] | 0;
    $86 = ($84 & 1) == 0;
    $91 = $86 ? ($84 & 255) >>> 1 : HEAP32[$__nd$0 + 32 >> 2] | 0;
    $98 = _memcmp($86 ? $83 + 1 | 0 : HEAP32[$__nd$0 + 36 >> 2] | 0, $27, $23 >>> 0 < $91 >>> 0 ? $23 : $91) | 0;
    if (((($98 | 0) == 0 ? ($91 >>> 0 < $23 >>> 0 ? -2147483648 : 0) : $98) | 0) >= 0) {
     $__nd$0$lcssa = $__nd$0;
     label = 14;
     break L5;
    }
   }
   $103 = $__nd$0 + 4 | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if (!$104) {
    $$lcssa = $103;
    $__nd$0$lcssa22 = $__nd$0;
    label = 13;
    break L5;
   } else $__nd$0$be$in = $104;
  } while (0);
  if ((label | 0) == 6) {
   label = 0;
   $73 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$73) {
    $$lcssa24 = $__nd$0;
    $__nd$0$lcssa23 = $__nd$0;
    label = 7;
    break;
   } else $__nd$0$be$in = $73;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 7) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa23;
  $$0 = $$lcssa24;
  return $$0 | 0;
 } else if ((label | 0) == 13) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa22;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 14) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZN9AllocatorD2Ev($this) {
 $this = $this | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $$pre = 0, $$pre14 = 0, $0 = 0, $1 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $31 = 0, $33 = 0, $36 = 0, $40 = 0, $42 = 0, $45 = 0, $5 = 0, $51 = 0, $54 = 0, $57 = 0, $6 = 0, $63 = 0, $x4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $x4 = sp;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 16 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) != ($3 | 0)) {
  $6 = $1;
  do {
   $5 = HEAP32[$6 >> 2] | 0;
   if ($5) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] & 255]($5);
   $6 = $6 + 4 | 0;
  } while (($6 | 0) != ($3 | 0));
  $$pre = HEAP32[$0 >> 2] | 0;
  $$pre14 = HEAP32[$2 >> 2] | 0;
  if (($$pre14 | 0) != ($$pre | 0)) HEAP32[$2 >> 2] = $$pre14 + (~(($$pre14 + -4 - $$pre | 0) >>> 2) << 2);
 }
 $18 = HEAP32[$this >> 2] | 0;
 $19 = $this + 4 | 0;
 L10 : do if (($18 | 0) != ($19 | 0)) {
  $21 = $x4 + 12 | 0;
  $23 = $18;
  while (1) {
   __THREW__ = 0;
   invoke_vii(40, $x4 | 0, $23 + 16 | 0);
   $24 = __THREW__;
   __THREW__ = 0;
   if ($24 & 1) break;
   $27 = HEAP32[$23 + 28 >> 2] | 0;
   HEAP32[$21 >> 2] = $27;
   if ($27) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($27);
    __ZdlPv($27);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($x4);
   $31 = HEAP32[$23 + 4 >> 2] | 0;
   if (!$31) {
    $$0$i$i$i = $23;
    while (1) {
     $36 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
     if ((HEAP32[$36 >> 2] | 0) == ($$0$i$i$i | 0)) {
      $$01$i$i$i = $36;
      break;
     } else $$0$i$i$i = $36;
    }
   } else {
    $$0$i$i$i$i = $31;
    while (1) {
     $33 = HEAP32[$$0$i$i$i$i >> 2] | 0;
     if (!$33) {
      $$01$i$i$i = $$0$i$i$i$i;
      break;
     } else $$0$i$i$i$i = $33;
    }
   }
   if (($$01$i$i$i | 0) == ($19 | 0)) break L10; else $23 = $$01$i$i$i;
  }
  $40 = ___cxa_find_matching_catch(0) | 0;
  $42 = HEAP32[$0 >> 2] | 0;
  if (!$42) {
   $51 = HEAP32[$19 >> 2] | 0;
   __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $51);
   ___clang_call_terminate($40);
  }
  $45 = HEAP32[$2 >> 2] | 0;
  if (($45 | 0) != ($42 | 0)) HEAP32[$2 >> 2] = $45 + (~(($45 + -4 - $42 | 0) >>> 2) << 2);
  __ZdlPv($42);
  $51 = HEAP32[$19 >> 2] | 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $51);
  ___clang_call_terminate($40);
 } while (0);
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$19 >> 2] | 0);
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this >> 2] = $19;
 HEAP32[$19 >> 2] = 0;
 $54 = HEAP32[$0 >> 2] | 0;
 if (!$54) {
  $63 = 0;
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $63);
  STACKTOP = sp;
  return;
 }
 $57 = HEAP32[$2 >> 2] | 0;
 if (($57 | 0) != ($54 | 0)) HEAP32[$2 >> 2] = $57 + (~(($57 + -4 - $54 | 0) >>> 2) << 2);
 __ZdlPv($54);
 $63 = HEAP32[$19 >> 2] | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $63);
 STACKTOP = sp;
 return;
}

function __Z23jsonlang_unparse_numberd($agg$result, $v) {
 $agg$result = $agg$result | 0;
 $v = +$v;
 var $$0$i = 0, $$01$i = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $37 = 0, $39 = 0, $42 = 0, $44 = 0, $6 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, $ss = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $0 = sp + 144 | 0;
 $ss = sp;
 $1 = $ss + 64 | 0;
 $2 = $ss + 8 | 0;
 HEAP32[$2 >> 2] = 2912;
 $3 = $ss + 12 | 0;
 HEAP32[$ss >> 2] = 2952;
 HEAP32[$1 >> 2] = 2972;
 HEAP32[$ss + 4 >> 2] = 0;
 __THREW__ = 0;
 invoke_vii(41, $ss + 64 | 0, $3 | 0);
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  $$0$i = tempRet0;
  $$01$i = $19;
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($$01$i | 0);
 }
 HEAP32[$ss + 136 >> 2] = 0;
 HEAP32[$ss + 140 >> 2] = -1;
 HEAP32[$ss >> 2] = 2892;
 HEAP32[$ss + 64 >> 2] = 2932;
 HEAP32[$2 >> 2] = 2912;
 __THREW__ = 0;
 invoke_vi(173, $3 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 do if ($11 & 1) {
  $21 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $21;
 } else {
  HEAP32[$3 >> 2] = 2988;
  $13 = $ss + 44 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$13 + 4 >> 2] = 0;
  HEAP32[$13 + 8 >> 2] = 0;
  HEAP32[$13 + 12 >> 2] = 0;
  HEAP32[$ss + 60 >> 2] = 24;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __THREW__ = 0;
  invoke_vii(42, $3 | 0, $0 | 0);
  $15 = __THREW__;
  __THREW__ = 0;
  if ($15 & 1) {
   $17 = ___cxa_find_matching_catch() | 0;
   $18 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
   $eh$lpad$body$i$index2Z2D = $18;
   $eh$lpad$body$i$indexZ2D = $17;
   break;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
  $24 = +Math_floor(+$v) == $v;
  $25 = $ss + 8 | 0;
  $28 = HEAP32[(HEAP32[$25 >> 2] | 0) + -12 >> 2] | 0;
  if ($24) {
   $29 = $25 + ($28 + 4) | 0;
   HEAP32[$29 >> 2] = HEAP32[$29 >> 2] & -261 | 4;
   HEAP32[$25 + ((HEAP32[(HEAP32[$25 >> 2] | 0) + -12 >> 2] | 0) + 8) >> 2] = 0;
   __THREW__ = 0;
   invoke_iid(1, $25 | 0, +$v) | 0;
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) label = 13;
  } else {
   HEAP32[$25 + ($28 + 8) >> 2] = 17;
   __THREW__ = 0;
   invoke_iid(1, $25 | 0, +$v) | 0;
   $42 = __THREW__;
   __THREW__ = 0;
   if (!($42 & 1)) label = 13;
  }
  if ((label | 0) == 13) {
   __THREW__ = 0;
   invoke_vii(43, $agg$result | 0, $3 | 0);
   $44 = __THREW__;
   __THREW__ = 0;
   if (!($44 & 1)) {
    HEAP32[$ss >> 2] = 2892;
    HEAP32[$1 >> 2] = 2932;
    HEAP32[$25 >> 2] = 2912;
    HEAP32[$3 >> 2] = 2988;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
    __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
    __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
    STACKTOP = sp;
    return;
   }
  }
  $39 = ___cxa_find_matching_catch() | 0;
  HEAP32[$ss >> 2] = 2892;
  HEAP32[$1 >> 2] = 2932;
  HEAP32[$25 >> 2] = 2912;
  HEAP32[$3 >> 2] = 2988;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
  __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
  ___resumeException($39 | 0);
 } while (0);
 $$0$i = $eh$lpad$body$i$index2Z2D;
 $$01$i = $eh$lpad$body$i$indexZ2D;
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 ___resumeException($$01$i | 0);
}

function __ZNSt3__19__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $14 = 0, $19 = 0, $22 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $62 = 0, $65 = 0, $73 = 0, $82 = 0, $87 = 0, $89 = 0;
 L1 : do if ($__ct << 24 >> 24 == $__decimal_point << 24 >> 24) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if ((($22 & 1) == 0 ? ($22 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 32 | 0;
  $$0$i3 = $__atoms;
  while (1) {
   if ((HEAP8[$$0$i3 >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i3;
    break;
   }
   $$0$i3 = $$0$i3 + 1 | 0;
   if (($$0$i3 | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  if (($47 | 0) > 31) $$0 = -1; else {
   $50 = HEAP8[61448 + $47 >> 0] | 0;
   switch ($47 | 0) {
   case 24:
   case 25:
    {
     $51 = HEAP32[$__a_end >> 2] | 0;
     if (($51 | 0) != ($__a | 0)) if ((HEAPU8[$51 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
      $$0 = -1;
      break L1;
     }
     HEAP32[$__a_end >> 2] = $51 + 1;
     HEAP8[$51 >> 0] = $50;
     $$0 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$__exp >> 0] = 80;
     $62 = HEAP32[$__a_end >> 2] | 0;
     HEAP32[$__a_end >> 2] = $62 + 1;
     HEAP8[$62 >> 0] = $50;
     $$0 = 0;
     break L1;
     break;
    }
   default:
    {
     $65 = $50 & 95;
     if (($65 | 0) == (HEAP8[$__exp >> 0] | 0)) {
      HEAP8[$__exp >> 0] = $65 | 128;
      if (HEAP8[$__in_units >> 0] | 0) {
       HEAP8[$__in_units >> 0] = 0;
       $73 = HEAP8[$__grouping >> 0] | 0;
       if ((($73 & 1) == 0 ? ($73 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
        $82 = HEAP32[$__g_end >> 2] | 0;
        if (($82 - $__g | 0) < 160) {
         $87 = HEAP32[$__dc >> 2] | 0;
         HEAP32[$__g_end >> 2] = $82 + 4;
         HEAP32[$82 >> 2] = $87;
        }
       }
      }
     }
     $89 = HEAP32[$__a_end >> 2] | 0;
     HEAP32[$__a_end >> 2] = $89 + 1;
     HEAP8[$89 >> 0] = $50;
     if (($47 | 0) > 21) {
      $$0 = 0;
      break L1;
     }
     HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
     $$0 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return $$0 | 0;
}

function _jsonlang_make() {
 var $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $60 = 0, $65 = 0, $66 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __THREW__ = 0;
 $1 = invoke_ii(67, 48) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  HEAPF64[$1 >> 3] = 2.0;
  HEAP32[$1 + 8 >> 2] = 500;
  HEAP32[$1 + 12 >> 2] = 1e3;
  HEAP8[$1 + 16 >> 0] = 0;
  HEAP32[$1 + 20 >> 2] = 20;
  $60 = $1 + 28 | 0;
  HEAP32[$60 >> 2] = 0;
  HEAP32[$1 + 32 >> 2] = 0;
  HEAP32[$1 + 24 >> 2] = $60;
  HEAP32[$1 + 36 >> 2] = 9;
  HEAP32[$1 + 40 >> 2] = $1;
  HEAP8[$1 + 44 >> 0] = 0;
  STACKTOP = sp;
  return $1 | 0;
 }
 $4 = ___cxa_find_matching_catch(608, 624) | 0;
 $5 = tempRet0;
 if (($5 | 0) == (_llvm_eh_typeid_for(608) | 0)) {
  ___cxa_begin_catch($4 | 0) | 0;
  _fwrite(54553, 49, 1, HEAP32[1080] | 0) | 0;
  __THREW__ = 0;
  invoke_v(3);
  __THREW__ = 0;
  $10 = ___cxa_find_matching_catch() | 0;
  $11 = tempRet0;
  __THREW__ = 0;
  invoke_v(2);
  $12 = __THREW__;
  __THREW__ = 0;
  if ($12 & 1) {
   $65 = ___cxa_find_matching_catch(0) | 0;
   $66 = tempRet0;
   ___clang_call_terminate($65);
  } else {
   $$01 = $10;
   $$02 = $11;
   ___resumeException($$01 | 0);
  }
 }
 if (($5 | 0) != (_llvm_eh_typeid_for(624) | 0)) {
  $$01 = $4;
  $$02 = $5;
  ___resumeException($$01 | 0);
 }
 $16 = ___cxa_begin_catch($4 | 0) | 0;
 __THREW__ = 0;
 $17 = invoke_iiii(29, 8580, 54603, 63) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 do if ($18 & 1) label = 14; else {
  $23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 8 >> 2] & 127]($16) | 0;
  $24 = _strlen($23) | 0;
  __THREW__ = 0;
  $25 = invoke_iiii(29, $17 | 0, $23 | 0, $24 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if ($26 & 1) label = 14; else {
   __THREW__ = 0;
   $32 = invoke_ii(68, $25 + (HEAP32[(HEAP32[$25 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   $33 = __THREW__;
   __THREW__ = 0;
   if ($33 & 1) label = 14; else {
    HEAP32[$0 >> 2] = $32;
    __THREW__ = 0;
    $35 = invoke_iii(22, $0 | 0, 11164) | 0;
    $36 = __THREW__;
    __THREW__ = 0;
    if (!($36 & 1)) {
     __THREW__ = 0;
     $41 = invoke_iii(HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] | 0, $35 | 0, 10) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      __ZNSt3__16localeD2Ev($0);
      __THREW__ = 0;
      invoke_iii(25, $25 | 0, $41 | 0) | 0;
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) {
       label = 14;
       break;
      }
      __THREW__ = 0;
      invoke_ii(69, $25 | 0) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if ($48 & 1) {
       label = 14;
       break;
      }
      __THREW__ = 0;
      invoke_v(3);
      __THREW__ = 0;
      label = 14;
      break;
     }
    }
    $44 = ___cxa_find_matching_catch() | 0;
    $45 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    $eh$lpad$body$index2Z2D = $45;
    $eh$lpad$body$indexZ2D = $44;
   }
  }
 } while (0);
 if ((label | 0) == 14) {
  $51 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $51;
 }
 __THREW__ = 0;
 invoke_v(2);
 $53 = __THREW__;
 __THREW__ = 0;
 if ($53 & 1) {
  $65 = ___cxa_find_matching_catch(0) | 0;
  $66 = tempRet0;
  ___clang_call_terminate($65);
 } else {
  $$01 = $eh$lpad$body$indexZ2D;
  $$02 = $eh$lpad$body$index2Z2D;
  ___resumeException($$01 | 0);
 }
 return 0;
}

function __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($__os, $__str, $__len) {
 $__os = $__os | 0;
 $__str = $__str | 0;
 $__len = $__len | 0;
 var $$0 = 0, $$byval_copy = 0, $$pre$phi4Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $37 = 0, $38 = 0, $43 = 0, $48 = 0, $50 = 0, $52 = 0, $58 = 0, $60 = 0, $62 = 0, $64 = 0, $7 = 0, $__s = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 16 | 0;
 $__s = sp + 8 | 0;
 $0 = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $__os | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($1 & 1) {
  $50 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $50;
  $$pre$phi4Z2D = $__os;
  $$pre$phiZ2D = $__os;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $7 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
   HEAP32[$0 >> 2] = HEAP32[$__os + ($7 + 24) >> 2];
   $10 = $__os + $7 | 0;
   $12 = HEAP32[$__os + ($7 + 4) >> 2] | 0;
   $13 = $__str + $__len | 0;
   $14 = $__os + ($7 + 76) | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   do if (($15 | 0) == -1) {
    __THREW__ = 0;
    $17 = invoke_ii(68, $10 | 0) | 0;
    $18 = __THREW__;
    __THREW__ = 0;
    if ($18 & 1) label = 13; else {
     HEAP32[$$byval_copy >> 2] = $17;
     __THREW__ = 0;
     $20 = invoke_iii(22, $$byval_copy | 0, 11164) | 0;
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      __THREW__ = 0;
      $26 = invoke_iii(HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] | 0, $20 | 0, 32) | 0;
      $27 = __THREW__;
      __THREW__ = 0;
      if (!($27 & 1)) {
       __ZNSt3__16localeD2Ev($$byval_copy);
       $31 = $26 << 24 >> 24;
       HEAP32[$14 >> 2] = $31;
       $33 = $31;
       label = 9;
       break;
      }
     }
     $29 = ___cxa_find_matching_catch(0) | 0;
     __ZNSt3__16localeD2Ev($$byval_copy);
     $eh$lpad$body$indexZ2D = $29;
    }
   } else {
    $33 = $15;
    label = 9;
   } while (0);
   if ((label | 0) == 9) {
    __THREW__ = 0;
    HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
    $37 = invoke_iiiiiii(39, $$byval_copy | 0, $__str | 0, (($12 & 176 | 0) == 32 ? $13 : $__str) | 0, $13 | 0, $10 | 0, $33 & 255 | 0) | 0;
    $38 = __THREW__;
    __THREW__ = 0;
    if ($38 & 1) label = 13; else {
     if ($37) break;
     $43 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(47, $__os + $43 | 0, HEAP32[$__os + ($43 + 16) >> 2] | 5 | 0);
     $48 = __THREW__;
     __THREW__ = 0;
     if ($48 & 1) label = 13; else break;
    }
   }
   if ((label | 0) == 13) {
    $52 = ___cxa_find_matching_catch(0) | 0;
    $eh$lpad$body$indexZ2D = $52;
   }
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $eh$lpad$body$indexZ2D;
   $$pre$phi4Z2D = $__os;
   $$pre$phiZ2D = $__os;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
  STACKTOP = sp;
  return $__os | 0;
 } while (0);
 ___cxa_begin_catch($$0 | 0) | 0;
 __THREW__ = 0;
 invoke_vi(174, $$pre$phi4Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
 $58 = __THREW__;
 __THREW__ = 0;
 if (!($58 & 1)) {
  ___cxa_end_catch();
  STACKTOP = sp;
  return $__os | 0;
 }
 $60 = ___cxa_find_matching_catch() | 0;
 __THREW__ = 0;
 invoke_v(2);
 $62 = __THREW__;
 __THREW__ = 0;
 if ($62 & 1) {
  $64 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($64);
 } else ___resumeException($60 | 0);
 return 0;
}

function __ZN12_GLOBAL__N_15Stack4markERNS_4HeapE($this, $heap) {
 $this = $this | 0;
 $heap = $heap | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i15$i = 0, $$0$i$i$i17$i = 0, $$01$i$i$i$i = 0, $$01$i$i$i20$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val2$i$i = 0, $$idx$val2$i14$i = 0, $$idx$val2$i143641$i = 0, $$idx$val2$i3745$i = 0, $$idx$val3540$i = 0, $$idx$val36 = 0, $$idx1$val = 0, $$idx1$val$i = 0, $14 = 0, $17 = 0, $19 = 0, $24 = 0, $26 = 0, $29 = 0, $33 = 0, $38 = 0, $40 = 0, $43 = 0;
 $$idx$val = HEAP32[$this + 12 >> 2] | 0;
 $$idx1$val = HEAP32[$this + 16 >> 2] | 0;
 if (($$idx$val | 0) == ($$idx1$val | 0)) return; else $$idx$val36 = $$idx$val;
 do {
  if (HEAP32[$$idx$val36 + 40 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val36 + 48 >> 2] | 0);
  if (HEAP32[$$idx$val36 + 56 >> 2] & 16) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val36 + 64 >> 2] | 0);
  $14 = HEAP32[$$idx$val36 + 116 >> 2] | 0;
  if ($14) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $14);
  $17 = HEAP32[$$idx$val36 + 120 >> 2] | 0;
  if ($17) __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, $17);
  $$idx$val2$i$i = HEAP32[$$idx$val36 + 128 >> 2] | 0;
  $19 = $$idx$val36 + 132 | 0;
  if (($$idx$val2$i$i | 0) != ($19 | 0)) {
   $$idx$val2$i3745$i = $$idx$val2$i$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val2$i3745$i + 20 >> 2] | 0);
    $24 = HEAP32[$$idx$val2$i3745$i + 4 >> 2] | 0;
    if (!$24) {
     $$0$i$i$i17$i = $$idx$val2$i3745$i;
     while (1) {
      $29 = HEAP32[$$0$i$i$i17$i + 8 >> 2] | 0;
      if ((HEAP32[$29 >> 2] | 0) == ($$0$i$i$i17$i | 0)) {
       $$01$i$i$i20$i = $29;
       break;
      } else $$0$i$i$i17$i = $29;
     }
    } else {
     $$0$i$i$i$i15$i = $24;
     while (1) {
      $26 = HEAP32[$$0$i$i$i$i15$i >> 2] | 0;
      if (!$26) {
       $$01$i$i$i20$i = $$0$i$i$i$i15$i;
       break;
      } else $$0$i$i$i$i15$i = $26;
     }
    }
    if (($$01$i$i$i20$i | 0) == ($19 | 0)) break; else $$idx$val2$i3745$i = $$01$i$i$i20$i;
   }
  }
  $$idx$val2$i14$i = HEAP32[$$idx$val36 + 92 >> 2] | 0;
  $33 = $$idx$val36 + 96 | 0;
  if (($$idx$val2$i14$i | 0) != ($33 | 0)) {
   $$idx$val2$i143641$i = $$idx$val2$i14$i;
   while (1) {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val2$i143641$i + 20 >> 2] | 0);
    $38 = HEAP32[$$idx$val2$i143641$i + 4 >> 2] | 0;
    if (!$38) {
     $$0$i$i$i$i = $$idx$val2$i143641$i;
     while (1) {
      $43 = HEAP32[$$0$i$i$i$i + 8 >> 2] | 0;
      if ((HEAP32[$43 >> 2] | 0) == ($$0$i$i$i$i | 0)) {
       $$01$i$i$i$i = $43;
       break;
      } else $$0$i$i$i$i = $43;
     }
    } else {
     $$0$i$i$i$i$i = $38;
     while (1) {
      $40 = HEAP32[$$0$i$i$i$i$i >> 2] | 0;
      if (!$40) {
       $$01$i$i$i$i = $$0$i$i$i$i$i;
       break;
      } else $$0$i$i$i$i$i = $40;
     }
    }
    if (($$01$i$i$i$i | 0) == ($33 | 0)) break; else $$idx$val2$i143641$i = $$01$i$i$i$i;
   }
  }
  $$idx$val$i = HEAP32[$$idx$val36 + 104 >> 2] | 0;
  $$idx1$val$i = HEAP32[$$idx$val36 + 108 >> 2] | 0;
  if (($$idx$val$i | 0) != ($$idx1$val$i | 0)) {
   $$idx$val3540$i = $$idx$val$i;
   do {
    __ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE($heap, HEAP32[$$idx$val3540$i >> 2] | 0);
    $$idx$val3540$i = $$idx$val3540$i + 4 | 0;
   } while (($$idx$val3540$i | 0) != ($$idx1$val$i | 0));
  }
  $$idx$val36 = $$idx$val36 + 144 | 0;
 } while (($$idx$val36 | 0) != ($$idx1$val | 0));
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $__wch = $__wch | 0;
 var $$in = 0, $$pre = 0, $10 = 0, $109 = 0, $114 = 0, $121 = 0, $126 = 0, $142 = 0, $147 = 0, $15 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $38 = 0, $4 = 0, $45 = 0, $48 = 0, $5 = 0, $57 = 0, $58 = 0, $61 = 0, $66 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $75 = 0, $8 = 0, $84 = 0, $85 = 0, $87 = 0, $93 = 0, $98 = 0;
 $2 = $this + 44 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $this + 24 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($3 >>> 0 < $5 >>> 0) {
  HEAP32[$2 >> 2] = $5;
  $$in = $5;
 } else $$in = $3;
 $7 = $$in;
 $8 = $__wch & 24;
 if (!$8) {
  $10 = $agg$result;
  HEAP32[$10 >> 2] = 0;
  HEAP32[$10 + 4 >> 2] = 0;
  $15 = $agg$result + 8 | 0;
  HEAP32[$15 >> 2] = -1;
  HEAP32[$15 + 4 >> 2] = -1;
  return;
 }
 if (($__way | 0) == 1 & ($8 | 0) == 24) {
  $21 = $agg$result;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$21 + 4 >> 2] = 0;
  $26 = $agg$result + 8 | 0;
  HEAP32[$26 >> 2] = -1;
  HEAP32[$26 + 4 >> 2] = -1;
  return;
 }
 L12 : do switch ($__way | 0) {
 case 0:
  {
   $70 = 0;
   $71 = 0;
   break;
  }
 case 1:
  {
   if (!($__wch & 8)) {
    $45 = $5 - (HEAP32[$this + 20 >> 2] | 0) | 0;
    $70 = $45;
    $71 = (($45 | 0) < 0) << 31 >> 31;
    break L12;
   } else {
    $38 = (HEAP32[$this + 12 >> 2] | 0) - (HEAP32[$this + 8 >> 2] | 0) | 0;
    $70 = $38;
    $71 = (($38 | 0) < 0) << 31 >> 31;
    break L12;
   }
   break;
  }
 case 2:
  {
   $48 = $this + 32 | 0;
   if (!(HEAP8[$48 >> 0] & 1)) $57 = $48 + 1 | 0; else $57 = HEAP32[$this + 40 >> 2] | 0;
   $58 = $$in - $57 | 0;
   $70 = $58;
   $71 = (($58 | 0) < 0) << 31 >> 31;
   break;
  }
 default:
  {
   $61 = $agg$result;
   HEAP32[$61 >> 2] = 0;
   HEAP32[$61 + 4 >> 2] = 0;
   $66 = $agg$result + 8 | 0;
   HEAP32[$66 >> 2] = -1;
   HEAP32[$66 + 4 >> 2] = -1;
   return;
  }
 } while (0);
 $72 = _i64Add($70 | 0, $71 | 0, $0 | 0, $1 | 0) | 0;
 $73 = tempRet0;
 if (($73 | 0) >= 0) {
  $75 = $this + 32 | 0;
  if (!(HEAP8[$75 >> 0] & 1)) $84 = $75 + 1 | 0; else $84 = HEAP32[$this + 40 >> 2] | 0;
  $85 = $$in - $84 | 0;
  $87 = (($85 | 0) < 0) << 31 >> 31;
  if (!(($87 | 0) < ($73 | 0) | ($87 | 0) == ($73 | 0) & $85 >>> 0 < $72 >>> 0)) {
   $$pre = $__wch & 8;
   if (!(($72 | 0) == 0 & ($73 | 0) == 0)) {
    if ($$pre) if (!(HEAP32[$this + 12 >> 2] | 0)) {
     $109 = $agg$result;
     HEAP32[$109 >> 2] = 0;
     HEAP32[$109 + 4 >> 2] = 0;
     $114 = $agg$result + 8 | 0;
     HEAP32[$114 >> 2] = -1;
     HEAP32[$114 + 4 >> 2] = -1;
     return;
    }
    if (($__wch & 16 | 0) != 0 & ($5 | 0) == 0) {
     $121 = $agg$result;
     HEAP32[$121 >> 2] = 0;
     HEAP32[$121 + 4 >> 2] = 0;
     $126 = $agg$result + 8 | 0;
     HEAP32[$126 >> 2] = -1;
     HEAP32[$126 + 4 >> 2] = -1;
     return;
    }
   }
   if ($$pre) {
    HEAP32[$this + 12 >> 2] = (HEAP32[$this + 8 >> 2] | 0) + $72;
    HEAP32[$this + 16 >> 2] = $7;
   }
   if ($__wch & 16) HEAP32[$4 >> 2] = (HEAP32[$this + 20 >> 2] | 0) + $72;
   $142 = $agg$result;
   HEAP32[$142 >> 2] = 0;
   HEAP32[$142 + 4 >> 2] = 0;
   $147 = $agg$result + 8 | 0;
   HEAP32[$147 >> 2] = $72;
   HEAP32[$147 + 4 >> 2] = $73;
   return;
  }
 }
 $93 = $agg$result;
 HEAP32[$93 >> 2] = 0;
 HEAP32[$93 + 4 >> 2] = 0;
 $98 = $agg$result + 8 | 0;
 HEAP32[$98 >> 2] = -1;
 HEAP32[$98 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__19__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($__ct, $__in_units, $__exp, $__a, $__a_end, $__decimal_point, $__thousands_sep, $__grouping, $__g, $__g_end, $__dc, $__atoms) {
 $__ct = $__ct | 0;
 $__in_units = $__in_units | 0;
 $__exp = $__exp | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__dc = $__dc | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i3 = 0, $$0$lcssa$i = 0, $14 = 0, $19 = 0, $22 = 0, $3 = 0, $33 = 0, $38 = 0, $40 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $52 = 0, $64 = 0, $72 = 0, $81 = 0, $86 = 0, $88 = 0;
 L1 : do if (($__ct | 0) == ($__decimal_point | 0)) if (!(HEAP8[$__in_units >> 0] | 0)) $$0 = -1; else {
  HEAP8[$__in_units >> 0] = 0;
  $3 = HEAP32[$__a_end >> 2] | 0;
  HEAP32[$__a_end >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = 46;
  $5 = HEAP8[$__grouping >> 0] | 0;
  if (!((($5 & 1) == 0 ? ($5 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0)) $$0 = 0; else {
   $14 = HEAP32[$__g_end >> 2] | 0;
   if (($14 - $__g | 0) < 160) {
    $19 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $14 + 4;
    HEAP32[$14 >> 2] = $19;
    $$0 = 0;
   } else $$0 = 0;
  }
 } else {
  if (($__ct | 0) == ($__thousands_sep | 0)) {
   $22 = HEAP8[$__grouping >> 0] | 0;
   if ((($22 & 1) == 0 ? ($22 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
    if (!(HEAP8[$__in_units >> 0] | 0)) {
     $$0 = -1;
     break;
    }
    $33 = HEAP32[$__g_end >> 2] | 0;
    if (($33 - $__g | 0) >= 160) {
     $$0 = 0;
     break;
    }
    $38 = HEAP32[$__dc >> 2] | 0;
    HEAP32[$__g_end >> 2] = $33 + 4;
    HEAP32[$33 >> 2] = $38;
    HEAP32[$__dc >> 2] = 0;
    $$0 = 0;
    break;
   }
  }
  $40 = $__atoms + 128 | 0;
  $$0$i3 = $__atoms;
  while (1) {
   if ((HEAP32[$$0$i3 >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i3;
    break;
   }
   $$0$i3 = $$0$i3 + 4 | 0;
   if (($$0$i3 | 0) == ($40 | 0)) {
    $$0$lcssa$i = $40;
    break;
   }
  }
  $47 = $$0$lcssa$i - $__atoms | 0;
  $48 = $47 >> 2;
  if (($47 | 0) > 124) $$0 = -1; else {
   $51 = HEAP8[61448 + $48 >> 0] | 0;
   switch ($48 | 0) {
   case 24:
   case 25:
    {
     $52 = HEAP32[$__a_end >> 2] | 0;
     if (($52 | 0) != ($__a | 0)) if ((HEAPU8[$52 + -1 >> 0] & 95 | 0) != (HEAPU8[$__exp >> 0] & 127 | 0)) {
      $$0 = -1;
      break L1;
     }
     HEAP32[$__a_end >> 2] = $52 + 1;
     HEAP8[$52 >> 0] = $51;
     $$0 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$__exp >> 0] = 80;
     break;
    }
   default:
    {
     $64 = $51 & 95;
     if (($64 | 0) == (HEAP8[$__exp >> 0] | 0)) {
      HEAP8[$__exp >> 0] = $64 | 128;
      if (HEAP8[$__in_units >> 0] | 0) {
       HEAP8[$__in_units >> 0] = 0;
       $72 = HEAP8[$__grouping >> 0] | 0;
       if ((($72 & 1) == 0 ? ($72 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) {
        $81 = HEAP32[$__g_end >> 2] | 0;
        if (($81 - $__g | 0) < 160) {
         $86 = HEAP32[$__dc >> 2] | 0;
         HEAP32[$__g_end >> 2] = $81 + 4;
         HEAP32[$81 >> 2] = $86;
        }
       }
      }
     }
    }
   }
   $88 = HEAP32[$__a_end >> 2] | 0;
   HEAP32[$__a_end >> 2] = $88 + 1;
   HEAP8[$88 >> 0] = $51;
   if (($47 | 0) > 84) $$0 = 0; else {
    HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
    $$0 = 0;
   }
  }
 } while (0);
 return $$0 | 0;
}

function _jsonlang_evaluate_snippet($vm, $filename, $snippet, $error) {
 $vm = $vm | 0;
 $filename = $filename | 0;
 $snippet = $snippet | 0;
 $error = $error | 0;
 var $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $56 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __THREW__ = 0;
 $1 = invoke_iiiiii(24, $vm | 0, $filename | 0, $snippet | 0, $error | 0, 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  STACKTOP = sp;
  return $1 | 0;
 }
 $4 = ___cxa_find_matching_catch(608, 624) | 0;
 $5 = tempRet0;
 if (($5 | 0) == (_llvm_eh_typeid_for(608) | 0)) {
  ___cxa_begin_catch($4 | 0) | 0;
  _fwrite(54553, 49, 1, HEAP32[1080] | 0) | 0;
  __THREW__ = 0;
  invoke_v(3);
  __THREW__ = 0;
  $10 = ___cxa_find_matching_catch() | 0;
  $11 = tempRet0;
  __THREW__ = 0;
  invoke_v(2);
  $12 = __THREW__;
  __THREW__ = 0;
  if ($12 & 1) {
   $55 = ___cxa_find_matching_catch(0) | 0;
   $56 = tempRet0;
   ___clang_call_terminate($55);
  } else {
   $$01 = $10;
   $$02 = $11;
   ___resumeException($$01 | 0);
  }
 }
 if (($5 | 0) != (_llvm_eh_typeid_for(624) | 0)) {
  $$01 = $4;
  $$02 = $5;
  ___resumeException($$01 | 0);
 }
 $16 = ___cxa_begin_catch($4 | 0) | 0;
 __THREW__ = 0;
 $17 = invoke_iiii(29, 8580, 54667, 75) | 0;
 $18 = __THREW__;
 __THREW__ = 0;
 do if ($18 & 1) label = 14; else {
  $23 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 8 >> 2] & 127]($16) | 0;
  $24 = _strlen($23) | 0;
  __THREW__ = 0;
  $25 = invoke_iiii(29, $17 | 0, $23 | 0, $24 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if ($26 & 1) label = 14; else {
   __THREW__ = 0;
   $32 = invoke_ii(68, $25 + (HEAP32[(HEAP32[$25 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   $33 = __THREW__;
   __THREW__ = 0;
   if ($33 & 1) label = 14; else {
    HEAP32[$0 >> 2] = $32;
    __THREW__ = 0;
    $35 = invoke_iii(22, $0 | 0, 11164) | 0;
    $36 = __THREW__;
    __THREW__ = 0;
    if (!($36 & 1)) {
     __THREW__ = 0;
     $41 = invoke_iii(HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] | 0, $35 | 0, 10) | 0;
     $42 = __THREW__;
     __THREW__ = 0;
     if (!($42 & 1)) {
      __ZNSt3__16localeD2Ev($0);
      __THREW__ = 0;
      invoke_iii(25, $25 | 0, $41 | 0) | 0;
      $46 = __THREW__;
      __THREW__ = 0;
      if ($46 & 1) {
       label = 14;
       break;
      }
      __THREW__ = 0;
      invoke_ii(69, $25 | 0) | 0;
      $48 = __THREW__;
      __THREW__ = 0;
      if ($48 & 1) {
       label = 14;
       break;
      }
      __THREW__ = 0;
      invoke_v(3);
      __THREW__ = 0;
      label = 14;
      break;
     }
    }
    $44 = ___cxa_find_matching_catch() | 0;
    $45 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    $eh$lpad$body$index2Z2D = $45;
    $eh$lpad$body$indexZ2D = $44;
   }
  }
 } while (0);
 if ((label | 0) == 14) {
  $51 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $51;
 }
 __THREW__ = 0;
 invoke_v(2);
 $53 = __THREW__;
 __THREW__ = 0;
 if ($53 & 1) {
  $55 = ___cxa_find_matching_catch(0) | 0;
  $56 = tempRet0;
  ___clang_call_terminate($55);
 } else {
  $$01 = $eh$lpad$body$indexZ2D;
  $$02 = $eh$lpad$body$index2Z2D;
  ___resumeException($$01 | 0);
 }
 return 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre = 0, $$pre$i3$i$i915 = 0, $0 = 0, $13 = 0, $16 = 0, $28 = 0, $3 = 0, $30 = 0, $46 = 0, $47 = 0, $48 = 0, $58 = 0, $59 = 0, $71 = 0, $83 = 0, $84 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $83 = 1; else {
  $3 = HEAP32[$0 + 12 >> 2] | 0;
  if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
  if (($$0$i$i$i$i | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $83 = 1;
   break;
  } else {
   $83 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $13 = HEAP32[$__e >> 2] | 0;
 do if (!$13) label = 14; else {
  $16 = HEAP32[$13 + 12 >> 2] | 0;
  if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
  if (($$0$i$i1$i$i | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 14;
   break;
  } else if ($83) {
   $$pre$i3$i$i915 = $13;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($83) label = 16; else {
  $$pre$i3$i$i915 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 17) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAP32[$30 >> 2] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 52 >> 2] & 63]($__ct, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $84 = 1; else {
    $58 = $$pre;
    label = 25;
   }
  } else {
   HEAP32[$47 >> 2] = $48 + 4;
   $58 = $46;
   label = 25;
  }
  do if ((label | 0) == 25) {
   $59 = HEAP32[$58 + 12 >> 2] | 0;
   if (($59 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 127]($58) | 0; else $$0$i$i$i$i1 = HEAP32[$59 >> 2] | 0;
   if (($$0$i$i$i$i1 | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $84 = 1;
    break;
   } else {
    $84 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$$pre$i3$i$i915) label = 37; else {
   $71 = HEAP32[$$pre$i3$i$i915 + 12 >> 2] | 0;
   if (($71 | 0) == (HEAP32[$$pre$i3$i$i915 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i915 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i915) | 0; else $$0$i$i1$i$i7 = HEAP32[$71 >> 2] | 0;
   if (($$0$i$i1$i$i7 | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 37;
    break;
   } else if ($84) break L22; else break;
  } while (0);
  if ((label | 0) == 37) if (!$84) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}

function _scanexp($f, $pok) {
 $f = $f | 0;
 $pok = $pok | 0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $35 = 0, $36 = 0, $48 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $78 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $x$013 = 0;
 $0 = $f + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $f + 100 | 0;
 if ($1 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
  HEAP32[$0 >> 2] = $1 + 1;
  $10 = HEAPU8[$1 >> 0] | 0;
 } else $10 = ___shgetc($f) | 0;
 switch ($10 | 0) {
 case 43:
 case 45:
  {
   $11 = ($10 | 0) == 45 & 1;
   $12 = HEAP32[$0 >> 2] | 0;
   if ($12 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $12 + 1;
    $20 = HEAPU8[$12 >> 0] | 0;
   } else $20 = ___shgetc($f) | 0;
   if (($pok | 0) != 0 & ($20 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$2 >> 2] | 0)) {
    $c$0 = $20;
    $neg$0 = $11;
   } else {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    $c$0 = $20;
    $neg$0 = $11;
   } else {
    $c$0 = $20;
    $neg$0 = $11;
   }
   break;
  }
 default:
  {
   $c$0 = $10;
   $neg$0 = 0;
  }
 }
 if (($c$0 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$2 >> 2] | 0)) {
  $98 = -2147483648;
  $99 = 0;
 } else {
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $98 = -2147483648;
  $99 = 0;
 } else {
  $c$112 = $c$0;
  $x$013 = 0;
  while (1) {
   $35 = $c$112 + -48 + ($x$013 * 10 | 0) | 0;
   $36 = HEAP32[$0 >> 2] | 0;
   if ($36 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $36 + 1;
    $c$1$be = HEAPU8[$36 >> 0] | 0;
   } else $c$1$be = ___shgetc($f) | 0;
   if (($c$1$be + -48 | 0) >>> 0 < 10 & ($35 | 0) < 214748364) {
    $c$112 = $c$1$be;
    $x$013 = $35;
   } else {
    $$lcssa22 = $35;
    $c$1$be$lcssa = $c$1$be;
    break;
   }
  }
  $48 = (($$lcssa22 | 0) < 0) << 31 >> 31;
  if (($c$1$be$lcssa + -48 | 0) >>> 0 < 10) {
   $53 = $$lcssa22;
   $54 = $48;
   $c$27 = $c$1$be$lcssa;
   while (1) {
    $55 = ___muldi3($53 | 0, $54 | 0, 10, 0) | 0;
    $56 = tempRet0;
    $59 = _i64Add($c$27 | 0, (($c$27 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    $61 = _i64Add($59 | 0, tempRet0 | 0, $55 | 0, $56 | 0) | 0;
    $62 = tempRet0;
    $63 = HEAP32[$0 >> 2] | 0;
    if ($63 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $63 + 1;
     $c$2$be = HEAPU8[$63 >> 0] | 0;
    } else $c$2$be = ___shgetc($f) | 0;
    if (($c$2$be + -48 | 0) >>> 0 < 10 & (($62 | 0) < 21474836 | ($62 | 0) == 21474836 & $61 >>> 0 < 2061584302)) {
     $53 = $61;
     $54 = $62;
     $c$27 = $c$2$be;
    } else {
     $92 = $61;
     $93 = $62;
     $c$2$lcssa = $c$2$be;
     break;
    }
   }
  } else {
   $92 = $$lcssa22;
   $93 = $48;
   $c$2$lcssa = $c$1$be$lcssa;
  }
  if (($c$2$lcssa + -48 | 0) >>> 0 < 10) do {
   $78 = HEAP32[$0 >> 2] | 0;
   if ($78 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $78 + 1;
    $c$3$be = HEAPU8[$78 >> 0] | 0;
   } else $c$3$be = ___shgetc($f) | 0;
  } while (($c$3$be + -48 | 0) >>> 0 < 10);
  if (HEAP32[$2 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $91 = ($neg$0 | 0) != 0;
  $94 = _i64Subtract(0, 0, $92 | 0, $93 | 0) | 0;
  $98 = $91 ? tempRet0 : $93;
  $99 = $91 ? $94 : $92;
 }
 tempRet0 = $98;
 return $99 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$0$i$i = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi4Z2D = 0, $$pre2 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $21 = 0, $23 = 0, $26 = 0, $28 = 0, $36 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $48 = 0, $49 = 0, $55 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $8 = 0, $__nm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$8 & 31]($this, $$byval_copy, $__iob, $__fl, $__v & 1) | 0;
 } else {
  $12 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$1 >> 2] = $12;
  __THREW__ = 0;
  $13 = invoke_iii(22, $1 | 0, 11312) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($14 & 1) {
   $63 = ___cxa_find_matching_catch() | 0;
   $64 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv($12) | 0;
   $$0 = $64;
   $$01 = $63;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv($12) | 0;
   $16 = HEAP32[$13 >> 2] | 0;
   if ($__v) FUNCTION_TABLE_vii[HEAP32[$16 + 24 >> 2] & 127]($__nm, $13); else FUNCTION_TABLE_vii[HEAP32[$16 + 28 >> 2] & 127]($__nm, $13);
   $21 = HEAP8[$__nm >> 0] | 0;
   $23 = ($21 & 1) == 0;
   $26 = $__nm + 4 | 0;
   $$pre2 = $__nm + 8 | 0;
   $$pre$phi4Z2D = $23 ? $26 : $__nm + 4 | 0;
   $$ph = $23 ? $26 : HEAP32[$__nm + 8 >> 2] | 0;
   $28 = ($21 & 1) == 0;
   L11 : do if (($$ph | 0) != (($28 ? $$pre$phi4Z2D : HEAP32[$$pre2 >> 2] | 0) + (($28 ? ($21 & 255) >>> 1 : HEAP32[$$pre$phi4Z2D >> 2] | 0) << 2) | 0)) {
    $37 = $$ph;
    while (1) {
     $36 = HEAP32[$37 >> 2] | 0;
     $38 = HEAP32[$__s >> 2] | 0;
     if ($38) {
      $40 = $38 + 24 | 0;
      $41 = HEAP32[$40 >> 2] | 0;
      if (($41 | 0) == (HEAP32[$38 + 28 >> 2] | 0)) {
       __THREW__ = 0;
       $48 = invoke_iii(HEAP32[(HEAP32[$38 >> 2] | 0) + 52 >> 2] | 0, $38 | 0, $36 | 0) | 0;
       $49 = __THREW__;
       __THREW__ = 0;
       if ($49 & 1) break; else $$0$i$i = $48;
      } else {
       HEAP32[$40 >> 2] = $41 + 4;
       HEAP32[$41 >> 2] = $36;
       $$0$i$i = $36;
      }
      if (($$0$i$i | 0) == -1) HEAP32[$__s >> 2] = 0;
     }
     $37 = $37 + 4 | 0;
     $$pre = HEAP8[$__nm >> 0] | 0;
     $55 = ($$pre & 1) == 0;
     if (($37 | 0) == (($55 ? $$pre$phi4Z2D : HEAP32[$$pre2 >> 2] | 0) + (($55 ? ($$pre & 255) >>> 1 : HEAP32[$$pre$phi4Z2D >> 2] | 0) << 2) | 0)) break L11;
    }
    $65 = ___cxa_find_matching_catch() | 0;
    $66 = tempRet0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
    $$0 = $66;
    $$01 = $65;
    break L4;
   } while (0);
   $67 = HEAP32[$__s >> 2] | 0;
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__nm);
   $$sroa$0$0 = $67;
   break L1;
  } while (0);
  ___resumeException($$01 | 0);
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$01 = 0, $$byval_copy = 0, $$ph = 0, $$pre = 0, $$pre$phi6Z2D = 0, $$pre2 = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $51 = 0, $52 = 0, $57 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $8 = 0, $__nm = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$byval_copy = sp + 20 | 0;
 $0 = sp + 16 | 0;
 $1 = sp + 12 | 0;
 $__nm = sp;
 L1 : do if (!(HEAP32[$__iob + 4 >> 2] & 1)) {
  $8 = HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$0 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$8 & 31]($this, $$byval_copy, $__iob, $__fl, $__v & 1) | 0;
 } else {
  $12 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
  HEAP32[$1 >> 2] = $12;
  __THREW__ = 0;
  $13 = invoke_iii(22, $1 | 0, 11304) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  L4 : do if ($14 & 1) {
   $65 = ___cxa_find_matching_catch() | 0;
   $66 = tempRet0;
   __ZNSt3__114__shared_count16__release_sharedEv($12) | 0;
   $$0 = $66;
   $$01 = $65;
  } else {
   __ZNSt3__114__shared_count16__release_sharedEv($12) | 0;
   $16 = HEAP32[$13 >> 2] | 0;
   if ($__v) FUNCTION_TABLE_vii[HEAP32[$16 + 24 >> 2] & 127]($__nm, $13); else FUNCTION_TABLE_vii[HEAP32[$16 + 28 >> 2] & 127]($__nm, $13);
   $21 = HEAP8[$__nm >> 0] | 0;
   $23 = ($21 & 1) == 0;
   $26 = $__nm + 1 | 0;
   $$pre2 = $__nm + 8 | 0;
   $$pre$phi6Z2D = $23 ? $26 : $__nm + 1 | 0;
   $$ph = $23 ? $26 : HEAP32[$__nm + 8 >> 2] | 0;
   $27 = $__nm + 4 | 0;
   $29 = ($21 & 1) == 0;
   L11 : do if (($$ph | 0) != (($29 ? $$pre$phi6Z2D : HEAP32[$$pre2 >> 2] | 0) + ($29 ? ($21 & 255) >>> 1 : HEAP32[$27 >> 2] | 0) | 0)) {
    $38 = $$ph;
    L12 : while (1) {
     $37 = HEAP8[$38 >> 0] | 0;
     $39 = HEAP32[$__s >> 2] | 0;
     do if ($39) {
      $41 = $39 + 24 | 0;
      $42 = HEAP32[$41 >> 2] | 0;
      if (($42 | 0) != (HEAP32[$39 + 28 >> 2] | 0)) {
       HEAP32[$41 >> 2] = $42 + 1;
       HEAP8[$42 >> 0] = $37;
       break;
      }
      __THREW__ = 0;
      $51 = invoke_iii(HEAP32[(HEAP32[$39 >> 2] | 0) + 52 >> 2] | 0, $39 | 0, $37 & 255 | 0) | 0;
      $52 = __THREW__;
      __THREW__ = 0;
      if ($52 & 1) break L12;
      if (($51 | 0) == -1) HEAP32[$__s >> 2] = 0;
     } while (0);
     $38 = $38 + 1 | 0;
     $$pre = HEAP8[$__nm >> 0] | 0;
     $57 = ($$pre & 1) == 0;
     if (($38 | 0) == (($57 ? $$pre$phi6Z2D : HEAP32[$$pre2 >> 2] | 0) + ($57 ? ($$pre & 255) >>> 1 : HEAP32[$27 >> 2] | 0) | 0)) break L11;
    }
    $67 = ___cxa_find_matching_catch() | 0;
    $68 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
    $$0 = $68;
    $$01 = $67;
    break L4;
   } while (0);
   $69 = HEAP32[$__s >> 2] | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nm);
   $$sroa$0$0 = $69;
   break L1;
  } while (0);
  ___resumeException($$01 | 0);
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i1 = 0, $$0$i$i1$i$i = 0, $$0$i$i1$i$i7 = 0, $$pre$i3$i$i9 = 0, $0 = 0, $13 = 0, $16 = 0, $26 = 0, $28 = 0, $3 = 0, $41 = 0, $42 = 0, $43 = 0, $51 = 0, $54 = 0, $66 = 0, $78 = 0, $79 = 0, $80 = 0, label = 0;
 L1 : while (1) {
  $0 = HEAP32[$__b >> 2] | 0;
  do if (!$0) $78 = 1; else {
   $3 = HEAP32[$0 + 12 >> 2] | 0;
   if (($3 | 0) == (HEAP32[$0 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0; else $$0$i$i$i$i = HEAP32[$3 >> 2] | 0;
   if (($$0$i$i$i$i | 0) == -1) {
    HEAP32[$__b >> 2] = 0;
    $78 = 1;
    break;
   } else {
    $78 = (HEAP32[$__b >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $13 = HEAP32[$__e >> 2] | 0;
  do if (!$13) label = 15; else {
   $16 = HEAP32[$13 + 12 >> 2] | 0;
   if (($16 | 0) == (HEAP32[$13 + 16 >> 2] | 0)) $$0$i$i1$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 127]($13) | 0; else $$0$i$i1$i$i = HEAP32[$16 >> 2] | 0;
   if (($$0$i$i1$i$i | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 15;
    break;
   } else if ($78) {
    $79 = $13;
    break;
   } else {
    $$pre$i3$i$i9 = $13;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($78) {
    $$pre$i3$i$i9 = 0;
    break;
   } else $79 = 0;
  }
  $26 = HEAP32[$__b >> 2] | 0;
  $28 = HEAP32[$26 + 12 >> 2] | 0;
  if (($28 | 0) == (HEAP32[$26 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$26 >> 2] | 0) + 36 >> 2] & 127]($26) | 0; else $$0$i$i = HEAP32[$28 >> 2] | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 12 >> 2] & 63]($__ct, 8192, $$0$i$i) | 0)) {
   $$pre$i3$i$i9 = $79;
   break;
  }
  $41 = HEAP32[$__b >> 2] | 0;
  $42 = $41 + 12 | 0;
  $43 = HEAP32[$42 >> 2] | 0;
  if (($43 | 0) == (HEAP32[$41 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 40 >> 2] & 127]($41) | 0;
   continue;
  } else {
   HEAP32[$42 >> 2] = $43 + 4;
   continue;
  }
 }
 $51 = HEAP32[$__b >> 2] | 0;
 do if (!$51) $80 = 1; else {
  $54 = HEAP32[$51 + 12 >> 2] | 0;
  if (($54 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) $$0$i$i$i$i1 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] & 127]($51) | 0; else $$0$i$i$i$i1 = HEAP32[$54 >> 2] | 0;
  if (($$0$i$i$i$i1 | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$__b >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$$pre$i3$i$i9) label = 37; else {
  $66 = HEAP32[$$pre$i3$i$i9 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$$pre$i3$i$i9 + 16 >> 2] | 0)) $$0$i$i1$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i3$i$i9 >> 2] | 0) + 36 >> 2] & 127]($$pre$i3$i$i9) | 0; else $$0$i$i1$i$i7 = HEAP32[$66 >> 2] | 0;
  if (($$0$i$i1$i$i7 | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 37;
   break;
  } else if ($80) break; else {
   label = 39;
   break;
  }
 } while (0);
 if ((label | 0) == 37) if ($80) label = 39;
 if ((label | 0) == 39) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function _wcsrtombs($s, $ws, $n, $st) {
 $s = $s | 0;
 $ws = $ws | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$01$lcssa = 0, $$0129 = 0, $$0129$lcssa = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$223 = 0, $$223$lcssa = 0, $$24$lcssa = 0, $$2428 = 0, $$2428$lcssa = 0, $$3 = 0, $$35 = 0, $$422 = 0, $$422$lcssa = 0, $$422$lcssa82 = 0, $$5 = 0, $$pn = 0, $13 = 0, $14 = 0, $19 = 0, $2 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $46 = 0, $6 = 0, $7 = 0, $buf = 0, $ws2$019 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $buf = sp;
 L1 : do if (!$s) {
  $2 = HEAP32[$ws >> 2] | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if (!$3) $$0 = 0; else {
   $$0218 = 0;
   $6 = $3;
   $ws2$019 = $2;
   while (1) {
    if ($6 >>> 0 > 127) {
     $7 = _wcrtomb($buf, $6, 0) | 0;
     if (($7 | 0) == -1) {
      $$0 = -1;
      break L1;
     } else $$pn = $7;
    } else $$pn = 1;
    $$13 = $$pn + $$0218 | 0;
    $ws2$019 = $ws2$019 + 4 | 0;
    $6 = HEAP32[$ws2$019 >> 2] | 0;
    if (!$6) {
     $$0 = $$13;
     break;
    } else $$0218 = $$13;
   }
  }
 } else {
  L9 : do if ($n >>> 0 > 3) {
   $$0129 = $s;
   $$2428 = $n;
   $14 = HEAP32[$ws >> 2] | 0;
   while (1) {
    $13 = HEAP32[$14 >> 2] | 0;
    if (($13 + -1 | 0) >>> 0 > 126) {
     if (!$13) {
      $$0129$lcssa = $$0129;
      $$2428$lcssa = $$2428;
      break;
     }
     $19 = _wcrtomb($$0129, $13, 0) | 0;
     if (($19 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     $$1 = $$0129 + $19 | 0;
     $$35 = $$2428 - $19 | 0;
     $27 = $14;
    } else {
     HEAP8[$$0129 >> 0] = $13;
     $$1 = $$0129 + 1 | 0;
     $$35 = $$2428 + -1 | 0;
     $27 = HEAP32[$ws >> 2] | 0;
    }
    $14 = $27 + 4 | 0;
    HEAP32[$ws >> 2] = $14;
    if ($$35 >>> 0 <= 3) {
     $$01$lcssa = $$1;
     $$24$lcssa = $$35;
     break L9;
    } else {
     $$0129 = $$1;
     $$2428 = $$35;
    }
   }
   HEAP8[$$0129$lcssa >> 0] = 0;
   HEAP32[$ws >> 2] = 0;
   $$0 = $n - $$2428$lcssa | 0;
   break L1;
  } else {
   $$01$lcssa = $s;
   $$24$lcssa = $n;
  } while (0);
  if (!$$24$lcssa) $$0 = $n; else {
   $$223 = $$01$lcssa;
   $$422 = $$24$lcssa;
   $30 = HEAP32[$ws >> 2] | 0;
   while (1) {
    $29 = HEAP32[$30 >> 2] | 0;
    if (($29 + -1 | 0) >>> 0 > 126) {
     if (!$29) {
      $$223$lcssa = $$223;
      $$422$lcssa = $$422;
      label = 19;
      break;
     }
     $35 = _wcrtomb($buf, $29, 0) | 0;
     if (($35 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     if ($$422 >>> 0 < $35 >>> 0) {
      $$422$lcssa82 = $$422;
      label = 22;
      break;
     }
     _wcrtomb($$223, HEAP32[$30 >> 2] | 0, 0) | 0;
     $$3 = $$223 + $35 | 0;
     $$5 = $$422 - $35 | 0;
     $46 = $30;
    } else {
     HEAP8[$$223 >> 0] = $29;
     $$3 = $$223 + 1 | 0;
     $$5 = $$422 + -1 | 0;
     $46 = HEAP32[$ws >> 2] | 0;
    }
    $30 = $46 + 4 | 0;
    HEAP32[$ws >> 2] = $30;
    if (!$$5) {
     $$0 = $n;
     break L1;
    } else {
     $$223 = $$3;
     $$422 = $$5;
    }
   }
   if ((label | 0) == 19) {
    HEAP8[$$223$lcssa >> 0] = 0;
    HEAP32[$ws >> 2] = 0;
    $$0 = $n - $$422$lcssa | 0;
    break;
   } else if ((label | 0) == 22) {
    $$0 = $n - $$422$lcssa82 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $$lcssa14 = 0, $0 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $7 = 0, $8 = 0, $eh$lpad$body$index3Z2D = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$__x >> 2] | 0;
 $7 = $3 - $4 | 0;
 $8 = ($7 | 0) / 40 | 0;
 if (($3 | 0) == ($4 | 0)) return;
 if ($8 >>> 0 > 107374182) {
  __THREW__ = 0;
  invoke_vi(175, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if ($11 & 1) label = 12; else label = 4;
 } else label = 4;
 do if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if ($14 & 1) label = 12; else {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$this + 8 >> 2] = $13 + ($8 * 40 | 0);
   $18 = HEAP32[$__x >> 2] | 0;
   $19 = HEAP32[$2 >> 2] | 0;
   if (($18 | 0) == ($19 | 0)) return;
   $$01$i = $18;
   $21 = $13;
   while (1) {
    __THREW__ = 0;
    invoke_vii(40, $21 | 0, $$01$i | 0);
    $22 = __THREW__;
    __THREW__ = 0;
    if ($22 & 1) {
     label = 11;
     break;
    }
    $24 = $21 + 12 | 0;
    $25 = $$01$i + 12 | 0;
    HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
    HEAP32[$24 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
    HEAP32[$24 + 8 >> 2] = HEAP32[$25 + 8 >> 2];
    HEAP32[$24 + 12 >> 2] = HEAP32[$25 + 12 >> 2];
    __THREW__ = 0;
    invoke_vii(40, $21 + 28 | 0, $$01$i + 28 | 0);
    $28 = __THREW__;
    __THREW__ = 0;
    if ($28 & 1) {
     $$lcssa14 = $21;
     label = 9;
     break;
    }
    $21 = (HEAP32[$0 >> 2] | 0) + 40 | 0;
    HEAP32[$0 >> 2] = $21;
    $$01$i = $$01$i + 40 | 0;
    if (($$01$i | 0) == ($19 | 0)) {
     label = 19;
     break;
    }
   }
   if ((label | 0) == 9) {
    $30 = ___cxa_find_matching_catch() | 0;
    $31 = tempRet0;
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$lcssa14);
    $eh$lpad$body$index3Z2D = $31;
    $eh$lpad$body$indexZ2D = $30;
    break;
   } else if ((label | 0) == 11) {
    $36 = ___cxa_find_matching_catch() | 0;
    $eh$lpad$body$index3Z2D = tempRet0;
    $eh$lpad$body$indexZ2D = $36;
    break;
   } else if ((label | 0) == 19) return;
  }
 } while (0);
 if ((label | 0) == 12) {
  $38 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index3Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $38;
 }
 $40 = HEAP32[$this >> 2] | 0;
 if (!$40) ___resumeException($eh$lpad$body$indexZ2D | 0);
 $42 = HEAP32[$0 >> 2] | 0;
 if (($42 | 0) == ($40 | 0)) $49 = $40; else {
  $45 = $42;
  do {
   $44 = $45 + -40 | 0;
   HEAP32[$0 >> 2] = $44;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($45 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($44);
   $45 = HEAP32[$0 >> 2] | 0;
  } while (($45 | 0) != ($40 | 0));
  $49 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($49);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
}

function _mbsnrtowcs($wcs, $src, $n, $wn, $st) {
 $wcs = $wcs | 0;
 $src = $src | 0;
 $n = $n | 0;
 $wn = $wn | 0;
 $st = $st | 0;
 var $$02$ = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $23 = 0, $24 = 0, $32 = 0, $37 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $s = 0, $wbuf = 0, $wcs$ = 0, $wn$ = 0, $ws$020 = 0, $ws$020$lcssa56 = 0, $ws$09 = 0, $ws$1 = 0, $ws$215 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 $wbuf = sp + 8 | 0;
 $s = sp;
 $0 = HEAP32[$src >> 2] | 0;
 HEAP32[$s >> 2] = $0;
 $1 = ($wcs | 0) != 0;
 $wn$ = $1 ? $wn : 256;
 $wcs$ = $1 ? $wcs : $wbuf;
 $$cast = $0;
 L1 : do if (($wn$ | 0) != 0 & ($0 | 0) != 0) {
  $$021 = $n;
  $$0218 = $wn$;
  $37 = $$cast;
  $cnt$019 = 0;
  $ws$020 = $wcs$;
  while (1) {
   $4 = $$021 >>> 2;
   $5 = $4 >>> 0 >= $$0218 >>> 0;
   if (!($$021 >>> 0 > 131 | $5)) {
    $$1 = $$021;
    $$24 = $$0218;
    $19 = $37;
    $cnt$1 = $cnt$019;
    $ws$09 = $ws$020;
    break L1;
   }
   $$02$ = $5 ? $$0218 : $4;
   $8 = $$021 - $$02$ | 0;
   $9 = _mbsrtowcs($ws$020, $s, $$02$, $st) | 0;
   if (($9 | 0) == -1) {
    $$lcssa57 = $8;
    $ws$020$lcssa56 = $ws$020;
    break;
   }
   $11 = ($ws$020 | 0) == ($wbuf | 0);
   $13 = $11 ? 0 : $9;
   $$13 = $$0218 - $13 | 0;
   $ws$1 = $11 ? $ws$020 : $ws$020 + ($9 << 2) | 0;
   $14 = $9 + $cnt$019 | 0;
   $15 = HEAP32[$s >> 2] | 0;
   if (($$0218 | 0) != ($13 | 0) & ($15 | 0) != 0) {
    $$021 = $8;
    $$0218 = $$13;
    $37 = $15;
    $cnt$019 = $14;
    $ws$020 = $ws$1;
   } else {
    $$1 = $8;
    $$24 = $$13;
    $19 = $15;
    $cnt$1 = $14;
    $ws$09 = $ws$1;
    break L1;
   }
  }
  $$1 = $$lcssa57;
  $$24 = 0;
  $19 = HEAP32[$s >> 2] | 0;
  $cnt$1 = -1;
  $ws$09 = $ws$020$lcssa56;
 } else {
  $$1 = $n;
  $$24 = $wn$;
  $19 = $$cast;
  $cnt$1 = 0;
  $ws$09 = $wcs$;
 } while (0);
 L8 : do if (!$19) $cnt$3 = $cnt$1; else if (($$24 | 0) != 0 & ($$1 | 0) != 0) {
  $$216 = $$1;
  $$313 = $$24;
  $23 = $19;
  $cnt$214 = $cnt$1;
  $ws$215 = $ws$09;
  while (1) {
   $24 = _mbrtowc($ws$215, $23, $$216, $st) | 0;
   if (($24 + 2 | 0) >>> 0 < 3) {
    $$lcssa = $24;
    $cnt$214$lcssa = $cnt$214;
    break;
   }
   $23 = (HEAP32[$s >> 2] | 0) + $24 | 0;
   HEAP32[$s >> 2] = $23;
   $$313 = $$313 + -1 | 0;
   $32 = $cnt$214 + 1 | 0;
   if (!(($$313 | 0) != 0 & ($$216 | 0) != ($24 | 0))) {
    $cnt$3 = $32;
    break L8;
   } else {
    $$216 = $$216 - $24 | 0;
    $cnt$214 = $32;
    $ws$215 = $ws$215 + 4 | 0;
   }
  }
  switch ($$lcssa | 0) {
  case -1:
   {
    $cnt$3 = -1;
    break L8;
    break;
   }
  case 0:
   {
    HEAP32[$s >> 2] = 0;
    $cnt$3 = $cnt$214$lcssa;
    break L8;
    break;
   }
  default:
   {
    HEAP32[$st >> 2] = 0;
    $cnt$3 = $cnt$214$lcssa;
    break L8;
   }
  }
 } else $cnt$3 = $cnt$1; while (0);
 if ($1) HEAP32[$src >> 2] = HEAP32[$s >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE($this, $lr, $fields) {
 $this = $this | 0;
 $lr = $lr | 0;
 $fields = $fields | 0;
 var $$lcssa = 0, $$lcssa17 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $24 = 0, $26 = 0, $31 = 0, $34 = 0, $35 = 0, $37 = 0, $4 = 0, $47 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__f$01$i$i$i = 0, label = 0, $21$looptemp = 0, $__f$01$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 3192;
 $0 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $lr);
 $1 = $this + 16 | 0;
 $2 = $lr + 12 | 0;
 HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$1 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 HEAP32[$this + 32 >> 2] = 15;
 $4 = $this + 36 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = $this + 40 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this >> 2] = 3452;
 $7 = $this + 48 | 0;
 HEAP32[$7 >> 2] = $7;
 $8 = $this + 52 | 0;
 HEAP32[$8 >> 2] = $7;
 $9 = $this + 56 | 0;
 HEAP32[$9 >> 2] = 0;
 $11 = HEAP32[$fields + 4 >> 2] | 0;
 if (($11 | 0) == ($fields | 0)) return;
 $18 = $11;
 $21 = $7;
 $24 = 0;
 $26 = $11;
 while (1) {
  __THREW__ = 0;
  $21$looptemp = $21;
  $21 = invoke_ii(67, 20) | 0;
  $15 = __THREW__;
  __THREW__ = 0;
  if ($15 & 1) {
   $$lcssa = $21$looptemp;
   $$lcssa17 = $24;
   break;
  }
  $17 = $18 + 8 | 0;
  $19 = $21 + 8 | 0;
  HEAP32[$19 >> 2] = HEAP32[$17 >> 2];
  HEAP32[$19 + 4 >> 2] = HEAP32[$17 + 4 >> 2];
  HEAP32[$19 + 8 >> 2] = HEAP32[$17 + 8 >> 2];
  HEAP32[$21 + 4 >> 2] = $7;
  HEAP32[$21 >> 2] = $21$looptemp;
  HEAP32[$21$looptemp + 4 >> 2] = $21;
  HEAP32[$7 >> 2] = $21;
  $24 = $24 + 1 | 0;
  HEAP32[$9 >> 2] = $24;
  $26 = HEAP32[$26 + 4 >> 2] | 0;
  $18 = $26;
  if (($18 | 0) == ($fields | 0)) {
   label = 8;
   break;
  }
 }
 if ((label | 0) == 8) return;
 $31 = ___cxa_find_matching_catch() | 0;
 if ($$lcssa17) {
  $34 = HEAP32[$8 >> 2] | 0;
  $35 = $$lcssa + 4 | 0;
  $37 = HEAP32[$34 >> 2] | 0;
  HEAP32[$37 + 4 >> 2] = HEAP32[$35 >> 2];
  HEAP32[HEAP32[$35 >> 2] >> 2] = $37;
  HEAP32[$9 >> 2] = 0;
  if (($34 | 0) != ($7 | 0)) {
   $__f$01$i$i$i = $34;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($7 | 0));
   $$pre = HEAP32[$4 >> 2] | 0;
   HEAP32[$this >> 2] = 3192;
   if (!$$pre) {
    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
    ___resumeException($31 | 0);
   }
   $47 = HEAP32[$5 >> 2] | 0;
   if (($47 | 0) != ($$pre | 0)) HEAP32[$5 >> 2] = $47 + (~(($47 + -4 - $$pre | 0) >>> 2) << 2);
   __ZdlPv($$pre);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($31 | 0);
  }
 }
 HEAP32[$this >> 2] = 3192;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 ___resumeException($31 | 0);
}

function __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt, $Maxcode, $mode) {
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 $Maxcode = $Maxcode | 0;
 $mode = $mode | 0;
 var $$0 = 0, $$pre = 0, $$pre1 = 0, $11 = 0, $12 = 0, $17 = 0, $24 = 0, $35 = 0, $38 = 0, $40 = 0, $50 = 0, $55 = 0, $6 = 0, $66 = 0, $72 = 0, $77 = 0, $8 = 0, label = 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 $$pre1 = $to_end;
 if (!($mode & 2)) label = 4; else if (($$pre1 - $to | 0) < 3) $$0 = 1; else {
  HEAP32[$to_nxt >> 2] = $to + 1;
  HEAP8[$to >> 0] = -17;
  $6 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $6 + 1;
  HEAP8[$6 >> 0] = -69;
  $8 = HEAP32[$to_nxt >> 2] | 0;
  HEAP32[$to_nxt >> 2] = $8 + 1;
  HEAP8[$8 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $$pre = HEAP32[$frm_nxt >> 2] | 0;
  if ($$pre >>> 0 < $frm_end >>> 0) {
   $12 = $$pre;
   while (1) {
    $11 = HEAP32[$12 >> 2] | 0;
    if ($11 >>> 0 > $Maxcode >>> 0 | ($11 & -2048 | 0) == 55296) {
     $$0 = 2;
     break L4;
    }
    do if ($11 >>> 0 < 128) {
     $17 = HEAP32[$to_nxt >> 2] | 0;
     if (($$pre1 - $17 | 0) < 1) {
      $$0 = 1;
      break L4;
     }
     HEAP32[$to_nxt >> 2] = $17 + 1;
     HEAP8[$17 >> 0] = $11;
    } else {
     if ($11 >>> 0 < 2048) {
      $24 = HEAP32[$to_nxt >> 2] | 0;
      if (($$pre1 - $24 | 0) < 2) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $24 + 1;
      HEAP8[$24 >> 0] = $11 >>> 6 | 192;
      $35 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $35 + 1;
      HEAP8[$35 >> 0] = $11 & 63 | 128;
      break;
     }
     $38 = HEAP32[$to_nxt >> 2] | 0;
     $40 = $$pre1 - $38 | 0;
     if ($11 >>> 0 < 65536) {
      if (($40 | 0) < 3) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $38 + 1;
      HEAP8[$38 >> 0] = $11 >>> 12 | 224;
      $50 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $50 + 1;
      HEAP8[$50 >> 0] = $11 >>> 6 & 63 | 128;
      $55 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $55 + 1;
      HEAP8[$55 >> 0] = $11 & 63 | 128;
      break;
     } else {
      if (($40 | 0) < 4) {
       $$0 = 1;
       break L4;
      }
      HEAP32[$to_nxt >> 2] = $38 + 1;
      HEAP8[$38 >> 0] = $11 >>> 18 | 240;
      $66 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $66 + 1;
      HEAP8[$66 >> 0] = $11 >>> 12 & 63 | 128;
      $72 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $72 + 1;
      HEAP8[$72 >> 0] = $11 >>> 6 & 63 | 128;
      $77 = HEAP32[$to_nxt >> 2] | 0;
      HEAP32[$to_nxt >> 2] = $77 + 1;
      HEAP8[$77 >> 0] = $11 & 63 | 128;
      break;
     }
    } while (0);
    $12 = (HEAP32[$frm_nxt >> 2] | 0) + 4 | 0;
    HEAP32[$frm_nxt >> 2] = $12;
    if ($12 >>> 0 >= $frm_end >>> 0) {
     $$0 = 0;
     break;
    }
   }
  } else $$0 = 0;
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre$phi3Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $35 = 0, $36 = 0, $38 = 0, $4 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $58 = 0, $60 = 0, $64 = 0, $72 = 0, $75 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (($__c | 0) == -1) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $2 = $this + 12 | 0;
 $4 = $this + 8 | 0;
 $8 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0;
 $9 = $this + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $this + 28 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 do if (($10 | 0) == ($12 | 0)) {
  $14 = $this + 48 | 0;
  if (!(HEAP32[$14 >> 2] & 16)) {
   $$0 = -1;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $18 = $this + 20 | 0;
  $21 = HEAP32[$18 >> 2] | 0;
  $22 = $10 - $21 | 0;
  $23 = $this + 44 | 0;
  $26 = (HEAP32[$23 >> 2] | 0) - $21 | 0;
  $27 = $this + 32 | 0;
  __THREW__ = 0;
  invoke_vii(44, $27 | 0, 0);
  $28 = __THREW__;
  __THREW__ = 0;
  if (!($28 & 1)) {
   if (!(HEAP8[$27 >> 0] & 1)) $35 = 10; else $35 = (HEAP32[$27 >> 2] & -2) + -1 | 0;
   __THREW__ = 0;
   invoke_viii(5, $27 | 0, $35 | 0, 0);
   $36 = __THREW__;
   __THREW__ = 0;
   if (!($36 & 1)) {
    $38 = HEAP8[$27 >> 0] | 0;
    if (!($38 & 1)) {
     $49 = $27 + 1 | 0;
     $50 = ($38 & 255) >>> 1;
    } else {
     $49 = HEAP32[$this + 40 >> 2] | 0;
     $50 = HEAP32[$this + 36 >> 2] | 0;
    }
    $48 = $49 + $50 | 0;
    HEAP32[$18 >> 2] = $49;
    HEAP32[$11 >> 2] = $48;
    $51 = $49 + $22 | 0;
    HEAP32[$9 >> 2] = $51;
    $52 = $49 + $26 | 0;
    HEAP32[$23 >> 2] = $52;
    $$pre$phi3Z2D = $14;
    $$pre$phiZ2D = $23;
    $56 = $51;
    $58 = $52;
    $75 = $48;
    break;
   }
  }
  $53 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($53 | 0) | 0;
  ___cxa_end_catch();
  $$0 = -1;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  $$phi$trans$insert = $this + 44 | 0;
  $$pre$phi3Z2D = $this + 48 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $56 = $10;
  $58 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $75 = $12;
 } while (0);
 $55 = $56 + 1 | 0;
 HEAP32[$0 >> 2] = $55;
 $60 = HEAP32[($55 >>> 0 < $58 >>> 0 ? $$pre$phiZ2D : $0) >> 2] | 0;
 HEAP32[$$pre$phiZ2D >> 2] = $60;
 if (HEAP32[$$pre$phi3Z2D >> 2] & 8) {
  $64 = $this + 32 | 0;
  if (!(HEAP8[$64 >> 0] & 1)) $72 = $64 + 1 | 0; else $72 = HEAP32[$this + 40 >> 2] | 0;
  HEAP32[$4 >> 2] = $72;
  HEAP32[$2 >> 2] = $72 + $8;
  HEAP32[$this + 16 >> 2] = $60;
 }
 if (($56 | 0) == ($75 | 0)) {
  $$0 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, $__c & 255) | 0;
  STACKTOP = sp;
  return $$0 | 0;
 } else {
  HEAP32[$9 >> 2] = $55;
  HEAP8[$56 >> 0] = $__c;
  $$0 = $__c & 255;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZNKSt3__120__time_get_c_storageIwE7__weeksEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $42 = 0, $8 = 0;
 do if (!(HEAP8[2480] | 0)) if (___cxa_guard_acquire(2480) | 0) {
  if (!(HEAP8[2488] | 0)) if (___cxa_guard_acquire(2488) | 0) {
   $8 = 12156;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 12324);
   ___cxa_atexit(192, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2488);
  }
  __THREW__ = 0;
  invoke_iii(37, 12156, 12324) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(37, 12168, 12352) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(37, 12180, 12380) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(37, 12192, 12412) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(37, 12204, 12452) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(37, 12216, 12488) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(37, 12228, 12516) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(37, 12240, 12552) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(37, 12252, 12568) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(37, 12264, 12584) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(37, 12276, 12600) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(37, 12288, 12616) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(37, 12300, 12632) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(37, 12312, 12648) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                HEAP32[3166] = 12156;
                ___cxa_guard_release(2480);
                break;
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
  $42 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2480);
  ___resumeException($42 | 0);
 } while (0);
 return HEAP32[3166] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__weeksEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $42 = 0, $8 = 0;
 do if (!(HEAP8[2464] | 0)) if (___cxa_guard_acquire(2464) | 0) {
  if (!(HEAP8[2472] | 0)) if (___cxa_guard_acquire(2472) | 0) {
   $8 = 11984;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 12152);
   ___cxa_atexit(191, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2472);
  }
  __THREW__ = 0;
  invoke_iii(19, 11984, 62985) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 11996, 62992) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    __THREW__ = 0;
    invoke_iii(19, 12008, 62999) | 0;
    $17 = __THREW__;
    __THREW__ = 0;
    if (!($17 & 1)) {
     __THREW__ = 0;
     invoke_iii(19, 12020, 63007) | 0;
     $19 = __THREW__;
     __THREW__ = 0;
     if (!($19 & 1)) {
      __THREW__ = 0;
      invoke_iii(19, 12032, 63017) | 0;
      $21 = __THREW__;
      __THREW__ = 0;
      if (!($21 & 1)) {
       __THREW__ = 0;
       invoke_iii(19, 12044, 63026) | 0;
       $23 = __THREW__;
       __THREW__ = 0;
       if (!($23 & 1)) {
        __THREW__ = 0;
        invoke_iii(19, 12056, 63033) | 0;
        $25 = __THREW__;
        __THREW__ = 0;
        if (!($25 & 1)) {
         __THREW__ = 0;
         invoke_iii(19, 12068, 63042) | 0;
         $27 = __THREW__;
         __THREW__ = 0;
         if (!($27 & 1)) {
          __THREW__ = 0;
          invoke_iii(19, 12080, 63046) | 0;
          $29 = __THREW__;
          __THREW__ = 0;
          if (!($29 & 1)) {
           __THREW__ = 0;
           invoke_iii(19, 12092, 63050) | 0;
           $31 = __THREW__;
           __THREW__ = 0;
           if (!($31 & 1)) {
            __THREW__ = 0;
            invoke_iii(19, 12104, 63054) | 0;
            $33 = __THREW__;
            __THREW__ = 0;
            if (!($33 & 1)) {
             __THREW__ = 0;
             invoke_iii(19, 12116, 63058) | 0;
             $35 = __THREW__;
             __THREW__ = 0;
             if (!($35 & 1)) {
              __THREW__ = 0;
              invoke_iii(19, 12128, 63062) | 0;
              $37 = __THREW__;
              __THREW__ = 0;
              if (!($37 & 1)) {
               __THREW__ = 0;
               invoke_iii(19, 12140, 63066) | 0;
               $39 = __THREW__;
               __THREW__ = 0;
               if (!($39 & 1)) {
                HEAP32[3038] = 11984;
                ___cxa_guard_release(2464);
                break;
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
  $42 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2464);
  ___resumeException($42 | 0);
 } while (0);
 return HEAP32[3038] | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre$i2$i$i6 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $27 = 0, $29 = 0, $46 = 0, $47 = 0, $48 = 0, $56 = 0, $68 = 0, $69 = 0, $83 = 0, label = 0;
 $0 = $__ct + 8 | 0;
 L1 : while (1) {
  $1 = HEAP32[$__b >> 2] | 0;
  do if (!$1) $14 = 0; else if ((HEAP32[$1 + 12 >> 2] | 0) == (HEAP32[$1 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 127]($1) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $14 = 0;
   break;
  } else {
   $14 = HEAP32[$__b >> 2] | 0;
   break;
  } else $14 = $1; while (0);
  $13 = ($14 | 0) == 0;
  $15 = HEAP32[$__e >> 2] | 0;
  do if (!$15) label = 12; else {
   if ((HEAP32[$15 + 12 >> 2] | 0) != (HEAP32[$15 + 16 >> 2] | 0)) if ($13) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 12;
    break;
   } else if ($13) {
    $83 = $15;
    break;
   } else {
    $$pre$i2$i$i6 = $15;
    break L1;
   }
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   if ($13) {
    $$pre$i2$i$i6 = 0;
    break;
   } else $83 = 0;
  }
  $27 = HEAP32[$__b >> 2] | 0;
  $29 = HEAP32[$27 + 12 >> 2] | 0;
  if (($29 | 0) == (HEAP32[$27 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 127]($27) | 0; else $$0$i$i = HEAPU8[$29 >> 0] | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  if (!(HEAP16[(HEAP32[$0 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $$pre$i2$i$i6 = $83;
   break;
  }
  $46 = HEAP32[$__b >> 2] | 0;
  $47 = $46 + 12 | 0;
  $48 = HEAP32[$47 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 40 >> 2] & 127]($46) | 0;
   continue;
  } else {
   HEAP32[$47 >> 2] = $48 + 1;
   continue;
  }
 }
 $56 = HEAP32[$__b >> 2] | 0;
 do if (!$56) $69 = 0; else if ((HEAP32[$56 + 12 >> 2] | 0) == (HEAP32[$56 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 36 >> 2] & 127]($56) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $69 = 0;
  break;
 } else {
  $69 = HEAP32[$__b >> 2] | 0;
  break;
 } else $69 = $56; while (0);
 $68 = ($69 | 0) == 0;
 do if (!$$pre$i2$i$i6) label = 32; else {
  if ((HEAP32[$$pre$i2$i$i6 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i6 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i6 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i6) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 32;
   break;
  }
  if (!$68) label = 33;
 } while (0);
 if ((label | 0) == 32) if ($68) label = 33;
 if ((label | 0) == 33) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($this, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$0$i$i = 0, $$pre = 0, $$pre$i2$i$i611 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $28 = 0, $30 = 0, $48 = 0, $49 = 0, $50 = 0, $60 = 0, $70 = 0, $71 = 0, label = 0;
 $0 = HEAP32[$__b >> 2] | 0;
 do if (!$0) $13 = 0; else if ((HEAP32[$0 + 12 >> 2] | 0) == (HEAP32[$0 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0) == -1) {
  HEAP32[$__b >> 2] = 0;
  $13 = 0;
  break;
 } else {
  $13 = HEAP32[$__b >> 2] | 0;
  break;
 } else $13 = $0; while (0);
 $12 = ($13 | 0) == 0;
 $14 = HEAP32[$__e >> 2] | 0;
 do if (!$14) label = 11; else {
  if ((HEAP32[$14 + 12 >> 2] | 0) == (HEAP32[$14 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0) == -1) {
   HEAP32[$__e >> 2] = 0;
   label = 11;
   break;
  }
  if ($12) {
   $$pre$i2$i$i611 = $14;
   label = 13;
  } else label = 12;
 } while (0);
 if ((label | 0) == 11) if ($12) label = 12; else {
  $$pre$i2$i$i611 = 0;
  label = 13;
 }
 L16 : do if ((label | 0) == 12) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 6; else if ((label | 0) == 13) {
  $28 = HEAP32[$__b >> 2] | 0;
  $30 = HEAP32[$28 + 12 >> 2] | 0;
  if (($30 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i = HEAPU8[$30 >> 0] | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$__ct >> 2] | 0) + 36 >> 2] & 63]($__ct, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4;
   break;
  }
  $48 = HEAP32[$__b >> 2] | 0;
  $49 = $48 + 12 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if (($50 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 40 >> 2] & 127]($48) | 0;
   $$pre = HEAP32[$__b >> 2] | 0;
   if (!$$pre) $71 = 0; else {
    $60 = $$pre;
    label = 21;
   }
  } else {
   HEAP32[$49 >> 2] = $50 + 1;
   $60 = $48;
   label = 21;
  }
  do if ((label | 0) == 21) if ((HEAP32[$60 + 12 >> 2] | 0) == (HEAP32[$60 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 36 >> 2] & 127]($60) | 0) == -1) {
   HEAP32[$__b >> 2] = 0;
   $71 = 0;
   break;
  } else {
   $71 = HEAP32[$__b >> 2] | 0;
   break;
  } else $71 = $60; while (0);
  $70 = ($71 | 0) == 0;
  do if (!$$pre$i2$i$i611) label = 30; else {
   if ((HEAP32[$$pre$i2$i$i611 + 12 >> 2] | 0) == (HEAP32[$$pre$i2$i$i611 + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i2$i$i611 >> 2] | 0) + 36 >> 2] & 127]($$pre$i2$i$i611) | 0) == -1) {
    HEAP32[$__e >> 2] = 0;
    label = 30;
    break;
   }
   if ($70) break L16;
  } while (0);
  if ((label | 0) == 30) if (!$70) break;
  HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 2;
 } while (0);
 return;
}

function __ZNSt3__110__stdinbufIcE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $45 = 0, $58 = 0, $6 = 0, $62 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$019 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa24 = 0, $__nread$2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  if (($8 | 0) > 0) {
   $__i$019 = 0;
   do {
    $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($12 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$__extbuf + $__i$019 >> 0] = $12;
    $__i$019 = $__i$019 + 1 | 0;
   } while (($__i$019 | 0) < ($8 | 0));
  }
  L8 : do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $21 = $this + 40 | 0;
   $22 = $this + 36 | 0;
   $23 = $__1buf + 1 | 0;
   $__nread$0 = $8;
   L10 : while (1) {
    $25 = HEAP32[$21 >> 2] | 0;
    $26 = $25;
    $28 = HEAP32[$26 >> 2] | 0;
    $31 = HEAP32[$26 + 4 >> 2] | 0;
    $32 = HEAP32[$22 >> 2] | 0;
    $33 = $__extbuf + $__nread$0 | 0;
    switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 15]($32, $25, $__extbuf, $33, $__enxt, $__1buf, $23, $__inxt) | 0) {
    case 2:
     {
      $$0 = -1;
      break L1;
      break;
     }
    case 3:
     {
      $__nread$0$lcssa24 = $__nread$0;
      break L10;
      break;
     }
    case 1:
     break;
    default:
     {
      $__nread$2 = $__nread$0;
      break L8;
     }
    }
    $39 = HEAP32[$21 >> 2] | 0;
    HEAP32[$39 >> 2] = $28;
    HEAP32[$39 + 4 >> 2] = $31;
    if (($__nread$0 | 0) == 8) {
     $$0 = -1;
     break L1;
    }
    $45 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($45 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$33 >> 0] = $45;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread$2 = $__nread$0$lcssa24;
  } else {
   HEAP8[$__1buf >> 0] = HEAP8[$__extbuf >> 0] | 0;
   $__nread$2 = $8;
  } while (0);
  if ($__consume) {
   $58 = HEAP8[$__1buf >> 0] | 0;
   HEAP32[$this + 48 >> 2] = $58 & 255;
   $62 = $58;
  } else {
   $__i2$0 = $__nread$2;
   while (1) {
    if (($__i2$0 | 0) <= 0) break;
    $__i2$0 = $__i2$0 + -1 | 0;
    if ((_ungetc(HEAPU8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
     $$0 = -1;
     break L1;
    }
   }
   $62 = HEAP8[$__1buf >> 0] | 0;
  }
  $$0 = $62 & 255;
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__110__stdinbufIwE9__getcharEb($this, $__consume) {
 $this = $this | 0;
 $__consume = $__consume | 0;
 var $$0 = 0, $0 = 0, $12 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $40 = 0, $46 = 0, $6 = 0, $60 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__enxt = 0, $__extbuf = 0, $__i$019 = 0, $__i2$0 = 0, $__inxt = 0, $__nread$0 = 0, $__nread$0$lcssa24 = 0, $__nread$2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__enxt = sp + 4 | 0;
 $__inxt = sp;
 $0 = $this + 52 | 0;
 L1 : do if (!(HEAP8[$0 >> 0] | 0)) {
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $8 = ($6 | 0) > 1 ? $6 : 1;
  $9 = $this + 32 | 0;
  if (($8 | 0) > 0) {
   $__i$019 = 0;
   do {
    $12 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($12 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$__extbuf + $__i$019 >> 0] = $12;
    $__i$019 = $__i$019 + 1 | 0;
   } while (($__i$019 | 0) < ($8 | 0));
  }
  L8 : do if (!(HEAP8[$this + 53 >> 0] | 0)) {
   $21 = $this + 40 | 0;
   $22 = $this + 36 | 0;
   $23 = $__1buf + 4 | 0;
   $__nread$0 = $8;
   L10 : while (1) {
    $26 = HEAP32[$21 >> 2] | 0;
    $27 = $26;
    $29 = HEAP32[$27 >> 2] | 0;
    $32 = HEAP32[$27 + 4 >> 2] | 0;
    $33 = HEAP32[$22 >> 2] | 0;
    $34 = $__extbuf + $__nread$0 | 0;
    switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$33 >> 2] | 0) + 16 >> 2] & 15]($33, $26, $__extbuf, $34, $__enxt, $__1buf, $23, $__inxt) | 0) {
    case 2:
     {
      $$0 = -1;
      break L1;
      break;
     }
    case 3:
     {
      $__nread$0$lcssa24 = $__nread$0;
      break L10;
      break;
     }
    case 1:
     break;
    default:
     {
      $__nread$2 = $__nread$0;
      break L8;
     }
    }
    $40 = HEAP32[$21 >> 2] | 0;
    HEAP32[$40 >> 2] = $29;
    HEAP32[$40 + 4 >> 2] = $32;
    if (($__nread$0 | 0) == 8) {
     $$0 = -1;
     break L1;
    }
    $46 = _getc(HEAP32[$9 >> 2] | 0) | 0;
    if (($46 | 0) == -1) {
     $$0 = -1;
     break L1;
    }
    HEAP8[$34 >> 0] = $46;
    $__nread$0 = $__nread$0 + 1 | 0;
   }
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
   $__nread$2 = $__nread$0$lcssa24;
  } else {
   HEAP32[$__1buf >> 2] = HEAP8[$__extbuf >> 0];
   $__nread$2 = $8;
  } while (0);
  if ($__consume) {
   $60 = HEAP32[$__1buf >> 2] | 0;
   HEAP32[$this + 48 >> 2] = $60;
   $$0 = $60;
   break;
  } else $__i2$0 = $__nread$2;
  while (1) {
   if (($__i2$0 | 0) <= 0) break;
   $__i2$0 = $__i2$0 + -1 | 0;
   if ((_ungetc(HEAP8[$__extbuf + $__i2$0 >> 0] | 0, HEAP32[$9 >> 2] | 0) | 0) == -1) {
    $$0 = -1;
    break L1;
   }
  }
  $$0 = HEAP32[$__1buf >> 2] | 0;
 } else {
  $3 = $this + 48 | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  if ($__consume) {
   HEAP32[$3 >> 2] = -1;
   HEAP8[$0 >> 0] = 0;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _pop_arg($arg, $type, $ap) {
 $arg = $arg | 0;
 $type = $type | 0;
 $ap = $ap | 0;
 var $105 = 0, $106 = 0.0, $112 = 0, $113 = 0.0, $13 = 0, $14 = 0, $17 = 0, $26 = 0, $27 = 0, $28 = 0, $37 = 0, $38 = 0, $40 = 0, $43 = 0, $44 = 0, $53 = 0, $54 = 0, $56 = 0, $59 = 0, $6 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $79 = 0, $80 = 0, $82 = 0, $85 = 0, $94 = 0, $95 = 0, $96 = 0;
 L1 : do if ($type >>> 0 <= 20) do switch ($type | 0) {
 case 9:
  {
   $6 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $7 = HEAP32[$6 >> 2] | 0;
   HEAP32[$ap >> 2] = $6 + 4;
   HEAP32[$arg >> 2] = $7;
   break L1;
   break;
  }
 case 10:
  {
   $13 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $14 = HEAP32[$13 >> 2] | 0;
   HEAP32[$ap >> 2] = $13 + 4;
   $17 = $arg;
   HEAP32[$17 >> 2] = $14;
   HEAP32[$17 + 4 >> 2] = (($14 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   $26 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $27 = HEAP32[$26 >> 2] | 0;
   HEAP32[$ap >> 2] = $26 + 4;
   $28 = $arg;
   HEAP32[$28 >> 2] = $27;
   HEAP32[$28 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   $37 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $38 = $37;
   $40 = HEAP32[$38 >> 2] | 0;
   $43 = HEAP32[$38 + 4 >> 2] | 0;
   HEAP32[$ap >> 2] = $37 + 8;
   $44 = $arg;
   HEAP32[$44 >> 2] = $40;
   HEAP32[$44 + 4 >> 2] = $43;
   break L1;
   break;
  }
 case 13:
  {
   $53 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $54 = HEAP32[$53 >> 2] | 0;
   HEAP32[$ap >> 2] = $53 + 4;
   $56 = ($54 & 65535) << 16 >> 16;
   $59 = $arg;
   HEAP32[$59 >> 2] = $56;
   HEAP32[$59 + 4 >> 2] = (($56 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   $68 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $69 = HEAP32[$68 >> 2] | 0;
   HEAP32[$ap >> 2] = $68 + 4;
   $70 = $arg;
   HEAP32[$70 >> 2] = $69 & 65535;
   HEAP32[$70 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   $79 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $80 = HEAP32[$79 >> 2] | 0;
   HEAP32[$ap >> 2] = $79 + 4;
   $82 = ($80 & 255) << 24 >> 24;
   $85 = $arg;
   HEAP32[$85 >> 2] = $82;
   HEAP32[$85 + 4 >> 2] = (($82 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   $94 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $95 = HEAP32[$94 >> 2] | 0;
   HEAP32[$ap >> 2] = $94 + 4;
   $96 = $arg;
   HEAP32[$96 >> 2] = $95 & 255;
   HEAP32[$96 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   $105 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $106 = +HEAPF64[$105 >> 3];
   HEAP32[$ap >> 2] = $105 + 8;
   HEAPF64[$arg >> 3] = $106;
   break L1;
   break;
  }
 case 18:
  {
   $112 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $113 = +HEAPF64[$112 >> 3];
   HEAP32[$ap >> 2] = $112 + 8;
   HEAPF64[$arg >> 3] = $113;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function ___stdio_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $16 = 0, $21 = 0, $26 = 0, $3 = 0, $35 = 0, $37 = 0, $39 = 0, $50 = 0, $6 = 0, $cnt$0 = 0, $cnt$1 = 0, $iov$0 = 0, $iov$0$lcssa11 = 0, $iov$1 = 0, $iovcnt$0 = 0, $iovcnt$0$lcssa12 = 0, $iovcnt$1 = 0, $iovs = 0, $rem$0 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $iovs = sp + 32 | 0;
 $0 = $f + 28 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$iovs >> 2] = $1;
 $3 = $f + 20 | 0;
 $6 = (HEAP32[$3 >> 2] | 0) - $1 | 0;
 HEAP32[$iovs + 4 >> 2] = $6;
 HEAP32[$iovs + 8 >> 2] = $buf;
 HEAP32[$iovs + 12 >> 2] = $len;
 $10 = $f + 60 | 0;
 $11 = $f + 44 | 0;
 $iov$0 = $iovs;
 $iovcnt$0 = 2;
 $rem$0 = $6 + $len | 0;
 while (1) {
  if (!(HEAP32[1018] | 0)) {
   HEAP32[$vararg_buffer3 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$vararg_buffer3 + 4 >> 2] = $iov$0;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $iovcnt$0;
   $cnt$0 = ___syscall_ret(___syscall146(146, $vararg_buffer3 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(184, $f | 0);
   HEAP32[$vararg_buffer >> 2] = HEAP32[$10 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = $iov$0;
   HEAP32[$vararg_buffer + 8 >> 2] = $iovcnt$0;
   $16 = ___syscall_ret(___syscall146(146, $vararg_buffer | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
   $cnt$0 = $16;
  }
  if (($rem$0 | 0) == ($cnt$0 | 0)) {
   label = 6;
   break;
  }
  if (($cnt$0 | 0) < 0) {
   $iov$0$lcssa11 = $iov$0;
   $iovcnt$0$lcssa12 = $iovcnt$0;
   label = 8;
   break;
  }
  $35 = $rem$0 - $cnt$0 | 0;
  $37 = HEAP32[$iov$0 + 4 >> 2] | 0;
  if ($cnt$0 >>> 0 > $37 >>> 0) {
   $39 = HEAP32[$11 >> 2] | 0;
   HEAP32[$0 >> 2] = $39;
   HEAP32[$3 >> 2] = $39;
   $50 = HEAP32[$iov$0 + 12 >> 2] | 0;
   $cnt$1 = $cnt$0 - $37 | 0;
   $iov$1 = $iov$0 + 8 | 0;
   $iovcnt$1 = $iovcnt$0 + -1 | 0;
  } else if (($iovcnt$0 | 0) == 2) {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + $cnt$0;
   $50 = $37;
   $cnt$1 = $cnt$0;
   $iov$1 = $iov$0;
   $iovcnt$1 = 2;
  } else {
   $50 = $37;
   $cnt$1 = $cnt$0;
   $iov$1 = $iov$0;
   $iovcnt$1 = $iovcnt$0;
  }
  HEAP32[$iov$1 >> 2] = (HEAP32[$iov$1 >> 2] | 0) + $cnt$1;
  HEAP32[$iov$1 + 4 >> 2] = $50 - $cnt$1;
  $iov$0 = $iov$1;
  $iovcnt$0 = $iovcnt$1;
  $rem$0 = $35;
 }
 if ((label | 0) == 6) {
  $21 = HEAP32[$11 >> 2] | 0;
  HEAP32[$f + 16 >> 2] = $21 + (HEAP32[$f + 48 >> 2] | 0);
  $26 = $21;
  HEAP32[$0 >> 2] = $26;
  HEAP32[$3 >> 2] = $26;
  $$0 = $len;
 } else if ((label | 0) == 8) {
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$f >> 2] = HEAP32[$f >> 2] | 32;
  if (($iovcnt$0$lcssa12 | 0) == 2) $$0 = 0; else $$0 = $len - (HEAP32[$iov$0$lcssa11 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _wcsnrtombs($dst, $wcs, $wn, $n, $st) {
 $dst = $dst | 0;
 $wcs = $wcs | 0;
 $wn = $wn | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$02$$0 = 0, $$021 = 0, $$0218 = 0, $$1 = 0, $$13 = 0, $$216 = 0, $$24 = 0, $$313 = 0, $$cast = 0, $$lcssa = 0, $$lcssa57 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $18 = 0, $23 = 0, $24 = 0, $33 = 0, $38 = 0, $4 = 0, $7 = 0, $8 = 0, $buf = 0, $cnt$019 = 0, $cnt$1 = 0, $cnt$214 = 0, $cnt$214$lcssa = 0, $cnt$3 = 0, $dst$ = 0, $n$ = 0, $s$020 = 0, $s$020$lcssa56 = 0, $s$09 = 0, $s$1 = 0, $s$215 = 0, $ws = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $buf = sp + 8 | 0;
 $ws = sp;
 $0 = HEAP32[$wcs >> 2] | 0;
 HEAP32[$ws >> 2] = $0;
 $1 = ($dst | 0) != 0;
 $n$ = $1 ? $n : 256;
 $dst$ = $1 ? $dst : $buf;
 $$cast = $0;
 L1 : do if (($n$ | 0) != 0 & ($0 | 0) != 0) {
  $$021 = $wn;
  $$0218 = $n$;
  $38 = $$cast;
  $cnt$019 = 0;
  $s$020 = $dst$;
  while (1) {
   $4 = $$021 >>> 0 >= $$0218 >>> 0;
   if (!($4 | $$021 >>> 0 > 32)) {
    $$1 = $$021;
    $$24 = $$0218;
    $18 = $38;
    $cnt$1 = $cnt$019;
    $s$09 = $s$020;
    break L1;
   }
   $$02$$0 = $4 ? $$0218 : $$021;
   $7 = $$021 - $$02$$0 | 0;
   $8 = _wcsrtombs($s$020, $ws, $$02$$0, 0) | 0;
   if (($8 | 0) == -1) {
    $$lcssa57 = $7;
    $s$020$lcssa56 = $s$020;
    break;
   }
   $10 = ($s$020 | 0) == ($buf | 0);
   $12 = $10 ? 0 : $8;
   $$13 = $$0218 - $12 | 0;
   $s$1 = $10 ? $s$020 : $s$020 + $8 | 0;
   $13 = $8 + $cnt$019 | 0;
   $14 = HEAP32[$ws >> 2] | 0;
   if (($$0218 | 0) != ($12 | 0) & ($14 | 0) != 0) {
    $$021 = $7;
    $$0218 = $$13;
    $38 = $14;
    $cnt$019 = $13;
    $s$020 = $s$1;
   } else {
    $$1 = $7;
    $$24 = $$13;
    $18 = $14;
    $cnt$1 = $13;
    $s$09 = $s$1;
    break L1;
   }
  }
  $$1 = $$lcssa57;
  $$24 = 0;
  $18 = HEAP32[$ws >> 2] | 0;
  $cnt$1 = -1;
  $s$09 = $s$020$lcssa56;
 } else {
  $$1 = $wn;
  $$24 = $n$;
  $18 = $$cast;
  $cnt$1 = 0;
  $s$09 = $dst$;
 } while (0);
 L8 : do if (!$18) $cnt$3 = $cnt$1; else if (($$24 | 0) != 0 & ($$1 | 0) != 0) {
  $$216 = $$1;
  $$313 = $$24;
  $23 = $18;
  $cnt$214 = $cnt$1;
  $s$215 = $s$09;
  while (1) {
   $24 = _wcrtomb($s$215, HEAP32[$23 >> 2] | 0, 0) | 0;
   if (($24 + 1 | 0) >>> 0 < 2) {
    $$lcssa = $24;
    $cnt$214$lcssa = $cnt$214;
    break;
   }
   $23 = (HEAP32[$ws >> 2] | 0) + 4 | 0;
   HEAP32[$ws >> 2] = $23;
   $$216 = $$216 + -1 | 0;
   $33 = $cnt$214 + 1 | 0;
   if (!(($$313 | 0) != ($24 | 0) & ($$216 | 0) != 0)) {
    $cnt$3 = $33;
    break L8;
   } else {
    $$313 = $$313 - $24 | 0;
    $cnt$214 = $33;
    $s$215 = $s$215 + $24 | 0;
   }
  }
  if (!$$lcssa) {
   HEAP32[$ws >> 2] = 0;
   $cnt$3 = $cnt$214$lcssa;
  } else $cnt$3 = -1;
 } else $cnt$3 = $cnt$1; while (0);
 if ($1) HEAP32[$wcs >> 2] = HEAP32[$ws >> 2];
 STACKTOP = sp;
 return $cnt$3 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueIRKNS_4pairIKS7_S7_EEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEEOT_($this, $__p, $__v) {
 $this = $this | 0;
 $__p = $__p | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $26 = 0, $27 = 0, $3 = 0, $7 = 0, $9 = 0, $__parent$i = 0, $__r$0$i25 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i = sp + 4 | 0;
 $0 = sp;
 $1 = __Znwj(40) | 0;
 $2 = $1 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $__v | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $11;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 __THREW__ = 0;
 invoke_vii(40, $1 + 28 | 0, $__v + 12 | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 if ($7 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  $10 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
  $eh$lpad$body$i$index2Z2D = $10;
  $eh$lpad$body$i$indexZ2D = $9;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 HEAP32[$0 >> 2] = HEAP32[$__p >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $14 = __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_SH_EEiEESK_RKT_($this, $$byval_copy, $__parent$i, $2) | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 if (!$15) {
  $17 = HEAP32[$__parent$i >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$1 + 4 >> 2] = 0;
  HEAP32[$1 + 8 >> 2] = $17;
  HEAP32[$14 >> 2] = $1;
  $21 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
  if (!$21) $26 = $1; else {
   HEAP32[$this >> 2] = $21;
   $26 = HEAP32[$14 >> 2] | 0;
  }
  __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $26);
  $27 = $this + 8 | 0;
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 1;
  $__r$0$i25 = $1;
  STACKTOP = sp;
  return $__r$0$i25 | 0;
 } else {
  if (($15 | 0) == ($1 | 0)) {
   $__r$0$i25 = $15;
   STACKTOP = sp;
   return $__r$0$i25 | 0;
  }
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1 + 16 | 0);
  __ZdlPv($1);
  $__r$0$i25 = $15;
  STACKTOP = sp;
  return $__r$0$i25 | 0;
 }
 return 0;
}

function __ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE($this, $__p, $__f, $__l, $0) {
 $this = $this | 0;
 $__p = $__p | 0;
 $__f = $__f | 0;
 $__l = $__l | 0;
 $0 = $0 | 0;
 var $$cast = 0, $$in = 0, $$lcssa = 0, $$lcssa29 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $47 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__ds$0$lcssa = 0, $__ds$08 = 0, $35$looptemp = 0;
 $1 = HEAP32[$__p >> 2] | 0;
 $3 = HEAP32[$__f >> 2] | 0;
 $4 = HEAP32[$__l >> 2] | 0;
 if (($3 | 0) == ($4 | 0)) {
  $51 = $1;
  $50 = $51;
  return $50 | 0;
 }
 $6 = __Znwj(20) | 0;
 HEAP32[$6 >> 2] = 0;
 $7 = $6 + 8 | 0;
 $8 = $3 + 8 | 0;
 HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
 $9 = $6;
 $11 = HEAP32[$3 + 4 >> 2] | 0;
 HEAP32[$__f >> 2] = $11;
 $$cast = $11;
 L4 : do if (($$cast | 0) == ($4 | 0)) {
  $$lcssa = $9;
  $__ds$0$lcssa = 1;
 } else {
  $$in = $11;
  $19 = $$cast;
  $21 = $9;
  $__ds$08 = 1;
  while (1) {
   __THREW__ = 0;
   $13 = invoke_ii(67, 20) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $$lcssa29 = $21;
    break;
   }
   $17 = $13 + 8 | 0;
   $18 = $19 + 8 | 0;
   HEAP32[$17 >> 2] = HEAP32[$18 >> 2];
   HEAP32[$17 + 4 >> 2] = HEAP32[$18 + 4 >> 2];
   HEAP32[$17 + 8 >> 2] = HEAP32[$18 + 8 >> 2];
   HEAP32[$21 + 4 >> 2] = $13;
   HEAP32[$13 >> 2] = $21;
   $$in = HEAP32[$$in + 4 >> 2] | 0;
   HEAP32[$__f >> 2] = $$in;
   $25 = $13;
   $26 = $__ds$08 + 1 | 0;
   $19 = $$in;
   if (($19 | 0) == ($4 | 0)) {
    $$lcssa = $25;
    $__ds$0$lcssa = $26;
    break L4;
   } else {
    $21 = $25;
    $__ds$08 = $26;
   }
  }
  $28 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($28 | 0) | 0;
  $31 = HEAP32[$$lcssa29 >> 2] | 0;
  __ZdlPv($$lcssa29);
  if ($31) {
   $35 = $31;
   do {
    $35$looptemp = $35;
    $35 = HEAP32[$35 >> 2] | 0;
    __ZdlPv($35$looptemp);
   } while (($35 | 0) != 0);
  }
  __THREW__ = 0;
  invoke_v(4);
  __THREW__ = 0;
  $38 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $40 = __THREW__;
  __THREW__ = 0;
  if ($40 & 1) {
   $52 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($52);
  } else ___resumeException($38 | 0);
 } while (0);
 $42 = $$lcssa;
 $43 = HEAP32[$1 >> 2] | 0;
 HEAP32[$43 + 4 >> 2] = $6;
 HEAP32[$6 >> 2] = $43;
 HEAP32[$1 >> 2] = $42;
 HEAP32[$42 + 4 >> 2] = $1;
 $47 = $this + 8 | 0;
 HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $__ds$0$lcssa;
 $51 = $9;
 $50 = $51;
 return $50 | 0;
}

function __ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $this, $__c, $__set, $__msgid, $__dflt) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__c = $__c | 0;
 $__set = $__set | 0;
 $__msgid = $__msgid | 0;
 $__dflt = $__dflt | 0;
 var $$0$i15 = 0, $$0$i817 = 0, $$02 = 0, $$03 = 0, $13 = 0, $14 = 0, $17 = 0, $2 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $49 = 0, $50 = 0, $8 = 0, $__ndflt = 0, $lpad$phi$index = 0, $lpad$phi$index2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__ndflt = sp;
 HEAP32[$__ndflt >> 2] = 0;
 HEAP32[$__ndflt + 4 >> 2] = 0;
 HEAP32[$__ndflt + 8 >> 2] = 0;
 $2 = HEAP8[$__dflt >> 0] | 0;
 $4 = ($2 & 1) == 0;
 $8 = $4 ? $__dflt + 1 | 0 : HEAP32[$__dflt + 8 >> 2] | 0;
 $13 = $4 ? ($2 & 255) >>> 1 : HEAP32[$__dflt + 4 >> 2] | 0;
 $14 = $8 + $13 | 0;
 L1 : do if (($13 | 0) > 0) {
  $$0$i817 = $8;
  while (1) {
   __THREW__ = 0;
   invoke_vii(44, $__ndflt | 0, HEAP8[$$0$i817 >> 0] | 0);
   $17 = __THREW__;
   __THREW__ = 0;
   if ($17 & 1) break;
   $$0$i817 = $$0$i817 + 1 | 0;
   if ($$0$i817 >>> 0 >= $14 >>> 0) {
    label = 4;
    break L1;
   }
  }
  $35 = ___cxa_find_matching_catch() | 0;
  $lpad$phi$index = $35;
  $lpad$phi$index2 = tempRet0;
  label = 7;
 } else label = 4; while (0);
 L6 : do if ((label | 0) == 4) {
  __THREW__ = 0;
  $32 = invoke_iiiii(13, (($__c | 0) == -1 ? -1 : $__c << 1) | 0, $__set | 0, $__msgid | 0, ((HEAP8[$__ndflt >> 0] & 1) == 0 ? $__ndflt + 1 | 0 : HEAP32[$__ndflt + 8 >> 2] | 0) | 0) | 0;
  $33 = __THREW__;
  __THREW__ = 0;
  if ($33 & 1) {
   $37 = ___cxa_find_matching_catch() | 0;
   $lpad$phi$index = $37;
   $lpad$phi$index2 = tempRet0;
   label = 7;
   break;
  }
  HEAP32[$agg$result >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  $41 = _strlen($32) | 0;
  $42 = $32 + $41 | 0;
  L11 : do if (($41 | 0) > 0) {
   $$0$i15 = $32;
   while (1) {
    __THREW__ = 0;
    invoke_vii(44, $agg$result | 0, HEAP8[$$0$i15 >> 0] | 0);
    $45 = __THREW__;
    __THREW__ = 0;
    if ($45 & 1) break;
    $$0$i15 = $$0$i15 + 1 | 0;
    if ($$0$i15 >>> 0 >= $42 >>> 0) break L11;
   }
   $49 = ___cxa_find_matching_catch() | 0;
   $50 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$result);
   $$02 = $49;
   $$03 = $50;
   break L6;
  } while (0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
  STACKTOP = sp;
  return;
 } while (0);
 if ((label | 0) == 7) {
  $$02 = $lpad$phi$index;
  $$03 = $lpad$phi$index2;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__ndflt);
 ___resumeException($$02 | 0);
}

function __ZN5Token8toStringENS_4KindE($v) {
 $v = $v | 0;
 var $$0 = 0, $0 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 do switch ($v | 0) {
 case 0:
  {
   $$0 = 50939;
   break;
  }
 case 1:
  {
   $$0 = 50935;
   break;
  }
 case 2:
  {
   $$0 = 50931;
   break;
  }
 case 3:
  {
   $$0 = 50927;
   break;
  }
 case 4:
  {
   $$0 = 50923;
   break;
  }
 case 5:
  {
   $$0 = 50919;
   break;
  }
 case 6:
  {
   $$0 = 50915;
   break;
  }
 case 7:
  {
   $$0 = 50911;
   break;
  }
 case 8:
  {
   $$0 = 50907;
   break;
  }
 case 9:
  {
   $$0 = 50903;
   break;
  }
 case 10:
  {
   $$0 = 50899;
   break;
  }
 case 11:
  {
   $$0 = 50888;
   break;
  }
 case 12:
  {
   $$0 = 50881;
   break;
  }
 case 13:
  {
   $$0 = 50872;
   break;
  }
 case 14:
  {
   $$0 = 50865;
   break;
  }
 case 15:
  {
   $$0 = 50860;
   break;
  }
 case 16:
  {
   $$0 = 50854;
   break;
  }
 case 17:
  {
   $$0 = 62979;
   break;
  }
 case 18:
  {
   $$0 = 50850;
   break;
  }
 case 19:
  {
   $$0 = 52470;
   break;
  }
 case 20:
  {
   $$0 = 50847;
   break;
  }
 case 21:
  {
   $$0 = 50840;
   break;
  }
 case 22:
  {
   $$0 = 50830;
   break;
  }
 case 23:
  {
   $$0 = 50827;
   break;
  }
 case 24:
  {
   $$0 = 50821;
   break;
  }
 case 25:
  {
   $$0 = 52444;
   break;
  }
 case 28:
  {
   $$0 = 50496;
   break;
  }
 case 29:
  {
   $$0 = 50501;
   break;
  }
 case 26:
  {
   $$0 = 50810;
   break;
  }
 case 27:
  {
   $$0 = 50805;
   break;
  }
 case 30:
  {
   $$0 = 62974;
   break;
  }
 case 31:
  {
   $$0 = 50793;
   break;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 50756, 36) | 0, $v) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $8 = invoke_iii(22, $0 | 0, 11164) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   }
   __THREW__ = 0;
   $14 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] | 0, $8 | 0, 10) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if ($15 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $14) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN9Allocator4makeI13LiteralStringJ13LocationRangePKcEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $4 = 0, $40 = 0, $6 = 0, $7 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __Znwj(60) | 0;
 $3 = _strlen($args1) | 0;
 __THREW__ = 0;
 invoke_viii(3, $0 | 0, $args1 | 0, $3 | 0);
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $38 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $38;
  __ZdlPv($2);
  ___resumeException($$01 | 0);
 }
 HEAP32[$2 >> 2] = 3192;
 $6 = $2 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $6 | 0, $args | 0);
 $7 = __THREW__;
 __THREW__ = 0;
 do if ($7 & 1) {
  $40 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $40;
 } else {
  $9 = $2 + 16 | 0;
  $10 = $args + 12 | 0;
  HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  HEAP32[$2 + 32 >> 2] = 14;
  $12 = $2 + 36 | 0;
  HEAP32[$12 >> 2] = 0;
  $13 = $2 + 40 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$2 + 44 >> 2] = 0;
  HEAP32[$2 >> 2] = 3276;
  __THREW__ = 0;
  invoke_vii(40, $2 + 48 | 0, $0 | 0);
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch() | 0;
   $19 = tempRet0;
   HEAP32[$2 >> 2] = 3192;
   $20 = HEAP32[$12 >> 2] | 0;
   $22 = $20;
   if ($20) {
    $23 = HEAP32[$13 >> 2] | 0;
    if (($23 | 0) != ($20 | 0)) HEAP32[$13 >> 2] = $23 + (~(($23 + -4 - $22 | 0) >>> 2) << 2);
    __ZdlPv($20);
   }
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $eh$lpad$body$index2Z2D = $19;
   $eh$lpad$body$indexZ2D = $18;
   break;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   HEAP32[$1 >> 2] = $2;
   $29 = $this + 16 | 0;
   $30 = HEAP32[$29 >> 2] | 0;
   if ($30 >>> 0 < (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
    HEAP32[$30 >> 2] = $2;
    HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 4;
    STACKTOP = sp;
    return $2 | 0;
   } else {
    __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $1);
    STACKTOP = sp;
    return $2 | 0;
   }
  }
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
 $$0 = $eh$lpad$body$index2Z2D;
 $$01 = $eh$lpad$body$indexZ2D;
 __ZdlPv($2);
 ___resumeException($$01 | 0);
 return 0;
}

function __ZNSt3__19__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_Pw($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $4 = 0, $47 = 0, $50 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP32[$__atoms + 96 >> 2] | 0) == ($__ct | 0);
  if (!$4) if ((HEAP32[$__atoms + 100 >> 2] | 0) != ($__ct | 0)) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if (($__ct | 0) == ($__thousands_sep | 0) ? ((($10 & 1) == 0 ? ($10 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) != 0 : 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 104 | 0;
  $$0$i2 = $__atoms;
  while (1) {
   if ((HEAP32[$$0$i2 >> 2] | 0) == ($__ct | 0)) {
    $$0$lcssa$i = $$0$i2;
    break;
   }
   $$0$i2 = $$0$i2 + 4 | 0;
   if (($$0$i2 | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  $35 = $34 >> 2;
  if (($34 | 0) > 92) $$0 = -1; else {
   switch ($__base | 0) {
   case 10:
   case 8:
    {
     if (($35 | 0) >= ($__base | 0)) {
      $$0 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($34 | 0) >= 88) {
      if ($1) {
       $$0 = -1;
       break L6;
      }
      if (($0 - $__a | 0) >= 3) {
       $$0 = -1;
       break L6;
      }
      if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
       $$0 = -1;
       break L6;
      }
      HEAP32[$__dc >> 2] = 0;
      $47 = HEAP8[61448 + $35 >> 0] | 0;
      HEAP32[$__a_end >> 2] = $0 + 1;
      HEAP8[$0 >> 0] = $47;
      $$0 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $50 = HEAP8[61448 + $35 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $50;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__19__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_S2_($__ct, $__base, $__a, $__a_end, $__dc, $__thousands_sep, $__grouping, $__g, $__g_end, $__atoms) {
 $__ct = $__ct | 0;
 $__base = $__base | 0;
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__dc = $__dc | 0;
 $__thousands_sep = $__thousands_sep | 0;
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__atoms = $__atoms | 0;
 var $$0 = 0, $$0$i2 = 0, $$0$lcssa$i = 0, $0 = 0, $1 = 0, $10 = 0, $20 = 0, $25 = 0, $27 = 0, $34 = 0, $4 = 0, $46 = 0, $49 = 0, label = 0;
 $0 = HEAP32[$__a_end >> 2] | 0;
 $1 = ($0 | 0) == ($__a | 0);
 do if ($1) {
  $4 = (HEAP8[$__atoms + 24 >> 0] | 0) == $__ct << 24 >> 24;
  if (!$4) if ((HEAP8[$__atoms + 25 >> 0] | 0) != $__ct << 24 >> 24) {
   label = 5;
   break;
  }
  HEAP32[$__a_end >> 2] = $__a + 1;
  HEAP8[$__a >> 0] = $4 ? 43 : 45;
  HEAP32[$__dc >> 2] = 0;
  $$0 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $10 = HEAP8[$__grouping >> 0] | 0;
  if ($__ct << 24 >> 24 == $__thousands_sep << 24 >> 24 ? ((($10 & 1) == 0 ? ($10 & 255) >>> 1 : HEAP32[$__grouping + 4 >> 2] | 0) | 0) != 0 : 0) {
   $20 = HEAP32[$__g_end >> 2] | 0;
   if (($20 - $__g | 0) >= 160) {
    $$0 = 0;
    break;
   }
   $25 = HEAP32[$__dc >> 2] | 0;
   HEAP32[$__g_end >> 2] = $20 + 4;
   HEAP32[$20 >> 2] = $25;
   HEAP32[$__dc >> 2] = 0;
   $$0 = 0;
   break;
  }
  $27 = $__atoms + 26 | 0;
  $$0$i2 = $__atoms;
  while (1) {
   if ((HEAP8[$$0$i2 >> 0] | 0) == $__ct << 24 >> 24) {
    $$0$lcssa$i = $$0$i2;
    break;
   }
   $$0$i2 = $$0$i2 + 1 | 0;
   if (($$0$i2 | 0) == ($27 | 0)) {
    $$0$lcssa$i = $27;
    break;
   }
  }
  $34 = $$0$lcssa$i - $__atoms | 0;
  if (($34 | 0) > 23) $$0 = -1; else {
   switch ($__base | 0) {
   case 10:
   case 8:
    {
     if (($34 | 0) >= ($__base | 0)) {
      $$0 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($34 | 0) >= 22) {
      if ($1) {
       $$0 = -1;
       break L6;
      }
      if (($0 - $__a | 0) >= 3) {
       $$0 = -1;
       break L6;
      }
      if ((HEAP8[$0 + -1 >> 0] | 0) != 48) {
       $$0 = -1;
       break L6;
      }
      HEAP32[$__dc >> 2] = 0;
      $46 = HEAP8[61448 + $34 >> 0] | 0;
      HEAP32[$__a_end >> 2] = $0 + 1;
      HEAP8[$0 >> 0] = $46;
      $$0 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $49 = HEAP8[61448 + $34 >> 0] | 0;
   HEAP32[$__a_end >> 2] = $0 + 1;
   HEAP8[$0 >> 0] = $49;
   HEAP32[$__dc >> 2] = (HEAP32[$__dc >> 2] | 0) + 1;
   $$0 = 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $$03$i$i = 0, $$03$i$i4 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $21 = 0, $22 = 0, $34 = 0, $36 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $7 = 0, $__p$0$lcssa$i$i = 0, $__p$0$lcssa$i$i9 = 0, $__p$0$ph$i$i = 0, $__p$0$ph$i$i2 = 0, $__p$02$i$i = 0, $__p$02$i$i5 = 0;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 if ($1 & 16) {
  $4 = $this + 44 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  $7 = HEAP32[$this + 24 >> 2] | 0;
  if ($5 >>> 0 < $7 >>> 0) {
   HEAP32[$4 >> 2] = $7;
   $13 = $7;
  } else $13 = $5;
  $10 = HEAP32[$this + 20 >> 2] | 0;
  $14 = $13 - $10 | 0;
  if ($14 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
  if ($14 >>> 0 < 11) {
   HEAP8[$agg$result >> 0] = $14 << 1;
   $__p$0$ph$i$i2 = $agg$result + 1 | 0;
  } else {
   $21 = $14 + 16 & -16;
   $22 = __Znwj($21) | 0;
   HEAP32[$agg$result + 8 >> 2] = $22;
   HEAP32[$agg$result >> 2] = $21 | 1;
   HEAP32[$agg$result + 4 >> 2] = $14;
   $__p$0$ph$i$i2 = $22;
  }
  if (($10 | 0) == ($13 | 0)) $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2; else {
   $$03$i$i4 = $10;
   $__p$02$i$i5 = $__p$0$ph$i$i2;
   while (1) {
    HEAP8[$__p$02$i$i5 >> 0] = HEAP8[$$03$i$i4 >> 0] | 0;
    $$03$i$i4 = $$03$i$i4 + 1 | 0;
    if (($$03$i$i4 | 0) == ($13 | 0)) break; else $__p$02$i$i5 = $__p$02$i$i5 + 1 | 0;
   }
   $__p$0$lcssa$i$i9 = $__p$0$ph$i$i2 + $14 | 0;
  }
  HEAP8[$__p$0$lcssa$i$i9 >> 0] = 0;
  return;
 }
 if (!($1 & 8)) {
  HEAP32[$agg$result >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  return;
 }
 $34 = HEAP32[$this + 8 >> 2] | 0;
 $36 = HEAP32[$this + 16 >> 2] | 0;
 $39 = $36 - $34 | 0;
 if ($39 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($agg$result);
 if ($39 >>> 0 < 11) {
  HEAP8[$agg$result >> 0] = $39 << 1;
  $__p$0$ph$i$i = $agg$result + 1 | 0;
 } else {
  $46 = $39 + 16 & -16;
  $47 = __Znwj($46) | 0;
  HEAP32[$agg$result + 8 >> 2] = $47;
  HEAP32[$agg$result >> 2] = $46 | 1;
  HEAP32[$agg$result + 4 >> 2] = $39;
  $__p$0$ph$i$i = $47;
 }
 if (($34 | 0) == ($36 | 0)) $__p$0$lcssa$i$i = $__p$0$ph$i$i; else {
  $$03$i$i = $34;
  $__p$02$i$i = $__p$0$ph$i$i;
  while (1) {
   HEAP8[$__p$02$i$i >> 0] = HEAP8[$$03$i$i >> 0] | 0;
   $$03$i$i = $$03$i$i + 1 | 0;
   if (($$03$i$i | 0) == ($36 | 0)) break; else $__p$02$i$i = $__p$02$i$i + 1 | 0;
  }
  $__p$0$lcssa$i$i = $__p$0$ph$i$i + $39 | 0;
 }
 HEAP8[$__p$0$lcssa$i$i >> 0] = 0;
 return;
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange($o, $loc) {
 $o = $o | 0;
 $loc = $loc | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $2 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $34 = 0, $36 = 0, $38 = 0, $41 = 0, $44 = 0, $47 = 0, $7 = 0;
 $0 = HEAP8[$loc >> 0] | 0;
 $2 = ($0 & 1) == 0;
 $3 = $loc + 4 | 0;
 $7 = $2 ? ($0 & 255) >>> 1 : HEAP32[$3 >> 2] | 0;
 if ($7) __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $2 ? $loc + 1 | 0 : HEAP32[$loc + 8 >> 2] | 0, $7) | 0;
 $13 = $loc + 12 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (!$14) return $o | 0;
 $16 = HEAP8[$loc >> 0] | 0;
 if (!((($16 & 1) == 0 ? ($16 & 255) >>> 1 : HEAP32[$3 >> 2] | 0) | 0)) $27 = $14; else {
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 54760, 1) | 0;
  $27 = HEAP32[$13 >> 2] | 0;
 }
 $24 = $loc + 20 | 0;
 if (($27 | 0) != (HEAP32[$24 >> 2] | 0)) {
  $38 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 54789, 1) | 0;
  $41 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($38, HEAP32[$13 >> 2] | 0) | 0, 54760, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($41, HEAP32[$loc + 16 >> 2] | 0) | 0;
  $44 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($38, 54791, 3) | 0;
  $47 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($44, HEAP32[$24 >> 2] | 0) | 0, 54760, 1) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($47, HEAP32[$loc + 24 >> 2] | 0) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($44, 54795, 1) | 0;
  return $o | 0;
 }
 $28 = $loc + 16 | 0;
 $30 = $loc + 24 | 0;
 $32 = (HEAP32[$28 >> 2] | 0) == (HEAP32[$30 >> 2] | 0);
 $34 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($o, $27) | 0, 54760, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($34, HEAP32[$28 >> 2] | 0) | 0;
 if ($32) return $o | 0;
 $36 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 54787, 1) | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm($36, HEAP32[$30 >> 2] | 0) | 0;
 return $o | 0;
}

function _memchr($src, $c, $n) {
 $src = $src | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$0$lcssa = 0, $$0$lcssa44 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $32 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $s$0$lcssa = 0, $s$0$lcssa43 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0;
 $0 = $c & 255;
 $4 = ($n | 0) != 0;
 L1 : do if ($4 & ($src & 3 | 0) != 0) {
  $5 = $c & 255;
  $$019 = $n;
  $s$020 = $src;
  while (1) {
   if ((HEAP8[$s$020 >> 0] | 0) == $5 << 24 >> 24) {
    $$0$lcssa44 = $$019;
    $s$0$lcssa43 = $s$020;
    label = 6;
    break L1;
   }
   $8 = $s$020 + 1 | 0;
   $9 = $$019 + -1 | 0;
   $13 = ($9 | 0) != 0;
   if ($13 & ($8 & 3 | 0) != 0) {
    $$019 = $9;
    $s$020 = $8;
   } else {
    $$0$lcssa = $9;
    $$lcssa = $13;
    $s$0$lcssa = $8;
    label = 5;
    break;
   }
  }
 } else {
  $$0$lcssa = $n;
  $$lcssa = $4;
  $s$0$lcssa = $src;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$0$lcssa44 = $$0$lcssa;
  $s$0$lcssa43 = $s$0$lcssa;
  label = 6;
 } else {
  $$3 = 0;
  $s$2 = $s$0$lcssa;
 }
 L8 : do if ((label | 0) == 6) {
  $15 = $c & 255;
  if ((HEAP8[$s$0$lcssa43 >> 0] | 0) == $15 << 24 >> 24) {
   $$3 = $$0$lcssa44;
   $s$2 = $s$0$lcssa43;
  } else {
   $17 = Math_imul($0, 16843009) | 0;
   L11 : do if ($$0$lcssa44 >>> 0 > 3) {
    $$110 = $$0$lcssa44;
    $w$011 = $s$0$lcssa43;
    while (1) {
     $20 = HEAP32[$w$011 >> 2] ^ $17;
     if (($20 & -2139062144 ^ -2139062144) & $20 + -16843009) {
      $$110$lcssa = $$110;
      $w$011$lcssa = $w$011;
      break;
     }
     $26 = $w$011 + 4 | 0;
     $27 = $$110 + -4 | 0;
     if ($27 >>> 0 > 3) {
      $$110 = $27;
      $w$011 = $26;
     } else {
      $$1$lcssa = $27;
      $w$0$lcssa = $26;
      label = 11;
      break L11;
     }
    }
    $$24 = $$110$lcssa;
    $s$15 = $w$011$lcssa;
   } else {
    $$1$lcssa = $$0$lcssa44;
    $w$0$lcssa = $s$0$lcssa43;
    label = 11;
   } while (0);
   if ((label | 0) == 11) if (!$$1$lcssa) {
    $$3 = 0;
    $s$2 = $w$0$lcssa;
    break;
   } else {
    $$24 = $$1$lcssa;
    $s$15 = $w$0$lcssa;
   }
   while (1) {
    if ((HEAP8[$s$15 >> 0] | 0) == $15 << 24 >> 24) {
     $$3 = $$24;
     $s$2 = $s$15;
     break L8;
    }
    $32 = $s$15 + 1 | 0;
    $$24 = $$24 + -1 | 0;
    if (!$$24) {
     $$3 = 0;
     $s$2 = $32;
     break;
    } else $s$15 = $32;
   }
  }
 } while (0);
 return (($$3 | 0) != 0 ? $s$2 : 0) | 0;
}

function __ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged($agg$result, $this, $loc, $v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 $v = +$v;
 var $$0 = 0, $$01 = 0, $$0311 = 0, $$0510 = 0, $$1414 = 0, $$1613 = 0, $$2 = 0, $$27 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $24 = 0, $25 = 0, $28 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAPF64[tempDoublePtr >> 3] = $v;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $4 = HEAP32[tempDoublePtr + 4 >> 2] & 2147483647;
 if ($4 >>> 0 > 2146435072 | ($4 | 0) == 2146435072 & $2 >>> 0 > 0) {
  $10 = ___cxa_allocate_exception(24) | 0;
  __THREW__ = 0;
  invoke_viii(3, $0 | 0, 54403, 12);
  $11 = __THREW__;
  __THREW__ = 0;
  if ($11 & 1) {
   $17 = ___cxa_find_matching_catch() | 0;
   $$0311 = tempRet0;
   $$0510 = $17;
  } else {
   __THREW__ = 0;
   invoke_viiii(16, $10 | 0, $this + 56 | 0, $loc | 0, $0 | 0);
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) $$01 = 1; else {
    __THREW__ = 0;
    invoke_viii(4, $10 | 0, 392, 179);
    __THREW__ = 0;
    $$01 = 0;
   }
   $19 = ___cxa_find_matching_catch() | 0;
   $20 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   if ($$01) {
    $$0311 = $20;
    $$0510 = $19;
   } else {
    $$2 = $20;
    $$27 = $19;
    ___resumeException($$27 | 0);
   }
  }
  ___cxa_free_exception($10 | 0);
  $$2 = $$0311;
  $$27 = $$0510;
  ___resumeException($$27 | 0);
 }
 if (!(($2 | 0) == 0 & ($4 | 0) == 2146435072)) {
  HEAP32[$agg$result >> 2] = 2;
  HEAPF64[$agg$result + 8 >> 3] = $v;
  STACKTOP = sp;
  return;
 }
 $24 = ___cxa_allocate_exception(24) | 0;
 __THREW__ = 0;
 invoke_viii(3, $1 | 0, 54416, 8);
 $25 = __THREW__;
 __THREW__ = 0;
 if ($25 & 1) {
  $31 = ___cxa_find_matching_catch() | 0;
  $$1414 = tempRet0;
  $$1613 = $31;
 } else {
  __THREW__ = 0;
  invoke_viiii(16, $24 | 0, $this + 56 | 0, $loc | 0, $1 | 0);
  $28 = __THREW__;
  __THREW__ = 0;
  if ($28 & 1) $$0 = 1; else {
   __THREW__ = 0;
   invoke_viii(4, $24 | 0, 392, 179);
   __THREW__ = 0;
   $$0 = 0;
  }
  $33 = ___cxa_find_matching_catch() | 0;
  $34 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
  if ($$0) {
   $$1414 = $34;
   $$1613 = $33;
  } else {
   $$2 = $34;
   $$27 = $33;
   ___resumeException($$27 | 0);
  }
 }
 ___cxa_free_exception($24 | 0);
 $$2 = $$1414;
 $$27 = $$1613;
 ___resumeException($$27 | 0);
}

function ___fdopen($fd, $mode) {
 $fd = $fd | 0;
 $mode = $mode | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $14 = 0, $19 = 0, $24 = 0, $26 = 0, $37 = 0, $4 = 0, $tio = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $tio = sp + 52 | 0;
 $0 = HEAP8[$mode >> 0] | 0;
 if (!(_memchr(58148, $0 << 24 >> 24, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $4 = _malloc(1144) | 0;
  if (!$4) $$0 = 0; else {
   dest = $4;
   stop = dest + 112 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   if (!(_strchr($mode, 43) | 0)) HEAP32[$4 >> 2] = $0 << 24 >> 24 == 114 ? 8 : 4;
   if (!(_strchr($mode, 101) | 0)) $13 = $0; else {
    HEAP32[$vararg_buffer >> 2] = $fd;
    HEAP32[$vararg_buffer + 4 >> 2] = 2;
    HEAP32[$vararg_buffer + 8 >> 2] = 1;
    ___syscall221(221, $vararg_buffer | 0) | 0;
    $13 = HEAP8[$mode >> 0] | 0;
   }
   if ($13 << 24 >> 24 == 97) {
    HEAP32[$vararg_buffer3 >> 2] = $fd;
    HEAP32[$vararg_buffer3 + 4 >> 2] = 3;
    $14 = ___syscall221(221, $vararg_buffer3 | 0) | 0;
    if (!($14 & 1024)) {
     HEAP32[$vararg_buffer7 >> 2] = $fd;
     HEAP32[$vararg_buffer7 + 4 >> 2] = 4;
     HEAP32[$vararg_buffer7 + 8 >> 2] = $14 | 1024;
     ___syscall221(221, $vararg_buffer7 | 0) | 0;
    }
    $19 = HEAP32[$4 >> 2] | 128;
    HEAP32[$4 >> 2] = $19;
    $26 = $19;
   } else $26 = HEAP32[$4 >> 2] | 0;
   HEAP32[$4 + 60 >> 2] = $fd;
   HEAP32[$4 + 44 >> 2] = $4 + 120;
   HEAP32[$4 + 48 >> 2] = 1024;
   $24 = $4 + 75 | 0;
   HEAP8[$24 >> 0] = -1;
   if (!($26 & 8)) {
    HEAP32[$vararg_buffer12 >> 2] = $fd;
    HEAP32[$vararg_buffer12 + 4 >> 2] = 21505;
    HEAP32[$vararg_buffer12 + 8 >> 2] = $tio;
    if (!(___syscall54(54, $vararg_buffer12 | 0) | 0)) HEAP8[$24 >> 0] = 10;
   }
   HEAP32[$4 + 32 >> 2] = 9;
   HEAP32[$4 + 36 >> 2] = 7;
   HEAP32[$4 + 40 >> 2] = 8;
   HEAP32[$4 + 12 >> 2] = 10;
   if (!(HEAP32[1019] | 0)) HEAP32[$4 + 76 >> 2] = -1;
   ___lock(4100);
   $37 = HEAP32[1024] | 0;
   HEAP32[$4 + 56 >> 2] = $37;
   if ($37) HEAP32[$37 + 52 >> 2] = $4;
   HEAP32[1024] = $4;
   ___unlock(4100);
   $$0 = $4;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_18type_strENS_5Value4TypeE($agg$result, $t) {
 $agg$result = $agg$result | 0;
 $t = $t | 0;
 var $0 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 switch ($t | 0) {
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52444, 4);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52449, 7);
   STACKTOP = sp;
   return;
  }
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52457, 6);
   STACKTOP = sp;
   return;
  }
 case 16:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52464, 5);
   STACKTOP = sp;
   return;
  }
 case 17:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52470, 8);
   STACKTOP = sp;
   return;
  }
 case 18:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52479, 6);
   STACKTOP = sp;
   return;
  }
 case 19:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 52486, 6);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 52493, 30) | 0, $t) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $8 = invoke_iii(22, $0 | 0, 11164) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   }
   __THREW__ = 0;
   $14 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] | 0, $8 | 0, 10) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if ($15 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $14) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 }
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi3Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $11 = 0, $12 = 0, $22 = 0, $23 = 0, $28 = 0, $33 = 0, $35 = 0, $37 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $8 = 0, $9 = 0, $__s = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 __THREW__ = 0;
 invoke_vii(46, $__s | 0, $this | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 L1 : do if ($0 & 1) {
  $35 = ___cxa_find_matching_catch(0) | 0;
  $$0 = $35;
  $$pre$phi3Z2D = $this;
  $$pre$phiZ2D = $this;
  label = 11;
 } else {
  do if (HEAP8[$__s >> 0] | 0) {
   $8 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
   $9 = $8;
   if (!$8) label = 8; else {
    $11 = $9 + 24 | 0;
    $12 = HEAP32[$11 >> 2] | 0;
    if (($12 | 0) != (HEAP32[$9 + 28 >> 2] | 0)) {
     HEAP32[$11 >> 2] = $12 + 1;
     HEAP8[$12 >> 0] = $__c;
     break;
    }
    __THREW__ = 0;
    $22 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 52 >> 2] | 0, $9 | 0, $__c & 255 | 0) | 0;
    $23 = __THREW__;
    __THREW__ = 0;
    if (!($23 & 1)) if (($22 | 0) == -1) label = 8; else break;
   }
   if ((label | 0) == 8) {
    $28 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
    __THREW__ = 0;
    invoke_vii(47, $this + $28 | 0, HEAP32[$this + ($28 + 16) >> 2] | 1 | 0);
    $33 = __THREW__;
    __THREW__ = 0;
    if (!($33 & 1)) break;
   }
   $37 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   $$0 = $37;
   $$pre$phi3Z2D = $this;
   $$pre$phiZ2D = $this;
   label = 11;
   break L1;
  } while (0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
 } while (0);
 do if ((label | 0) == 11) {
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $$pre$phi3Z2D + (HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + -12 >> 2] | 0) | 0);
  $43 = __THREW__;
  __THREW__ = 0;
  if (!($43 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $45 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $47 = __THREW__;
  __THREW__ = 0;
  if ($47 & 1) {
   $49 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($49);
  } else ___resumeException($45 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZN9Allocator4makeI5ApplyJ13LocationRangeP3ASTNSt3__16vectorIS4_NS5_9allocatorIS4_EEEEbEEEPT_DpT0_($this, $args, $args1, $args2, $args3) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 $args3 = $args3 | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $27 = 0, $28 = 0, $3 = 0, $36 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(68) | 0;
 HEAP32[$1 >> 2] = 3192;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $36 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $36;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 $7 = $1 + 32 | 0;
 $8 = $1 + 40 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$1 >> 2] = 3468;
 HEAP32[$1 + 48 >> 2] = $args1;
 __THREW__ = 0;
 invoke_vii(57, $1 + 52 | 0, $args2 | 0);
 $11 = __THREW__;
 __THREW__ = 0;
 if (!($11 & 1)) {
  HEAP8[$1 + 64 >> 0] = $args3 & 1;
  HEAP32[$0 >> 2] = $1;
  $27 = $this + 16 | 0;
  $28 = HEAP32[$27 >> 2] | 0;
  if ($28 >>> 0 < (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   HEAP32[$28 >> 2] = $1;
   HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 4;
   STACKTOP = sp;
   return $1 | 0;
  } else {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
   STACKTOP = sp;
   return $1 | 0;
  }
 }
 $13 = ___cxa_find_matching_catch() | 0;
 $14 = tempRet0;
 HEAP32[$1 >> 2] = 3192;
 $16 = HEAP32[$1 + 36 >> 2] | 0;
 $18 = $16;
 if ($16) {
  $19 = HEAP32[$8 >> 2] | 0;
  if (($19 | 0) != ($16 | 0)) HEAP32[$8 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
  __ZdlPv($16);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $eh$lpad$body$index2Z2D = $14;
 $eh$lpad$body$indexZ2D = $13;
 __ZdlPv($1);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
 return 0;
}

function __ZNSt3__116__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($__grouping, $__g, $__g_end, $__err) {
 $__grouping = $__grouping | 0;
 $__g = $__g | 0;
 $__g_end = $__g_end | 0;
 $__err = $__err | 0;
 var $$01$i$i22 = 0, $$lcssa = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $19 = 0, $20 = 0, $24 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $36 = 0, $4 = 0, $45 = 0, $__ig$018 = 0, $__r$019 = 0, $or$cond2 = 0, $or$cond2$lcssa = 0, $or$cond217 = 0, $or$cond220 = 0;
 $0 = HEAP8[$__grouping >> 0] | 0;
 $3 = $__grouping + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 L1 : do if ((($0 & 1) == 0 ? ($0 & 255) >>> 1 : $4) | 0) {
  if (($__g | 0) == ($__g_end | 0)) {
   $19 = $0;
   $28 = $4;
  } else {
   $10 = $__g_end + -4 | 0;
   if ($10 >>> 0 > $__g >>> 0) {
    $$01$i$i22 = $__g;
    $14 = $10;
    do {
     $12 = HEAP32[$$01$i$i22 >> 2] | 0;
     HEAP32[$$01$i$i22 >> 2] = HEAP32[$14 >> 2];
     HEAP32[$14 >> 2] = $12;
     $$01$i$i22 = $$01$i$i22 + 4 | 0;
     $14 = $14 + -4 | 0;
    } while ($$01$i$i22 >>> 0 < $14 >>> 0);
   }
   $19 = HEAP8[$__grouping >> 0] | 0;
   $28 = HEAP32[$3 >> 2] | 0;
  }
  $20 = ($19 & 1) == 0;
  $24 = $20 ? $__grouping + 1 | 0 : HEAP32[$__grouping + 8 >> 2] | 0;
  $30 = $__g_end + -4 | 0;
  $31 = $24 + ($20 ? ($19 & 255) >>> 1 : $28) | 0;
  $33 = HEAP8[$24 >> 0] | 0;
  $or$cond217 = $33 << 24 >> 24 < 1 | $33 << 24 >> 24 == 127;
  L10 : do if ($30 >>> 0 > $__g >>> 0) {
   $36 = $33;
   $__ig$018 = $24;
   $__r$019 = $__g;
   $or$cond220 = $or$cond217;
   while (1) {
    if (!$or$cond220) if (($36 << 24 >> 24 | 0) != (HEAP32[$__r$019 >> 2] | 0)) break;
    $__ig$018 = ($31 - $__ig$018 | 0) > 1 ? $__ig$018 + 1 | 0 : $__ig$018;
    $__r$019 = $__r$019 + 4 | 0;
    $45 = HEAP8[$__ig$018 >> 0] | 0;
    $or$cond2 = $45 << 24 >> 24 < 1 | $45 << 24 >> 24 == 127;
    if ($__r$019 >>> 0 >= $30 >>> 0) {
     $$lcssa = $45;
     $or$cond2$lcssa = $or$cond2;
     break L10;
    } else {
     $36 = $45;
     $or$cond220 = $or$cond2;
    }
   }
   HEAP32[$__err >> 2] = 4;
   break L1;
  } else {
   $$lcssa = $33;
   $or$cond2$lcssa = $or$cond217;
  } while (0);
  if (!$or$cond2$lcssa) if (((HEAP32[$30 >> 2] | 0) + -1 | 0) >>> 0 >= $$lcssa << 24 >> 24 >>> 0) HEAP32[$__err >> 2] = 4;
 } while (0);
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $33 = 0, $44 = 0, $6 = 0, $is_dst_type_derived_from_static_type$0$off01 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $44 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 7]($44, $info, $current_ptr, $path_below, $use_strcmp);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $23 = $info + 52 | 0;
    HEAP8[$23 >> 0] = 0;
    $24 = $info + 53 | 0;
    HEAP8[$24 >> 0] = 0;
    $26 = HEAP32[$this + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 15]($26, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
    if (!(HEAP8[$24 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 0;
     label = 13;
    } else if (!(HEAP8[$23 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off01 = 1;
     label = 13;
    }
    do if ((label | 0) == 13) {
     HEAP32[$14 >> 2] = $current_ptr;
     $33 = $info + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
      HEAP8[$info + 54 >> 0] = 1;
      if ($is_dst_type_derived_from_static_type$0$off01) break;
     } else label = 16; else label = 16;
     if ((label | 0) == 16) if ($is_dst_type_derived_from_static_type$0$off01) break;
     HEAP32[$20 >> 2] = 4;
     break L1;
    } while (0);
    HEAP32[$20 >> 2] = 3;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN9Allocator4makeI8FunctionJ13LocationRangeNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEEP3ASTEEEPT_DpT0_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(64) | 0;
 HEAP32[$1 >> 2] = 3192;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $35 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $35;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 6;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 3564;
 __THREW__ = 0;
 invoke_vii(55, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if (!($12 & 1)) {
  HEAP32[$1 + 60 >> 2] = $args2;
  HEAP32[$0 >> 2] = $1;
  $26 = $this + 16 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  if ($27 >>> 0 < (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   HEAP32[$27 >> 2] = $1;
   HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 4;
   STACKTOP = sp;
   return $1 | 0;
  } else {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
   STACKTOP = sp;
   return $1 | 0;
  }
 }
 $14 = ___cxa_find_matching_catch() | 0;
 $15 = tempRet0;
 HEAP32[$1 >> 2] = 3192;
 $16 = HEAP32[$8 >> 2] | 0;
 $18 = $16;
 if ($16) {
  $19 = HEAP32[$9 >> 2] | 0;
  if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
  __ZdlPv($16);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $eh$lpad$body$index2Z2D = $15;
 $eh$lpad$body$indexZ2D = $14;
 __ZdlPv($1);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEESK_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa17 = 0, $__nd$0$lcssa18 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
 $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa19 = $__nd$0;
    $__nd$0$lcssa18 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa17 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa18;
  $$0 = $$lcssa19;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa17;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZN9Allocator4makeI13LiteralStringJ13LocationRangeNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 3192;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 14;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 3276;
 __THREW__ = 0;
 invoke_vii(40, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if (!($12 & 1)) {
  HEAP32[$0 >> 2] = $1;
  $25 = $this + 16 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  if ($26 >>> 0 < (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   HEAP32[$26 >> 2] = $1;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 4;
   STACKTOP = sp;
   return $1 | 0;
  } else {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
   STACKTOP = sp;
   return $1 | 0;
  }
 }
 $14 = ___cxa_find_matching_catch() | 0;
 $15 = tempRet0;
 HEAP32[$1 >> 2] = 3192;
 $16 = HEAP32[$8 >> 2] | 0;
 $18 = $16;
 if ($16) {
  $19 = HEAP32[$9 >> 2] | 0;
  if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
  __ZdlPv($16);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $eh$lpad$body$index2Z2D = $15;
 $eh$lpad$body$indexZ2D = $14;
 __ZdlPv($1);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa17 = 0, $__nd$0$lcssa18 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa19 = $__nd$0;
    $__nd$0$lcssa18 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa17 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa18;
  $$0 = $$lcssa19;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa17;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$0$i$i = 0, $$pre$i$i$i = 0, $18 = 0, $19 = 0, $20 = 0, $32 = 0, $33 = 0, $34 = 0, $44 = 0, label = 0;
 if (!(HEAP8[$this >> 0] & 1)) {
  HEAP8[$this + 1 >> 0] = 0;
  HEAP8[$this >> 0] = 0;
 } else {
  HEAP8[HEAP32[$this + 8 >> 2] >> 0] = 0;
  HEAP32[$this + 4 >> 2] = 0;
 }
 $$pre$i$i$i = HEAP32[$__first >> 2] | 0;
 L5 : while (1) {
  if (!$$pre$i$i$i) $19 = 0; else if ((HEAP32[$$pre$i$i$i + 12 >> 2] | 0) == (HEAP32[$$pre$i$i$i + 16 >> 2] | 0)) if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$$pre$i$i$i >> 2] | 0) + 36 >> 2] & 127]($$pre$i$i$i) | 0) == -1) {
   HEAP32[$__first >> 2] = 0;
   $19 = 0;
  } else $19 = $$pre$i$i$i; else $19 = $$pre$i$i$i;
  $18 = ($19 | 0) == 0;
  $20 = HEAP32[$__last >> 2] | 0;
  do if (!$20) label = 14; else {
   if ((HEAP32[$20 + 12 >> 2] | 0) != (HEAP32[$20 + 16 >> 2] | 0)) if ($18) break; else {
    label = 22;
    break L5;
   }
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0) == -1) {
    HEAP32[$__last >> 2] = 0;
    label = 14;
    break;
   } else if ($18) break; else {
    label = 22;
    break L5;
   }
  } while (0);
  if ((label | 0) == 14) {
   label = 0;
   if ($18) {
    label = 22;
    break;
   }
  }
  $32 = $19 + 12 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  $34 = $19 + 16 | 0;
  if (($33 | 0) == (HEAP32[$34 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 36 >> 2] & 127]($19) | 0; else $$0$i$i = HEAPU8[$33 >> 0] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $$0$i$i & 255);
  $44 = HEAP32[$32 >> 2] | 0;
  if (($44 | 0) == (HEAP32[$34 >> 2] | 0)) {
   FUNCTION_TABLE_ii[HEAP32[(HEAP32[$19 >> 2] | 0) + 40 >> 2] & 127]($19) | 0;
   $$pre$i$i$i = $19;
   continue;
  } else {
   HEAP32[$32 >> 2] = $44 + 1;
   $$pre$i$i$i = $19;
   continue;
  }
 }
 if ((label | 0) == 22) return $this | 0;
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa17 = 0, $__nd$0$lcssa18 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa19 = $__nd$0;
    $__nd$0$lcssa18 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa17 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa18;
  $$0 = $$lcssa19;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa17;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSB_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa17 = 0, $__nd$0$lcssa18 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa19 = $__nd$0;
    $__nd$0$lcssa18 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa17 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa18;
  $$0 = $$lcssa19;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa17;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZN9Allocator4makeI5ArrayJ13LocationRangeNSt3__16vectorIP3ASTNS3_9allocatorIS6_EEEEEEEPT_DpT0_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $eh$lpad$body$index2Z2D = 0, $eh$lpad$body$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = __Znwj(60) | 0;
 HEAP32[$1 >> 2] = 3192;
 $2 = $1 + 4 | 0;
 __THREW__ = 0;
 invoke_vii(40, $2 | 0, $args | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $34 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$index2Z2D = tempRet0;
  $eh$lpad$body$indexZ2D = $34;
  __ZdlPv($1);
  ___resumeException($eh$lpad$body$indexZ2D | 0);
 }
 $5 = $1 + 16 | 0;
 $6 = $args + 12 | 0;
 HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
 HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
 HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$6 + 12 >> 2];
 HEAP32[$1 + 32 >> 2] = 1;
 $8 = $1 + 36 | 0;
 HEAP32[$8 >> 2] = 0;
 $9 = $1 + 40 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 >> 2] = 3548;
 __THREW__ = 0;
 invoke_vii(57, $1 + 48 | 0, $args1 | 0);
 $12 = __THREW__;
 __THREW__ = 0;
 if (!($12 & 1)) {
  HEAP32[$0 >> 2] = $1;
  $25 = $this + 16 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  if ($26 >>> 0 < (HEAP32[$this + 20 >> 2] | 0) >>> 0) {
   HEAP32[$26 >> 2] = $1;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 4;
   STACKTOP = sp;
   return $1 | 0;
  } else {
   __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this + 12 | 0, $0);
   STACKTOP = sp;
   return $1 | 0;
  }
 }
 $14 = ___cxa_find_matching_catch() | 0;
 $15 = tempRet0;
 HEAP32[$1 >> 2] = 3192;
 $16 = HEAP32[$8 >> 2] | 0;
 $18 = $16;
 if ($16) {
  $19 = HEAP32[$9 >> 2] | 0;
  if (($19 | 0) != ($16 | 0)) HEAP32[$9 >> 2] = $19 + (~(($19 + -4 - $18 | 0) >>> 2) << 2);
  __ZdlPv($16);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($2);
 $eh$lpad$body$index2Z2D = $15;
 $eh$lpad$body$indexZ2D = $14;
 __ZdlPv($1);
 ___resumeException($eh$lpad$body$indexZ2D | 0);
 return 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__k = $__k | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa17 = 0, $__nd$0$lcssa18 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__k >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__k + 4 >> 2] | 0;
 $14 = $5 ? $__k + 1 | 0 : HEAP32[$__k + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa19 = $__nd$0;
    $__nd$0$lcssa18 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa17 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa18;
  $$0 = $$lcssa19;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa17;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) {
 $this = $this | 0;
 $__parent = $__parent | 0;
 $__v = $__v | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa19 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $42 = 0, $43 = 0, $5 = 0, $__nd$0 = 0, $__nd$0$be$in = 0, $__nd$0$lcssa = 0, $__nd$0$lcssa17 = 0, $__nd$0$lcssa18 = 0, label = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  HEAP32[$__parent >> 2] = $0;
  $$0 = $0;
  return $$0 | 0;
 }
 $3 = HEAP8[$__v >> 0] | 0;
 $5 = ($3 & 1) == 0;
 $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
 $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
 $__nd$0 = $1;
 while (1) {
  $15 = $__nd$0 + 16 | 0;
  $16 = HEAP8[$15 >> 0] | 0;
  $18 = ($16 & 1) == 0;
  $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$__nd$0 + 20 >> 2] | 0;
  $27 = $18 ? $15 + 1 | 0 : HEAP32[$__nd$0 + 24 >> 2] | 0;
  $28 = $23 >>> 0 < $10 >>> 0;
  $30 = _memcmp($14, $27, $28 ? $23 : $10) | 0;
  $32 = $10 >>> 0 < $23 >>> 0;
  if (((($30 | 0) == 0 ? ($32 ? -2147483648 : 0) : $30) | 0) < 0) {
   $35 = HEAP32[$__nd$0 >> 2] | 0;
   if (!$35) {
    $$lcssa19 = $__nd$0;
    $__nd$0$lcssa18 = $__nd$0;
    label = 5;
    break;
   } else $__nd$0$be$in = $35;
  } else {
   $38 = _memcmp($27, $14, $32 ? $10 : $23) | 0;
   if (((($38 | 0) == 0 ? ($28 ? -2147483648 : 0) : $38) | 0) >= 0) {
    $__nd$0$lcssa = $__nd$0;
    label = 10;
    break;
   }
   $42 = $__nd$0 + 4 | 0;
   $43 = HEAP32[$42 >> 2] | 0;
   if (!$43) {
    $$lcssa = $42;
    $__nd$0$lcssa17 = $__nd$0;
    label = 9;
    break;
   } else $__nd$0$be$in = $43;
  }
  $__nd$0 = $__nd$0$be$in;
 }
 if ((label | 0) == 5) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa18;
  $$0 = $$lcssa19;
  return $$0 | 0;
 } else if ((label | 0) == 9) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa17;
  $$0 = $$lcssa;
  return $$0 | 0;
 } else if ((label | 0) == 10) {
  HEAP32[$__parent >> 2] = $__nd$0$lcssa;
  $$0 = $__parent;
  return $$0 | 0;
 }
 return 0;
}

function __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $$sroa$0$1 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, $37 = 0, $5 = 0, $6 = 0, $7 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 L1 : do if (!$0) $$sroa$0$1 = 0; else {
  $2 = $__oe;
  $3 = $__ob;
  $5 = $2 - $3 >> 2;
  $6 = $__iob + 12 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $__ns$0 = ($7 | 0) > ($5 | 0) ? $7 - $5 | 0 : 0;
  $10 = $__op;
  $11 = $10 - $3 | 0;
  $12 = $11 >> 2;
  if (($11 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $12) | 0) != ($12 | 0)) {
   HEAP32[$__s >> 2] = 0;
   $$sroa$0$1 = 0;
   break;
  }
  do if (($__ns$0 | 0) > 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($__sp, $__ns$0, $__fl);
   __THREW__ = 0;
   $30 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, ((HEAP8[$__sp >> 0] & 1) == 0 ? $__sp + 4 | 0 : HEAP32[$__sp + 8 >> 2] | 0) | 0, $__ns$0 | 0) | 0;
   $31 = __THREW__;
   __THREW__ = 0;
   if ($31 & 1) {
    $34 = ___cxa_find_matching_catch() | 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    ___resumeException($34 | 0);
   }
   if (($30 | 0) == ($__ns$0 | 0)) {
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    break;
   } else {
    HEAP32[$__s >> 2] = 0;
    __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($__sp);
    $$sroa$0$1 = 0;
    break L1;
   }
  } while (0);
  $36 = $2 - $10 | 0;
  $37 = $36 >> 2;
  if (($36 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $37) | 0) != ($37 | 0)) {
   HEAP32[$__s >> 2] = 0;
   $$sroa$0$1 = 0;
   break;
  }
  HEAP32[$6 >> 2] = 0;
  $$sroa$0$1 = $0;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$1 | 0;
}

function __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($__s, $__ob, $__op, $__oe, $__iob, $__fl) {
 $__s = $__s | 0;
 $__ob = $__ob | 0;
 $__op = $__op | 0;
 $__oe = $__oe | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 var $$sroa$0$1 = 0, $0 = 0, $10 = 0, $2 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $__ns$0 = 0, $__sp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__sp = sp;
 $0 = HEAP32[$__s >> 2] | 0;
 if (!$0) {
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 }
 $2 = $__oe;
 $3 = $__ob;
 $4 = $2 - $3 | 0;
 $5 = $__iob + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $__ns$0 = ($6 | 0) > ($4 | 0) ? $6 - $4 | 0 : 0;
 $9 = $__op;
 $10 = $9 - $3 | 0;
 if (($10 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__ob, $10) | 0) != ($10 | 0)) {
  HEAP32[$__s >> 2] = 0;
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 }
 do if (($__ns$0 | 0) > 0) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($__sp, $__ns$0, $__fl);
  __THREW__ = 0;
  $28 = invoke_iiii(HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] | 0, $0 | 0, ((HEAP8[$__sp >> 0] & 1) == 0 ? $__sp + 1 | 0 : HEAP32[$__sp + 8 >> 2] | 0) | 0, $__ns$0 | 0) | 0;
  $29 = __THREW__;
  __THREW__ = 0;
  if ($29 & 1) {
   $32 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   ___resumeException($32 | 0);
  }
  if (($28 | 0) == ($__ns$0 | 0)) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
   break;
  }
  HEAP32[$__s >> 2] = 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__sp);
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 } while (0);
 $34 = $2 - $9 | 0;
 if (($34 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 48 >> 2] & 63]($0, $__op, $34) | 0) != ($34 | 0)) {
  HEAP32[$__s >> 2] = 0;
  $$sroa$0$1 = 0;
  STACKTOP = sp;
  return $$sroa$0$1 | 0;
 }
 HEAP32[$5 >> 2] = 0;
 $$sroa$0$1 = $0;
 STACKTOP = sp;
 return $$sroa$0$1 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $28 = 0, $30 = 0, $31 = 0, $33 = 0, $4 = 0, $47 = 0, $8 = 0, $__new_data$0 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 10;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $15 = ($8 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $15 >>> 0 > $__res_arg >>> 0 ? $15 : $__res_arg;
 if ($16 >>> 0 < 11) $21 = 10; else $21 = ($16 + 16 & -16) + -1 | 0;
 L14 : do if (($21 | 0) != ($22 | 0)) {
  do if (($21 | 0) == 10) {
   $__new_data$1 = $this + 1 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $28 = $21 + 1 | 0;
   if ($21 >>> 0 > $22 >>> 0) $__new_data$0 = __Znwj($28) | 0; else {
    __THREW__ = 0;
    $30 = invoke_ii(67, $28 | 0) | 0;
    $31 = __THREW__;
    __THREW__ = 0;
    if ($31 & 1) {
     $33 = ___cxa_find_matching_catch(0) | 0;
     ___cxa_begin_catch($33 | 0) | 0;
     ___cxa_end_catch();
     break L14;
    } else $__new_data$0 = $30;
   }
   if (!($8 & 1)) {
    $__new_data$1 = $__new_data$0;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 1 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$1 = $__new_data$0;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $47 = ($8 & 255) >>> 1; else $47 = HEAP32[$this + 4 >> 2] | 0;
  _memcpy($__new_data$1 | 0, $__p$0 | 0, $47 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $21 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $15;
   HEAP32[$this + 8 >> 2] = $__new_data$1;
   break;
  } else {
   HEAP8[$this >> 0] = $15 << 1;
   break;
  }
 } while (0);
 return;
}

function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$024 = 0, $$1 = 0, $$lcssa = 0, $$lcssa35 = 0, $$st = 0, $1 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $30 = 0, $7 = 0, $8 = 0, $c$05 = 0, $c$1 = 0, $c$2 = 0, $dummy = 0, $dummy$wc = 0, $s$06 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $dummy = sp;
 $$st = ($st | 0) == 0 ? 4884 : $st;
 $1 = HEAP32[$$st >> 2] | 0;
 L1 : do if (!$src) if (!$1) $$0 = 0; else label = 15; else {
  $dummy$wc = ($wc | 0) == 0 ? $dummy : $wc;
  if (!$n) $$0 = -2; else {
   if (!$1) {
    $7 = HEAP8[$src >> 0] | 0;
    $8 = $7 & 255;
    if ($7 << 24 >> 24 > -1) {
     HEAP32[$dummy$wc >> 2] = $8;
     $$0 = $7 << 24 >> 24 != 0 & 1;
     break;
    }
    $12 = $8 + -194 | 0;
    if ($12 >>> 0 > 50) {
     label = 15;
     break;
    }
    $16 = HEAP32[4116 + ($12 << 2) >> 2] | 0;
    $17 = $n + -1 | 0;
    if (!$17) $c$2 = $16; else {
     $$024 = $17;
     $c$05 = $16;
     $s$06 = $src + 1 | 0;
     label = 9;
    }
   } else {
    $$024 = $n;
    $c$05 = $1;
    $s$06 = $src;
    label = 9;
   }
   L11 : do if ((label | 0) == 9) {
    $19 = HEAP8[$s$06 >> 0] | 0;
    $21 = ($19 & 255) >>> 3;
    if (($21 + -16 | $21 + ($c$05 >> 26)) >>> 0 > 7) {
     label = 15;
     break L1;
    } else {
     $$1 = $$024;
     $30 = $19;
     $c$1 = $c$05;
     $s$1 = $s$06;
    }
    while (1) {
     $s$1 = $s$1 + 1 | 0;
     $c$1 = ($30 & 255) + -128 | $c$1 << 6;
     $$1 = $$1 + -1 | 0;
     if (($c$1 | 0) >= 0) {
      $$lcssa = $c$1;
      $$lcssa35 = $$1;
      break;
     }
     if (!$$1) {
      $c$2 = $c$1;
      break L11;
     }
     $30 = HEAP8[$s$1 >> 0] | 0;
     if (($30 & -64) << 24 >> 24 != -128) {
      label = 15;
      break L1;
     }
    }
    HEAP32[$$st >> 2] = 0;
    HEAP32[$dummy$wc >> 2] = $$lcssa;
    $$0 = $n - $$lcssa35 | 0;
    break L1;
   } while (0);
   HEAP32[$$st >> 2] = $c$2;
   $$0 = -2;
  }
 } while (0);
 if ((label | 0) == 15) {
  HEAP32[$$st >> 2] = 0;
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj($this, $__res_arg) {
 $this = $this | 0;
 $__res_arg = $__res_arg | 0;
 var $$sink = 0, $1 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $29 = 0, $31 = 0, $32 = 0, $34 = 0, $4 = 0, $48 = 0, $8 = 0, $__new_data$1 = 0, $__now_long$0$off0 = 0, $__p$0 = 0, $__was_long$0$off0 = 0;
 if ($__res_arg >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $22 = 1;
  $8 = $1;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  $22 = ($4 & -2) + -1 | 0;
  $8 = $4 & 255;
 }
 if (!($8 & 1)) $15 = ($8 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 $16 = $15 >>> 0 > $__res_arg >>> 0 ? $15 : $__res_arg;
 if ($16 >>> 0 < 2) $21 = 1; else $21 = ($16 + 4 & -4) + -1 | 0;
 L14 : do if (($21 | 0) != ($22 | 0)) {
  do if (($21 | 0) == 1) {
   $__new_data$1 = $this + 4 | 0;
   $__now_long$0$off0 = 0;
   $__p$0 = HEAP32[$this + 8 >> 2] | 0;
   $__was_long$0$off0 = 1;
  } else {
   $29 = ($21 << 2) + 4 | 0;
   if ($21 >>> 0 > $22 >>> 0) $$sink = __Znwj($29) | 0; else {
    __THREW__ = 0;
    $31 = invoke_ii(67, $29 | 0) | 0;
    $32 = __THREW__;
    __THREW__ = 0;
    if ($32 & 1) {
     $34 = ___cxa_find_matching_catch(0) | 0;
     ___cxa_begin_catch($34 | 0) | 0;
     ___cxa_end_catch();
     break L14;
    } else $$sink = $31;
   }
   if (!($8 & 1)) {
    $__new_data$1 = $$sink;
    $__now_long$0$off0 = 1;
    $__p$0 = $this + 4 | 0;
    $__was_long$0$off0 = 0;
    break;
   } else {
    $__new_data$1 = $$sink;
    $__now_long$0$off0 = 1;
    $__p$0 = HEAP32[$this + 8 >> 2] | 0;
    $__was_long$0$off0 = 1;
    break;
   }
  } while (0);
  if (!($8 & 1)) $48 = ($8 & 255) >>> 1; else $48 = HEAP32[$this + 4 >> 2] | 0;
  _wmemcpy($__new_data$1, $__p$0, $48 + 1 | 0) | 0;
  if ($__was_long$0$off0) __ZdlPv($__p$0);
  if ($__now_long$0$off0) {
   HEAP32[$this >> 2] = $21 + 1 | 1;
   HEAP32[$this + 4 >> 2] = $15;
   HEAP32[$this + 8 >> 2] = $__new_data$1;
   break;
  } else {
   HEAP8[$this >> 0] = $15 << 1;
   break;
  }
 } while (0);
 return;
}

function __ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_($r, $s) {
 $r = $r | 0;
 $s = $s | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$01$i$i$i = 0, $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $16 = 0, $2 = 0, $20 = 0, $24 = 0, $28 = 0, $29 = 0, $31 = 0, $34 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__parent$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $__parent$i$i = sp + 4 | 0;
 $0 = sp;
 $1 = HEAP32[$s >> 2] | 0;
 $2 = $s + 4 | 0;
 if (($1 | 0) == ($2 | 0)) {
  STACKTOP = sp;
  return;
 }
 $5 = $r + 4 | 0;
 $6 = $r + 4 | 0;
 $7 = $r + 8 | 0;
 $28 = $1;
 $9 = $1;
 while (1) {
  $8 = $9 + 16 | 0;
  HEAP32[$0 >> 2] = $5;
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $10 = __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE12__find_equalIS3_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIS3_PNS_11__tree_nodeIS3_SB_EEiEESE_RKT_($r, $$byval_copy, $__parent$i$i, $8) | 0;
  if (!(HEAP32[$10 >> 2] | 0)) {
   $13 = __Znwj(20) | 0;
   HEAP32[$13 + 16 >> 2] = HEAP32[$8 >> 2];
   $16 = HEAP32[$__parent$i$i >> 2] | 0;
   HEAP32[$13 >> 2] = 0;
   HEAP32[$13 + 4 >> 2] = 0;
   HEAP32[$13 + 8 >> 2] = $16;
   HEAP32[$10 >> 2] = $13;
   $20 = HEAP32[HEAP32[$r >> 2] >> 2] | 0;
   if (!$20) $24 = $13; else {
    HEAP32[$r >> 2] = $20;
    $24 = HEAP32[$10 >> 2] | 0;
   }
   __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$6 >> 2] | 0, $24);
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 1;
  }
  $29 = HEAP32[$28 + 4 >> 2] | 0;
  if (!$29) {
   $$0$i$i$i = $28;
   while (1) {
    $34 = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
    if ((HEAP32[$34 >> 2] | 0) == ($$0$i$i$i | 0)) {
     $$01$i$i$i = $34;
     break;
    } else $$0$i$i$i = $34;
   }
  } else {
   $$0$i$i$i$i = $29;
   while (1) {
    $31 = HEAP32[$$0$i$i$i$i >> 2] | 0;
    if (!$31) {
     $$01$i$i$i = $$0$i$i$i$i;
     break;
    } else $$0$i$i$i$i = $31;
   }
  }
  if (($$01$i$i$i | 0) == ($2 | 0)) break; else {
   $28 = $$01$i$i$i;
   $9 = $$01$i$i$i;
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $26 = 0, $28 = 0, $29 = 0, $33 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 3816;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 $6 = $this + 52 | 0;
 $7 = $this + 68 | 0;
 $8 = $this + 98 | 0;
 dest = $6;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$6 + 44 >> 1] = 0;
 HEAP8[$6 + 46 >> 0] = 0;
 $9 = $this + 4 | 0;
 __ZNSt3__16localeC2ERKS0_($0, $9);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 __THREW__ = 0;
 $11 = invoke_iii(34, $1 | 0, 11224) | 0;
 $12 = __THREW__;
 __THREW__ = 0;
 if ($12 & 1) {
  $14 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($14);
 }
 __ZNSt3__16localeD2Ev($1);
 do if ($11) {
  __ZNSt3__16localeC2ERKS0_($0, $9);
  HEAP32[$2 >> 2] = HEAP32[$0 >> 2];
  __THREW__ = 0;
  $17 = invoke_iii(22, $2 | 0, 11224) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  if (!($18 & 1)) {
   HEAP32[$7 >> 2] = $17;
   __ZNSt3__16localeD2Ev($2);
   $20 = HEAP32[$7 >> 2] | 0;
   HEAP8[$8 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 28 >> 2] & 127]($20) | 0) & 1;
   break;
  }
  $28 = ___cxa_find_matching_catch() | 0;
  $29 = tempRet0;
  __ZNSt3__16localeD2Ev($2);
  $$0 = $29;
  $$01 = $28;
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($$01 | 0);
 } while (0);
 __THREW__ = 0;
 invoke_iiii(HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] | 0, $this | 0, 0, 4096) | 0;
 $33 = __THREW__;
 __THREW__ = 0;
 if (!($33 & 1)) {
  STACKTOP = sp;
  return;
 }
 $26 = ___cxa_find_matching_catch() | 0;
 $$0 = tempRet0;
 $$01 = $26;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 104 | 0;
 $__nar = sp + 112 | 0;
 $__o = sp + 8 | 0;
 $__op = sp + 4 | 0;
 $__oe = sp + 96 | 0;
 $0 = sp + 92 | 0;
 $1 = sp + 100 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[62837] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[62838] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[62839] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[62840] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[62841] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[62842] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62843, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(4, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  ___resumeException($16 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  $15 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $13, $14, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $15 | 0;
 }
 return 0;
}
function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 104 | 0;
 $__nar = sp + 112 | 0;
 $__o = sp + 8 | 0;
 $__op = sp + 4 | 0;
 $__oe = sp + 96 | 0;
 $0 = sp + 92 | 0;
 $1 = sp + 100 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[62837] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[62838] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[62839] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[62840] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[62841] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[62842] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62843, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(4, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  ___resumeException($16 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  $15 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $13, $14, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $15 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 20 | 0;
 $__nar = sp + 28 | 0;
 $__o = sp + 40 | 0;
 $__op = sp + 12 | 0;
 $__oe = sp + 4 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 16 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[62837] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[62838] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[62839] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[62840] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[62841] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[62842] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62843, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(2, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  ___resumeException($16 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  $15 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $13, $14, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $15 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 20 | 0;
 $__nar = sp + 28 | 0;
 $__o = sp + 40 | 0;
 $__op = sp + 12 | 0;
 $__oe = sp + 4 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 16 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[62837] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[62838] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[62839] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[62840] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[62841] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[62842] | 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62843, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $5 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $7 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 12, $5, $__fmt, $$byval_copy) | 0) | 0;
 $8 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $7, $__iob) | 0;
 $9 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $9;
 __THREW__ = 0;
 invoke_viiiiiii(2, $__nar | 0, $8 | 0, $7 | 0, $__o | 0, $__op | 0, $__oe | 0, $0 | 0);
 $10 = __THREW__;
 __THREW__ = 0;
 if ($10 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  ___resumeException($16 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($9) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  $13 = HEAP32[$__op >> 2] | 0;
  $14 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  $15 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $13, $14, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $15 | 0;
 }
 return 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEEiEERKT_($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$ph$lcssa$i = 0, $$0$ph6$i = 0, $$01$ph5$i = 0, $$013$i = 0, $$013$i$lcssa = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $3 = 0, $30 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $56 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $$0$ph6$i = $0;
  $$01$ph5$i = $1;
  L3 : while (1) {
   $$013$i = $$01$ph5$i;
   while (1) {
    $15 = $$013$i + 16 | 0;
    $16 = HEAP8[$15 >> 0] | 0;
    $18 = ($16 & 1) == 0;
    $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$$013$i + 20 >> 2] | 0;
    $30 = _memcmp($18 ? $15 + 1 | 0 : HEAP32[$$013$i + 24 >> 2] | 0, $14, $10 >>> 0 < $23 >>> 0 ? $10 : $23) | 0;
    if (((($30 | 0) == 0 ? ($23 >>> 0 < $10 >>> 0 ? -2147483648 : 0) : $30) | 0) >= 0) {
     $$013$i$lcssa = $$013$i;
     break;
    }
    $$013$i = HEAP32[$$013$i + 4 >> 2] | 0;
    if (!$$013$i) {
     $$0$ph$lcssa$i = $$0$ph6$i;
     break L3;
    }
   }
   $$01$ph5$i = HEAP32[$$013$i$lcssa >> 2] | 0;
   if (!$$01$ph5$i) {
    $$0$ph$lcssa$i = $$013$i$lcssa;
    break;
   } else $$0$ph6$i = $$013$i$lcssa;
  }
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $41 = $$0$ph$lcssa$i + 16 | 0;
   $42 = HEAP8[$41 >> 0] | 0;
   $44 = ($42 & 1) == 0;
   $49 = $44 ? ($42 & 255) >>> 1 : HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   $56 = _memcmp($14, $44 ? $41 + 1 | 0 : HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0, $49 >>> 0 < $10 >>> 0 ? $49 : $10) | 0;
   if (((($56 | 0) == 0 ? ($10 >>> 0 < $49 >>> 0 ? -2147483648 : 0) : $56) | 0) >= 0) {
    $$sroa$0$0 = $$0$ph$lcssa$i;
    return $$sroa$0$0 | 0;
   }
  }
 }
 $$sroa$0$0 = $0;
 return $$sroa$0$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$ph$lcssa$i = 0, $$0$ph6$i = 0, $$01$ph5$i = 0, $$013$i = 0, $$013$i$lcssa = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $3 = 0, $30 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $56 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $$0$ph6$i = $0;
  $$01$ph5$i = $1;
  L3 : while (1) {
   $$013$i = $$01$ph5$i;
   while (1) {
    $15 = $$013$i + 16 | 0;
    $16 = HEAP8[$15 >> 0] | 0;
    $18 = ($16 & 1) == 0;
    $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$$013$i + 20 >> 2] | 0;
    $30 = _memcmp($18 ? $15 + 1 | 0 : HEAP32[$$013$i + 24 >> 2] | 0, $14, $10 >>> 0 < $23 >>> 0 ? $10 : $23) | 0;
    if (((($30 | 0) == 0 ? ($23 >>> 0 < $10 >>> 0 ? -2147483648 : 0) : $30) | 0) >= 0) {
     $$013$i$lcssa = $$013$i;
     break;
    }
    $$013$i = HEAP32[$$013$i + 4 >> 2] | 0;
    if (!$$013$i) {
     $$0$ph$lcssa$i = $$0$ph6$i;
     break L3;
    }
   }
   $$01$ph5$i = HEAP32[$$013$i$lcssa >> 2] | 0;
   if (!$$01$ph5$i) {
    $$0$ph$lcssa$i = $$013$i$lcssa;
    break;
   } else $$0$ph6$i = $$013$i$lcssa;
  }
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $41 = $$0$ph$lcssa$i + 16 | 0;
   $42 = HEAP8[$41 >> 0] | 0;
   $44 = ($42 & 1) == 0;
   $49 = $44 ? ($42 & 255) >>> 1 : HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   $56 = _memcmp($14, $44 ? $41 + 1 | 0 : HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0, $49 >>> 0 < $10 >>> 0 ? $49 : $10) | 0;
   if (((($56 | 0) == 0 ? ($10 >>> 0 < $49 >>> 0 ? -2147483648 : 0) : $56) | 0) >= 0) {
    $$sroa$0$0 = $$0$ph$lcssa$i;
    return $$sroa$0$0 | 0;
   }
  }
 }
 $$sroa$0$0 = $0;
 return $$sroa$0$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE4findIS7_EENS_15__tree_iteratorIS9_PNS_11__tree_nodeIS9_PvEEiEERKT_($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$ph$lcssa$i = 0, $$0$ph6$i = 0, $$01$ph5$i = 0, $$013$i = 0, $$013$i$lcssa = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $3 = 0, $30 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $56 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $$0$ph6$i = $0;
  $$01$ph5$i = $1;
  L3 : while (1) {
   $$013$i = $$01$ph5$i;
   while (1) {
    $15 = $$013$i + 16 | 0;
    $16 = HEAP8[$15 >> 0] | 0;
    $18 = ($16 & 1) == 0;
    $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$$013$i + 20 >> 2] | 0;
    $30 = _memcmp($18 ? $15 + 1 | 0 : HEAP32[$$013$i + 24 >> 2] | 0, $14, $10 >>> 0 < $23 >>> 0 ? $10 : $23) | 0;
    if (((($30 | 0) == 0 ? ($23 >>> 0 < $10 >>> 0 ? -2147483648 : 0) : $30) | 0) >= 0) {
     $$013$i$lcssa = $$013$i;
     break;
    }
    $$013$i = HEAP32[$$013$i + 4 >> 2] | 0;
    if (!$$013$i) {
     $$0$ph$lcssa$i = $$0$ph6$i;
     break L3;
    }
   }
   $$01$ph5$i = HEAP32[$$013$i$lcssa >> 2] | 0;
   if (!$$01$ph5$i) {
    $$0$ph$lcssa$i = $$013$i$lcssa;
    break;
   } else $$0$ph6$i = $$013$i$lcssa;
  }
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $41 = $$0$ph$lcssa$i + 16 | 0;
   $42 = HEAP8[$41 >> 0] | 0;
   $44 = ($42 & 1) == 0;
   $49 = $44 ? ($42 & 255) >>> 1 : HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   $56 = _memcmp($14, $44 ? $41 + 1 | 0 : HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0, $49 >>> 0 < $10 >>> 0 ? $49 : $10) | 0;
   if (((($56 | 0) == 0 ? ($10 >>> 0 < $49 >>> 0 ? -2147483648 : 0) : $56) | 0) >= 0) {
    $$sroa$0$0 = $$0$ph$lcssa$i;
    return $$sroa$0$0 | 0;
   }
  }
 }
 $$sroa$0$0 = $0;
 return $$sroa$0$0 | 0;
}

function __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $20 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, $eh$lpad$body$i$index2Z2D = 0, $eh$lpad$body$i$indexZ2D = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $29 = $__r$0 + 40 | 0;
  STACKTOP = sp;
  return $29 | 0;
 }
 $3 = __Znwj(44) | 0;
 $4 = $3 + 16 | 0;
 __THREW__ = 0;
 invoke_vii(40, $4 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $13 = ___cxa_find_matching_catch() | 0;
  $eh$lpad$body$i$index2Z2D = tempRet0;
  $eh$lpad$body$i$indexZ2D = $13;
  __ZdlPv($3);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 __THREW__ = 0;
 invoke_vii(40, $3 + 28 | 0, $__k + 12 | 0);
 $9 = __THREW__;
 __THREW__ = 0;
 if ($9 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  $12 = tempRet0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
  $eh$lpad$body$i$index2Z2D = $12;
  $eh$lpad$body$i$indexZ2D = $11;
  __ZdlPv($3);
  ___resumeException($eh$lpad$body$i$indexZ2D | 0);
 }
 HEAP32[$3 + 40 >> 2] = 0;
 $16 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $16;
 HEAP32[$0 >> 2] = $3;
 $20 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$20) $25 = $3; else {
  HEAP32[$this >> 2] = $20;
  $25 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $25);
 $26 = $this + 8 | 0;
 HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
 $__r$0 = $3;
 $29 = $__r$0 + 40 | 0;
 STACKTOP = sp;
 return $29 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEERKT_($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$0$ph$lcssa$i = 0, $$0$ph6$i = 0, $$01$ph5$i = 0, $$013$i = 0, $$013$i$lcssa = 0, $$sroa$0$0 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $23 = 0, $3 = 0, $30 = 0, $41 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $56 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $3 = HEAP8[$__v >> 0] | 0;
  $5 = ($3 & 1) == 0;
  $10 = $5 ? ($3 & 255) >>> 1 : HEAP32[$__v + 4 >> 2] | 0;
  $14 = $5 ? $__v + 1 | 0 : HEAP32[$__v + 8 >> 2] | 0;
  $$0$ph6$i = $0;
  $$01$ph5$i = $1;
  L3 : while (1) {
   $$013$i = $$01$ph5$i;
   while (1) {
    $15 = $$013$i + 16 | 0;
    $16 = HEAP8[$15 >> 0] | 0;
    $18 = ($16 & 1) == 0;
    $23 = $18 ? ($16 & 255) >>> 1 : HEAP32[$$013$i + 20 >> 2] | 0;
    $30 = _memcmp($18 ? $15 + 1 | 0 : HEAP32[$$013$i + 24 >> 2] | 0, $14, $10 >>> 0 < $23 >>> 0 ? $10 : $23) | 0;
    if (((($30 | 0) == 0 ? ($23 >>> 0 < $10 >>> 0 ? -2147483648 : 0) : $30) | 0) >= 0) {
     $$013$i$lcssa = $$013$i;
     break;
    }
    $$013$i = HEAP32[$$013$i + 4 >> 2] | 0;
    if (!$$013$i) {
     $$0$ph$lcssa$i = $$0$ph6$i;
     break L3;
    }
   }
   $$01$ph5$i = HEAP32[$$013$i$lcssa >> 2] | 0;
   if (!$$01$ph5$i) {
    $$0$ph$lcssa$i = $$013$i$lcssa;
    break;
   } else $$0$ph6$i = $$013$i$lcssa;
  }
  if (($$0$ph$lcssa$i | 0) != ($0 | 0)) {
   $41 = $$0$ph$lcssa$i + 16 | 0;
   $42 = HEAP8[$41 >> 0] | 0;
   $44 = ($42 & 1) == 0;
   $49 = $44 ? ($42 & 255) >>> 1 : HEAP32[$$0$ph$lcssa$i + 20 >> 2] | 0;
   $56 = _memcmp($14, $44 ? $41 + 1 | 0 : HEAP32[$$0$ph$lcssa$i + 24 >> 2] | 0, $49 >>> 0 < $10 >>> 0 ? $49 : $10) | 0;
   if (((($56 | 0) == 0 ? ($10 >>> 0 < $49 >>> 0 ? -2147483648 : 0) : $56) | 0) >= 0) {
    $$sroa$0$0 = $$0$ph$lcssa$i;
    return $$sroa$0$0 | 0;
   }
  }
 }
 $$sroa$0$0 = $0;
 return $$sroa$0$0 | 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__fmt = 0, $__nar = 0, $__o = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 180 | 0;
 $__nar = sp + 160 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[62851] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[62852] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[62853] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[62854] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[62855] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[62856] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 $6 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $6;
 __THREW__ = 0;
 $7 = invoke_iii(22, $0 | 0, 11156) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $21 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($6) | 0;
  ___resumeException($21 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($6) | 0;
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 31]($7, $__nar, $4, $__o) | 0;
  $13 = $__o + ($3 << 2) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  $20 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, ($5 | 0) == ($4 | 0) ? $13 : $__o + ($5 - $__nar << 2) | 0, $13, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $20 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($this, $__s, $__iob, $__fl, $__v) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__fmt = 0, $__nar = 0, $__o = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 72 | 0;
 $__nar = sp + 52 | 0;
 $__o = sp + 12 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 HEAP8[$__fmt >> 0] = HEAP8[62851] | 0;
 HEAP8[$__fmt + 1 >> 0] = HEAP8[62852] | 0;
 HEAP8[$__fmt + 2 >> 0] = HEAP8[62853] | 0;
 HEAP8[$__fmt + 3 >> 0] = HEAP8[62854] | 0;
 HEAP8[$__fmt + 4 >> 0] = HEAP8[62855] | 0;
 HEAP8[$__fmt + 5 >> 0] = HEAP8[62856] | 0;
 $2 = __ZNSt3__16__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $__v;
 $3 = __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 20, $2, $__fmt, $$byval_copy) | 0;
 $4 = $__nar + $3 | 0;
 $5 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $4, $__iob) | 0;
 $6 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $6;
 __THREW__ = 0;
 $7 = invoke_iii(22, $0 | 0, 11164) | 0;
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $21 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($6) | 0;
  ___resumeException($21 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($6) | 0;
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 32 >> 2] & 31]($7, $__nar, $4, $__o) | 0;
  $13 = $__o + $3 | 0;
  HEAP32[$1 >> 2] = HEAP32[$__s >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  $20 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, ($5 | 0) == ($4 | 0) ? $13 : $__o + ($5 - $__nar) | 0, $13, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $20 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 8 | 0;
 $__nar = sp + 204 | 0;
 $__o = sp + 24 | 0;
 $__op = sp + 20 | 0;
 $__oe = sp + 16 | 0;
 $2 = sp + 196 | 0;
 $3 = sp + 200 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62845, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(4, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $26 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  ___resumeException($26 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
  $25 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $23, $24, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $25 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 8 | 0;
 $__nar = sp + 196 | 0;
 $__o = sp + 24 | 0;
 $__op = sp + 20 | 0;
 $__oe = sp + 16 | 0;
 $2 = sp + 188 | 0;
 $3 = sp + 192 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62845, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(4, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $26 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  ___resumeException($26 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
  $25 = __ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $23, $24, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $25 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 8 | 0;
 $__nar = sp + 32 | 0;
 $__o = sp + 55 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 28 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62845, 0, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 23, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(2, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $26 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  ___resumeException($26 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
  $25 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $23, $24, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $25 | 0;
 }
 return 0;
}

function __ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($this, $__s, $__iob, $__fl, $0, $1) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__iob = $__iob | 0;
 $__fl = $__fl | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $__fmt = 0, $__nar = 0, $__o = 0, $__oe = 0, $__op = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp;
 $__fmt = sp + 8 | 0;
 $__nar = sp + 32 | 0;
 $__o = sp + 54 | 0;
 $__op = sp + 16 | 0;
 $__oe = sp + 24 | 0;
 $2 = sp + 20 | 0;
 $3 = sp + 28 | 0;
 $4 = $__fmt;
 HEAP32[$4 >> 2] = 37;
 HEAP32[$4 + 4 >> 2] = 0;
 __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmt + 1 | 0, 62845, 1, HEAP32[$__iob + 4 >> 2] | 0);
 $11 = __ZNSt3__16__clocEv() | 0;
 $12 = $$byval_copy;
 HEAP32[$12 >> 2] = $0;
 HEAP32[$12 + 4 >> 2] = $1;
 $17 = $__nar + (__ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__nar, 22, $11, $__fmt, $$byval_copy) | 0) | 0;
 $18 = __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nar, $17, $__iob) | 0;
 $19 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$2 >> 2] = $19;
 __THREW__ = 0;
 invoke_viiiiiii(2, $__nar | 0, $18 | 0, $17 | 0, $__o | 0, $__op | 0, $__oe | 0, $2 | 0);
 $20 = __THREW__;
 __THREW__ = 0;
 if ($20 & 1) {
  $26 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  ___resumeException($26 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($19) | 0;
  HEAP32[$3 >> 2] = HEAP32[$__s >> 2];
  $23 = HEAP32[$__op >> 2] | 0;
  $24 = HEAP32[$__oe >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
  $25 = __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $__o, $23, $24, $__iob, $__fl) | 0;
  STACKTOP = sp;
  return $25 | 0;
 }
 return 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $st, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $st = $st | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 var $$0115 = 0, $$1 = 0, $$lcssa = 0, $$pn = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $16 = 0, $19 = 0, $21 = 0, $7 = 0, $8 = 0, $9 = 0, $nbytes$0$lcssa = 0, $nbytes$016 = 0, $nbytes$1 = 0, $nwchar_t$017 = 0, label = 0;
 $0 = $frm_end;
 $1 = $this + 8 | 0;
 L1 : do if (($frm | 0) == ($frm_end | 0) | ($mx | 0) == 0) $nbytes$0$lcssa = 0; else {
  $$0115 = $frm;
  $nbytes$016 = 0;
  $nwchar_t$017 = 0;
  while (1) {
   $7 = _uselocale(HEAP32[$1 >> 2] | 0) | 0;
   __THREW__ = 0;
   $8 = invoke_iiii(47, $$0115 | 0, $0 - $$0115 | 0, $st | 0) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $$lcssa = $7;
    break;
   }
   if ($7) {
    __THREW__ = 0;
    invoke_ii(73, $7 | 0) | 0;
    $12 = __THREW__;
    __THREW__ = 0;
    if ($12 & 1) {
     label = 5;
     break;
    }
   }
   switch ($8 | 0) {
   case -2:
   case -1:
    {
     $nbytes$0$lcssa = $nbytes$016;
     break L1;
     break;
    }
   case 0:
    {
     $$1 = $$0115 + 1 | 0;
     $$pn = 1;
     break;
    }
   default:
    {
     $$1 = $$0115 + $8 | 0;
     $$pn = $8;
    }
   }
   $nbytes$1 = $$pn + $nbytes$016 | 0;
   $nwchar_t$017 = $nwchar_t$017 + 1 | 0;
   if (($$1 | 0) == ($frm_end | 0) | $nwchar_t$017 >>> 0 >= $mx >>> 0) {
    $nbytes$0$lcssa = $nbytes$1;
    break L1;
   } else {
    $$0115 = $$1;
    $nbytes$016 = $nbytes$1;
   }
  }
  if ((label | 0) == 5) {
   $14 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($14);
  }
  $16 = ___cxa_find_matching_catch() | 0;
  if ($$lcssa) {
   __THREW__ = 0;
   invoke_ii(73, $$lcssa | 0) | 0;
   $19 = __THREW__;
   __THREW__ = 0;
   if ($19 & 1) {
    $21 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($21);
   }
  }
  ___resumeException($16 | 0);
 } while (0);
 return $nbytes$0$lcssa | 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $__way, $2) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__way = $__way | 0;
 $2 = $2 | 0;
 var $$off0 = 0, $10 = 0, $11 = 0, $23 = 0, $28 = 0, $32 = 0, $37 = 0, $4 = 0, $41 = 0, $45 = 0, $49 = 0, $54 = 0, $59 = 0, $6 = 0, $63 = 0, $68 = 0, $69 = 0, $74 = 0;
 $4 = HEAP32[$this + 68 >> 2] | 0;
 if (!$4) {
  $6 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($6);
  ___cxa_throw($6 | 0, 656, 81);
 }
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 24 >> 2] & 127]($4) | 0;
 $11 = $this + 64 | 0;
 if (HEAP32[$11 >> 2] | 0) if (!((($0 | 0) != 0 | ($1 | 0) != 0) & ($10 | 0) < 1)) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) {
  if ($__way >>> 0 >= 3) {
   $32 = $agg$result;
   HEAP32[$32 >> 2] = 0;
   HEAP32[$32 + 4 >> 2] = 0;
   $37 = $agg$result + 8 | 0;
   HEAP32[$37 >> 2] = -1;
   HEAP32[$37 + 4 >> 2] = -1;
   return;
  }
  $41 = HEAP32[$11 >> 2] | 0;
  if (($10 | 0) > 0) {
   $45 = ___muldi3($10 | 0, (($10 | 0) < 0) << 31 >> 31 | 0, $0 | 0, $1 | 0) | 0;
   $$off0 = $45;
  } else $$off0 = 0;
  if (!(___fseeko($41, $$off0, $__way) | 0)) {
   $59 = ___ftello(HEAP32[$11 >> 2] | 0) | 0;
   $63 = $this + 72 | 0;
   $68 = HEAP32[$63 + 4 >> 2] | 0;
   $69 = $agg$result;
   HEAP32[$69 >> 2] = HEAP32[$63 >> 2];
   HEAP32[$69 + 4 >> 2] = $68;
   $74 = $agg$result + 8 | 0;
   HEAP32[$74 >> 2] = $59;
   HEAP32[$74 + 4 >> 2] = (($59 | 0) < 0) << 31 >> 31;
   return;
  } else {
   $49 = $agg$result;
   HEAP32[$49 >> 2] = 0;
   HEAP32[$49 + 4 >> 2] = 0;
   $54 = $agg$result + 8 | 0;
   HEAP32[$54 >> 2] = -1;
   HEAP32[$54 + 4 >> 2] = -1;
   return;
  }
 }
 $23 = $agg$result;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 $28 = $agg$result + 8 | 0;
 HEAP32[$28 >> 2] = -1;
 HEAP32[$28 + 4 >> 2] = -1;
 return;
}

function ___cxx_global_array_dtor120($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14340);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14328);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14316);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14304);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14292);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14280);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14268);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14256);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14244);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14232);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14220);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14208);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14196);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14184);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14172);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14160);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14148);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14136);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14124);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14112);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14100);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14088);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14076);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(14064);
 return;
}

function ___cxx_global_array_dtor93($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13236);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13224);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13212);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13200);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13188);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13176);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13164);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13152);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13140);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13128);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13116);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13104);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13092);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13080);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13068);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13056);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13044);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13032);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13020);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(13008);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12996);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12984);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12972);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12960);
 return;
}

function ___cxx_global_array_dtor69($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12944);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12932);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12920);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12908);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12896);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12884);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12872);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12860);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12848);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12836);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12824);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12812);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12800);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12788);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12776);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12764);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12752);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12740);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12728);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12716);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12704);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12692);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12680);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12668);
 return;
}

function ___cxx_global_array_dtor117($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(14048);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(14036);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(14024);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(14012);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(14e3);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13988);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13976);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13964);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13952);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13940);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13928);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13916);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13904);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13892);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13880);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13868);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13856);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13844);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13832);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13820);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13808);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13796);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13784);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(13772);
 return;
}

function __ZL10uop_string7UnaryOp($agg$result, $uop) {
 $agg$result = $agg$result | 0;
 $uop = $uop | 0;
 var $0 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 switch ($uop | 0) {
 case 2:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54196, 1);
   STACKTOP = sp;
   return;
  }
 case 3:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54787, 1);
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54198, 1);
   STACKTOP = sp;
   return;
  }
 case 0:
  {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 54200, 1);
   STACKTOP = sp;
   return;
  }
 default:
  {
   $2 = __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 54202, 45) | 0, $uop) | 0;
   HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
   __THREW__ = 0;
   $8 = invoke_iii(22, $0 | 0, 11164) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   }
   __THREW__ = 0;
   $14 = invoke_iii(HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] | 0, $8 | 0, 10) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if ($15 & 1) {
    $17 = ___cxa_find_matching_catch() | 0;
    $18 = tempRet0;
    __ZNSt3__16localeD2Ev($0);
    ___resumeException($17 | 0);
   } else {
    __ZNSt3__16localeD2Ev($0);
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($2, $14) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($2) | 0;
    _abort();
   }
  }
 }
}

function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $6 = 0, $dst_ptr$0 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 $0 = HEAP32[$static_ptr >> 2] | 0;
 $4 = $static_ptr + (HEAP32[$0 + -8 >> 2] | 0) | 0;
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $10 = $info + 16 | 0;
 $11 = $info + 20 | 0;
 $12 = $info + 24 | 0;
 $13 = $info + 28 | 0;
 $14 = $info + 32 | 0;
 $15 = $info + 40 | 0;
 $16 = ($6 | 0) == ($dst_type | 0);
 dest = $10;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$10 + 36 >> 1] = 0;
 HEAP8[$10 + 38 >> 0] = 0;
 L1 : do if ($16) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$dst_type >> 2] | 0) + 20 >> 2] & 15]($dst_type, $info, $4, $4, 1, 0);
  $dst_ptr$0 = (HEAP32[$12 >> 2] | 0) == 1 ? $4 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 24 >> 2] & 7]($6, $info, $4, 1, 0);
  switch (HEAP32[$info + 36 >> 2] | 0) {
  case 0:
   {
    $dst_ptr$0 = (HEAP32[$15 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1 ? HEAP32[$11 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $dst_ptr$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$12 >> 2] | 0) != 1) if (!((HEAP32[$15 >> 2] | 0) == 0 & (HEAP32[$13 >> 2] | 0) == 1 & (HEAP32[$14 >> 2] | 0) == 1)) {
   $dst_ptr$0 = 0;
   break;
  }
  $dst_ptr$0 = HEAP32[$10 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $dst_ptr$0 | 0;
}

function __ZN12_GLOBAL__N_14Heap15addIfHeapEntityEPNS_10HeapEntityERNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE($v, $vec) {
 $v = $v | 0;
 $vec = $vec | 0;
 var $$0$i7$i$i = 0, $$0$i8$i$i = 0, $$idx$val$i$i$pre$i$i = 0, $$idx1$val$i$i$i$i = 0, $0 = 0, $1 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $35 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $9 = 0, $this$idx2$val$i$i = 0, label = 0;
 $0 = $v;
 $1 = $vec + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $vec + 8 | 0;
 if (($2 | 0) != (HEAP32[$3 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $0;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 4;
  return;
 }
 $this$idx2$val$i$i = HEAP32[$vec >> 2] | 0;
 $9 = $this$idx2$val$i$i;
 $12 = ($2 - $9 >> 2) + 1 | 0;
 if ($12 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($vec);
  $$idx$val$i$i$pre$i$i = HEAP32[$vec >> 2] | 0;
  $$idx1$val$i$i$i$i = HEAP32[$3 >> 2] | 0;
  $17 = $$idx$val$i$i$pre$i$i;
  $43 = $$idx$val$i$i$pre$i$i;
 } else {
  $$idx1$val$i$i$i$i = $2;
  $17 = $this$idx2$val$i$i;
  $43 = $9;
 }
 $16 = $17;
 $18 = $$idx1$val$i$i$i$i - $16 | 0;
 if ($18 >> 2 >>> 0 < 536870911) {
  $24 = $18 >> 1;
  $26 = $24 >>> 0 < $12 >>> 0 ? $12 : $24;
  $28 = (HEAP32[$1 >> 2] | 0) - $16 | 0;
  $29 = $28 >> 2;
  if (!$26) {
   $$0$i8$i$i = 0;
   $34 = 0;
   $35 = $29;
   $41 = $28;
  } else {
   $$0$i7$i$i = $26;
   $45 = $29;
   $46 = $28;
   label = 8;
  }
 } else {
  $22 = (HEAP32[$1 >> 2] | 0) - $16 | 0;
  $$0$i7$i$i = 1073741823;
  $45 = $22 >> 2;
  $46 = $22;
  label = 8;
 }
 if ((label | 0) == 8) {
  $$0$i8$i$i = $$0$i7$i$i;
  $34 = __Znwj($$0$i7$i$i << 2) | 0;
  $35 = $45;
  $41 = $46;
 }
 HEAP32[$34 + ($35 << 2) >> 2] = $0;
 _memcpy($34 | 0, $17 | 0, $41 | 0) | 0;
 HEAP32[$vec >> 2] = $34;
 HEAP32[$1 >> 2] = $34 + ($35 + 1 << 2);
 HEAP32[$3 >> 2] = $34 + ($$0$i8$i$i << 2);
 if (!$43) return;
 __ZdlPv($43);
 return;
}

function __ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token($o, $v) {
 $o = $o | 0;
 $v = $v | 0;
 var $0 = 0, $10 = 0, $2 = 0, $21 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $4 = 0, $7 = 0, $8 = 0;
 $0 = $v + 4 | 0;
 $2 = (__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($0, 62848) | 0) == 0;
 $3 = HEAP32[$v >> 2] | 0;
 if ($2) {
  $4 = __ZN5Token8toStringENS_4KindE($3) | 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, $4, _strlen($4) | 0) | 0;
  return;
 }
 if (($3 | 0) == 13) {
  $7 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 52632, 1) | 0;
  $8 = HEAP8[$0 >> 0] | 0;
  $10 = ($8 & 1) == 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($7, $10 ? $0 + 1 | 0 : HEAP32[$v + 12 >> 2] | 0, $10 ? ($8 & 255) >>> 1 : HEAP32[$v + 8 >> 2] | 0) | 0, 52632, 1) | 0;
  return;
 } else {
  $21 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($o, 54789, 1) | 0;
  $23 = __ZN5Token8toStringENS_4KindE(HEAP32[$v >> 2] | 0) | 0;
  $26 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($21, $23, _strlen($23) | 0) | 0, 50749, 3) | 0;
  $27 = HEAP8[$0 >> 0] | 0;
  $29 = ($27 & 1) == 0;
  __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j($26, $29 ? $0 + 1 | 0 : HEAP32[$v + 12 >> 2] | 0, $29 ? ($27 & 255) >>> 1 : HEAP32[$v + 8 >> 2] | 0) | 0, 50753, 2) | 0;
  return;
 }
}

function ___stpcpy($d, $s) {
 $d = $d | 0;
 $s = $s | 0;
 var $$0$lcssa = 0, $$01$lcssa = 0, $$0115 = 0, $$016 = 0, $$03 = 0, $$1$ph = 0, $$12$ph = 0, $$128 = 0, $$19 = 0, $0 = 0, $10 = 0, $14 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $32 = 0, $33 = 0, $7 = 0, $9 = 0, $wd$0$lcssa = 0, $wd$010 = 0, $ws$0$lcssa = 0, $ws$011 = 0, label = 0;
 $0 = $s;
 L1 : do if (!(($0 ^ $d) & 3)) {
  if (!($0 & 3)) {
   $$0$lcssa = $s;
   $$01$lcssa = $d;
  } else {
   $$0115 = $d;
   $$016 = $s;
   while (1) {
    $7 = HEAP8[$$016 >> 0] | 0;
    HEAP8[$$0115 >> 0] = $7;
    if (!($7 << 24 >> 24)) {
     $$03 = $$0115;
     break L1;
    }
    $9 = $$016 + 1 | 0;
    $10 = $$0115 + 1 | 0;
    if (!($9 & 3)) {
     $$0$lcssa = $9;
     $$01$lcssa = $10;
     break;
    } else {
     $$0115 = $10;
     $$016 = $9;
    }
   }
  }
  $14 = HEAP32[$$0$lcssa >> 2] | 0;
  if (!(($14 & -2139062144 ^ -2139062144) & $14 + -16843009)) {
   $22 = $14;
   $wd$010 = $$01$lcssa;
   $ws$011 = $$0$lcssa;
   while (1) {
    $20 = $ws$011 + 4 | 0;
    $21 = $wd$010 + 4 | 0;
    HEAP32[$wd$010 >> 2] = $22;
    $22 = HEAP32[$20 >> 2] | 0;
    if (($22 & -2139062144 ^ -2139062144) & $22 + -16843009) {
     $wd$0$lcssa = $21;
     $ws$0$lcssa = $20;
     break;
    } else {
     $wd$010 = $21;
     $ws$011 = $20;
    }
   }
  } else {
   $wd$0$lcssa = $$01$lcssa;
   $ws$0$lcssa = $$0$lcssa;
  }
  $$1$ph = $ws$0$lcssa;
  $$12$ph = $wd$0$lcssa;
  label = 8;
 } else {
  $$1$ph = $s;
  $$12$ph = $d;
  label = 8;
 } while (0);
 if ((label | 0) == 8) {
  $29 = HEAP8[$$1$ph >> 0] | 0;
  HEAP8[$$12$ph >> 0] = $29;
  if (!($29 << 24 >> 24)) $$03 = $$12$ph; else {
   $$128 = $$12$ph;
   $$19 = $$1$ph;
   while (1) {
    $$19 = $$19 + 1 | 0;
    $32 = $$128 + 1 | 0;
    $33 = HEAP8[$$19 >> 0] | 0;
    HEAP8[$32 >> 0] = $33;
    if (!($33 << 24 >> 24)) {
     $$03 = $32;
     break;
    } else $$128 = $32;
   }
  }
 }
 return $$03 | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 L1 : do if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(71, $__s | 0, $this | 0);
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if ($6 & 1) {
   $31 = ___cxa_find_matching_catch(0) | 0;
   $$0 = $31;
  } else {
   do if (HEAP8[$__s >> 0] | 0) {
    $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
    __THREW__ = 0;
    $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
    $19 = __THREW__;
    __THREW__ = 0;
    if (!($19 & 1)) {
     if (($18 | 0) != -1) break;
     $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(47, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
     $29 = __THREW__;
     __THREW__ = 0;
     if (!($29 & 1)) break;
    }
    $33 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
    $$0 = $33;
    break L3;
   } while (0);
   __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($__s);
   break L1;
  } while (0);
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($this) {
 $this = $this | 0;
 var $$0 = 0, $14 = 0, $18 = 0, $19 = 0, $24 = 0, $29 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $6 = 0, $__s = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__s = sp;
 L1 : do if (HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0) {
  __THREW__ = 0;
  invoke_vii(46, $__s | 0, $this | 0);
  $6 = __THREW__;
  __THREW__ = 0;
  L3 : do if ($6 & 1) {
   $31 = ___cxa_find_matching_catch(0) | 0;
   $$0 = $31;
  } else {
   do if (HEAP8[$__s >> 0] | 0) {
    $14 = HEAP32[$this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
    __THREW__ = 0;
    $18 = invoke_ii(HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] | 0, $14 | 0) | 0;
    $19 = __THREW__;
    __THREW__ = 0;
    if (!($19 & 1)) {
     if (($18 | 0) != -1) break;
     $24 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
     __THREW__ = 0;
     invoke_vii(47, $this + $24 | 0, HEAP32[$this + ($24 + 16) >> 2] | 1 | 0);
     $29 = __THREW__;
     __THREW__ = 0;
     if (!($29 & 1)) break;
    }
    $33 = ___cxa_find_matching_catch(0) | 0;
    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
    $$0 = $33;
    break L3;
   } while (0);
   __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($__s);
   break L1;
  } while (0);
  ___cxa_begin_catch($$0 | 0) | 0;
  __THREW__ = 0;
  invoke_vi(174, $this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __THREW__;
  __THREW__ = 0;
  if (!($39 & 1)) {
   ___cxa_end_catch();
   break;
  }
  $41 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $43 = __THREW__;
  __THREW__ = 0;
  if ($43 & 1) {
   $45 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($45);
  } else ___resumeException($41 | 0);
 } while (0);
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $$in = 0, $0 = 0, $1 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $29 = 0, $3 = 0, $33 = 0, $36 = 0, $42 = 0, $43 = 0, $47 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $65 = 0;
 $0 = $this + 32 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($0, $__s) | 0;
 $1 = $this + 44 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $this + 48 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($3 & 8) {
  $6 = HEAP8[$0 >> 0] | 0;
  if (!($6 & 1)) {
   $18 = (($6 & 255) >>> 1) + ($0 + 1) | 0;
   HEAP32[$1 >> 2] = $18;
   $$in = $18;
   $23 = $0 + 1 | 0;
   $25 = $0 + 1 | 0;
  } else {
   $13 = (HEAP32[$this + 40 >> 2] | 0) + (HEAP32[$this + 36 >> 2] | 0) | 0;
   HEAP32[$1 >> 2] = $13;
   $15 = HEAP32[$this + 40 >> 2] | 0;
   $$in = $13;
   $23 = $15;
   $25 = $15;
  }
  HEAP32[$this + 8 >> 2] = $23;
  HEAP32[$this + 12 >> 2] = $25;
  HEAP32[$this + 16 >> 2] = $$in;
 }
 if (!($3 & 16)) return;
 $29 = HEAP8[$0 >> 0] | 0;
 if (!($29 & 1)) {
  $33 = ($29 & 255) >>> 1;
  HEAP32[$1 >> 2] = $0 + 1 + $33;
  $42 = 10;
  $65 = $33;
 } else {
  $36 = HEAP32[$this + 36 >> 2] | 0;
  HEAP32[$1 >> 2] = (HEAP32[$this + 40 >> 2] | 0) + $36;
  $42 = (HEAP32[$0 >> 2] & -2) + -1 | 0;
  $65 = $36;
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($0, $42, 0);
 $43 = HEAP8[$0 >> 0] | 0;
 if (!($43 & 1)) {
  $55 = $0 + 1 | 0;
  $56 = ($43 & 255) >>> 1;
  $58 = $0 + 1 | 0;
 } else {
  $47 = HEAP32[$this + 40 >> 2] | 0;
  $55 = $47;
  $56 = HEAP32[$this + 36 >> 2] | 0;
  $58 = $47;
 }
 $57 = $this + 24 | 0;
 HEAP32[$57 >> 2] = $58;
 HEAP32[$this + 20 >> 2] = $58;
 HEAP32[$this + 28 >> 2] = $55 + $56;
 if (!(HEAP32[$2 >> 2] & 3)) return;
 HEAP32[$57 >> 2] = $58 + $65;
 return;
}

function __ZNSt3__111__call_onceERVmPvPFvS2_E($flag, $arg, $func) {
 $flag = $flag | 0;
 $arg = $arg | 0;
 $func = $func | 0;
 var $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $27 = 0, $29 = 0, $6 = 0, $8 = 0;
 _pthread_mutex_lock(14700) | 0;
 if ((HEAP32[$flag >> 2] | 0) == 1) do _pthread_cond_wait(14728, 14700) | 0; while ((HEAP32[$flag >> 2] | 0) == 1);
 do if (!(HEAP32[$flag >> 2] | 0)) {
  HEAP32[$flag >> 2] = 1;
  __THREW__ = 0;
  invoke_ii(75, 14700) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if (!($6 & 1)) {
   __THREW__ = 0;
   invoke_vi($func | 0, $arg | 0);
   $8 = __THREW__;
   __THREW__ = 0;
   if (!($8 & 1)) {
    __THREW__ = 0;
    invoke_ii(76, 14700) | 0;
    $10 = __THREW__;
    __THREW__ = 0;
    if (!($10 & 1)) {
     HEAP32[$flag >> 2] = -1;
     __THREW__ = 0;
     invoke_ii(75, 14700) | 0;
     $12 = __THREW__;
     __THREW__ = 0;
     if (!($12 & 1)) {
      __THREW__ = 0;
      invoke_ii(77, 14728) | 0;
      $14 = __THREW__;
      __THREW__ = 0;
      if (!($14 & 1)) break;
     }
    }
   }
  }
  $16 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($16 | 0) | 0;
  __THREW__ = 0;
  invoke_ii(76, 14700) | 0;
  $18 = __THREW__;
  __THREW__ = 0;
  if (!($18 & 1)) {
   HEAP32[$flag >> 2] = 0;
   __THREW__ = 0;
   invoke_ii(75, 14700) | 0;
   $20 = __THREW__;
   __THREW__ = 0;
   if (!($20 & 1)) {
    __THREW__ = 0;
    invoke_ii(77, 14728) | 0;
    $22 = __THREW__;
    __THREW__ = 0;
    if (!($22 & 1)) {
     __THREW__ = 0;
     invoke_v(4);
     __THREW__ = 0;
    }
   }
  }
  $25 = ___cxa_find_matching_catch() | 0;
  __THREW__ = 0;
  invoke_v(2);
  $27 = __THREW__;
  __THREW__ = 0;
  if ($27 & 1) {
   $29 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($29);
  } else ___resumeException($25 | 0);
 } else _pthread_mutex_unlock(14700) | 0; while (0);
 return;
}

function _vfprintf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$0 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $28 = 0, $33 = 0, $6 = 0, $7 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $ap2 = sp + 120 | 0;
 $nl_type = sp + 80 | 0;
 $nl_arg = sp;
 $internal_buf = sp + 136 | 0;
 dest = $nl_type;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
 if ((_printf_core(0, $fmt, $ap2, $nl_arg, $nl_type) | 0) < 0) $$0 = -1; else {
  if ((HEAP32[$f + 76 >> 2] | 0) > -1) $33 = ___lockfile($f) | 0; else $33 = 0;
  $6 = HEAP32[$f >> 2] | 0;
  $7 = $6 & 32;
  if ((HEAP8[$f + 74 >> 0] | 0) < 1) HEAP32[$f >> 2] = $6 & -33;
  $12 = $f + 48 | 0;
  if (!(HEAP32[$12 >> 2] | 0)) {
   $16 = $f + 44 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   HEAP32[$16 >> 2] = $internal_buf;
   $18 = $f + 28 | 0;
   HEAP32[$18 >> 2] = $internal_buf;
   $19 = $f + 20 | 0;
   HEAP32[$19 >> 2] = $internal_buf;
   HEAP32[$12 >> 2] = 80;
   $21 = $f + 16 | 0;
   HEAP32[$21 >> 2] = $internal_buf + 80;
   $22 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
   if (!$17) $ret$1 = $22; else {
    FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
    $$ = (HEAP32[$19 >> 2] | 0) == 0 ? -1 : $22;
    HEAP32[$16 >> 2] = $17;
    HEAP32[$12 >> 2] = 0;
    HEAP32[$21 >> 2] = 0;
    HEAP32[$18 >> 2] = 0;
    HEAP32[$19 >> 2] = 0;
    $ret$1 = $$;
   }
  } else $ret$1 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
  $28 = HEAP32[$f >> 2] | 0;
  HEAP32[$f >> 2] = $28 | $7;
  if ($33) ___unlockfile($f);
  $$0 = ($28 & 32 | 0) == 0 ? $ret$1 : -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__114__num_put_base14__format_floatEPcPKcj($__fmtp, $__len, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$012 = 0, $$1 = 0, $$2$lcssa = 0, $$2$ph = 0, $$23 = 0, $11 = 0, $14 = 0, $15 = 0, $23 = 0, $6 = 0, $7 = 0, $8 = 0, $specify_precision$0$off0$ph = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $6 = $__flags & 260;
 $7 = $__flags >>> 14;
 $8 = ($6 | 0) == 260;
 if ($8) {
  $$2$ph = $$1;
  $specify_precision$0$off0$ph = 0;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$2$ph = $$1 + 2 | 0;
  $specify_precision$0$off0$ph = 1;
 }
 $11 = HEAP8[$__len >> 0] | 0;
 if (!($11 << 24 >> 24)) $$2$lcssa = $$2$ph; else {
  $$012 = $__len;
  $$23 = $$2$ph;
  $15 = $11;
  while (1) {
   $$012 = $$012 + 1 | 0;
   $14 = $$23 + 1 | 0;
   HEAP8[$$23 >> 0] = $15;
   $15 = HEAP8[$$012 >> 0] | 0;
   if (!($15 << 24 >> 24)) {
    $$2$lcssa = $14;
    break;
   } else $$23 = $14;
  }
 }
 L14 : do switch ($6 | 0) {
 case 4:
  {
   if (!($7 & 1)) {
    HEAP8[$$2$lcssa >> 0] = 102;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 70;
    break L14;
   }
   break;
  }
 case 256:
  {
   if (!($7 & 1)) {
    HEAP8[$$2$lcssa >> 0] = 101;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 69;
    break L14;
   }
   break;
  }
 default:
  {
   $23 = ($7 & 1 | 0) != 0;
   if ($8) if ($23) {
    HEAP8[$$2$lcssa >> 0] = 65;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 97;
    break L14;
   } else if ($23) {
    HEAP8[$$2$lcssa >> 0] = 71;
    break L14;
   } else {
    HEAP8[$$2$lcssa >> 0] = 103;
    break L14;
   }
  }
 } while (0);
 return $specify_precision$0$off0$ph | 0;
}

function __ZNSt3__19__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $7 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 11156) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$1 >> 2] | 0) + 48 >> 2] | 0, $1 | 0, 61448, 61480, $__atoms | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   __THREW__ = 0;
   $9 = invoke_iii(22, $__loc | 0, 11312) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) {
    __THREW__ = 0;
    $15 = invoke_ii(HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] | 0, $9 | 0) | 0;
    $16 = __THREW__;
    __THREW__ = 0;
    if (!($16 & 1)) {
     HEAP32[$__decimal_point >> 2] = $15;
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] | 0, $9 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if (!($22 & 1)) {
      HEAP32[$__thousands_sep >> 2] = $21;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $9 | 0);
      $27 = __THREW__;
      __THREW__ = 0;
      if (!($27 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 ___resumeException($29 | 0);
}

function __ZNSt3__19__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($agg$result, $__iob, $__atoms, $__decimal_point, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__decimal_point = $__decimal_point | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $7 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 11164) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$1 >> 2] | 0) + 32 >> 2] | 0, $1 | 0, 61448, 61480, $__atoms | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   __THREW__ = 0;
   $9 = invoke_iii(22, $__loc | 0, 11304) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) {
    __THREW__ = 0;
    $15 = invoke_ii(HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] | 0, $9 | 0) | 0;
    $16 = __THREW__;
    __THREW__ = 0;
    if (!($16 & 1)) {
     HEAP8[$__decimal_point >> 0] = $15;
     __THREW__ = 0;
     $21 = invoke_ii(HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] | 0, $9 | 0) | 0;
     $22 = __THREW__;
     __THREW__ = 0;
     if (!($22 & 1)) {
      HEAP8[$__thousands_sep >> 0] = $21;
      __THREW__ = 0;
      invoke_vii(HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $9 | 0);
      $27 = __THREW__;
      __THREW__ = 0;
      if (!($27 & 1)) {
       __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
       STACKTOP = sp;
       return;
      }
     }
    }
   }
  }
 }
 $29 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 ___resumeException($29 | 0);
}

function __ZNSt3__111__stdoutbufIcE8overflowEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $20 = 0, $27 = 0, $31 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 L1 : do if ($0) label = 11; else {
  HEAP8[$__1buf >> 0] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf, 1, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 11;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $9 = $__1buf + 1 | 0;
  $10 = $this + 36 | 0;
  $11 = $this + 40 | 0;
  $12 = $__extbuf + 8 | 0;
  $13 = $__extbuf;
  $14 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $15 = HEAP32[$10 >> 2] | 0;
   $20 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 15]($15, HEAP32[$11 >> 2] | 0, $pbase$0, $9, $__e, $__extbuf, $12, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    $$0 = -1;
    break L1;
   }
   if (($20 | 0) == 3) {
    $pbase$0$lcssa12 = $pbase$0;
    break;
   }
   $27 = ($20 | 0) == 1;
   if ($20 >>> 0 >= 2) {
    $$0 = -1;
    break L1;
   }
   $31 = (HEAP32[$__extbe >> 2] | 0) - $13 | 0;
   if ((_fwrite($__extbuf, 1, $31, HEAP32[$14 >> 2] | 0) | 0) != ($31 | 0)) {
    $$0 = -1;
    break L1;
   }
   if ($27) $pbase$0 = $27 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break L1;
   }
  }
  if ((_fwrite($pbase$0$lcssa12, 1, 1, HEAP32[$14 >> 2] | 0) | 0) == 1) label = 11; else $$0 = -1;
 } while (0);
 if ((label | 0) == 11) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIwE8overflowEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $19 = 0, $26 = 0, $30 = 0, $8 = 0, $9 = 0, $__1buf = 0, $__e = 0, $__extbe = 0, $__extbuf = 0, $pbase$0 = 0, $pbase$0$lcssa12 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__1buf = sp + 8 | 0;
 $__extbe = sp + 4 | 0;
 $__e = sp;
 $0 = ($__c | 0) == -1;
 L1 : do if ($0) label = 11; else {
  HEAP32[$__1buf >> 2] = $__c;
  if (HEAP8[$this + 44 >> 0] | 0) if ((_fwrite($__1buf, 4, 1, HEAP32[$this + 32 >> 2] | 0) | 0) == 1) {
   label = 11;
   break;
  } else {
   $$0 = -1;
   break;
  }
  HEAP32[$__extbe >> 2] = $__extbuf;
  $8 = $__1buf + 4 | 0;
  $9 = $this + 36 | 0;
  $10 = $this + 40 | 0;
  $11 = $__extbuf + 8 | 0;
  $12 = $__extbuf;
  $13 = $this + 32 | 0;
  $pbase$0 = $__1buf;
  while (1) {
   $14 = HEAP32[$9 >> 2] | 0;
   $19 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] & 15]($14, HEAP32[$10 >> 2] | 0, $pbase$0, $8, $__e, $__extbuf, $11, $__extbe) | 0;
   if ((HEAP32[$__e >> 2] | 0) == ($pbase$0 | 0)) {
    $$0 = -1;
    break L1;
   }
   if (($19 | 0) == 3) {
    $pbase$0$lcssa12 = $pbase$0;
    break;
   }
   $26 = ($19 | 0) == 1;
   if ($19 >>> 0 >= 2) {
    $$0 = -1;
    break L1;
   }
   $30 = (HEAP32[$__extbe >> 2] | 0) - $12 | 0;
   if ((_fwrite($__extbuf, 1, $30, HEAP32[$13 >> 2] | 0) | 0) != ($30 | 0)) {
    $$0 = -1;
    break L1;
   }
   if ($26) $pbase$0 = $26 ? HEAP32[$__e >> 2] | 0 : $pbase$0; else {
    label = 11;
    break L1;
   }
  }
  if ((_fwrite($pbase$0$lcssa12, 1, 1, HEAP32[$13 >> 2] | 0) | 0) == 1) label = 11; else $$0 = -1;
 } while (0);
 if ((label | 0) == 11) $$0 = $0 ? 0 : $__c;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $5 = 0, $6 = 0, $9 = 0, $eh$lpad$body$indexZ2D = 0, label = 0;
 $0 = $this + 8 | 0;
 __THREW__ = 0;
 $2 = invoke_ii(73, HEAP32[$0 >> 2] | 0) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) label = 16; else {
  __THREW__ = 0;
  $5 = invoke_iiii(46, 0, 0, 4) | 0;
  $6 = __THREW__;
  __THREW__ = 0;
  if ($6 & 1) {
   $13 = ___cxa_find_matching_catch(0) | 0;
   if (!$2) {
    $eh$lpad$body$indexZ2D = $13;
    break;
   }
   __THREW__ = 0;
   invoke_ii(73, $2 | 0) | 0;
   $16 = __THREW__;
   __THREW__ = 0;
   if (!($16 & 1)) {
    $eh$lpad$body$indexZ2D = $13;
    break;
   }
   $18 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($18);
  }
  if ($2) {
   __THREW__ = 0;
   invoke_ii(73, $2 | 0) | 0;
   $9 = __THREW__;
   __THREW__ = 0;
   if ($9 & 1) {
    $11 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($11);
   }
  }
  if (!$5) {
   $21 = HEAP32[$0 >> 2] | 0;
   if (!$21) $$0 = 1; else {
    __THREW__ = 0;
    $23 = invoke_ii(73, $21 | 0) | 0;
    $24 = __THREW__;
    __THREW__ = 0;
    if ($24 & 1) {
     label = 16;
     break;
    }
    if (!$23) $$0 = 0; else {
     __THREW__ = 0;
     invoke_ii(73, $23 | 0) | 0;
     $27 = __THREW__;
     __THREW__ = 0;
     if ($27 & 1) {
      $29 = ___cxa_find_matching_catch(0) | 0;
      ___clang_call_terminate($29);
     } else $$0 = 0;
    }
   }
  } else $$0 = -1;
  return $$0 | 0;
 } while (0);
 if ((label | 0) == 16) {
  $31 = ___cxa_find_matching_catch(0) | 0;
  $eh$lpad$body$indexZ2D = $31;
 }
 ___clang_call_terminate($eh$lpad$body$indexZ2D);
 return 0;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $10 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $41 = 0, $5 = 0, $6 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11224) | 0;
 HEAP32[$this + 68 >> 2] = $3;
 $5 = $this + 98 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0;
 HEAP8[$5 >> 0] = $10 & 1;
 if (($6 & 255 | 0) == ($10 & 1 | 0)) return;
 $15 = $this + 8 | 0;
 $16 = $this + 96 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 HEAP32[$15 + 20 >> 2] = 0;
 $18 = (HEAP8[$16 >> 0] | 0) != 0;
 if ($10) {
  $19 = $this + 32 | 0;
  if ($18) {
   $20 = HEAP32[$19 >> 2] | 0;
   if ($20) __ZdaPv($20);
  }
  $22 = $this + 97 | 0;
  HEAP8[$16 >> 0] = HEAP8[$22 >> 0] | 0;
  $24 = $this + 60 | 0;
  HEAP32[$this + 52 >> 2] = HEAP32[$24 >> 2];
  $27 = $this + 56 | 0;
  HEAP32[$19 >> 2] = HEAP32[$27 >> 2];
  HEAP32[$24 >> 2] = 0;
  HEAP32[$27 >> 2] = 0;
  HEAP8[$22 >> 0] = 0;
  return;
 }
 if (!$18) {
  $29 = $this + 32 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if (($30 | 0) != ($this + 44 | 0)) {
   $35 = HEAP32[$this + 52 >> 2] | 0;
   HEAP32[$this + 60 >> 2] = $35;
   HEAP32[$this + 56 >> 2] = $30;
   HEAP8[$this + 97 >> 0] = 0;
   HEAP32[$29 >> 2] = __Znaj($35) | 0;
   HEAP8[$16 >> 0] = 1;
   return;
  }
 }
 $41 = HEAP32[$this + 52 >> 2] | 0;
 HEAP32[$this + 60 >> 2] = $41;
 HEAP32[$this + 56 >> 2] = __Znaj($41) | 0;
 HEAP8[$this + 97 >> 0] = 1;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $10 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $3 = $info + 52 | 0;
  $4 = HEAP8[$3 >> 0] | 0;
  $5 = $info + 53 | 0;
  $6 = HEAP8[$5 >> 0] | 0;
  $9 = HEAP32[$this + 12 >> 2] | 0;
  $10 = $this + 16 + ($9 << 3) | 0;
  HEAP8[$3 >> 0] = 0;
  HEAP8[$5 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this + 16 | 0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  L4 : do if (($9 | 0) > 1) {
   $13 = $info + 24 | 0;
   $14 = $this + 8 | 0;
   $15 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    if (HEAP8[$15 >> 0] | 0) break L4;
    if (!(HEAP8[$3 >> 0] | 0)) {
     if (HEAP8[$5 >> 0] | 0) if (!(HEAP32[$14 >> 2] & 1)) break L4;
    } else {
     if ((HEAP32[$13 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[$14 >> 2] & 2)) break L4;
    }
    HEAP8[$3 >> 0] = 0;
    HEAP8[$5 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $10 >>> 0);
  } while (0);
  HEAP8[$3 >> 0] = $4;
  HEAP8[$5 >> 0] = $6;
 }
 return;
}

function ___stdio_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $15 = 0, $2 = 0, $27 = 0, $30 = 0, $31 = 0, $32 = 0, $7 = 0, $cnt$0 = 0, $iov = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $iov = sp + 32 | 0;
 HEAP32[$iov >> 2] = $buf;
 $0 = $iov + 4 | 0;
 $1 = $f + 48 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$0 >> 2] = $len - (($2 | 0) != 0 & 1);
 $7 = $f + 44 | 0;
 HEAP32[$iov + 8 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$iov + 12 >> 2] = $2;
 if (!(HEAP32[1018] | 0)) {
  HEAP32[$vararg_buffer3 >> 2] = HEAP32[$f + 60 >> 2];
  HEAP32[$vararg_buffer3 + 4 >> 2] = $iov;
  HEAP32[$vararg_buffer3 + 8 >> 2] = 2;
  $cnt$0 = ___syscall_ret(___syscall145(145, $vararg_buffer3 | 0) | 0) | 0;
 } else {
  _pthread_cleanup_push(183, $f | 0);
  HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = $iov;
  HEAP32[$vararg_buffer + 8 >> 2] = 2;
  $15 = ___syscall_ret(___syscall145(145, $vararg_buffer | 0) | 0) | 0;
  _pthread_cleanup_pop(0);
  $cnt$0 = $15;
 }
 if (($cnt$0 | 0) < 1) {
  HEAP32[$f >> 2] = HEAP32[$f >> 2] | $cnt$0 & 48 ^ 16;
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $$0 = $cnt$0;
 } else {
  $27 = HEAP32[$0 >> 2] | 0;
  if ($cnt$0 >>> 0 > $27 >>> 0) {
   $30 = HEAP32[$7 >> 2] | 0;
   $31 = $f + 4 | 0;
   HEAP32[$31 >> 2] = $30;
   $32 = $30;
   HEAP32[$f + 8 >> 2] = $32 + ($cnt$0 - $27);
   if (!(HEAP32[$1 >> 2] | 0)) $$0 = $len; else {
    HEAP32[$31 >> 2] = $32 + 1;
    HEAP8[$buf + ($len + -1) >> 0] = HEAP8[$32 >> 0] | 0;
    $$0 = $len;
   }
  } else $$0 = $cnt$0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($agg$result, $ec, $what_arg) {
 $agg$result = $agg$result | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $17 = 0, $18 = 0, $20 = 0, $3 = 0, $30 = 0, $32 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[$ec >> 2] | 0;
 do if ($1) {
  $3 = HEAP8[$what_arg >> 0] | 0;
  if (!($3 & 1)) $11 = ($3 & 255) >>> 1; else $11 = HEAP32[$what_arg + 4 >> 2] | 0;
  if (!$11) $17 = $1; else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($what_arg, 63788) | 0;
   $17 = HEAP32[$ec >> 2] | 0;
  }
  $13 = HEAP32[$ec + 4 >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 31]($0, $13, $17);
  $18 = HEAP8[$0 >> 0] | 0;
  $20 = ($18 & 1) == 0;
  __THREW__ = 0;
  invoke_iiii(35, $what_arg | 0, ($20 ? $0 + 1 | 0 : HEAP32[$0 + 8 >> 2] | 0) | 0, ($20 ? ($18 & 255) >>> 1 : HEAP32[$0 + 4 >> 2] | 0) | 0) | 0;
  $30 = __THREW__;
  __THREW__ = 0;
  if ($30 & 1) {
   $32 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   ___resumeException($32 | 0);
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   break;
  }
 } while (0);
 HEAP32[$agg$result >> 2] = HEAP32[$what_arg >> 2];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[$what_arg + 4 >> 2];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[$what_arg + 8 >> 2];
 HEAP32[$what_arg >> 2] = 0;
 HEAP32[$what_arg + 4 >> 2] = 0;
 HEAP32[$what_arg + 8 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $11 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $34 = 0, $6 = 0, $8 = 0, $thrown_object = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $thrown_object = sp + 36 | 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2) {
   $6 = $2 + 48 | 0;
   $8 = HEAP32[$6 >> 2] | 0;
   $11 = HEAP32[$6 + 4 >> 2] | 0;
   if (!(($8 & -256 | 0) == 1126902528 & ($11 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = HEAP32[1017];
    _abort_message(55916, $vararg_buffer7);
   }
   if (($8 | 0) == 1126902529 & ($11 | 0) == 1129074247) $21 = HEAP32[$2 + 44 >> 2] | 0; else $21 = $2 + 80 | 0;
   HEAP32[$thrown_object >> 2] = $21;
   $22 = HEAP32[$2 >> 2] | 0;
   $24 = HEAP32[$22 + 4 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[624 >> 2] | 0) + 16 >> 2] & 63](624, $22, $thrown_object) | 0) {
    $29 = HEAP32[$thrown_object >> 2] | 0;
    $30 = HEAP32[1017] | 0;
    $34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 8 >> 2] & 127]($29) | 0;
    HEAP32[$vararg_buffer >> 2] = $30;
    HEAP32[$vararg_buffer + 4 >> 2] = $24;
    HEAP32[$vararg_buffer + 8 >> 2] = $34;
    _abort_message(55830, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = HEAP32[1017];
    HEAP32[$vararg_buffer3 + 4 >> 2] = $24;
    _abort_message(55875, $vararg_buffer3);
   }
  }
 }
 _abort_message(55954, $vararg_buffer10);
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $st, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $st = $st | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $$0 = 0, $11 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0, $n$02 = 0, $p$03 = 0, $tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmp = sp;
 HEAP32[$to_nxt >> 2] = $to;
 $2 = _uselocale(HEAP32[$this + 8 >> 2] | 0) | 0;
 __THREW__ = 0;
 $3 = invoke_iiii(45, $tmp | 0, 0, $st | 0) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $11 = ___cxa_find_matching_catch() | 0;
  if ($2) {
   __THREW__ = 0;
   invoke_ii(73, $2 | 0) | 0;
   $14 = __THREW__;
   __THREW__ = 0;
   if ($14 & 1) {
    $16 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($16);
   }
  }
  ___resumeException($11 | 0);
 }
 if ($2) {
  __THREW__ = 0;
  invoke_ii(73, $2 | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if ($7 & 1) {
   $9 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($9);
  }
 }
 switch ($3 | 0) {
 case 0:
 case -1:
  {
   $$0 = 2;
   break;
  }
 default:
  {
   $18 = $3 + -1 | 0;
   if ($18 >>> 0 > ($to_end - (HEAP32[$to_nxt >> 2] | 0) | 0) >>> 0) $$0 = 1; else if (!$18) $$0 = 0; else {
    $n$02 = $18;
    $p$03 = $tmp;
    while (1) {
     $26 = HEAP8[$p$03 >> 0] | 0;
     $27 = HEAP32[$to_nxt >> 2] | 0;
     HEAP32[$to_nxt >> 2] = $27 + 1;
     HEAP8[$27 >> 0] = $26;
     $n$02 = $n$02 + -1 | 0;
     if (!$n$02) {
      $$0 = 0;
      break;
     } else $p$03 = $p$03 + 1 | 0;
    }
   }
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_($agg$result, $this, $__v) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $13 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEESG_RKT_($this, $__parent, $__v) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $24 = 0;
  $__r$0 = $1;
  $22 = $__r$0;
  HEAP32[$agg$result >> 2] = $22;
  $23 = $agg$result + 4 | 0;
  HEAP8[$23 >> 0] = $24;
  STACKTOP = sp;
  return;
 }
 $3 = __Znwj(28) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__v | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 $9 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $9;
 HEAP32[$0 >> 2] = $3;
 $13 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$13) $18 = $3; else {
  HEAP32[$this >> 2] = $13;
  $18 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $18);
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
 $24 = 1;
 $__r$0 = $3;
 $22 = $__r$0;
 HEAP32[$agg$result >> 2] = $22;
 $23 = $agg$result + 4 | 0;
 HEAP8[$23 >> 0] = $24;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this, $__wb, $__we, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__wb = $__wb | 0;
 $__we = $__we | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $1 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $25 = 0, $9 = 0, $__nar = 0, $__nb = 0, $__ne = 0, $mb = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $__nar = sp + 16 | 0;
 $__ne = sp + 12 | 0;
 $mb = sp;
 $__nb = sp + 8 | 0;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $1 = $mb;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$__nb >> 2] = $__nar;
 $9 = (HEAP32[$__we >> 2] | 0) - $__wb >> 2;
 $11 = _uselocale(HEAP32[$this >> 2] | 0) | 0;
 __THREW__ = 0;
 $12 = invoke_iiiii(12, $__wb | 0, $__nb | 0, $9 | 0, $mb | 0) | 0;
 $13 = __THREW__;
 __THREW__ = 0;
 if ($13 & 1) {
  $20 = ___cxa_find_matching_catch() | 0;
  if ($11) {
   __THREW__ = 0;
   invoke_ii(73, $11 | 0) | 0;
   $23 = __THREW__;
   __THREW__ = 0;
   if ($23 & 1) {
    $25 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($25);
   }
  }
  ___resumeException($20 | 0);
 }
 if ($11) {
  __THREW__ = 0;
  invoke_ii(73, $11 | 0) | 0;
  $16 = __THREW__;
  __THREW__ = 0;
  if ($16 & 1) {
   $18 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($18);
  }
 }
 if (($12 | 0) == -1) __ZNSt3__121__throw_runtime_errorEPKc(62905); else {
  HEAP32[$__we >> 2] = $__wb + ($12 << 2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0, $16 = 0, $25 = 0, $27 = 0, $5 = 0, $7 = 0;
 $0 = $this + 8 | 0;
 $1 = $this + 96 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 if (HEAP8[$1 >> 0] | 0) {
  $5 = HEAP32[$this + 32 >> 2] | 0;
  if ($5) __ZdaPv($5);
 }
 $7 = $this + 97 | 0;
 if (HEAP8[$7 >> 0] | 0) {
  $11 = HEAP32[$this + 56 >> 2] | 0;
  if ($11) __ZdaPv($11);
 }
 $13 = $this + 52 | 0;
 HEAP32[$13 >> 2] = $__n;
 do if ($__n >>> 0 > 8) {
  $16 = HEAP8[$this + 98 >> 0] | 0;
  if (($__s | 0) != 0 & $16 << 24 >> 24 != 0) {
   HEAP32[$this + 32 >> 2] = $__s;
   HEAP8[$1 >> 0] = 0;
   $25 = $16;
   break;
  } else {
   HEAP32[$this + 32 >> 2] = __Znaj($__n) | 0;
   HEAP8[$1 >> 0] = 1;
   $25 = $16;
   break;
  }
 } else {
  HEAP32[$this + 32 >> 2] = $this + 44;
  HEAP32[$13 >> 2] = 8;
  HEAP8[$1 >> 0] = 0;
  $25 = HEAP8[$this + 98 >> 0] | 0;
 } while (0);
 if ($25 << 24 >> 24) {
  HEAP32[$this + 60 >> 2] = 0;
  HEAP32[$this + 56 >> 2] = 0;
  HEAP8[$7 >> 0] = 0;
  return $this | 0;
 }
 $27 = ($__n | 0) < 8 ? 8 : $__n;
 HEAP32[$this + 60 >> 2] = $27;
 if (($__s | 0) != 0 & $27 >>> 0 > 7) {
  HEAP32[$this + 56 >> 2] = $__s;
  HEAP8[$7 >> 0] = 0;
  return $this | 0;
 } else {
  HEAP32[$this + 56 >> 2] = __Znaj($27) | 0;
  HEAP8[$7 >> 0] = 1;
  return $this | 0;
 }
 return 0;
}

function __ZNSt3__110__stdinbufIwE9pbackfailEj($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $11 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 8 | 0;
 $__ci = sp + 4 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  L5 : do if ($3) {
   HEAP32[$__ci >> 2] = HEAP32[$8 >> 2];
   $11 = HEAP32[$this + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 4 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0) {
   case 1:
   case 2:
    {
     $$01 = -1;
     break L1;
     break;
    }
   case 3:
    {
     HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
     HEAP32[$__enxt >> 2] = $__extbuf + 1;
     break;
    }
   default:
    {}
   }
   $23 = $this + 32 | 0;
   while (1) {
    $24 = HEAP32[$__enxt >> 2] | 0;
    if ($24 >>> 0 <= $__extbuf >>> 0) break L5;
    $26 = $24 + -1 | 0;
    HEAP32[$__enxt >> 2] = $26;
    if ((_ungetc(HEAP8[$26 >> 0] | 0, HEAP32[$23 >> 2] | 0) | 0) == -1) {
     $$01 = -1;
     break L1;
    }
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function __ZNSt3__110__stdinbufIcE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$01 = 0, $1 = 0, $12 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $5 = 0, $8 = 0, $__ci = 0, $__enxt = 0, $__extbuf = 0, $__inxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__extbuf = sp + 16 | 0;
 $__enxt = sp + 4 | 0;
 $__ci = sp + 8 | 0;
 $__inxt = sp;
 $1 = $this + 52 | 0;
 $3 = (HEAP8[$1 >> 0] | 0) != 0;
 L1 : do if (($__c | 0) == -1) if ($3) $$01 = -1; else {
  $5 = HEAP32[$this + 48 >> 2] | 0;
  HEAP8[$1 >> 0] = ($5 | 0) != -1 & 1;
  $$01 = $5;
 } else {
  $8 = $this + 48 | 0;
  L5 : do if ($3) {
   HEAP8[$__ci >> 0] = HEAP32[$8 >> 2];
   $12 = HEAP32[$this + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 15]($12, HEAP32[$this + 40 >> 2] | 0, $__ci, $__ci + 1 | 0, $__inxt, $__extbuf, $__extbuf + 8 | 0, $__enxt) | 0) {
   case 1:
   case 2:
    {
     $$01 = -1;
     break L1;
     break;
    }
   case 3:
    {
     HEAP8[$__extbuf >> 0] = HEAP32[$8 >> 2];
     HEAP32[$__enxt >> 2] = $__extbuf + 1;
     break;
    }
   default:
    {}
   }
   $24 = $this + 32 | 0;
   while (1) {
    $25 = HEAP32[$__enxt >> 2] | 0;
    if ($25 >>> 0 <= $__extbuf >>> 0) break L5;
    $27 = $25 + -1 | 0;
    HEAP32[$__enxt >> 2] = $27;
    if ((_ungetc(HEAP8[$27 >> 0] | 0, HEAP32[$24 >> 2] | 0) | 0) == -1) {
     $$01 = -1;
     break L1;
    }
   }
  } while (0);
  HEAP32[$8 >> 2] = $__c;
  HEAP8[$1 >> 0] = 1;
  $$01 = $__c;
 } while (0);
 STACKTOP = sp;
 return $$01 | 0;
}

function _fread($destv, $size, $nmemb, $f) {
 $destv = $destv | 0;
 $size = $size | 0;
 $nmemb = $nmemb | 0;
 $f = $f | 0;
 var $$ = 0, $$0 = 0, $0 = 0, $13 = 0, $14 = 0, $17 = 0, $24 = 0, $28 = 0, $32 = 0, $5 = 0, $7 = 0, $dest$0$ph = 0, $dest$02 = 0, $l$0$ph = 0, $l$03 = 0, $l$03$lcssa = 0, label = 0;
 $0 = Math_imul($nmemb, $size) | 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) $32 = ___lockfile($f) | 0; else $32 = 0;
 $5 = $f + 74 | 0;
 $7 = HEAP8[$5 >> 0] | 0;
 HEAP8[$5 >> 0] = $7 + 255 | $7;
 $13 = $f + 4 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $17 = (HEAP32[$f + 8 >> 2] | 0) - $14 | 0;
 if (($17 | 0) > 0) {
  $$ = $17 >>> 0 < $0 >>> 0 ? $17 : $0;
  _memcpy($destv | 0, $14 | 0, $$ | 0) | 0;
  HEAP32[$13 >> 2] = $14 + $$;
  $dest$0$ph = $destv + $$ | 0;
  $l$0$ph = $0 - $$ | 0;
 } else {
  $dest$0$ph = $destv;
  $l$0$ph = $0;
 }
 L7 : do if (!$l$0$ph) label = 13; else {
  $24 = $f + 32 | 0;
  $dest$02 = $dest$0$ph;
  $l$03 = $l$0$ph;
  while (1) {
   if (___toread($f) | 0) {
    $l$03$lcssa = $l$03;
    break;
   }
   $28 = FUNCTION_TABLE_iiii[HEAP32[$24 >> 2] & 63]($f, $dest$02, $l$03) | 0;
   if (($28 + 1 | 0) >>> 0 < 2) {
    $l$03$lcssa = $l$03;
    break;
   }
   if (($l$03 | 0) == ($28 | 0)) {
    label = 13;
    break L7;
   } else {
    $dest$02 = $dest$02 + $28 | 0;
    $l$03 = $l$03 - $28 | 0;
   }
  }
  if ($32) ___unlockfile($f);
  $$0 = (($0 - $l$03$lcssa | 0) >>> 0) / ($size >>> 0) | 0;
 } while (0);
 if ((label | 0) == 13) if (!$32) $$0 = $nmemb; else {
  ___unlockfile($f);
  $$0 = $nmemb;
 }
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_15Stack3popEv($this) {
 $this = $this | 0;
 var $$idx$i = 0, $$idx$val$i = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $6 = 0;
 $$idx$i = $this + 16 | 0;
 $$idx$val$i = HEAP32[$$idx$i >> 2] | 0;
 if ((HEAP32[$$idx$val$i + -144 >> 2] | 0) == 5) {
  $1 = $this + 4 | 0;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + -1;
 }
 $4 = $$idx$val$i + -144 | 0;
 $6 = $$idx$val$i;
 do {
  HEAP32[$$idx$i >> 2] = $6 + -144;
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
  $11 = HEAP32[$6 + -40 >> 2] | 0;
  $13 = $11;
  if ($11) {
   $14 = $6 + -36 | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
   __ZdlPv($11);
  }
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
  $6 = HEAP32[$$idx$i >> 2] | 0;
 } while (($6 | 0) != ($4 | 0));
 return;
}

function __ZNSt3__113__vector_baseIN12_GLOBAL__N_15FrameENS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $6 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) return;
 $2 = $this + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) == ($0 | 0)) $30 = $0; else {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   $13 = $11;
   if ($11) {
    $14 = $6 + -36 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($0 | 0));
  $30 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($30);
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $19 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSA_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $23 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $23 | 0;
 }
 $3 = __Znwj(40) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 $9 = $3 + 28 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $10 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $10;
 HEAP32[$0 >> 2] = $3;
 $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$14) $19 = $3; else {
  HEAP32[$this >> 2] = $14;
  $19 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $19);
 $20 = $this + 8 | 0;
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
 $__r$0 = $3;
 $23 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $$pre = 0, $0 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $7 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $$pre = HEAP32[$this >> 2] | 0;
  $14 = $$pre;
  $43 = $$pre;
 } else {
  $14 = $2;
  $43 = $4;
 }
 $10 = $this + 8 | 0;
 $13 = $14;
 $15 = (HEAP32[$10 >> 2] | 0) - $13 | 0;
 if ($15 >> 2 >>> 0 < 536870911) {
  $22 = $15 >> 1;
  $24 = $22 >>> 0 < $7 >>> 0 ? $7 : $22;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $28 = $27 >> 2;
  if (!$24) {
   $$0$i3 = 0;
   $33 = 0;
   $34 = $28;
   $41 = $27;
  } else {
   $$0$i2 = $24;
   $45 = $28;
   $46 = $27;
   label = 6;
  }
 } else {
  $20 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $45 = $20 >> 2;
  $46 = $20;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $33 = __Znwj($$0$i2 << 2) | 0;
  $34 = $45;
  $41 = $46;
 }
 HEAP32[$33 + ($34 << 2) >> 2] = HEAP32[$__x >> 2];
 _memcpy($33 | 0, $14 | 0, $41 | 0) | 0;
 HEAP32[$this >> 2] = $33;
 HEAP32[$0 >> 2] = $33 + ($34 + 1 << 2);
 HEAP32[$10 >> 2] = $33 + ($$0$i3 << 2);
 if (!$43) return;
 __ZdlPv($43);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$03 = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $16 = 0, $21 = 0, $29 = 0, $34 = 0, $41 = 0, $8 = 0, $__p$04 = 0, $scevgep1 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $15 = 10;
  $16 = ($1 & 255) >>> 1;
  $41 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $15 = ($8 & -2) + -1 | 0;
  $16 = HEAP32[$this + 4 >> 2] | 0;
  $41 = $8 & 255;
 }
 $12 = $__last - $0 | 0;
 do if (($__last | 0) != ($__first | 0)) {
  if (($15 - $16 | 0) >>> 0 < $12 >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $15, $16 + $12 - $15 | 0, $16, $16, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $41;
  if (!($21 & 1)) $29 = $this + 1 | 0; else $29 = HEAP32[$this + 8 >> 2] | 0;
  $scevgep1 = $__last + ($16 - $0) | 0;
  if (($__first | 0) != ($__last | 0)) {
   $$03 = $__first;
   $__p$04 = $29 + $16 | 0;
   while (1) {
    HEAP8[$__p$04 >> 0] = HEAP8[$$03 >> 0] | 0;
    $$03 = $$03 + 1 | 0;
    if (($$03 | 0) == ($__last | 0)) break; else $__p$04 = $__p$04 + 1 | 0;
   }
  }
  HEAP8[$29 + $scevgep1 >> 0] = 0;
  $34 = $16 + $12 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $34 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $34;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__114__split_bufferIN12_GLOBAL__N_15FrameERNS_9allocatorIS2_EEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $30 = 0, $6 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) != ($1 | 0)) {
  $6 = $3;
  do {
   HEAP32[$2 >> 2] = $6 + -144;
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -16 | 0, HEAP32[$6 + -12 >> 2] | 0);
   $11 = HEAP32[$6 + -40 >> 2] | 0;
   $13 = $11;
   if ($11) {
    $14 = $6 + -36 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    if (($15 | 0) != ($11 | 0)) HEAP32[$14 >> 2] = $15 + (~(($15 + -4 - $13 | 0) >>> 2) << 2);
    __ZdlPv($11);
   }
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -52 | 0, HEAP32[$6 + -48 >> 2] | 0);
   __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($6 + -68 | 0, HEAP32[$6 + -64 >> 2] | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6 + -136 | 0);
   $6 = HEAP32[$2 >> 2] | 0;
  } while (($6 | 0) != ($1 | 0));
 }
 $30 = HEAP32[$this >> 2] | 0;
 if (!$30) return;
 __ZdlPv($30);
 return;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $$pre = 0, $0 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $7 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $$pre = HEAP32[$this >> 2] | 0;
  $14 = $$pre;
  $43 = $$pre;
 } else {
  $14 = $2;
  $43 = $4;
 }
 $10 = $this + 8 | 0;
 $13 = $14;
 $15 = (HEAP32[$10 >> 2] | 0) - $13 | 0;
 if ($15 >> 2 >>> 0 < 536870911) {
  $22 = $15 >> 1;
  $24 = $22 >>> 0 < $7 >>> 0 ? $7 : $22;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $28 = $27 >> 2;
  if (!$24) {
   $$0$i3 = 0;
   $33 = 0;
   $34 = $28;
   $41 = $27;
  } else {
   $$0$i2 = $24;
   $45 = $28;
   $46 = $27;
   label = 6;
  }
 } else {
  $20 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $45 = $20 >> 2;
  $46 = $20;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $33 = __Znwj($$0$i2 << 2) | 0;
  $34 = $45;
  $41 = $46;
 }
 HEAP32[$33 + ($34 << 2) >> 2] = HEAP32[$__x >> 2];
 _memcpy($33 | 0, $14 | 0, $41 | 0) | 0;
 HEAP32[$this >> 2] = $33;
 HEAP32[$0 >> 2] = $33 + ($34 + 1 << 2);
 HEAP32[$10 >> 2] = $33 + ($$0$i3 << 2);
 if (!$43) return;
 __ZdlPv($43);
 return;
}

function __ZNSt3__19__num_getIwE17__stage2_int_prepERNS_8ios_baseEPwRw($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $7 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 11156) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$1 >> 2] | 0) + 48 >> 2] | 0, $1 | 0, 61448, 61474, $__atoms | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   __THREW__ = 0;
   $9 = invoke_iii(22, $__loc | 0, 11312) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) {
    __THREW__ = 0;
    $15 = invoke_ii(HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] | 0, $9 | 0) | 0;
    $16 = __THREW__;
    __THREW__ = 0;
    if (!($16 & 1)) {
     HEAP32[$__thousands_sep >> 2] = $15;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $9 | 0);
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 ___resumeException($23 | 0);
}

function __ZNSt3__19__num_getIcE17__stage2_int_prepERNS_8ios_baseEPcRc($agg$result, $__iob, $__atoms, $__thousands_sep) {
 $agg$result = $agg$result | 0;
 $__iob = $__iob | 0;
 $__atoms = $__atoms | 0;
 $__thousands_sep = $__thousands_sep | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $7 = 0, $9 = 0, $__loc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__loc = sp;
 $0 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$__loc >> 2] = $0;
 __THREW__ = 0;
 $1 = invoke_iii(22, $__loc | 0, 11164) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if (!($2 & 1)) {
  __THREW__ = 0;
  invoke_iiiii(HEAP32[(HEAP32[$1 >> 2] | 0) + 32 >> 2] | 0, $1 | 0, 61448, 61474, $__atoms | 0) | 0;
  $7 = __THREW__;
  __THREW__ = 0;
  if (!($7 & 1)) {
   __THREW__ = 0;
   $9 = invoke_iii(22, $__loc | 0, 11304) | 0;
   $10 = __THREW__;
   __THREW__ = 0;
   if (!($10 & 1)) {
    __THREW__ = 0;
    $15 = invoke_ii(HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] | 0, $9 | 0) | 0;
    $16 = __THREW__;
    __THREW__ = 0;
    if (!($16 & 1)) {
     HEAP8[$__thousands_sep >> 0] = $15;
     __THREW__ = 0;
     invoke_vii(HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] | 0, $agg$result | 0, $9 | 0);
     $21 = __THREW__;
     __THREW__ = 0;
     if (!($21 & 1)) {
      __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
      STACKTOP = sp;
      return;
     }
    }
   }
  }
 }
 $23 = ___cxa_find_matching_catch() | 0;
 __ZNSt3__114__shared_count16__release_sharedEv($0) | 0;
 ___resumeException($23 | 0);
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $$pre = 0, $0 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $7 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $$pre = HEAP32[$this >> 2] | 0;
  $14 = $$pre;
  $43 = $$pre;
 } else {
  $14 = $2;
  $43 = $4;
 }
 $10 = $this + 8 | 0;
 $13 = $14;
 $15 = (HEAP32[$10 >> 2] | 0) - $13 | 0;
 if ($15 >> 2 >>> 0 < 536870911) {
  $22 = $15 >> 1;
  $24 = $22 >>> 0 < $7 >>> 0 ? $7 : $22;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $28 = $27 >> 2;
  if (!$24) {
   $$0$i3 = 0;
   $33 = 0;
   $34 = $28;
   $41 = $27;
  } else {
   $$0$i2 = $24;
   $45 = $28;
   $46 = $27;
   label = 6;
  }
 } else {
  $20 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $45 = $20 >> 2;
  $46 = $20;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $33 = __Znwj($$0$i2 << 2) | 0;
  $34 = $45;
  $41 = $46;
 }
 HEAP32[$33 + ($34 << 2) >> 2] = HEAP32[$__x >> 2];
 _memcpy($33 | 0, $14 | 0, $41 | 0) | 0;
 HEAP32[$this >> 2] = $33;
 HEAP32[$0 >> 2] = $33 + ($34 + 1 << 2);
 HEAP32[$10 >> 2] = $33 + ($$0$i3 << 2);
 if (!$43) return;
 __ZdlPv($43);
 return;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$0$i2 = 0, $$0$i3 = 0, $$pre = 0, $0 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $4 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $7 = 0, label = 0;
 $0 = $this + 4 | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $4 = $2;
 $7 = ((HEAP32[$0 >> 2] | 0) - $4 >> 2) + 1 | 0;
 if ($7 >>> 0 > 1073741823) {
  __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $$pre = HEAP32[$this >> 2] | 0;
  $14 = $$pre;
  $43 = $$pre;
 } else {
  $14 = $2;
  $43 = $4;
 }
 $10 = $this + 8 | 0;
 $13 = $14;
 $15 = (HEAP32[$10 >> 2] | 0) - $13 | 0;
 if ($15 >> 2 >>> 0 < 536870911) {
  $22 = $15 >> 1;
  $24 = $22 >>> 0 < $7 >>> 0 ? $7 : $22;
  $27 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $28 = $27 >> 2;
  if (!$24) {
   $$0$i3 = 0;
   $33 = 0;
   $34 = $28;
   $41 = $27;
  } else {
   $$0$i2 = $24;
   $45 = $28;
   $46 = $27;
   label = 6;
  }
 } else {
  $20 = (HEAP32[$0 >> 2] | 0) - $13 | 0;
  $$0$i2 = 1073741823;
  $45 = $20 >> 2;
  $46 = $20;
  label = 6;
 }
 if ((label | 0) == 6) {
  $$0$i3 = $$0$i2;
  $33 = __Znwj($$0$i2 << 2) | 0;
  $34 = $45;
  $41 = $46;
 }
 HEAP32[$33 + ($34 << 2) >> 2] = HEAP32[$__x >> 2];
 _memcpy($33 | 0, $14 | 0, $41 | 0) | 0;
 HEAP32[$this >> 2] = $33;
 HEAP32[$0 >> 2] = $33 + ($34 + 1 << 2);
 HEAP32[$10 >> 2] = $33 + ($$0$i3 << 2);
 if (!$43) return;
 __ZdlPv($43);
 return;
}

function _mbtowc($wc, $src, $n) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $20 = 0, $21 = 0, $29 = 0, $3 = 0, $33 = 0, $38 = 0, $4 = 0, $42 = 0, $8 = 0, $dummy = 0, $dummy$wc = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $dummy = sp;
 L1 : do if (!$src) $$0 = 0; else {
  do if ($n) {
   $dummy$wc = ($wc | 0) == 0 ? $dummy : $wc;
   $3 = HEAP8[$src >> 0] | 0;
   $4 = $3 & 255;
   if ($3 << 24 >> 24 > -1) {
    HEAP32[$dummy$wc >> 2] = $4;
    $$0 = $3 << 24 >> 24 != 0 & 1;
    break L1;
   }
   $8 = $4 + -194 | 0;
   if ($8 >>> 0 <= 50) {
    $10 = $src + 1 | 0;
    $12 = HEAP32[4116 + ($8 << 2) >> 2] | 0;
    if ($n >>> 0 < 4) if ($12 & -2147483648 >>> (($n * 6 | 0) + -6 | 0)) break;
    $20 = HEAPU8[$10 >> 0] | 0;
    $21 = $20 >>> 3;
    if (($21 + -16 | $21 + ($12 >> 26)) >>> 0 <= 7) {
     $29 = $20 + -128 | $12 << 6;
     if (($29 | 0) >= 0) {
      HEAP32[$dummy$wc >> 2] = $29;
      $$0 = 2;
      break L1;
     }
     $33 = HEAPU8[$src + 2 >> 0] | 0;
     if (($33 & 192 | 0) == 128) {
      $38 = $33 + -128 | $29 << 6;
      if (($38 | 0) >= 0) {
       HEAP32[$dummy$wc >> 2] = $38;
       $$0 = 3;
       break L1;
      }
      $42 = HEAPU8[$src + 3 >> 0] | 0;
      if (($42 & 192 | 0) == 128) {
       HEAP32[$dummy$wc >> 2] = $42 + -128 | $38 << 6;
       $$0 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$03 = 0, $0 = 0, $1 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $30 = 0, $33 = 0, $38 = 0, $45 = 0, $8 = 0, $__p$04 = 0;
 $0 = $__first;
 $1 = HEAP8[$this >> 0] | 0;
 if (!($1 & 1)) {
  $16 = 1;
  $17 = ($1 & 255) >>> 1;
  $45 = $1;
 } else {
  $8 = HEAP32[$this >> 2] | 0;
  $16 = ($8 & -2) + -1 | 0;
  $17 = HEAP32[$this + 4 >> 2] | 0;
  $45 = $8 & 255;
 }
 $13 = $__last - $0 >> 2;
 do if ($13) {
  if (($16 - $17 | 0) >>> 0 < $13 >>> 0) {
   __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $16, $17 + $13 - $16 | 0, $17, $17, 0, 0);
   $22 = HEAP8[$this >> 0] | 0;
  } else $22 = $45;
  if (!($22 & 1)) $33 = $this + 4 | 0; else $33 = HEAP32[$this + 8 >> 2] | 0;
  $30 = $17 + (($__last - $0 | 0) >>> 2) | 0;
  if (($__first | 0) != ($__last | 0)) {
   $$03 = $__first;
   $__p$04 = $33 + ($17 << 2) | 0;
   while (1) {
    HEAP32[$__p$04 >> 2] = HEAP32[$$03 >> 2];
    $$03 = $$03 + 4 | 0;
    if (($$03 | 0) == ($__last | 0)) break; else $__p$04 = $__p$04 + 4 | 0;
   }
  }
  HEAP32[$33 + ($30 << 2) >> 2] = 0;
  $38 = $17 + $13 | 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $38 << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $38;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $24 = 0, $32 = 0, $9 = 0;
 if ((1073741806 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $21 = $this + 4 | 0; else $21 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $18 = $12 >>> 0 < 2 ? 2 : $12 + 4 & -4;
 } else $18 = 1073741807;
 $19 = __Znwj($18 << 2) | 0;
 if ($__n_copy) _wmemcpy($19, $21, $__n_copy) | 0;
 if ($__n_add) _wmemcpy($19 + ($__n_copy << 2) | 0, $__p_new_stuff, $__n_add) | 0;
 $24 = $__old_sz - $__n_del | 0;
 if (($24 | 0) != ($__n_copy | 0)) _wmemcpy($19 + ($__n_add + $__n_copy << 2) | 0, $21 + ($__n_del + $__n_copy << 2) | 0, $24 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($21);
 HEAP32[$this + 8 >> 2] = $19;
 HEAP32[$this >> 2] = $18 | 1;
 $32 = $24 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $32;
 HEAP32[$19 + ($32 << 2) >> 2] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, $__n) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$1 = 0, $$pre$phiZ2D = 0, $0 = 0, $13 = 0, $17 = 0, $2 = 0, $23 = 0, $25 = 0, $31 = 0, $8 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $8 = ($0 & 255) >>> 1; else $8 = HEAP32[$this + 4 >> 2] | 0;
 if ($8 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 if ($2) {
  $13 = 10;
  $17 = $0;
 } else {
  $9 = HEAP32[$this >> 2] | 0;
  $13 = ($9 & -2) + -1 | 0;
  $17 = $9 & 255;
 }
 if (($13 - $8 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $13, $8 + $__n - $13 | 0, $8, $__pos, 0, $__n, $__s); else if ($__n) {
  if (!($17 & 1)) $23 = $this + 1 | 0; else $23 = HEAP32[$this + 8 >> 2] | 0;
  if (($8 | 0) == ($__pos | 0)) {
   $$1 = $__s;
   $$pre$phiZ2D = $23 + $__pos | 0;
  } else {
   $25 = $23 + $__pos | 0;
   _memmove($23 + ($__n + $__pos) | 0, $25 | 0, $8 - $__pos | 0) | 0;
   $$1 = $25 >>> 0 <= $__s >>> 0 & ($23 + $8 | 0) >>> 0 > $__s >>> 0 ? $__s + $__n | 0 : $__s;
   $$pre$phiZ2D = $25;
  }
  _memmove($$pre$phiZ2D | 0, $$1 | 0, $__n | 0) | 0;
  $31 = $8 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $31 << 1; else HEAP32[$this + 4 >> 2] = $31;
  HEAP8[$23 + $31 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEEC2ERKS6_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $0 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $27 = 0, $29 = 0, $32 = 0, $7 = 0, $8 = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $7 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$__x >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) {
  __THREW__ = 0;
  invoke_vi(175, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if (!($11 & 1)) label = 4;
 } else label = 4;
 if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if (!($14 & 1)) {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$this + 8 >> 2] = $13 + ($8 << 2);
   $18 = HEAP32[$__x >> 2] | 0;
   $19 = HEAP32[$2 >> 2] | 0;
   if (($18 | 0) == ($19 | 0)) return;
   $$01$i = $18;
   $22 = $13;
   do {
    HEAP32[$22 >> 2] = HEAP32[$$01$i >> 2];
    $22 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
    HEAP32[$0 >> 2] = $22;
    $$01$i = $$01$i + 4 | 0;
   } while (($$01$i | 0) != ($19 | 0));
   return;
  }
 }
 $27 = ___cxa_find_matching_catch() | 0;
 $29 = HEAP32[$this >> 2] | 0;
 if (!$29) ___resumeException($27 | 0);
 $32 = HEAP32[$0 >> 2] | 0;
 if (($32 | 0) != ($29 | 0)) HEAP32[$0 >> 2] = $32 + (~(($32 + -4 - $29 | 0) >>> 2) << 2);
 __ZdlPv($29);
 ___resumeException($27 | 0);
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $19 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $__parent = 0, $__r$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__parent = sp;
 $0 = __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERSD_($this, $__parent, $__k) | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1) {
  $__r$0 = $1;
  $23 = $__r$0 + 28 | 0;
  STACKTOP = sp;
  return $23 | 0;
 }
 $3 = __Znwj(32) | 0;
 __THREW__ = 0;
 invoke_vii(40, $3 + 16 | 0, $__k | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $7 = ___cxa_find_matching_catch() | 0;
  __ZdlPv($3);
  ___resumeException($7 | 0);
 }
 HEAP32[$3 + 28 >> 2] = 0;
 $10 = HEAP32[$__parent >> 2] | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = $10;
 HEAP32[$0 >> 2] = $3;
 $14 = HEAP32[HEAP32[$this >> 2] >> 2] | 0;
 if (!$14) $19 = $3; else {
  HEAP32[$this >> 2] = $14;
  $19 = HEAP32[$0 >> 2] | 0;
 }
 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(HEAP32[$this + 4 >> 2] | 0, $19);
 $20 = $this + 8 | 0;
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
 $__r$0 = $3;
 $23 = $__r$0 + 28 | 0;
 STACKTOP = sp;
 return $23 | 0;
}

function __ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEEC2ERKS5_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $$01$i = 0, $0 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $27 = 0, $29 = 0, $32 = 0, $7 = 0, $8 = 0, label = 0;
 HEAP32[$this >> 2] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 $2 = $__x + 4 | 0;
 $7 = (HEAP32[$2 >> 2] | 0) - (HEAP32[$__x >> 2] | 0) | 0;
 $8 = $7 >> 2;
 if (!$8) return;
 if ($8 >>> 0 > 1073741823) {
  __THREW__ = 0;
  invoke_vi(175, $this | 0);
  $11 = __THREW__;
  __THREW__ = 0;
  if (!($11 & 1)) label = 4;
 } else label = 4;
 if ((label | 0) == 4) {
  __THREW__ = 0;
  $13 = invoke_ii(67, $7 | 0) | 0;
  $14 = __THREW__;
  __THREW__ = 0;
  if (!($14 & 1)) {
   HEAP32[$0 >> 2] = $13;
   HEAP32[$this >> 2] = $13;
   HEAP32[$this + 8 >> 2] = $13 + ($8 << 2);
   $18 = HEAP32[$__x >> 2] | 0;
   $19 = HEAP32[$2 >> 2] | 0;
   if (($18 | 0) == ($19 | 0)) return;
   $$01$i = $18;
   $22 = $13;
   do {
    HEAP32[$22 >> 2] = HEAP32[$$01$i >> 2];
    $22 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
    HEAP32[$0 >> 2] = $22;
    $$01$i = $$01$i + 4 | 0;
   } while (($$01$i | 0) != ($19 | 0));
   return;
  }
 }
 $27 = ___cxa_find_matching_catch() | 0;
 $29 = HEAP32[$this >> 2] | 0;
 if (!$29) ___resumeException($27 | 0);
 $32 = HEAP32[$0 >> 2] | 0;
 if (($32 | 0) != ($29 | 0)) HEAP32[$0 >> 2] = $32 + (~(($32 + -4 - $29 | 0) >>> 2) << 2);
 __ZdlPv($29);
 ___resumeException($27 | 0);
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add, $__p_new_stuff) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 $__p_new_stuff = $__p_new_stuff | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $31 = 0, $9 = 0;
 if ((-18 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 1 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $17 = $12 >>> 0 < 11 ? 11 : $12 + 16 & -16;
 } else $17 = -17;
 $18 = __Znwj($17) | 0;
 if ($__n_copy) _memcpy($18 | 0, $20 | 0, $__n_copy | 0) | 0;
 if ($__n_add) _memcpy($18 + $__n_copy | 0, $__p_new_stuff | 0, $__n_add | 0) | 0;
 $23 = $__old_sz - $__n_del | 0;
 if (($23 | 0) != ($__n_copy | 0)) _memcpy($18 + ($__n_add + $__n_copy) | 0, $20 + ($__n_del + $__n_copy) | 0, $23 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 $31 = $23 + $__n_add | 0;
 HEAP32[$this + 4 >> 2] = $31;
 HEAP8[$18 + $31 >> 0] = 0;
 return;
}

function ___strchrnul($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $$0 = 0, $$02$lcssa = 0, $$0211 = 0, $$1 = 0, $0 = 0, $11 = 0, $15 = 0, $16 = 0, $22 = 0, $23 = 0, $29 = 0, $36 = 0, $37 = 0, $5 = 0, $8 = 0, $w$0$lcssa = 0, $w$08 = 0;
 $0 = $c & 255;
 L1 : do if (!$0) $$0 = $s + (_strlen($s) | 0) | 0; else {
  if (!($s & 3)) $$02$lcssa = $s; else {
   $5 = $c & 255;
   $$0211 = $s;
   while (1) {
    $8 = HEAP8[$$0211 >> 0] | 0;
    if ($8 << 24 >> 24 == 0 ? 1 : $8 << 24 >> 24 == $5 << 24 >> 24) {
     $$0 = $$0211;
     break L1;
    }
    $11 = $$0211 + 1 | 0;
    if (!($11 & 3)) {
     $$02$lcssa = $11;
     break;
    } else $$0211 = $11;
   }
  }
  $15 = Math_imul($0, 16843009) | 0;
  $16 = HEAP32[$$02$lcssa >> 2] | 0;
  L10 : do if (!(($16 & -2139062144 ^ -2139062144) & $16 + -16843009)) {
   $23 = $16;
   $w$08 = $$02$lcssa;
   while (1) {
    $22 = $23 ^ $15;
    if (($22 & -2139062144 ^ -2139062144) & $22 + -16843009) {
     $w$0$lcssa = $w$08;
     break L10;
    }
    $29 = $w$08 + 4 | 0;
    $23 = HEAP32[$29 >> 2] | 0;
    if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009) {
     $w$0$lcssa = $29;
     break;
    } else $w$08 = $29;
   }
  } else $w$0$lcssa = $$02$lcssa; while (0);
  $36 = $c & 255;
  $$1 = $w$0$lcssa;
  while (1) {
   $37 = HEAP8[$$1 >> 0] | 0;
   if ($37 << 24 >> 24 == 0 ? 1 : $37 << 24 >> 24 == $36 << 24 >> 24) {
    $$0 = $$1;
    break;
   } else $$1 = $$1 + 1 | 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $ec, $what_arg) {
 $this = $this | 0;
 $ec = $ec | 0;
 $what_arg = $what_arg | 0;
 var $$0 = 0, $$01 = 0, $0 = 0, $1 = 0, $13 = 0, $14 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($1, $what_arg, _strlen($what_arg) | 0);
 __THREW__ = 0;
 invoke_viii(19, $0 | 0, $ec | 0, $1 | 0);
 $3 = __THREW__;
 __THREW__ = 0;
 do if ($3 & 1) {
  $18 = ___cxa_find_matching_catch() | 0;
  $$0 = tempRet0;
  $$01 = $18;
 } else {
  __THREW__ = 0;
  invoke_vii(108, $this | 0, $0 | 0);
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $20 = ___cxa_find_matching_catch() | 0;
   $21 = tempRet0;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   $$0 = $21;
   $$01 = $20;
   break;
  } else {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
   HEAP32[$this >> 2] = 14688;
   $8 = $ec;
   $13 = HEAP32[$8 + 4 >> 2] | 0;
   $14 = $this + 8 | 0;
   HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$14 + 4 >> 2] = $13;
   STACKTOP = sp;
   return;
  }
 } while (0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 ___resumeException($$01 | 0);
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $24 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $24 = ($6 & 255) >>> 1; else $24 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($24 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $14 = 0, $22 = 0, $24 = 0, $29 = 0, $31 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 127]($1) | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 if (!($6 & 1)) $24 = ($6 & 255) >>> 1; else $24 = HEAP32[$5 + 4 >> 2] | 0;
 $14 = HEAP8[$5 + 12 >> 0] | 0;
 if (!($14 & 1)) $22 = ($14 & 255) >>> 1; else $22 = HEAP32[$5 + 16 >> 2] | 0;
 do if (($24 | 0) == (0 - $22 | 0)) HEAP32[$__err >> 2] = HEAP32[$__err >> 2] | 4; else {
  HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
  $29 = __ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 24 | 0, $__ct, $__err, 0) | 0;
  $31 = HEAP32[$__h >> 2] | 0;
  if (($29 | 0) == ($5 | 0) & ($31 | 0) == 12) {
   HEAP32[$__h >> 2] = 0;
   break;
  }
  if (($31 | 0) < 12 & ($29 - $5 | 0) == 12) HEAP32[$__h >> 2] = $31 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function ___fwritex($s, $l, $f) {
 $s = $s | 0;
 $l = $l | 0;
 $f = $f | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $19 = 0, $29 = 0, $5 = 0, $6 = 0, $8 = 0, $i$0 = 0, $i$0$lcssa10 = 0, $i$1 = 0, label = 0;
 $0 = $f + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) if (!(___towrite($f) | 0)) {
  $8 = HEAP32[$0 >> 2] | 0;
  label = 4;
 } else $$0 = 0; else {
  $8 = $1;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $5 = $f + 20 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (($8 - $6 | 0) >>> 0 < $l >>> 0) {
   $$0 = FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $l) | 0;
   break;
  }
  L9 : do if ((HEAP8[$f + 75 >> 0] | 0) > -1) {
   $i$0 = $l;
   while (1) {
    if (!$i$0) {
     $$01 = $l;
     $$02 = $s;
     $29 = $6;
     $i$1 = 0;
     break L9;
    }
    $19 = $i$0 + -1 | 0;
    if ((HEAP8[$s + $19 >> 0] | 0) == 10) {
     $i$0$lcssa10 = $i$0;
     break;
    } else $i$0 = $19;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $s, $i$0$lcssa10) | 0) >>> 0 < $i$0$lcssa10 >>> 0) {
    $$0 = $i$0$lcssa10;
    break L4;
   }
   $$01 = $l - $i$0$lcssa10 | 0;
   $$02 = $s + $i$0$lcssa10 | 0;
   $29 = HEAP32[$5 >> 2] | 0;
   $i$1 = $i$0$lcssa10;
  } else {
   $$01 = $l;
   $$02 = $s;
   $29 = $6;
   $i$1 = 0;
  } while (0);
  _memcpy($29 | 0, $$02 | 0, $$01 | 0) | 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$01;
  $$0 = $i$1 + $$01 | 0;
 } while (0);
 return $$0 | 0;
}

function ___shgetc($f) {
 $f = $f | 0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre4 = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $15 = 0, $21 = 0, $26 = 0, $28 = 0, $31 = 0, $36 = 0, $41 = 0, $6 = 0, $9 = 0, label = 0;
 $0 = $f + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) label = 3; else if ((HEAP32[$f + 108 >> 2] | 0) < ($1 | 0)) label = 3; else label = 4;
 if ((label | 0) == 3) {
  $6 = ___uflow($f) | 0;
  if (($6 | 0) < 0) label = 4; else {
   $9 = HEAP32[$0 >> 2] | 0;
   $$phi$trans$insert = $f + 8 | 0;
   if (!$9) {
    $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
    $26 = $$pre;
    $41 = $$pre;
    label = 9;
   } else {
    $12 = HEAP32[$$phi$trans$insert >> 2] | 0;
    $14 = HEAP32[$f + 4 >> 2] | 0;
    $15 = $12;
    $21 = $9 - (HEAP32[$f + 108 >> 2] | 0) + -1 | 0;
    if (($15 - $14 | 0) > ($21 | 0)) {
     HEAP32[$f + 100 >> 2] = $14 + $21;
     $28 = $12;
    } else {
     $26 = $15;
     $41 = $12;
     label = 9;
    }
   }
   if ((label | 0) == 9) {
    HEAP32[$f + 100 >> 2] = $26;
    $28 = $41;
   }
   $$pre4 = HEAP32[$f + 4 >> 2] | 0;
   if ($28) {
    $31 = $f + 108 | 0;
    HEAP32[$31 >> 2] = $28 + 1 - $$pre4 + (HEAP32[$31 >> 2] | 0);
   }
   $36 = $$pre4 + -1 | 0;
   if ((HEAPU8[$36 >> 0] | 0 | 0) == ($6 | 0)) $$0 = $6; else {
    HEAP8[$36 >> 0] = $6;
    $$0 = $6;
   }
  }
 }
 if ((label | 0) == 4) {
  HEAP32[$f + 100 >> 2] = 0;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i1 = 0, $$pre$i = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $22 = 0, $4 = 0, $5 = 0, $__v = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $__v = sp;
 $4 = HEAP32[$this + 8 >> 2] | 0;
 $5 = HEAP32[$this + 4 >> 2] | 0;
 if ($4 - $5 >> 2 >>> 0 < $__n >>> 0) {
  $11 = HEAP32[$this >> 2] | 0;
  $13 = $5 - $11 >> 2;
  $14 = $13 + $__n | 0;
  if ($14 >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
  $16 = $4 - $11 | 0;
  if ($16 >> 2 >>> 0 < 536870911) {
   $19 = $16 >> 1;
   $$0$i1 = $19 >>> 0 < $14 >>> 0 ? $14 : $19;
  } else $$0$i1 = 1073741823;
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($__v, $$0$i1, $13, $this + 16 | 0);
  $22 = $__v + 8 | 0;
  $$pre$i = HEAP32[$22 >> 2] | 0;
  _memset($$pre$i | 0, 0, $__n << 2 | 0) | 0;
  HEAP32[$22 >> 2] = $$pre$i + ($__n << 2);
  __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v);
  __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($__v);
 } else __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $22 = 0, $25 = 0, $4 = 0, $6 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $__nar = sp + 4 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 100;
 __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $6 = HEAP32[$__s >> 2] | 0;
 if (($__nar | 0) == ($4 | 0)) $$lcssa = $6; else {
  $$0$i$i2 = $__nar;
  $10 = $6;
  while (1) {
   $8 = HEAP8[$$0$i$i2 >> 0] | 0;
   do if (!$10) $25 = 0; else {
    $11 = $10 + 24 | 0;
    $12 = HEAP32[$11 >> 2] | 0;
    if (($12 | 0) == (HEAP32[$10 + 28 >> 2] | 0)) {
     $22 = (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, $8 & 255) | 0) == -1;
     $25 = $22 ? 0 : $10;
     break;
    } else {
     HEAP32[$11 >> 2] = $12 + 1;
     HEAP8[$12 >> 0] = $8;
     $25 = $10;
     break;
    }
   } while (0);
   $$0$i$i2 = $$0$i$i2 + 1 | 0;
   if (($$0$i$i2 | 0) == ($4 | 0)) {
    $$lcssa = $25;
    break;
   } else $10 = $25;
  }
 }
 STACKTOP = sp;
 return $$lcssa | 0;
}

function __ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($this, $__s, $0, $1, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__s = $__s | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $$0$i$i$i$i = 0, $$0$i$i2 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $24 = 0, $4 = 0, $6 = 0, $8 = 0, $__nar = 0, $__ne = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 $__nar = sp + 8 | 0;
 $__ne = sp;
 HEAP32[$__ne >> 2] = $__nar + 400;
 __ZNKSt3__110__time_put8__do_putEPwRS1_PK2tmcc($this + 8 | 0, $__nar, $__ne, $__tm, $__fmt, $__mod);
 $4 = HEAP32[$__ne >> 2] | 0;
 $6 = HEAP32[$__s >> 2] | 0;
 if (($__nar | 0) == ($4 | 0)) $$lcssa = $6; else {
  $$0$i$i2 = $__nar;
  $10 = $6;
  while (1) {
   $8 = HEAP32[$$0$i$i2 >> 2] | 0;
   if (!$10) $24 = 0; else {
    $11 = $10 + 24 | 0;
    $12 = HEAP32[$11 >> 2] | 0;
    if (($12 | 0) == (HEAP32[$10 + 28 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, $8) | 0; else {
     HEAP32[$11 >> 2] = $12 + 4;
     HEAP32[$12 >> 2] = $8;
     $$0$i$i$i$i = $8;
    }
    $24 = ($$0$i$i$i$i | 0) == -1 ? 0 : $10;
   }
   $$0$i$i2 = $$0$i$i2 + 4 | 0;
   if (($$0$i$i2 | 0) == ($4 | 0)) {
    $$lcssa = $24;
    break;
   } else $10 = $24;
  }
 }
 STACKTOP = sp;
 return $$lcssa | 0;
}

function __Z25jsonlang_unparse_jsonlangPK3AST($agg$result, $ast) {
 $agg$result = $agg$result | 0;
 $ast = $ast | 0;
 var $0 = 0, $10 = 0, $11 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ($ast) {
  $2 = ___dynamic_cast($ast, 48, 56, 0) | 0;
  if ($2) {
   __ZL7unparsePK3AST($agg$result, HEAP32[$2 + 60 >> 2] | 0);
   STACKTOP = sp;
   return;
  }
 }
 $4 = __ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j(8580, 50248, 68) | 0;
 HEAP32[$0 >> 2] = __ZNKSt3__18ios_base6getlocEv($4 + (HEAP32[(HEAP32[$4 >> 2] | 0) + -12 >> 2] | 0) | 0) | 0;
 __THREW__ = 0;
 $10 = invoke_iii(22, $0 | 0, 11164) | 0;
 $11 = __THREW__;
 __THREW__ = 0;
 if ($11 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  $20 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($19 | 0);
 }
 __THREW__ = 0;
 $16 = invoke_iii(HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] | 0, $10 | 0, 10) | 0;
 $17 = __THREW__;
 __THREW__ = 0;
 if ($17 & 1) {
  $19 = ___cxa_find_matching_catch() | 0;
  $20 = tempRet0;
  __ZNSt3__16localeD2Ev($0);
  ___resumeException($19 | 0);
 } else {
  __ZNSt3__16localeD2Ev($0);
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc($4, $16) | 0;
  __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($4) | 0;
  _abort();
 }
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 do if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  __THREW__ = 0;
  $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   if (($25 | 0) != -1) break;
   $29 = HEAP32[$0 >> 2] | 0;
   $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(47, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) break;
  }
  $39 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($39 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  }
 } while (0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $29 = 0, $32 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0;
 do if (HEAP32[$1 + ($4 + 24) >> 2] | 0) if (!(HEAP32[$1 + ($4 + 16) >> 2] | 0)) if (HEAP32[$1 + ($4 + 4) >> 2] & 8192) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $16 = HEAP32[$0 >> 2] | 0;
  $21 = HEAP32[$16 + ((HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) + 24) >> 2] | 0;
  __THREW__ = 0;
  $25 = invoke_ii(HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] | 0, $21 | 0) | 0;
  $26 = __THREW__;
  __THREW__ = 0;
  if (!($26 & 1)) {
   if (($25 | 0) != -1) break;
   $29 = HEAP32[$0 >> 2] | 0;
   $32 = HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0;
   __THREW__ = 0;
   invoke_vii(47, $29 + $32 | 0, HEAP32[$29 + ($32 + 16) >> 2] | 1 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (!($37 & 1)) break;
  }
  $39 = ___cxa_find_matching_catch(0) | 0;
  ___cxa_begin_catch($39 | 0) | 0;
  __THREW__ = 0;
  invoke_v(2);
  $41 = __THREW__;
  __THREW__ = 0;
  if ($41 & 1) {
   $43 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($43);
  }
 } while (0);
 return;
}

function __ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 L1 : do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  do if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0) {
    $$0 = 2147483647;
    break L1;
   }
  } else {
   if (($5 | 0) < -1 | ($5 | 0) == -1 & $4 >>> 0 < 2147483648) {
    HEAP32[$__err >> 2] = 4;
    break;
   }
   if (($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 2147483647) {
    HEAP32[$__err >> 2] = 4;
    $$0 = 2147483647;
    break L1;
   } else {
    $$0 = $4;
    break L1;
   }
  } while (0);
  $$0 = -2147483648;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _vsnprintf($s, $n, $fmt, $ap) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $5 = 0, $8 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $b = sp + 112 | 0;
 $f = sp;
 dest = $f;
 src = 4888;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($n + -1 | 0) >>> 0 > 2147483646) if (!$n) {
  $$01 = $b;
  $$02 = 1;
  label = 4;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
 } else {
  $$01 = $s;
  $$02 = $n;
  label = 4;
 }
 if ((label | 0) == 4) {
  $5 = -2 - $$01 | 0;
  $$$02 = $$02 >>> 0 > $5 >>> 0 ? $5 : $$02;
  HEAP32[$f + 48 >> 2] = $$$02;
  $8 = $f + 20 | 0;
  HEAP32[$8 >> 2] = $$01;
  HEAP32[$f + 44 >> 2] = $$01;
  $10 = $$01 + $$$02 | 0;
  $11 = $f + 16 | 0;
  HEAP32[$11 >> 2] = $10;
  HEAP32[$f + 28 >> 2] = $10;
  $13 = _vfprintf($f, $fmt, $ap) | 0;
  if (!$$$02) $$0 = $13; else {
   $15 = HEAP32[$8 >> 2] | 0;
   HEAP8[$15 + ((($15 | 0) == (HEAP32[$11 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   $$0 = $13;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$in = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $19 = 0, $20 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $$in = $3;
 } else $$in = $1;
 $5 = $$in;
 $6 = $this + 8 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $this + 12 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $11 = $7;
 if ($7 >>> 0 >= $9 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$6 >> 2] = $7;
  HEAP32[$8 >> 2] = $9 + -1;
  HEAP32[$this + 16 >> 2] = $5;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 48 >> 2] & 16)) {
  $19 = $__c & 255;
  $20 = $9 + -1 | 0;
  if ($19 << 24 >> 24 == (HEAP8[$20 >> 0] | 0)) {
   $$pre$phi2Z2D = $19;
   $$pre$phiZ2D = $20;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $9 + -1 | 0;
 }
 HEAP32[$6 >> 2] = $11;
 HEAP32[$8 >> 2] = $$pre$phiZ2D;
 HEAP32[$this + 16 >> 2] = $5;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 return $$0 | 0;
}

function __ZNSt3__114__num_put_base12__format_intEPcPKcbj($__fmtp, $__len, $__signd, $__flags) {
 $__fmtp = $__fmtp | 0;
 $__len = $__len | 0;
 $__signd = $__signd | 0;
 $__flags = $__flags | 0;
 var $$0 = 0, $$012 = 0, $$1$lcssa = 0, $$1$ph = 0, $$13 = 0, $10 = 0, $6 = 0, $9 = 0;
 if (!($__flags & 2048)) $$0 = $__fmtp; else {
  HEAP8[$__fmtp >> 0] = 43;
  $$0 = $__fmtp + 1 | 0;
 }
 if (!($__flags & 512)) $$1$ph = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1$ph = $$0 + 1 | 0;
 }
 $6 = HEAP8[$__len >> 0] | 0;
 if (!($6 << 24 >> 24)) $$1$lcssa = $$1$ph; else {
  $$012 = $__len;
  $$13 = $$1$ph;
  $10 = $6;
  while (1) {
   $$012 = $$012 + 1 | 0;
   $9 = $$13 + 1 | 0;
   HEAP8[$$13 >> 0] = $10;
   $10 = HEAP8[$$012 >> 0] | 0;
   if (!($10 << 24 >> 24)) {
    $$1$lcssa = $9;
    break;
   } else $$13 = $9;
  }
 }
 L11 : do switch ($__flags & 74 | 0) {
 case 64:
  {
   HEAP8[$$1$lcssa >> 0] = 111;
   break;
  }
 case 8:
  {
   if (!($__flags & 16384)) {
    HEAP8[$$1$lcssa >> 0] = 120;
    break L11;
   } else {
    HEAP8[$$1$lcssa >> 0] = 88;
    break L11;
   }
   break;
  }
 default:
  if ($__signd) {
   HEAP8[$$1$lcssa >> 0] = 100;
   break L11;
  } else {
   HEAP8[$$1$lcssa >> 0] = 117;
   break L11;
  }
 } while (0);
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $9 = 0;
 if ((1073741807 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $21 = $this + 4 | 0; else $21 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 536870887) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $18 = $12 >>> 0 < 2 ? 2 : $12 + 4 & -4;
 } else $18 = 1073741807;
 $19 = __Znwj($18 << 2) | 0;
 if ($__n_copy) _wmemcpy($19, $21, $__n_copy) | 0;
 $22 = $__old_sz - $__n_del | 0;
 if (($22 | 0) != ($__n_copy | 0)) _wmemcpy($19 + ($__n_add + $__n_copy << 2) | 0, $21 + ($__n_del + $__n_copy << 2) | 0, $22 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 1) __ZdlPv($21);
 HEAP32[$this + 8 >> 2] = $19;
 HEAP32[$this >> 2] = $18 | 1;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 $11 = ($9 & 1) == 0;
 $14 = $6 + 4 | 0;
 $15 = $11 ? $14 : HEAP32[$6 + 8 >> 2] | 0;
 $20 = $15 + (($11 ? ($9 & 255) >>> 1 : HEAP32[$14 >> 2] | 0) << 2) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $21 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $15, $20) | 0;
 STACKTOP = sp;
 return $21 | 0;
}

function __ZN6ObjectD0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $18 = 0, $21 = 0, $22 = 0, $28 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i$i = 0, $__f$01$i$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 3452;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i$i = $5;
   do {
    $__f$01$i$i$i$looptemp = $__f$01$i$i$i;
    $__f$01$i$i$i = HEAP32[$__f$01$i$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$i$looptemp);
   } while (($__f$01$i$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 3192;
 $18 = HEAP32[$this + 36 >> 2] | 0;
 if (!$18) {
  $28 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
  __ZdlPv($this);
  return;
 }
 $21 = $this + 40 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 if (($22 | 0) != ($18 | 0)) HEAP32[$21 >> 2] = $22 + (~(($22 + -4 - $18 | 0) >>> 2) << 2);
 __ZdlPv($18);
 $28 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
 __ZdlPv($this);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__old_cap, $__delta_cap, $__old_sz, $__n_copy, $__n_del, $__n_add) {
 $this = $this | 0;
 $__old_cap = $__old_cap | 0;
 $__delta_cap = $__delta_cap | 0;
 $__old_sz = $__old_sz | 0;
 $__n_copy = $__n_copy | 0;
 $__n_del = $__n_del | 0;
 $__n_add = $__n_add | 0;
 var $10 = 0, $12 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $9 = 0;
 if ((-17 - $__old_cap | 0) >>> 0 < $__delta_cap >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if (!(HEAP8[$this >> 0] & 1)) $20 = $this + 1 | 0; else $20 = HEAP32[$this + 8 >> 2] | 0;
 if ($__old_cap >>> 0 < 2147483623) {
  $9 = $__delta_cap + $__old_cap | 0;
  $10 = $__old_cap << 1;
  $12 = $9 >>> 0 < $10 >>> 0 ? $10 : $9;
  $17 = $12 >>> 0 < 11 ? 11 : $12 + 16 & -16;
 } else $17 = -17;
 $18 = __Znwj($17) | 0;
 if ($__n_copy) _memcpy($18 | 0, $20 | 0, $__n_copy | 0) | 0;
 $21 = $__old_sz - $__n_del | 0;
 if (($21 | 0) != ($__n_copy | 0)) _memcpy($18 + ($__n_add + $__n_copy) | 0, $20 + ($__n_del + $__n_copy) | 0, $21 - $__n_copy | 0) | 0;
 if (($__old_cap | 0) != 10) __ZdlPv($20);
 HEAP32[$this + 8 >> 2] = $18;
 HEAP32[$this >> 2] = $17 | 1;
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $15 = 0, $17 = 0, $23 = 0, $3 = 0, $7 = 0, $9 = 0;
 HEAP32[$this >> 2] = 3816;
 $0 = $this + 64 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1) {
  __THREW__ = 0;
  invoke_ii(5, $this | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $7 = ___cxa_find_matching_catch(0) | 0;
   _fclose($1) | 0;
   ___cxa_begin_catch($7 | 0) | 0;
   __THREW__ = 0;
   invoke_v(2);
   $9 = __THREW__;
   __THREW__ = 0;
   if (!($9 & 1)) break;
   $17 = ___cxa_find_matching_catch(0) | 0;
   __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
   ___clang_call_terminate($17);
  } else {
   if (_fclose($1) | 0) break;
   HEAP32[$0 >> 2] = 0;
   break;
  }
 } while (0);
 if (HEAP8[$this + 96 >> 0] | 0) {
  $15 = HEAP32[$this + 32 >> 2] | 0;
  if ($15) __ZdaPv($15);
 }
 if (!(HEAP8[$this + 97 >> 0] | 0)) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  return;
 }
 $23 = HEAP32[$this + 56 >> 2] | 0;
 if (!$23) {
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  return;
 }
 __ZdaPv($23);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $0) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $28 = 0, $33 = 0, $38 = 0, $43 = 0, $44 = 0, $9 = 0;
 $1 = $this + 64 | 0;
 if (HEAP32[$1 >> 2] | 0) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0)) if (!(___fseeko(HEAP32[$1 >> 2] | 0, HEAP32[$__sp + 8 >> 2] | 0, 0) | 0)) {
  $38 = $__sp;
  $43 = HEAP32[$38 + 4 >> 2] | 0;
  $44 = $this + 72 | 0;
  HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$44 + 4 >> 2] = $43;
  HEAP32[$agg$result >> 2] = HEAP32[$__sp >> 2];
  HEAP32[$agg$result + 4 >> 2] = HEAP32[$__sp + 4 >> 2];
  HEAP32[$agg$result + 8 >> 2] = HEAP32[$__sp + 8 >> 2];
  HEAP32[$agg$result + 12 >> 2] = HEAP32[$__sp + 12 >> 2];
  return;
 } else {
  $28 = $agg$result;
  HEAP32[$28 >> 2] = 0;
  HEAP32[$28 + 4 >> 2] = 0;
  $33 = $agg$result + 8 | 0;
  HEAP32[$33 >> 2] = -1;
  HEAP32[$33 + 4 >> 2] = -1;
  return;
 }
 $9 = $agg$result;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 $14 = $agg$result + 8 | 0;
 HEAP32[$14 >> 2] = -1;
 HEAP32[$14 + 4 >> 2] = -1;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $11 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = $this + 8 | 0;
 $6 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 127]($2) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 $9 = HEAP8[$6 >> 0] | 0;
 $11 = ($9 & 1) == 0;
 $15 = $11 ? $6 + 1 | 0 : HEAP32[$6 + 8 >> 2] | 0;
 $21 = $15 + ($11 ? ($9 & 255) >>> 1 : HEAP32[$6 + 4 >> 2] | 0) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $22 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, $15, $21) | 0;
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 var $16 = 0, $17 = 0, $23 = 0, $25 = 0, $5 = 0, $6 = 0;
 HEAP8[$info + 53 >> 0] = 1;
 do if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
  HEAP8[$info + 52 >> 0] = 1;
  $5 = $info + 16 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (!$6) {
   HEAP32[$5 >> 2] = $dst_ptr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   if (!(($path_below | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  if (($6 | 0) != ($dst_ptr | 0)) {
   $25 = $info + 36 | 0;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $16 = $info + 24 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == 2) {
   HEAP32[$16 >> 2] = $path_below;
   $23 = $path_below;
  } else $23 = $17;
  if (($23 | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0) HEAP8[$info + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN6ObjectD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $18 = 0, $21 = 0, $22 = 0, $28 = 0, $5 = 0, $7 = 0, $9 = 0, $__f$01$i$i = 0, $__f$01$i$i$looptemp = 0;
 HEAP32[$this >> 2] = 3452;
 $0 = $this + 48 | 0;
 $1 = $this + 56 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $5 = HEAP32[$this + 52 >> 2] | 0;
  $7 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  $9 = HEAP32[$5 >> 2] | 0;
  HEAP32[$9 + 4 >> 2] = HEAP32[$7 >> 2];
  HEAP32[HEAP32[$7 >> 2] >> 2] = $9;
  HEAP32[$1 >> 2] = 0;
  if (($5 | 0) != ($0 | 0)) {
   $__f$01$i$i = $5;
   do {
    $__f$01$i$i$looptemp = $__f$01$i$i;
    $__f$01$i$i = HEAP32[$__f$01$i$i + 4 >> 2] | 0;
    __ZdlPv($__f$01$i$i$looptemp);
   } while (($__f$01$i$i | 0) != ($0 | 0));
  }
 }
 HEAP32[$this >> 2] = 3192;
 $18 = HEAP32[$this + 36 >> 2] | 0;
 if (!$18) {
  $28 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
  return;
 }
 $21 = $this + 40 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 if (($22 | 0) != ($18 | 0)) HEAP32[$21 >> 2] = $22 + (~(($22 + -4 - $18 | 0) >>> 2) << 2);
 __ZdlPv($18);
 $28 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($28);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 11156) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $3);
  STACKTOP = sp;
  return HEAP32[$__b >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 11156) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $3);
  STACKTOP = sp;
  return HEAP32[$__b >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 11164) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 16 | 0, $__b, $$byval_copy, $__err, $3);
  STACKTOP = sp;
  return HEAP32[$__b >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 11164) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 24 | 0, $__b, $$byval_copy, $__err, $3);
  STACKTOP = sp;
  return HEAP32[$__b >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 11156) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $3);
  STACKTOP = sp;
  return HEAP32[$__b >> 2] | 0;
 }
 return 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 $2 = __ZNKSt3__18ios_base6getlocEv($__iob) | 0;
 HEAP32[$0 >> 2] = $2;
 __THREW__ = 0;
 $3 = invoke_iii(22, $0 | 0, 11164) | 0;
 $4 = __THREW__;
 __THREW__ = 0;
 if ($4 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  ___resumeException($9 | 0);
 } else {
  __ZNSt3__114__shared_count16__release_sharedEv($2) | 0;
  HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__tm + 20 | 0, $__b, $$byval_copy, $__err, $3);
  STACKTOP = sp;
  return HEAP32[$__b >> 2] | 0;
 }
 return 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 1;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 4 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP32[$$pn + ($__sz$0 << 2) >> 2] = $__c;
 HEAP32[$$pn + ($__p$0$sum$pre$phiZZZ2D << 2) >> 2] = 0;
 return;
}

function ___cxx_global_array_dtor54($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12312);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12300);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12288);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12276);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12264);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12252);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12240);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12228);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12216);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12204);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12192);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12180);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12168);
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev(12156);
 return;
}

function ___cxx_global_array_dtor($0) {
 $0 = $0 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12140);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12128);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12116);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12104);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12092);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12080);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12068);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12056);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12044);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12032);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12020);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(12008);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11996);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev(11984);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$pn = 0, $0 = 0, $19 = 0, $2 = 0, $20 = 0, $__cap$0 = 0, $__p$0$sum$pre$phiZZZ2D = 0, $__sz$0 = 0, label = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) != 0;
 if ($2) {
  $__cap$0 = (HEAP32[$this >> 2] & -2) + -1 | 0;
  $__sz$0 = HEAP32[$this + 4 >> 2] | 0;
 } else {
  $__cap$0 = 10;
  $__sz$0 = ($0 & 255) >>> 1;
 }
 if (($__sz$0 | 0) == ($__cap$0 | 0)) {
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $__cap$0, 1, $__cap$0, $__cap$0, 0, 0);
  if (!(HEAP8[$this >> 0] & 1)) label = 7; else label = 8;
 } else if ($2) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$this >> 0] = ($__sz$0 << 1) + 2;
  $$pn = $this + 1 | 0;
  $__p$0$sum$pre$phiZZZ2D = $__sz$0 + 1 | 0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$this + 8 >> 2] | 0;
  $20 = $__sz$0 + 1 | 0;
  HEAP32[$this + 4 >> 2] = $20;
  $$pn = $19;
  $__p$0$sum$pre$phiZZZ2D = $20;
 }
 HEAP8[$$pn + $__sz$0 >> 0] = $__c;
 HEAP8[$$pn + $__p$0$sum$pre$phiZZZ2D >> 0] = 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $6 = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else if (($this | 0) == (HEAP32[$info >> 2] | 0)) {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    HEAP32[$14 >> 2] = $current_ptr;
    $20 = $info + 40 | 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) HEAP8[$info + 54 >> 0] = 1;
    HEAP32[$info + 44 >> 2] = 4;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 187;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $27 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $27 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $21 = __THREW__;
   __THREW__ = 0;
   if ($21 & 1) {
    $23 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($23);
   } else {
    $27 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 199;
 HEAP32[$__n >> 2] = $27 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function __ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $13 = 0, $15 = 0, $2 = 0, $21 = 0, $23 = 0, $27 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 187;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $13 = (HEAP32[$__n >> 2] | 0) - $6 >> 2;
 $15 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$15) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $15;
  $27 = $15;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $15;
  if (!$$pr) $27 = $15; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $21 = __THREW__;
   __THREW__ = 0;
   if ($21 & 1) {
    $23 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($23);
   } else {
    $27 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 199;
 HEAP32[$__n >> 2] = $27 + ($13 << 2);
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + ($$ >>> 2 << 2);
 return;
}

function _fmt_u($0, $1, $s) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $s = $s | 0;
 var $$0$lcssa = 0, $$01$lcssa$off0 = 0, $$05 = 0, $$1$lcssa = 0, $$12 = 0, $$lcssa20 = 0, $13 = 0, $14 = 0, $25 = 0, $28 = 0, $7 = 0, $8 = 0, $9 = 0, $y$03 = 0;
 if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 4294967295) {
  $$05 = $s;
  $7 = $0;
  $8 = $1;
  while (1) {
   $9 = ___uremdi3($7 | 0, $8 | 0, 10, 0) | 0;
   $13 = $$05 + -1 | 0;
   HEAP8[$13 >> 0] = $9 | 48;
   $14 = ___udivdi3($7 | 0, $8 | 0, 10, 0) | 0;
   if ($8 >>> 0 > 9 | ($8 | 0) == 9 & $7 >>> 0 > 4294967295) {
    $$05 = $13;
    $7 = $14;
    $8 = tempRet0;
   } else {
    $$lcssa20 = $13;
    $28 = $14;
    break;
   }
  }
  $$0$lcssa = $$lcssa20;
  $$01$lcssa$off0 = $28;
 } else {
  $$0$lcssa = $s;
  $$01$lcssa$off0 = $0;
 }
 if (!$$01$lcssa$off0) $$1$lcssa = $$0$lcssa; else {
  $$12 = $$0$lcssa;
  $y$03 = $$01$lcssa$off0;
  while (1) {
   $25 = $$12 + -1 | 0;
   HEAP8[$25 >> 0] = ($y$03 >>> 0) % 10 | 0 | 48;
   if ($y$03 >>> 0 < 10) {
    $$1$lcssa = $25;
    break;
   } else {
    $$12 = $25;
    $y$03 = ($y$03 >>> 0) / 10 | 0;
   }
  }
 }
 return $$1$lcssa | 0;
}

function __ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($__b, $__n, $__e) {
 $__b = $__b | 0;
 $__n = $__n | 0;
 $__e = $__e | 0;
 var $$ = 0, $$pr = 0, $0 = 0, $12 = 0, $14 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0;
 $0 = $__b + 4 | 0;
 $2 = (HEAP32[$0 >> 2] | 0) != 187;
 $4 = HEAP32[$__b >> 2] | 0;
 $6 = $4;
 $7 = (HEAP32[$__e >> 2] | 0) - $6 | 0;
 $$ = $7 >>> 0 < 2147483647 ? $7 << 1 : -1;
 $12 = (HEAP32[$__n >> 2] | 0) - $6 | 0;
 $14 = _realloc($2 ? $4 : 0, $$) | 0;
 if (!$14) __ZSt17__throw_bad_allocv();
 do if ($2) {
  HEAP32[$__b >> 2] = $14;
  $25 = $14;
 } else {
  $$pr = HEAP32[$__b >> 2] | 0;
  HEAP32[$__b >> 2] = $14;
  if (!$$pr) $25 = $14; else {
   __THREW__ = 0;
   invoke_vi(HEAP32[$0 >> 2] | 0, $$pr | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   if ($20 & 1) {
    $22 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($22);
   } else {
    $25 = HEAP32[$__b >> 2] | 0;
    break;
   }
  }
 } while (0);
 HEAP32[$0 >> 2] = 199;
 HEAP32[$__n >> 2] = $25 + $12;
 HEAP32[$__e >> 2] = (HEAP32[$__b >> 2] | 0) + $$;
 return;
}

function _fflush($f) {
 $f = $f | 0;
 var $$0 = 0, $$012 = 0, $$014 = 0, $24 = 0, $27 = 0, $6 = 0, $phitmp = 0, $r$0$lcssa = 0, $r$03 = 0, $r$1 = 0;
 do if (!$f) {
  if (!(HEAP32[1083] | 0)) $27 = 0; else $27 = _fflush(HEAP32[1083] | 0) | 0;
  ___lock(4100);
  $$012 = HEAP32[1024] | 0;
  if (!$$012) $r$0$lcssa = $27; else {
   $$014 = $$012;
   $r$03 = $27;
   while (1) {
    if ((HEAP32[$$014 + 76 >> 2] | 0) > -1) $24 = ___lockfile($$014) | 0; else $24 = 0;
    if ((HEAP32[$$014 + 20 >> 2] | 0) >>> 0 > (HEAP32[$$014 + 28 >> 2] | 0) >>> 0) $r$1 = ___fflush_unlocked($$014) | 0 | $r$03; else $r$1 = $r$03;
    if ($24) ___unlockfile($$014);
    $$014 = HEAP32[$$014 + 56 >> 2] | 0;
    if (!$$014) {
     $r$0$lcssa = $r$1;
     break;
    } else $r$03 = $r$1;
   }
  }
  ___unlock(4100);
  $$0 = $r$0$lcssa;
 } else {
  if ((HEAP32[$f + 76 >> 2] | 0) <= -1) {
   $$0 = ___fflush_unlocked($f) | 0;
   break;
  }
  $phitmp = (___lockfile($f) | 0) == 0;
  $6 = ___fflush_unlocked($f) | 0;
  if ($phitmp) $$0 = $6; else {
   ___unlockfile($f);
   $$0 = $6;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $1 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $18 = 0;
  $19 = 0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  $4 = _strtoll_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $5 = tempRet0;
  $6 = HEAP32[$1 >> 2] | 0;
  if (!$6) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $18 = 0;
   $19 = 0;
   break;
  }
  if (($6 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $15 = ($5 | 0) > 0 | ($5 | 0) == 0 & $4 >>> 0 > 0;
   tempRet0 = $15 ? 2147483647 : -2147483648;
   STACKTOP = sp;
   return ($15 ? -1 : 0) | 0;
  } else {
   $18 = $5;
   $19 = $4;
  }
 } while (0);
 tempRet0 = $18;
 STACKTOP = sp;
 return $19 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$04 = 0, $0 = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $3 = 0, $__p$0$ph = 0, $__p$03 = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 $3 = $2 >> 2;
 if ($3 >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($3 >>> 0 < 2) {
  HEAP8[$this >> 0] = $2 >>> 1;
  $__p$0$ph = $this + 4 | 0;
 } else {
  $10 = $3 + 4 & -4;
  $12 = __Znwj($10 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $12;
  HEAP32[$this >> 2] = $10 | 1;
  HEAP32[$this + 4 >> 2] = $3;
  $__p$0$ph = $12;
 }
 $18 = ($__last - $0 | 0) >>> 2;
 if (($__first | 0) != ($__last | 0)) {
  $$04 = $__first;
  $__p$03 = $__p$0$ph;
  while (1) {
   HEAP32[$__p$03 >> 2] = HEAP32[$$04 >> 2];
   $$04 = $$04 + 4 | 0;
   if (($$04 | 0) == ($__last | 0)) break; else $__p$03 = $__p$03 + 4 | 0;
  }
 }
 HEAP32[$__p$0$ph + ($18 << 2) >> 2] = 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $$0 = 0, $$1 = 0, $2 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 if (($this | 0) == ($thrown_type | 0)) $$1 = 1; else if (!$thrown_type) $$1 = 0; else {
  $2 = ___dynamic_cast($thrown_type, 672, 688, 0) | 0;
  if (!$2) $$1 = 0; else {
   dest = $info;
   stop = dest + 56 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$info >> 2] = $2;
   HEAP32[$info + 8 >> 2] = $this;
   HEAP32[$info + 12 >> 2] = -1;
   HEAP32[$info + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 31]($2, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
   if ((HEAP32[$info + 24 >> 2] | 0) == 1) {
    HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$1 = $$0;
  }
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $5 = HEAP32[$this + 12 >> 2] | 0;
  $6 = $this + 16 + ($5 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this + 16 | 0, $info, $adjustedPtr, $path_below);
  if (($5 | 0) > 1) {
   $9 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0, $info, $adjustedPtr, $path_below);
    if (HEAP8[$9 >> 0] | 0) break L1;
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $6 >>> 0);
  }
 } while (0);
 return;
}

function __ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 65535 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6 & 65535;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _strlen($s) {
 $s = $s | 0;
 var $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $0 = 0, $18 = 0, $21 = 0, $5 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0;
 $0 = $s;
 L1 : do if (!($0 & 3)) {
  $$01$lcssa = $s;
  label = 4;
 } else {
  $$014 = $s;
  $21 = $0;
  while (1) {
   if (!(HEAP8[$$014 >> 0] | 0)) {
    $$pn = $21;
    break L1;
   }
   $5 = $$014 + 1 | 0;
   $21 = $5;
   if (!($21 & 3)) {
    $$01$lcssa = $5;
    label = 4;
    break;
   } else $$014 = $5;
  }
 } while (0);
 if ((label | 0) == 4) {
  $w$0 = $$01$lcssa;
  while (1) {
   $9 = HEAP32[$w$0 >> 2] | 0;
   if (!(($9 & -2139062144 ^ -2139062144) & $9 + -16843009)) $w$0 = $w$0 + 4 | 0; else {
    $$lcssa20 = $9;
    $w$0$lcssa = $w$0;
    break;
   }
  }
  if (!(($$lcssa20 & 255) << 24 >> 24)) $$1$lcssa = $w$0$lcssa; else {
   $$pn15 = $w$0$lcssa;
   while (1) {
    $18 = $$pn15 + 1 | 0;
    if (!(HEAP8[$18 >> 0] | 0)) {
     $$1$lcssa = $18;
     break;
    } else $$pn15 = $18;
   }
  }
  $$pn = $$1$lcssa;
 }
 return $$pn - $0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $7 = tempRet0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0;
   break;
  }
  if ($7 >>> 0 > 0 | ($7 | 0) == 0 & $6 >>> 0 > 4294967295 | ($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $6;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $2 = 0, $5 = 0, $7 = 0, $9 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l) | 0;
 __THREW__ = 0;
 $1 = invoke_iiii(48, $__s | 0, $__format | 0, $__va | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $9 = ___cxa_find_matching_catch() | 0;
  if ($0) {
   __THREW__ = 0;
   invoke_ii(73, $0 | 0) | 0;
   $12 = __THREW__;
   __THREW__ = 0;
   if ($12 & 1) {
    $14 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($14);
   }
  }
  ___resumeException($9 | 0);
 } else {
  if ($0) {
   __THREW__ = 0;
   invoke_ii(73, $0 | 0) | 0;
   $5 = __THREW__;
   __THREW__ = 0;
   if ($5 & 1) {
    $7 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($7);
   }
  }
  STACKTOP = sp;
  return $1 | 0;
 }
 return 0;
}

function __ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji($__a, $__a_end, $__err, $__base) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 $__base = $__base | 0;
 var $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $13 = 0;
  $14 = 0;
 } else {
  if ((HEAP8[$__a >> 0] | 0) == 45) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  $3 = ___errno_location() | 0;
  $4 = HEAP32[$3 >> 2] | 0;
  HEAP32[$3 >> 2] = 0;
  $6 = _strtoull_l($__a, $__p2, $__base, __ZNSt3__16__clocEv() | 0) | 0;
  $8 = HEAP32[$3 >> 2] | 0;
  if (!$8) HEAP32[$3 >> 2] = $4;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $13 = 0;
   $14 = 0;
   break;
  }
  if (($8 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $13 = -1;
   $14 = -1;
  } else {
   $13 = tempRet0;
   $14 = $6;
  }
 } while (0);
 tempRet0 = $13;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($this, $__first, $__last) {
 $this = $this | 0;
 $__first = $__first | 0;
 $__last = $__last | 0;
 var $$04 = 0, $0 = 0, $10 = 0, $15 = 0, $2 = 0, $9 = 0, $__p$0$ph = 0, $__p$03 = 0;
 $0 = $__first;
 $2 = $__last - $0 | 0;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($2 >>> 0 < 11) {
  HEAP8[$this >> 0] = $2 << 1;
  $__p$0$ph = $this + 1 | 0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __Znwj($9) | 0;
  HEAP32[$this + 8 >> 2] = $10;
  HEAP32[$this >> 2] = $9 | 1;
  HEAP32[$this + 4 >> 2] = $2;
  $__p$0$ph = $10;
 }
 $15 = $__last - $0 | 0;
 if (($__first | 0) != ($__last | 0)) {
  $$04 = $__first;
  $__p$03 = $__p$0$ph;
  while (1) {
   HEAP8[$__p$03 >> 0] = HEAP8[$$04 >> 0] | 0;
   $$04 = $$04 + 1 | 0;
   if (($$04 | 0) == ($__last | 0)) break; else $__p$03 = $__p$03 + 1 | 0;
  }
 }
 HEAP8[$__p$0$ph + $15 >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $1 = 0, $15 = 0, $16 = 0, $21 = 0, $27 = 0, $28 = 0, $4 = 0, $8 = 0;
 if ($__n) {
  $1 = HEAP8[$this >> 0] | 0;
  if (!($1 & 1)) {
   $15 = 10;
   $8 = $1;
  } else {
   $4 = HEAP32[$this >> 2] | 0;
   $15 = ($4 & -2) + -1 | 0;
   $8 = $4 & 255;
  }
  if (!($8 & 1)) $16 = ($8 & 255) >>> 1; else $16 = HEAP32[$this + 4 >> 2] | 0;
  if (($15 - $16 | 0) >>> 0 < $__n >>> 0) {
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEjjjjjj($this, $15, $__n - $15 + $16 | 0, $16, $16, 0, 0);
   $21 = HEAP8[$this >> 0] | 0;
  } else $21 = $8;
  if (!($21 & 1)) $27 = $this + 1 | 0; else $27 = HEAP32[$this + 8 >> 2] | 0;
  _memset($27 + $16 | 0, $__c | 0, $__n | 0) | 0;
  $28 = $16 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $28 << 1; else HEAP32[$this + 4 >> 2] = $28;
  HEAP8[$27 + $28 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES8_EEPKS8_EENS_19__map_value_compareIS9_SC_NS_4lessIS9_EELb1EEENS6_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__111__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, $16 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 9448;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 __THREW__ = 0;
 $5 = invoke_iii(22, $1 | 0, 11232) | 0;
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($16 | 0);
 } else {
  __ZNSt3__16localeD2Ev($1);
  HEAP32[$this + 36 >> 2] = $5;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($5) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, $16 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 9576;
 HEAP32[$this + 32 >> 2] = $__fp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 __THREW__ = 0;
 $5 = invoke_iii(22, $1 | 0, 11224) | 0;
 $6 = __THREW__;
 __THREW__ = 0;
 if ($6 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($16 | 0);
 } else {
  __ZNSt3__16localeD2Ev($1);
  HEAP32[$this + 36 >> 2] = $5;
  HEAP32[$this + 40 >> 2] = $__st;
  HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($5) | 0) & 1;
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__111__stdoutbufIwE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 L1 : while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf, 1, $13, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   $$0 = -1;
   break;
  }
  switch ($10 | 0) {
  case 1:
   break;
  case 2:
   {
    $$0 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE4syncEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $__extbe = 0, $__extbuf = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__extbuf = sp + 8 | 0;
 $__extbe = sp;
 $0 = $this + 36 | 0;
 $1 = $this + 40 | 0;
 $2 = $__extbuf + 8 | 0;
 $3 = $__extbuf;
 $4 = $this + 32 | 0;
 L1 : while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  $10 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] & 31]($5, HEAP32[$1 >> 2] | 0, $__extbuf, $2, $__extbe) | 0;
  $13 = (HEAP32[$__extbe >> 2] | 0) - $3 | 0;
  if ((_fwrite($__extbuf, 1, $13, HEAP32[$4 >> 2] | 0) | 0) != ($13 | 0)) {
   $$0 = -1;
   break;
  }
  switch ($10 | 0) {
  case 1:
   break;
  case 2:
   {
    $$0 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$0 = ((_fflush(HEAP32[$4 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $7 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $7 = 10;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $7 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($7 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $7, $__n - $7 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 1 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _memmove($14 | 0, $__s | 0, $__n | 0) | 0;
  HEAP8[$14 + $__n >> 0] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$01 = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $3 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$01 = $__s;
  $__i$02 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $3 + 1;
    $storemerge = HEAP8[$3 >> 0] | 0;
   } else {
    $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
    if (($11 | 0) == -1) {
     $__i$0$lcssa = $__i$02;
     break L1;
    }
    $storemerge = $11 & 255;
   }
   HEAP8[$$01 >> 0] = $storemerge;
   $14 = $__i$02 + 1 | 0;
   if (($14 | 0) < ($__n | 0)) {
    $$01 = $$01 + 1 | 0;
    $__i$02 = $14;
   } else {
    $__i$0$lcssa = $14;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $10 = 0, $14 = 0, $27 = 0, $3 = 0, $7 = 0, $9 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $7 = 1;
  $9 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $7 = ($3 & -2) + -1 | 0;
  $9 = $3 & 255;
 }
 $10 = ($9 & 1) == 0;
 do if ($7 >>> 0 < $__n >>> 0) {
  if ($10) $27 = ($9 & 255) >>> 1; else $27 = HEAP32[$this + 4 >> 2] | 0;
  __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEjjjjjjPKw($this, $7, $__n - $7 | 0, $27, 0, $27, $__n, $__s);
 } else {
  if ($10) $14 = $this + 4 | 0; else $14 = HEAP32[$this + 8 >> 2] | 0;
  _wmemmove($14, $__s, $__n) | 0;
  HEAP32[$14 + ($__n << 2) >> 2] = 0;
  if (!(HEAP8[$this >> 0] & 1)) {
   HEAP8[$this >> 0] = $__n << 1;
   break;
  } else {
   HEAP32[$this + 4 >> 2] = $__n;
   break;
  }
 } while (0);
 return $this | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$01 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $3 = 0, $__i$0$lcssa = 0, $__i$02 = 0, $storemerge = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 16 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$01 = $__s;
  $__i$02 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $3 + 4;
    $storemerge = HEAP32[$3 >> 2] | 0;
   } else {
    $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 40 >> 2] & 127]($this) | 0;
    if (($11 | 0) == -1) {
     $__i$0$lcssa = $__i$02;
     break L1;
    } else $storemerge = $11;
   }
   HEAP32[$$01 >> 2] = $storemerge;
   $13 = $__i$02 + 1 | 0;
   if (($13 | 0) < ($__n | 0)) {
    $$01 = $$01 + 4 | 0;
    $__i$02 = $13;
   } else {
    $__i$0$lcssa = $13;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $0 = 0, $14 = 0, $15 = 0, $24 = 0, $25 = 0, $3 = 0, $7 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $14 = 10;
  $7 = $0;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  $14 = ($3 & -2) + -1 | 0;
  $7 = $3 & 255;
 }
 if (!($7 & 1)) $15 = ($7 & 255) >>> 1; else $15 = HEAP32[$this + 4 >> 2] | 0;
 if (($14 - $15 | 0) >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEjjjjjjPKc($this, $14, $__n - $14 + $15 | 0, $15, $15, 0, $__n, $__s); else if ($__n) {
  if (!($7 & 1)) $24 = $this + 1 | 0; else $24 = HEAP32[$this + 8 >> 2] | 0;
  _memcpy($24 + $15 | 0, $__s | 0, $__n | 0) | 0;
  $25 = $15 + $__n | 0;
  if (!(HEAP8[$this >> 0] & 1)) HEAP8[$this >> 0] = $25 << 1; else HEAP32[$this + 4 >> 2] = $25;
  HEAP8[$24 + $25 >> 0] = 0;
 }
 return $this | 0;
}

function __ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $2 = 0, $3 = 0, $6 = 0, label = 0;
 L1 : do if (($__lo2 | 0) == ($__hi2 | 0)) {
  $$02$lcssa = $__lo1;
  label = 6;
 } else {
  $$018 = $__lo2;
  $$027 = $__lo1;
  while (1) {
   if (($$027 | 0) == ($__hi1 | 0)) {
    $$0 = -1;
    break L1;
   }
   $2 = HEAP8[$$027 >> 0] | 0;
   $3 = HEAP8[$$018 >> 0] | 0;
   if ($2 << 24 >> 24 < $3 << 24 >> 24) {
    $$0 = -1;
    break L1;
   }
   if ($3 << 24 >> 24 < $2 << 24 >> 24) {
    $$0 = 1;
    break L1;
   }
   $6 = $$027 + 1 | 0;
   $$018 = $$018 + 1 | 0;
   if (($$018 | 0) == ($__hi2 | 0)) {
    $$02$lcssa = $6;
    label = 6;
    break;
   } else $$027 = $6;
  }
 } while (0);
 if ((label | 0) == 6) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1;
 return $$0 | 0;
}

function _pad($f, $c, $w, $l, $fl) {
 $f = $f | 0;
 $c = $c | 0;
 $w = $w | 0;
 $l = $l | 0;
 $fl = $fl | 0;
 var $$0$lcssa6 = 0, $$02 = 0, $10 = 0, $14 = 0, $17 = 0, $18 = 0, $3 = 0, $7 = 0, $9 = 0, $pad = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $pad = sp;
 do if (($w | 0) > ($l | 0) & ($fl & 73728 | 0) == 0) {
  $3 = $w - $l | 0;
  _memset($pad | 0, $c | 0, ($3 >>> 0 > 256 ? 256 : $3) | 0) | 0;
  $7 = HEAP32[$f >> 2] | 0;
  $9 = ($7 & 32 | 0) == 0;
  if ($3 >>> 0 > 255) {
   $10 = $w - $l | 0;
   $$02 = $3;
   $17 = $7;
   $18 = $9;
   while (1) {
    if ($18) {
     ___fwritex($pad, 256, $f) | 0;
     $14 = HEAP32[$f >> 2] | 0;
    } else $14 = $17;
    $$02 = $$02 + -256 | 0;
    $18 = ($14 & 32 | 0) == 0;
    if ($$02 >>> 0 <= 255) break; else $17 = $14;
   }
   if ($18) $$0$lcssa6 = $10 & 255; else break;
  } else if ($9) $$0$lcssa6 = $3; else break;
  ___fwritex($pad, $$0$lcssa6, $f) | 0;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 28 | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $11 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $5 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $11 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $5, $5 + 288 | 0, $__ct, $__err, 0) | 0) - $5 | 0;
 if (($11 | 0) < 288) HEAP32[$__m >> 2] = (($11 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_($this, $__lo1, $__hi1, $__lo2, $__hi2) {
 $this = $this | 0;
 $__lo1 = $__lo1 | 0;
 $__hi1 = $__hi1 | 0;
 $__lo2 = $__lo2 | 0;
 $__hi2 = $__hi2 | 0;
 var $$0 = 0, $$018 = 0, $$02$lcssa = 0, $$027 = 0, $2 = 0, $3 = 0, $6 = 0, label = 0;
 L1 : do if (($__lo2 | 0) == ($__hi2 | 0)) {
  $$02$lcssa = $__lo1;
  label = 6;
 } else {
  $$018 = $__lo2;
  $$027 = $__lo1;
  while (1) {
   if (($$027 | 0) == ($__hi1 | 0)) {
    $$0 = -1;
    break L1;
   }
   $2 = HEAP32[$$027 >> 2] | 0;
   $3 = HEAP32[$$018 >> 2] | 0;
   if (($2 | 0) < ($3 | 0)) {
    $$0 = -1;
    break L1;
   }
   if (($3 | 0) < ($2 | 0)) {
    $$0 = 1;
    break L1;
   }
   $6 = $$027 + 4 | 0;
   $$018 = $$018 + 4 | 0;
   if (($$018 | 0) == ($__hi2 | 0)) {
    $$02$lcssa = $6;
    label = 6;
    break;
   } else $$027 = $6;
  }
 } while (0);
 if ((label | 0) == 6) $$0 = ($$02$lcssa | 0) != ($__hi1 | 0) & 1;
 return $$0 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $1 = 0, $10 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 $1 = $this + 8 | 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$1 >> 2] >> 2] & 127]($1) | 0;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $10 = (__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($__b, $$byval_copy, $4, $4 + 168 | 0, $__ct, $__err, 0) | 0) - $4 | 0;
 if (($10 | 0) < 168) HEAP32[$__w >> 2] = (($10 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE7__am_pmEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $18 = 0, $8 = 0;
 do if (!(HEAP8[2544] | 0)) if (___cxa_guard_acquire(2544) | 0) {
  if (!(HEAP8[2552] | 0)) if (___cxa_guard_acquire(2552) | 0) {
   $8 = 14064;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 14352);
   ___cxa_atexit(196, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2552);
  }
  __THREW__ = 0;
  invoke_iii(37, 14064, 14352) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(37, 14076, 14364) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    HEAP32[3594] = 14064;
    ___cxa_guard_release(2544);
    break;
   }
  }
  $18 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2544);
  ___resumeException($18 | 0);
 } while (0);
 return HEAP32[3594] | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE7__am_pmEv($this) {
 $this = $this | 0;
 var $13 = 0, $15 = 0, $18 = 0, $8 = 0;
 do if (!(HEAP8[2528] | 0)) if (___cxa_guard_acquire(2528) | 0) {
  if (!(HEAP8[2536] | 0)) if (___cxa_guard_acquire(2536) | 0) {
   $8 = 13772;
   do {
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    $8 = $8 + 12 | 0;
   } while (($8 | 0) != 14060);
   ___cxa_atexit(195, 0, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2536);
  }
  __THREW__ = 0;
  invoke_iii(19, 13772, 63200) | 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (!($13 & 1)) {
   __THREW__ = 0;
   invoke_iii(19, 13784, 63203) | 0;
   $15 = __THREW__;
   __THREW__ = 0;
   if (!($15 & 1)) {
    HEAP32[3515] = 13772;
    ___cxa_guard_release(2528);
    break;
   }
  }
  $18 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2528);
  ___resumeException($18 | 0);
 } while (0);
 return HEAP32[3515] | 0;
}

function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $rem = __stackBase__ | 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 ___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, $rem) | 0;
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0;
 $10$1 = tempRet0;
 STACKTOP = __stackBase__;
 return (tempRet0 = $10$1, $10$0) | 0;
}

function _fputc($c, $f) {
 $c = $c | 0;
 $f = $f | 0;
 var $$0 = 0, $10 = 0, $22 = 0, $23 = 0, $31 = 0, $9 = 0, label = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($f) | 0)) label = 3; else {
  if ((HEAP8[$f + 75 >> 0] | 0) == ($c | 0)) label = 10; else {
   $22 = $f + 20 | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   if ($23 >>> 0 < (HEAP32[$f + 16 >> 2] | 0) >>> 0) {
    HEAP32[$22 >> 2] = $23 + 1;
    HEAP8[$23 >> 0] = $c;
    $31 = $c & 255;
   } else label = 10;
  }
  if ((label | 0) == 10) $31 = ___overflow($f, $c) | 0;
  ___unlockfile($f);
  $$0 = $31;
 }
 do if ((label | 0) == 3) {
  if ((HEAP8[$f + 75 >> 0] | 0) != ($c | 0)) {
   $9 = $f + 20 | 0;
   $10 = HEAP32[$9 >> 2] | 0;
   if ($10 >>> 0 < (HEAP32[$f + 16 >> 2] | 0) >>> 0) {
    HEAP32[$9 >> 2] = $10 + 1;
    HEAP8[$10 >> 0] = $c;
    $$0 = $c & 255;
    break;
   }
  }
  $$0 = ___overflow($f, $c) | 0;
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$02 = 0, $0 = 0, $1 = 0, $15 = 0, $3 = 0, $6 = 0, $__i$0$lcssa = 0, $__i$01 = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$02 = $__s;
  $__i$01 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    $6 = HEAP32[$$02 >> 2] | 0;
    HEAP32[$0 >> 2] = $3 + 4;
    HEAP32[$3 >> 2] = $6;
   } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$02 >> 2] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$01;
    break L1;
   }
   $15 = $__i$01 + 1 | 0;
   if (($15 | 0) < ($__n | 0)) {
    $$02 = $$02 + 4 | 0;
    $__i$01 = $15;
   } else {
    $__i$0$lcssa = $15;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$02 = 0, $0 = 0, $1 = 0, $16 = 0, $3 = 0, $6 = 0, $__i$0$lcssa = 0, $__i$01 = 0;
 $0 = $this + 24 | 0;
 $1 = $this + 28 | 0;
 L1 : do if (($__n | 0) > 0) {
  $$02 = $__s;
  $__i$01 = 0;
  while (1) {
   $3 = HEAP32[$0 >> 2] | 0;
   if ($3 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    $6 = HEAP8[$$02 >> 0] | 0;
    HEAP32[$0 >> 2] = $3 + 1;
    HEAP8[$3 >> 0] = $6;
   } else if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$02 >> 0] | 0) | 0) == -1) {
    $__i$0$lcssa = $__i$01;
    break L1;
   }
   $16 = $__i$01 + 1 | 0;
   if (($16 | 0) < ($__n | 0)) {
    $$02 = $$02 + 1 | 0;
    $__i$01 = $16;
   } else {
    $__i$0$lcssa = $16;
    break;
   }
  }
 } else $__i$0$lcssa = 0; while (0);
 return $__i$0$lcssa | 0;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj($this, $__pos1, $__n1, $__s, $__n2) {
 $this = $this | 0;
 $__pos1 = $__pos1 | 0;
 $__n1 = $__n1 | 0;
 $__s = $__s | 0;
 $__n2 = $__n2 | 0;
 var $0 = 0, $10 = 0, $12 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $8 = 0, $__r$0 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $8 = ($0 & 255) >>> 1; else $8 = HEAP32[$this + 4 >> 2] | 0;
 if (($__n2 | 0) == -1 | $8 >>> 0 < $__pos1 >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this);
 $10 = $8 - $__pos1 | 0;
 $12 = $10 >>> 0 < $__n1 >>> 0 ? $10 : $__n1;
 if ($2) $17 = $this + 1 | 0; else $17 = HEAP32[$this + 8 >> 2] | 0;
 $18 = $12 >>> 0 > $__n2 >>> 0;
 $20 = _memcmp($17 + $__pos1 | 0, $__s, $18 ? $__n2 : $12) | 0;
 if (!$20) if ($12 >>> 0 < $__n2 >>> 0) $__r$0 = -1; else return $18 & 1 | 0; else $__r$0 = $20;
 return $__r$0 | 0;
}

function _scalbn($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $$0 = 0, $1 = 0.0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $5 = 0, $8 = 0.0, $9 = 0, $y$0 = 0.0;
 if (($n | 0) > 1023) {
  $1 = $x * 8988465674311579538646525.0e283;
  $2 = $n + -1023 | 0;
  if (($2 | 0) > 1023) {
   $5 = $n + -2046 | 0;
   $$0 = ($5 | 0) > 1023 ? 1023 : $5;
   $y$0 = $1 * 8988465674311579538646525.0e283;
  } else {
   $$0 = $2;
   $y$0 = $1;
  }
 } else if (($n | 0) < -1022) {
  $8 = $x * 2.2250738585072014e-308;
  $9 = $n + 1022 | 0;
  if (($9 | 0) < -1022) {
   $12 = $n + 2044 | 0;
   $$0 = ($12 | 0) < -1022 ? -1022 : $12;
   $y$0 = $8 * 2.2250738585072014e-308;
  } else {
   $$0 = $9;
   $y$0 = $8;
  }
 } else {
  $$0 = $n;
  $y$0 = $x;
 }
 $15 = _bitshift64Shl($$0 + 1023 | 0, 0, 52) | 0;
 $16 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $15;
 HEAP32[tempDoublePtr + 4 >> 2] = $16;
 return +($y$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __Z24jsonlang_static_analysisP3AST($ast) {
 $ast = $ast | 0;
 var $0 = 0, $1 = 0, $10 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 12 | 0;
 $1 = sp;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $4 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $4;
 __THREW__ = 0;
 invoke_viiii(15, $0 | 0, $ast | 0, 0, $1 | 0);
 $5 = __THREW__;
 __THREW__ = 0;
 if ($5 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$4 >> 2] | 0);
  ___resumeException($10 | 0);
 } else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($0, HEAP32[$0 + 4 >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($1, HEAP32[$4 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $6 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = $this + 4 | 0;
 $3 = $__v + 4 | 0;
 $6 = (HEAP32[$1 >> 2] | 0) - $0 | 0;
 $10 = (HEAP32[$3 >> 2] | 0) + (0 - ($6 >> 2) << 2) | 0;
 HEAP32[$3 >> 2] = $10;
 _memcpy($10 | 0, $0 | 0, $6 | 0) | 0;
 $11 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $11;
 $13 = $__v + 8 | 0;
 $14 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$13 >> 2] = $14;
 $16 = $this + 8 | 0;
 $17 = $__v + 12 | 0;
 $18 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = $18;
 HEAP32[$__v >> 2] = HEAP32[$3 >> 2];
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 var $$0 = 0, $$pre$phi2Z2D = 0, $$pre$phiZ2D = 0, $14 = 0, $15 = 0, $5 = 0, $6 = 0;
 if (!(HEAP32[$this + 64 >> 2] | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $5 = $this + 12 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if ((HEAP32[$this + 8 >> 2] | 0) >>> 0 >= $6 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($__c | 0) == -1) {
  HEAP32[$5 >> 2] = $6 + -1;
  $$0 = 0;
  return $$0 | 0;
 }
 if (!(HEAP32[$this + 88 >> 2] & 16)) {
  $14 = $__c & 255;
  $15 = $6 + -1 | 0;
  if ($14 << 24 >> 24 == (HEAP8[$15 >> 0] | 0)) {
   $$pre$phi2Z2D = $14;
   $$pre$phiZ2D = $15;
  } else {
   $$0 = -1;
   return $$0 | 0;
  }
 } else {
  $$pre$phi2Z2D = $__c & 255;
  $$pre$phiZ2D = $6 + -1 | 0;
 }
 HEAP32[$5 >> 2] = $$pre$phiZ2D;
 HEAP8[$$pre$phiZ2D >> 0] = $$pre$phi2Z2D;
 $$0 = $__c;
 return $$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE7destroyEPNS_11__tree_nodeISB_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__110__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, $10 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this);
 HEAP32[$this >> 2] = 9512;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 __THREW__ = 0;
 invoke_vii(4, $this | 0, $1 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
  ___resumeException($10 | 0);
 } else {
  __ZNSt3__16localeD2Ev($1);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__110__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($this, $__fp, $__st) {
 $this = $this | 0;
 $__fp = $__fp | 0;
 $__st = $__st | 0;
 var $0 = 0, $1 = 0, $10 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this);
 HEAP32[$this >> 2] = 9640;
 HEAP32[$this + 32 >> 2] = $__fp;
 HEAP32[$this + 40 >> 2] = $__st;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP8[$this + 52 >> 0] = 0;
 __ZNSt3__16localeC2ERKS0_($0, $this + 4 | 0);
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 __THREW__ = 0;
 invoke_vii(6, $this | 0, $1 | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  __ZNSt3__16localeD2Ev($1);
  __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
  ___resumeException($10 | 0);
 } else {
  __ZNSt3__16localeD2Ev($1);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _wcrtomb($s, $wc, $st) {
 $s = $s | 0;
 $wc = $wc | 0;
 $st = $st | 0;
 var $$0 = 0;
 do if (!$s) $$0 = 1; else {
  if ($wc >>> 0 < 128) {
   HEAP8[$s >> 0] = $wc;
   $$0 = 1;
   break;
  }
  if ($wc >>> 0 < 2048) {
   HEAP8[$s >> 0] = $wc >>> 6 | 192;
   HEAP8[$s + 1 >> 0] = $wc & 63 | 128;
   $$0 = 2;
   break;
  }
  if ($wc >>> 0 < 55296 | ($wc & -8192 | 0) == 57344) {
   HEAP8[$s >> 0] = $wc >>> 12 | 224;
   HEAP8[$s + 1 >> 0] = $wc >>> 6 & 63 | 128;
   HEAP8[$s + 2 >> 0] = $wc & 63 | 128;
   $$0 = 3;
   break;
  }
  if (($wc + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[$s >> 0] = $wc >>> 18 | 240;
   HEAP8[$s + 1 >> 0] = $wc >>> 12 & 63 | 128;
   HEAP8[$s + 2 >> 0] = $wc >>> 6 & 63 | 128;
   HEAP8[$s + 3 >> 0] = $wc & 63 | 128;
   $$0 = 4;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   $$0 = -1;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, $id) {
 $this = $this | 0;
 $f = $f | 0;
 $id = $id | 0;
 var $0 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $20 = 0, $3 = 0;
 __ZNSt3__114__shared_count12__add_sharedEv($f);
 $0 = $this + 8 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 do if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $16 = $3; else {
  __THREW__ = 0;
  invoke_vii(105, $0 | 0, $id + 1 | 0);
  $10 = __THREW__;
  __THREW__ = 0;
  if (!($10 & 1)) {
   $16 = HEAP32[$0 >> 2] | 0;
   break;
  }
  $12 = ___cxa_find_matching_catch() | 0;
  if ($f) __ZNSt3__114__shared_count16__release_sharedEv($f) | 0;
  ___resumeException($12 | 0);
 } while (0);
 $17 = HEAP32[$16 + ($id << 2) >> 2] | 0;
 if (!$17) $20 = $16; else {
  __ZNSt3__114__shared_count16__release_sharedEv($17) | 0;
  $20 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$20 + ($id << 2) >> 2] = $f;
 return;
}

function __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 11732, 11764) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($this, $__b, $__e, $__iob, $__err, $__tm) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__tm = $__tm | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__tm, 62857, 62865) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $__t$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) {
  if (($2 | 0) < 69) $__t$0 = $2 + 2e3 | 0; else $__t$0 = ($2 + -69 | 0) >>> 0 < 31 ? $2 + 1900 | 0 : $2;
  HEAP32[$__y >> 2] = $__t$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($this, $__b, $__e, $__iob, $__err, $__v) {
 $this = $this | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__iob = $__iob | 0;
 $__err = $__err | 0;
 $__v = $__v | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__b >> 2];
 HEAP32[$1 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
 $4 = __ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($this, $$byval_copy, $$byval_copy1, $__iob, $__err, $__v) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function _fopen($filename, $mode) {
 $filename = $filename | 0;
 $mode = $mode | 0;
 var $$0 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 if (!(_memchr(58148, HEAP8[$mode >> 0] | 0, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $5 = ___fmodeflags($mode) | 0 | 32768;
  HEAP32[$vararg_buffer >> 2] = $filename;
  HEAP32[$vararg_buffer + 4 >> 2] = $5;
  HEAP32[$vararg_buffer + 8 >> 2] = 438;
  $7 = ___syscall_ret(___syscall5(5, $vararg_buffer | 0) | 0) | 0;
  if (($7 | 0) < 0) $$0 = 0; else {
   $9 = ___fdopen($7, $mode) | 0;
   if (!$9) {
    HEAP32[$vararg_buffer3 >> 2] = $7;
    ___syscall6(6, $vararg_buffer3 | 0) | 0;
    $$0 = 0;
   } else $$0 = $9;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN15BuiltinFunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3208;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function _strerror($e) {
 $e = $e | 0;
 var $$lcssa = 0, $9 = 0, $i$03 = 0, $i$03$lcssa = 0, $i$12 = 0, $s$0$lcssa = 0, $s$01 = 0, $s$1 = 0, label = 0;
 $i$03 = 0;
 while (1) {
  if ((HEAPU8[55975 + $i$03 >> 0] | 0) == ($e | 0)) {
   $i$03$lcssa = $i$03;
   label = 2;
   break;
  }
  $i$03 = $i$03 + 1 | 0;
  if (($i$03 | 0) == 87) {
   $i$12 = 87;
   $s$01 = 56063;
   label = 5;
   break;
  }
 }
 if ((label | 0) == 2) if (!$i$03$lcssa) $s$0$lcssa = 56063; else {
  $i$12 = $i$03$lcssa;
  $s$01 = 56063;
  label = 5;
 }
 if ((label | 0) == 5) while (1) {
  label = 0;
  $s$1 = $s$01;
  while (1) {
   $9 = $s$1 + 1 | 0;
   if (!(HEAP8[$s$1 >> 0] | 0)) {
    $$lcssa = $9;
    break;
   } else $s$1 = $9;
  }
  $i$12 = $i$12 + -1 | 0;
  if (!$i$12) {
   $s$0$lcssa = $$lcssa;
   break;
  } else {
   $s$01 = $$lcssa;
   label = 5;
  }
 }
 return $s$0$lcssa | 0;
}
function ___overflow($f, $_c) {
 $f = $f | 0;
 $_c = $_c | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $6 = 0, $7 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 $0 = $_c & 255;
 HEAP8[$c >> 0] = $0;
 $1 = $f + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) if (!(___towrite($f) | 0)) {
  $9 = HEAP32[$1 >> 2] | 0;
  label = 4;
 } else $$0 = -1; else {
  $9 = $2;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $6 = $f + 20 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ($7 >>> 0 < $9 >>> 0) {
   $10 = $_c & 255;
   if (($10 | 0) != (HEAP8[$f + 75 >> 0] | 0)) {
    HEAP32[$6 >> 2] = $7 + 1;
    HEAP8[$7 >> 0] = $0;
    $$0 = $10;
    break;
   }
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8FunctionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3564;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN5ArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3548;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function __ZN5ApplyD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3468;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  __ZdlPv($this);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZdlPv($this);
 return;
}

function _frexp($x, $e) {
 $x = +$x;
 $e = $e | 0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $2 = 0, $4 = 0, $7 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $2 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $4 = $2 & 2047;
 switch ($4 | 0) {
 case 0:
  {
   if ($x != 0.0) {
    $7 = +_frexp($x * 18446744073709551616.0, $e);
    $$01 = $7;
    $storemerge = (HEAP32[$e >> 2] | 0) + -64 | 0;
   } else {
    $$01 = $x;
    $storemerge = 0;
   }
   HEAP32[$e >> 2] = $storemerge;
   $$0 = $$01;
   break;
  }
 case 2047:
  {
   $$0 = $x;
   break;
  }
 default:
  {
   HEAP32[$e >> 2] = $4 + -1022;
   HEAP32[tempDoublePtr >> 2] = $0;
   HEAP32[tempDoublePtr + 4 >> 2] = $1 & -2146435073 | 1071644672;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +$$0;
}

function ___fseeko_unlocked($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 var $$0 = 0, $$01 = 0, $11 = 0, $9 = 0, label = 0;
 if (($whence | 0) == 1) $$01 = $off - (HEAP32[$f + 8 >> 2] | 0) + (HEAP32[$f + 4 >> 2] | 0) | 0; else $$01 = $off;
 $9 = $f + 20 | 0;
 $11 = $f + 28 | 0;
 if ((HEAP32[$9 >> 2] | 0) >>> 0 > (HEAP32[$11 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
  if (!(HEAP32[$9 >> 2] | 0)) $$0 = -1; else label = 5;
 } else label = 5;
 if ((label | 0) == 5) {
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$11 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 40 >> 2] & 63]($f, $$01, $whence) | 0) < 0) $$0 = -1; else {
   HEAP32[$f + 8 >> 2] = 0;
   HEAP32[$f + 4 >> 2] = 0;
   HEAP32[$f >> 2] = HEAP32[$f >> 2] & -17;
   $$0 = 0;
  }
 }
 return $$0 | 0;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5rfindEcj($this, $__c, $__pos) {
 $this = $this | 0;
 $__c = $__c | 0;
 $__pos = $__pos | 0;
 var $$01$i = 0, $$lcssa = 0, $0 = 0, $11 = 0, $15 = 0, $17 = 0, $__ps$0$i = 0;
 $0 = HEAP8[$this >> 0] | 0;
 if (!($0 & 1)) {
  $11 = ($0 & 255) >>> 1;
  $15 = $this + 1 | 0;
 } else {
  $11 = HEAP32[$this + 4 >> 2] | 0;
  $15 = HEAP32[$this + 8 >> 2] | 0;
 }
 L5 : do if (!$11) $$01$i = -1; else {
  $__ps$0$i = $15 + ($11 >>> 0 > $__pos >>> 0 ? $__pos + 1 | 0 : $11) | 0;
  while (1) {
   if (($__ps$0$i | 0) == ($15 | 0)) {
    $$01$i = -1;
    break L5;
   }
   $17 = $__ps$0$i + -1 | 0;
   if ((HEAP8[$17 >> 0] | 0) == $__c << 24 >> 24) {
    $$lcssa = $17;
    break;
   } else $__ps$0$i = $17;
  }
  $$01$i = $$lcssa - $15 | 0;
 } while (0);
 return $$01$i | 0;
}

function __ZNSt3__114__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($__nb, $__ne, $__iob) {
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__iob = $__iob | 0;
 var $$0 = 0, $3 = 0, label = 0;
 L1 : do switch (HEAP32[$__iob + 4 >> 2] & 176 | 0) {
 case 16:
  {
   $3 = HEAP8[$__nb >> 0] | 0;
   switch ($3 << 24 >> 24) {
   case 43:
   case 45:
    {
     $$0 = $__nb + 1 | 0;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($__ne - $__nb | 0) > 1 & $3 << 24 >> 24 == 48) {
    switch (HEAP8[$__nb + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      label = 7;
      break L1;
     }
    }
    $$0 = $__nb + 2 | 0;
   } else label = 7;
   break;
  }
 case 32:
  {
   $$0 = $__ne;
   break;
  }
 default:
  label = 7;
 } while (0);
 if ((label | 0) == 7) $$0 = $__nb;
 return $$0 | 0;
}

function __ZN15BuiltinFunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3208;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 12 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 + -1 | 0) >>> 0 < 31 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__d, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__d = $__d | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 3) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 366 & ($3 & 4 | 0) == 0) HEAP32[$__d >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN8FunctionD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3564;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 13 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2 + -1; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN5ArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3548;
 $1 = HEAP32[$this + 48 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 52 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZN5ApplyD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3468;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 56 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 HEAP32[$this >> 2] = 3192;
 $12 = HEAP32[$this + 36 >> 2] | 0;
 if (!$12) {
  $22 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
  return;
 }
 $15 = $this + 40 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (($16 | 0) != ($12 | 0)) HEAP32[$15 >> 2] = $16 + (~(($16 + -4 - $12 | 0) >>> 2) << 2);
 __ZdlPv($12);
 $22 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__w, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__w = $__w | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 1) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 7 & ($3 & 4 | 0) == 0) HEAP32[$__w >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__s, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 61 & ($3 & 4 | 0) == 0) HEAP32[$__s >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__m, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__m = $__m | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 60 & ($3 & 4 | 0) == 0) HEAP32[$__m >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__h, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__h = $__h | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 2) | 0;
 $3 = HEAP32[$__err >> 2] | 0;
 if (($2 | 0) < 24 & ($3 & 4 | 0) == 0) HEAP32[$__h >> 2] = $2; else HEAP32[$__err >> 2] = $3 | 4;
 STACKTOP = sp;
 return;
}

function __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE($obj) {
 $obj = $obj | 0;
 var $$lcssa = 0, $1 = 0, $10 = 0, $5 = 0, $obj$tr3 = 0, label = 0;
 if (!$obj) return 1; else $obj$tr3 = $obj;
 while (1) {
  $1 = ___dynamic_cast($obj$tr3, 432, 456, 0) | 0;
  if ($1) {
   $$lcssa = $1;
   label = 3;
   break;
  }
  $10 = ___dynamic_cast($obj$tr3, 432, 472, 0) | 0;
  if (!$10) {
   label = 6;
   break;
  }
  $obj$tr3 = HEAP32[$10 + 8 >> 2] | 0;
  if (!$obj$tr3) {
   label = 6;
   break;
  }
 }
 if ((label | 0) == 3) {
  $5 = __ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$$lcssa + 8 >> 2] | 0) | 0;
  return (__ZN12_GLOBAL__N_111Interpreter11countLeavesEPNS_10HeapObjectE(HEAP32[$$lcssa + 12 >> 2] | 0) | 0) + $5 | 0;
 } else if ((label | 0) == 6) return 1;
 return 0;
}

function __ZN5LocalD0Ev($this) {
 $this = $this | 0;
 var $14 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 3260;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 3192;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $14 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  __ZdlPv($this);
  return;
 }
 $7 = $this + 40 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) != ($4 | 0)) HEAP32[$7 >> 2] = $8 + (~(($8 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $14 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $3 = 0, $9 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if ($1 >>> 0 < $3 >>> 0) {
  HEAP32[$0 >> 2] = $3;
  $12 = $3;
 } else $12 = $1;
 if (!(HEAP32[$this + 48 >> 2] & 8)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $9 = $this + 16 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $13 = $this + 12 | 0;
 if ($10 >>> 0 < $12 >>> 0) {
  $14 = HEAP32[$13 >> 2] | 0;
  HEAP32[$9 >> 2] = $12;
  $17 = $14;
  $18 = $12;
 } else {
  $17 = HEAP32[$13 >> 2] | 0;
  $18 = $10;
 }
 if ($17 >>> 0 >= $18 >>> 0) {
  $$0 = -1;
  return $$0 | 0;
 }
 $$0 = HEAPU8[$17 >> 0] | 0;
 return $$0 | 0;
}

function _ungetc($c, $f) {
 $c = $c | 0;
 $f = $f | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $17 = 0, $19 = 0, label = 0;
 do if (($c | 0) == -1) $$0 = -1; else {
  if ((HEAP32[$f + 76 >> 2] | 0) > -1) $17 = ___lockfile($f) | 0; else $17 = 0;
  if (!(HEAP32[$f + 8 >> 2] | 0)) {
   if (!(___toread($f) | 0)) label = 6;
  } else label = 6;
  if ((label | 0) == 6) {
   $10 = $f + 4 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if ($11 >>> 0 > ((HEAP32[$f + 44 >> 2] | 0) + -8 | 0) >>> 0) {
    $19 = $11 + -1 | 0;
    HEAP32[$10 >> 2] = $19;
    HEAP8[$19 >> 0] = $c;
    HEAP32[$f >> 2] = HEAP32[$f >> 2] & -17;
    if (!$17) {
     $$0 = $c;
     break;
    }
    ___unlockfile($f);
    $$0 = $c;
    break;
   }
  }
  if (!$17) $$0 = -1; else {
   ___unlockfile($f);
   $$0 = -1;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__115__num_get_floatIeEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  __ZNSt3__16__clocEv() | 0;
  $4 = +_strtold($__a, $__p2);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__115__num_get_floatIdEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  __ZNSt3__16__clocEv() | 0;
  $4 = +_strtold($__a, $__p2);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) {
   HEAP32[$__err >> 2] = 4;
   $$0 = $4;
  } else $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__115__num_get_floatIfEET_PKcS3_Rj($__a, $__a_end, $__err) {
 $__a = $__a | 0;
 $__a_end = $__a_end | 0;
 $__err = $__err | 0;
 var $$0 = 0.0, $1 = 0, $2 = 0, $4 = 0.0, $5 = 0, $__p2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p2 = sp;
 do if (($__a | 0) == ($__a_end | 0)) {
  HEAP32[$__err >> 2] = 4;
  $$0 = 0.0;
 } else {
  $1 = ___errno_location() | 0;
  $2 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = 0;
  __ZNSt3__16__clocEv() | 0;
  $4 = +_strtold($__a, $__p2);
  $5 = HEAP32[$1 >> 2] | 0;
  if (!$5) HEAP32[$1 >> 2] = $2;
  if ((HEAP32[$__p2 >> 2] | 0) != ($__a_end | 0)) {
   HEAP32[$__err >> 2] = 4;
   $$0 = 0.0;
   break;
  }
  if (($5 | 0) == 34) HEAP32[$__err >> 2] = 4;
  $$0 = $4;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($this, $0, $frm, $frm_end, $frm_nxt, $to, $to_end, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $to_end = $to_end | 0;
 $to_nxt = $to_nxt | 0;
 var $1 = 0, $_frm_nxt = 0, $_to_nxt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $_frm_nxt = sp + 4 | 0;
 $_to_nxt = sp;
 HEAP32[$_frm_nxt >> 2] = $frm;
 HEAP32[$_to_nxt >> 2] = $to;
 $1 = __ZNSt3__1L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($frm, $frm_end, $_frm_nxt, $to, $to_end, $_to_nxt, 1114111, 0) | 0;
 HEAP32[$frm_nxt >> 2] = HEAP32[$_frm_nxt >> 2];
 HEAP32[$to_nxt >> 2] = HEAP32[$_to_nxt >> 2];
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 15]($8, $info, $dst_ptr, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function __ZN5LocalD2Ev($this) {
 $this = $this | 0;
 var $14 = 0, $4 = 0, $7 = 0, $8 = 0;
 HEAP32[$this >> 2] = 3260;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this + 48 | 0, HEAP32[$this + 52 >> 2] | 0);
 HEAP32[$this >> 2] = 3192;
 $4 = HEAP32[$this + 36 >> 2] | 0;
 if (!$4) {
  $14 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
  return;
 }
 $7 = $this + 40 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) != ($4 | 0)) HEAP32[$7 >> 2] = $8 + (~(($8 + -4 - $4 | 0) >>> 2) << 2);
 __ZdlPv($4);
 $14 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 return;
}

function __ZNSt3__18ios_base5clearEj($this, $state) {
 $this = $this | 0;
 $state = $state | 0;
 var $0 = 0, $12 = 0, $14 = 0, $16 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $3 = (HEAP32[$this + 24 >> 2] | 0) == 0;
 HEAP32[$this + 16 >> 2] = $3 & 1 | $state;
 if (!(($3 & 1 | $state) & HEAP32[$this + 20 >> 2])) {
  STACKTOP = sp;
  return;
 }
 $12 = ___cxa_allocate_exception(16) | 0;
 __ZNSt3__117iostream_categoryEv() | 0;
 HEAP32[$0 >> 2] = 1;
 HEAP32[$0 + 4 >> 2] = 10056;
 __THREW__ = 0;
 invoke_viii(14, $12 | 0, 61387, $0 | 0);
 $14 = __THREW__;
 __THREW__ = 0;
 if ($14 & 1) {
  $16 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($12 | 0);
  ___resumeException($16 | 0);
 } else ___cxa_throw($12 | 0, 832, 105);
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $0 = 0, $1 = 0, $6 = 0, $9 = 0;
 $0 = $info + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  HEAP32[$0 >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
 } else {
  if (($1 | 0) != ($adjustedPtr | 0)) {
   $9 = $info + 36 | 0;
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $6 = $info + 24 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 2) HEAP32[$6 >> 2] = $path_below;
 } while (0);
 return;
}

function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $12 = 0, $15 = 0, $20 = 0, $9 = 0, $mem$0 = 0;
 do if (!$oldmem) $mem$0 = _malloc($bytes) | 0; else {
  if ($bytes >>> 0 > 4294967231) {
   HEAP32[(___errno_location() | 0) >> 2] = 12;
   $mem$0 = 0;
   break;
  }
  $9 = _try_realloc_chunk($oldmem + -8 | 0, $bytes >>> 0 < 11 ? 16 : $bytes + 11 & -8) | 0;
  if ($9) {
   $mem$0 = $9 + 8 | 0;
   break;
  }
  $12 = _malloc($bytes) | 0;
  if (!$12) $mem$0 = 0; else {
   $15 = HEAP32[$oldmem + -4 >> 2] | 0;
   $20 = ($15 & -8) - (($15 & 3 | 0) == 0 ? 8 : 4) | 0;
   _memcpy($12 | 0, $oldmem | 0, ($20 >>> 0 < $bytes >>> 0 ? $20 : $bytes) | 0) | 0;
   _free($oldmem);
   $mem$0 = $12;
  }
 } while (0);
 return $mem$0 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($this, $__y, $__b, $__e, $__err, $__ct) {
 $this = $this | 0;
 $__y = $__y | 0;
 $__b = $__b | 0;
 $__e = $__e | 0;
 $__err = $__err | 0;
 $__ct = $__ct | 0;
 var $$byval_copy = 0, $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$byval_copy = sp + 4 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[$__e >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
 $2 = __ZNSt3__120__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($__b, $$byval_copy, $__err, $__ct, 4) | 0;
 if (!(HEAP32[$__err >> 2] & 4)) HEAP32[$__y >> 2] = $2 + -1900;
 STACKTOP = sp;
 return;
}

function ___fflush_unlocked($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $9 = 0, label = 0;
 $0 = $f + 20 | 0;
 $2 = $f + 28 | 0;
 if ((HEAP32[$0 >> 2] | 0) >>> 0 > (HEAP32[$2 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
  if (!(HEAP32[$0 >> 2] | 0)) $$0 = -1; else label = 3;
 } else label = 3;
 if ((label | 0) == 3) {
  $9 = $f + 4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = $f + 8 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if ($10 >>> 0 < $12 >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 40 >> 2] & 63]($f, $10 - $12 | 0, 1) | 0;
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$11 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 return _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj($this, $__sz) {
 $this = $this | 0;
 $__sz = $__sz | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 $6 = $1 - $2 >> 2;
 if ($6 >>> 0 < $__sz >>> 0) __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8__appendEj($this, $__sz - $6 | 0); else if ($6 >>> 0 > $__sz >>> 0) {
  $10 = $2 + ($__sz << 2) | 0;
  if (($1 | 0) != ($10 | 0)) {
   $13 = $1;
   while (1) {
    $12 = $13 + -4 | 0;
    if (($12 | 0) == ($10 | 0)) {
     $$lcssa = $12;
     break;
    } else $13 = $12;
   }
   HEAP32[$0 >> 2] = $$lcssa;
  }
 }
 return;
}

function _vasprintf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $2 = 0, $5 = 0, $9 = 0, $ap2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap2 = sp;
 $0 = _malloc(240) | 0;
 do if (!$0) $$0 = -1; else {
  HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
  $2 = _vsnprintf($0, 240, $fmt, $ap2) | 0;
  if ($2 >>> 0 < 240) {
   $5 = _realloc($0, $2 + 1 | 0) | 0;
   HEAP32[$s >> 2] = ($5 | 0) != 0 ? $5 : $0;
   $$0 = $2;
   break;
  }
  _free($0);
  if (($2 | 0) < 0) $$0 = -1; else {
   $9 = $2 + 1 | 0;
   $10 = _malloc($9) | 0;
   HEAP32[$s >> 2] = $10;
   if (!$10) $$0 = -1; else $$0 = _vsnprintf($10, $9, $fmt, $ap) | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 15]($4, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
 }
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN6Object5Field4HideEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 7]($8, $info, $current_ptr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2, $use_strcmp);
 return;
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$pre$i$i$i = 0, $1 = 0, $10 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $this + 8 | 0;
 $$pre$i$i$i = HEAP32[$2 >> 2] | 0;
 if (($$pre$i$i$i | 0) != ($1 | 0)) {
  $5 = $$pre$i$i$i;
  while (1) {
   $4 = $5 + -4 | 0;
   if (($4 | 0) == ($1 | 0)) {
    $$lcssa = $4;
    break;
   } else $5 = $4;
  }
  HEAP32[$2 >> 2] = $$lcssa;
 }
 $7 = HEAP32[$this >> 2] | 0;
 do if ($7) {
  $10 = HEAP32[$this + 16 >> 2] | 0;
  if (($10 | 0) == ($7 | 0)) {
   HEAP8[$10 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv($7);
   break;
  }
 } while (0);
 return;
}

function __ZNKSt3__110__time_put8__do_putEPcRS1_PK2tmcc($this, $__nb, $__ne, $__tm, $__fmt, $__mod) {
 $this = $this | 0;
 $__nb = $__nb | 0;
 $__ne = $__ne | 0;
 $__tm = $__tm | 0;
 $__fmt = $__fmt | 0;
 $__mod = $__mod | 0;
 var $0 = 0, $1 = 0, $fmt = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $fmt = sp;
 HEAP8[$fmt >> 0] = 37;
 $0 = $fmt + 1 | 0;
 HEAP8[$0 >> 0] = $__fmt;
 $1 = $fmt + 2 | 0;
 HEAP8[$1 >> 0] = $__mod;
 HEAP8[$fmt + 3 >> 0] = 0;
 if ($__mod << 24 >> 24) {
  HEAP8[$0 >> 0] = $__mod;
  HEAP8[$1 >> 0] = $__fmt;
 }
 HEAP32[$__ne >> 2] = $__nb + (_strftime_l($__nb | 0, (HEAP32[$__ne >> 2] | 0) - $__nb | 0, $fmt | 0, $__tm | 0, HEAP32[$this >> 2] | 0) | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $4 = 0, $6 = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP8[$this + 128 >> 0] = 0;
 do if ($__n) {
  __THREW__ = 0;
  invoke_vii(106, $this | 0, $__n | 0);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this);
   ___resumeException($6 | 0);
  } else {
   __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n);
   break;
  }
 } while (0);
 return;
}

function _strtox($s, $p, $prec) {
 $s = $s | 0;
 $p = $p | 0;
 $prec = $prec | 0;
 var $0 = 0, $1 = 0, $12 = 0, $4 = 0.0, $f = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 dest = $f;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $0 = $f + 4 | 0;
 HEAP32[$0 >> 2] = $s;
 $1 = $f + 8 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$f + 44 >> 2] = $s;
 HEAP32[$f + 76 >> 2] = -1;
 ___shlim($f, 0);
 $4 = +___floatscan($f, $prec, 1);
 $12 = (HEAP32[$0 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) + (HEAP32[$f + 108 >> 2] | 0) | 0;
 if ($p) HEAP32[$p >> 2] = ($12 | 0) != 0 ? $s + $12 | 0 : $s;
 STACKTOP = sp;
 return +$4;
}

function __ZNSt3__16locale5__impD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $6 = 0, $7 = 0, $i$01 = 0;
 HEAP32[$this >> 2] = 11140;
 $0 = $this + 8 | 0;
 $1 = $this + 12 | 0;
 $3 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$1 >> 2] | 0) != ($3 | 0)) {
  $6 = $3;
  $i$01 = 0;
  do {
   $7 = HEAP32[$6 + ($i$01 << 2) >> 2] | 0;
   if ($7) __ZNSt3__114__shared_count16__release_sharedEv($7) | 0;
   $i$01 = $i$01 + 1 | 0;
   $6 = HEAP32[$0 >> 2] | 0;
  } while ($i$01 >>> 0 < (HEAP32[$1 >> 2] | 0) - $6 >> 2 >>> 0);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 144 | 0);
 __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_jjRKS4_($this, $__str, $__pos, $__n, $__a) {
 $this = $this | 0;
 $__str = $__str | 0;
 $__pos = $__pos | 0;
 $__n = $__n | 0;
 $__a = $__a | 0;
 var $0 = 0, $14 = 0, $2 = 0, $7 = 0;
 $0 = HEAP8[$__str >> 0] | 0;
 $2 = ($0 & 1) == 0;
 $7 = $2 ? ($0 & 255) >>> 1 : HEAP32[$__str + 4 >> 2] | 0;
 if ($7 >>> 0 < $__pos >>> 0) __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this); else {
  $14 = $7 - $__pos | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, ($2 ? $__str + 1 | 0 : HEAP32[$__str + 8 >> 2] | 0) + $__pos | 0, $14 >>> 0 < $__n >>> 0 ? $14 : $__n);
  return;
 }
}

function __ZNSt3__114__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lj28EEEEC2EjjS6_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $3 = 0, $8 = 0, $9 = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 do if (!$__cap) $8 = 0; else {
  $3 = $__a + 112 | 0;
  if ($__cap >>> 0 < 29 & (HEAP8[$3 >> 0] | 0) == 0) {
   HEAP8[$3 >> 0] = 1;
   $8 = $__a;
   break;
  } else {
   $8 = __Znwj($__cap << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$this >> 2] = $8;
 $9 = $8 + ($__start << 2) | 0;
 HEAP32[$this + 8 >> 2] = $9;
 HEAP32[$this + 4 >> 2] = $9;
 HEAP32[$this + 12 >> 2] = $8 + ($__cap << 2);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj($this, $__s, $__sz, $__reserve) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 $__reserve = $__reserve | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__reserve >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__reserve >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__reserve + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function __ZNSt3__111__stdoutbufIwE6xsputnEPKwi($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$012 = 0, $13 = 0, $__i$03 = 0;
 L1 : do if (!(HEAP8[$this + 44 >> 0] | 0)) if (($__n | 0) > 0) {
  $$012 = $__s;
  $__i$03 = 0;
  while (1) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAP32[$$012 >> 2] | 0) | 0) == -1) {
    $$0 = $__i$03;
    break L1;
   }
   $13 = $__i$03 + 1 | 0;
   if (($13 | 0) < ($__n | 0)) {
    $$012 = $$012 + 4 | 0;
    $__i$03 = $13;
   } else {
    $$0 = $13;
    break;
   }
  }
 } else $$0 = 0; else $$0 = _fwrite($__s, 4, $__n, HEAP32[$this + 32 >> 2] | 0) | 0; while (0);
 return $$0 | 0;
}

function __ZNSt3__111__stdoutbufIcE6xsputnEPKci($this, $__s, $__n) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__n = $__n | 0;
 var $$0 = 0, $$012 = 0, $14 = 0, $__i$03 = 0;
 L1 : do if (!(HEAP8[$this + 44 >> 0] | 0)) if (($__n | 0) > 0) {
  $$012 = $__s;
  $__i$03 = 0;
  while (1) {
   if ((FUNCTION_TABLE_iii[HEAP32[(HEAP32[$this >> 2] | 0) + 52 >> 2] & 63]($this, HEAPU8[$$012 >> 0] | 0) | 0) == -1) {
    $$0 = $__i$03;
    break L1;
   }
   $14 = $__i$03 + 1 | 0;
   if (($14 | 0) < ($__n | 0)) {
    $$012 = $$012 + 1 | 0;
    $__i$03 = $14;
   } else {
    $$0 = $14;
    break;
   }
  }
 } else $$0 = 0; else $$0 = _fwrite($__s, 1, $__n, HEAP32[$this + 32 >> 2] | 0) | 0; while (0);
 return $$0 | 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function _getc($f) {
 $f = $f | 0;
 var $$0 = 0, $14 = 0, $15 = 0, $23 = 0, $5 = 0, $6 = 0, label = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($f) | 0)) label = 3; else {
  $14 = $f + 4 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if ($15 >>> 0 < (HEAP32[$f + 8 >> 2] | 0) >>> 0) {
   HEAP32[$14 >> 2] = $15 + 1;
   $23 = HEAPU8[$15 >> 0] | 0;
  } else $23 = ___uflow($f) | 0;
  $$0 = $23;
 }
 do if ((label | 0) == 3) {
  $5 = $f + 4 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if ($6 >>> 0 < (HEAP32[$f + 8 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $6 + 1;
   $$0 = HEAPU8[$6 >> 0] | 0;
   break;
  } else {
   $$0 = ___uflow($f) | 0;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZSt11__terminatePFvvE($func) {
 $func = $func | 0;
 var $0 = 0, $10 = 0, $3 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __THREW__ = 0;
 invoke_v($func | 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_vii(69, 55573, sp | 0);
  __THREW__ = 0;
 }
 $3 = ___cxa_find_matching_catch(0) | 0;
 ___cxa_begin_catch($3 | 0) | 0;
 __THREW__ = 0;
 invoke_vii(69, 55613, sp + 8 | 0);
 __THREW__ = 0;
 $6 = ___cxa_find_matching_catch(0) | 0;
 __THREW__ = 0;
 invoke_v(2);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $10 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($10);
 } else ___clang_call_terminate($6);
}

function __ZN13LiteralStringD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 3276;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 3192;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function __ZN12RuntimeErrorD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 $1 = HEAP32[$this >> 2] | 0;
 if (!$1) return;
 $3 = $this + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) == ($1 | 0)) $11 = $1; else {
  $7 = $4;
  do {
   $6 = $7 + -40 | 0;
   HEAP32[$3 >> 2] = $6;
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7 + -12 | 0);
   __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
   $7 = HEAP32[$3 >> 2] | 0;
  } while (($7 | 0) != ($1 | 0));
  $11 = HEAP32[$this >> 2] | 0;
 }
 __ZdlPv($11);
 return;
}

function __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($__nd + 16 | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN9ImportstrD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 3532;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 3192;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function __ZN6ImportD0Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 3516;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 3192;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  __ZdlPv($this);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierP3ASTEENS_19__map_value_compareIS4_S7_NS_4lessIS4_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $info, $adjustedPtr + $offset_to_base$0 | 0, ($1 & 2 | 0) != 0 ? $path_below : 2);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $0 = 0, $2 = 0, $8 = 0;
 $0 = HEAP8[$this >> 0] | 0;
 $2 = ($0 & 1) == 0;
 if ($2) $8 = ($0 & 255) >>> 1; else $8 = HEAP32[$this + 4 >> 2] | 0;
 do if ($8 >>> 0 < $__n >>> 0) __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEjc($this, $__n - $8 | 0, $__c) | 0; else if ($2) {
  HEAP8[$this + 1 + $__n >> 0] = 0;
  HEAP8[$this >> 0] = $__n << 1;
  break;
 } else {
  HEAP8[(HEAP32[$this + 8 >> 2] | 0) + $__n >> 0] = 0;
  HEAP32[$this + 4 >> 2] = $__n;
  break;
 } while (0);
 return;
}

function ___toread($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $15 = 0, $2 = 0, $21 = 0, $6 = 0, $8 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = $f + 20 | 0;
 $8 = $f + 44 | 0;
 if ((HEAP32[$6 >> 2] | 0) >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 63]($f, 0, 0) | 0;
 HEAP32[$f + 16 >> 2] = 0;
 HEAP32[$f + 28 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $15 = HEAP32[$f >> 2] | 0;
 if (!($15 & 20)) {
  $21 = HEAP32[$8 >> 2] | 0;
  HEAP32[$f + 8 >> 2] = $21;
  HEAP32[$f + 4 >> 2] = $21;
  $$0 = 0;
 } else if (!($15 & 4)) $$0 = -1; else {
  HEAP32[$f >> 2] = $15 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $1 = 0;
 L1 : do if (($low | 0) == ($high | 0)) $$0$lcssa = $high; else {
  $$01 = $low;
  while (1) {
   $1 = HEAP32[$$01 >> 2] | 0;
   if ($1 >>> 0 >= 128) {
    $$0$lcssa = $$01;
    break L1;
   }
   if (!((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16)) {
    $$0$lcssa = $$01;
    break L1;
   }
   $$01 = $$01 + 4 | 0;
   if (($$01 | 0) == ($high | 0)) {
    $$0$lcssa = $high;
    break;
   }
  }
 } while (0);
 return $$0$lcssa | 0;
}

function __ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE($this, $msg, $ec) {
 $this = $this | 0;
 $msg = $msg | 0;
 $ec = $ec | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $tmpcast$byval_copy = sp + 8 | 0;
 $0 = sp;
 $1 = $ec;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $0;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 __ZNSt3__112system_errorC2ENS_10error_codeEPKc($this, $tmpcast$byval_copy, $msg);
 HEAP32[$this >> 2] = 9992;
 STACKTOP = sp;
 return;
}

function __ZNSt3__112__snprintf_lEPcjP15__locale_structPKcz($__s, $__n, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__n = $__n | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l) | 0;
 $1 = _vsnprintf($__s, $__n, $__format, $__va) | 0;
 if ($0) {
  __THREW__ = 0;
  invoke_ii(73, $0 | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $5 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($5);
  }
 }
 STACKTOP = sp;
 return $1 | 0;
}

function __ZN13LiteralStringD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 3276;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 3192;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function _fclose($f) {
 $f = $f | 0;
 var $$pre = 0, $12 = 0, $18 = 0, $22 = 0, $24 = 0, $5 = 0, $7 = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) {}
 $5 = (HEAP32[$f >> 2] & 1 | 0) != 0;
 if (!$5) {
  ___lock(4100);
  $7 = HEAP32[$f + 52 >> 2] | 0;
  $$pre = $f + 56 | 0;
  if ($7) HEAP32[$7 + 56 >> 2] = HEAP32[$$pre >> 2];
  $12 = HEAP32[$$pre >> 2] | 0;
  if ($12) HEAP32[$12 + 52 >> 2] = $7;
  if ((HEAP32[1024] | 0) == ($f | 0)) HEAP32[1024] = $12;
  ___unlock(4100);
 }
 $18 = _fflush($f) | 0;
 $22 = FUNCTION_TABLE_ii[HEAP32[$f + 12 >> 2] & 127]($f) | 0 | $18;
 $24 = HEAP32[$f + 92 >> 2] | 0;
 if ($24) _free($24);
 if (!$5) _free($f);
 return $22 | 0;
}

function __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZN9ImportstrD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 3532;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 3192;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZN6ImportD2Ev($this) {
 $this = $this | 0;
 var $12 = 0, $2 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 3516;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 48 | 0);
 HEAP32[$this >> 2] = 3192;
 $2 = HEAP32[$this + 36 >> 2] | 0;
 if (!$2) {
  $12 = $this + 4 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
  return;
 }
 $5 = $this + 40 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) != ($2 | 0)) HEAP32[$5 >> 2] = $6 + (~(($6 + -4 - $2 | 0) >>> 2) << 2);
 __ZdlPv($2);
 $12 = $this + 4 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 11) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__sz + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $7;
 }
 _memcpy($__p$0 | 0, $__s | 0, $__sz | 0) | 0;
 HEAP8[$__p$0 + $__sz >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($this, $__s, $__sz) {
 $this = $this | 0;
 $__s = $__s | 0;
 $__sz = $__sz | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__sz >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__sz >>> 0 < 2) {
  HEAP8[$this >> 0] = $__sz << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__sz + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__sz;
  $__p$0 = $8;
 }
 _wmemcpy($__p$0, $__s, $__sz) | 0;
 HEAP32[$__p$0 + ($__sz << 2) >> 2] = 0;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $12 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) $11 = 1; else {
  __THREW__ = 0;
  $3 = invoke_ii(73, $1 | 0) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $12 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($12);
  }
  if (!$3) $11 = 4; else {
   __THREW__ = 0;
   invoke_ii(73, $3 | 0) | 0;
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) {
    $9 = ___cxa_find_matching_catch(0) | 0;
    ___clang_call_terminate($9);
   } else $11 = 4;
  }
 }
 return $11 | 0;
}

function __ZNSt3__113__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEED2Ev($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$pre$i$i = 0, $0 = 0, $2 = 0, $4 = 0, $5 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 do if ($0) {
  $2 = $this + 4 | 0;
  $$pre$i$i = HEAP32[$2 >> 2] | 0;
  if (($$pre$i$i | 0) != ($0 | 0)) {
   $5 = $$pre$i$i;
   while (1) {
    $4 = $5 + -4 | 0;
    if (($4 | 0) == ($0 | 0)) {
     $$lcssa = $4;
     break;
    } else $5 = $4;
   }
   HEAP32[$2 >> 2] = $$lcssa;
  }
  if (($this + 16 | 0) == ($0 | 0)) {
   HEAP8[$this + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv($0);
   break;
  }
 } while (0);
 return;
}

function _memcmp($vl, $vr, $n) {
 $vl = $vl | 0;
 $vr = $vr | 0;
 $n = $n | 0;
 var $$03 = 0, $$lcssa = 0, $$lcssa19 = 0, $1 = 0, $11 = 0, $2 = 0, $l$04 = 0, $r$05 = 0;
 L1 : do if (!$n) $11 = 0; else {
  $$03 = $n;
  $l$04 = $vl;
  $r$05 = $vr;
  while (1) {
   $1 = HEAP8[$l$04 >> 0] | 0;
   $2 = HEAP8[$r$05 >> 0] | 0;
   if ($1 << 24 >> 24 != $2 << 24 >> 24) {
    $$lcssa = $1;
    $$lcssa19 = $2;
    break;
   }
   $$03 = $$03 + -1 | 0;
   if (!$$03) {
    $11 = 0;
    break L1;
   } else {
    $l$04 = $l$04 + 1 | 0;
    $r$05 = $r$05 + 1 | 0;
   }
  }
  $11 = ($$lcssa & 255) - ($$lcssa19 & 255) | 0;
 } while (0);
 return $11 | 0;
}

function ___stdio_seek($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 var $5 = 0, $ret = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $ret = sp + 20 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = $off;
 HEAP32[$vararg_buffer + 12 >> 2] = $ret;
 HEAP32[$vararg_buffer + 16 >> 2] = $whence;
 if ((___syscall_ret(___syscall140(140, $vararg_buffer | 0) | 0) | 0) < 0) {
  HEAP32[$ret >> 2] = -1;
  $5 = -1;
 } else $5 = HEAP32[$ret >> 2] | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 2892;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 2932;
 HEAP32[$this + ($2 + 8) >> 2] = 2912;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 return;
}

function __ZNKSt3__120__time_get_c_storageIwE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[2568] | 0)) if (___cxa_guard_acquire(2568) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(74, 14392) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 14428, 14392, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(198, 14428, ___dso_handle | 0) | 0;
    ___cxa_guard_release(2568);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2568);
  ___resumeException($9 | 0);
 } while (0);
 return 14428;
}

function __ZNKSt3__120__time_get_c_storageIwE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[2616] | 0)) if (___cxa_guard_acquire(2616) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(74, 14620) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 14668, 14620, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(198, 14668, ___dso_handle | 0) | 0;
    ___cxa_guard_release(2616);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2616);
  ___resumeException($9 | 0);
 } while (0);
 return 14668;
}

function __ZNKSt3__120__time_get_c_storageIwE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[2600] | 0)) if (___cxa_guard_acquire(2600) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(74, 14512) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 14596, 14512, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(198, 14596, ___dso_handle | 0) | 0;
    ___cxa_guard_release(2600);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2600);
  ___resumeException($9 | 0);
 } while (0);
 return 14596;
}

function __ZNKSt3__120__time_get_c_storageIwE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $5 = 0, $7 = 0, $9 = 0;
 do if (!(HEAP8[2584] | 0)) if (___cxa_guard_acquire(2584) | 0) {
  __THREW__ = 0;
  $4 = invoke_ii(74, 14452) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if (!($5 & 1)) {
   __THREW__ = 0;
   invoke_viii(18, 14488, 14452, $4 | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if (!($7 & 1)) {
    ___cxa_atexit(198, 14488, ___dso_handle | 0) | 0;
    ___cxa_guard_release(2584);
    break;
   }
  }
  $9 = ___cxa_find_matching_catch() | 0;
  ___cxa_guard_abort(2584);
  ___resumeException($9 | 0);
 } while (0);
 return 14488;
}

function ___fmodeflags($mode) {
 $mode = $mode | 0;
 var $1 = 0, $2 = 0, $4 = 0, $7 = 0, $flags$0 = 0, $flags$0$ = 0, $flags$2 = 0, $flags$2$ = 0, $flags$4 = 0;
 $1 = (_strchr($mode, 43) | 0) == 0;
 $2 = HEAP8[$mode >> 0] | 0;
 $flags$0 = $1 ? $2 << 24 >> 24 != 114 & 1 : 2;
 $4 = (_strchr($mode, 120) | 0) == 0;
 $flags$0$ = $4 ? $flags$0 : $flags$0 | 128;
 $7 = (_strchr($mode, 101) | 0) == 0;
 $flags$2 = $7 ? $flags$0$ : $flags$0$ | 524288;
 $flags$2$ = $2 << 24 >> 24 == 114 ? $flags$2 : $flags$2 | 64;
 $flags$4 = $2 << 24 >> 24 == 119 ? $flags$2$ | 512 : $flags$2$;
 return ($2 << 24 >> 24 == 97 ? $flags$4 | 1024 : $flags$4) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $7 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 4294967279) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 11) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 1 | 0;
 } else {
  $6 = $__n + 16 & -16;
  $7 = __Znwj($6) | 0;
  HEAP32[$this + 8 >> 2] = $7;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $7;
 }
 _memset($__p$0 | 0, $__c | 0, $__n | 0) | 0;
 HEAP8[$__p$0 + $__n >> 0] = 0;
 return;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($this, $__n, $__c) {
 $this = $this | 0;
 $__n = $__n | 0;
 $__c = $__c | 0;
 var $6 = 0, $8 = 0, $__p$0 = 0;
 if ($__n >>> 0 > 1073741807) __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this);
 if ($__n >>> 0 < 2) {
  HEAP8[$this >> 0] = $__n << 1;
  $__p$0 = $this + 4 | 0;
 } else {
  $6 = $__n + 4 & -4;
  $8 = __Znwj($6 << 2) | 0;
  HEAP32[$this + 8 >> 2] = $8;
  HEAP32[$this >> 2] = $6 | 1;
  HEAP32[$this + 4 >> 2] = $__n;
  $__p$0 = $8;
 }
 _wmemset($__p$0, $__c, $__n) | 0;
 HEAP32[$__p$0 + ($__n << 2) >> 2] = 0;
 return;
}

function _strtox535($s, $p, $base, $0, $1) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $6 = 0, $8 = 0, $f = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 HEAP32[$f >> 2] = 0;
 $2 = $f + 4 | 0;
 HEAP32[$2 >> 2] = $s;
 HEAP32[$f + 44 >> 2] = $s;
 $6 = $f + 8 | 0;
 HEAP32[$6 >> 2] = ($s | 0) < 0 ? -1 : $s + 2147483647 | 0;
 HEAP32[$f + 76 >> 2] = -1;
 ___shlim($f, 0);
 $8 = ___intscan($f, $base, 1, $0, $1) | 0;
 if ($p) HEAP32[$p >> 2] = $s + ((HEAP32[$2 >> 2] | 0) + (HEAP32[$f + 108 >> 2] | 0) - (HEAP32[$6 >> 2] | 0));
 STACKTOP = sp;
 return $8 | 0;
}

function __ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z($__s, $__l, $__format, $varargs) {
 $__s = $__s | 0;
 $__l = $__l | 0;
 $__format = $__format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $1 = 0, $3 = 0, $5 = 0, $__va = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__va = sp;
 HEAP32[$__va >> 2] = $varargs;
 $0 = _uselocale($__l) | 0;
 $1 = _vsscanf($__s, $__format, $__va) | 0;
 if ($0) {
  __THREW__ = 0;
  invoke_ii(73, $0 | 0) | 0;
  $3 = __THREW__;
  __THREW__ = 0;
  if ($3 & 1) {
   $5 = ___cxa_find_matching_catch(0) | 0;
   ___clang_call_terminate($5);
  }
 }
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt($this, $low, $high, $vec) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $vec = $vec | 0;
 var $$015 = 0, $$06 = 0, $10 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$015 = $low;
  $$06 = $vec;
  while (1) {
   $4 = HEAP32[$$015 >> 2] | 0;
   if ($4 >>> 0 < 128) $10 = HEAPU16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($4 << 1) >> 1] | 0; else $10 = 0;
   HEAP16[$$06 >> 1] = $10;
   $$015 = $$015 + 4 | 0;
   if (($$015 | 0) == ($high | 0)) break; else $$06 = $$06 + 2 | 0;
  }
 }
 return $low + ($2 << 2) | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 31]($4, $info, $adjustedPtr, $path_below);
 }
 return;
}

function __ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_($this, $m, $low, $high) {
 $this = $this | 0;
 $m = $m | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$0$lcssa = 0, $$01 = 0, $1 = 0;
 L1 : do if (($low | 0) == ($high | 0)) $$0$lcssa = $high; else {
  $$01 = $low;
  while (1) {
   $1 = HEAP32[$$01 >> 2] | 0;
   if ($1 >>> 0 < 128) if ((HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($1 << 1) >> 1] & $m) << 16 >> 16) {
    $$0$lcssa = $$01;
    break L1;
   }
   $$01 = $$01 + 4 | 0;
   if (($$01 | 0) == ($high | 0)) {
    $$0$lcssa = $high;
    break;
   }
  }
 } while (0);
 return $$0$lcssa | 0;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3656;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3688;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 32 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function _strcmp($l, $r) {
 $l = $l | 0;
 $r = $r | 0;
 var $$014 = 0, $$05 = 0, $$lcssa = 0, $$lcssa2 = 0, $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = HEAP8[$l >> 0] | 0;
 $1 = HEAP8[$r >> 0] | 0;
 if ($0 << 24 >> 24 == 0 ? 1 : $0 << 24 >> 24 != $1 << 24 >> 24) {
  $$lcssa = $0;
  $$lcssa2 = $1;
 } else {
  $$014 = $l;
  $$05 = $r;
  do {
   $$014 = $$014 + 1 | 0;
   $$05 = $$05 + 1 | 0;
   $6 = HEAP8[$$014 >> 0] | 0;
   $7 = HEAP8[$$05 >> 0] | 0;
  } while (!($6 << 24 >> 24 == 0 ? 1 : $6 << 24 >> 24 != $7 << 24 >> 24));
  $$lcssa = $6;
  $$lcssa2 = $7;
 }
 return ($$lcssa & 255) - ($$lcssa2 & 255) | 0;
}

function __ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 2892;
 $4 = $this + ($2 + 64) | 0;
 HEAP32[$4 >> 2] = 2932;
 HEAP32[$this + ($2 + 8) >> 2] = 2912;
 $6 = $this + ($2 + 12) | 0;
 HEAP32[$6 >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + ($2 + 44) | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($6);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 return;
}

function __ZNSt3__18ios_base4InitD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 __THREW__ = 0;
 invoke_ii(69, 8496) | 0;
 $0 = __THREW__;
 __THREW__ = 0;
 if (!($0 & 1)) {
  __THREW__ = 0;
  invoke_ii(69, 8664) | 0;
  $2 = __THREW__;
  __THREW__ = 0;
  if (!($2 & 1)) {
   __THREW__ = 0;
   invoke_ii(72, 8836) | 0;
   $4 = __THREW__;
   __THREW__ = 0;
   if (!($4 & 1)) {
    __THREW__ = 0;
    invoke_ii(72, 9004) | 0;
    $6 = __THREW__;
    __THREW__ = 0;
    if (!($6 & 1)) return;
   }
  }
 }
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3640;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function _wmemmove($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$025 = 0, $$07 = 0, $$16 = 0, $$in = 0, $5 = 0;
 $5 = ($n | 0) == 0;
 if ($d - $s >> 2 >>> 0 < $n >>> 0) {
  if (!$5) {
   $$in = $n;
   do {
    $$in = $$in + -1 | 0;
    HEAP32[$d + ($$in << 2) >> 2] = HEAP32[$s + ($$in << 2) >> 2];
   } while (($$in | 0) != 0);
  }
 } else if (!$5) {
  $$025 = $s;
  $$07 = $d;
  $$16 = $n;
  while (1) {
   $$16 = $$16 + -1 | 0;
   HEAP32[$$07 >> 2] = HEAP32[$$025 >> 2];
   if (!$$16) break; else {
    $$025 = $$025 + 4 | 0;
    $$07 = $$07 + 4 | 0;
   }
  }
 }
 return $d | 0;
}

function __ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11232) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) __ZNSt3__121__throw_runtime_errorEPKc(60784);
 return;
}

function __ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11224) | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = $0;
 $6 = $this + 44 | 0;
 HEAP32[$6 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP8[$this + 53 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 if ((HEAP32[$6 >> 2] | 0) > 8) __ZNSt3__121__throw_runtime_errorEPKc(60784);
 return;
}

function __ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3656;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierN12_GLOBAL__N_116HeapSimpleObject5FieldEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 20 | 0, HEAP32[$this + 24 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_111HeapClosureD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3688;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 32 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3640;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 8 | 0, HEAP32[$this + 12 >> 2] | 0);
 return;
}

function __ZNKSt3__17collateIwE7do_hashEPKwS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $3 = 0, $4 = 0, $7 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0;
 if (($__lo | 0) == ($__hi | 0)) $__h$0$lcssa = 0; else {
  $__h$02 = 0;
  $__p$01 = $__lo;
  while (1) {
   $3 = (HEAP32[$__p$01 >> 2] | 0) + ($__h$02 << 4) | 0;
   $4 = $3 & -268435456;
   $7 = ($4 >>> 24 | $4) ^ $3;
   $__p$01 = $__p$01 + 4 | 0;
   if (($__p$01 | 0) == ($__hi | 0)) {
    $__h$0$lcssa = $7;
    break;
   } else $__h$02 = $7;
  }
 }
 return $__h$0$lcssa | 0;
}

function __ZNKSt3__17collateIcE7do_hashEPKcS3_($this, $__lo, $__hi) {
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 var $4 = 0, $5 = 0, $8 = 0, $__h$0$lcssa = 0, $__h$02 = 0, $__p$01 = 0;
 if (($__lo | 0) == ($__hi | 0)) $__h$0$lcssa = 0; else {
  $__h$02 = 0;
  $__p$01 = $__lo;
  while (1) {
   $4 = (HEAP8[$__p$01 >> 0] | 0) + ($__h$02 << 4) | 0;
   $5 = $4 & -268435456;
   $8 = ($5 >>> 24 | $5) ^ $4;
   $__p$01 = $__p$01 + 1 | 0;
   if (($__p$01 | 0) == ($__hi | 0)) {
    $__h$0$lcssa = $8;
    break;
   } else $__h$02 = $8;
  }
 }
 return $__h$0$lcssa | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$015 = 0, $$06 = 0, $2 = 0, $4 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$015 = $low;
  $$06 = $dest;
  while (1) {
   $4 = HEAP32[$$015 >> 2] | 0;
   HEAP8[$$06 >> 0] = $4 >>> 0 < 128 ? $4 & 255 : $dfault;
   $$015 = $$015 + 4 | 0;
   if (($$015 | 0) == ($high | 0)) break; else $$06 = $$06 + 1 | 0;
  }
 }
 return $low + ($2 << 2) | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0$i$i = 0, $1 = 0;
 if ($__n >>> 0 > 1073741823) __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this);
 $1 = $this + 128 | 0;
 if ($__n >>> 0 < 29 & (HEAP8[$1 >> 0] | 0) == 0) {
  HEAP8[$1 >> 0] = 1;
  $$0$i$i = $this + 16 | 0;
 } else $$0$i$i = __Znwj($__n << 2) | 0;
 HEAP32[$this + 4 >> 2] = $$0$i$i;
 HEAP32[$this >> 2] = $$0$i$i;
 HEAP32[$this + 8 >> 2] = $$0$i$i + ($__n << 2);
 return;
}

function __ZSt9terminatev() {
 var $0 = 0, $1 = 0, $19 = 0, $21 = 0, $4 = 0, $7 = 0;
 __THREW__ = 0;
 $0 = invoke_i(1) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $21 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($21);
 }
 if ($0) {
  $4 = HEAP32[$0 >> 2] | 0;
  if ($4) {
   $7 = $4 + 48 | 0;
   if ((HEAP32[$7 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$7 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$4 + 12 >> 2] | 0);
  }
 }
 $19 = HEAP32[968] | 0;
 HEAP32[968] = $19 + 0;
 __ZSt11__terminatePFvvE($19);
}

function ___stdout_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer = sp;
 HEAP32[$f + 36 >> 2] = 7;
 if (!(HEAP32[$f >> 2] & 64)) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 21505;
  HEAP32[$vararg_buffer + 8 >> 2] = sp + 12;
  if (___syscall54(54, $vararg_buffer | 0) | 0) HEAP8[$f + 75 >> 0] = -1;
 }
 $9 = ___stdio_write($f, $buf, $len) | 0;
 STACKTOP = sp;
 return $9 | 0;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $7 = 0, $9 = 0;
 HEAP32[$this >> 2] = 11248;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 __THREW__ = 0;
 $2 = invoke_i(2) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 do if (!($3 & 1)) {
  if (($1 | 0) != ($2 | 0)) {
   __THREW__ = 0;
   invoke_vi(186, HEAP32[$0 >> 2] | 0);
   $7 = __THREW__;
   __THREW__ = 0;
   if ($7 & 1) break;
  }
  return;
 } while (0);
 $9 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($9);
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
 return;
}

function _fwrite($src, $size, $nmemb, $f) {
 $src = $src | 0;
 $size = $size | 0;
 $nmemb = $nmemb | 0;
 $f = $f | 0;
 var $0 = 0, $10 = 0, $6 = 0, $8 = 0, $phitmp = 0;
 $0 = Math_imul($nmemb, $size) | 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($f) | 0) == 0;
  $6 = ___fwritex($src, $0, $f) | 0;
  if ($phitmp) $8 = $6; else {
   ___unlockfile($f);
   $8 = $6;
  }
 } else $8 = ___fwritex($src, $0, $f) | 0;
 if (($8 | 0) == ($0 | 0)) $10 = $nmemb; else $10 = ($8 >>> 0) / ($size >>> 0) | 0;
 return $10 | 0;
}

function __Znwj($size) {
 $size = $size | 0;
 var $$lcssa = 0, $$size = 0, $1 = 0, $3 = 0, $5 = 0, $7 = 0;
 $$size = ($size | 0) == 0 ? 1 : $size;
 $1 = _malloc($$size) | 0;
 L1 : do if (!$1) {
  while (1) {
   $3 = __ZSt15get_new_handlerv() | 0;
   if (!$3) break;
   FUNCTION_TABLE_v[$3 & 7]();
   $5 = _malloc($$size) | 0;
   if ($5) {
    $$lcssa = $5;
    break L1;
   }
  }
  $7 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$7 >> 2] = 3884;
  ___cxa_throw($7 | 0, 608, 77);
 } else $$lcssa = $1; while (0);
 return $$lcssa | 0;
}

function __ZNKSt3__15ctypeIwE10do_toupperEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$04 = 0, $2 = 0, $4 = 0, $8 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$04 = $low;
  do {
   $4 = HEAP32[$$04 >> 2] | 0;
   if ($4 >>> 0 < 128) $8 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($4 << 2) >> 2] | 0; else $8 = $4;
   HEAP32[$$04 >> 2] = $8;
   $$04 = $$04 + 4 | 0;
  } while (($$04 | 0) != ($high | 0));
 }
 return $low + ($2 << 2) | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEPwPKw($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$04 = 0, $2 = 0, $4 = 0, $8 = 0;
 $2 = ($high - $low | 0) >>> 2;
 if (($low | 0) != ($high | 0)) {
  $$04 = $low;
  do {
   $4 = HEAP32[$$04 >> 2] | 0;
   if ($4 >>> 0 < 128) $8 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($4 << 2) >> 2] | 0; else $8 = $4;
   HEAP32[$$04 >> 2] = $8;
   $$04 = $$04 + 4 | 0;
  } while (($$04 | 0) != ($high | 0));
 }
 return $low + ($2 << 2) | 0;
}

function ___string_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $0 = 0, $1 = 0, $11 = 0, $2 = 0, $3 = 0, $k$0 = 0, $k$0$len = 0;
 $0 = $f + 84 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $len + 256 | 0;
 $3 = _memchr($1, 0, $2) | 0;
 $k$0 = ($3 | 0) == 0 ? $2 : $3 - $1 | 0;
 $k$0$len = $k$0 >>> 0 < $len >>> 0 ? $k$0 : $len;
 _memcpy($buf | 0, $1 | 0, $k$0$len | 0) | 0;
 HEAP32[$f + 4 >> 2] = $1 + $k$0$len;
 $11 = $1 + $k$0 | 0;
 HEAP32[$f + 8 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 return $k$0$len | 0;
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 2892;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 2932;
 HEAP32[$0 + 8 >> 2] = 2912;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 __ZdlPv($0);
 return;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 var $0 = 0, $12 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 FUNCTION_TABLE_viii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 31]($0, $this, $code);
 if ((HEAP32[$0 + 4 >> 2] | 0) == (HEAP32[$condition + 4 >> 2] | 0)) $12 = (HEAP32[$0 >> 2] | 0) == (HEAP32[$condition >> 2] | 0); else $12 = 0;
 STACKTOP = sp;
 return $12 | 0;
}

function dynCall_viiiiiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 a12 = a12 | 0;
 a13 = a13 | 0;
 a14 = a14 | 0;
 a15 = a15 | 0;
 FUNCTION_TABLE_viiiiiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0, a12 | 0, a13 | 0, a14 | 0, a15 | 0);
}

function __ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 2892;
 $1 = $0 + 64 | 0;
 HEAP32[$1 >> 2] = 2932;
 HEAP32[$0 + 8 >> 2] = 2912;
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($3);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($1);
 return;
}

function __ZNSt3__18ios_base4initEPv($this, $sb) {
 $this = $this | 0;
 $sb = $sb | 0;
 var $8 = 0, dest = 0, stop = 0;
 HEAP32[$this + 24 >> 2] = $sb;
 HEAP32[$this + 16 >> 2] = ($sb | 0) == 0 & 1;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 4098;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 6;
 $8 = $this + 28 | 0;
 dest = $this + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__16localeC2Ev($8);
 return;
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0;
 HEAP32[$this >> 2] = 2892;
 $0 = $this + 64 | 0;
 HEAP32[$0 >> 2] = 2932;
 HEAP32[$this + 8 >> 2] = 2912;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc($this, $low, $high, $dfault, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dfault = $dfault | 0;
 $dest = $dest | 0;
 var $$013 = 0, $$04 = 0, $1 = 0;
 if (($low | 0) != ($high | 0)) {
  $$013 = $low;
  $$04 = $dest;
  while (1) {
   $1 = HEAP8[$$013 >> 0] | 0;
   HEAP8[$$04 >> 0] = $1 << 24 >> 24 > -1 ? $1 : $dfault;
   $$013 = $$013 + 1 | 0;
   if (($$013 | 0) == ($high | 0)) break; else $$04 = $$04 + 1 | 0;
  }
 }
 return $high | 0;
}

function __ZNKSt3__120__time_get_c_storageIcE3__rEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[2608] | 0)) if (___cxa_guard_acquire(2608) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 14608, 63245, 11);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(2608);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(197, 14608, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2608);
   break;
  }
 } while (0);
 return 14608;
}

function __ZNKSt3__120__time_get_c_storageIcE3__cEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[2592] | 0)) if (___cxa_guard_acquire(2592) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 14500, 63224, 20);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(2592);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(197, 14500, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2592);
   break;
  }
 } while (0);
 return 14500;
}

function __ZNKSt3__120__time_get_c_storageIcE3__xEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[2560] | 0)) if (___cxa_guard_acquire(2560) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 14380, 63206, 8);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(2560);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(197, 14380, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2560);
   break;
  }
 } while (0);
 return 14380;
}

function __ZNKSt3__120__time_get_c_storageIcE3__XEv($this) {
 $this = $this | 0;
 var $4 = 0, $6 = 0;
 do if (!(HEAP8[2576] | 0)) if (___cxa_guard_acquire(2576) | 0) {
  __THREW__ = 0;
  invoke_viii(3, 14440, 63215, 8);
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $6 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(2576);
   ___resumeException($6 | 0);
  } else {
   ___cxa_atexit(197, 14440, ___dso_handle | 0) | 0;
   ___cxa_guard_release(2576);
   break;
  }
 } while (0);
 return 14440;
}

function __ZNKSt3__15ctypeIcE10do_tolowerEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$02 = 0, $1 = 0, $7 = 0;
 if (($low | 0) != ($high | 0)) {
  $$02 = $low;
  do {
   $1 = HEAP8[$$02 >> 0] | 0;
   if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
   HEAP8[$$02 >> 0] = $7;
   $$02 = $$02 + 1 | 0;
  } while (($$02 | 0) != ($high | 0));
 }
 return $high | 0;
}

function ___towrite($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = HEAP32[$f >> 2] | 0;
 if (!($6 & 8)) {
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $13 = HEAP32[$f + 44 >> 2] | 0;
  HEAP32[$f + 28 >> 2] = $13;
  HEAP32[$f + 20 >> 2] = $13;
  HEAP32[$f + 16 >> 2] = $13 + (HEAP32[$f + 48 >> 2] | 0);
  $$0 = 0;
 } else {
  HEAP32[$f >> 2] = $6 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__18ios_baseD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0;
 HEAP32[$this >> 2] = 10012;
 __THREW__ = 0;
 invoke_vii(70, $this | 0, 0);
 $0 = __THREW__;
 __THREW__ = 0;
 if ($0 & 1) {
  $11 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($11);
 } else {
  __ZNSt3__16localeD2Ev($this + 28 | 0);
  _free(HEAP32[$this + 32 >> 2] | 0);
  _free(HEAP32[$this + 36 >> 2] | 0);
  _free(HEAP32[$this + 48 >> 2] | 0);
  _free(HEAP32[$this + 60 >> 2] | 0);
  return;
 }
}

function __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, $__nd) {
 $this = $this | 0;
 $__nd = $__nd | 0;
 if (!$__nd) return; else {
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd >> 2] | 0);
  __ZNSt3__16__treeIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$__nd + 4 >> 2] | 0);
  __ZdlPv($__nd);
  return;
 }
}

function __ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0;
 HEAP32[$this >> 2] = 2892;
 $0 = $this + 64 | 0;
 HEAP32[$0 >> 2] = 2932;
 HEAP32[$this + 8 >> 2] = 2912;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 44 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($2);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}
function __ZNKSt3__15ctypeIcE10do_toupperEPcPKc($this, $low, $high) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 var $$02 = 0, $1 = 0, $7 = 0;
 if (($low | 0) != ($high | 0)) {
  $$02 = $low;
  do {
   $1 = HEAP8[$$02 >> 0] | 0;
   if ($1 << 24 >> 24 > -1) $7 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($1 << 24 >> 24 << 2) >> 2] & 255; else $7 = $1;
   HEAP8[$$02 >> 0] = $7;
   $$02 = $$02 + 1 | 0;
  } while (($$02 | 0) != ($high | 0));
 }
 return $high | 0;
}

function _vsscanf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $4 = 0, $f = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 dest = $f;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$f + 32 >> 2] = 41;
 HEAP32[$f + 44 >> 2] = $s;
 HEAP32[$f + 76 >> 2] = -1;
 HEAP32[$f + 84 >> 2] = $s;
 $4 = _vfscanf($f, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function _jsonlang_realloc($vm, $str, $sz) {
 $vm = $vm | 0;
 $str = $str | 0;
 $sz = $sz | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $4 = 0;
 $1 = ($sz | 0) == 0;
 if (!$str) {
  if ($1) {
   $$0 = 0;
   return $$0 | 0;
  }
  $2 = _malloc($sz) | 0;
  if (!$2) __ZL12memory_panicv(); else {
   $$0 = $2;
   return $$0 | 0;
  }
 }
 if ($1) {
  _free($str);
  $$0 = 0;
  return $$0 | 0;
 }
 $4 = _realloc($str, $sz) | 0;
 if (!$4) __ZL12memory_panicv(); else {
  $$0 = $4;
  return $$0 | 0;
 }
 return 0;
}

function _calloc($n_elements, $elem_size) {
 $n_elements = $n_elements | 0;
 $elem_size = $elem_size | 0;
 var $1 = 0, $6 = 0, $req$0 = 0;
 if (!$n_elements) $req$0 = 0; else {
  $1 = Math_imul($elem_size, $n_elements) | 0;
  if (($elem_size | $n_elements) >>> 0 > 65535) $req$0 = (($1 >>> 0) / ($n_elements >>> 0) | 0 | 0) == ($elem_size | 0) ? $1 : -1; else $req$0 = $1;
 }
 $6 = _malloc($req$0) | 0;
 if ($6) if (HEAP32[$6 + -4 >> 2] & 3) _memset($6 | 0, 0, $req$0 | 0) | 0;
 return $6 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 if (!(HEAP8[$__str >> 0] & 1)) {
  HEAP32[$this >> 2] = HEAP32[$__str >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$__str + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$__str + 8 >> 2];
 } else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($this, HEAP32[$__str + 8 >> 2] | 0, HEAP32[$__str + 4 >> 2] | 0);
 return;
}

function __ZNSt3__110__time_putD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $6 = 0, $8 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 __THREW__ = 0;
 $1 = invoke_i(2) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 do if (!($2 & 1)) {
  if (($0 | 0) != ($1 | 0)) {
   __THREW__ = 0;
   invoke_vi(186, HEAP32[$this >> 2] | 0);
   $6 = __THREW__;
   __THREW__ = 0;
   if ($6 & 1) break;
  }
  return;
 } while (0);
 $8 = ___cxa_find_matching_catch(0) | 0;
 ___clang_call_terminate($8);
}

function ___cxa_can_catch($catchType, $excpType, $thrown) {
 $catchType = $catchType | 0;
 $excpType = $excpType | 0;
 $thrown = $thrown | 0;
 var $4 = 0, $temp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $temp = sp;
 HEAP32[$temp >> 2] = HEAP32[$thrown >> 2];
 $4 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$catchType >> 2] | 0) + 16 >> 2] & 63]($catchType, $excpType, $temp) | 0;
 if ($4) HEAP32[$thrown >> 2] = HEAP32[$temp >> 2];
 STACKTOP = sp;
 return $4 & 1 | 0;
}

function __ZNSt3__18ios_base16__call_callbacksENS0_5eventE($this, $ev) {
 $this = $this | 0;
 $ev = $ev | 0;
 var $1 = 0, $2 = 0, $3 = 0, $i$01 = 0;
 $1 = HEAP32[$this + 40 >> 2] | 0;
 $2 = $this + 32 | 0;
 $3 = $this + 36 | 0;
 if ($1) {
  $i$01 = $1;
  do {
   $i$01 = $i$01 + -1 | 0;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$2 >> 2] | 0) + ($i$01 << 2) >> 2] & 31]($ev, $this, HEAP32[(HEAP32[$3 >> 2] | 0) + ($i$01 << 2) >> 2] | 0);
  } while (($i$01 | 0) != 0);
 }
 return;
}

function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[ptr + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[ptr + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[ptr + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[ptr + 7 >> 0];
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_($this, $__str) {
 $this = $this | 0;
 $__str = $__str | 0;
 var $1 = 0, $3 = 0;
 if (($this | 0) != ($__str | 0)) {
  $1 = HEAP8[$__str >> 0] | 0;
  $3 = ($1 & 1) == 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $3 ? $__str + 1 | 0 : HEAP32[$__str + 8 >> 2] | 0, $3 ? ($1 & 255) >>> 1 : HEAP32[$__str + 4 >> 2] | 0) | 0;
 }
 return $this | 0;
}

function __ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $10 = 0, $8 = 0;
 HEAP32[$this >> 2] = 3908;
 __THREW__ = 0;
 invoke_vii(107, $this + 4 | 0, ((HEAP8[$msg >> 0] & 1) == 0 ? $msg + 1 | 0 : HEAP32[$msg + 8 >> 2] | 0) | 0);
 $8 = __THREW__;
 __THREW__ = 0;
 if ($8 & 1) {
  $10 = ___cxa_find_matching_catch() | 0;
  ___resumeException($10 | 0);
 } else return;
}

function __ZNSt3__16__clocEv() {
 var $4 = 0, $5 = 0, $8 = 0;
 do if (!(HEAP8[1968] | 0)) if (___cxa_guard_acquire(1968) | 0) {
  __THREW__ = 0;
  $4 = invoke_iiii(42, 2147483647, 62835, 0) | 0;
  $5 = __THREW__;
  __THREW__ = 0;
  if ($5 & 1) {
   $8 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(1968);
   ___resumeException($8 | 0);
  } else {
   HEAP32[2932] = $4;
   ___cxa_guard_release(1968);
   break;
  }
 } while (0);
 return HEAP32[2932] | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($this, $__os) {
 $this = $this | 0;
 $__os = $__os | 0;
 var $3 = 0, $8 = 0;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 4 >> 2] = $__os;
 $3 = HEAP32[(HEAP32[$__os >> 2] | 0) + -12 >> 2] | 0;
 if (!(HEAP32[$__os + ($3 + 16) >> 2] | 0)) {
  $8 = HEAP32[$__os + ($3 + 72) >> 2] | 0;
  if ($8) __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv($8) | 0;
  HEAP8[$this >> 0] = 1;
 }
 return;
}

function __ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($__vp) {
 $__vp = $__vp | 0;
 var $$field = 0, $$field2 = 0, $0 = 0, $10 = 0, $3 = 0;
 $0 = $__vp + 4 | 0;
 $$field = HEAP32[$0 >> 2] | 0;
 $$field2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = (HEAP32[$__vp >> 2] | 0) + ($$field2 >> 1) | 0;
 if (!($$field2 & 1)) $10 = $$field; else $10 = HEAP32[(HEAP32[$3 >> 2] | 0) + $$field >> 2] | 0;
 FUNCTION_TABLE_vi[$10 & 255]($3);
 return;
}

function ___ftello_unlocked($f) {
 $f = $f | 0;
 var $$0 = 0, $10 = 0, $11 = 0;
 if (!(HEAP32[$f >> 2] & 128)) $10 = 1; else $10 = (HEAP32[$f + 20 >> 2] | 0) >>> 0 > (HEAP32[$f + 28 >> 2] | 0) >>> 0 ? 2 : 1;
 $11 = FUNCTION_TABLE_iiii[HEAP32[$f + 40 >> 2] & 63]($f, 0, $10) | 0;
 if (($11 | 0) < 0) $$0 = $11; else $$0 = $11 - (HEAP32[$f + 8 >> 2] | 0) + (HEAP32[$f + 4 >> 2] | 0) + (HEAP32[$f + 20 >> 2] | 0) - (HEAP32[$f + 28 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __ZN17ObjectCompositionD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN14LiteralBooleanD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN13LiteralNumberD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN11LiteralNullD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN11ConditionalD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
 return;
}

function __ZN6BinaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5UnaryD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5SuperD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5IndexD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN5ErrorD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN4SelfD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, $4 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 $3 = $this + $2 | 0;
 HEAP32[$3 >> 2] = 3764;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 3784;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 __ZdlPv($3);
 return;
}

function __ZN3VarD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZN3ASTD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function __ZNSt3__16locale8__globalEv() {
 var $4 = 0, $7 = 0;
 do if (!(HEAP8[2456] | 0)) if (___cxa_guard_acquire(2456) | 0) {
  __THREW__ = 0;
  invoke_i(4) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(2456);
   ___resumeException($7 | 0);
  } else {
   HEAP32[2984] = 11932;
   ___cxa_guard_release(2456);
   break;
  }
 } while (0);
 return HEAP32[2984] | 0;
}

function __ZNSt3__16locale7classicEv() {
 var $4 = 0, $7 = 0;
 do if (!(HEAP8[2288] | 0)) if (___cxa_guard_acquire(2288) | 0) {
  __THREW__ = 0;
  invoke_i(3) | 0;
  $4 = __THREW__;
  __THREW__ = 0;
  if ($4 & 1) {
   $7 = ___cxa_find_matching_catch() | 0;
   ___cxa_guard_abort(2288);
   ___resumeException($7 | 0);
  } else {
   HEAP32[2982] = 11924;
   ___cxa_guard_release(2288);
   break;
  }
 } while (0);
 return HEAP32[2982] | 0;
}

function __ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 var $0 = 0, $1 = 0, $2 = 0, $4 = 0;
 $0 = _strlen($__s) | 0;
 __THREW__ = 0;
 $1 = invoke_iiiiii(25, $this | 0, 0, -1, $__s | 0, $0 | 0) | 0;
 $2 = __THREW__;
 __THREW__ = 0;
 if ($2 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return $1 | 0;
 return 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $__sp, $__wch) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__sp = $__sp | 0;
 $__wch = $__wch | 0;
 var $4 = 0;
 $4 = $__sp + 8 | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] & 15]($agg$result, $this, HEAP32[$4 >> 2] | 0, HEAP32[$4 + 4 >> 2] | 0, 0, $__wch);
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$012 = 0, $$03 = 0;
 if (($low | 0) != ($high | 0)) {
  $$012 = $low;
  $$03 = $dest;
  while (1) {
   HEAP8[$$03 >> 0] = HEAP8[$$012 >> 0] | 0;
   $$012 = $$012 + 1 | 0;
   if (($$012 | 0) == ($high | 0)) break; else $$03 = $$03 + 1 | 0;
  }
 }
 return $high | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw($this, $low, $high, $dest) {
 $this = $this | 0;
 $low = $low | 0;
 $high = $high | 0;
 $dest = $dest | 0;
 var $$012 = 0, $$03 = 0;
 if (($low | 0) != ($high | 0)) {
  $$012 = $low;
  $$03 = $dest;
  while (1) {
   HEAP32[$$03 >> 2] = HEAP8[$$012 >> 0];
   $$012 = $$012 + 1 | 0;
   if (($$012 | 0) == ($high | 0)) break; else $$03 = $$03 + 4 | 0;
  }
 }
 return $high | 0;
}

function __ZN3ASTD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $3 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3192;
 $1 = HEAP32[$this + 36 >> 2] | 0;
 $3 = $1;
 if ($1) {
  $4 = $this + 40 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $3 | 0) >>> 2) << 2);
  __ZdlPv($1);
 }
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11232) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function __ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE($this, $__loc) {
 $this = $this | 0;
 $__loc = $__loc | 0;
 var $3 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 127]($this) | 0;
 $3 = __ZNKSt3__16locale9use_facetERNS0_2idE($__loc, 11224) | 0;
 HEAP32[$this + 36 >> 2] = $3;
 HEAP8[$this + 44 >> 0] = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 28 >> 2] & 127]($3) | 0) & 1;
 return;
}

function _copysign($x, $y) {
 $x = +$x;
 $y = +$y;
 var $0 = 0, $1 = 0, $6 = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $6 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $1 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $0;
 HEAP32[tempDoublePtr + 4 >> 2] = $6;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNSt3__17codecvtIwc11__mbstate_tEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $2 = 0, $3 = 0, $6 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 11248;
 __THREW__ = 0;
 $2 = invoke_i(2) | 0;
 $3 = __THREW__;
 __THREW__ = 0;
 if ($3 & 1) {
  $6 = ___cxa_find_matching_catch() | 0;
  ___resumeException($6 | 0);
 } else {
  HEAP32[$this + 8 >> 2] = $2;
  return;
 }
}

function __ZNSt3__16locale2id5__getEv($this) {
 $this = $this | 0;
 var $__p$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__p$i = sp;
 if ((HEAP32[$this >> 2] | 0) != -1) {
  HEAP32[$__p$i >> 2] = $this;
  HEAP32[$__p$i + 4 >> 2] = 189;
  HEAP32[$__p$i + 8 >> 2] = 0;
  __ZNSt3__111__call_onceERVmPvPFvS2_E($this, $__p$i, 190);
 }
 STACKTOP = sp;
 return (HEAP32[$this + 4 >> 2] | 0) + -1 | 0;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($agg$result, $this, $0, $1, $2, $3) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $agg$result;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $agg$result + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpEENS_19__map_value_compareIS7_S9_NS_4lessIS7_EELb1EEENS5_IS9_EEE7destroyEPNS_11__tree_nodeIS9_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function ___uflow($f) {
 $f = $f | 0;
 var $$0 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 if (!(HEAP32[$f + 8 >> 2] | 0)) if (!(___toread($f) | 0)) label = 3; else $$0 = -1; else label = 3;
 if ((label | 0) == 3) if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 63]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function dynCall_iiiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 a11 = a11 | 0;
 return FUNCTION_TABLE_iiiiiiiiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0, a11 | 0) | 0;
}

function __ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $2 = 0, $4 = 0;
 $2 = HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0;
 HEAP32[$this + $2 >> 2] = 3764;
 $4 = $this + ($2 + 108) | 0;
 HEAP32[$4 >> 2] = 3784;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + ($2 + 8) | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($4);
 return;
}

function ___fseeko($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 var $5 = 0, $6 = 0, $phitmp = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($f) | 0) == 0;
  $5 = ___fseeko_unlocked($f, $off, $whence) | 0;
  if ($phitmp) $6 = $5; else {
   ___unlockfile($f);
   $6 = $5;
  }
 } else $6 = ___fseeko_unlocked($f, $off, $whence) | 0;
 return $6 | 0;
}

function __ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE18__construct_at_endEj($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 $$0 = $__n;
 $1 = HEAP32[$0 >> 2] | 0;
 do {
  HEAP32[$1 >> 2] = 0;
  $1 = (HEAP32[$0 >> 2] | 0) + 4 | 0;
  HEAP32[$0 >> 2] = $1;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZNSt3__16localeC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(5) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else {
  $3 = HEAP32[$0 >> 2] | 0;
  HEAP32[$this >> 2] = $3;
  __ZNSt3__114__shared_count12__add_sharedEv($3);
  return;
 }
}

function _newlocale($mask, $name, $base) {
 $mask = $mask | 0;
 $name = $name | 0;
 $base = $base | 0;
 var $$01 = 0, label = 0;
 if (!(HEAP8[$name >> 0] | 0)) label = 4; else if (!(_strcmp($name, 62835) | 0)) label = 4; else if (!(_strcmp($name, 58142) | 0)) label = 4; else $$01 = 0;
 if ((label | 0) == 4) if (!$base) $$01 = _calloc(1, 4) | 0; else $$01 = $base;
 return $$01 | 0;
}

function __ZNSt3__121__throw_runtime_errorEPKc($msg) {
 $msg = $msg | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = ___cxa_allocate_exception(8) | 0;
 __THREW__ = 0;
 invoke_vii(72, $0 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___cxa_free_exception($0 | 0);
  ___resumeException($3 | 0);
 } else ___cxa_throw($0 | 0, 632, 79);
}

function __ZN12_GLOBAL__N_19HeapArrayD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3704;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) {
  __ZdlPv($this);
  return;
 }
 $4 = $this + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($agg$result, $this, $0, $1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0;
 $2 = $agg$result;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 $7 = $agg$result + 8 | 0;
 HEAP32[$7 >> 2] = -1;
 HEAP32[$7 + 4 >> 2] = -1;
 return;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 4;
  $$0 = HEAP32[$6 >> 2] | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv($this) {
 $this = $this | 0;
 var $$0 = 0, $5 = 0, $6 = 0;
 if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 36 >> 2] & 127]($this) | 0) == -1) $$0 = -1; else {
  $5 = $this + 12 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $6 + 1;
  $$0 = HEAPU8[$6 >> 0] | 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__119__iostream_category7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 if (($ev | 0) != 1 & ($ev | 0) < 257) __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev); else __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 61412, 35);
 return;
}

function __ZNKSt3__17collateIwE12do_transformEPKwS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function __ZNKSt3__17collateIcE12do_transformEPKcS3_($agg$result, $this, $__lo, $__hi) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__lo = $__lo | 0;
 $__hi = $__hi | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($agg$result, $__lo, $__hi);
 return;
}

function dynCall_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 a9 = a9 | 0;
 a10 = a10 | 0;
 FUNCTION_TABLE_viiiiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0, a9 | 0, a10 | 0);
}

function __ZNSt3__118__libcpp_refstringC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $0 = 0, $2 = 0, $5 = 0;
 $0 = _strlen($msg) | 0;
 $2 = __Znwj($0 + 13 | 0) | 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$2 + 4 >> 2] = $0;
 HEAP32[$2 + 8 >> 2] = 0;
 $5 = $2 + 12 | 0;
 _memcpy($5 | 0, $msg | 0, $0 + 1 | 0) | 0;
 HEAP32[$this >> 2] = $5;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 9768;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 9704;
 __ZNSt3__16localeC2Ev($this + 4 | 0);
 $1 = $this + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZNKSt3__16locale5__imp9use_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $1 = 0;
 if (__ZNKSt3__16locale5__imp9has_facetEl($this, $id) | 0) return HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($id << 2) >> 2] | 0; else {
  $1 = ___cxa_allocate_exception(4) | 0;
  __ZNSt8bad_castC2Ev($1);
  ___cxa_throw($1 | 0, 656, 81);
 }
 return 0;
}

function __ZN12_GLOBAL__N_19HeapThunkD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3592;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 __ZdlPv($this);
 return;
}

function _wmemcpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$014 = 0, $$023 = 0, $$05 = 0;
 if ($n) {
  $$014 = $n;
  $$023 = $s;
  $$05 = $d;
  while (1) {
   $$014 = $$014 + -1 | 0;
   HEAP32[$$05 >> 2] = HEAP32[$$023 >> 2];
   if (!$$014) break; else {
    $$023 = $$023 + 4 | 0;
    $$05 = $$05 + 4 | 0;
   }
  }
 }
 return $d | 0;
}

function _init_mparams() {
 var $2 = 0;
 do if (!(HEAP32[1202] | 0)) {
  $2 = _sysconf(30) | 0;
  if (!($2 + -1 & $2)) {
   HEAP32[1204] = $2;
   HEAP32[1203] = $2;
   HEAP32[1205] = -1;
   HEAP32[1206] = -1;
   HEAP32[1207] = 0;
   HEAP32[1195] = 0;
   HEAP32[1202] = (_time(0) | 0) & -16 ^ 1431655768;
   break;
  } else _abort();
 } while (0);
 return;
}

function ___shlim($f, $lim) {
 $f = $f | 0;
 $lim = $lim | 0;
 var $4 = 0, $5 = 0, $7 = 0;
 HEAP32[$f + 104 >> 2] = $lim;
 $4 = HEAP32[$f + 4 >> 2] | 0;
 $5 = HEAP32[$f + 8 >> 2] | 0;
 $7 = $5 - $4 | 0;
 HEAP32[$f + 108 >> 2] = $7;
 if (($lim | 0) != 0 & ($7 | 0) > ($lim | 0)) HEAP32[$f + 100 >> 2] = $4 + $lim; else HEAP32[$f + 100 >> 2] = $5;
 return;
}

function __ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$__nm >> 0] & 1) == 0 ? $__nm + 1 | 0 : HEAP32[$__nm + 8 >> 2] | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($this, $__nm, $0) {
 $this = $this | 0;
 $__nm = $__nm | 0;
 $0 = $0 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$__nm >> 0] & 1) == 0 ? $__nm + 1 | 0 : HEAP32[$__nm + 8 >> 2] | 0, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($this, $0, $frm, $1, $frm_nxt, $to, $2, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $1 = $1 | 0;
 $frm_nxt = $frm_nxt | 0;
 $to = $to | 0;
 $2 = $2 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$frm_nxt >> 2] = $frm;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function _sn_write($f, $s, $l) {
 $f = $f | 0;
 $s = $s | 0;
 $l = $l | 0;
 var $2 = 0, $3 = 0, $6 = 0, $l$ = 0;
 $2 = $f + 20 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $6 = (HEAP32[$f + 16 >> 2] | 0) - $3 | 0;
 $l$ = $6 >>> 0 > $l >>> 0 ? $l : $6;
 _memcpy($3 | 0, $s | 0, $l$ | 0) | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $l$;
 return $l | 0;
}

function __ZN12_GLOBAL__N_19HeapThunkD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3592;
 __ZNSt3__16__treeINS_12__value_typeIPK10IdentifierPN12_GLOBAL__N_19HeapThunkEEENS_19__map_value_compareIS4_S8_NS_4lessIS4_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($this + 28 | 0, HEAP32[$this + 32 >> 2] | 0);
 return;
}

function __ZNSt3__18numpunctIwEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 11368;
 HEAP32[$this + 8 >> 2] = 46;
 HEAP32[$this + 12 >> 2] = 44;
 $4 = $this + 16 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 return;
}

function __ZN12_GLOBAL__N_19HeapArrayD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0, $5 = 0;
 HEAP32[$this >> 2] = 3704;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if (!$1) return;
 $4 = $this + 12 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) != ($1 | 0)) HEAP32[$4 >> 2] = $5 + (~(($5 + -4 - $1 | 0) >>> 2) << 2);
 __ZdlPv($1);
 return;
}

function __ZNSt3__18numpunctIcEC2Ej($this, $refs) {
 $this = $this | 0;
 $refs = $refs | 0;
 var $4 = 0;
 HEAP32[$this + 4 >> 2] = $refs + -1;
 HEAP32[$this >> 2] = 11328;
 HEAP8[$this + 8 >> 0] = 46;
 HEAP8[$this + 9 >> 0] = 44;
 $4 = $this + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 return;
}

function __ZNSt13runtime_errorC2EPKc($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $3 = 0;
 HEAP32[$this >> 2] = 3908;
 __THREW__ = 0;
 invoke_vii(107, $this + 4 | 0, $msg | 0);
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $3 = ___cxa_find_matching_catch() | 0;
  ___resumeException($3 | 0);
 } else return;
}

function _jsonlang_destroy($vm) {
 $vm = $vm | 0;
 if (!$vm) return;
 __ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE($vm + 24 | 0, HEAP32[$vm + 28 >> 2] | 0);
 __ZdlPv($vm);
 return;
}

function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP32[$this >> 2] = 3764;
 $0 = $this + 108 | 0;
 HEAP32[$0 >> 2] = 3784;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__114__shared_count16__release_sharedEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $1 + -1;
 if (!$1) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 255]($this);
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function __ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__16__treeINS_12__value_typeI8BinaryOpiEENS_19__map_value_compareIS2_S3_NS_4lessIS2_EELb1EEENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE($this, HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function __ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP32[$this >> 2] = 3764;
 $0 = $this + 108 | 0;
 HEAP32[$0 >> 2] = 3784;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this + 8 | 0);
 __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($0);
 return;
}

function b10(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 p11 = p11 | 0;
 p12 = p12 | 0;
 p13 = p13 | 0;
 p14 = p14 | 0;
 abort(10);
}

function _abort_message($format, $varargs) {
 $format = $format | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $list = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $list = sp;
 HEAP32[$list >> 2] = $varargs;
 $0 = HEAP32[1080] | 0;
 _vfprintf($0, $format, $list) | 0;
 _fputc(10, $0) | 0;
 _abort();
}

function _snprintf($s, $n, $fmt, $varargs) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsnprintf($s, $n, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__114__num_get_base10__get_baseERNS_8ios_baseE($iob) {
 $iob = $iob | 0;
 var $$0 = 0;
 switch (HEAP32[$iob + 4 >> 2] & 74 | 0) {
 case 64:
  {
   $$0 = 8;
   break;
  }
 case 8:
  {
   $$0 = 16;
   break;
  }
 case 0:
  {
   $$0 = 0;
   break;
  }
 default:
  $$0 = 10;
 }
 return $$0 | 0;
}

function ___stdio_close($f) {
 $f = $f | 0;
 var $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
 $3 = ___syscall_ret(___syscall6(6, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L20utf8_to_utf16_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $frm_end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $frm_end = $frm_end | 0;
 $mx = $mx | 0;
 return __ZNSt3__1L19utf8_to_ucs4_lengthEPKhS1_jmNS_12codecvt_modeE($frm, $frm_end, $mx, 1114111, 0) | 0;
}

function __ZNKSt3__112__do_message7messageEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 var $0 = 0;
 $0 = _strerror($ev) | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, $0, _strlen($0) | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc($this, $__pos, $__s) {
 $this = $this | 0;
 $__pos = $__pos | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKcj($this, $__pos, $__s, _strlen($__s) | 0) | 0;
}

function __ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 2988;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 32 | 0);
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 return;
}

function __ZNSt3__15ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(7) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function __ZNSt3__15ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(8) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function __ZNKSt3__16locale5__imp9has_facetEl($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $3 = 0;
 $3 = HEAP32[$this + 8 >> 2] | 0;
 if ((HEAP32[$this + 12 >> 2] | 0) - $3 >> 2 >>> 0 > $id >>> 0) $12 = (HEAP32[$3 + ($id << 2) >> 2] | 0) != 0; else $12 = 0;
 return $12 | 0;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function __ZNSt3__15ctypeIcE13classic_tableEv() {
 var $0 = 0, $1 = 0, $4 = 0;
 __THREW__ = 0;
 $0 = invoke_i(6) | 0;
 $1 = __THREW__;
 __THREW__ = 0;
 if ($1 & 1) {
  $4 = ___cxa_find_matching_catch(0) | 0;
  ___clang_call_terminate($4);
 } else return HEAP32[$0 >> 2] | 0;
 return 0;
}

function ___ftello($f) {
 $f = $f | 0;
 var $5 = 0, $6 = 0, $phitmp = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($f) | 0) == 0;
  $5 = ___ftello_unlocked($f) | 0;
  if ($phitmp) $6 = $5; else $6 = $5;
 } else $6 = ___ftello_unlocked($f) | 0;
 return $6 | 0;
}

function _sscanf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsscanf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0;
 return high >> bits - 32 | 0;
}

function _wmemset($d, $c, $n) {
 $d = $d | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$012 = 0, $$03 = 0;
 if ($n) {
  $$012 = $n;
  $$03 = $d;
  while (1) {
   $$012 = $$012 + -1 | 0;
   HEAP32[$$03 >> 2] = $c;
   if (!$$012) break; else $$03 = $$03 + 4 | 0;
  }
 }
 return $d | 0;
}

function __ZNKSt3__114error_category10equivalentERKNS_10error_codeEi($this, $code, $condition) {
 $this = $this | 0;
 $code = $code | 0;
 $condition = $condition | 0;
 return ((HEAP32[$code >> 2] | 0) == ($condition | 0) ? (HEAP32[$code + 4 >> 2] | 0) == ($this | 0) : 0) | 0;
}

function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_once(4064, 6) | 0)) {
  $3 = _pthread_getspecific(HEAP32[1015] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(55509, sp);
 return 0;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP8[$agg$result >> 0] = 2;
 HEAP8[$agg$result + 1 >> 0] = 3;
 HEAP8[$agg$result + 2 >> 0] = 0;
 HEAP8[$agg$result + 3 >> 0] = 4;
 return;
}

function __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0;
 $1 = (HEAP32[$this >> 2] | 0) + -4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $2 + -1;
 if (($2 + -1 | 0) < 0) __ZdlPv((HEAP32[$this >> 2] | 0) + -12 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11044) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11008) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10972) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10936) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10644) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10612) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10580) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10488) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10396) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10336) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10276) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10204) | 0);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j($this, $0, $frm, $end, $mx) {
 $this = $this | 0;
 $0 = $0 | 0;
 $frm = $frm | 0;
 $end = $end | 0;
 $mx = $mx | 0;
 var $3 = 0;
 $3 = $end - $frm | 0;
 return ($3 >>> 0 < $mx >>> 0 ? $3 : $mx) | 0;
}

function __ZNKSt3__15ctypeIwE5do_isEtw($this, $m, $c) {
 $this = $this | 0;
 $m = $m | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c >>> 0 < 128) $5 = (HEAP16[(__ZNSt3__15ctypeIcE13classic_tableEv() | 0) + ($c << 1) >> 1] & $m) << 16 >> 16 != 0; else $5 = 0;
 return $5 | 0;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($p) {
 $p = $p | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 _free($p);
 if (!(_pthread_setspecific(HEAP32[1015] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(55727, sp);
}

function __ZNKSt3__15ctypeIcE10do_tolowerEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c << 24 >> 24 > -1) $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 24 >> 24 << 2) >> 2] & 255; else $5 = $c;
 return $5 | 0;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwj($this, $__s, _wcslen($__s) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcj($this, $__s, _strlen($__s) | 0) | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc($this, $__s) {
 $this = $this | 0;
 $__s = $__s | 0;
 return __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj($this, $__s, _strlen($__s) | 0) | 0;
}

function dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 return FUNCTION_TABLE_iiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0) | 0;
}

function __ZNKSt3__15ctypeIcE10do_toupperEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $5 = 0;
 if ($c << 24 >> 24 > -1) $5 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + (($c & 255) << 2) >> 2] & 255; else $5 = $c;
 return $5 | 0;
}

function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
}

function dynCall_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 return FUNCTION_TABLE_iiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6) | 0;
}

function __ZNKSt3__18numpunctIwE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 11960, _wcslen(11960) | 0);
 return;
}

function __ZNKSt3__18numpunctIwE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj($agg$result, 11940, _wcslen(11940) | 0);
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__15ctypeIwE10do_toupperEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0;
 if ($c >>> 0 < 128) $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_upper_tableEv() | 0) + ($c << 2) >> 2] | 0; else $3 = $c;
 return $3 | 0;
}

function __ZNKSt3__15ctypeIwE10do_tolowerEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $3 = 0;
 if ($c >>> 0 < 128) $3 = HEAP32[(__ZNSt3__15ctypeIcE21__classic_lower_tableEv() | 0) + ($c << 2) >> 2] | 0; else $3 = $c;
 return $3 | 0;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__114error_category23default_error_conditionEi($agg$result, $this, $ev) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $ev = $ev | 0;
 HEAP32[$agg$result >> 2] = $ev;
 HEAP32[$agg$result + 4 >> 2] = $this;
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEjw($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEjc($agg$result, 1, 45);
 return;
}

function __ZNKSt3__18ios_base6getlocEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZNSt3__16localeC2ERKS0_($0, $this + 28 | 0);
 STACKTOP = sp;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNKSt3__110moneypunctIwLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIwLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb1EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNKSt3__110moneypunctIcLb0EE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 return;
}

function __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 16 | 0;
 HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 1;
 if (!(HEAP32[$this + 20 >> 2] & 1)) return; else ___cxa_rethrow();
}

function b8(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 p10 = p10 | 0;
 abort(8);
 return 0;
}

function __ZNKSt3__18numpunctIwE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 16 | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_groupingEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($agg$result, $this + 12 | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11288) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11296) | 0);
 return;
}

function __ZNKSt3__18numpunctIcE12do_falsenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 62979, 5);
 return;
}

function __ZN11StaticErrorD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 28 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11232) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11224) | 0);
 return;
}

function __ZNKSt3__18numpunctIcE11do_truenameEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj($agg$result, 62974, 4);
 return;
}

function __ZNSt3__117iostream_categoryEv() {
 if (!(HEAP8[1048] | 0)) if (___cxa_guard_acquire(1048) | 0) {
  HEAP32[2514] = 10028;
  ___cxa_atexit(109, 10056, ___dso_handle | 0) | 0;
  ___cxa_guard_release(1048);
 }
 return 10056;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($this, $0, $to, $1, $to_nxt) {
 $this = $this | 0;
 $0 = $0 | 0;
 $to = $to | 0;
 $1 = $1 | 0;
 $to_nxt = $to_nxt | 0;
 HEAP32[$to_nxt >> 2] = $to;
 return 3;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZNKSt3__16locale9use_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return __ZNKSt3__16locale5__imp9use_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
}

function __ZNKSt3__16locale9has_facetERNS0_2idE($this, $x) {
 $this = $this | 0;
 $x = $x | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return __ZNKSt3__16locale5__imp9has_facetEl($0, __ZNSt3__16locale2id5__getEv($x) | 0) | 0;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10900) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10836) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10772) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10708) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this + (HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(_pthread_key_create(4060, 182) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(55677, sp);
}

function dynCall_iiiiid(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = +a5;
 return FUNCTION_TABLE_iiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, +a5) | 0;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11312) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11304) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11124) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11084) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10132) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(10092) | 0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11156) | 0);
 return;
}

function __ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_($this, $f) {
 $this = $this | 0;
 $f = $f | 0;
 __ZNSt3__16locale5__imp7installEPNS0_5facetEl($this, $f, __ZNSt3__16locale2id5__getEv(11164) | 0);
 return;
}

function __ZN12_GLOBAL__N_110HeapStringD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3672;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16locale5__imp11make_globalEv() {
 var $1 = 0;
 $1 = HEAP32[(__ZNSt3__16locale7classicEv() | 0) >> 2] | 0;
 HEAP32[2983] = $1;
 __ZNSt3__114__shared_count12__add_sharedEv($1);
 return 11932;
}

function b14(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 p8 = p8 | 0;
 p9 = p9 | 0;
 abort(14);
}

function _wcslen($s) {
 $s = $s | 0;
 var $$0 = 0, $$0$lcssa = 0;
 $$0 = $s;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) {
  $$0$lcssa = $$0;
  break;
 } else $$0 = $$0 + 4 | 0;
 return $$0$lcssa - $s >> 2 | 0;
}

function runPostSets() {}
function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZNSt3__16localeC2ERKS0_($this, $l) {
 $this = $this | 0;
 $l = $l | 0;
 var $0 = 0;
 $0 = HEAP32[$l >> 2] | 0;
 HEAP32[$this >> 2] = $0;
 __ZNSt3__114__shared_count12__add_sharedEv($0);
 return;
}

function __ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 12) | 0);
 return;
}

function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 4) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function __ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + ((HEAP32[(HEAP32[$this >> 2] | 0) + -12 >> 2] | 0) + 8) | 0);
 return;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function __ZNSt3__15ctypeIcED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 11180;
 $1 = HEAP32[$this + 8 >> 2] | 0;
 if ($1) if (HEAP8[$this + 12 >> 0] | 0) __ZdaPv($1);
 return;
}

function __ZN12_GLOBAL__N_110HeapStringD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3672;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 8 | 0);
 return;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZNSt3__18numpunctIwED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 11368;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 16 | 0);
 return;
}

function __ZNSt3__18numpunctIcED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 11328;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 12 | 0);
 return;
}

function ___syscall_ret($r) {
 $r = $r | 0;
 var $$0 = 0;
 if ($r >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - $r;
  $$0 = -1;
 } else $$0 = $r;
 return $$0 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9768;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9704;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function dynCall_viiid(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = +a4;
 FUNCTION_TABLE_viiid[index & 1](a1 | 0, a2 | 0, a3 | 0, +a4);
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function b23(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 abort(23);
 return 0;
}

function __ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this + -8 | 0);
 return;
}

function __ZNSt3__16locale5facet16__on_zero_sharedEv($this) {
 $this = $this | 0;
 if ($this) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 return;
}

function _strtoull_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoull($s, $p, $base) | 0;
 return $0 | 0;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function _uselocale($l) {
 $l = $l | 0;
 var $1 = 0, $2 = 0;
 $1 = (_pthread_self() | 0) + 176 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($l) HEAP32[$1 >> 2] = $l;
 return $2 | 0;
}

function __ZNKSt3__15ctypeIwE9do_narrowEwc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c >>> 0 < 128 ? $c & 255 : $dfault) | 0;
}

function _strtoll_l($s, $p, $base, $loc) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 $loc = $loc | 0;
 var $0 = 0;
 $0 = _strtoll($s, $p, $base) | 0;
 return $0 | 0;
}

function ___cxa_is_pointer_type($type) {
 $type = $type | 0;
 var $3 = 0;
 if (!$type) $3 = 0; else $3 = (___dynamic_cast($type, 672, 720, 0) | 0) != 0;
 return $3 & 1 | 0;
}

function __ZNKSt3__15ctypeIcE9do_narrowEcc($this, $c, $dfault) {
 $this = $this | 0;
 $c = $c | 0;
 $dfault = $dfault | 0;
 return ($c << 24 >> 24 > -1 ? $c : $dfault) | 0;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 return ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
}

function __ZNSt3__16locale2id6__initEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[2788] | 0;
 HEAP32[2788] = $0 + 1;
 HEAP32[$this + 4 >> 2] = $0 + 1;
 return;
}

function _strchr($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $0 = 0;
 $0 = ___strchrnul($s, $c) | 0;
 return ((HEAP8[$0 >> 0] | 0) == ($c & 255) << 24 >> 24 ? $0 : 0) | 0;
}

function dynCall_diii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return +FUNCTION_TABLE_diii[index & 3](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNSt3__114__shared_count12__add_sharedEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9768;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9704;
 __ZNSt3__16localeD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__110__time_putD2Ev($this + 8 | 0);
 return;
}

function _strtoll($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0;
 $0 = _strtox535($s, $p, $base, 0, -2147483648) | 0;
 return $0 | 0;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 31](a1 | 0, a2 | 0, a3 | 0);
}

function b0(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(0);
 return 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 __ZdlPv($this);
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function __ZNSt3__111__stdoutbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__111__stdoutbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function _strtoull($s, $p, $base) {
 $s = $s | 0;
 $p = $p | 0;
 $base = $base | 0;
 var $0 = 0;
 $0 = _strtox535($s, $p, $base, -1, -1) | 0;
 return $0 | 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt13runtime_errorD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3908;
 __ZN12_GLOBAL__N_114__libcpp_nmstrD2Ev($this + 4 | 0);
 return;
}

function ___errno_location() {
 var $$0 = 0;
 if (!(HEAP32[1018] | 0)) $$0 = 4844; else $$0 = HEAP32[(_pthread_self() | 0) + 60 >> 2] | 0;
 return $$0 | 0;
}

function _isxdigit($c) {
 $c = $c | 0;
 var $4 = 0;
 if (($c + -48 | 0) >>> 0 < 10) $4 = 1; else $4 = (($c | 32) + -97 | 0) >>> 0 < 6;
 return $4 & 1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci($this, $0, $1) {
 $this = $this | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $this | 0;
}

function b13(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(13);
}

function __ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + -8 + 12 | 0);
 return;
}

function __ZNSt3__17codecvtIwc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__17codecvtIwc11__mbstate_tED2Ev($this);
 __ZdlPv($this);
 return;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function __ZSt17__throw_bad_allocv() {
 var $0 = 0;
 $0 = ___cxa_allocate_exception(4) | 0;
 __ZNSt9bad_allocC2Ev($0);
 ___cxa_throw($0 | 0, 608, 77);
}

function _catgets($catd, $set_id, $msg_id, $s) {
 $catd = $catd | 0;
 $set_id = $set_id | 0;
 $msg_id = $msg_id | 0;
 $s = $s | 0;
 return $s | 0;
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv($this) {
 $this = $this | 0;
 ___assert_fail(55780, 55277, 1175, 55809);
}

function __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 ___assert_fail(55248, 55277, 1164, 55371);
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}

function __ZNSt3__16localeD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__114__shared_count16__release_sharedEv(HEAP32[$this >> 2] | 0) | 0;
 return;
}

function _wctomb($s, $wc) {
 $s = $s | 0;
 $wc = $wc | 0;
 var $$0 = 0;
 if (!$s) $$0 = 0; else $$0 = _wcrtomb($s, $wc, 0) | 0;
 return $$0 | 0;
}

function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv($this) {
 $this = $this | 0;
 ___assert_fail(55392, 55415, 303, 55371);
}

function b6(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(6);
 return 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 12 | 0);
 return;
}

function b3(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 abort(3);
 return 0;
}

function __ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 4 | 0);
 return;
}

function __ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function dynCall_iid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 return FUNCTION_TABLE_iid[index & 1](a1 | 0, +a2) | 0;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _mbrlen($s, $n, $st) {
 $s = $s | 0;
 $n = $n | 0;
 $st = $st | 0;
 return _mbrtowc(0, $s, $n, ($st | 0) != 0 ? $st : 4880) | 0;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNSt3__110__stdinbufIwE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 0) | 0;
}

function __ZNSt3__110__stdinbufIcE9underflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 0) | 0;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 127](a1 | 0, a2 | 0);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __GLOBAL__sub_I_iostream_cpp() {
 __ZNSt3__18ios_base4InitC2Ev(0);
 ___cxa_atexit(185, 60758, ___dso_handle | 0) | 0;
 return;
}

function b11(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(11);
}

function __ZNSt3__18ios_base7failureD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__112system_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__stdinbufIwE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIwE9__getcharEb($this, 1) | 0;
}

function __ZNSt3__110__stdinbufIcE5uflowEv($this) {
 $this = $this | 0;
 return __ZNSt3__110__stdinbufIcE9__getcharEb($this, 1) | 0;
}

function _mbsinit($st) {
 $st = $st | 0;
 var $4 = 0;
 if (!$st) $4 = 1; else $4 = (HEAP32[$st >> 2] | 0) == 0;
 return $4 & 1 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function _do_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 return ___string_read($f, $buf, $len) | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return -1;
}

function __ZNSt3__16locale5__impD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__16locale5__impD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__16locale5__imp12make_classicEv() {
 __ZNSt3__16locale5__impC2Ej(2296, 1);
 HEAP32[2981] = 2296;
 return 11924;
}

function dynCall_vid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 FUNCTION_TABLE_vid[index & 1](a1 | 0, +a2);
}

function b16(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(16);
 return 0;
}

function __ZNSt3__19basic_iosIwNS_11char_traitsIwEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}

function __ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 return;
}

function __ZNSt3__112system_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18numpunctIwED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIwED2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__18numpunctIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18numpunctIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function ___cxa_throw__wrapper(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 ___cxa_throw(p0 | 0, p1 | 0, p2 | 0);
}

function b24(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = +p4;
 abort(24);
 return 0;
}

function __ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt13runtime_errorD0Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED2Ev($this, $vtt) {
 $this = $this | 0;
 $vtt = $vtt | 0;
 return;
}

function __ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18ios_baseD0Ev($this) {
 $this = $this | 0;
 __ZNSt3__18ios_baseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__15ctypeIcED0Ev($this) {
 $this = $this | 0;
 __ZNSt3__15ctypeIcED2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 127](a1 | 0) | 0;
}

function __ZNKSt3__18numpunctIwE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 12 >> 2] | 0;
}

function _strcpy($dest, $src) {
 $dest = $dest | 0;
 $src = $src | 0;
 ___stpcpy($dest, $src) | 0;
 return $dest | 0;
}

function __ZNKSt3__18numpunctIwE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}

function __ZNSt3__18ios_base7failureD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__112system_errorD2Ev($this);
 return;
}

function __ZNKSt3__18numpunctIcE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 9 >> 0] | 0;
}

function __ZNKSt3__18numpunctIcE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return HEAP8[$this + 8 >> 0] | 0;
}

function __ZNKSt3__15ctypeIwE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c << 24 >> 24 | 0;
}

function b1(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(1);
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[974] | 0;
 HEAP32[974] = $0 + 0;
 return $0 | 0;
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__112system_errorD2Ev($this) {
 $this = $this | 0;
 __ZNSt13runtime_errorD2Ev($this);
 return;
}

function b19(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(19);
 return 0;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function __ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 2147483647;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _pthread_cond_broadcast__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_cond_broadcast(p0 | 0) | 0;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__18messagesIwE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 return;
}

function __ZNKSt3__18messagesIcE8do_closeEi($this, $__c) {
 $this = $this | 0;
 $__c = $__c | 0;
 return;
}

function __ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNSt3__17codecvtIDsc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIDic11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__117__widen_from_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17codecvtIcc11__mbstate_tED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__116__narrow_to_utf8ILj32EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZNKSt3__15ctypeIcE8do_widenEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 return $c | 0;
}

function __ZNKSt13runtime_error4whatEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4 >> 2] | 0;
}

function __ZN12_GLOBAL__N_115HeapSuperObjectD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _pthread_mutex_unlock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_unlock(p0 | 0) | 0;
}

function _cleanup397($p) {
 $p = $p | 0;
 if (!(HEAP32[$p + 68 >> 2] | 0)) ___unlockfile($p);
 return;
}

function _cleanup392($p) {
 $p = $p | 0;
 if (!(HEAP32[$p + 68 >> 2] | 0)) ___unlockfile($p);
 return;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv($this) {
 $this = $this | 0;
 return 127;
}

function __ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZNSt3__119__iostream_categoryD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function b25(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(25);
}

function _pthread_mutex_lock__wrapper(p0) {
 p0 = p0 | 0;
 return _pthread_mutex_lock(p0 | 0) | 0;
}

function _isspace($c) {
 $c = $c | 0;
 return (($c | 0) == 32 | ($c + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__110moneypunctIwLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIwLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb1EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110moneypunctIcLb0EED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv($this) {
 $this = $this | 0;
 return 0;
}

function _isdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return ($c + -48 | 0) >>> 0 < 10 | 0;
}

function b20(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = +p3;
 abort(20);
}

function __ZNSt9bad_allocC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3884;
 return;
}

function __ZNSt8bad_castC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 3928;
 return;
}

function b17(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(17);
 return 0.0;
}

function _catopen($name, $oflag) {
 $name = $name | 0;
 $oflag = $oflag | 0;
 return -1 | 0;
}

function __ZNKSt3__119__iostream_category4nameEv($this) {
 $this = $this | 0;
 return 61403;
}

function dynCall_i(index) {
 index = index | 0;
 return FUNCTION_TABLE_i[index & 15]() | 0;
}

function __ZNSt3__16locale5facetD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__18messagesIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}

function b9(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(9);
 return 0;
}

function __ZNSt3__17collateIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__17collateIcED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZL12memory_panicv() {
 _fwrite(54553, 49, 1, HEAP32[1080] | 0) | 0;
 _abort();
}

function _strtold($s, $p) {
 $s = $s | 0;
 $p = $p | 0;
 return +(+_strtox($s, $p, 2));
}

function __ZNSt3__15ctypeIwED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _strtod($s, $p) {
 $s = $s | 0;
 $p = $p | 0;
 return +(+_strtox($s, $p, 1));
}

function _isxdigit_l($c, $l) {
 $c = $c | 0;
 $l = $l | 0;
 return _isxdigit($c) | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt8bad_castD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _copysignl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_copysign($x, $y));
}

function _scalbnl($x, $n) {
 $x = +$x;
 $n = $n | 0;
 return +(+_scalbn($x, $n));
}

function __ZN12_GLOBAL__N_110HeapEntityD2Ev($this) {
 $this = $this | 0;
 return;
}

function b21(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(21);
}

function __ZNSt3__110moneypunctIwLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIwLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb1EED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110moneypunctIcLb0EED2Ev($this) {
 $this = $this | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 7]();
}

function _frexpl($x, $e) {
 $x = +$x;
 $e = $e | 0;
 return +(+_frexp($x, $e));
}

function __ZNSt3__114error_categoryD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__114__shared_countD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 55558;
}

function __ZNKSt8bad_cast4whatEv($this) {
 $this = $this | 0;
 return 55663;
}

function _fmodl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_fmod($x, $y));
}

function __ZNSt3__16locale5facetD2Ev($this) {
 $this = $this | 0;
 return;
}

function b15(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(15);
 return 0;
}

function __ZNSt3__18messagesIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__18messagesIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIwED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__17collateIcED2Ev($this) {
 $this = $this | 0;
 return;
}

function __Znaj($size) {
 $size = $size | 0;
 return __Znwj($size) | 0;
}

function b12(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(12);
 return 0;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZdaPv($ptr) {
 $ptr = $ptr | 0;
 __ZdlPv($ptr);
 return;
}

function __ZNSt9type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9exceptionD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt8bad_castD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 _free($ptr);
 return;
}

function __ZNSt3__112__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function _freelocale($l) {
 $l = $l | 0;
 _free($l);
 return;
}

function b5(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(5);
}

function ___cxa_end_catch__wrapper() {
 ___cxa_end_catch();
}

function _catclose($catd) {
 $catd = $catd | 0;
 return 0;
}

function b2(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(2);
}

function ___cxa_rethrow__wrapper() {
 ___cxa_rethrow();
}

function b7(p0) {
 p0 = p0 | 0;
 abort(7);
 return 0;
}

function ___unlockfile($f) {
 $f = $f | 0;
 return;
}

function ___lockfile($f) {
 $f = $f | 0;
 return 0;
}

function ___ctype_toupper_loc() {
 return 4840;
}

function ___ctype_tolower_loc() {
 return 4836;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b4(p0) {
 p0 = p0 | 0;
 abort(4);
}

function ___ctype_b_loc() {
 return 4832;
}

function b18() {
 abort(18);
 return 0;
}

function _abort__wrapper() {
 _abort();
}

function b22() {
 abort(22);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiiiii = [b0,__ZNKSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb,__ZNSt3__114__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb,b0,b0,b0,b0,b0,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZN12_GLOBAL__N_16Parser14parseCommaListERNSt3__16vectorIP3ASTNS1_9allocatorIS4_EEEEN5Token4KindERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEEj,__ZN12_GLOBAL__N_16Parser20parseObjectRemainderERP3ASTRK5Tokenj,__ZN12_GLOBAL__N_111Interpreter12manifestJsonERK13LocationRangebRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN12_GLOBAL__N_111Interpreter19validateBuiltinArgsERK13LocationRangemRKNSt3__16vectorINS_5ValueENS4_9allocatorIS6_EEEENS5_INS6_4TypeENS7_ISC_EEEE];
var FUNCTION_TABLE_vid = [b2,__Z23jsonlang_unparse_numberd];
var FUNCTION_TABLE_iiiiiid = [b3,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b3];
var FUNCTION_TABLE_vi = [b4,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZThn8_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev,__ZTv0_n12_NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEED0Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZThn8_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_iostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZN3ASTD2Ev,__ZN3ASTD0Ev,__ZN15BuiltinFunctionD2Ev,__ZN15BuiltinFunctionD0Ev,__ZN5LocalD2Ev,__ZN5LocalD0Ev
,__ZN13LiteralStringD2Ev,__ZN13LiteralStringD0Ev,__ZN5ErrorD0Ev,__ZN11LiteralNullD0Ev,__ZN11ConditionalD0Ev,__ZN5UnaryD0Ev,__ZN5IndexD0Ev,__ZN6BinaryD0Ev,__ZN3VarD0Ev,__ZN4SelfD0Ev,__ZN17ObjectCompositionD0Ev,__ZN5SuperD0Ev,__ZN6ObjectD2Ev,__ZN6ObjectD0Ev,__ZN5ApplyD2Ev,__ZN5ApplyD0Ev,__ZN13LiteralNumberD0Ev,__ZN14LiteralBooleanD0Ev,__ZN6ImportD2Ev,__ZN6ImportD0Ev,__ZN9ImportstrD2Ev,__ZN9ImportstrD0Ev,__ZN5ArrayD2Ev,__ZN5ArrayD0Ev,__ZN8FunctionD2Ev,__ZN8FunctionD0Ev,__ZN12_GLOBAL__N_15Stack4dumpEv,__ZN12_GLOBAL__N_19HeapThunkD2Ev,__ZN12_GLOBAL__N_19HeapThunkD0Ev,__ZN12_GLOBAL__N_110HeapEntityD2Ev
,__ZN12_GLOBAL__N_115HeapSuperObjectD0Ev,__ZN12_GLOBAL__N_118HeapExtendedObjectD0Ev,__ZN12_GLOBAL__N_123HeapComprehensionObjectD2Ev,__ZN12_GLOBAL__N_123HeapComprehensionObjectD0Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD2Ev,__ZN12_GLOBAL__N_116HeapSimpleObjectD0Ev,__ZN12_GLOBAL__N_110HeapStringD2Ev,__ZN12_GLOBAL__N_110HeapStringD0Ev,__ZN12_GLOBAL__N_111HeapClosureD2Ev,__ZN12_GLOBAL__N_111HeapClosureD0Ev,__ZN12_GLOBAL__N_19HeapArrayD2Ev,__ZN12_GLOBAL__N_19HeapArrayD0Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__114basic_ifstreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEED0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZNSt13runtime_errorD2Ev,__ZNSt13runtime_errorD0Ev,__ZNSt8bad_castD2Ev,__ZNSt8bad_castD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev
,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__111__stdoutbufIwED0Ev,__ZNSt3__110__stdinbufIwED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__111__stdoutbufIcED0Ev,__ZNSt3__110__stdinbufIcED0Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__113basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__18ios_base7failureD2Ev,__ZNSt3__18ios_base7failureD0Ev,__ZNSt3__18ios_baseD2Ev,__ZNSt3__18ios_baseD0Ev,__ZNSt3__114error_categoryD2Ev,__ZNSt3__119__iostream_categoryD0Ev,__ZNSt3__17collateIcED2Ev,__ZNSt3__17collateIcED0Ev,__ZNSt3__16locale5facet16__on_zero_sharedEv,__ZNSt3__17collateIwED2Ev,__ZNSt3__17collateIwED0Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__110moneypunctIcLb0EED2Ev,__ZNSt3__110moneypunctIcLb0EED0Ev,__ZNSt3__110moneypunctIcLb1EED2Ev,__ZNSt3__110moneypunctIcLb1EED0Ev,__ZNSt3__110moneypunctIwLb0EED2Ev,__ZNSt3__110moneypunctIwLb0EED0Ev,__ZNSt3__110moneypunctIwLb1EED2Ev,__ZNSt3__110moneypunctIwLb1EED0Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__18messagesIcED2Ev
,__ZNSt3__18messagesIcED0Ev,__ZNSt3__18messagesIwED2Ev,__ZNSt3__18messagesIwED0Ev,__ZNSt3__16locale5__impD2Ev,__ZNSt3__16locale5__impD0Ev,__ZNSt3__15ctypeIcED2Ev,__ZNSt3__15ctypeIcED0Ev,__ZNSt3__17codecvtIwc11__mbstate_tED2Ev,__ZNSt3__17codecvtIwc11__mbstate_tED0Ev,__ZNSt3__18numpunctIcED2Ev,__ZNSt3__18numpunctIcED0Ev,__ZNSt3__18numpunctIwED2Ev,__ZNSt3__18numpunctIwED0Ev,__ZNSt3__16locale5facetD2Ev,__ZNSt3__16locale5facetD0Ev,__ZNSt3__15ctypeIwED0Ev,__ZNSt3__17codecvtIcc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__17codecvtIDic11__mbstate_tED0Ev,__ZNSt3__116__narrow_to_utf8ILj32EED0Ev,__ZNSt3__117__widen_from_utf8ILj32EED0Ev,__ZNSt3__112system_errorD2Ev,__ZNSt3__112system_errorD0Ev,__ZN11StaticErrorD2Ev,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev,__ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv,__ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv,__ZNSt3__13mapI8BinaryOpiNS_4lessIS1_EENS_9allocatorINS_4pairIKS1_iEEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE7UnaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE8BinaryOpNS_4lessIS6_EENS4_INS_4pairIKS6_S7_EEEEED2Ev
,__ZN12RuntimeErrorD2Ev,__Z24jsonlang_static_analysisP3AST,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEEC2Ev,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,_cleanup392,_cleanup397,__ZNSt3__18ios_base4InitD2Ev,_freelocale,__ZNSt3__112__do_nothingEPv,__ZNSt3__121__throw_runtime_errorEPKc,__ZNSt3__16locale2id6__initEv,__ZNSt3__117__call_once_proxyINS_5tupleIJNS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,___cxx_global_array_dtor,___cxx_global_array_dtor54,___cxx_global_array_dtor69,___cxx_global_array_dtor93,___cxx_global_array_dtor117,___cxx_global_array_dtor120,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev,_free,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
var FUNCTION_TABLE_vii = [b5,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__111__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__110__stdinbufIcE5imbueERKNS_6localeE,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNKSt3__110moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__110moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__110moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__110moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__110moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__110moneypunctIwLb1EE16do_positive_signEv
,__ZNKSt3__110moneypunctIwLb1EE16do_negative_signEv,__ZNKSt3__110moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__110moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__18messagesIcE8do_closeEi,__ZNKSt3__18messagesIwE8do_closeEi,__ZNKSt3__18numpunctIcE11do_groupingEv,__ZNKSt3__18numpunctIcE11do_truenameEv,__ZNKSt3__18numpunctIcE12do_falsenameEv,__ZNKSt3__18numpunctIwE11do_groupingEv,__ZNKSt3__18numpunctIwE11do_truenameEv,__ZNKSt3__18numpunctIwE12do_falsenameEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_,__ZNSt3__18ios_base4initEPv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE,__ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_,__ZNSt3__18ios_base5clearEj,__Z21jsonlang_builtin_declm,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK5Token,__ZL7unparsePK3AST,__Z23jsonlang_unparse_escapeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_,__ZNSt3__16vectorIPK10IdentifierNS_9allocatorIS3_EEEC2ERKS6_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_,__ZNSt3__16vectorIP3ASTNS_9allocatorIS2_EEEC2ERKS5_,__ZL6appendRNSt3__13setIPK10IdentifierNS_4lessIS3_EENS_9allocatorIS3_EEEERKS8_
,__ZN12_GLOBAL__N_111Interpreter8evaluateEPK3AST,__ZN12_GLOBAL__N_18type_strENS_5Value4TypeE,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectEb,__ZN12_GLOBAL__N_14Heap8markFromEPNS_10HeapEntityE,__ZN12_GLOBAL__N_15Stack4markERNS_4HeapE,__ZL10bop_string8BinaryOp,__ZL10uop_string7UnaryOp,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_,__ZNSt3__16vectorI10TraceFrameNS_9allocatorIS1_EEEC2ERKS4_,__ZN12_GLOBAL__N_14Heap15addIfHeapEntityEPNS_10HeapEntityERNSt3__16vectorIS2_NS3_9allocatorIS2_EEEE,_abort_message,__ZNSt3__18ios_base16__call_callbacksENS0_5eventE,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE6sentryC2ERS3_,__ZNSt13runtime_errorC2EPKc,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEEC2Ej,__ZNSt3__16locale5__imp7installINS_7collateIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7collateIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_5ctypeIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_,__ZNSt3__17codecvtIwc11__mbstate_tEC2Ej,__ZNSt3__16locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8numpunctIwEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_
,__ZNSt3__16locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIcEEEEvPT_,__ZNSt3__16locale5__imp7installINS_8messagesIwEEEEvPT_,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE6resizeEj,__ZNSt3__16vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lj28EEEE8allocateEj,__ZNSt3__118__libcpp_refstringC2EPKc,__ZNSt13runtime_errorC2ERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiiiiii = [b6,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,__ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,__ZNSt3__116__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_ii = [b7,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9underflowEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9underflowEv,__ZNKSt9bad_alloc4whatEv,__ZNKSt13runtime_error4whatEv,__ZNKSt8bad_cast4whatEv,___stdio_close,__ZNSt3__111__stdoutbufIwE4syncEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__110__stdinbufIwE9underflowEv,__ZNSt3__110__stdinbufIwE5uflowEv,__ZNSt3__111__stdoutbufIcE4syncEv,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__110__stdinbufIcE9underflowEv,__ZNSt3__110__stdinbufIcE5uflowEv,__ZNKSt3__119__iostream_category4nameEv,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIcE7__weeksEv,__ZNKSt3__120__time_get_c_storageIcE8__monthsEv,__ZNKSt3__120__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIcE3__cEv,__ZNKSt3__120__time_get_c_storageIcE3__rEv
,__ZNKSt3__120__time_get_c_storageIcE3__xEv,__ZNKSt3__120__time_get_c_storageIcE3__XEv,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__120__time_get_c_storageIwE7__weeksEv,__ZNKSt3__120__time_get_c_storageIwE8__monthsEv,__ZNKSt3__120__time_get_c_storageIwE7__am_pmEv,__ZNKSt3__120__time_get_c_storageIwE3__cEv,__ZNKSt3__120__time_get_c_storageIwE3__rEv,__ZNKSt3__120__time_get_c_storageIwE3__xEv,__ZNKSt3__120__time_get_c_storageIwE3__XEv,__ZNKSt3__110moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__110moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__110moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__110moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__17codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__18numpunctIcE16do_decimal_pointEv,__ZNKSt3__18numpunctIcE16do_thousands_sepEv,__ZNKSt3__18numpunctIwE16do_decimal_pointEv,__ZNKSt3__18numpunctIwE16do_thousands_sepEv,__ZNKSt3__17codecvtIcc11__mbstate_tE11do_encodingEv
,__ZNKSt3__17codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__17codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__17codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__17codecvtIDic11__mbstate_tE13do_max_lengthEv,__Znwj,__ZNKSt3__18ios_base6getlocEv,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv,__ZN5Token8toStringENS_4KindE,_strerror,__ZNSt3__113basic_ostreamIwNS_11char_traitsIwEEE5flushEv,_uselocale,_wcslen,_pthread_mutex_unlock__wrapper,_pthread_mutex_lock__wrapper,_pthread_cond_broadcast__wrapper,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiiiiiiiii = [b8,__ZNSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_,__ZNSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_,b8];
var FUNCTION_TABLE_iiii = [b9,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6setbufEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPci,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKci,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE6setbufEPci,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,_sn_write,___stdio_write,___stdio_seek,___stdio_read,___stdout_write,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6setbufEPwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwi,__ZNSt3__111__stdoutbufIwE6xsputnEPKwi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwi,__ZNSt3__111__stdoutbufIcE6xsputnEPKci,__ZNKSt3__114error_category10equivalentEiRKNS_15error_conditionE,__ZNKSt3__114error_category10equivalentERKNS_10error_codeEi,__ZNKSt3__17collateIcE7do_hashEPKcS3_,__ZNKSt3__17collateIwE7do_hashEPKwS3_,__ZNKSt3__18messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__18messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__15ctypeIcE10do_toupperEPcPKc,__ZNKSt3__15ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__15ctypeIcE9do_narrowEcc,__ZNKSt3__15ctypeIwE5do_isEtw,__ZNKSt3__15ctypeIwE10do_toupperEPwPKw,__ZNKSt3__15ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__15ctypeIwE9do_narrowEwc
,__ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_j,__ZL8do_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,__ZN9Allocator4makeI13LiteralStringJ13LocationRangeNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEPT_DpT0_,__ZN12_GLOBAL__N_16Parser5parseEij,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEjPKc,__ZN9Allocator4makeI13LiteralStringJ13LocationRangePKcEEEPT_DpT0_,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcj,__ZN9Allocator4makeI5ArrayJ13LocationRangeNSt3__16vectorIP3ASTNS3_9allocatorIS6_EEEEEEEPT_DpT0_,__ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE15__insert_uniqueIRKNS_4pairIKS7_S7_EEEENS_15__tree_iteratorIS8_PNS_11__tree_nodeIS8_PvEEiEENS_21__tree_const_iteratorIS8_SP_iEEOT_,__ZN12_GLOBAL__N_111Interpreter12importStringERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__Z14jsonlang_parseP9AllocatorRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignINS_19istreambuf_iteratorIcS2_EEEENS_9enable_ifIXaasr19__is_input_iteratorIT_EE5valuentsr21__is_forward_iteratorISA_EE5valueERS5_E4typeESA_SA_,_do_read,_newlocale,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueERS5_E4typeES9_S9_,_wcrtomb,_mbtowc,_mbrlen,_vasprintf,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiiiiiiiiiiiiii = [b10,__ZNSt3__111__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i,__ZNSt3__111__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i,b10];
var FUNCTION_TABLE_viiiiii = [b11,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__18messagesIcE6do_getEiiiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__18messagesIwE6do_getEiiiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZN12_GLOBAL__N_15Stack7newCallERK13LocationRangePNS_10HeapEntityEPNS_10HeapObjectEjRKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS8_4lessISC_EENS8_9allocatorINS8_4pairIKSC_SE_EEEEEE,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_23HeapComprehensionObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEEP3ASTS7_SH_EEENS_5ValueEDpT0_,b11,b11,b11,b11];
var FUNCTION_TABLE_iid = [b12,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd];
var FUNCTION_TABLE_viiiiiii = [b13,__ZN12_GLOBAL__N_111HeapClosureC2ERKNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEPNS_10HeapObjectEjRKNS1_6vectorIS5_NSA_IS5_EEEEPK3ASTm,__ZNSt3__19__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE,__ZNSt3__19__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE,__ZNSt3__19__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE,b13,b13];
var FUNCTION_TABLE_viiiiiiiiii = [b14,__ZNSt3__111__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri,__ZNSt3__111__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri,__ZNSt3__111__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri,__ZNSt3__111__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri,b14,b14,b14];
var FUNCTION_TABLE_iii = [b15,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE9pbackfailEi,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE8overflowEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__111__stdoutbufIwE8overflowEj,__ZNSt3__110__stdinbufIwE9pbackfailEj,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__111__stdoutbufIcE8overflowEi,__ZNSt3__110__stdinbufIcE9pbackfailEi,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNKSt3__15ctypeIcE10do_toupperEc,__ZNKSt3__15ctypeIcE10do_tolowerEc,__ZNKSt3__15ctypeIcE8do_widenEc,__ZNKSt3__15ctypeIwE10do_toupperEw,__ZNKSt3__15ctypeIwE10do_tolowerEw,__ZNKSt3__15ctypeIwE8do_widenEc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi,__ZNKSt3__16locale9use_facetERNS0_2idE,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPK10IdentifierNS_4lessIS6_EENS4_INS_4pairIKS6_S9_EEEEEixERSD_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc,__ZN12_GLOBAL__N_16Parser13parseTerminalEj
,__ZNSt3__13mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_NS_4lessIS6_EENS4_INS_4pairIKS6_S6_EEEEEixERSA_,__ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl,__ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierDniDnEEEPT_DpT0_,__ZNSt3__13mapINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EEPKS7_NS_4lessIS8_EENS5_INS1_IKS8_SA_EEEEEixERSD_,__ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK13LocationRange,__ZNKSt3__16locale9has_facetERNS0_2idE,_isxdigit_l,_isdigit_l,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_iiiiii = [b16,__ZNKSt3__17collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__17collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__15ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__17codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__15ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__17codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZNKSt3__17codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__17codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_j,__ZN9Allocator4makeI5ApplyJ13LocationRangeP3ASTNSt3__16vectorIS4_NS5_9allocatorIS4_EEEEbEEEPT_DpT0_,__ZNSt3__14listIN6Object5FieldENS_9allocatorIS2_EEE6insertINS_21__list_const_iteratorIS2_PvEEEENS_15__list_iteratorIS2_S8_EES9_T_SC_PNS_9enable_ifIXsr19__is_input_iteratorISC_EE5valueEvE4typeE,__ZN12_GLOBAL__N_111Interpreter8makeHeapINS_9HeapThunkEJPK10IdentifierPNS_10HeapObjectEjPK3ASTEEEPT_DpT0_,__ZL29jsonlang_evaluate_snippet_auxP10JsonlangVmPKcS2_Pib,__ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEjjPKcj,_wcsnrtombs,_mbsnrtowcs,b16
,b16,b16,b16];
var FUNCTION_TABLE_diii = [b17,__ZNSt3__115__num_get_floatIfEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIdEET_PKcS3_Rj,__ZNSt3__115__num_get_floatIeEET_PKcS3_Rj];
var FUNCTION_TABLE_i = [b18,___cxa_get_globals_fast,__ZNSt3__16__clocEv,__ZNSt3__16locale5__imp12make_classicEv,__ZNSt3__16locale5__imp11make_globalEv,__ZNSt3__16locale8__globalEv,___ctype_b_loc,___ctype_toupper_loc,___ctype_tolower_loc,b18,b18,b18,b18,b18,b18,b18];
var FUNCTION_TABLE_iiiii = [b19,__ZNKSt3__15ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__15ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__15ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__15ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__15ctypeIwE8do_widenEPKcS3_Pw,__ZN9Allocator4makeI8FunctionJ13LocationRangeNSt3__16vectorIPK10IdentifierNS3_9allocatorIS7_EEEEP3ASTEEEPT_DpT0_,__ZN12_GLOBAL__N_111Interpreter11objectIndexERK13LocationRangePNS_10HeapObjectEPK10Identifier,__ZN12_GLOBAL__N_111Interpreter8equalityERK13LocationRangeRKNS_5ValueES6_,__ZL23default_import_callbackPvPKcS1_Pi,__ZNSt3__110__sscanf_lEPKcP15__locale_structS1_z,__ZNSt3__112__asprintf_lEPPcP15__locale_structPKcz,_mbsrtowcs,_catgets,_mbrtowc,__ZNSt3__125__num_get_signed_integralIlEET_PKcS3_Rji,__ZNSt3__125__num_get_signed_integralIxEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralItEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIjEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralImEET_PKcS3_Rji,__ZNSt3__127__num_get_unsigned_integralIyEET_PKcS3_Rji,b19,b19,b19,b19,b19,b19,b19,b19
,b19,b19,b19];
var FUNCTION_TABLE_viiid = [b20,__ZN12_GLOBAL__N_111Interpreter15makeDoubleCheckERK13LocationRanged];
var FUNCTION_TABLE_viii = [b21,__ZNKSt3__114error_category23default_error_conditionEi,__ZNKSt3__119__iostream_category7messageEi,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcj,___cxa_throw__wrapper,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEjc,__ZN12_GLOBAL__N_16Parser9parseBindERNSt3__13mapIPK10IdentifierP3ASTNS1_4lessIS5_EENS1_9allocatorINS1_4pairIKS5_S7_EEEEEEj,__ZN12_GLOBAL__N_16Parser10unexpectedERK5TokenRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN6ObjectC2ERK13LocationRangeRKNSt3__14listINS_5FieldENS3_9allocatorIS5_EEEE,__ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE15__insert_uniqueERKS6_,__ZN12_GLOBAL__N_111Interpreter14manifestStringERK13LocationRange,__ZN12_GLOBAL__N_111Interpreter9makeArrayERKNSt3__16vectorIPNS_9HeapThunkENS1_9allocatorIS4_EEEE,__ZN12_GLOBAL__N_15Stack8newFrameIJNS_9FrameKindEPK3ASTEEEvDpT_,__ZN12_GLOBAL__N_111Interpreter10makeStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE,__ZNSt3__18ios_base7failureC2EPKcRKNS_10error_codeE,__ZNSt3__119__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__119__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_,__ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwj,__ZNSt3__112system_error6__initERKNS_10error_codeENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21];
var FUNCTION_TABLE_v = [b22,__ZL25default_terminate_handlerv,___cxa_end_catch__wrapper,_abort__wrapper,___cxa_rethrow__wrapper,__ZL12memory_panicv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,__ZSt17__throw_bad_allocv];
var FUNCTION_TABLE_iiiiiiiii = [b23,__ZNKSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__17codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__17codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,b23,b23,b23,b23,b23];
var FUNCTION_TABLE_iiiiid = [b24,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b24,b24,b24];
var FUNCTION_TABLE_viiii = [b25,__ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__113basic_filebufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNSt3__115basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__17collateIcE12do_transformEPKcS3_,__ZNKSt3__17collateIwE12do_transformEPKwS3_,__Z10lex_numberRPKcRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERK8Location,__ZN5LocalC2ERK13LocationRangeRKNSt3__13mapIPK10IdentifierP3ASTNS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEES9_,__ZN12_GLOBAL__N_16Parser9popExpectEN5Token4KindEPKc,__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcjj,__ZN12_GLOBAL__N_16Parser19parseIdentifierListERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj,__ZL15static_analysisP3ASTbRKNSt3__13setIPK10IdentifierNS1_4lessIS5_EENS1_9allocatorIS5_EEEE,__ZN12_GLOBAL__N_15Stack9makeErrorERK13LocationRangeRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE,__ZN12_GLOBAL__N_111Interpreter10makeObjectINS_16HeapSimpleObjectEJNSt3__13mapIPK10IdentifierPNS_9HeapThunkENS3_4lessIS7_EENS3_9allocatorINS3_4pairIKS7_S9_EEEEEENS4_IS7_NS2_5FieldESB_NSC_INSD_ISE_SI_EEEEEEEEENS_5ValueEDpT0_,__ZN12_GLOBAL__N_111Interpreter12objectFieldsEPKNS_10HeapObjectERjjb,b25,b25,b25,b25,b25,b25,b25,b25,b25,b25
,b25,b25,b25];

  return { ___cxa_can_catch: ___cxa_can_catch, _free: _free, ___cxa_is_pointer_type: ___cxa_is_pointer_type, _i64Add: _i64Add, _memmove: _memmove, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _jsonlang_realloc: _jsonlang_realloc, _jsonlang_destroy: _jsonlang_destroy, _jsonlang_evaluate_snippet: _jsonlang_evaluate_snippet, _bitshift64Lshr: _bitshift64Lshr, _jsonlang_make: _jsonlang_make, _fflush: _fflush, ___errno_location: ___errno_location, _bitshift64Shl: _bitshift64Shl, __GLOBAL__sub_I_parser_cpp: __GLOBAL__sub_I_parser_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_vid: dynCall_vid, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_ii: dynCall_ii, dynCall_iiiiiiiiiiii: dynCall_iiiiiiiiiiii, dynCall_iiii: dynCall_iiii, dynCall_viiiiiiiiiiiiiii: dynCall_viiiiiiiiiiiiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iid: dynCall_iid, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiiiiiiii: dynCall_viiiiiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_diii: dynCall_diii, dynCall_i: dynCall_i, dynCall_iiiii: dynCall_iiiii, dynCall_viiid: dynCall_viiid, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var __GLOBAL__sub_I_parser_cpp = Module["__GLOBAL__sub_I_parser_cpp"] = asm["__GLOBAL__sub_I_parser_cpp"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _jsonlang_destroy = Module["_jsonlang_destroy"] = asm["_jsonlang_destroy"];
var _jsonlang_evaluate_snippet = Module["_jsonlang_evaluate_snippet"] = asm["_jsonlang_evaluate_snippet"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var _jsonlang_realloc = Module["_jsonlang_realloc"] = asm["_jsonlang_realloc"];
var _jsonlang_make = Module["_jsonlang_make"] = asm["_jsonlang_make"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiiiiiiiiiii = Module["dynCall_iiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiiiiiiiiiiii = Module["dynCall_viiiiiiiiiiiiiii"] = asm["dynCall_viiiiiiiiiiiiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iid = Module["dynCall_iid"] = asm["dynCall_iid"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);

  initialStackTop = Runtime.stackSave();

  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      Runtime.stackRestore(initialStackTop);
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    // Work around a node.js bug where stdout buffer is not flushed at process exit:
    // Instead of process.exit() directly, wait for stdout flush event.
    // See https://github.com/joyent/node/issues/1669 and https://github.com/kripken/emscripten/issues/2582
    // Workaround is based on https://github.com/RReverser/acorn/commit/50ab143cecc9ed71a2d66f78b4aec3bb2e9844f6
    process['stdout']['once']('drain', function () {
      process['exit'](status);
    });
    console.log(' '); // Make sure to print something to force the drain event to occur, in case the stdout buffer was empty.
    // Work around another node bug where sometimes 'drain' is never fired - make another effort
    // to emit the exit status, after a significant delay (if node hasn't fired drain by then, give up)
    setTimeout(function() {
      process['exit'](status);
    }, 500);
  } else
  if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






